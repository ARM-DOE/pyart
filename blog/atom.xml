<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mgrover1.github.io/pyart/</id>
  <title>PyART Blog</title>
  <updated>2022-09-26T15:19:49.544654+00:00</updated>
  <link href="mgrover1.github.io/pyart/"/>
  <link href="mgrover1.github.io/pyart/blog/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.29">ABlog</generator>
  <entry>
    <id>mgrover1.github.io/pyart/blog_posts/2022/test.html</id>
    <title>New Docs</title>
    <updated>2022-03-11T00:00:00+00:00</updated>
    <author>
      <name>Max Grover</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;Hello All!&lt;/p&gt;
&lt;p&gt;Welcome to our new documentation page! This is a &lt;strong&gt;new section&lt;/strong&gt; within the docs meant for:&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="mgrover1.github.io/pyart/blog_posts/2022/test.html" rel="alternate"/>
    <summary>Hello All!Welcome to our new documentation page! This is a new section within the docs meant for:</summary>
    <category term="annoucement" label="annoucement"/>
    <published>2022-03-11T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>mgrover1.github.io/pyart/blog_posts/2022/ka-band-pyart-xarray-hvplot.html</id>
    <title>Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot</title>
    <updated>2022-03-21T00:00:00+00:00</updated>
    <author>
      <name>Max Grover</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;This notebook will walk through how to utilize existing packages in the Python ecosystem (&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;PyART&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Xarray&lt;/span&gt;&lt;/code&gt;, and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;hvPlot&lt;/span&gt;&lt;/code&gt;) to visualize data from a vertically pointing Ka-band radar.&lt;/p&gt;
&lt;p&gt;By the end of this notebook, you will learn how to create the following visualization:
&lt;img alt="interactive-kazr-viz" src="_images/interactive-kazr-viz.gif" /&gt;&lt;/p&gt;
&lt;img alt="interactive-kazr-viz" src="_images/interactive-kazr-viz.gif" /&gt;
&lt;/div&gt;
</content>
    <link href="mgrover1.github.io/pyart/blog_posts/2022/ka-band-pyart-xarray-hvplot.html" rel="alternate"/>
    <summary>This notebook will walk through how to utilize existing packages in the Python ecosystem (PyART, Xarray, and hvPlot) to visualize data from a vertically pointing Ka-band radar.By the end of this notebook, you will learn how to create the following visualization:
interactive-kazr-vizinteractive-kazr-viz</summary>
    <category term="SAIL" label="SAIL"/>
    <category term="interactive" label="interactive"/>
    <category term="ka-band" label="ka-band"/>
    <category term="vertical-radar" label="vertical-radar"/>
    <category term="visualization" label="visualization"/>
    <category term="xarray" label="xarray"/>
    <published>2022-03-21T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>mgrover1.github.io/pyart/blog_posts/2022/plot-nexrad-level3.html</id>
    <title>Fixing Weird Patterns When Plotting NEXRAD Level 3 Data</title>
    <updated>2022-04-12T00:00:00+00:00</updated>
    <author>
      <name>Max Grover</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;The motivation here comes from a thread on Twitter, indicating an issue when plotting NEXRAD Level 3 radial velocity (&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;NOU&lt;/span&gt;&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Here is the radar image, plotted by David (&lt;a class="reference external" href="https://twitter.com/dryglick"&gt;&amp;#64;dryglick&lt;/a&gt;):&lt;/p&gt;
&lt;img alt="drawing" src="_images/nexrad-plotting-issue.jpeg" style="width: 400px;" /&gt;
&lt;/div&gt;
</content>
    <link href="mgrover1.github.io/pyart/blog_posts/2022/plot-nexrad-level3.html" rel="alternate"/>
    <summary>The motivation here comes from a thread on Twitter, indicating an issue when plotting NEXRAD Level 3 radial velocity (NOU).Here is the radar image, plotted by David (@dryglick):drawing</summary>
    <category term="NEXRAD" label="NEXRAD"/>
    <category term="debug" label="debug"/>
    <category term="matplotlib" label="matplotlib"/>
    <category term="visualization" label="visualization"/>
    <published>2022-04-12T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>mgrover1.github.io/pyart/blog_posts/2022/first_pullrequest.html</id>
    <title>Active Py-ART Development - Submitting a Pull Request (PR)</title>
    <updated>2022-04-26T00:00:00+00:00</updated>
    <author>
      <name>Joe Oâ€™Brien</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;The motivation for this blog comes from wanting to change the colorscheme within the default Py-ART documentation images to a more (&lt;a class="reference external" href="https://ntrs.nasa.gov/api/citations/20180004634/downloads/20180004634.pdf"&gt;color vision deficiency friendly color scheme&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Here are the images we are working with:&lt;/p&gt;
&lt;img alt="drawing" src="_images/PyART_Docs_Original_PPI_image.png" style="width: 400px;" /&gt;
&lt;/div&gt;
</content>
    <link href="mgrover1.github.io/pyart/blog_posts/2022/first_pullrequest.html" rel="alternate"/>
    <summary>The motivation for this blog comes from wanting to change the colorscheme within the default Py-ART documentation images to a more (color vision deficiency friendly color scheme).Here are the images we are working with:drawing</summary>
    <published>2022-04-26T00:00:00+00:00</published>
  </entry>
</feed>
