
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/io/read_older_nexrad_data_aws.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_io_read_older_nexrad_data_aws.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_io_read_older_nexrad_data_aws.py:


==================================================================
Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues
==================================================================

.. GENERATED FROM PYTHON SOURCE LINES 6-12

.. code-block:: default

    print(__doc__)


    # Author: Zachary Sherman (zsherman@anl.gov)
    # License: BSD 3 clause


.. GENERATED FROM PYTHON SOURCE LINES 13-14

Import our required packages.

.. GENERATED FROM PYTHON SOURCE LINES 14-20

.. code-block:: default


    import cartopy.crs as ccrs
    import matplotlib.pyplot as plt

    import pyart


.. GENERATED FROM PYTHON SOURCE LINES 21-36

Read older NEXRAD Level 2 Data
------------------------------

Older NEXRAD files prior to 2008, have the tendency to not contain some of
the required metadata for Py-ART's NEXRAD reader. This usually results in
missing latitude and longitude data, so after reading with Py-ART, both
coordinates have a value of 0. This example, we will show how to properly
read in an older NEXRAD file.

First we want to get an older file from amazon web service:

   ``s3://noaa-nexrad-level2/year/month/date/radarsite/{radarsite}{year}{month}{date}_{hour}{minute}{second}.gz``

Where in our case, we are using a sample data file from Handford, CA (KHNX)
on July 24, 2006, at 0203:38 UTC. This means our path would look like this:

.. GENERATED FROM PYTHON SOURCE LINES 36-41

.. code-block:: default


    aws_nexrad_level2_file = "s3://noaa-nexrad-level2/2006/07/24/KHNX/KHNX20060724_020338.gz"

    # Note: Older files do not contain the 'V06' but instead '.gz' in the AWS path.


.. GENERATED FROM PYTHON SOURCE LINES 42-43

We can use the **pyart.io.read_nexrad_archive** module to access our data, passing in the filepath.

.. GENERATED FROM PYTHON SOURCE LINES 43-46

.. code-block:: default


    radar = pyart.io.read_nexrad_archive(aws_nexrad_level2_file)


.. GENERATED FROM PYTHON SOURCE LINES 47-48

Now let us take a look at the radar latitude and longitude data.

.. GENERATED FROM PYTHON SOURCE LINES 48-51

.. code-block:: default

    print(radar.latitude['data'])
    print(radar.longitude['data'])


.. GENERATED FROM PYTHON SOURCE LINES 52-57

This is clearly not correct! The problem is the reader could not find the
metadata (message 31) for the coordinates.

Lucky for us, we can provide the station in Py-ART's NEXRAD reader, which will
pull the coordinate information from a dictionary found within Py-ART.

.. GENERATED FROM PYTHON SOURCE LINES 57-60

.. code-block:: default


    radar = pyart.io.read_nexrad_archive(aws_nexrad_level2_file, station='KHNX')


.. GENERATED FROM PYTHON SOURCE LINES 61-62

Again, let us take a look at the radar latitude and longitude data.

.. GENERATED FROM PYTHON SOURCE LINES 62-67

.. code-block:: default

    print(radar.latitude['data'])
    print(radar.longitude['data'])

    # Everything now looks correct as this is in Handford CA!


.. GENERATED FROM PYTHON SOURCE LINES 68-69

We can create a plot as well utilizing Cartopy to see how it looks.

.. GENERATED FROM PYTHON SOURCE LINES 69-78

.. code-block:: default

    display = pyart.graph.RadarMapDisplay(radar)

    # Setting projection and ploting the first tilt.
    projection = ccrs.LambertConformal(central_latitude=radar.latitude['data'][0],
                                       central_longitude=radar.longitude['data'][0])

    fig = plt.figure(figsize=(6,6))
    display.plot_ppi_map('reflectivity', 0, vmin=-20, vmax=54,
                         projection=projection, resolution='10m')


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_examples_io_read_older_nexrad_data_aws.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: read_older_nexrad_data_aws.py <read_older_nexrad_data_aws.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: read_older_nexrad_data_aws.ipynb <read_older_nexrad_data_aws.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
