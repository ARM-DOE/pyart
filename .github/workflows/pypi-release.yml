name: Build distribution
on:
  release:
    types:
      - published
      
  workflow_dispatch: # allows you to trigger the workflow run manually

jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    if: github.repository == 'ARM-DOE/pyart'
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
       # Install dependencies
      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          environment-file: continuous_integration/environment-ci.yml
          activate-environment: pyart-dev
          auto-activate-base: false
          mamba-version: '*'
          use-mamba: true
          miniforge-variant: Mambaforge

      - name: Set TRMM RSL path
        run: |
          mamba install -c conda-forge trmm_rsl
          export RSL_PATH=${{ env.CONDA_PKGS_DIR }}/trmm_rsl-1.49-3 

      - name: Install pip dependencies
        env:
          RSL_PATH: ${{ env.CONDA_PKGS_DIR }}/trmm_rsl-1.49-3 
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build manylinux Python wheels
        uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2014_x86_64
        env:
          RSL_PATH: ${{ env.CONDA_PKGS_DIR }}/trmm_rsl-1.49-3 
        with:
          python-versions: 'cp39-cp39'
          build-requirements: 'setuptools setuptools_scm>=6.2 wheel cython oldest-supported-numpy'
          
      - name: Check built artifacts
        env:
          RSL_PATH: ${{ env.CONDA_PKGS_DIR }}/trmm_rsl-1.49-3 
        run: |
          twine check dist/*-manylinux*.whl
          pwd
          if [ -f dist/arm-pyart-0.0.0.tar.gz ]; then
            echo "❌ INVALID VERSION NUMBER"
            exit 1
          else
            echo "✅ Looks good"
          fi
      - uses: actions/upload-artifact@v2
        with:
          name: releases
          path: dist

  test-built-dist:
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.9
      - uses: actions/download-artifact@v2
        with:
          name: releases
          path: dist
      - name: List contents of built dist
        run: |
          ls -ltrh
          ls -ltrh dist
      - name: Verify the built dist/wheel is valid
        run: |
          python -m pip install --upgrade pip
          python -m pip install dist/*-manylinux*.whl
          python -c "import pyart; print(pyart.__version__)"
