Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_above_toa", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_last_gates", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calc_cloud_mask", "API/generated/pyart.correct.calc_noise_floor", "API/generated/pyart.correct.calc_zdr_offset", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.cloud_threshold", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.range_correction", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_above_toa", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_last_gates", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_maxcappi", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.graph.plot_maxcappi", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.create_cfad", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_rhi_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/2024/animated-gifs-with-pyart", "blog_posts/2024/epcape-blog-post", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_cloud_mask", "examples/correct/plot_dealias", "examples/correct/plot_zdr_check", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_grid_single_sweep_ppi", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_corner_reflector", "examples/plotting/plot_cross_section", "examples/plotting/plot_max_cappi", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_cfad", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_hydrometeor_class_x_band", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/pyart_2_0", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_above_toa.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_last_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calc_cloud_mask.rst", "API/generated/pyart.correct.calc_noise_floor.rst", "API/generated/pyart.correct.calc_zdr_offset.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.cloud_threshold.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.range_correction.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_above_toa.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_last_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_maxcappi.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.graph.plot_maxcappi.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.create_cfad.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_rhi_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/2024/animated-gifs-with-pyart.ipynb", "blog_posts/2024/epcape-blog-post.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_cloud_mask.rst", "examples/correct/plot_dealias.rst", "examples/correct/plot_zdr_check.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_grid_single_sweep_ppi.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_corner_reflector.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_max_cappi.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_cfad.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_hydrometeor_class_x_band.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/pyart_2_0.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_above_toa", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_last_gates", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calc_cloud_mask", "pyart.correct.calc_noise_floor", "pyart.correct.calc_zdr_offset", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.cloud_threshold", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.range_correction", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_above_toa", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_last_gates", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplay.plot_maxcappi", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.graph.plot_maxcappi", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vp", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.create_cfad", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_rhi_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.compute_directional_stats", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART", "Investigating ARM Scanning Cloud Radar Data from EPCAPE", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Calculating and Plotting a Cloud Mask", "Dealias doppler velocities using the Region Based Algorithm", "ZDR Bias Calculation", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single PPI sweep to a Cartesian grid using 2D weighting", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Corner Reflector", "Plot a Cross Section from a Grid", "Plot Max-CAPPI", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Creating a CFAD diagram", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Hydrometeor Classification with Custom Frequency Settings", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Py-ART 2.0", "Setting up an Environment"], "terms": {"stream": [0, 62, 376, 501], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 208, 209, 210, 211, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 278, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 340, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 396, 404, 407, 408, 414, 417, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 482, 484, 487, 495, 496, 513, 582, 583, 594, 603, 605, 613, 615, 617, 618, 619, 621, 622, 648, 657, 668, 669, 688, 691], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 222, 224, 225, 226, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 324, 325, 326, 328, 329, 336, 357, 358, 359, 361, 362, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 397, 402, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 613, 614, 615, 617, 621, 622, 624, 627, 628, 629, 630, 632, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 680, 682, 683, 684, 686, 687, 688, 691, 694], "print": [0, 62, 161, 173, 174, 243, 260, 385, 461, 501, 611, 613, 614, 618, 619, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 668, 669, 671, 683, 687, 688], "out": [0, 62, 160, 170, 174, 208, 211, 387, 388, 389, 390, 391, 433, 456, 501, 613, 614, 615, 617, 618, 619, 621, 622, 628, 640, 641, 646, 647, 658, 667, 670, 680, 686, 690, 691, 692], "version": [0, 12, 31, 212, 419, 460, 472, 574, 611, 612, 620, 621, 622, 624, 680, 688, 690, 691, 693, 694], "statu": [0, 612, 622, 691], "inform": [0, 24, 31, 45, 62, 74, 143, 155, 161, 167, 173, 174, 193, 205, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 376, 377, 385, 388, 460, 461, 467, 472, 484, 501, 513, 611, 615, 619, 620, 621, 622, 625, 635, 658, 671, 680, 691], "debug": [0, 161, 167, 173, 174, 243, 260, 385, 461, 621], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 122, 124, 125, 133, 138, 143, 144, 145, 158, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 174, 183, 188, 193, 194, 195, 208, 209, 210, 211, 226, 252, 287, 303, 316, 328, 336, 349, 361, 369, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 404, 406, 414, 417, 419, 425, 426, 427, 428, 432, 433, 435, 438, 439, 441, 442, 443, 444, 445, 446, 455, 456, 460, 461, 462, 463, 467, 469, 472, 474, 484, 486, 487, 490, 491, 493, 495, 496, 497, 513, 566, 579, 580, 589, 590, 594, 597, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 634, 635, 638, 639, 640, 644, 645, 646, 647, 648, 649, 652, 658, 665, 666, 668, 669, 671, 676, 680, 682, 683, 684, 686, 687, 688, 690, 691, 693, 694], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 161, 162, 163, 167, 168, 169, 172, 173, 174, 208, 209, 210, 211, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 431, 445, 455, 460, 461, 462, 463, 464, 467, 468, 471, 481, 484, 501, 513, 559, 603, 611, 612, 614, 615, 617, 619, 621, 624, 627, 628, 631, 632, 634, 635, 636, 639, 640, 642, 643, 644, 647, 649, 651, 654, 660, 661, 662, 663, 667, 668, 669, 670, 672, 673, 674, 677, 678, 679, 680, 681, 687, 688, 689, 690, 694], "can": [0, 12, 16, 29, 45, 54, 57, 74, 122, 124, 125, 128, 143, 155, 162, 163, 167, 170, 172, 178, 193, 205, 208, 209, 210, 211, 226, 287, 316, 349, 372, 379, 380, 382, 385, 389, 390, 391, 427, 428, 435, 438, 439, 441, 442, 443, 446, 455, 460, 461, 462, 463, 465, 470, 484, 493, 496, 513, 599, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 624, 628, 634, 635, 638, 644, 665, 666, 668, 669, 671, 676, 682, 683, 684, 686, 687, 688, 690, 691, 693, 694], "run": [0, 239, 445, 455, 471, 589, 612, 614, 618, 621, 622, 623, 624, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 680, 690, 691, 694], "script": [0, 29, 619, 621, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 121, 123, 126, 128, 133, 135, 143, 144, 150, 155, 160, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 177, 178, 183, 185, 193, 194, 200, 205, 208, 209, 210, 211, 213, 227, 228, 229, 234, 237, 238, 239, 240, 243, 251, 252, 254, 256, 258, 260, 266, 267, 269, 271, 273, 274, 288, 289, 290, 295, 298, 299, 300, 303, 317, 318, 319, 325, 327, 328, 331, 332, 333, 336, 350, 351, 352, 358, 360, 361, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 402, 404, 407, 414, 416, 419, 421, 422, 423, 427, 428, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 472, 475, 480, 484, 486, 489, 493, 494, 495, 496, 513, 566, 579, 580, 582, 583, 589, 590, 591, 592, 593, 594, 595, 596, 597, 603, 612, 614, 615, 617, 621, 622, 624, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 651, 654, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 682, 686, 687, 688, 689, 691, 693, 694], "directori": [0, 29, 370, 482, 609, 611, 612, 618, 619, 620, 621, 622, 634, 690, 691], "report": [0, 1, 303, 336, 384, 470, 617, 621, 680], "dependeci": 0, "befor": [0, 31, 56, 167, 171, 174, 417, 435, 438, 439, 441, 443, 445, 455, 469, 472, 495, 613, 614, 615, 622, 638, 668, 680, 684, 688, 691], "build": [0, 122, 124, 125, 128, 133, 135, 143, 150, 155, 178, 183, 185, 193, 200, 205, 391, 613, 617, 621, 622, 624, 680, 691, 692], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 122, 123, 124, 125, 126, 128, 138, 143, 155, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 178, 188, 193, 205, 208, 209, 210, 211, 213, 215, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 258, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 307, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 340, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 363, 364, 365, 366, 368, 369, 370, 371, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 393, 417, 424, 425, 426, 427, 428, 430, 431, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 484, 486, 493, 495, 496, 513, 566, 574, 579, 580, 581, 582, 583, 589, 590, 597, 599, 603, 605, 606, 607, 608, 612, 616, 617, 620, 621, 622, 623, 624, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 642, 643, 644, 646, 647, 649, 652, 653, 655, 656, 657, 658, 659, 663, 665, 666, 668, 669, 671, 675, 679, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 693, 694], "python": [0, 29, 389, 611, 613, 614, 615, 617, 618, 619, 620, 621, 624, 627, 628, 629, 630, 632, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 682, 683, 684, 686, 687, 688, 690, 694], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 122, 124, 125, 128, 158, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 208, 209, 210, 211, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 303, 317, 319, 327, 328, 332, 333, 336, 350, 352, 360, 361, 365, 366, 377, 378, 379, 380, 384, 386, 389, 416, 431, 432, 444, 445, 455, 458, 459, 460, 461, 462, 463, 464, 467, 468, 472, 484, 513, 564, 574, 580, 592, 593, 603, 609, 614, 615, 617, 620, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 679, 681, 682, 683, 684, 686, 689, 692, 694], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 183, 185, 193, 200, 205, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 481, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 501, 513, 516, 558, 559, 560, 561, 562, 563, 564, 575, 576, 577, 578, 579, 580, 581, 582, 583, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 607, 608, 611, 613, 614, 619, 621, 622, 661, 668, 669, 671, 683, 684, 686, 688, 690, 691], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 122, 123, 125, 126, 168, 169, 370, 372, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 398, 399, 409, 410, 433, 501, 569, 570, 571, 572, 573, 575, 576, 577, 578, 590, 595, 613, 614, 615, 618, 619, 620, 621, 622, 634, 635, 638, 665, 680, 682, 684, 686, 691], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 128, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 208, 209, 210, 211, 213, 228, 243, 251, 254, 260, 267, 274, 289, 303, 318, 328, 336, 351, 370, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 398, 399, 402, 405, 409, 410, 415, 417, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 465, 466, 468, 469, 470, 471, 472, 473, 480, 481, 485, 486, 487, 489, 490, 491, 493, 501, 510, 538, 556, 560, 561, 562, 563, 566, 580, 589, 590, 592, 593, 594, 597, 598, 602, 605, 607, 608, 611, 612, 614, 615, 617, 618, 621, 622, 628, 634, 638, 645, 647, 648, 649, 653, 654, 655, 656, 657, 658, 659, 660, 661, 666, 668, 669, 670, 671, 680, 681, 682, 686, 687, 691], "sy": [0, 370, 647], "stdout": [0, 62, 501], "descript": [1, 16, 18, 30, 127, 176, 177, 212, 371, 392, 416, 429, 471, 574, 603, 615, 622, 624, 665, 680, 691], "addit": [1, 2, 7, 8, 12, 14, 19, 167, 168, 169, 171, 226, 227, 234, 238, 239, 240, 252, 254, 255, 256, 257, 258, 269, 270, 271, 272, 273, 287, 288, 295, 299, 300, 316, 317, 324, 325, 326, 327, 328, 329, 332, 333, 349, 350, 357, 358, 359, 360, 361, 362, 365, 366, 369, 370, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 417, 424, 425, 426, 428, 445, 455, 594, 611, 613, 614, 618, 621, 624, 632, 634, 664, 668, 669, 680], "class": [1, 18, 19, 30, 31, 41, 45, 74, 127, 128, 177, 178, 212, 213, 243, 254, 260, 274, 303, 328, 336, 392, 393, 406, 416, 417, 418, 420, 427, 460, 471, 472, 482, 484, 513, 609, 613, 614, 615, 621, 622, 680, 686, 687, 691], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 127, 158, 160, 163, 171, 172, 177, 208, 209, 210, 211, 212, 226, 227, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 287, 288, 295, 299, 300, 303, 316, 317, 327, 332, 333, 336, 349, 350, 360, 365, 366, 369, 370, 371, 373, 376, 379, 380, 386, 389, 416, 417, 421, 422, 423, 425, 426, 427, 428, 429, 433, 439, 444, 445, 446, 455, 460, 461, 463, 469, 471, 495, 574, 580, 593, 594, 597, 602, 603, 608, 609, 614, 615, 618, 619, 621, 622, 628, 644, 665, 666, 668, 669, 671, 676, 680, 684, 686, 688, 690, 691, 693], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 128, 144, 145, 178, 194, 195, 227, 238, 288, 299, 317, 332, 350, 365, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 611, 617, 621, 627, 628, 629, 630, 632, 633, 636, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 652, 654, 657, 658, 660, 661, 662, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 680, 682, 683, 684, 686, 687, 688, 689, 693], "write": [1, 15, 371, 387, 388, 389, 390, 391, 471, 482, 620, 621, 632, 633, 683], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 133, 143, 155, 158, 159, 160, 164, 165, 166, 167, 168, 169, 175, 183, 193, 205, 213, 227, 229, 234, 237, 238, 239, 240, 243, 252, 254, 256, 258, 260, 269, 271, 273, 274, 288, 290, 295, 298, 299, 300, 303, 317, 319, 327, 328, 331, 332, 333, 336, 350, 352, 360, 361, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 416, 417, 424, 425, 426, 428, 430, 433, 435, 438, 439, 441, 442, 443, 444, 446, 447, 450, 455, 456, 460, 461, 462, 463, 465, 466, 467, 470, 472, 473, 484, 485, 486, 489, 490, 491, 493, 494, 495, 496, 497, 506, 507, 509, 513, 534, 535, 537, 559, 564, 566, 581, 589, 594, 605, 608, 621, 622, 627, 628, 629, 630, 632, 633, 636, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 651, 652, 654, 655, 656, 657, 658, 660, 662, 664, 665, 666, 668, 669, 671, 672, 675, 676, 678, 679, 680, 681, 682, 683, 684, 688, 689, 691, 693], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 138, 161, 162, 163, 164, 167, 168, 170, 171, 173, 174, 188, 226, 230, 234, 235, 237, 238, 239, 240, 252, 287, 291, 295, 296, 298, 299, 300, 316, 320, 327, 328, 329, 331, 332, 333, 349, 353, 360, 361, 362, 364, 365, 366, 371, 376, 383, 389, 390, 424, 427, 428, 435, 437, 438, 439, 441, 446, 459, 461, 463, 472, 484, 490, 491, 493, 494, 495, 496, 497, 513, 560, 561, 562, 563, 564, 580, 581, 589, 590, 608, 611, 614, 615, 617, 622, 624, 625, 644, 648, 665, 680, 688, 691], "format": [1, 12, 13, 39, 40, 45, 74, 215, 217, 227, 229, 234, 237, 238, 239, 240, 276, 278, 288, 290, 295, 298, 299, 300, 305, 307, 317, 319, 327, 328, 331, 332, 333, 338, 340, 350, 352, 360, 361, 364, 365, 366, 371, 373, 382, 384, 386, 387, 388, 390, 480, 481, 484, 513, 611, 613, 614, 615, 618, 619, 621, 622, 624, 630, 658, 680, 682, 691], "These": [1, 29, 128, 167, 178, 266, 389, 428, 613, 619, 622, 634, 644, 668, 680, 687, 690, 691, 693], "auxiliari": 1, "input": [1, 173, 174, 389, 425, 426, 455, 459, 460, 463, 589, 594, 611, 613, 621, 668, 669, 687], "output": [1, 13, 62, 166, 389, 425, 433, 444, 460, 501, 591, 612, 614, 617, 619, 621, 680], "routin": [1, 12, 177, 387, 427, 621, 680], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 123, 126, 143, 155, 160, 161, 162, 163, 167, 168, 169, 171, 172, 174, 177, 193, 205, 208, 209, 210, 211, 212, 227, 233, 234, 238, 239, 240, 252, 254, 256, 258, 266, 269, 271, 273, 288, 294, 295, 299, 300, 317, 323, 324, 325, 326, 327, 328, 329, 332, 333, 350, 356, 357, 358, 359, 360, 361, 362, 365, 366, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 395, 423, 424, 427, 428, 430, 432, 433, 442, 444, 445, 446, 448, 449, 450, 452, 453, 455, 460, 461, 463, 467, 472, 484, 495, 497, 513, 561, 562, 563, 582, 583, 590, 591, 595, 596, 604, 608, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 632, 634, 635, 638, 639, 644, 648, 649, 657, 660, 665, 666, 668, 669, 671, 680, 682, 683, 684, 686, 687, 688, 690, 691, 694], "well": [1, 170, 172, 208, 209, 210, 211, 361, 381, 383, 428, 611, 613, 618, 619, 621, 622, 635, 646, 669, 680, 686, 687, 691], "polish": 1, "those": [1, 48, 55, 144, 145, 168, 169, 194, 195, 385, 427, 428, 487, 494, 609, 615, 617, 665, 694], "io": [1, 128, 178, 424, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 627, 629, 630, 634, 635, 636, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 680, 683, 684, 686, 687, 688, 689, 690, 691, 694], "thei": [1, 4, 58, 133, 135, 143, 167, 168, 169, 171, 183, 185, 193, 361, 377, 385, 391, 442, 444, 461, 497, 615, 617, 618, 622, 668, 691], "mai": [1, 29, 133, 135, 143, 150, 155, 167, 168, 183, 185, 193, 200, 205, 303, 336, 381, 383, 389, 393, 428, 444, 463, 574, 615, 617, 618, 624, 668, 680], "requir": [1, 31, 45, 74, 122, 124, 125, 167, 170, 171, 385, 389, 425, 426, 428, 469, 472, 484, 513, 590, 611, 612, 618, 621, 622, 635, 680, 691, 694], "depend": [1, 162, 163, 425, 428, 449, 611, 615, 621, 622, 624, 691], "beyond": [1, 690], "standard": [1, 40, 45, 62, 74, 119, 120, 167, 376, 387, 388, 389, 433, 462, 481, 484, 501, 513, 564, 577, 578, 596, 611, 615, 621, 622, 682, 683, 684, 691, 693], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 122, 124, 125, 128, 158, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 208, 209, 210, 211, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 303, 317, 319, 327, 328, 332, 333, 336, 350, 352, 360, 361, 365, 366, 377, 378, 379, 380, 384, 386, 389, 416, 431, 432, 444, 445, 455, 458, 459, 460, 461, 462, 463, 464, 467, 468, 472, 484, 513, 564, 574, 580, 592, 593, 603, 609, 615, 617, 625, 627, 629, 632, 633, 634, 635, 643, 644, 647, 648, 666, 669, 675, 679, 681, 682, 683, 684, 686, 689, 692, 694], "instal": [1, 10, 122, 124, 125, 170, 171, 389, 614, 617, 621, 624, 692, 693, 694], "non": [1, 122, 124, 125, 169, 385, 387, 444, 445, 455, 461, 463, 615, 621, 668], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 133, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 183, 208, 209, 210, 211, 212, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 460, 461, 462, 463, 464, 467, 468, 472, 473, 484, 485, 486, 488, 493, 501, 513, 516, 559, 574, 594, 603, 607, 611, 614, 615, 617, 619, 620, 621, 634, 669, 683, 688, 693], "support": [1, 254, 328, 361, 373, 380, 381, 382, 383, 384, 392, 393, 417, 461, 613, 615, 617, 621, 622, 657, 680, 682, 683, 684, 686, 687, 688, 690, 691], "fulli": [1, 379, 617, 690], "test": [1, 12, 167, 376, 381, 383, 393, 612, 615, 621, 623, 624, 627, 629, 638, 640, 641, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 676, 677, 678, 680, 682], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 128, 132, 140, 143, 147, 152, 155, 167, 168, 169, 171, 172, 173, 174, 178, 182, 190, 193, 197, 202, 205, 210, 227, 233, 234, 237, 238, 239, 240, 254, 288, 294, 295, 298, 299, 300, 317, 323, 327, 328, 331, 332, 333, 350, 356, 360, 361, 364, 365, 366, 369, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 394, 406, 407, 424, 425, 426, 427, 428, 432, 435, 438, 439, 441, 443, 444, 445, 455, 456, 459, 461, 463, 472, 474, 484, 487, 495, 496, 513, 590, 609, 611, 612, 613, 614, 615, 616, 618, 621, 622, 624, 632, 644, 665, 666, 667, 668, 672, 680, 688, 689, 691, 694], "pleas": [1, 56, 303, 336, 495, 611, 612, 615, 617, 619, 622, 680, 682, 683, 684, 686, 687, 688, 691], "your": [1, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 613, 614, 615, 620, 622, 624, 632, 643, 646, 663, 668, 669, 680, 689, 690, 691, 694], "own": [1, 12, 614, 618, 619, 624, 644, 680, 690], "risk": [1, 613], "bug": [1, 614, 622, 625, 680, 690, 691], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 128, 133, 144, 145, 166, 167, 168, 169, 174, 178, 183, 194, 195, 213, 253, 268, 328, 361, 369, 371, 372, 385, 388, 390, 391, 425, 426, 427, 428, 445, 455, 461, 462, 463, 465, 467, 469, 470, 472, 484, 486, 493, 513, 589, 590, 615, 618, 620, 621, 622, 624, 628, 630, 644, 668, 671, 680, 690, 691, 694], "fix": [1, 442, 611, 614, 622, 623, 625, 632, 633, 636, 660, 682, 689, 690, 691, 694], "them": [1, 4, 5, 6, 56, 167, 168, 169, 170, 243, 260, 328, 361, 376, 385, 428, 495, 614, 619, 622, 624, 644, 680, 691, 694], "prioriti": [1, 694], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 215, 247, 261, 276, 305, 328, 338, 361, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 481, 611, 612, 613, 615, 618, 621, 622, 628, 630, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 691, 693], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 165, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 435, 438, 439, 441, 442, 443, 473, 485, 486, 488, 493, 509, 516, 537, 605, 638, 686], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 124, 128, 130, 131, 133, 135, 142, 143, 144, 145, 146, 148, 150, 155, 156, 161, 167, 168, 169, 173, 174, 178, 180, 181, 183, 185, 192, 193, 194, 195, 196, 198, 200, 205, 206, 215, 227, 229, 234, 237, 238, 239, 240, 243, 252, 254, 256, 258, 259, 260, 266, 269, 271, 273, 276, 288, 290, 295, 298, 299, 300, 305, 317, 319, 327, 328, 331, 332, 333, 338, 350, 352, 360, 361, 364, 365, 366, 369, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 397, 427, 428, 432, 444, 445, 449, 452, 455, 460, 461, 462, 463, 473, 474, 481, 482, 485, 486, 487, 490, 491, 493, 495, 496, 497, 572, 573, 584, 585, 586, 587, 588, 589, 597, 608, 611, 613, 614, 615, 617, 618, 621, 622, 628, 647, 648, 655, 657, 658, 660, 668, 669, 671, 682, 683, 687, 688, 691], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 487, 621], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 167, 168, 169, 226, 227, 228, 234, 238, 239, 240, 252, 254, 255, 256, 257, 258, 259, 266, 269, 270, 271, 272, 273, 287, 288, 289, 295, 299, 300, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 349, 350, 351, 357, 358, 359, 360, 361, 362, 365, 366, 370, 373, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 424, 425, 426, 427, 428, 461, 584, 585, 586, 587, 588, 614, 615, 619, 621], "d3r": [2, 621], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 374, 375, 376, 378, 382, 387, 388, 456, 481, 584, 587, 611, 619, 621, 680, 681], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 34, 40, 45, 46, 47, 49, 54, 74, 77, 122, 124, 125, 133, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 183, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 419, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 462, 463, 464, 467, 468, 472, 473, 475, 481, 484, 485, 486, 488, 493, 513, 516, 559, 581, 594, 603, 605, 607, 613, 615, 617, 619, 621], "odim_h5": [2, 8, 621], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 122, 124, 125, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 213, 274, 303, 328, 336, 370, 372, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 393, 427, 428, 432, 434, 436, 437, 440, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 464, 466, 467, 468, 472, 473, 475, 480, 484, 485, 513, 603, 611, 615, 682], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 123, 124, 126, 128, 133, 135, 143, 150, 155, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 178, 183, 185, 193, 200, 205, 227, 234, 238, 239, 240, 242, 252, 254, 256, 258, 266, 269, 271, 273, 288, 295, 299, 300, 302, 317, 325, 326, 327, 328, 329, 332, 333, 335, 350, 358, 359, 360, 361, 365, 366, 368, 369, 370, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 428, 431, 432, 434, 436, 437, 440, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 467, 468, 470, 472, 473, 474, 481, 484, 485, 486, 487, 490, 491, 493, 495, 496, 501, 513, 582, 583, 590, 597, 603, 607, 608, 614, 615, 621, 668, 688, 693], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 122, 124, 125, 161, 162, 163, 167, 168, 169, 170, 171, 173, 174, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 395, 397, 424, 427, 428, 431, 432, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 460, 464, 466, 467, 468, 472, 473, 484, 485, 486, 488, 513, 516, 558, 603, 635, 669, 683, 688], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 123, 126, 232, 254, 266, 293, 303, 322, 324, 325, 326, 328, 329, 336, 355, 357, 358, 359, 361, 362, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 404, 414, 433, 464, 472, 484, 513, 611, 613, 614, 615, 617, 621, 622, 638, 642, 643, 646, 647, 648, 663, 666, 668, 669, 677, 680, 681, 689, 691, 693], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 183, 184, 185, 186, 187, 188, 189, 191, 192, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 226, 227, 228, 229, 234, 237, 238, 239, 240, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 287, 288, 289, 290, 295, 298, 299, 300, 303, 304, 305, 306, 307, 308, 313, 316, 317, 318, 319, 327, 328, 331, 332, 333, 336, 337, 338, 339, 340, 341, 346, 349, 350, 351, 352, 360, 361, 364, 365, 366, 370, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 419, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 480, 484, 485, 486, 487, 488, 493, 496, 509, 513, 516, 537, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 573, 579, 580, 581, 593, 594, 603, 605, 606, 607, 611, 613, 614, 615, 617, 618, 619, 621, 622, 627, 628, 632, 634, 638, 639, 640, 641, 644, 646, 647, 649, 660, 664, 665, 666, 667, 668, 669, 670, 676, 678, 680, 681, 682, 684, 686, 687, 688, 691], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 121, 127, 128, 143, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 193, 205, 208, 209, 210, 211, 212, 213, 226, 227, 232, 234, 238, 239, 240, 256, 258, 269, 271, 273, 274, 287, 288, 293, 295, 299, 300, 303, 316, 317, 322, 325, 327, 328, 332, 333, 336, 349, 350, 355, 358, 360, 361, 365, 366, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 416, 417, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 480, 513, 556, 561, 562, 563, 566, 569, 570, 571, 572, 573, 580, 581, 582, 583, 586, 588, 589, 591, 592, 593, 594, 597, 598, 603, 604, 605, 606, 607, 608, 611, 612, 615, 617, 621, 626, 627, 628, 629, 632, 633, 634, 635, 637, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 667, 668, 669, 670, 671, 672, 673, 676, 677, 678, 681, 682, 684, 686, 687, 689, 692, 693], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 122, 124, 125, 143, 155, 164, 165, 167, 170, 171, 172, 193, 205, 209, 210, 215, 217, 227, 228, 233, 234, 238, 239, 240, 251, 252, 253, 254, 255, 256, 257, 258, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 288, 289, 294, 295, 299, 300, 305, 307, 317, 318, 323, 326, 327, 328, 332, 333, 338, 340, 350, 351, 356, 359, 360, 361, 365, 366, 369, 370, 373, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 393, 400, 404, 411, 414, 428, 432, 435, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 453, 455, 456, 460, 461, 462, 463, 464, 467, 472, 473, 484, 486, 487, 488, 495, 513, 516, 579, 582, 583, 590, 605, 612, 614, 615, 616, 617, 619, 622, 624, 668, 680, 682, 683, 684, 686, 687, 688, 690, 691, 694], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 168, 169, 213, 274, 303, 336, 373, 377, 379, 380, 381, 382, 384, 385, 386, 390, 391, 435, 438, 439, 441, 443, 444, 449, 460, 461, 484, 513, 556, 581, 589, 612, 615, 619, 621, 622, 669, 671, 680, 688, 691], "found": [2, 7, 8, 12, 14, 29, 163, 170, 373, 377, 379, 380, 381, 382, 384, 385, 386, 400, 411, 424, 427, 428, 433, 456, 611, 613, 615, 617, 619, 621, 622, 624, 635, 647, 680, 690, 691, 694], "doe": [2, 7, 8, 12, 14, 49, 77, 122, 124, 125, 167, 168, 169, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 370, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 404, 414, 488, 516, 608, 613, 615, 621, 622, 624, 658, 671, 682, 690, 691, 693, 694], "appear": [2, 7, 8, 12, 14, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 597, 615, 618, 619], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 166, 167, 215, 247, 260, 261, 276, 305, 336, 338, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 390, 397, 404, 414, 416, 446, 449, 452, 453, 460, 484, 513, 566, 590, 607, 612, 614, 615, 617, 618, 619, 622, 624, 634, 644, 668, 680, 686, 688, 690, 691, 693, 694], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 122, 123, 124, 125, 126, 128, 130, 131, 133, 134, 135, 137, 141, 143, 146, 148, 149, 150, 153, 155, 157, 158, 159, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 181, 183, 184, 185, 187, 191, 193, 196, 198, 199, 200, 203, 205, 207, 208, 209, 210, 211, 227, 228, 229, 231, 234, 235, 236, 237, 238, 239, 240, 251, 252, 254, 256, 258, 266, 267, 269, 271, 273, 288, 289, 290, 292, 295, 296, 297, 298, 299, 300, 317, 318, 319, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 350, 351, 352, 354, 357, 358, 359, 360, 361, 363, 364, 365, 366, 369, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 400, 401, 406, 411, 412, 427, 428, 430, 432, 433, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 449, 452, 453, 455, 458, 460, 461, 462, 463, 467, 469, 472, 484, 487, 513, 561, 562, 563, 564, 579, 581, 589, 590, 594, 595, 596, 611, 613, 614, 615, 618, 619, 621, 622, 635, 638, 644, 649, 665, 666, 667, 668, 669, 676, 683, 684, 687, 691], "place": [2, 7, 8, 12, 14, 228, 232, 233, 251, 253, 267, 268, 289, 293, 294, 318, 322, 323, 351, 355, 356, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 608, 618, 619, 621, 686, 690], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 123, 126, 128, 158, 159, 161, 162, 163, 164, 167, 168, 169, 172, 173, 174, 178, 208, 209, 210, 211, 213, 243, 252, 260, 274, 303, 326, 336, 359, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 392, 393, 406, 424, 425, 426, 427, 428, 432, 433, 435, 436, 438, 444, 445, 446, 448, 449, 455, 460, 461, 462, 463, 465, 467, 468, 469, 470, 472, 484, 486, 513, 564, 580, 594, 611, 615, 618, 619, 621, 622, 649, 665, 668, 669, 674, 680, 691], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 161, 162, 163, 165, 167, 168, 169, 170, 172, 173, 174, 178, 183, 185, 193, 200, 205, 208, 209, 210, 211, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 234, 237, 238, 239, 240, 242, 251, 252, 254, 256, 258, 266, 267, 269, 271, 273, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 295, 298, 299, 300, 302, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 327, 328, 331, 332, 333, 335, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 360, 361, 364, 365, 366, 368, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 396, 408, 428, 430, 431, 433, 442, 444, 445, 446, 449, 452, 453, 455, 456, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 472, 484, 490, 491, 493, 495, 496, 501, 513, 561, 562, 563, 581, 589, 590, 603, 612, 613, 621, 622, 657, 658, 665, 668, 669, 671, 680, 690, 691, 694], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 122, 124, 125, 161, 162, 163, 167, 170, 172, 173, 174, 208, 209, 210, 211, 232, 233, 237, 293, 294, 298, 322, 323, 331, 355, 356, 364, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 391, 427, 428, 432, 439, 442, 460, 461, 467, 472, 484, 513, 579, 580, 611, 614, 615, 618, 619, 620, 621, 646, 647, 648, 665, 666, 668, 693], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 161, 162, 163, 167, 168, 169, 172, 173, 174, 208, 209, 210, 211, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 431, 445, 455, 460, 461, 462, 463, 464, 467, 468, 603, 611, 612, 615, 617, 621, 634, 638, 667, 676], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 472, 490, 491, 493, 494, 495, 496, 497, 580, 618, 621, 622, 665, 667, 668, 669, 670, 671, 672, 673, 676, 684, 689, 691], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 161, 162, 163, 167, 168, 169, 173, 174, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 390, 431, 433, 444, 461, 462, 463, 464, 468, 472, 473, 484, 485, 486, 513, 558, 560, 566, 603, 619, 620, 621, 635, 655, 656, 660, 688], "dure": [2, 7, 8, 12, 14, 19, 143, 155, 166, 167, 168, 169, 193, 205, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 445, 454, 461, 467, 611, 669, 690, 694], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 122, 123, 124, 125, 126, 130, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 155, 156, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 180, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 205, 206, 209, 210, 215, 217, 227, 228, 229, 232, 233, 234, 237, 238, 239, 240, 251, 252, 253, 254, 255, 256, 257, 258, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 288, 289, 290, 293, 294, 295, 298, 299, 300, 303, 305, 307, 317, 318, 319, 322, 323, 327, 328, 331, 332, 333, 336, 338, 340, 350, 351, 352, 355, 356, 360, 361, 364, 365, 366, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 400, 401, 404, 406, 411, 412, 414, 417, 424, 425, 426, 427, 428, 430, 432, 433, 435, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 452, 453, 455, 456, 460, 461, 462, 463, 467, 469, 472, 473, 474, 484, 486, 487, 494, 495, 496, 497, 501, 513, 566, 579, 582, 583, 589, 590, 591, 594, 597, 599, 604, 605, 607, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 627, 634, 635, 638, 639, 644, 645, 646, 647, 648, 649, 652, 657, 658, 665, 666, 668, 669, 671, 682, 683, 684, 686, 687, 688, 690, 691, 693, 694], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 133, 135, 143, 144, 145, 150, 155, 161, 162, 163, 167, 168, 169, 170, 172, 173, 174, 183, 185, 193, 194, 195, 200, 205, 209, 210, 303, 336, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 425, 426, 428, 433, 446, 460, 485, 486, 560, 608, 612, 616, 618, 619, 625, 628, 665, 682], "success": [2, 7, 8, 12, 14, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 624], "unless": [2, 7, 8, 12, 14, 58, 122, 124, 125, 169, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 390, 497, 615], "explicitli": [2, 7, 8, 12, 14, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 425, 426], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 128, 133, 135, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 167, 168, 169, 170, 171, 172, 177, 178, 183, 185, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 227, 234, 238, 239, 240, 252, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 370, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 425, 426, 427, 428, 459, 469, 484, 489, 495, 496, 513, 580, 599, 612, 614, 615, 617, 618, 619, 620, 621, 622, 624, 634, 638, 660, 665, 680, 687, 690, 691], "introduct": [2, 7, 8, 12, 14, 373, 377, 379, 380, 381, 382, 383, 384, 385, 622, 691], "specif": [2, 7, 8, 12, 14, 143, 155, 161, 162, 163, 193, 205, 336, 361, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 428, 448, 449, 450, 452, 453, 456, 460, 461, 462, 463, 594, 613, 615, 619, 621, 622, 627, 644, 668, 669, 671, 680, 691, 694], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 122, 124, 125, 133, 135, 150, 167, 168, 169, 177, 183, 185, 200, 227, 229, 234, 238, 239, 240, 252, 254, 255, 256, 257, 258, 266, 269, 270, 271, 272, 273, 288, 290, 295, 299, 300, 317, 319, 324, 325, 326, 327, 328, 329, 332, 333, 350, 352, 357, 358, 359, 360, 361, 362, 365, 366, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 400, 411, 417, 427, 428, 461, 462, 463, 472, 484, 487, 495, 496, 513, 603, 607, 613, 614, 615, 618, 621, 629, 634, 686, 687, 690], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 124, 128, 133, 135, 143, 150, 155, 161, 167, 168, 169, 173, 174, 178, 183, 185, 193, 200, 205, 215, 217, 227, 229, 234, 237, 238, 239, 240, 243, 252, 254, 256, 258, 260, 266, 269, 271, 273, 276, 278, 288, 290, 295, 298, 299, 300, 305, 307, 317, 319, 327, 328, 331, 332, 333, 338, 340, 350, 352, 360, 361, 364, 365, 366, 369, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 424, 425, 428, 432, 444, 445, 449, 452, 453, 455, 460, 461, 462, 463, 467, 473, 474, 481, 485, 486, 487, 490, 491, 493, 495, 496, 497, 589, 597, 608, 615], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 124, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 161, 167, 168, 169, 173, 174, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 215, 217, 227, 229, 234, 237, 238, 239, 240, 243, 252, 254, 256, 258, 259, 260, 266, 269, 271, 273, 276, 278, 288, 290, 295, 298, 299, 300, 305, 307, 317, 319, 327, 328, 331, 332, 333, 338, 340, 350, 352, 360, 361, 364, 365, 366, 369, 370, 372, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 397, 424, 425, 427, 428, 432, 444, 445, 449, 452, 453, 455, 460, 461, 462, 463, 467, 472, 473, 474, 481, 482, 484, 485, 486, 487, 490, 491, 493, 495, 496, 497, 513, 572, 573, 589, 597, 608, 611, 612, 613, 614, 615, 617, 618, 621, 622, 639, 647, 648, 655, 656, 657, 658, 665, 668, 669, 671, 672, 676, 683, 684, 688, 691], "mdv": [2, 8, 12, 14, 379, 380, 390, 612, 621, 629, 632, 640, 643, 663, 680, 684, 686, 689], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 122, 124, 125, 143, 155, 167, 169, 193, 205, 371, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 404, 414, 613, 614, 615, 617, 619, 621, 622, 634, 635, 638, 639, 658, 691], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 167, 168, 169, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 425, 426, 432, 460, 611, 612, 613, 614, 615, 617, 618, 619, 621, 638], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 123, 126, 160, 161, 162, 163, 165, 167, 168, 169, 170, 208, 211, 232, 252, 293, 322, 355, 361, 370, 372, 373, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 417, 418, 419, 420, 424, 427, 428, 430, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 455, 458, 460, 461, 462, 463, 467, 469, 472, 484, 513, 559, 574, 575, 576, 579, 581, 589, 590, 595, 596, 599, 603, 605, 607, 611, 612, 613, 614, 618, 621, 624, 628, 630, 632, 635, 639, 649, 660, 665, 668, 669, 671, 681, 684, 687, 690, 693], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 144, 145, 161, 162, 163, 166, 167, 169, 173, 174, 194, 195, 227, 238, 254, 288, 299, 317, 328, 332, 350, 361, 365, 373, 377, 379, 380, 381, 382, 383, 384, 385, 425, 426, 428, 461, 469, 489, 495, 496, 582, 583, 597, 599, 605, 611, 612, 613, 615, 617, 621, 622, 625, 638, 639, 648, 658, 668, 669, 683, 684, 686, 691], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 133, 135, 143, 150, 155, 160, 161, 162, 163, 167, 183, 185, 193, 200, 205, 227, 238, 260, 288, 299, 317, 328, 332, 350, 365, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 442, 445, 455, 458, 474, 484, 487, 495, 513, 564, 589, 611, 613, 614, 615, 616, 617, 619, 621, 622, 628, 634, 635, 665, 666, 668, 669, 671, 680, 686, 690, 691, 692, 693, 694], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 122, 124, 125, 167, 168, 169, 328, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 392, 393, 395, 397, 400, 401, 402, 404, 406, 411, 412, 414, 427, 428, 456, 460, 472, 473, 484, 485, 486, 513, 566, 613, 615, 618, 619, 665, 682, 683, 687], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 213, 229, 233, 236, 260, 274, 290, 294, 297, 303, 319, 323, 330, 336, 352, 356, 363, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 419, 425, 426, 428, 435, 438, 439, 441, 442, 443, 446, 456, 459, 487, 580, 582, 583, 592, 614, 615, 617, 619, 620, 621, 622, 624, 634, 680, 691, 692], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 155, 161, 162, 163, 172, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 202, 205, 208, 209, 210, 211, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 444, 461, 462, 463, 465, 469, 470, 487, 629, 640, 647, 687], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 165, 168, 169, 171, 172, 173, 174, 209, 210, 227, 228, 234, 237, 238, 239, 240, 251, 267, 288, 289, 295, 298, 299, 300, 317, 318, 327, 328, 331, 332, 333, 350, 351, 360, 361, 364, 365, 366, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 417, 424, 428, 433, 445, 449, 455, 484, 487, 513, 590, 613, 614, 615, 617, 618, 621, 622, 628, 630, 634, 644, 657, 668, 669, 671, 676, 684, 691], "after": [2, 4, 5, 6, 7, 8, 12, 14, 167, 168, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 393, 461, 611, 613, 615, 621, 622, 624, 635, 668, 690, 691, 694], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 160, 161, 162, 163, 167, 168, 169, 172, 173, 174, 178, 183, 185, 193, 200, 205, 208, 209, 210, 211, 227, 229, 234, 237, 238, 239, 240, 241, 242, 252, 254, 288, 290, 295, 298, 299, 300, 301, 302, 317, 319, 327, 328, 331, 332, 333, 334, 335, 350, 352, 360, 361, 364, 365, 366, 367, 368, 370, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 398, 399, 402, 403, 409, 410, 413, 428, 439, 444, 448, 449, 450, 452, 453, 461, 462, 463, 472, 484, 495, 496, 497, 513, 561, 562, 563, 572, 573, 579, 589, 600, 601, 612, 613, 619, 621, 622, 630, 632, 635, 638, 639, 645, 646, 654, 657, 658, 661, 662, 664, 665, 668, 669, 673, 676, 680, 684, 689, 690, 691, 692], "you": [2, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 460, 611, 614, 615, 616, 617, 618, 620, 622, 624, 634, 668, 669, 680, 682, 683, 684, 686, 687, 688, 690, 691, 694], "want": [2, 612, 614, 615, 617, 618, 630, 635, 665, 680, 687, 688, 694], "altitud": [2, 31, 45, 56, 74, 173, 174, 213, 370, 425, 428, 433, 446, 467, 472, 484, 495, 513, 591, 604, 611, 614, 621, 658, 665, 672, 682, 686, 688], "provid": [2, 6, 45, 48, 74, 167, 212, 233, 294, 323, 328, 356, 375, 376, 377, 382, 385, 389, 390, 391, 393, 398, 399, 405, 406, 409, 410, 415, 417, 460, 484, 487, 513, 594, 603, 609, 611, 614, 615, 617, 618, 619, 620, 622, 635, 666, 668, 680, 687, 690, 691], "np": [2, 417, 437, 470, 602, 611, 613, 614, 615, 617, 619, 621, 622, 628, 638, 640, 644, 647, 649, 654, 657, 658, 660, 665, 666, 668, 669, 670, 671, 672, 682, 683, 684, 686, 687, 688, 691], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 126, 128, 133, 135, 143, 144, 145, 150, 155, 159, 164, 167, 168, 169, 171, 175, 178, 183, 185, 193, 194, 195, 200, 205, 213, 227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 266, 267, 269, 271, 273, 274, 288, 289, 290, 295, 299, 300, 303, 317, 318, 319, 324, 325, 327, 328, 332, 333, 336, 350, 351, 352, 357, 358, 360, 361, 365, 366, 370, 417, 427, 428, 437, 445, 446, 447, 455, 460, 462, 463, 464, 469, 470, 472, 474, 480, 486, 490, 491, 493, 494, 495, 496, 497, 575, 576, 577, 578, 579, 587, 588, 590, 595, 596, 599, 600, 601, 602, 611, 615, 621, 622, 638, 654, 665, 668, 669, 672, 682, 683, 684, 686, 687, 688, 691], "295": [2, 621], "dtype": [2, 424, 428, 611, 614, 615, 621, 628, 682, 684, 688], "float64": [2, 427, 428, 611, 614, 666, 688], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 208, 209, 210, 211, 214, 215, 216, 217, 218, 247, 248, 249, 250, 261, 262, 263, 264, 275, 276, 277, 278, 279, 304, 305, 306, 307, 308, 337, 338, 339, 340, 341, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 395, 400, 401, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474, 475, 482, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 526, 527, 528, 529, 534, 535, 536, 537, 538, 539, 540, 556, 558, 559, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 607, 611, 613, 614, 615, 618, 619, 621, 622, 647, 666, 668, 669, 671, 683, 686, 688, 691], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 159, 161, 162, 163, 167, 168, 169, 171, 172, 173, 174, 175, 208, 209, 210, 211, 227, 234, 237, 238, 239, 240, 242, 288, 295, 298, 299, 300, 302, 317, 327, 328, 331, 332, 333, 335, 350, 360, 361, 364, 365, 366, 368, 370, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 406, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 438, 441, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 484, 485, 489, 490, 491, 493, 494, 495, 496, 497, 513, 579, 580, 582, 583, 589, 593, 603, 605, 608, 611, 612, 615, 618, 621, 622, 635, 650, 651, 669, 680, 682, 683, 686, 688, 690, 691, 694], "edg": [3, 33, 57, 120, 124, 167, 168, 169, 170, 171, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 446, 459, 463, 474, 496, 564, 613, 614, 615, 657, 658, 668], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 391, 614, 621], "gamic": [4, 621], "hdf5": [4, 8, 621, 680], "unlik": [4, 5, 6, 376], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 167, 168, 169, 170, 171, 172, 210, 227, 229, 234, 237, 238, 239, 240, 254, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 373, 376, 378, 381, 383, 385, 389, 417, 428, 445, 455, 465, 469, 472, 480, 484, 513, 561, 562, 563, 613, 614, 615, 619, 622, 665, 668, 669, 680, 682, 690, 691, 694], "still": [4, 5, 6, 167, 303, 336, 376, 391, 428, 597, 617, 619, 621, 622, 634, 691, 693], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 128, 133, 135, 143, 150, 155, 167, 168, 169, 170, 172, 173, 174, 178, 183, 185, 193, 200, 205, 208, 209, 210, 211, 227, 228, 232, 233, 234, 237, 238, 239, 240, 243, 251, 254, 256, 258, 260, 266, 267, 269, 271, 273, 288, 289, 293, 294, 295, 298, 299, 300, 317, 318, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 370, 372, 373, 375, 376, 381, 382, 385, 386, 388, 389, 390, 391, 393, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 439, 442, 456, 460, 461, 462, 463, 467, 468, 469, 472, 474, 484, 489, 493, 506, 507, 509, 510, 513, 534, 535, 537, 538, 579, 580, 581, 582, 583, 590, 592, 593, 594, 595, 596, 603, 607, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 624, 629, 634, 635, 638, 644, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 665, 666, 669, 676, 677, 678, 680, 684, 686, 688, 690, 691], "renam": [4, 5, 6, 29, 376, 386, 621], "uniform": [4, 5, 6, 58, 168, 169, 376, 384, 432, 444, 497, 621, 644, 649, 680, 682], "forc": [4, 5, 6, 376, 386, 432, 615, 621], "extract": [4, 160, 227, 288, 317, 350, 385, 442, 444, 456, 580, 582, 583, 593, 617, 621, 632, 638, 662, 664, 665, 668, 669, 673, 680, 689], "valid": [4, 31, 45, 74, 157, 161, 167, 207, 228, 251, 267, 289, 318, 351, 381, 390, 391, 425, 426, 428, 435, 438, 439, 441, 460, 472, 484, 513, 580, 581, 582, 583, 590, 619, 621, 622, 639, 691], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 121, 163, 175, 213, 227, 229, 234, 235, 236, 238, 239, 240, 252, 254, 256, 258, 266, 269, 271, 273, 274, 288, 290, 295, 296, 297, 299, 300, 303, 317, 319, 327, 328, 329, 330, 332, 333, 336, 350, 352, 360, 361, 362, 363, 365, 366, 370, 384, 425, 426, 428, 435, 437, 439, 441, 442, 444, 461, 463, 484, 494, 496, 513, 580, 581, 589, 605, 611, 613, 614, 615, 621, 628, 630, 639, 644, 647, 651, 654, 660, 672, 682, 688], "valid_min": [4, 167, 168, 169, 377, 621, 668, 669, 688], "valid_max": [4, 167, 168, 169, 377, 668, 669, 688], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 133, 135, 138, 143, 144, 145, 150, 155, 167, 168, 169, 173, 174, 183, 185, 188, 193, 194, 195, 200, 205, 227, 234, 238, 239, 240, 254, 260, 288, 295, 299, 300, 317, 327, 328, 332, 333, 336, 350, 360, 361, 365, 366, 381, 382, 384, 385, 387, 391, 393, 417, 428, 432, 435, 438, 439, 441, 443, 449, 452, 453, 461, 462, 463, 469, 471, 472, 484, 485, 486, 490, 491, 493, 495, 496, 513, 590, 612, 613, 614, 617, 618, 621, 622, 623, 624, 625, 644, 665, 668, 669, 671, 680, 683, 684, 687, 690, 691, 694], "present": [4, 29, 31, 45, 74, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 390, 391, 404, 414, 428, 460, 472, 484, 513, 615, 682, 687], "unit": [4, 55, 122, 123, 124, 125, 126, 168, 169, 219, 222, 223, 224, 225, 232, 252, 280, 283, 284, 285, 286, 293, 309, 312, 313, 314, 315, 322, 342, 345, 346, 347, 348, 355, 377, 379, 430, 455, 458, 471, 494, 566, 590, 611, 615, 617, 621, 622, 623, 628, 655, 660, 668, 669, 671, 680, 683, 688, 691], "avail": [4, 16, 45, 56, 57, 58, 74, 143, 155, 161, 162, 163, 171, 193, 205, 212, 252, 254, 256, 258, 269, 271, 273, 370, 379, 389, 484, 495, 496, 497, 513, 599, 611, 613, 614, 615, 618, 621, 624, 632, 634, 644, 665, 680], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 123, 126, 449, 460, 469, 470, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 635, 672, 682, 683, 684, 686, 687, 688, 691], "k": [5, 126, 158, 159, 164, 231, 232, 233, 235, 236, 237, 292, 293, 294, 296, 297, 298, 321, 322, 323, 329, 330, 331, 354, 355, 356, 362, 363, 364, 396, 400, 401, 403, 404, 408, 411, 412, 413, 414, 444, 461, 469, 613, 617, 619, 622, 646, 654, 657, 658, 691], "band": [5, 9, 161, 163, 166, 389, 435, 448, 450, 457, 460, 461, 462, 463, 467, 611, 619, 621, 669, 671], "arm": [5, 6, 40, 158, 159, 164, 374, 375, 376, 387, 388, 428, 456, 481, 560, 566, 611, 613, 615, 617, 621, 624, 628, 641, 658, 682, 683, 684, 686, 687, 688, 690, 693, 694], "zenith": 5, "kazr": [5, 6, 621, 628], "ingest": [5, 614, 621, 680, 681], "spectra": [6, 74, 117, 447, 466, 513, 556, 563, 571, 590, 621], "radar_spectra": 6, "delay_field_load": [6, 373, 376, 379, 380, 381, 384, 386], "delai": [6, 373, 376, 379, 380, 381, 384, 621], "load": [6, 29, 373, 376, 379, 380, 381, 384, 392, 393, 402, 621, 639, 647, 688], "until": [6, 29, 168, 373, 376, 379, 380, 381, 384, 618, 624], "particular": [6, 373, 376, 379, 380, 381, 384, 428, 442, 614, 624, 665, 680], "access": [6, 19, 31, 45, 56, 57, 74, 144, 145, 194, 195, 373, 376, 379, 380, 381, 384, 393, 472, 484, 495, 496, 513, 559, 614, 619, 634, 635, 686, 688, 693], "In": [6, 122, 124, 125, 169, 171, 371, 373, 376, 379, 380, 381, 383, 384, 404, 414, 417, 430, 433, 442, 446, 461, 470, 579, 580, 611, 613, 614, 615, 617, 618, 622, 627, 628, 629, 630, 635, 665, 668, 669, 680, 683, 684, 686, 687, 690, 691, 693], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 143, 144, 145, 155, 167, 193, 194, 195, 205, 227, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 373, 376, 377, 379, 380, 381, 384, 387, 388, 391, 472, 475, 476, 477, 478, 484, 495, 496, 502, 503, 504, 505, 513, 530, 531, 532, 533, 611, 614, 615, 617, 619, 666, 682, 688], "radarspectra": [6, 466, 563], "lazyloaddict": [6, 31, 45, 74, 373, 376, 379, 380, 381, 384, 472, 484, 513], "speedup": [6, 254, 328, 361, 376, 615, 621], "where": [6, 15, 56, 57, 119, 123, 126, 130, 133, 134, 135, 136, 137, 139, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 163, 167, 168, 169, 172, 174, 180, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 227, 234, 237, 238, 239, 240, 253, 268, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 369, 370, 376, 433, 435, 438, 439, 441, 442, 443, 445, 446, 455, 464, 470, 495, 496, 582, 583, 591, 594, 607, 611, 612, 615, 617, 621, 634, 635, 638, 644, 649, 665, 666, 668, 671, 680, 683, 687, 694], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 121, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 274, 288, 295, 299, 300, 303, 317, 327, 328, 332, 333, 336, 350, 360, 361, 365, 366, 376, 381, 382, 383, 384, 417, 424, 427, 428, 461, 462, 463, 464, 465, 469, 470, 484, 494, 495, 496, 513, 561, 562, 563, 579, 580, 592, 593, 611, 615, 621, 629, 638, 640, 641, 646, 647, 682, 684, 686, 687, 688], "vari": [6, 376, 379, 444, 668, 669], "between": [6, 33, 45, 56, 57, 74, 120, 123, 124, 143, 155, 167, 168, 170, 171, 172, 193, 205, 209, 210, 227, 234, 238, 239, 240, 252, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 369, 376, 381, 384, 390, 391, 417, 444, 445, 449, 455, 474, 484, 495, 496, 513, 574, 589, 604, 611, 613, 614, 615, 622, 624, 638, 645, 646, 657, 665, 668, 684, 686, 691, 694], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 138, 143, 155, 161, 162, 163, 167, 168, 169, 171, 174, 188, 193, 205, 209, 214, 216, 220, 221, 227, 234, 237, 238, 239, 240, 256, 258, 269, 271, 273, 275, 277, 281, 282, 288, 295, 298, 299, 300, 304, 306, 310, 311, 317, 327, 328, 331, 332, 333, 337, 339, 343, 344, 350, 360, 361, 364, 365, 366, 375, 376, 381, 384, 385, 417, 432, 437, 469, 484, 492, 495, 496, 497, 498, 499, 500, 513, 526, 527, 528, 529, 561, 562, 563, 566, 580, 581, 586, 588, 592, 607, 608, 614, 615, 622, 640, 647, 682, 688, 691], "ngates_vari": [6, 376], "recommend": [6, 29, 45, 74, 167, 169, 361, 376, 385, 428, 444, 445, 455, 461, 484, 513, 579, 622, 624, 644, 665, 680, 690, 691, 692, 693, 694], "noxp": [7, 621], "iphex": [7, 621], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 138, 188, 328, 361, 370, 381, 383, 425, 426, 456, 580, 584, 587, 593, 611, 614, 615, 621, 628, 630, 634, 639, 645, 665, 666, 669, 670, 671, 672, 680, 682], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 130, 131, 133, 134, 135, 136, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 156, 167, 172, 180, 181, 183, 184, 185, 186, 189, 191, 192, 196, 198, 199, 200, 201, 203, 204, 206, 209, 210, 227, 232, 233, 252, 253, 255, 256, 257, 258, 268, 270, 271, 272, 273, 288, 293, 294, 317, 322, 323, 324, 325, 350, 355, 356, 357, 358, 400, 411, 417, 425, 426, 427, 428, 439, 460, 464, 472, 474, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 513, 526, 527, 528, 529, 558, 580, 589, 592, 593, 595, 596, 603, 611, 615, 619, 665, 666, 668, 680, 693], "dataset1": 8, "dataset2": 8, "pattern": [9, 564, 657, 665], "project": [9, 16, 31, 34, 45, 74, 122, 123, 124, 125, 126, 232, 243, 254, 259, 266, 293, 303, 322, 328, 355, 361, 370, 379, 388, 389, 428, 435, 438, 439, 441, 443, 472, 475, 484, 513, 611, 613, 615, 617, 618, 619, 621, 634, 635, 638, 639, 646, 648, 654, 661, 666, 668, 669, 676, 680, 683, 684, 686, 687, 690], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 126, 213, 222, 227, 229, 232, 234, 237, 238, 239, 240, 242, 252, 254, 256, 258, 269, 271, 273, 274, 283, 288, 290, 293, 295, 298, 299, 300, 302, 303, 312, 317, 319, 322, 325, 327, 331, 332, 333, 335, 336, 345, 350, 352, 355, 358, 360, 364, 365, 366, 368, 417, 421, 422, 423, 424, 425, 427, 428, 432, 445, 446, 448, 455, 457, 458, 459, 460, 461, 462, 463, 467, 472, 478, 480, 496, 504, 532, 560, 564, 579, 611, 614, 615, 618, 620, 621, 625, 638, 646, 648, 657, 658, 665, 668, 669, 671, 686, 687, 688], "radx_dir": 10, "first": [10, 45, 58, 74, 167, 169, 252, 374, 375, 384, 387, 417, 428, 445, 455, 461, 462, 463, 467, 484, 497, 513, 584, 586, 589, 600, 601, 611, 613, 614, 615, 617, 618, 622, 624, 628, 629, 634, 635, 651, 660, 665, 666, 668, 669, 676, 684, 686, 687, 688, 691], "convert": [10, 13, 39, 430, 445, 455, 480, 597, 608, 611, 613, 615, 621, 668, 669], "cf": [10, 13, 45, 74, 376, 387, 388, 456, 484, 513, 611, 612, 613, 614, 632, 643, 663, 680, 688, 689], "radial": [10, 13, 45, 74, 167, 168, 376, 387, 432, 461, 484, 513, 579, 603, 612, 614, 615, 617, 621, 626, 632, 634, 643, 663, 675, 679, 680, 684, 688, 689], "radxconvert": 10, "path": [10, 15, 162, 163, 169, 482, 559, 612, 613, 615, 617, 618, 621, 622, 634, 635, 680, 690, 691], "radx": [10, 621], "grid": [11, 24, 45, 74, 212, 229, 231, 239, 243, 247, 253, 254, 255, 257, 260, 261, 266, 268, 269, 270, 272, 290, 292, 319, 321, 352, 354, 370, 371, 378, 379, 388, 389, 390, 421, 422, 423, 424, 425, 426, 427, 428, 435, 438, 439, 441, 443, 444, 445, 446, 455, 458, 459, 467, 484, 513, 560, 564, 565, 567, 568, 585, 605, 611, 615, 618, 621, 632, 637, 642, 643, 647, 648, 658, 661, 663, 665, 668, 669, 675, 679, 680, 681, 689, 693], "produc": [11, 170, 378, 387, 389, 393, 465, 470, 615, 617, 622, 669, 680, 691], "radx2grid": 11, "within": [11, 29, 47, 48, 128, 167, 168, 169, 170, 174, 178, 212, 424, 427, 428, 432, 435, 438, 439, 441, 443, 460, 486, 487, 574, 580, 582, 583, 591, 593, 595, 596, 609, 613, 615, 616, 617, 619, 621, 622, 634, 635, 647, 648, 649, 680, 684, 686, 691, 694], "lrose": 11, "must": [11, 161, 162, 163, 167, 328, 375, 378, 379, 384, 390, 444, 458, 461, 462, 463, 603, 615, 622, 668, 680, 690, 691], "been": [11, 12, 133, 135, 143, 150, 155, 166, 167, 183, 185, 193, 200, 205, 260, 336, 376, 378, 381, 382, 383, 385, 590, 612, 617, 622, 634, 668, 680, 686, 690, 691, 693], "write_grid": [11, 378], "ident": [11, 168, 169, 378, 427, 669], "layout": [11, 33, 378, 474, 621], "rainbow": 12, "rainbow5": [12, 621], "5": [12, 31, 158, 161, 163, 167, 170, 171, 172, 173, 210, 227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 388, 444, 445, 449, 455, 460, 472, 564, 589, 597, 611, 612, 613, 614, 615, 617, 618, 619, 620, 622, 627, 629, 630, 644, 645, 649, 651, 652, 653, 656, 657, 658, 659, 660, 661, 665, 666, 668, 669, 670, 671, 672, 676, 682, 684, 687, 688, 691], "22": [12, 611, 613, 617, 621, 634, 644, 666], "3": [12, 45, 74, 119, 120, 167, 168, 208, 209, 211, 239, 379, 383, 389, 424, 425, 426, 428, 432, 444, 445, 455, 460, 484, 513, 560, 564, 580, 611, 612, 613, 614, 617, 620, 622, 627, 628, 629, 630, 632, 635, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 679, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 694], "34": [12, 455, 467, 611, 668, 669], "16": [12, 444, 448, 469, 611, 612, 613, 615, 619, 622, 627, 629, 631, 638, 653, 659, 663, 665, 667, 684, 688, 691], "35": [12, 169, 173, 174, 611, 613, 614, 644, 655, 657, 658, 665, 687], "1": [12, 31, 45, 55, 74, 119, 123, 126, 143, 158, 159, 164, 167, 169, 173, 174, 193, 274, 376, 381, 382, 383, 388, 427, 428, 430, 435, 436, 438, 439, 441, 442, 444, 445, 446, 449, 455, 460, 461, 463, 472, 484, 494, 513, 564, 580, 581, 589, 590, 602, 609, 611, 613, 614, 615, 617, 619, 622, 624, 625, 627, 628, 629, 630, 634, 638, 639, 640, 641, 644, 645, 646, 648, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 668, 670, 671, 672, 677, 680, 682, 683, 684, 686, 688, 691, 693], "sinc": [12, 433, 461, 611, 613, 614, 615, 639, 668, 669, 683, 686, 688], "evolv": [12, 611], "constantli": 12, "guaranti": 12, "work": [12, 123, 126, 254, 303, 328, 336, 361, 381, 383, 467, 612, 613, 615, 617, 618, 619, 621, 622, 624, 625, 665, 680, 682, 683, 684, 686, 687, 688, 690, 691, 693, 694], "necessari": [12, 611, 618], "user": [12, 29, 48, 162, 163, 170, 361, 389, 444, 460, 487, 580, 607, 611, 614, 615, 617, 619, 621, 622, 671, 680, 682, 683, 684, 686, 687, 688, 690, 691, 693, 694], "adapt": [12, 119, 611, 694], "code": [12, 29, 167, 458, 469, 611, 613, 617, 619, 621, 625, 627, 628, 629, 630, 632, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 680, 690, 693, 694], "accord": [12, 166, 385, 428, 436, 448, 449, 450, 452, 453], "its": [12, 461, 599, 613, 614, 617, 618, 621, 622, 624, 625, 680, 690, 691, 694], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 373, 384, 400, 401, 411, 412, 472, 473, 485, 486, 488, 497, 516, 614, 615, 618, 621], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 137, 158, 167, 168, 169, 170, 172, 173, 174, 187, 208, 209, 210, 211, 213, 232, 293, 322, 355, 361, 370, 385, 388, 389, 405, 415, 417, 424, 425, 427, 428, 432, 438, 441, 446, 456, 472, 480, 484, 486, 487, 490, 491, 497, 506, 507, 508, 509, 510, 511, 512, 513, 534, 535, 536, 537, 538, 539, 540, 558, 560, 561, 562, 563, 570, 579, 583, 587, 588, 595, 596, 606, 608, 611, 612, 614, 615, 617, 618, 619, 621, 622, 624, 625, 628, 632, 635, 638, 639, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 665, 666, 668, 669, 671, 676, 677, 678, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692], "issu": [12, 29, 303, 336, 385, 388, 614, 619, 620, 621, 622, 632, 633, 636, 671, 680, 689, 690, 691, 694], "upstream": [12, 612, 622, 624, 691], "reflect": [12, 47, 117, 128, 144, 145, 158, 159, 161, 162, 163, 165, 170, 172, 173, 174, 175, 178, 194, 195, 209, 210, 229, 290, 319, 352, 369, 417, 428, 430, 431, 433, 437, 440, 444, 445, 446, 449, 451, 452, 453, 454, 455, 460, 461, 467, 486, 556, 569, 570, 572, 573, 594, 611, 612, 613, 617, 618, 619, 621, 626, 628, 629, 630, 631, 632, 634, 635, 638, 639, 640, 641, 643, 644, 646, 647, 648, 650, 653, 656, 659, 660, 662, 663, 664, 665, 666, 668, 669, 673, 676, 678, 680, 682, 683, 684, 686, 687, 688, 689], "dbz": [12, 161, 166, 173, 174, 430, 437, 440, 444, 445, 455, 460, 467, 612, 614, 617, 618, 630, 634, 638, 648, 655, 656, 662, 665, 668, 669, 671, 688], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 167, 168, 169, 432, 446, 447, 458, 469, 470, 497, 556, 579, 603, 615, 617, 618, 621, 622, 626, 631, 632, 634, 644, 650, 658, 660, 671, 675, 679, 680, 681, 687, 688, 689, 691], "v": [12, 41, 42, 44, 400, 401, 404, 411, 412, 414, 434, 436, 444, 469, 470, 613, 618, 619, 622, 657, 658, 669, 672, 691], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 590, 688], "width": [12, 253, 268, 328, 361, 370, 428, 613, 614, 615, 617, 621, 688], "w": [12, 62, 169, 444, 460, 501, 611, 670], "wu": [12, 424, 686], "wv": 12, "wvu": 12, "differenti": [12, 17, 161, 162, 163, 173, 174, 209, 446, 450, 453, 460, 461, 462, 463, 465, 468, 621, 650, 665, 680], "zdr": [12, 160, 162, 163, 166, 209, 434, 460, 626, 631, 632, 671, 689], "zdru": 12, "co": [12, 119, 123, 126, 434, 436, 445, 446, 455, 611, 613, 639, 665, 668, 669], "polar": [12, 379, 380, 463, 614, 639], "correl": [12, 172, 209, 210, 458, 460, 594, 617, 630, 649, 650, 667, 668, 669], "coeffici": [12, 161, 162, 163, 173, 174, 430, 444, 460, 594, 611, 621, 649, 650, 667], "rhohv": [12, 166, 172, 209, 210, 434, 436, 460, 621, 630, 649, 671, 688], "rhohvu": 12, "phase": [12, 17, 161, 162, 163, 169, 173, 174, 209, 441, 450, 453, 458, 460, 461, 462, 463, 465, 468, 621, 650, 680, 684], "phidp": [12, 162, 163, 173, 174, 209, 461, 621, 680], "uphidp": 12, "uphidpu": 12, "kdp": [12, 173, 174, 450, 453, 460, 461, 462, 463, 621, 670, 671, 680], "ukdp": 12, "ukdpu": 12, "signal": [12, 166, 172, 210, 431, 590, 614, 619], "qualiti": [12, 158, 159, 164, 166, 172, 210, 450, 462, 463, 611, 617, 619, 634], "sqi": [12, 621], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 162, 163, 211, 460, 611, 670], "temp": [12, 621], "posit": [12, 45, 74, 123, 126, 162, 163, 167, 370, 433, 461, 484, 513, 614, 621, 638, 644, 648, 688], "bin": [12, 45, 74, 119, 120, 121, 163, 384, 435, 438, 439, 441, 443, 446, 447, 484, 513, 589, 590, 611, 621, 638, 665, 684, 688], "respect": [12, 45, 74, 445, 455, 460, 467, 484, 513, 615], "iso0": [12, 162, 208, 460], "cfradial_outfil": 13, "head": [13, 45, 74, 213, 484, 513], "ridgelin": 13, "instrument": [13, 45, 74, 143, 155, 172, 193, 205, 209, 210, 391, 484, 513, 619, 621, 671, 684, 688], "rxm": [13, 621], "25": [13, 425, 426, 444, 611, 613, 617, 621, 634, 638, 647, 657, 658, 661, 666, 671, 682, 687], "rli": 13, "here": [13, 133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 266, 611, 612, 613, 614, 615, 617, 619, 620, 624, 630, 638, 665, 668, 669, 671, 676, 680, 682, 687, 690, 694], "float": [13, 24, 58, 123, 126, 133, 158, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 183, 208, 209, 210, 211, 213, 214, 227, 229, 230, 234, 235, 237, 238, 239, 240, 252, 253, 254, 255, 256, 257, 258, 266, 268, 269, 270, 271, 272, 273, 274, 275, 288, 290, 291, 295, 296, 298, 299, 300, 303, 304, 317, 319, 320, 326, 327, 328, 329, 331, 332, 333, 336, 337, 350, 352, 353, 359, 360, 361, 362, 364, 365, 366, 369, 370, 389, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 497, 560, 564, 575, 576, 577, 578, 579, 580, 582, 583, 589, 590, 591, 592, 593, 594, 595, 596, 597, 604, 605, 615, 619], "offset": [13, 158, 161, 173, 174, 213, 274, 303, 326, 336, 359, 445, 455, 589, 597, 611, 614, 615, 669], "exist": [13, 28, 32, 46, 47, 49, 77, 133, 135, 143, 150, 155, 171, 172, 183, 185, 193, 200, 205, 209, 210, 385, 461, 473, 482, 485, 486, 488, 516, 558, 608, 613, 614, 615, 621, 624, 627, 680, 682], "enter": [13, 612, 615, 622, 691], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 126, 173, 174, 211, 213, 227, 232, 233, 252, 253, 255, 257, 266, 268, 270, 272, 274, 288, 293, 294, 303, 317, 322, 323, 326, 328, 336, 350, 355, 356, 359, 361, 435, 441, 469, 474, 494, 495, 576, 578, 580, 582, 583, 591, 592, 593, 597, 601, 604, 613, 615, 619, 621, 622, 662, 666, 688, 691], "sinarame_h5": [14, 15, 621], "take": [15, 47, 168, 427, 428, 431, 461, 486, 613, 614, 615, 622, 628, 630, 634, 635, 638, 648, 668, 669, 691], "everi": [15, 462, 463, 622, 623, 680, 691], "one": [15, 25, 31, 39, 40, 45, 47, 74, 133, 135, 143, 150, 155, 171, 172, 183, 185, 193, 200, 205, 210, 387, 388, 390, 417, 424, 427, 428, 433, 461, 462, 463, 469, 472, 480, 481, 484, 486, 513, 581, 582, 583, 589, 594, 598, 603, 612, 614, 615, 617, 618, 620, 621, 622, 624, 632, 637, 638, 639, 644, 665, 680, 683, 688, 691, 694], "volum": [15, 45, 74, 167, 169, 170, 328, 361, 381, 382, 383, 391, 417, 425, 426, 435, 438, 439, 441, 442, 443, 456, 460, 484, 513, 582, 583, 585, 605, 608, 611, 614, 615, 617, 619, 621, 632, 639, 643, 663, 689], "folder": [15, 611, 619, 622, 691], "cfradial": [15, 376, 612, 621, 632, 643, 644, 647, 660, 662, 663, 678, 682, 689], "each": [15, 31, 39, 41, 45, 55, 74, 138, 159, 160, 161, 162, 163, 164, 168, 169, 170, 188, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 385, 389, 391, 417, 424, 427, 428, 442, 446, 460, 469, 472, 480, 484, 494, 513, 561, 562, 563, 611, 614, 615, 618, 619, 621, 622, 634, 640, 647, 657, 660, 665, 668, 669, 687, 688, 691, 693], "act": [16, 449, 452, 453, 611, 621, 665, 668, 682], "commun": [16, 611, 619, 622, 680, 691, 694], "softwar": [16, 239, 382, 389, 615, 617, 622, 680, 682, 683, 684, 686, 687, 688, 690, 691], "namespac": [16, 621], "current": [16, 27, 33, 133, 135, 143, 150, 155, 167, 183, 185, 193, 200, 205, 215, 217, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 251, 252, 253, 254, 256, 258, 266, 267, 268, 269, 271, 273, 276, 278, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 338, 340, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 368, 380, 418, 420, 435, 438, 439, 441, 442, 443, 461, 474, 589, 611, 612, 614, 615, 617, 619, 622, 691], "extens": [16, 215, 247, 261, 276, 305, 338, 389, 614, 624, 690], "wradlib": [16, 621, 680], "http": [16, 158, 159, 164, 381, 382, 383, 430, 433, 434, 436, 445, 446, 449, 450, 451, 455, 458, 460, 580, 594, 611, 613, 615, 617, 619, 622, 649, 658, 665, 668, 669, 680, 690, 691, 693, 694], "org": [16, 158, 159, 164, 430, 433, 434, 436, 445, 446, 449, 450, 451, 455, 458, 460, 580, 594, 619, 621, 622, 649, 665, 668, 669, 680, 691], "phidp_field": [17, 161, 162, 163, 173, 174, 461, 462, 463, 468, 627, 670], "phidp_texture_field": [17, 468], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 124, 128, 144, 145, 158, 159, 160, 161, 162, 163, 164, 172, 173, 174, 178, 194, 195, 208, 209, 210, 211, 213, 274, 303, 336, 370, 427, 428, 431, 432, 444, 445, 455, 458, 465, 466, 468, 469, 470, 472, 474, 484, 495, 496, 513, 579, 580, 589, 590, 591, 592, 593, 604, 611, 621, 622, 626, 627, 631, 632, 638, 639, 657, 658, 664, 668, 673, 676, 680, 684, 687, 689, 691], "textur": [17, 209, 432, 468, 579, 607, 621, 676, 680, 684], "real": [17, 167, 468, 632, 643, 668, 669, 694], "part": [17, 158, 159, 164, 446, 448, 468, 589, 614, 615, 617, 621, 634, 665, 680, 682, 683, 684, 686, 687, 688], "complex": [17, 468], "shift": [17, 173, 174, 213, 274, 303, 336, 459, 462, 468, 589, 621, 684], "texture_field": [17, 468], "refer": [17, 31, 45, 47, 74, 119, 123, 126, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 173, 174, 381, 382, 383, 424, 430, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 454, 455, 460, 461, 462, 463, 465, 467, 468, 469, 470, 472, 484, 486, 513, 580, 590, 594, 612, 617, 621, 622, 665, 680, 688, 691], "gourlei": [17, 166, 468], "j": [17, 123, 126, 158, 159, 164, 169, 173, 174, 433, 434, 436, 444, 445, 449, 455, 460, 462, 463, 465, 467, 468, 469, 470, 580, 612, 615, 619, 622, 627, 629, 640, 641, 650, 651, 653, 655, 659, 662, 668, 669, 680, 691], "p": [17, 20, 22, 28, 119, 123, 126, 158, 159, 164, 424, 438, 439, 441, 444, 448, 465, 468, 558, 580, 590, 614, 622, 680, 691], "tabari": [17, 468], "parent": [17, 468], "du": [17, 468], "chatelet": [17, 468], "fuzzi": [17, 468], "logic": [17, 133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 468], "algorithm": [17, 128, 167, 168, 169, 178, 424, 428, 444, 445, 455, 460, 461, 467, 468, 611, 621, 622, 626, 631, 632, 676, 680, 689, 691, 693], "separ": [17, 425, 426, 444, 458, 467, 468, 590, 594, 634, 639, 649, 669, 694], "precipit": [17, 428, 430, 439, 441, 444, 450, 454, 460, 468, 594, 611, 613, 615, 621, 622, 638, 649, 668, 669, 671, 680, 691], "nonprecipit": [17, 468], "echo": [17, 444, 445, 455, 460, 468, 621, 665, 668, 669, 687], "polarimetr": [17, 161, 162, 163, 166, 173, 174, 435, 436, 438, 439, 441, 449, 450, 460, 465, 468, 580, 621, 627], "observ": [17, 119, 439, 441, 445, 455, 461, 468, 665, 668, 669], "journal": [17, 167, 169, 424, 448, 450, 468, 590, 622, 680, 691], "atmospher": [17, 45, 74, 119, 120, 167, 168, 428, 448, 464, 468, 484, 513, 611, 614, 615, 617, 619, 622, 634, 680, 682, 683, 684, 686, 687, 688, 691], "ocean": [17, 158, 159, 164, 167, 173, 174, 434, 436, 445, 448, 454, 455, 465, 468, 580, 611, 615, 619, 634, 668, 669], "technologi": [17, 167, 448, 468], "24": [17, 468, 611, 613, 621, 635], "8": [17, 62, 161, 167, 173, 209, 252, 254, 256, 258, 269, 271, 273, 444, 460, 468, 501, 611, 613, 614, 615, 617, 618, 624, 630, 635, 638, 640, 646, 647, 657, 661, 665, 666, 669, 673, 676, 682, 683, 684, 686, 687, 688], "1439": [17, 468], "1451": [17, 468], "filetyp": [19, 25, 615], "need": [19, 45, 54, 56, 57, 74, 389, 445, 455, 484, 493, 495, 496, 513, 591, 604, 613, 614, 615, 618, 619, 620, 621, 622, 624, 634, 638, 644, 668, 669, 680, 682, 683, 684, 686, 687, 688, 690, 691, 694], "being": [19, 21, 167, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 428, 433, 463, 595, 596, 613, 615, 617, 618, 621, 658, 690], "keep": [19, 167, 385, 605, 615, 622, 638, 668, 669, 691, 694], "string": [19, 31, 45, 74, 158, 159, 160, 175, 229, 232, 233, 237, 240, 253, 268, 290, 293, 294, 298, 300, 319, 322, 323, 324, 325, 326, 329, 331, 333, 352, 355, 356, 357, 358, 359, 362, 364, 366, 427, 428, 456, 458, 462, 463, 465, 469, 470, 472, 484, 513, 613, 614, 615, 621, 622, 644, 691], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 128, 167, 168, 178, 213, 274, 303, 336, 393, 476, 477, 478, 502, 503, 504, 505, 530, 531, 532, 533, 615, 619, 621, 648, 671], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 133, 143, 144, 145, 155, 174, 183, 193, 194, 195, 205, 370, 385, 461, 462, 463, 465, 469, 470, 472, 484, 508, 511, 512, 513, 536, 539, 540, 592, 611, 613, 615, 621, 634, 654], "dic": [22, 31, 45, 46, 74, 393, 472, 484, 485, 513], "colormap": [23, 212, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 370, 389, 614, 615, 621, 632, 643, 649, 663, 669, 670, 689, 693], "select": [24, 50, 59, 88, 169, 435, 438, 439, 441, 443, 489, 498, 527, 611, 614, 617, 621, 624, 671], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 123, 126, 128, 155, 158, 161, 162, 164, 165, 167, 168, 170, 171, 172, 173, 174, 178, 205, 208, 209, 210, 211, 213, 226, 227, 234, 237, 238, 239, 240, 241, 254, 269, 274, 287, 288, 295, 298, 299, 300, 301, 303, 316, 317, 326, 327, 328, 331, 332, 333, 334, 336, 349, 350, 359, 360, 361, 364, 365, 366, 367, 385, 389, 417, 425, 426, 427, 428, 431, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 445, 446, 449, 451, 452, 453, 455, 459, 460, 461, 462, 465, 467, 469, 470, 474, 484, 489, 490, 491, 493, 494, 495, 496, 497, 513, 564, 581, 589, 597, 611, 612, 613, 614, 615, 617, 618, 619, 622, 624, 625, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692], "limit": [24, 167, 168, 172, 173, 174, 208, 209, 210, 211, 229, 242, 266, 290, 302, 319, 335, 352, 368, 379, 390, 425, 426, 461, 605, 614, 615, 618, 621, 639, 640, 641, 646, 647, 665, 686], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 143, 155, 167, 168, 169, 171, 172, 193, 205, 209, 210, 215, 217, 226, 227, 229, 234, 238, 239, 240, 276, 278, 287, 288, 290, 295, 299, 300, 305, 307, 316, 317, 319, 327, 328, 332, 333, 338, 340, 349, 350, 352, 360, 361, 365, 366, 381, 382, 383, 385, 417, 425, 426, 432, 438, 441, 469, 484, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 526, 527, 528, 529, 534, 535, 536, 537, 538, 539, 540, 561, 562, 582, 583, 589, 611, 612, 614, 615, 617, 618, 619, 621, 629, 632, 634, 637, 638, 642, 657, 658, 660, 665, 666, 668, 669, 671, 672, 676, 684, 687, 688, 689], "get": [24, 159, 175, 244, 245, 246, 265, 376, 393, 403, 413, 417, 611, 612, 614, 615, 617, 618, 621, 635, 657, 658, 665, 668, 669, 671, 682, 684, 687, 688, 690, 692, 694], "relat": [24, 163, 212, 390, 430, 445, 449, 452, 453, 454, 455, 462, 467, 580, 614, 621, 622, 668, 669, 680, 690, 691], "instac": 24, "nyquist": [24, 58, 167, 168, 169, 432, 497, 579, 621, 671, 676, 684, 688], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 143, 155, 158, 163, 164, 167, 168, 170, 171, 173, 174, 193, 205, 209, 215, 216, 217, 226, 230, 234, 235, 237, 238, 239, 247, 248, 249, 250, 252, 254, 261, 262, 263, 264, 266, 269, 276, 277, 278, 287, 291, 295, 296, 298, 299, 305, 306, 307, 316, 320, 327, 328, 329, 331, 332, 338, 339, 340, 349, 353, 360, 361, 362, 364, 365, 370, 389, 425, 426, 428, 432, 435, 437, 438, 439, 441, 445, 455, 461, 463, 469, 472, 474, 484, 490, 491, 493, 494, 495, 496, 497, 513, 561, 562, 563, 564, 579, 580, 581, 590, 592, 607, 613, 615, 621, 622, 691], "consid": [24, 161, 170, 171, 369, 425, 426, 444, 445, 455, 581, 582, 583, 589, 590, 597, 639, 668], "vmin": [24, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 259, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 370, 389, 611, 612, 613, 614, 615, 617, 618, 619, 621, 627, 629, 634, 635, 638, 641, 644, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 671, 676, 677, 678, 683, 684, 686, 687, 693], "vmax": [24, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 259, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 370, 389, 611, 612, 613, 614, 615, 617, 618, 619, 621, 627, 629, 634, 635, 638, 641, 644, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 671, 676, 677, 678, 683, 684, 686, 687, 693], "2": [24, 119, 123, 169, 170, 171, 209, 227, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 252, 253, 254, 256, 258, 268, 269, 271, 273, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 317, 319, 322, 323, 327, 330, 331, 332, 333, 335, 350, 352, 355, 356, 360, 361, 363, 364, 365, 366, 368, 381, 382, 383, 385, 401, 412, 417, 424, 425, 426, 428, 432, 434, 436, 439, 444, 445, 446, 455, 460, 461, 469, 560, 564, 579, 594, 611, 613, 614, 615, 617, 619, 622, 625, 628, 629, 630, 636, 638, 639, 645, 646, 648, 651, 653, 654, 657, 658, 661, 665, 666, 668, 671, 672, 676, 680, 682, 683, 684, 686, 687, 688, 691, 692], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 393, 428, 472, 486, 487, 489, 490, 491, 493, 608, 614, 620, 621, 628, 669, 683], "field_map": 25, "anoth": [25, 417, 435, 438, 439, 441, 443, 594, 614, 615, 621, 638, 682, 687, 690, 694], "fill": [27, 161, 162, 163, 467, 615, 619, 621, 669, 682, 683], "empti": [28, 401, 412, 462, 463, 558, 560, 563, 612, 621, 682], "control": [29, 158, 159, 164, 167, 385, 387, 388, 428, 460, 461, 617, 618, 619, 665, 686], "singl": [29, 168, 169, 170, 171, 232, 233, 235, 237, 293, 294, 296, 298, 322, 323, 329, 331, 355, 356, 362, 364, 389, 428, 566, 589, 608, 611, 614, 615, 617, 621, 622, 632, 634, 637, 638, 642, 666, 689, 691], "self": [29, 173, 174, 614, 615, 622, 683, 686, 691], "descrip": 29, "exampl": [29, 47, 128, 178, 227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 393, 417, 421, 422, 423, 427, 428, 469, 482, 486, 589, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 682, 684, 687, 688, 689, 691, 693, 694], "default_config": 29, "modifi": [29, 45, 74, 170, 484, 513, 612, 621, 622, 632, 643, 663, 689, 691], "environment": [29, 611, 612, 680, 690], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 160, 213, 243, 260, 274, 303, 336, 387, 388, 417, 425, 449, 456, 460, 461, 464, 465, 472, 480, 481, 484, 494, 513, 590, 611, 613, 614, 618, 621, 634, 638, 665, 666, 668, 669, 671, 680, 682, 683, 688, 690], "pyart_config": 29, "point": [29, 31, 33, 47, 124, 161, 162, 163, 164, 174, 230, 235, 252, 253, 268, 291, 296, 303, 320, 325, 326, 329, 353, 358, 359, 362, 379, 380, 383, 385, 389, 424, 427, 428, 435, 438, 439, 441, 443, 445, 446, 455, 467, 472, 474, 486, 560, 581, 590, 593, 597, 608, 611, 613, 615, 617, 621, 624, 630, 632, 646, 654, 664, 665, 668, 673, 676, 680, 684, 686, 688, 689], "new": [29, 47, 48, 50, 133, 135, 143, 150, 155, 170, 183, 185, 193, 200, 205, 435, 438, 439, 441, 442, 443, 447, 459, 465, 469, 486, 487, 489, 594, 605, 617, 618, 621, 622, 624, 625, 628, 638, 647, 666, 669, 670, 676, 680, 683, 684, 691, 694], "execut": [29, 621, 631, 636, 642, 663, 673, 674, 679, 689], "full": [29, 62, 170, 171, 385, 501, 617, 619, 621, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678], "permiss": 29, "secur": 29, "do": [29, 45, 74, 167, 172, 209, 210, 389, 390, 484, 513, 615, 617, 618, 619, 621, 622, 635, 668, 669, 682, 683, 684, 686, 687, 690, 691, 694], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 128, 133, 135, 143, 150, 155, 161, 163, 173, 174, 178, 183, 185, 193, 200, 205, 239, 252, 390, 391, 393, 404, 406, 414, 425, 426, 427, 444, 456, 461, 462, 463, 469, 472, 486, 493, 495, 496, 589, 590, 609, 614, 615, 621, 622, 624, 627, 652, 665, 676, 677, 678, 680, 687, 691, 693], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 144, 145, 167, 194, 195, 384, 393, 472, 482, 484, 486, 490, 491, 493, 495, 513, 574, 611, 613, 615, 618, 621, 622, 623, 624, 625, 665, 668, 669, 671, 683, 686, 688, 690, 691, 693], "home": [29, 617, 619, 622, 691, 694], "make": [29, 31, 472, 560, 564, 565, 567, 568, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 625, 638, 648, 657, 665, 668, 676, 680, 682, 683, 690, 691, 694], "adjust": [29, 123, 242, 302, 335, 368, 444, 615, 621, 644, 649, 657, 669], "login": [29, 619], "": [29, 31, 45, 58, 62, 74, 119, 120, 123, 126, 168, 169, 173, 174, 215, 217, 227, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 276, 278, 288, 295, 299, 300, 305, 307, 317, 327, 332, 333, 338, 340, 350, 360, 365, 366, 370, 398, 399, 405, 409, 410, 415, 417, 419, 424, 434, 438, 445, 446, 448, 449, 455, 457, 458, 461, 462, 463, 465, 467, 470, 472, 484, 497, 501, 513, 590, 594, 611, 612, 613, 614, 615, 617, 618, 619, 621, 623, 624, 628, 634, 635, 638, 644, 647, 648, 649, 658, 665, 666, 668, 669, 671, 672, 676, 680, 682, 683, 684, 686, 687, 688, 692, 693], "also": [29, 45, 74, 133, 183, 212, 228, 251, 267, 289, 318, 351, 382, 383, 387, 389, 391, 403, 413, 417, 425, 445, 455, 484, 513, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 634, 638, 665, 668, 669, 680, 682, 686, 688, 690, 691, 692, 694], "shell": 29, "session": 29, "modif": [29, 47, 486, 621], "last": [29, 45, 74, 167, 227, 228, 234, 238, 239, 240, 251, 256, 258, 260, 267, 269, 271, 273, 288, 289, 295, 299, 300, 317, 318, 327, 328, 332, 333, 336, 350, 351, 360, 361, 365, 366, 484, 513, 589, 614, 615, 617, 620, 621, 640, 647, 669, 688], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 138, 161, 162, 163, 168, 169, 174, 188, 252, 492, 500, 508, 512, 526, 529, 536, 540, 611, 613, 614, 615, 617, 618, 619, 621, 622, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 680, 691], "interact": [30, 611, 614], "weather": [30, 119, 167, 424, 434, 435, 439, 461, 613, 615, 618, 621, 622, 634, 644, 680, 682, 683, 684, 686, 687, 688, 691], "time": [31, 39, 40, 45, 74, 159, 164, 167, 215, 217, 227, 229, 234, 238, 239, 240, 276, 278, 288, 290, 295, 299, 300, 305, 307, 317, 319, 327, 328, 332, 333, 338, 340, 350, 352, 360, 361, 365, 366, 374, 375, 385, 387, 388, 417, 420, 428, 435, 438, 439, 441, 442, 443, 444, 456, 458, 472, 480, 481, 484, 513, 584, 587, 611, 612, 613, 615, 617, 619, 621, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 682, 688, 694], "origin_latitud": [31, 472], "origin_longitud": [31, 472], "origin_altitud": [31, 472], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 126, 213, 215, 224, 227, 229, 232, 234, 237, 238, 239, 240, 242, 252, 254, 256, 258, 269, 271, 273, 274, 276, 285, 288, 290, 293, 295, 298, 299, 300, 302, 303, 305, 314, 317, 319, 322, 325, 327, 331, 332, 333, 335, 336, 338, 347, 350, 352, 355, 358, 360, 364, 365, 366, 368, 417, 421, 422, 423, 424, 425, 426, 427, 428, 434, 445, 455, 458, 459, 467, 472, 478, 480, 496, 504, 532, 560, 611, 613, 614, 615, 618, 619, 625, 638, 646, 647, 648, 657, 658, 665, 666, 668, 669], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 121, 161, 163, 173, 174, 225, 286, 315, 348, 379, 389, 390, 421, 422, 423, 424, 426, 427, 428, 430, 433, 444, 445, 449, 452, 453, 454, 455, 458, 472, 478, 480, 484, 496, 504, 513, 532, 560, 618, 627, 639, 655, 657, 658, 668, 669, 671, 683], "radar_latitud": [31, 472, 591, 604], "radar_longitud": [31, 472, 591, 604], "radar_altitud": [31, 472], "radar_tim": [31, 472], "radar_nam": [31, 472], "store": [31, 45, 74, 167, 168, 169, 393, 428, 433, 435, 438, 439, 441, 442, 443, 472, 484, 513, 611, 613, 615, 619, 621, 634, 666, 680, 683, 686, 688, 694], "rectilinear": [31, 472], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 126, 379, 416, 417, 424, 427, 428, 472, 474, 480, 484, 513, 632, 637, 642, 646, 647, 680, 681, 689], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 126, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 370, 388, 416, 417, 419, 424, 428, 442, 446, 472, 474, 480, 484, 495, 513, 560, 579, 611, 613, 614, 615, 621, 626, 632, 635, 637, 638, 639, 640, 641, 666, 680, 686, 688], "section": [31, 45, 47, 74, 227, 252, 288, 317, 350, 426, 428, 472, 484, 486, 513, 582, 583, 611, 615, 616, 620, 621, 622, 632, 643, 663, 665, 668, 669, 680, 689, 691], "To": [31, 47, 172, 208, 209, 210, 211, 387, 388, 390, 472, 486, 608, 613, 618, 619, 622, 624, 669, 671, 680, 683, 686, 690, 691, 694], "creat": [31, 42, 45, 47, 50, 74, 167, 168, 169, 170, 172, 208, 209, 210, 211, 212, 213, 226, 240, 243, 260, 274, 287, 300, 303, 316, 328, 333, 336, 349, 361, 366, 382, 387, 388, 389, 390, 391, 427, 428, 435, 438, 439, 441, 442, 443, 465, 470, 472, 482, 484, 486, 489, 513, 602, 603, 605, 611, 615, 617, 621, 622, 627, 628, 629, 632, 635, 638, 640, 641, 643, 644, 647, 648, 662, 663, 664, 668, 669, 673, 678, 680, 681, 683, 686, 689, 691], "legaci": [31, 433, 472], "from_legacy_paramet": [31, 472], "ax": [31, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 251, 252, 253, 254, 256, 258, 266, 267, 268, 269, 271, 273, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361, 363, 364, 365, 366, 367, 368, 421, 422, 423, 445, 455, 459, 467, 472, 611, 612, 613, 614, 615, 617, 618, 619, 621, 627, 629, 630, 634, 638, 639, 640, 641, 644, 646, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 665, 666, 667, 668, 669, 670, 671, 672, 676, 684], "moment": [31, 39, 45, 74, 117, 160, 166, 167, 168, 169, 172, 209, 210, 381, 382, 383, 428, 466, 472, 480, 484, 513, 556, 590, 614, 621, 643, 663, 680, 687, 689], "describ": [31, 45, 74, 172, 208, 209, 210, 211, 253, 268, 455, 472, 484, 513, 617, 668, 669], "geograph": [31, 45, 56, 74, 122, 123, 124, 125, 126, 303, 328, 336, 361, 388, 428, 472, 484, 495, 513, 615, 680], "origin": [31, 39, 167, 168, 169, 213, 274, 303, 336, 385, 387, 388, 393, 395, 424, 428, 455, 472, 480, 582, 583, 611, 612, 613, 615, 621, 622, 628, 638, 639, 640, 641, 665, 667, 668, 669, 691], "distanc": [31, 39, 57, 119, 120, 121, 227, 238, 288, 299, 317, 332, 350, 365, 417, 418, 421, 422, 423, 425, 426, 427, 428, 435, 437, 441, 458, 460, 463, 472, 480, 496, 580, 582, 583, 591, 592, 593, 604, 611, 612, 613, 638, 650, 655, 656, 657], "axi": [31, 39, 45, 74, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 251, 252, 253, 254, 256, 258, 266, 267, 268, 269, 271, 273, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 317, 318, 319, 320, 321, 322, 323, 327, 328, 330, 331, 332, 333, 335, 350, 351, 352, 353, 354, 355, 356, 360, 361, 363, 364, 365, 366, 368, 379, 389, 472, 480, 484, 513, 581, 611, 614, 615, 619, 646, 658, 665, 668, 672, 688], "dimension": [31, 39, 167, 169, 424, 446, 455, 467, 472, 480, 638, 665, 668, 669], "space": [31, 45, 74, 124, 229, 290, 319, 352, 390, 428, 444, 445, 455, 458, 472, 484, 513, 611, 614, 668, 682], "along": [31, 160, 168, 171, 252, 255, 256, 257, 258, 270, 271, 272, 273, 442, 472, 580, 581, 582, 583, 592, 593, 605, 607, 613, 614, 615, 621, 668, 676], "three": [31, 169, 172, 210, 389, 446, 455, 467, 472, 614, 624, 665, 668, 669], "repeat": [31, 472], "throughout": [31, 472, 665], "nz": [31, 472], "nx": [31, 472], "ny": [31, 472], "dimens": [31, 167, 379, 425, 426, 428, 432, 433, 445, 455, 456, 458, 461, 463, 467, 472, 579, 605, 611, 614, 615, 621, 639, 666, 668, 669, 682, 686, 688], "transform": [31, 45, 74, 122, 123, 124, 125, 126, 232, 239, 293, 303, 322, 336, 355, 361, 388, 428, 444, 460, 472, 484, 513, 613, 615, 618, 621, 644, 668, 669], "proj": [31, 45, 74, 122, 124, 125, 266, 336, 472, 484, 513, 621], "pyart_aeqd": [31, 45, 74, 122, 124, 125, 472, 484, 513], "nativ": [31, 45, 74, 122, 124, 125, 373, 428, 433, 472, 484, 513, 621], "azimuth": [31, 45, 51, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 126, 213, 214, 227, 229, 232, 234, 238, 239, 240, 256, 258, 269, 271, 273, 274, 275, 288, 290, 293, 295, 299, 300, 303, 304, 317, 319, 322, 327, 328, 332, 333, 336, 337, 350, 352, 355, 360, 361, 365, 366, 385, 389, 426, 433, 435, 441, 442, 463, 469, 470, 472, 484, 490, 494, 496, 506, 513, 534, 580, 582, 583, 589, 591, 592, 608, 614, 615, 621, 622, 660, 662, 666, 682, 688, 691], "equidist": [31, 45, 74, 122, 123, 124, 125, 126, 232, 293, 322, 355, 361, 389, 428, 472, 484, 513, 615], "pyproj": [31, 45, 74, 122, 124, 125, 472, 484, 513, 621, 690], "projparam": [31, 34, 45, 74, 122, 124, 125, 472, 475, 484, 513], "special": [31, 45, 74, 472, 484, 513, 615], "_include_lon_0_lat_0": [31, 45, 74, 472, 484, 513], "remov": [31, 45, 56, 57, 74, 161, 162, 163, 167, 172, 208, 209, 210, 211, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 394, 400, 401, 407, 411, 412, 445, 446, 455, 472, 484, 495, 496, 513, 613, 615, 618, 619, 621, 622, 627, 640, 647, 648, 657, 665, 668, 684, 687, 691, 693], "interpret": [31, 45, 74, 168, 169, 388, 436, 472, 484, 513, 595, 596, 615, 665], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 122, 123, 124, 126, 213, 232, 233, 252, 253, 254, 255, 257, 258, 266, 268, 270, 272, 273, 274, 293, 294, 303, 322, 323, 324, 326, 328, 336, 355, 356, 357, 359, 361, 370, 428, 435, 441, 443, 472, 474, 477, 480, 484, 495, 513, 580, 591, 592, 593, 604, 611, 613, 614, 615, 618, 619, 632, 633, 636, 646, 654, 661, 666, 668, 669, 682, 683, 688, 689], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 122, 123, 124, 126, 213, 232, 233, 252, 253, 254, 255, 256, 257, 266, 268, 270, 271, 272, 274, 293, 294, 303, 322, 323, 324, 326, 328, 336, 355, 356, 357, 359, 361, 370, 428, 435, 441, 443, 472, 474, 477, 480, 484, 495, 513, 580, 591, 592, 593, 604, 611, 613, 614, 615, 618, 619, 632, 633, 636, 646, 654, 661, 666, 668, 669, 682, 683, 688, 689], "ad": [31, 45, 47, 74, 171, 173, 174, 260, 326, 359, 425, 427, 444, 445, 455, 472, 484, 486, 513, 564, 612, 614, 617, 619, 621, 622, 657, 658, 682, 683, 690, 691], "lon_0": [31, 45, 74, 123, 126, 328, 361, 472, 484, 513, 654], "lat_0": [31, 45, 74, 123, 126, 328, 361, 472, 484, 513, 654], "get_projparam": [31, 472], "evalu": [31, 393, 395, 450, 472, 617, 621], "locat": [31, 33, 45, 55, 56, 57, 74, 213, 227, 228, 229, 232, 233, 234, 235, 236, 238, 239, 240, 251, 252, 254, 256, 258, 266, 267, 269, 271, 273, 274, 288, 289, 290, 293, 294, 295, 296, 297, 299, 300, 303, 317, 318, 319, 322, 323, 325, 327, 328, 329, 330, 332, 333, 336, 350, 351, 352, 355, 356, 358, 360, 361, 362, 363, 365, 366, 381, 382, 384, 390, 417, 424, 427, 428, 472, 474, 484, 494, 495, 496, 513, 560, 574, 580, 591, 592, 593, 611, 612, 613, 615, 617, 621, 622, 652, 654, 666, 676, 677, 678, 680, 686, 690, 691], "up": [31, 45, 74, 133, 135, 143, 150, 155, 162, 163, 183, 185, 193, 200, 205, 425, 426, 430, 433, 439, 446, 449, 452, 453, 464, 472, 484, 513, 579, 612, 613, 617, 619, 620, 621, 624, 630, 645, 665, 668, 684, 688, 692], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 252, 385, 391, 442, 456, 472, 484, 499, 500, 511, 512, 513, 528, 529, 539, 540, 585, 611, 612, 613, 614, 615, 617, 618, 619, 622, 634, 644, 646, 657, 658, 680, 682, 691, 692], "collect": [31, 143, 155, 193, 205, 375, 381, 382, 383, 385, 416, 427, 428, 472, 614, 615, 622, 634, 651, 666, 680, 691, 692, 694], "nradar": [31, 472], "whose": [31, 384, 423, 472, 611], "wa": [31, 56, 57, 143, 168, 169, 193, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 472, 495, 496, 594, 611, 613, 615, 617, 618, 619, 621, 680, 694], "projection_proj": [31, 472], "instanc": [31, 42, 48, 167, 168, 169, 227, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 390, 391, 433, 472, 487, 594, 598, 603, 613, 615, 621], "valueerror": [31, 32, 46, 47, 472, 473, 485, 486, 615], "point_z": [31, 388, 472, 665], "point_x": [31, 388, 472], "point_i": [31, 388, 472], "func": [31, 472, 614, 621], "init_point_x_y_z": [31, 472], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 472, 477, 478, 484, 495, 503, 504, 505, 513, 531, 532, 533, 687], "point_latitud": [31, 388, 472], "point_longitud": [31, 388, 472], "perform": [31, 45, 56, 57, 58, 74, 133, 135, 143, 150, 155, 166, 167, 168, 169, 171, 183, 185, 193, 200, 205, 227, 232, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 293, 295, 298, 299, 300, 317, 322, 327, 328, 331, 332, 333, 336, 350, 355, 360, 361, 364, 365, 366, 381, 384, 389, 425, 426, 435, 438, 439, 441, 455, 461, 472, 484, 495, 496, 497, 513, 608, 614, 615, 626, 627, 629, 632, 640, 641, 646, 647, 680], "invers": [31, 45, 74, 469, 472, 484, 513, 611], "rel": [31, 45, 74, 162, 208, 239, 326, 359, 428, 472, 484, 513, 611, 621, 622, 669, 688, 691], "init_point_longitude_latitud": [31, 472], "point_altitud": [31, 35, 388, 472, 476], "init_point_altitud": [31, 472], "init": [31, 243, 260, 393, 472, 591, 619, 621], "field_dict": [32, 460, 473], "replace_exist": [32, 46, 47, 48, 473, 485, 486, 487, 617, 621, 622, 668, 669, 671, 676, 683, 684, 691], "add": [32, 46, 47, 170, 174, 227, 229, 234, 237, 238, 239, 240, 252, 253, 254, 256, 258, 266, 268, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 435, 438, 439, 441, 443, 460, 473, 485, 486, 612, 613, 614, 618, 621, 622, 638, 644, 646, 648, 657, 658, 660, 666, 668, 669, 670, 671, 676, 684, 690, 691, 693, 694], "replac": [32, 46, 47, 48, 133, 135, 143, 150, 155, 168, 169, 183, 185, 193, 200, 205, 473, 485, 486, 487, 610, 618, 619, 621], "overwrit": [32, 473, 589, 628], "alreadi": [32, 46, 47, 473, 485, 486], "level": [33, 39, 41, 42, 45, 62, 74, 162, 163, 247, 248, 249, 250, 254, 256, 258, 261, 262, 263, 264, 269, 271, 273, 381, 382, 383, 389, 390, 458, 467, 469, 474, 480, 484, 501, 513, 590, 611, 613, 614, 621, 622, 657, 658, 661, 665, 667, 677, 680, 686, 688, 691, 693], "height": [33, 39, 41, 42, 158, 159, 160, 162, 163, 164, 175, 208, 254, 269, 328, 361, 425, 426, 428, 431, 435, 438, 439, 441, 443, 445, 446, 455, 456, 460, 464, 467, 469, 470, 474, 480, 603, 611, 614, 615, 617, 621, 622, 644, 655, 665, 666, 672, 687, 691], "determin": [33, 45, 74, 158, 160, 167, 168, 169, 252, 254, 256, 258, 266, 269, 271, 273, 328, 361, 369, 373, 381, 382, 385, 390, 391, 432, 445, 448, 449, 450, 452, 453, 455, 467, 469, 474, 484, 513, 589, 590, 597, 603, 606, 614, 615, 621, 622, 668, 676, 691], "same": [33, 45, 47, 55, 56, 57, 74, 123, 126, 135, 150, 167, 185, 200, 239, 328, 361, 379, 385, 389, 390, 391, 428, 445, 446, 455, 458, 464, 474, 484, 486, 494, 495, 496, 513, 564, 589, 591, 604, 608, 611, 615, 618, 619, 622, 634, 657, 658, 665, 668, 669, 682, 687, 691, 694], "interpol": [33, 57, 120, 124, 227, 234, 238, 239, 240, 252, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 375, 381, 427, 428, 435, 438, 439, 441, 443, 456, 463, 464, 469, 474, 496, 603, 615, 621, 622, 668, 669, 686, 691], "extrapol": [33, 120, 124, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 474, 615], "boundari": [33, 120, 124, 171, 245, 246, 266, 361, 463, 474, 564, 615, 670], "center": [33, 45, 57, 74, 119, 120, 121, 123, 124, 126, 168, 227, 232, 234, 238, 239, 240, 253, 255, 256, 257, 258, 268, 269, 270, 271, 272, 273, 288, 293, 295, 299, 300, 303, 317, 322, 327, 328, 332, 333, 350, 355, 360, 361, 365, 366, 381, 383, 421, 422, 423, 435, 438, 439, 441, 443, 474, 484, 496, 513, 560, 564, 579, 611, 613, 614, 615, 617, 618, 644, 676, 684, 688], "2d": [33, 55, 56, 57, 120, 379, 389, 460, 463, 474, 494, 495, 496, 579, 611, 615, 628, 632, 637, 638, 642, 665, 688, 689], "point_": [36, 37, 477, 478], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 144, 145, 194, 195, 418, 420, 469, 479, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 611, 615, 622, 691], "xarrai": [39, 243, 252, 254, 370, 425, 426, 480, 580, 593, 611, 621, 661, 666, 676, 680, 690], "netcdf4": [40, 382, 387, 388, 481, 611, 612, 621, 655, 680, 682, 690, 694], "arm_time_vari": [40, 387, 388, 481], "arm_alt_lat_lon_vari": [40, 388, 481], "save": [40, 215, 227, 229, 234, 238, 239, 240, 247, 261, 276, 288, 290, 295, 299, 300, 305, 317, 319, 327, 328, 332, 333, 338, 350, 352, 360, 361, 365, 366, 370, 388, 390, 481, 615, 617, 618, 680, 681], "netcdf4_class": [40, 387, 388, 481], "netcdf3_class": [40, 387, 388, 481], "netcdf3_64bit": [40, 387, 388, 481], "base_tim": [40, 387, 388, 481, 614, 666], "time_offset": [40, 387, 388, 481, 614, 666], "alt": [40, 56, 388, 481, 495, 614, 615, 619, 621], "lat": [40, 56, 122, 123, 124, 125, 126, 252, 253, 254, 255, 256, 257, 258, 268, 270, 271, 272, 273, 324, 326, 328, 357, 359, 388, 389, 435, 441, 443, 481, 495, 611, 614, 615, 618, 619, 621, 646, 648, 661, 686], "lon": [40, 56, 122, 123, 124, 125, 126, 252, 253, 254, 255, 256, 257, 258, 268, 270, 271, 272, 273, 324, 326, 328, 357, 359, 388, 389, 435, 441, 443, 481, 495, 611, 614, 615, 618, 619, 621, 648, 661], "speed": [41, 42, 428, 469, 470, 579, 614, 615, 617, 621, 622, 672, 691], "direct": [41, 62, 385, 461, 469, 470, 501, 621, 622, 672, 691], "horizont": [41, 42, 43, 44, 45, 74, 161, 165, 166, 167, 227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 299, 300, 317, 318, 319, 327, 328, 332, 333, 350, 351, 352, 360, 361, 365, 366, 374, 375, 425, 426, 469, 484, 513, 603, 613, 614, 617, 621, 622, 648, 658, 677, 688, 691, 693], "wind": [41, 42, 43, 44, 167, 168, 374, 375, 469, 470, 603, 613, 614, 615, 617, 621, 622, 672, 691], "profil": [41, 160, 167, 374, 375, 435, 438, 439, 441, 443, 456, 462, 463, 464, 465, 580, 603, 621, 622, 629, 632, 664, 665, 673, 689, 691], "1d": [41, 42, 120, 124, 460, 581, 611, 621, 688], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 126, 160, 213, 274, 303, 325, 328, 336, 358, 361, 417, 418, 420, 421, 422, 423, 424, 427, 428, 431, 445, 455, 458, 461, 464, 467, 469, 495, 496, 497, 560, 591, 604, 614, 615, 621, 622, 638, 672, 686, 688, 691], "abov": [41, 42, 45, 47, 74, 130, 131, 146, 161, 162, 163, 167, 170, 171, 172, 173, 174, 180, 181, 196, 208, 209, 210, 211, 232, 233, 293, 294, 322, 323, 355, 356, 369, 428, 431, 444, 445, 455, 469, 484, 486, 513, 580, 589, 590, 592, 593, 611, 612, 613, 614, 621, 622, 624, 632, 638, 656, 658, 664, 665, 672, 673, 676, 680, 682, 684, 689, 691, 694], "sea": [41, 42, 45, 74, 469, 484, 513, 614, 621, 622, 691], "were": [41, 42, 133, 135, 143, 183, 185, 193, 469, 613, 615, 617, 618, 622, 691, 693], "sampl": [41, 42, 159, 164, 469, 470, 471, 565, 567, 568, 590, 611, 613, 614, 619, 621, 622, 634, 635, 644, 667, 670, 672, 680, 691, 693], "per": [41, 42, 43, 44, 58, 167, 370, 428, 469, 497, 561, 562, 563, 622, 691], "second": [41, 42, 43, 44, 47, 58, 119, 167, 385, 393, 417, 463, 469, 486, 497, 589, 600, 601, 611, 614, 617, 622, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 687, 688, 691], "north": [41, 45, 74, 252, 254, 266, 328, 361, 484, 513, 580, 593, 611, 614, 615, 650, 688], "east": [41, 227, 238, 252, 288, 299, 317, 332, 350, 365, 580, 593, 611, 614, 615, 650], "u_wind": [41, 42, 469, 470, 622, 672, 691], "compon": [41, 42, 43, 44, 444, 614, 622, 639, 691], "v_wind": [41, 42, 469, 470, 622, 672, 691], "classmethod": 42, "_rang": [45, 74, 437, 484, 513], "scan_typ": [45, 74, 213, 226, 274, 287, 303, 316, 336, 349, 484, 513, 619, 688], "sweep_numb": [45, 74, 484, 513, 614, 621, 655, 682, 688], "sweep_mod": [45, 74, 376, 484, 513, 614, 621, 682, 688], "fixed_angl": [45, 74, 213, 274, 303, 336, 484, 513, 614, 619, 621, 655, 656, 660, 682, 688], "sweep_start_ray_index": [45, 74, 484, 513, 614, 682, 688], "sweep_end_ray_index": [45, 74, 484, 513, 614, 682, 688], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 121, 213, 227, 229, 234, 238, 239, 240, 256, 258, 269, 271, 273, 274, 288, 290, 295, 299, 300, 303, 317, 319, 327, 328, 332, 333, 336, 350, 352, 360, 361, 365, 366, 385, 425, 438, 441, 442, 463, 484, 491, 496, 507, 513, 535, 583, 589, 597, 611, 614, 615, 617, 618, 621, 638, 639, 645, 667, 682, 688], "altitude_agl": [45, 74, 484, 513, 614, 688], "target_scan_r": [45, 74, 484, 513, 621, 688], "rays_are_index": [45, 74, 484, 513], "ray_angle_r": [45, 74, 484, 513], "scan_rat": [45, 74, 391, 484, 513, 621, 688], "antenna_transit": [45, 56, 57, 74, 143, 155, 193, 205, 227, 234, 238, 239, 240, 274, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 484, 495, 496, 513, 615, 688], "instrument_paramet": [45, 74, 167, 391, 460, 484, 513, 614, 617, 671, 684, 688], "radar_calibr": [45, 74, 484, 513, 688], "rotat": [45, 74, 213, 484, 513], "tilt": [45, 74, 213, 239, 328, 361, 465, 484, 513, 615, 621, 635, 654, 661], "roll": [45, 74, 213, 385, 484, 513, 602, 607], "drift": [45, 74, 213, 484, 513], "pitch": [45, 74, 213, 484, 513], "georefs_appli": [45, 74, 484, 513], "antenna": [45, 56, 57, 74, 119, 120, 121, 143, 155, 193, 205, 208, 211, 227, 234, 238, 239, 240, 274, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 433, 442, 484, 495, 496, 513, 615, 621, 626, 632, 637, 638, 639, 640, 641, 680, 686, 688], "structur": [45, 74, 391, 444, 455, 467, 484, 513, 619, 634, 668, 669, 687], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 128, 163, 168, 169, 172, 178, 208, 209, 210, 211, 240, 300, 333, 366, 370, 389, 423, 427, 428, 439, 444, 445, 455, 461, 484, 489, 490, 491, 493, 494, 495, 496, 497, 513, 594, 613, 614, 615, 618, 621, 622, 626, 630, 631, 632, 634, 676, 680, 684, 687, 688, 689, 691, 693], "global": [45, 74, 484, 513, 611, 639, 688, 690], "4": [45, 74, 119, 120, 376, 379, 424, 430, 444, 460, 464, 484, 513, 611, 612, 613, 614, 618, 620, 622, 631, 634, 639, 642, 644, 649, 650, 655, 656, 657, 658, 660, 661, 665, 668, 669, 671, 672, 676, 677, 680, 687, 691], "repres": [45, 74, 167, 425, 426, 460, 484, 513, 561, 562, 608, 618, 621, 665, 669], "under": [45, 74, 167, 168, 169, 428, 484, 513, 618, 621, 622, 668, 669, 680, 690, 691], "sub": [45, 74, 484, 513, 611, 621], "convent": [45, 74, 167, 484, 513, 611, 614, 615, 634, 680, 688], "meta_group": [45, 74, 484, 513, 688], "scan": [45, 74, 117, 158, 159, 160, 164, 167, 168, 169, 170, 213, 226, 227, 229, 240, 274, 287, 288, 290, 300, 303, 316, 317, 319, 333, 336, 349, 350, 352, 366, 381, 425, 433, 484, 513, 556, 561, 562, 589, 591, 597, 603, 608, 611, 612, 613, 614, 618, 621, 630, 638, 651, 652, 662, 665], "ppi": [45, 74, 168, 169, 170, 171, 226, 230, 234, 287, 291, 295, 316, 320, 327, 328, 349, 353, 360, 361, 425, 426, 438, 441, 463, 484, 513, 561, 562, 566, 569, 572, 582, 583, 589, 611, 612, 615, 618, 621, 632, 637, 642, 643, 648, 649, 661, 663, 675, 677, 679, 680, 688, 689], "rhi": [45, 74, 226, 227, 238, 287, 288, 299, 316, 317, 332, 349, 350, 365, 426, 438, 441, 463, 484, 513, 562, 570, 573, 582, 583, 589, 612, 621, 632, 643, 663, 665, 680, 688, 689], "sector": [45, 74, 484, 513, 611, 621, 688], "multipl": [45, 74, 444, 484, 513, 612, 613, 621, 622, 632, 637, 643, 657, 663, 687, 689, 691, 694], "mode": [45, 62, 74, 372, 434, 442, 484, 501, 513, 611, 614, 621, 622, 665, 688, 690, 691], "ground": [45, 74, 433, 439, 484, 513, 614, 615, 619, 634], "target": [45, 74, 389, 484, 513, 565, 567, 568, 569, 570, 571, 572, 573, 580, 591, 592, 593, 604, 614, 688], "angl": [45, 51, 52, 74, 119, 120, 121, 213, 227, 239, 274, 288, 303, 317, 336, 350, 438, 441, 442, 463, 465, 484, 490, 491, 513, 575, 576, 577, 578, 580, 582, 583, 589, 591, 592, 600, 601, 608, 611, 614, 621, 639, 660, 662, 672, 682, 688], "thr": [45, 74, 484, 513], "index": [45, 60, 74, 89, 172, 210, 240, 254, 256, 258, 269, 271, 273, 300, 333, 366, 389, 417, 433, 465, 484, 499, 513, 528, 611, 613, 614, 615, 617, 618, 621, 681], "rays_per_sweep": [45, 66, 74, 94, 484, 505, 513, 533, 561, 562], "upon": [45, 74, 172, 208, 209, 210, 211, 484, 513, 613, 617, 621], "prior": [45, 47, 74, 171, 173, 174, 227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 385, 484, 486, 513, 615, 624, 628, 635, 680], "init_rays_per_sweep": [45, 74, 484, 513], "intend": [45, 74, 439, 484, 513, 618], "rate": [45, 74, 430, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 460, 484, 513, 621, 668, 669], "whether": [45, 74, 133, 183, 370, 376, 424, 484, 513, 614, 615, 687], "regular": [45, 74, 390, 435, 438, 439, 441, 443, 484, 513, 615, 619, 644, 665], "angular": [45, 74, 484, 513, 579, 600, 601], "resolut": [45, 74, 227, 229, 230, 234, 235, 238, 239, 240, 266, 288, 290, 291, 295, 296, 299, 300, 317, 319, 320, 327, 328, 329, 332, 333, 350, 352, 353, 360, 361, 362, 365, 366, 381, 428, 435, 438, 439, 441, 443, 444, 445, 455, 461, 467, 484, 513, 564, 613, 614, 615, 619, 635, 651, 654, 676, 677, 684, 686, 687, 693], "express": [45, 74, 484, 513], "360": [45, 74, 170, 171, 329, 362, 484, 513, 589, 621, 672, 682, 688], "represent": [45, 74, 484, 513], "forbidden": [45, 74, 484, 513], "plane": [45, 74, 389, 425, 426, 484, 513, 611, 688], "180": [45, 74, 121, 123, 484, 513, 589, 611, 613, 614, 622, 669, 682, 691], "gate_z": [45, 57, 74, 484, 496, 513], "gate_x": [45, 57, 74, 484, 496, 513], "gate_i": [45, 57, 74, 484, 496, 513], "system": [45, 74, 122, 123, 124, 173, 174, 372, 381, 389, 419, 424, 484, 513, 618, 621, 622, 690, 691], "assum": [45, 74, 119, 120, 167, 170, 458, 461, 463, 464, 484, 513, 589, 613, 617], "earth": [45, 74, 119, 120, 123, 126, 484, 513, 591, 604, 611, 615], "radiu": [45, 74, 119, 120, 123, 126, 421, 422, 423, 424, 427, 428, 445, 455, 467, 484, 513, 591, 604, 668, 686], "model": [45, 74, 119, 120, 168, 382, 388, 444, 484, 513, 614, 670], "init_gate_x_y_z": [45, 74, 484, 513], "gate_latitud": [45, 56, 64, 74, 92, 484, 495, 503, 513, 531, 611], "gate_longitud": [45, 56, 64, 74, 92, 484, 495, 503, 513, 531, 611, 682], "init_gate_longitude_latitud": [45, 74, 484, 513, 682], "gate_altitud": [45, 56, 63, 74, 91, 484, 495, 502, 513, 530, 611], "init_gate_altitud": [45, 74, 484, 513, 682], "actual": [45, 74, 385, 389, 424, 444, 484, 513, 618, 694], "flag": [45, 74, 167, 274, 385, 462, 463, 467, 484, 513, 597, 611, 619, 621, 694], "transit": [45, 56, 57, 74, 143, 155, 172, 193, 205, 209, 210, 227, 234, 238, 239, 240, 274, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 439, 441, 462, 484, 495, 496, 513, 615, 621], "ye": [45, 74, 167, 484, 513], "about": [45, 74, 484, 513, 611, 613, 619, 620, 621], "aircraft": [45, 74, 239, 385, 484, 513, 580], "longitudin": [45, 74, 239, 250, 258, 263, 264, 273, 484, 513], "vertic": [45, 74, 160, 166, 167, 227, 228, 229, 234, 238, 239, 240, 248, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 299, 300, 317, 318, 319, 327, 328, 332, 333, 350, 351, 352, 360, 361, 365, 366, 389, 425, 426, 435, 438, 439, 441, 443, 446, 458, 460, 465, 484, 513, 580, 597, 608, 611, 613, 618, 621, 630, 658, 665, 670, 671, 672, 677, 693], "orthogon": [45, 74, 484, 513], "platform": [45, 74, 484, 513, 611, 624], "right": [45, 74, 484, 513, 613, 616, 617, 618, 619, 621, 644, 646, 665, 680], "wing": [45, 74, 484, 513], "down": [45, 74, 484, 513, 609, 613], "track": [45, 74, 484, 513, 611, 615, 618, 621], "compass": [45, 74, 484, 513], "clockwis": [45, 74, 484, 513], "nose": [45, 74, 484, 513, 621], "had": [45, 74, 390, 484, 513, 619, 621, 634, 694], "georefer": [45, 74, 484, 513], "lead": [45, 74, 484, 513, 615, 638], "centric": [45, 74, 484, 513], "avaiabl": [45, 74, 484, 513], "radar_paramet": [45, 74, 484, 513, 614], "subconvent": [45, 74, 484, 513], "calibr": [45, 74, 448, 484, 513, 614], "ngate": [45, 55, 74, 484, 494, 513, 561, 562, 563, 611, 621, 682, 688], "nrai": [45, 55, 74, 437, 484, 494, 513, 563, 592, 621, 682, 688], "nsweep": [45, 74, 484, 513, 561, 562, 639, 655, 656, 672, 688], "loos": [46, 47, 485, 486, 599], "existing_field_nam": [47, 486], "note": [47, 119, 133, 135, 143, 150, 155, 163, 167, 171, 183, 185, 193, 200, 205, 254, 328, 370, 376, 379, 380, 390, 425, 426, 428, 444, 458, 460, 461, 469, 486, 589, 612, 615, 619, 621, 622, 634, 635, 639, 648, 668, 669, 671, 690, 691], "made": [47, 387, 432, 486, 608, 612, 614, 615, 618, 622, 623, 691], "done": [47, 167, 171, 467, 486, 622, 624, 682, 690, 691, 694], "both": [47, 167, 172, 210, 373, 458, 459, 460, 486, 611, 615, 618, 621, 622, 635, 638, 639, 641, 646, 662, 669, 680, 686, 687, 690, 691], "numpi": [47, 135, 150, 164, 185, 200, 486, 599, 611, 613, 614, 615, 617, 619, 621, 622, 624, 628, 638, 640, 644, 647, 649, 654, 657, 658, 660, 665, 666, 668, 669, 670, 671, 672, 680, 682, 683, 684, 686, 687, 688, 690, 691, 694], "see": [47, 120, 128, 167, 178, 226, 240, 252, 255, 257, 266, 270, 272, 287, 300, 316, 328, 333, 349, 361, 366, 379, 387, 388, 428, 444, 445, 455, 458, 467, 486, 611, 613, 615, 617, 619, 621, 622, 634, 635, 644, 665, 668, 669, 680, 682, 684, 686, 687, 691], "how": [47, 385, 387, 388, 486, 611, 612, 613, 614, 615, 617, 619, 621, 623, 628, 630, 634, 635, 644, 645, 646, 647, 648, 665, 671, 680, 683, 686, 687, 694], "reflectivity_copi": [47, 486], "gatefilt": [48, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 208, 209, 210, 211, 227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 417, 427, 428, 433, 461, 462, 463, 465, 469, 470, 487, 611, 613, 615, 617, 619, 621, 622, 629, 630, 638, 640, 641, 646, 647, 665, 667, 676, 681, 684, 691], "updat": [48, 158, 487, 589, 612, 616, 617, 621, 622, 648, 668, 680, 691], "mask": [48, 133, 135, 139, 143, 150, 154, 155, 158, 167, 168, 169, 170, 172, 183, 185, 189, 193, 200, 204, 205, 208, 209, 210, 211, 227, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 381, 382, 383, 428, 433, 435, 438, 439, 441, 443, 446, 464, 487, 564, 594, 599, 615, 619, 621, 626, 631, 632, 638, 640, 647, 665, 668, 669, 671, 676, 681, 682, 683, 688, 689], "filter": [48, 128, 133, 135, 143, 150, 155, 160, 167, 168, 169, 170, 171, 172, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 417, 427, 428, 432, 461, 462, 463, 487, 611, 613, 615, 617, 619, 621, 628, 629, 630, 638, 640, 641, 646, 647, 665, 667, 676, 684, 687], "equal": [48, 122, 124, 125, 134, 135, 141, 149, 150, 153, 158, 168, 184, 185, 191, 199, 200, 203, 361, 379, 390, 444, 467, 469, 487, 589, 615, 649, 665, 668, 669, 670, 687], "condit": [48, 128, 133, 135, 143, 150, 155, 167, 178, 183, 185, 193, 200, 205, 390, 450, 487, 611, 629, 683, 687], "append": [48, 487, 617, 618, 619, 621, 672], "filtered_": [48, 487], "prefix": [48, 482, 487], "check": [49, 58, 77, 168, 169, 170, 171, 384, 432, 444, 464, 488, 497, 516, 591, 604, 608, 613, 614, 617, 619, 621, 622, 624, 680, 690, 691, 692], "keyerror": [49, 77, 400, 401, 411, 412, 488, 516, 690], "array_lik": [50, 489, 596], "view": [51, 52, 54, 393, 398, 399, 405, 409, 410, 415, 490, 491, 493, 611, 619, 646, 684, 686, 688], "possibl": [51, 52, 54, 385, 490, 491, 493, 590, 615, 617, 619, 621, 625, 644, 665, 668, 669, 684, 686], "underli": [51, 52, 54, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 373, 490, 491, 493, 615, 680], "get_gate_x_y_z": [54, 493, 657, 658], "obtain": [54, 57, 493, 496, 619, 622, 672, 682, 691], "plot": [54, 57, 212, 213, 214, 215, 216, 217, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 435, 438, 439, 441, 443, 465, 470, 493, 496, 611, 612, 621, 626, 627, 629, 630, 631, 634, 635, 638, 639, 640, 641, 663, 664, 665, 666, 668, 669, 671, 673, 675, 676, 679, 680, 682, 683, 684, 686, 687, 689], "correct": [54, 57, 178, 208, 209, 210, 211, 379, 456, 461, 493, 496, 566, 611, 613, 617, 621, 622, 625, 628, 629, 630, 631, 635, 648, 665, 670, 676, 680, 684, 689, 691], "spatial": [54, 57, 167, 493, 496, 611, 686], "context": [54, 57, 493, 496, 613, 647, 666], "request": [54, 124, 381, 427, 428, 459, 493, 615, 621, 622, 623, 624, 680, 691], "area": [55, 227, 229, 234, 238, 239, 240, 241, 288, 290, 295, 299, 300, 301, 317, 319, 327, 328, 332, 333, 334, 350, 352, 360, 361, 365, 366, 367, 444, 463, 467, 494, 594, 611, 613, 615, 617], "squar": [55, 432, 458, 461, 469, 494], "assumpt": [55, 461, 494], "size": [55, 163, 164, 167, 168, 170, 171, 209, 230, 291, 320, 353, 423, 425, 426, 427, 428, 432, 445, 446, 454, 455, 461, 463, 494, 564, 579, 607, 614, 648, 661, 666, 668, 669], "m": [55, 58, 121, 169, 208, 211, 215, 276, 305, 338, 424, 428, 432, 435, 437, 438, 439, 441, 442, 443, 444, 448, 449, 455, 458, 460, 461, 462, 465, 467, 494, 497, 579, 580, 594, 605, 611, 613, 614, 615, 617, 618, 619, 621, 622, 624, 630, 634, 645, 647, 649, 658, 665, 668, 669, 671, 672, 676, 680, 690, 691], "reset_gate_coord": [56, 495], "filter_transit": [56, 57, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 495, 496, 615], "With": [56, 57, 495, 496, 680, 681, 682], "therefor": [56, 57, 461, 495, 496, 611, 630, 684, 688], "more": [56, 57, 62, 168, 171, 389, 424, 427, 428, 433, 444, 445, 455, 467, 495, 496, 501, 582, 583, 611, 612, 613, 614, 615, 616, 619, 621, 622, 628, 638, 644, 657, 658, 665, 680, 684, 688, 691], "effici": [56, 57, 427, 444, 495, 496, 680, 684], "than": [56, 57, 158, 168, 174, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 444, 445, 446, 455, 461, 495, 496, 589, 594, 613, 614, 615, 619, 665, 668, 694], "through": [56, 57, 252, 449, 460, 495, 496, 614, 615, 617, 620, 622, 638, 644, 691], "No": [56, 57, 169, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 389, 428, 495, 496, 615, 618], "get_field": [57, 496, 657, 658], "check_uniform": [58, 497], "lookuperror": [58, 497], "except": [58, 389, 406, 497, 615, 618, 621, 647, 686], "skip": [58, 168, 169, 384, 432, 497, 613, 618, 621, 622, 691], "nyquist_veloc": [58, 168, 169, 391, 497, 614, 617, 671, 684, 688], "slice": [59, 71, 88, 99, 255, 256, 257, 258, 270, 271, 272, 273, 498, 510, 527, 538, 661, 686, 688], "_io": [62, 501], "textiowrapp": [62, 501], "encod": [62, 390, 501, 621], "utf": [62, 501], "compact": [62, 501], "c": [62, 119, 123, 126, 161, 163, 166, 167, 169, 266, 361, 435, 438, 444, 448, 450, 457, 460, 461, 462, 463, 465, 470, 501, 566, 611, 615, 617, 619, 621, 622, 638, 669, 671, 680, 683, 686, 690, 691, 694], "f": [62, 266, 361, 404, 414, 501, 611, 612, 613, 614, 615, 617, 618, 619, 639, 644, 647, 655, 656, 660, 665, 668, 669, 680, 694], "minim": [62, 461, 467, 501], "everyth": [62, 501, 615, 618, 622, 635, 691], "screen": [62, 501], "gate_": [65, 93, 504, 532], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 164, 404, 414, 461, 463, 506, 507, 508, 509, 510, 511, 512, 534, 535, 536, 537, 538, 539, 540, 617, 688], "over": [69, 72, 73, 97, 100, 101, 164, 167, 168, 208, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 444, 445, 455, 508, 511, 512, 536, 539, 540, 590, 611, 615, 617, 618, 621, 638, 668, 669, 672, 680, 683, 688], "npulses_max": [74, 513, 563], "velocity_bin": [74, 513], "simpl": [117, 417, 556, 621, 683, 684], "vpt": [117, 160, 218, 226, 240, 279, 287, 300, 308, 316, 333, 341, 349, 366, 556, 597, 614, 621, 630], "mean": [117, 119, 160, 435, 438, 439, 441, 469, 556, 564, 575, 576, 581, 590, 595, 600, 601, 611, 614, 621, 622, 625, 634, 635, 665, 687, 688, 691], "kilomet": [119, 425, 445, 455], "equat": [119, 461, 590, 611, 621], "28": [119, 611, 613, 615, 621, 668, 669, 672], "b": [119, 369, 430, 444, 445, 455, 462, 470, 611, 612, 613, 614, 619, 621, 622, 669, 680, 691], "doviak": 119, "zrnic": [119, 441], "sqrt": [119, 123, 611, 657, 658, 672], "r": [119, 122, 123, 124, 125, 126, 167, 169, 173, 174, 219, 232, 233, 253, 268, 280, 293, 294, 309, 322, 323, 324, 325, 342, 355, 356, 357, 358, 430, 435, 439, 444, 445, 446, 449, 452, 453, 454, 455, 467, 469, 590, 594, 611, 622, 634, 649, 657, 658, 665, 668, 669, 671, 691], "sin": [119, 123, 126, 611, 613], "theta_": 119, "arcsin": [119, 123, 613], "frac": 119, "theta_a": 119, "arc": [119, 591], "length": [119, 173, 174, 461, 613, 615, 621, 671], "effect": [119, 133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 239, 427, 428, 613, 639, 657, 665], "taken": [119, 173, 174, 227, 288, 317, 350, 566, 582, 583, 590, 595, 596, 650], "6371": [119, 123, 126, 591, 604, 613], "km": [119, 123, 126, 213, 230, 235, 236, 242, 274, 291, 296, 297, 302, 303, 320, 329, 330, 335, 336, 353, 361, 362, 363, 368, 370, 426, 437, 444, 445, 455, 460, 461, 564, 591, 604, 612, 613, 614, 615, 619, 639, 650, 655, 656, 658, 665, 666, 677, 686, 693], "doppler": [119, 167, 168, 169, 469, 590, 614, 622, 626, 631, 632, 650, 660, 665, 680, 688, 689, 691], "edit": [119, 620, 621, 622, 691], "1993": 119, "21": [119, 434, 454, 611, 613, 617, 668, 673, 689], "vector": [120, 124, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 437, 458, 460, 611, 613, 615, 621], "util": [120, 163, 167, 168, 239, 448, 471, 614, 619, 621, 622, 635, 649, 662, 666, 668, 669, 680, 691], "antenna_to_cartesian": [120, 621], "detail": [120, 128, 167, 178, 252, 266, 328, 361, 387, 388, 424, 428, 445, 455, 611, 613, 615, 617, 623, 624, 665, 668, 669, 680, 688, 693], "cartograph": [122, 123, 124, 125, 126, 336], "differ": [122, 124, 125, 167, 369, 417, 425, 426, 444, 445, 449, 455, 461, 612, 613, 614, 615, 619, 621, 622, 632, 634, 638, 665, 668, 669, 675, 686, 690, 691], "pass": [122, 124, 125, 167, 168, 169, 226, 227, 234, 238, 239, 240, 252, 254, 256, 258, 266, 269, 271, 273, 287, 288, 295, 299, 300, 316, 317, 324, 325, 326, 327, 328, 329, 332, 333, 349, 350, 357, 358, 359, 360, 361, 362, 365, 366, 370, 372, 373, 381, 383, 424, 428, 461, 613, 615, 621, 624, 634, 635, 647, 683, 686], "desir": [122, 124, 125, 133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 393, 439, 445, 455, 469, 559, 605, 613, 614, 666, 687], "6370997": [123, 126], "rho": 123, "arctan2": [123, 672], "correspond": [123, 126, 144, 145, 194, 195, 226, 254, 269, 287, 316, 349, 374, 400, 411, 425, 428, 580, 590, 592, 613, 615, 622, 634, 649, 684, 688, 691], "typic": [123, 126, 128, 133, 135, 143, 150, 155, 168, 178, 183, 185, 193, 200, 205, 389, 424, 427, 630, 639, 693, 694], "snyder": [123, 126], "manual": [123, 126, 618, 619, 621, 624, 680], "geolog": [123, 126], "survei": [123, 126], "profession": [123, 126], "paper": [123, 126, 680], "1395": [123, 126, 621], "1987": [123, 126], "pp": [123, 126, 435, 438, 439, 441], "191": [123, 126], "202": [123, 126], "find": [124, 168, 171, 417, 424, 427, 428, 455, 456, 611, 615, 617, 619, 621, 635, 669, 680, 694], "arcco": 126, "exclude_bas": [128, 178], "boolean": [128, 135, 144, 145, 150, 178, 185, 194, 195, 200, 369, 445, 455, 621, 687], "variou": [128, 170, 172, 178, 208, 209, 210, 211, 580, 593, 613, 621, 632, 664, 680], "exclude_below": [128, 178, 611, 613, 617, 619, 630, 638, 667, 676, 687], "suggest": [128, 178, 612, 621], "begin": [128, 167, 168, 169, 173, 174, 178, 215, 217, 234, 238, 276, 278, 295, 299, 305, 307, 327, 332, 338, 340, 360, 365, 379, 380, 383, 385, 621], "import": [128, 178, 465, 469, 470, 482, 612, 618, 619, 621, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 682, 683, 684, 686, 687, 688, 690, 693], "radar_fil": [128, 178, 618, 629, 644, 648], "nc": [128, 178, 611, 612, 614, 619, 621, 627, 630, 638, 639, 641, 644, 645, 646, 647, 648, 652, 654, 655, 656, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 682, 683, 687, 693], "10": [128, 138, 158, 159, 163, 164, 170, 173, 174, 178, 188, 424, 428, 434, 435, 436, 441, 445, 446, 449, 450, 451, 455, 460, 462, 463, 580, 594, 611, 613, 614, 615, 617, 618, 619, 622, 629, 630, 638, 639, 640, 644, 647, 649, 650, 652, 654, 657, 658, 661, 665, 668, 669, 671, 672, 676, 680, 682, 683, 684, 686, 687, 688, 691], "normalized_coherent_pow": [128, 178, 611, 687], "75": [128, 178, 241, 301, 334, 367, 389, 445, 455, 460, 611, 617, 638, 657, 665, 668, 682, 686, 687], "exclude_mask": [130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 640, 647], "op": [130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 614], "inclus": [130, 131, 133, 136, 142, 146, 148, 151, 156, 180, 181, 183, 186, 192, 196, 198, 201, 206, 424, 428, 560, 621, 644], "toa": [131, 181, 427, 428, 431, 464], "below": [133, 148, 167, 170, 172, 173, 174, 183, 198, 208, 209, 210, 211, 227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 427, 428, 444, 445, 449, 452, 453, 455, 461, 589, 590, 611, 612, 613, 614, 615, 618, 644, 665, 668, 682, 684, 687, 692, 693], "compar": [133, 167, 183, 433, 579, 622, 632, 637, 642, 644, 665, 668, 669, 689, 691], "against": [133, 167, 183, 623, 624, 657], "mark": [133, 143, 144, 145, 155, 167, 183, 193, 194, 195, 205, 612, 618], "exclus": [133, 183, 639], "oper": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 385, 424, 428, 434, 450, 454, 455, 463, 467, 611, 614, 615, 622, 668, 669, 690, 691], "merg": [133, 135, 143, 150, 155, 168, 183, 185, 193, 200, 205, 375, 589, 622, 624, 691], "AND": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205], "OR": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 611], "gener": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 214, 215, 216, 217, 218, 227, 229, 234, 237, 238, 239, 240, 247, 248, 249, 250, 252, 254, 256, 258, 261, 262, 263, 264, 269, 271, 273, 275, 276, 277, 278, 279, 288, 290, 295, 298, 299, 300, 304, 305, 306, 307, 308, 317, 319, 327, 328, 331, 332, 333, 337, 338, 339, 340, 341, 350, 352, 360, 361, 364, 365, 366, 370, 388, 391, 406, 417, 427, 428, 456, 461, 613, 615, 616, 619, 621, 624, 627, 628, 629, 630, 632, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 680], "meet": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 387, 680], "result": [133, 135, 143, 150, 155, 164, 167, 168, 169, 183, 185, 193, 200, 205, 227, 234, 237, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 372, 388, 393, 425, 426, 428, 433, 465, 470, 581, 602, 613, 614, 615, 622, 630, 635, 639, 665, 669, 670, 680, 686, 691], "previous": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 634, 665, 668, 693], "becaus": [133, 135, 143, 183, 185, 193, 461, 668, 694], "invalid": [133, 135, 137, 143, 172, 183, 185, 187, 193, 208, 209, 210, 211, 611, 619], "shape": [135, 150, 185, 200, 379, 464, 599, 611, 614, 615, 617, 619, 621, 622, 668, 682, 686, 687, 688, 691], "v1": [136, 142, 151, 156, 186, 192, 201, 206, 611, 612, 624, 690], "v2": [136, 142, 151, 156, 186, 192, 201, 206, 622, 691], "insid": [136, 151, 186, 201, 683], "interv": [136, 142, 151, 156, 168, 172, 186, 192, 201, 206, 210, 370, 579, 595, 596, 611, 619, 621], "occur": [137, 157, 171, 187, 207, 381, 382, 611, 684, 688], "nan": [137, 157, 167, 172, 187, 207, 210, 463, 611, 614, 621, 628, 666], "inf": [137, 157, 172, 187, 207, 210, 621], "n_gate": [138, 188], "try": [138, 160, 188, 432, 461, 613, 618, 619, 620, 647, 686, 687], "ring": [138, 188, 235, 236, 296, 297, 329, 330, 362, 363, 370, 613, 639, 640, 647, 654], "artifact": [138, 168, 188, 621, 684, 686], "some": [138, 188, 303, 336, 401, 412, 463, 482, 612, 613, 614, 615, 617, 618, 619, 620, 621, 635, 644, 646, 665, 666, 668, 671, 680, 684, 686, 690, 693], "outsid": [142, 156, 172, 192, 206, 210, 234, 237, 239, 240, 252, 254, 256, 258, 269, 271, 273, 295, 298, 300, 327, 328, 331, 333, 360, 361, 364, 366, 439, 444, 615, 621, 622, 665, 691, 693], "trans_valu": [143, 155, 193, 205], "construct": [143, 155, 193, 205, 428, 614], "element": [144, 145, 167, 168, 169, 170, 171, 194, 195, 391, 425, 426, 427, 428, 432, 464, 579, 595, 596, 600, 601, 613, 614, 615], "NOT": [144, 145, 194, 195], "gate_includ": [144, 194, 687], "lost": [144, 145, 194, 195, 463, 608, 611, 686], "again": [144, 145, 194, 195, 615, 624, 635, 648, 669, 671, 690], "gate_exclud": [145, 195, 687], "noise_threshold": 158, "45": [158, 564, 613, 622, 649, 658, 668, 669, 691], "threshold_offset": 158, "counts_threshold": 158, "12": [158, 426, 611, 613, 614, 618, 619, 620, 634, 639, 647, 648, 655, 663, 665, 666, 669, 671, 673, 680, 683, 687, 688, 689], "primari": [158, 461, 614], "cloud": [158, 159, 164, 372, 381, 444, 461, 613, 614, 622, 624, 626, 631, 632, 633, 636, 680, 689, 691, 694], "threshold": [158, 164, 167, 170, 171, 172, 208, 209, 210, 211, 369, 444, 445, 449, 452, 453, 455, 590, 594, 611, 613, 617, 630, 665, 668, 676, 684, 687], "nois": [158, 159, 164, 166, 175, 431, 437, 440, 590, 614, 619, 621, 628, 665, 684], "detect": [158, 455, 615, 621, 632, 652, 664, 668, 673, 684, 689], "greater": [158, 444, 467, 615, 668], "count": [158, 167, 446, 638, 684, 688], "kollia": [158, 159, 164], "jo": [158, 159, 164], "borqu": [158, 159, 164], "tatarev": [158, 159, 164], "lamer": [158, 159, 164], "n": [158, 159, 164, 167, 432, 444, 449, 460, 579, 611, 613, 614, 615, 617, 619, 634, 638, 639, 649, 660, 662, 666, 668, 669, 674, 680, 694], "bharadwaj": [158, 159, 164, 619], "widen": [158, 159, 164, 665], "johnson": [158, 159, 164, 619], "e": [158, 159, 164, 169, 171, 173, 174, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 370, 374, 389, 404, 414, 442, 444, 445, 446, 455, 461, 467, 594, 611, 612, 614, 615, 618, 622, 634, 647, 649, 665, 668, 669, 690, 691], "clothiaux": [158, 159, 164], "2014": [158, 159, 163, 164, 448, 462, 465, 680], "ii": [158, 159, 164, 446, 665, 680, 688], "process": [158, 159, 164, 168, 173, 174, 611, 614, 617, 618, 619, 621, 622, 624, 634, 647, 669, 671, 680, 691], "atmo": [158, 159, 164, 173, 174, 434, 436, 444, 449, 454, 460, 465, 580, 594, 618, 622, 649, 669, 691], "technol": [158, 159, 164, 434, 436, 454, 465, 580], "31": [158, 159, 163, 164, 381, 448, 611, 613, 614, 617, 635, 666], "583": [158, 159, 164, 434, 621], "598": [158, 159, 164, 621], "doi": [158, 159, 164, 434, 436, 445, 446, 449, 450, 451, 455, 460, 462, 463, 580, 594, 611, 614, 615, 617, 619, 622, 649, 665, 668, 669, 680, 682, 683, 684, 686, 687, 688, 691], "1175": [158, 159, 164, 434, 436, 445, 446, 455, 463, 580, 621, 665, 668, 669, 680], "jtech": [158, 159, 164, 438, 441, 580], "d": [158, 159, 163, 164, 169, 215, 276, 305, 338, 393, 394, 396, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 439, 441, 444, 463, 470, 580, 611, 613, 614, 615, 618, 619, 622, 630, 647, 666, 680, 691], "13": [158, 159, 164, 379, 590, 611, 614, 617, 641, 642, 660, 661, 663, 665, 671, 680, 687, 688, 689], "00045": [158, 159, 164], "floor": [159, 164, 175, 431, 628], "height_rang": [160, 630], "zdr_var": [160, 630], "bia": [160, 165, 621, 626, 631, 632, 689], "tupl": [160, 170, 171, 227, 229, 232, 233, 234, 237, 238, 239, 240, 242, 252, 254, 256, 258, 269, 271, 273, 288, 290, 293, 294, 295, 298, 299, 300, 302, 317, 319, 322, 323, 327, 328, 331, 332, 333, 335, 350, 352, 355, 356, 360, 361, 364, 365, 366, 368, 401, 412, 424, 425, 426, 428, 432, 458, 459, 560, 579, 599, 615, 621], "minimum": [160, 161, 172, 173, 174, 209, 210, 211, 227, 229, 234, 237, 238, 239, 240, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 370, 389, 424, 428, 435, 438, 439, 441, 442, 444, 445, 446, 455, 560, 564, 581, 590, 611, 613, 615, 618, 619, 621, 665, 668, 686], "maximum": [160, 167, 168, 172, 173, 174, 208, 209, 210, 227, 229, 234, 237, 238, 239, 240, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 369, 370, 389, 424, 425, 426, 428, 433, 435, 438, 439, 441, 442, 443, 445, 449, 452, 453, 455, 461, 560, 564, 579, 589, 597, 611, 613, 615, 618, 665, 667, 668, 676, 688], "automat": [160, 173, 385, 390, 391, 428, 432, 467, 613, 615, 619, 621, 622, 624, 652, 680, 691], "z_offset": 161, "doc": [161, 162, 163, 174, 611, 615, 621, 622, 624, 680, 690, 691, 694], "15": [161, 461, 594, 611, 612, 613, 614, 619, 627, 629, 634, 636, 644, 649, 655, 656, 657, 658, 661, 662, 665, 666, 669, 671, 672, 684, 688, 689], "fzl": [161, 162, 163, 173, 174], "4000": [161, 173, 174, 686], "rhv_min": 161, "ncp_min": 161, "a_coef": [161, 163], "06": [161, 611, 613, 617, 618, 642, 689], "beta": [161, 163, 448, 449, 450, 451, 452, 453], "refl_field": [161, 162, 163, 172, 173, 174, 209, 210, 428, 431, 440, 444, 445, 449, 451, 452, 453, 454, 460, 467, 627, 668, 670, 671], "ncp_field": [161, 172, 173, 174, 210, 627], "rhv_field": [161, 172, 173, 174, 209, 210, 460, 627, 670, 671], "spec_at_field": [161, 162, 163], "corr_refl_field": [161, 162, 163], "attenu": [161, 162, 163, 448, 449, 452, 621, 626, 631, 632, 670, 680, 689], "phi": [161, 163, 173, 621, 627], "copol_coeff": [161, 566, 627, 666, 667, 682], "norm_coherent_pow": [161, 566, 627, 682], "proc_dp_phase_shift": [161, 627, 666, 682], "reflectivity_horizont": [161, 167, 566, 612, 627, 638, 644, 648, 652, 654, 655, 656, 660, 662, 665, 666, 667, 668, 669, 677, 682, 683, 693], "supress": [161, 243, 254, 260, 328, 361, 615, 621], "freez": [161, 162, 163, 435, 439], "layer": [161, 162, 163, 208, 211, 389, 449, 461, 465, 564], "combin": [161, 162, 163, 598, 611, 613, 614, 622, 624, 691], "normal": [161, 172, 173, 174, 210, 227, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 446, 460, 599, 615, 657, 665], "coher": [161, 172, 173, 174, 210], "power": [161, 163, 172, 173, 174, 210, 439, 448, 449, 450, 451, 452, 453, 611, 614], "zdr_field": [161, 162, 163, 166, 209, 434, 460, 670, 671], "spec_at": [161, 162, 163, 627, 670], "cor_z": [161, 162, 163, 627, 670], "gu": [161, 163], "et": [161, 163, 166, 444, 445, 446, 450, 454, 455, 460, 461, 467, 668, 669], "al": [161, 163, 166, 444, 445, 446, 450, 454, 455, 460, 461, 462, 467, 668, 669], "heavi": [161, 163, 594, 613, 649, 657, 669], "rain": [161, 163, 435, 439, 444, 448, 449, 450, 451, 454, 455, 460, 467, 621, 630, 649, 657, 668, 669, 670, 671], "jamc": [161, 163, 463, 580], "2011": [161, 163, 618, 666], "50": [161, 163, 370, 438, 442, 443, 460, 579, 611, 612, 613, 614, 617, 641, 661, 665, 666, 670, 671, 686, 688], "39": [161, 163, 611, 613, 666], "58": [161, 163, 444, 614, 665, 666], "pia_coef": 162, "pida_coef": 162, "temp_field": [162, 163, 211, 460, 670, 671], "iso0_field": [162, 163, 208, 460], "pia_field": [162, 163], "spec_diff_at_field": [162, 163], "pida_field": [162, 163], "corr_zdr_field": [162, 163], "temp_ref": [162, 163, 460, 670], "linear": [162, 173, 174, 252, 381, 434, 445, 455, 463, 590, 603, 614, 615, 621, 668, 669, 680], "dependec": 162, "comput": [162, 163, 166, 209, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 455, 460, 461, 462, 463, 575, 576, 577, 578, 579, 581, 595, 596, 600, 601, 607, 611, 614, 621, 665, 670, 672, 680], "either": [162, 163, 167, 168, 169, 227, 228, 229, 234, 237, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 298, 299, 300, 317, 318, 319, 327, 331, 332, 333, 350, 351, 352, 360, 364, 365, 366, 375, 404, 414, 435, 438, 439, 441, 449, 452, 453, 460, 622, 665, 668, 690, 691], "frequenc": [162, 163, 391, 446, 448, 449, 450, 452, 453, 457, 460, 461, 462, 463, 614, 632, 664, 665, 673, 689], "refl": [162, 163, 655], "integr": [162, 163, 611, 614], "pida_coeff": 162, "0c": [162, 163], "isotherm": [162, 163], "height_over_iso0": [162, 163, 460, 687], "fixed_fzl": [162, 163], "pia_dict": [162, 163], "spec_diff_at": [162, 163, 670], "pida_dict": [162, 163], "cor_zdr": [162, 163, 670], "smooth_window_len": 163, "forumul": 163, "smooth": [163, 171, 461, 591, 604, 615, 657, 658, 686], "window": [163, 167, 173, 174, 209, 432, 463, 469, 579, 589, 602, 607, 621, 622, 680, 691], "expon": [163, 173, 174, 430, 448, 449, 450, 451, 452, 453], "law": [163, 448, 449, 450, 451, 452, 453], "ryzhkov": [163, 435, 436, 438, 448, 465, 580], "potenti": [163, 448, 611, 619], "rainfal": [163, 444, 448, 449, 450, 451, 452, 453, 454, 461, 463, 618], "estim": [163, 208, 211, 229, 290, 319, 352, 425, 434, 437, 448, 449, 450, 451, 452, 453, 454, 461, 462, 463, 465, 580, 590, 614, 621, 668, 669], "mitig": [163, 448], "partial": [163, 448, 621], "beam": [163, 423, 427, 428, 448, 614], "blockag": [163, 448], "network": [163, 168, 383, 448, 613], "jaot": [163, 166], "599": [163, 448], "619": [163, 448, 621], "n_avg": 164, "nfft": 164, "averag": [164, 168, 369, 435, 438, 439, 441, 445, 455, 581, 590, 595, 617, 630, 668, 669, 672], "scalar": [164, 369, 445, 455, 613, 615, 621, 668], "magnitud": [165, 461, 672, 688], "corrected_field": 165, "urhohv_field": 166, "snr_field": [166, 431, 440], "nh_field": 166, "nv_field": 166, "rhohv_field": [166, 434, 436], "eq": [166, 655], "6": [166, 209, 444, 449, 460, 611, 613, 614, 618, 619, 635, 638, 639, 644, 646, 651, 654, 665, 666, 667, 670, 671, 672, 682, 684, 687, 688], "2006": [166, 635], "subtract": [166, 445, 455], "uncorrect": [166, 611, 676], "snr": [166, 431, 440, 621], "channel": [166, 389, 611, 614, 621, 624], "meteo": 166, "franc": 166, "23": [166, 611, 613, 614, 618, 636, 672], "1340": 166, "1356": [166, 621], "last_radar": 167, "sonde_profil": 167, "filt": 167, "rsl_badval": 167, "131072": 167, "keep_origin": [167, 168, 169], "set_limit": [167, 168, 169, 612, 628, 649, 650, 651, 653, 655, 656, 657, 658, 660, 665, 671], "vel_field": [167, 168, 169, 432, 470, 665, 676, 684], "corr_vel_field": [167, 168, 169], "last_vel_field": 167, "max_shear": 167, "05": [167, 427, 428, 611, 613, 618, 661, 665, 666, 689], "sign": [167, 621, 657, 658, 665], "dealia": [167, 168, 169, 447, 617, 621, 626, 631, 632, 665, 675, 679, 684, 689], "4dd": [167, 621], "univers": [167, 386, 454, 611, 621, 680], "washington": 167, "previou": [167, 328, 361, 615, 619, 621, 624], "sound": [167, 621], "For": [167, 255, 257, 270, 272, 379, 389, 427, 460, 461, 611, 612, 614, 615, 618, 621, 622, 625, 634, 638, 665, 670, 680, 687, 688, 691, 693, 694], "best": [167, 613, 665], "argument": [167, 168, 169, 227, 234, 238, 239, 240, 252, 254, 255, 256, 257, 258, 269, 270, 271, 272, 273, 288, 295, 299, 300, 317, 324, 325, 326, 327, 328, 329, 332, 333, 350, 357, 358, 359, 360, 361, 362, 365, 366, 370, 381, 383, 391, 393, 424, 428, 462, 463, 621, 622, 691], "_fourdd_interfac": 167, "fourdd_dealia": 167, "fine": 167, "tune": [167, 668, 669], "behavior": [167, 328, 361, 379, 393, 615, 621, 625], "fourdd": 167, "document": [167, 255, 257, 266, 270, 272, 328, 361, 382, 387, 388, 603, 609, 612, 614, 615, 616, 619, 622, 623, 680, 686, 691], "dealias": [167, 168, 169, 447, 621, 622, 629, 634, 676, 680, 681, 691, 693], "mean_doppler_veloc": [167, 614, 619, 660, 665, 666, 676, 682], "successfulli": [167, 618], "greatli": 167, "improv": [167, 462, 463, 594, 615, 624, 649, 669], "final": [167, 462, 463, 611, 612, 619, 620, 624, 639, 665, 668], "horizontalwindprofil": [167, 374, 375, 470, 603, 621, 622, 691], "sond": [167, 168, 374, 375, 456, 621, 629], "moment_based_gate_filt": [167, 168, 169, 428, 613], "bergen": 167, "alber": 167, "bad": [167, 461, 462, 463, 467], "rsl": [167, 373, 384, 385, 621, 680, 690, 693], "procedur": [167, 168, 169], "fail": [167, 168, 169, 379, 389, 618, 621, 622, 691], "otherwis": [167, 370, 400, 411, 435, 438, 439, 441, 442, 443, 449, 452, 453, 458, 599, 624], "maxshear": 167, "shear": 167, "incorpor": [167, 455, 668, 671], "match": [167, 170, 171, 175, 213, 274, 303, 336, 385, 417, 619, 621, 638, 648, 669], "toward": 167, "neg": [167, 227, 238, 288, 299, 317, 332, 350, 365, 461, 589, 611, 621, 644], "compthresh": 167, "fraction": [167, 425, 426, 446, 613, 618, 665, 668, 688], "continu": [167, 169, 614, 618, 621, 622, 691], "unfold": [167, 168, 173, 174, 461], "compthresh2": 167, "thresh": [167, 449, 452, 453], "adjac": [167, 615], "assign": [167, 460, 613, 621, 668], "question": [167, 371, 428, 615, 680], "ckval": 167, "absolut": [167, 579, 669], "stdthresh": 167, "deviat": [167, 564, 577, 578, 596, 611, 684], "portion": [167, 617, 686], "epsilon": 167, "miss": [167, 460, 461, 462, 463, 467, 611, 621, 635, 671], "maxcount": 167, "allow": [167, 170, 171, 226, 287, 316, 349, 417, 444, 580, 589, 612, 615, 618, 619, 621, 625, 638, 688, 694], "fold": [167, 168, 634], "pass2": 167, "retain": [167, 168, 169, 172, 208, 209, 210, 211, 608], "rm": 167, "what": [167, 177, 428, 611, 614, 615, 617, 618, 619, 620, 621, 622, 634, 644, 676, 682, 684, 687, 691, 694], "left": [167, 326, 359, 613, 615, 617, 619, 644, 648, 665], "proxim": 167, "side": [167, 619, 665], "doubl": [167, 389, 668], "captur": [167, 444, 676], "suffici": [167, 665], "good": [167, 168, 611, 612, 624], "mingood": 167, "ba_mincount": 167, "neighbor": [167, 381, 428, 611, 621, 639, 686], "ba_edgecount": 167, "usuccess": 167, "radialvelvolum": 167, "lastvelvolum": 167, "unfoldedvolum": 167, "sondvolum": 167, "vr_corr": 167, "due": [167, 433, 444, 611, 613, 615, 618, 621, 638, 684, 690, 694], "call": [167, 170, 226, 227, 229, 234, 238, 239, 240, 254, 287, 288, 290, 295, 299, 300, 316, 317, 319, 327, 328, 332, 333, 349, 350, 352, 360, 361, 365, 366, 384, 389, 393, 580, 593, 612, 614, 615, 618, 622, 624, 684, 688, 691, 694], "999": [167, 393, 611, 621], "long": [167, 450, 621, 669, 683, 688], "jame": 167, "houz": [167, 369, 445, 446, 455, 467, 665, 668, 669], "jr": [167, 445, 455, 467, 668, 669], "four": [167, 381, 382, 384], "dealis": 167, "scheme": [167, 369, 424, 445, 455, 461, 612, 668], "2001": [167, 436], "18": [167, 436, 609, 611, 613, 646, 658, 665, 679], "1674": 167, "ref_vel_field": 168, "interval_split": 168, "interval_limit": 168, "skip_between_rai": 168, "100": [168, 170, 172, 210, 230, 235, 252, 259, 291, 296, 320, 353, 370, 391, 428, 470, 611, 613, 614, 615, 617, 641, 646, 657, 658, 665, 672], "skip_along_rai": 168, "nyquist_vel": [168, 169, 617, 665, 676, 684], "check_nyquist_uniform": [168, 169, 432], "rays_wrap_around": [168, 169], "region": [168, 174, 266, 328, 361, 433, 444, 594, 611, 613, 614, 615, 617, 619, 621, 622, 626, 630, 631, 632, 634, 649, 668, 669, 676, 687, 689, 691, 693], "similar": [168, 614, 615, 638, 686], "pair": [168, 252, 381, 393, 401, 406, 412, 613, 682], "accomplish": [168, 385, 632, 675], "problem": [168, 173, 174, 303, 336, 428, 635], "dynam": [168, 611], "reduct": 168, "anchor": 168, "onc": [168, 615, 618, 622, 624, 668, 690, 691, 694], "complet": [168, 621], "simul": [168, 603, 621], "simulated_vel_from_profil": [168, 622, 691], "segment": [168, 324, 325, 357, 358, 621], "split": [168, 594, 611], "larger": [168, 615, 668], "longer": [168, 589, 613, 621, 622, 680, 690, 691], "better": [168, 230, 235, 291, 296, 320, 329, 353, 362, 618, 619, 621, 669, 680, 684], "seem": 168, "compromis": 168, "free": [168, 616, 617, 680], "cover": [168, 611], "entir": [168, 169, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 428, 605, 611, 614, 615, 619, 665], "join": [168, 482, 618, 621], "gap": [168, 170, 171, 686], "connect": [168, 169], "disabl": [168, 169, 172, 208, 209, 210, 211, 618], "across": [168, 613, 621, 665, 667], "so": [168, 227, 238, 288, 299, 317, 332, 350, 365, 385, 428, 611, 614, 615, 617, 618, 619, 621, 622, 628, 634, 635, 665, 668, 680, 691, 694], "individu": [168, 169, 428, 619], "attempt": [168, 169, 387, 388, 621, 671], "de": [168, 169, 359, 572, 573], "alias": [168, 169, 572, 573, 617, 621, 684, 688], "corr_vel": [168, 169], "unwrap_unit": 169, "skip_check": [169, 621], "multi": [169, 621], "unwrap": [169, 173, 174, 621], "independ": 169, "often": [169, 433, 618], "give": [169, 389, 615, 619, 623, 624, 676, 677, 678, 680, 684, 687], "superior": 169, "lower": [169, 252, 254, 256, 258, 269, 271, 273, 444, 614, 618, 619, 639, 640, 641], "contamin": [169, 467], "clutter": [169, 618, 619, 684, 687], "poor": 169, "verif": [169, 580, 621], "appropi": [169, 226, 287, 316, 349], "offer": [169, 612, 693], "extrem": [169, 665], "miguel": 169, "arevallilo": 169, "herraez": 169, "david": [169, 615], "burton": 169, "michael": [169, 615, 619], "lalor": 169, "munther": 169, "gdeisat": 169, "fast": 169, "two": [169, 391, 424, 442, 445, 455, 458, 459, 467, 564, 598, 600, 601, 613, 614, 615, 617, 618, 619, 621, 624, 632, 637, 642, 643, 646, 662, 663, 683, 686, 689], "sort": [169, 613, 617, 618, 620, 621, 647], "reliabl": 169, "follow": [169, 172, 209, 210, 387, 388, 390, 391, 404, 414, 427, 428, 444, 460, 461, 611, 613, 614, 615, 617, 618, 619, 622, 624, 625, 634, 666, 680, 690, 691, 693], "noncontinu": 169, "optic": 169, "vol": [169, 435, 438, 439, 441], "41": [169, 613, 618, 666, 672, 686], "2002": 169, "7437": 169, "abdul": 169, "rahman": 169, "h": [169, 215, 266, 276, 305, 338, 361, 434, 438, 465, 590, 611, 613, 614, 638, 647, 648, 665], "osten": 169, "gorecki": 169, "l": [169, 173, 174, 231, 235, 236, 266, 292, 296, 297, 321, 330, 354, 361, 363, 436, 455, 594, 611, 615, 649, 665, 669], "novak": 169, "ed": 169, "metrologi": 169, "2005": [169, 445, 455, 668, 669], "32": [169, 439, 444, 564, 611, 621, 644, 650, 651, 652, 662, 666, 669, 672, 688], "40": [169, 266, 444, 611, 614, 619, 629, 639, 641, 648, 652, 654, 657, 665, 668, 669, 676, 689], "intern": [169, 615], "societi": [169, 430, 433, 450], "photon": 169, "label_dict": [170, 171], "delta": [170, 171, 462], "despeckl": [170, 621, 665], "identifi": [170, 171, 369, 445, 455, 590, 611, 615, 617, 649, 668, 669, 671, 687], "small": [170, 171, 444, 445, 455, 467, 621, 638, 639, 657], "investig": [170, 171, 465, 634], "scipi": [170, 171, 461, 603, 611, 621, 622, 657, 658, 680, 690, 691, 694], "core": [170, 171, 369, 370, 389, 417, 428, 444, 445, 455, 462, 463, 580, 593, 614, 619, 621, 622, 668, 691], "queri": [170, 171, 428, 611, 615, 619], "speckl": [170, 668], "find_object": 170, "contigu": [170, 171], "perman": 170, "deg": [170, 171, 208, 211, 229, 290, 319, 352, 435, 441, 442, 443, 460, 461, 605, 611, 645, 672], "label": [171, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 237, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 293, 294, 295, 298, 299, 300, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 323, 326, 327, 328, 331, 332, 333, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 355, 356, 359, 360, 361, 364, 365, 366, 608, 611, 613, 615, 617, 618, 619, 621, 638, 646, 648, 657, 658, 662, 670], "period": [171, 589, 611, 614, 619, 684], "account": [171, 621], "g": [171, 370, 389, 424, 441, 455, 461, 463, 470], "examin": [171, 372, 385, 388, 614, 617, 622, 680, 691], "box": [171, 389, 628, 670], "alwai": [171, 373, 385, 444, 445, 455, 461, 615, 621, 625, 680], "readi": 171, "min_ncp": [172, 173, 210], "min_rhv": [172, 173, 209, 210], "min_refl": [172, 210], "20": [172, 209, 210, 465, 580, 611, 612, 613, 614, 615, 617, 619, 634, 635, 638, 639, 646, 648, 649, 652, 654, 655, 656, 657, 658, 660, 665, 667, 668, 669, 671, 677, 678, 682, 686, 688, 693], "max_refl": [172, 210], "undesir": [172, 208, 209, 210, 211, 428], "cross": [172, 209, 210, 227, 230, 252, 288, 291, 317, 320, 350, 353, 426, 582, 583, 611, 614, 617, 621, 630, 632, 643, 654, 663, 665, 668, 688, 689], "ratio": [172, 209, 210, 241, 301, 334, 367, 431, 434, 611, 614, 617, 619, 630, 688], "min_rhi": [172, 210], "criteria": [172, 208, 209, 210, 211, 428, 461, 467, 619], "built": [172, 208, 209, 210, 211, 427, 428, 618], "lowest": [172, 208, 209, 210, 211, 433, 464, 617, 618, 634, 638, 666, 668, 669], "greatest": [172, 210], "self_const": [173, 174], "60000": [173, 174, 641, 646, 686], "low_z": [173, 174], "high_z": [173, 174], "53": [173, 174, 611, 613, 617, 672], "min_phidp": [173, 174], "01": [173, 174, 326, 359, 461, 611, 613, 614, 617, 619, 631, 642, 644, 663, 673, 689], "sys_phas": 173, "overide_sys_phas": 173, "nowrap": [173, 174], "really_verbos": [173, 174], "lp_solver": [173, 174], "pyglpk": [173, 174, 621, 680, 690], "kdp_field": [173, 174, 449, 450, 452, 453, 460, 461, 462, 463, 670, 671], "unf_field": [173, 174], "window_len": [173, 174], "proc": [173, 174, 461, 621], "coef": [173, 174, 621], "914": [173, 174, 621], "lp": [173, 174, 621, 680], "consist": [173, 174, 621, 665, 686, 693], "factor": [173, 174, 391, 433, 448, 449, 450, 451, 452, 453, 579, 611, 612, 614, 618, 621, 648, 656, 662, 686], "low": [173, 174, 381, 461, 618, 639, 649], "high": [173, 174, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 444, 460, 461, 614, 615, 617, 639, 670, 671], "copolar": [173, 174, 460, 667], "lpx": [173, 174], "messag": [173, 174, 243, 260, 381, 612, 618, 621, 624, 635], "suppress": [173, 174, 461], "cvxopt": [173, 174, 621, 680, 690], "cylp": [173, 174, 621, 680, 690, 694], "cylp_mp": [173, 174], "modul": [173, 174, 566, 609, 615, 621, 622, 634, 635, 680, 683, 684, 686, 687, 688, 690, 691, 693], "solv": [173, 174, 620, 621], "horizon": [173, 174, 460], "sobel": [173, 174], "worker": [173, 174], "link": [173, 174, 613, 614, 617, 619, 621], "1z": [173, 174], "reproc_phas": [173, 174], "sob_kdp": [173, 174], "recalcul": [173, 174, 682], "giangrand": [173, 174, 680], "mcgraw": [173, 174], "lei": [173, 174], "applic": [173, 174, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 389, 445, 455, 602, 615, 617, 622, 691], "program": [173, 174, 621, 622, 680, 691], "tech": [173, 174, 449, 460, 594, 649, 669], "2013": [173, 174, 462, 465, 688], "30": [173, 174, 438, 439, 444, 445, 455, 609, 611, 613, 614, 615, 618, 619, 630, 638, 639, 647, 648, 652, 654, 665, 668, 669, 684], "1716": [173, 174], "system_phas": 174, "ncpt": 174, "first_gate_sysp": 174, "carri": 174, "smaller": [174, 361, 428, 611, 614, 615, 622, 668, 691], "off": [174, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 459, 611, 615, 644, 668, 669], "help": [175, 389, 471, 613, 614, 615, 617, 619, 622, 624, 638, 644, 668, 691, 694], "custom": [176, 226, 227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 287, 288, 289, 290, 295, 299, 300, 316, 317, 318, 319, 327, 328, 332, 333, 349, 350, 351, 352, 360, 361, 365, 366, 427, 444, 615, 632, 664, 673, 686, 689], "max_h_iso0": 208, "thick": [208, 211], "400": [208, 211, 621, 682], "beamwidth": [208, 211], "primarili": [208, 211], "melt": [208, 211, 449, 460, 461, 465, 594, 649, 668, 669, 670, 671], "db": [208, 211, 431, 619, 630, 657, 671, 688], "phi_field": 209, "textzdr_field": 209, "textrhv_field": 209, "textphi_field": 209, "textrefl_field": 209, "wind_siz": [209, 432, 607, 684], "7": [209, 379, 460, 469, 607, 611, 613, 614, 615, 617, 618, 622, 624, 646, 649, 661, 665, 671, 687, 688, 691], "max_textphi": 209, "max_textrhv": 209, "max_textzdr": 209, "85": [209, 611, 615, 671, 672], "max_textrefl": 209, "move": [209, 590, 613, 617, 621, 638, 693], "highest": 209, "min_temp": 211, "There": [212, 613, 615, 617, 624, 644, 690, 694], "colorblind": [212, 612, 617, 644], "friendli": [212, 612, 617, 621, 644], "revers": [212, 227, 238, 288, 299, 317, 332, 350, 365, 385, 461, 621], "_r": 212, "matplotlib": [212, 227, 229, 232, 233, 234, 238, 239, 240, 252, 253, 254, 256, 258, 268, 269, 271, 273, 288, 290, 293, 294, 295, 299, 300, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 370, 389, 611, 612, 613, 614, 617, 618, 619, 621, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 680, 682, 683, 684, 686, 687, 690, 694], "pyart_colormap": 212, "bluebrown10": [212, 644], "bluebrown11": [212, 644], "brbu10": [212, 644], "brbu12": [212, 644], "bu10": [212, 644], "bu7": [212, 644], "budor12": [212, 644], "budor18": [212, 644], "budrd12": [212, 644], "budrd18": [212, 644], "bugr14": [212, 644], "bugy8": [212, 644], "buor10": [212, 644], "buor12": [212, 644], "buor8": [212, 644], "buorr14": [212, 644], "carbone11": [212, 644], "carbone17": [212, 644], "carbone42": [212, 644], "cat12": [212, 644], "ewilson17": [212, 644], "grmg16": [212, 644], "gray5": [212, 644], "gray9": [212, 644], "nwsref": [212, 644], "nwsvel": [212, 644], "nws_spw": [212, 644], "pd17": [212, 644], "rrate11": [212, 644], "rdylbu11b": [212, 644], "refdiff": [212, 644], "scook18": [212, 644], "stepseq25": [212, 644], "symgray12": [212, 644], "theodore16": [212, 644], "wild25": [212, 644], "langrainbow12": [212, 644], "homeyerrainbow": [212, 370, 621, 644, 645], "balanc": [212, 621, 644], "chasespectr": [212, 644, 693], "spectralextend": [212, 644], "displai": [213, 227, 229, 234, 238, 239, 240, 242, 274, 288, 290, 295, 299, 300, 302, 303, 317, 319, 327, 328, 332, 333, 335, 336, 350, 352, 360, 361, 365, 366, 368, 370, 389, 433, 469, 470, 612, 613, 614, 615, 617, 618, 619, 621, 622, 627, 628, 629, 634, 635, 639, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 682, 683, 684, 686, 687, 691, 693], "airborn": [213, 621], "plot_var": [213, 274, 303, 336], "order": [213, 274, 303, 336, 369, 385, 390, 391, 417, 445, 455, 460, 461, 579, 611, 618, 619, 621, 622, 668, 669, 680, 691], "cb": [213, 274, 303, 336, 648, 669, 671], "colorbar": [213, 227, 228, 229, 234, 237, 238, 239, 240, 251, 252, 254, 256, 258, 259, 260, 267, 269, 271, 273, 274, 288, 289, 290, 295, 298, 299, 300, 303, 317, 318, 319, 327, 328, 331, 332, 333, 336, 350, 351, 352, 360, 361, 364, 365, 366, 370, 611, 613, 614, 615, 621, 632, 638, 643, 644, 662, 663, 665, 669, 689], "loc": [213, 274, 303, 336, 611, 613, 617, 618, 619, 646], "titl": [214, 216, 217, 218, 227, 229, 234, 237, 238, 239, 240, 248, 249, 250, 252, 254, 256, 258, 259, 262, 263, 264, 269, 271, 273, 275, 277, 278, 279, 288, 290, 295, 298, 299, 300, 304, 306, 307, 308, 317, 319, 327, 328, 331, 332, 333, 337, 339, 340, 341, 350, 352, 360, 361, 364, 365, 366, 370, 612, 613, 614, 615, 617, 618, 620, 621, 627, 629, 638, 648, 650, 651, 653, 655, 656, 660, 688], "ext": [215, 247, 261, 276, 305, 338], "png": [215, 247, 261, 276, 305, 338, 612, 613, 615, 617, 618], "datetime_format": [215, 217, 276, 278, 305, 307, 338, 340], "use_sweep_tim": [215, 217, 276, 278, 305, 307, 338, 340], "form": [215, 229, 247, 261, 276, 290, 305, 319, 338, 352, 611, 615, 621], "radar_name_field_sweep_tim": [215, 276, 305, 338], "datetim": [215, 217, 234, 238, 240, 276, 278, 295, 299, 300, 305, 307, 327, 332, 333, 338, 340, 360, 365, 366, 374, 375, 391, 435, 438, 439, 441, 442, 443, 584, 585, 586, 587, 588, 613, 617, 618, 621, 647], "strftime": [215, 217, 234, 238, 276, 278, 295, 299, 305, 307, 327, 332, 338, 340, 360, 365, 613, 614, 618, 647], "suitabl": [215, 247, 261, 276, 305, 338, 444, 615], "xaxi": [219, 222, 280, 283, 309, 312, 342, 345, 648], "static": [220, 221, 230, 231, 235, 241, 242, 281, 282, 291, 292, 296, 301, 302, 310, 311, 320, 321, 334, 335, 343, 344, 353, 354, 367, 368, 612], "yaxi": [220, 221, 223, 224, 225, 281, 282, 284, 285, 286, 310, 311, 313, 314, 315, 343, 344, 346, 347, 348], "keyword": [226, 287, 316, 328, 349, 361, 370, 381, 383, 611, 615, 621, 683, 686], "plot_ppi": [226, 287, 316, 349, 621, 629, 670, 671, 676, 678, 682], "plot_sweep_grid": [226, 621], "target_azimuth": [227, 288, 317, 350, 582], "mask_tupl": [227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 615], "norm": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 461, 615, 621, 648, 670], "cmap": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 259, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 370, 389, 611, 612, 613, 614, 615, 617, 618, 619, 638, 644, 645, 646, 647, 648, 649, 653, 656, 658, 660, 661, 665, 667, 668, 669, 671, 676, 677, 678, 683, 684, 693], "mask_outsid": [227, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 612, 615, 621, 655, 656, 665, 671], "title_flag": [227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 615, 660], "axislabel": [227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 331, 332, 333, 350, 352, 360, 364, 365, 366, 612, 650, 655, 656], "axislabels_flag": [227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 331, 332, 333, 350, 352, 360, 364, 365, 366, 621, 668, 669], "colorbar_flag": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 613, 615, 618], "colorbar_label": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 612, 615, 617, 627, 629, 634, 650, 651, 655, 656, 657, 658, 662, 671, 676], "colorbar_ori": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 617, 621], "reverse_xaxi": [227, 238, 288, 299, 317, 332, 350, 365], "fig": [227, 228, 229, 234, 237, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 298, 299, 300, 317, 318, 319, 327, 328, 331, 332, 333, 350, 351, 352, 360, 361, 364, 365, 366, 611, 612, 613, 614, 615, 617, 618, 619, 627, 629, 630, 634, 635, 638, 639, 640, 641, 644, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 665, 667, 669, 670, 671, 672, 676, 684, 686, 687], "tick": [227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 299, 300, 317, 318, 319, 327, 328, 332, 333, 350, 351, 352, 360, 361, 365, 366, 615, 621, 644, 648, 668, 669, 670], "ticklab": [227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 299, 300, 317, 318, 319, 327, 328, 332, 333, 350, 351, 352, 360, 361, 365, 366, 615, 621, 668, 669, 670], "raster": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 389, 615, 621], "pseudo": [227, 288, 317, 350, 621], "associ": [227, 288, 317, 350, 406, 444, 611, 624, 665, 693], "pcolormesh": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 370, 611, 621, 638, 657, 665, 668, 669], "integ": [227, 288, 317, 350, 391, 432, 458, 459], "ncp": [227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 615], "lumin": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 615], "scale": [227, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 370, 390, 391, 427, 428, 436, 444, 461, 462, 611, 614, 615, 649], "west": [227, 238, 288, 299, 317, 332, 350, 365, 611, 615, 650], "leav": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 613, 615], "orient": [227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 299, 300, 317, 318, 319, 327, 328, 332, 333, 350, 351, 352, 360, 361, 365, 366, 460, 613, 615, 616, 618, 670, 672], "treat": [227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 615], "themselv": [227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 615], "figur": [227, 228, 229, 234, 237, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 298, 299, 300, 317, 318, 319, 327, 328, 331, 332, 333, 350, 351, 352, 360, 361, 364, 365, 366, 612, 613, 614, 615, 617, 618, 619, 620, 627, 629, 634, 635, 638, 639, 640, 641, 644, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 667, 668, 669, 671, 676, 683, 684, 686, 687], "render": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 614, 615], "rather": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 615], "larg": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 461, 467, 615, 617, 618, 621], "Be": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 615, 624], "sure": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 614, 615, 618, 620, 621, 624, 638, 648, 668, 690, 694], "dpi": [227, 229, 234, 238, 239, 240, 259, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 370, 613, 615, 617], "pdf": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 615], "ep": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 615], "svg": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 615], "mappabl": [228, 251, 260, 267, 289, 318, 351, 618], "cax": [228, 251, 267, 289, 318, 351, 670], "imag": [228, 251, 267, 289, 318, 351, 444, 459, 579, 594, 611, 612, 614, 615, 618, 621, 632, 643, 663, 666, 668, 669, 689], "contourset": [228, 251, 260, 267, 289, 318, 351], "etc": [228, 251, 254, 260, 267, 289, 318, 328, 351, 361, 388, 435, 438, 439, 441, 443, 455, 613, 615, 621, 665], "onto": [228, 251, 267, 269, 289, 318, 328, 351, 361, 417, 424, 428, 464, 615, 619], "drawn": [228, 251, 267, 289, 318, 351, 615], "target_rang": [229, 290, 319, 352, 645], "delta_x": [229, 290, 319, 352], "delta_i": [229, 290, 319, 352], "az_limit": [229, 290, 319, 352], "el_limit": [229, 290, 319, 352, 645], "corner": [229, 290, 319, 326, 352, 359, 615, 616, 621, 632, 643, 663, 689], "reflector": [229, 290, 319, 352, 621, 632, 643, 663, 689], "griddata": [229, 290, 319, 352], "min": [229, 290, 319, 352, 611, 615, 672], "max": [229, 290, 319, 352, 370, 389, 611, 615, 621, 632, 634, 638, 639, 643, 644, 645, 646, 652, 660, 663, 672, 676, 677, 678, 689], "npt": [230, 235, 291, 296, 320, 329, 353, 362], "hair": [230, 291, 320, 353, 654], "higher": [230, 235, 291, 296, 320, 329, 353, 362, 428, 614, 619, 665, 684, 686], "col": [231, 235, 236, 292, 296, 297, 321, 330, 354, 363, 614, 639], "line": [231, 237, 253, 254, 266, 268, 292, 298, 321, 324, 325, 328, 329, 331, 354, 357, 358, 361, 362, 364, 370, 389, 461, 612, 613, 614, 615, 618, 621, 622, 624, 632, 643, 646, 663, 665, 666, 689, 690, 691, 694], "color": [231, 232, 233, 235, 236, 253, 292, 293, 294, 296, 297, 321, 322, 323, 325, 328, 329, 330, 354, 355, 356, 361, 363, 370, 389, 612, 613, 614, 615, 617, 618, 619, 646, 648, 649, 657, 658, 665, 666, 668, 669, 670, 671], "linestyl": [231, 235, 236, 253, 292, 296, 297, 321, 330, 354, 363, 613, 615, 617, 646, 648, 658], "symbol": [232, 233, 293, 294, 322, 323, 326, 355, 356, 359], "text_color": [232, 233, 293, 294, 322, 323, 355, 356], "text": [232, 233, 293, 294, 322, 323, 326, 355, 356, 359, 482, 613, 620, 621, 624, 644, 655, 672, 680, 684], "just": [232, 233, 293, 294, 322, 323, 355, 356, 379, 589, 619, 621, 622, 644, 649, 682, 688, 691, 694], "marker": [232, 233, 237, 253, 268, 293, 294, 298, 322, 323, 331, 355, 356, 364, 611, 613, 618], "title_datetime_format": [234, 238, 295, 299, 327, 332, 360, 365], "title_use_sweep_tim": [234, 238, 295, 299, 327, 332, 360, 365], "range_ring_location_km": [235, 296, 329, 362], "lw": [235, 236, 296, 297, 330, 363, 615, 617, 665], "range_r": [236, 259, 297, 330, 363, 370, 647], "seri": [236, 297, 330, 363, 442, 611, 614], "draw": [236, 254, 266, 297, 328, 330, 361, 363, 613, 615], "format_str": [237, 298, 331, 364], "ray_min": [237, 298, 331, 364], "ray_max": [237, 298, 331, 364], "style": [237, 253, 268, 298, 324, 325, 329, 331, 357, 358, 362, 364, 389, 621, 647], "ignoretilt": 239, "antenna_to_cartesian_track_rel": 239, "slant": [239, 425, 441], "ncar": 239, "soloii": 239, "time_axis_flag": [240, 300, 333, 366, 614], "date_time_form": [240, 300, 333, 366], "tz": [240, 300, 333, 366, 613], "zone": [240, 300, 333, 366], "info": [240, 300, 328, 333, 361, 366, 615, 621, 647, 670, 671, 688], "aspect_ratio": [241, 301, 334, 367], "aspect": [241, 301, 334, 367, 644], "xlim": [242, 302, 335, 368, 611, 612, 615, 617, 618, 619, 628, 651, 653, 657, 658, 671, 686], "ylim": [242, 302, 335, 368, 611, 612, 614, 615, 617, 618, 619, 651, 653, 655, 656, 657, 658, 660, 662, 665, 671], "cartopi": [243, 244, 245, 246, 254, 303, 328, 370, 611, 613, 615, 617, 618, 619, 621, 622, 632, 634, 635, 638, 639, 643, 646, 648, 661, 663, 666, 668, 669, 676, 680, 683, 684, 686, 687, 689, 690, 691, 694], "coastlin": [244, 254, 328, 361, 611, 615], "polit": 245, "state": [246, 462, 613, 615, 617, 621], "grid_name_field_level_tim": [247, 261], "latitudin": [249, 256, 271], "step": [252, 389, 435, 438, 439, 441, 442, 443, 612, 614, 619, 624, 634, 657, 658, 668, 694], "interp_typ": 252, "x_axi": [252, 646], "metpi": [252, 613, 615, 617, 618, 621], "design": [252, 594, 611, 622, 657, 668, 669, 680, 691], "geodes": 252, "nearest": [252, 381, 425, 428, 435, 438, 439, 441, 443, 456, 582, 583, 603, 611, 615, 621, 686], "dataarrai": 252, "interp": [252, 463], "ex": [252, 463, 613, 617, 619, 620, 644], "upper": [252, 254, 256, 258, 269, 271, 273, 613, 617, 618, 619, 646], "colormesh": [252, 254, 256, 258, 269, 271, 273], "64": [252, 254, 256, 258, 269, 271, 273, 612, 644, 651, 652, 653, 657, 659, 661, 662, 666, 687, 690], "linewidth": [253, 268, 613, 615, 617, 618, 648, 657, 658], "crosshair": [253, 268, 615], "lat_lin": [254, 259, 266, 328, 361, 370, 613, 615, 638, 654, 666], "lon_lin": [254, 259, 266, 328, 361, 370, 613, 615, 638, 654, 666], "embellish": [254, 328, 361, 613, 648], "add_grid_lin": [254, 328, 613], "reason": [254, 266, 615], "america": [254, 266, 328, 361, 615], "cr": [254, 303, 328, 370, 460, 611, 613, 615, 617, 618, 619, 634, 635, 638, 639, 646, 648, 654, 661, 666, 668, 669, 670, 676, 683, 684, 687], "subsequ": [254, 328, 615], "geoax": [254, 328, 615, 683, 686], "platecarre": [254, 328, 611, 613, 615, 617, 618, 619, 634, 638, 646, 648, 661, 666, 668, 669, 676, 684, 687], "shapefil": [254, 328, 361, 615], "certain": [254, 328, 371, 459, 594, 615, 621, 668, 669, 687], "plot_latitudinal_level": [255, 270], "y_index": [256, 271], "basemap": [256, 258, 260, 265, 266, 269, 271, 273, 336, 357, 358, 359, 361, 362, 621, 680, 690], "plot_longitudinal_level": [257, 272], "x_index": [258, 273], "add_map": [259, 370], "savedir": [259, 370], "show_figur": [259, 370], "add_slogan": [259, 370, 647], "top": [260, 428, 464, 611, 613, 616, 621, 622, 644, 665, 666, 686, 691], "veric": 262, "area_thresh": [266, 361], "10000": [266, 361, 435, 438, 439, 441, 443, 470, 639, 646, 647, 668, 669, 686], "auto_rang": 266, "min_lon": [266, 328, 361, 613, 615, 638, 654, 687], "92": [266, 655, 666], "max_lon": [266, 328, 361, 613, 615, 638, 654, 687], "86": [266, 615], "min_lat": [266, 328, 361, 613, 615, 638, 654, 687], "max_lat": [266, 328, 361, 613, 615, 638, 654, 687], "44": [266, 445, 455, 611, 613, 668, 669, 690], "databas": [266, 361, 617], "merc": [266, 361], "mercat": [266, 639], "line_styl": [268, 324, 325, 329, 357, 358, 362, 654], "plot_rhi": [287, 316, 349, 611], "plot_vpt": [287, 316, 349, 614], "grid_project": [303, 427, 428, 615], "progress": [303, 336, 618, 693], "correctli": [303, 336, 618, 621, 647], "github": [303, 336, 613, 616, 621, 658, 680, 690, 693, 694], "tracker": [303, 336, 622, 680, 691], "azimuthalequidist": 303, "line_lon": [324, 357], "line_lat": [324, 357], "compat": [324, 325, 326, 329, 357, 358, 359, 362, 386, 613, 621, 625, 693, 694], "line_x": [325, 358], "line_i": [325, 358], "ro": [326, 359], "label_text": [326, 359], "label_offset": [326, 359], "bottom": [326, 359, 613, 615, 644, 648], "110m": [328, 615], "shapefile_kwarg": [328, 615], "alpha": [328, 361, 448, 449, 450, 451, 452, 453, 613, 617, 648, 657, 665], "edgecolor": [328, 361, 613, 617, 657], "face": [328, 361, 615], "reson": [328, 361, 615], "lambertconform": [328, 615, 635, 654, 683], "domain": [328, 361, 611, 615, 638], "neither": [328, 361, 393, 615], "extend": [328, 361, 385, 615], "word": [328, 615], "10m": [328, 613, 615, 619, 635, 654], "50m": [328, 615, 676, 684, 687], "naturalearthfeatur": [328, 615], "tranpar": [328, 361, 615], "overplot": [328, 361, 615], "pixel": [328, 361, 458, 459, 564, 611, 615], "lcc": 361, "cylindr": 361, "mill": 361, "exhibit": 361, "distort": 361, "aea": 361, "laea": 361, "conform": [361, 615, 680, 682], "tmerc": 361, "stere": 361, "aeqd": 361, "cass": 361, "even": [361, 444, 463, 617, 621, 657, 665, 680, 686, 694], "cyl": [361, 621], "cannot": [361, 373, 613, 615], "lake": [361, 617], "esri": 361, "background": [361, 369, 370, 445, 455, 467, 615, 620, 654, 661, 668, 669], "untest": 361, "always_core_thr": [369, 445, 455, 668, 669], "use_cosin": [369, 445, 455, 668, 669], "max_diff": [369, 445, 455, 668, 669], "zero_diff_cos_v": [369, 445, 455, 668, 669], "use_addit": [369, 445, 455, 668, 669], "scalar_diff": [369, 445, 455, 668, 669], "convect": [369, 444, 445, 455, 467, 611, 618, 621, 632, 664, 673, 689], "stratiform": [369, 444, 445, 455, 467, 621, 632, 664, 673, 689], "classif": [369, 444, 445, 449, 455, 460, 467, 621, 632, 664, 673, 689], "cosin": [369, 445, 455, 668, 669], "classifi": [369, 444, 445, 455, 460, 621, 668, 669, 670], "eqn": [369, 445, 455], "b1": [369, 445, 455, 619], "yuter": [369, 445, 446, 455, 467, 594, 649, 665, 668, 669], "1997": [369, 445, 455, 668, 669], "zero": [369, 387, 445, 455, 459, 461, 603, 618, 621, 630, 665, 668, 669, 683, 687], "multipli": [369, 445, 455, 614, 668, 682], "constant": [370, 381, 421, 427, 428, 458, 461, 611, 614, 621], "plan": 370, "cappi": [370, 632, 643, 663, 689], "ref": [370, 615, 647, 661, 669], "vel": 370, "syedspectr": 370, "lambertazimuthalequalarea": 370, "dot": [370, 658], "inch": [370, 617], "It": [370, 428, 463, 579, 590, 613, 615, 619, 622, 625, 638, 691, 693, 694], "author": [370, 430, 433, 455, 594, 612, 619, 620, 624, 627, 628, 629, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 672, 676, 677, 678], "hamid": [370, 647], "ali": [370, 647], "syedhamidali": [370, 621], "most": [371, 379, 613, 614, 615, 621, 644, 665, 669, 684, 686, 694], "storage_opt": [372, 381, 383], "anon": [372, 381, 383, 611, 613, 617, 618, 647], "open": [372, 381, 383, 482, 611, 614, 615, 617, 618, 620, 621, 622, 651, 680, 682, 683, 684, 686, 687, 688, 691, 694], "binari": [372, 455, 611, 624], "transpar": [372, 613, 615, 621, 657], "decompress": [372, 621], "gzip": [372, 379, 380], "bzip2": [372, 621], "close": [372, 455, 461, 612, 613, 617, 618, 619, 621, 630], "compress": [372, 379, 380, 615, 621], "backend": [372, 381], "googl": [372, 381, 621, 622, 691], "storag": [372, 381, 559], "amazon": [372, 381, 611, 613, 615, 617, 634, 635], "web": [372, 381, 389, 611, 615, 617, 619, 634, 635], "servic": [372, 381, 611, 613, 615, 617, 619, 624, 634, 635, 644], "s3": [372, 381, 613, 617, 634, 635, 647, 649, 668, 669], "file_lik": 372, "use_rsl": 373, "read_": 373, "trmm": [373, 385, 621, 680, 690], "librari": [373, 382, 385, 388, 389, 611, 613, 614, 615, 617, 621, 622, 623, 680, 682, 683, 684, 686, 687, 688, 690, 691, 693], "choos": [373, 615, 632, 643, 663, 668, 669, 689, 694], "Not": [373, 380, 460], "typeerror": [373, 621], "launch_datetim": 374, "date": [374, 375, 609, 613, 615, 619, 620, 621, 634, 635, 647], "radiosond": 374, "launch": 374, "record": [374, 617, 619, 688], "target_datetim": 375, "closest": [375, 417, 435, 438, 439, 441, 443], "profile_datetim": 375, "use_arm_scan_nam": 376, "scan_nam": [376, 611, 614, 621], "use_file_field_attribut": 377, "csu": [377, 621], "chill": 377, "chl": [377, 621], "field_file_nam": 377, "long_nam": [377, 611, 614, 628, 668, 669, 671, 683, 688], "zlib": [379, 380], "read_mdv": [379, 612, 629, 640, 653, 657, 658, 659], "interchang": 379, "vlevel": 379, "proj_polar_radar": 379, "9": [379, 449, 451, 460, 590, 611, 613, 614, 615, 617, 618, 620, 649, 654, 658, 666, 667, 668, 669, 671, 676, 680, 682, 687, 688], "proj_rhi_radar": 379, "vlevel_typ": 379, "vert_type_z": 379, "vert_type_elev": 379, "vert_type_az": 379, "17": [379, 613, 614, 655, 660, 673], "vert_type_pressur": 379, "vert_type_theta": 379, "unknown": [379, 621], "station": [381, 382, 615, 635], "linear_interp": 381, "nexrad": [381, 382, 383, 384, 611, 621, 632, 633, 636, 643, 647, 649, 663, 668, 669, 680, 688, 689], "archiv": [381, 613, 615, 617, 619, 650, 680], "host": [381, 383, 613, 624], "noaa": [381, 383, 385, 611, 613, 615, 617, 618, 634, 635, 647, 649, 668, 669], "nation": [381, 383, 611, 613, 615, 617, 618, 634, 644], "climat": [381, 383, 614, 615, 617, 621, 622, 680, 682, 683, 684, 686, 687, 688, 691], "ucar": [381, 382, 611], "thredd": [381, 382, 388], "server": [381, 382], "letter": [381, 382, 384], "icao": [381, 382, 621], "older": [381, 382, 621, 622, 632, 633, 636, 680, 689, 691], "mix": [381, 444, 594, 649, 668, 669], "fsspec": [381, 383, 617, 618, 621, 647], "cut": [381, 382, 383, 459], "www": [381, 382, 383, 458, 613, 617, 622, 691], "ncdc": [381, 383], "gov": [381, 383, 611, 612, 613, 617, 619, 627, 629, 634, 635, 638, 640, 641, 644, 645, 646, 648, 650, 651, 652, 653, 655, 657, 658, 659, 660, 662, 666, 667, 676, 677, 678], "edu": [381, 382, 458, 611, 647, 649, 665, 668, 669], "catalog": [381, 382, 611], "html": [381, 382, 458, 613, 617, 621, 622, 680, 690, 691], "common": [382, 614, 621, 639, 680, 690], "cdm": [382, 388], "url": [382, 613, 615, 619], "java": [382, 388], "tool": [382, 388, 611, 614, 619, 680, 690], "opendap": 382, "accept": [382, 435, 438, 439, 441, 462, 463, 615, 619, 621, 622, 691], "compil": [382, 462, 618, 621, 680, 690], "unidata": [382, 611, 634], "htm": 382, "product": [383, 385, 433, 470, 611, 615, 621], "nw": [383, 617, 618], "wsr": 383, "88d": 383, "iii": 383, "distribut": [383, 445, 446, 454, 455, 469, 564, 575, 576, 577, 578, 595, 596, 621, 622, 665, 668, 669, 680, 691], "roc": 383, "wsr88d": [383, 384], "level_iii": 383, "level3info": 383, "asp": 383, "radar_format": 384, "callid": 384, "skip_range_check": 384, "rsl_radar": 384, "id": [384, 389, 611, 619, 621], "verifi": [384, 597, 608], "ioerror": 384, "time_ord": [385, 621], "full_xhdr": 385, "noaa_hh_hdr": 385, "ignore_xhdr": 385, "ignore_sweep_start_m": 385, "sigmet": [385, 621, 680], "iri": [385, 621, 680, 690], "sequenti": [385, 644], "re": [385, 444, 613, 622, 691], "manner": 385, "determind": 385, "maintain": [385, 424, 621], "yet": [385, 634, 639], "warn": [385, 388, 460, 611, 613, 614, 615, 617, 618, 619, 621, 638, 647, 671, 686], "reverse_and_rol": 385, "strictli": 385, "increas": [385, 428, 461, 464, 611, 615, 622, 644, 665, 686, 691], "becom": [385, 668, 683, 686], "thisopt": 385, "strict": 385, "header": [385, 621], "decod": [385, 621], "hurrican": [385, 615, 668, 669], "hunter": 385, "millisecond": [385, 618], "precis": [385, 444], "explic": 385, "read_rsl": [385, 690], "error": [385, 389, 462, 463, 611, 613, 615, 618, 620, 621, 639, 647, 690], "uf": [386, 391, 621, 680], "introduc": [386, 463], "implement": [386, 393, 406, 427, 450, 458, 614, 615, 618, 621, 622, 627, 669, 691], "time_refer": [387, 682], "compliant": 387, "mani": [387, 621, 622, 680, 686, 691, 694], "outlin": [387, 461, 590], "_zlib": [387, 388], "_deflatelevel": [387, 388], "_shuffl": [387, 388], "_fletcher32": [387, 388], "_contingu": [387, 388], "_chunksiz": [387, 388], "_endian": [387, 388], "_least_significant_digit": [387, 388], "_fillvalu": [387, 388, 621, 683, 688], "write_proj_coord_si": 388, "proj_coord_si": 388, "write_point_x_y_z": 388, "write_point_lon_lat_alt": 388, "projectioncoordinatesystem": 388, "toolsui": 388, "written": [388, 390, 391, 621, 624, 680], "appropri": [388, 590, 615, 625], "understood": 388, "rgb": 389, "viridi": [389, 668, 669], "color_level": 389, "warp": 389, "sld": 389, "use_doublequot": 389, "geotiff": [389, 621, 680], "wgs84": 389, "sphere": [389, 591, 604], "latter": [389, 615], "usabl": [389, 611], "byte": [389, 621], "former": 389, "gi": 389, "while": [389, 615, 618, 619, 639, 680, 684, 694], "show": [389, 611, 612, 613, 615, 617, 619, 620, 621, 622, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 668, 669, 671, 676, 682, 684, 686, 687, 688, 691], "lack": [389, 404, 414], "composit": [389, 433, 611, 614, 621, 632, 664, 673, 689], "gdal": [389, 621, 680], "via": [389, 425, 426, 613, 615, 624], "conda": [389, 617, 621, 622, 680, 690, 691, 694], "rbg": 389, "tabl": [389, 611], "column": [389, 580, 592, 593, 611, 613, 614, 615, 621, 632, 664, 673, 689], "categor": [389, 613, 670], "255": [389, 621, 669], "hydrometeor": [389, 449, 460, 621, 632, 664, 673, 684, 689], "gdalwarp": 389, "command": [389, 621, 622, 624, 680, 683, 691, 694], "o": [389, 482, 613, 615, 618, 622, 648, 680, 690, 691], "az": [389, 613, 621, 655, 656], "descriptor": 389, "tiff": 389, "don": [389, 614, 615, 618, 621, 638], "t": [389, 438, 444, 445, 455, 461, 462, 465, 470, 611, 614, 615, 618, 619, 621, 638, 665, 668, 669, 680, 682], "quot": 389, "translat": 389, "sr": [389, 611], "instead": [389, 611, 613, 615, 618, 619, 621, 622, 635, 665, 668, 686, 690, 691, 694], "mdv_field_nam": [390, 621], "field_write_ord": [390, 391], "sentinel": [390, 391], "float32": [390, 611, 614, 615, 621, 666, 682, 684, 688], "_write_as_dtyp": 390, "writabl": 390, "satisfi": 390, "xy": [390, 428], "irregular": 390, "exce": [390, 668, 669], "122": [390, 619, 634, 638, 646, 667, 671, 676], "uint8": 390, "uint16": 390, "scale_factor": [390, 614], "add_offset": [390, 614], "uncompress": 390, "sai": [390, 622, 691], "uf_field_nam": 391, "radar_field_nam": 391, "volume_start": 391, "templates_extra": 391, "radar_beam_width_h": [391, 614], "radar_beam_width_v": [391, 614], "radar_receiver_bandwidth": 391, "prt": [391, 614], "polarization_mod": 391, "round": [391, 425, 426, 615, 619, 621], "_uf_scale_factor": 391, "charact": 391, "advanc": [391, 611], "usag": 391, "templat": [391, 621, 624], "mandatory_head": 391, "optional_head": 391, "field_head": 391, "lazi": [392, 393, 395, 402, 621], "set_lazi": 393, "callabl": [393, 402, 614, 615], "cach": 393, "tradit": 393, "supplement": 393, "syntax": [393, 621], "prevent": [393, 428, 613, 621, 622, 691], "comparison": [393, 621, 638, 669], "__cmp__": 393, "__ge__": 393, "__gt__": 393, "__le__": 393, "__lt__": 393, "__ne__": 393, "nor": 393, "viewitem": 393, "viewkei": 393, "viewvalu": 393, "fromkei": 393, "tradition": 393, "referenc": 393, "lazyloaddictionari": 393, "henc": 393, "key1": 393, "value1": 393, "key2": 393, "value2": 393, "lazy_func": 393, "lambda": 393, "lazykey1": 393, "item": [394, 404, 407, 414, 621], "els": [396, 397, 408, 614, 618, 619, 647, 671], "value_cal": 402, "concret": 406, "__getitem__": [406, 614], "__setitem__": 406, "__delitem__": 406, "__iter__": 406, "__len__": 406, "robust": [416, 444, 621], "src_radar": 417, "dest_radar": 417, "distance_toler": [417, 638], "500": [417, 613, 617, 635, 636, 638, 646, 651, 689], "gatefilter_src": [417, 638], "time_toler": [417, 638], "60": [417, 611, 627, 634, 638, 641, 648, 677, 682, 684, 686, 693], "kd": 417, "tree": [417, 428, 676, 677, 678, 693], "physic": [417, 433, 445, 455, 668, 669], "easi": [417, 433, 680], "equival": [417, 612, 614, 618, 621, 634, 648, 656, 662], "src_radar_i": 417, "src_radar_x": 417, "destin": [417, 419, 613, 617, 621, 638], "toler": [417, 418, 420, 435, 438, 441, 442, 443, 582, 583, 621], "src_radar_tim": 417, "dest_radar_tim": 417, "gate_mapp": 417, "src": [417, 617], "dest": 417, "dest_index": 417, "radar_map": 417, "mapped_radar": [417, 638], "adequ": [417, 638], "getter": [418, 420], "field_list": [419, 459], "zg": [421, 422, 423], "yg": [421, 422, 423], "xg": [421, 422, 423], "roi": [421, 422, 423, 425, 426, 428, 621, 639], "influenc": [421, 424, 427, 428, 686], "grow": [422, 423, 427, 428, 622, 691], "virtual": [423, 427, 428], "grid_shap": [424, 425, 426, 427, 428, 560, 639, 640, 641, 646, 647, 668, 669, 677, 686, 693], "grid_limit": [424, 425, 426, 427, 428, 560, 639, 640, 641, 646, 647, 668, 669, 677, 686, 693], "gridding_algo": 424, "map_gates_to_grid": [424, 621], "copy_field_dtyp": [424, 621], "map_to_grid": [424, 427, 621], "significantli": [424, 428], "faster": [424, 428, 615, 621], "barn": [424, 428, 621, 686], "1964": 424, "techniqu": [424, 444, 630, 669], "maxim": 424, "numer": [424, 621], "analysi": [424, 436, 444, 593, 615, 619, 621], "meteorologi": [424, 430, 433, 461, 470, 590], "climatologi": [424, 470], "396": [424, 614], "409": [424, 621], "cressman": [424, 428, 686], "1959": 424, "monthli": 424, "review": [424, 612, 621], "87": [424, 611, 613, 618], "367": 424, "374": [424, 621], "paulei": [424, 686], "1990": [424, 686], "theoret": [424, 436], "discret": 424, "respons": 424, "118": 424, "1145": [424, 621], "1164": [424, 621], "target_sweep": [425, 426], "grid_siz": [425, 426, 427, 428], "801": [425, 426, 621, 665, 673, 689], "auto": [425, 426, 615, 617, 644], "max_z": [425, 426], "12000": [425, 426, 682, 686], "el_rounding_frac": 425, "add_grid_altitud": 425, "weight": [425, 426, 427, 428, 439, 460, 461, 469, 611, 621, 632, 637, 642, 686, 689], "grid_from_radar": [425, 426, 427, 428, 639, 640, 641, 646, 647, 668, 669, 677, 686, 693], "receiv": [425, 426, 434, 614, 617, 621, 684], "h_factor": [425, 426, 427, 428, 639], "dist_factor": [425, 426, 427, 639], "radar_d": [425, 426], "third": [425, 426, 622, 691], "az_rounding_frac": 426, "grid_origin": [427, 428, 641, 646], "grid_origin_alt": [427, 428], "map_roi": [427, 428], "weighting_funct": [427, 428, 686], "barnes2": [427, 428, 621], "17000": [427, 428, 686], "roi_func": [427, 428, 621, 686], "dist_beam": [427, 428, 686], "constant_roi": [427, 428, 621], "z_factor": [427, 428], "xy_factor": [427, 428], "02": [427, 428, 611, 614, 631, 649, 663, 668, 669, 673, 689], "min_radiu": [427, 428, 621, 686], "250": [427, 428, 435, 441, 647, 688], "nb": [427, 428], "bsp": [427, 428], "linearli": 427, "roifunct": 427, "dist": [427, 428, 595, 596, 611, 613], "get_roi": 427, "cython": [427, 621], "around": [427, 442, 445, 455, 564, 579, 617, 619, 640, 647, 657, 660, 665, 668, 682, 684], "copy_field_data": 428, "kd_tree": 428, "leafsiz": 428, "nearbi": [428, 641], "coodin": 428, "azimut": 428, "similarili": 428, "example_roi_func_const": 428, "example_roi_func_dist": 428, "example_roi_func_dist_beam": 428, "altern": [428, 433, 615, 668], "foreach": 428, "metet": 428, "sacr": 428, "sapr": [428, 566], "dist_mean": 428, "preserv": [428, 619, 684], "less": [428, 444, 445, 446, 455, 463, 594, 619, 665, 668], "memori": [428, 621], "slower": [428, 461], "leaf": 428, "lookup": 428, "affect": 428, "optim": [428, 461, 621], "natur": [428, 444, 615], "ref_field": [430, 669, 683], "300": [430, 611, 613, 614, 615, 617, 618, 649, 650, 682], "save_nam": [430, 669], "nws_primary_pr": 430, "mm": [430, 618, 619, 620, 668, 669], "hr": [430, 668, 669], "laura": [430, 455, 594, 649, 665, 668, 669], "tomkin": [430, 455, 594, 649, 665, 668, 669], "look": [430, 433, 438, 446, 465, 611, 613, 614, 615, 617, 619, 620, 621, 628, 634, 635, 638, 639, 648, 680, 682, 684, 686, 688], "expect": [430, 463, 622, 691], "relationship": [430, 444, 454], "american": [430, 433], "meteorolog": [430, 433, 436, 450, 470, 615], "2022": [430, 433, 594, 611, 614, 620, 634, 649, 668, 669, 680], "glossari": [430, 433], "ametsoc": [430, 433], "wiki": [430, 433, 458], "r_relat": 430, "25000": [431, 686], "measur": [431, 434, 445, 448, 449, 454, 455, 460, 461, 462, 463, 580, 614, 615, 617, 619, 622, 668, 669, 680, 682, 683, 684, 686, 687, 688, 691], "nyq": [432, 617, 676, 684], "check_nyq_uniform": 432, "deriv": [432, 461, 463], "vel_dict": 432, "entri": [432, 688], "am": [433, 617, 622, 680, 691], "dry": [433, 460, 670, 671], "world": [433, 632, 643], "aloft": 433, "oppos": [433, 649], "nwp": [433, 670], "why": [433, 615, 620, 622, 691], "would": [433, 611, 612, 613, 614, 617, 619, 621, 622, 634, 635, 684, 686, 691], "think": 433, "turn": [433, 644, 668, 669, 680], "spin": [433, 619], "randi": [433, 617], "chase": [433, 617], "dopplerchas": [433, 621], "cdr_field": 434, "circular": [434, 595, 596, 621, 668], "depolar": [434, 614], "cdr": 434, "matrosov": 434, "2004": 434, "simultan": 434, "transmiss": 434, "574": [434, 621], "1520": [434, 436, 445, 446, 455, 621, 665, 668, 669], "0426": [434, 436], "021": 434, "0574": 434, "deflha": 434, "ref_tim": [435, 438, 439, 441, 442, 443], "latlon_tol": [435, 441, 443], "0005": [435, 441, 443], "delta_rng": [435, 441], "15000": [435, 441, 665, 682, 686], "delta_azi": [435, 441], "hmax": [435, 438, 439, 441, 443], "hre": [435, 438, 439, 441, 443], "avg_typ": [435, 438, 439, 441, 581], "nvalid_min": [435, 438, 439, 441, 581], "interp_kind": [435, 438, 439, 441, 443, 603], "qvp": [435, 438, 439, 441, 443, 465, 621], "enhanc": [435, 671, 694], "interest": [435, 441, 443, 611, 613, 614, 615, 617, 619, 638, 668, 671], "central": [435, 441, 611, 613, 617], "evp": [435, 441], "median": [435, 438, 439, 441, 581, 621], "regardless": [435, 438, 439, 441, 443], "elimin": [435, 438, 439, 441, 443, 619, 684, 686], "kaltenboeck": 435, "2016": [435, 438, 449, 460, 611, 614, 615, 617, 622, 680, 682, 683, 684, 686, 687, 688, 691], "storm": [435, 455, 467, 564, 565, 567, 611, 614, 615, 617, 649, 668, 669, 686], "explor": [435, 615, 617], "methodologi": [435, 470, 580, 684], "meteorologisch": 435, "zeitschrift": 435, "26": [435, 611], "207": [435, 614], "222": [435, 629, 650], "l_field": 436, "logarithm": 436, "log10": [436, 638], "l_field_out": 436, "covari": [436, 462], "matrix": [436, 462, 615, 621], "scatter": [436, 611, 613, 617, 618, 619, 646, 666], "315": [436, 621], "328": [436, 444], "018": 436, "0315": 436, "ioprcm": 436, "noisedbz_v": 437, "ref_dist": 437, "noise_field": [437, 440], "noisedbz": 437, "ang_tol": [438, 441, 442], "quasi": [438, 439, 465], "convers": [438, 441, 444, 579, 614], "zhang": [438, 441, 448, 465, 580], "reev": [438, 465], "kumjian": [438, 439, 465], "tschallen": [438, 465], "tr\u00f6mel": 438, "simmer": [438, 448, 465], "wai": [438, 465, 614, 622, 624, 638, 682, 691, 694], "33": [438, 611, 614, 615, 669, 688], "551": 438, "562": [438, 621], "rmax": 439, "50000": [439, 641, 646, 668, 669, 686], "weight_pow": 439, "ab": [439, 611], "grng": 439, "tobin": 439, "2017": [439, 441, 619], "surfac": [439, 445, 455, 614, 668, 669], "ic": [439, 441, 460, 580, 657, 670, 671], "pellet": 439, "forecast": [439, 615], "2065": 439, "2082": 439, "bukovc": 441, "winter": [441, 455, 649, 668, 669], "liquid": 441, "reveal": 441, "2dvd": 441, "oklahoma": [441, 560, 617], "56": [441, 611, 614, 672], "1345": 441, "1363": [441, 621], "along_azi": 442, "fixed_rang": 442, "fixed_azimuth": 442, "fixed_elev": 442, "rng_tol": 442, "value_start": 442, "value_stop": 442, "acoord": 442, "along_el": 442, "along_rng": 442, "stop": 442, "cappi_level": 444, "zr_a": 444, "200": [444, 622, 691], "zr_b": 444, "core_wt_threshold": 444, "conv_wt_threshold": 444, "conv_scale_km": 444, "min_reflect": 444, "conv_min_refl": 444, "conv_core_threshold": 444, "42": [444, 445, 455, 467, 611, 613, 614, 617, 668, 669], "override_check": 444, "computation": 444, "\u00e0": 444, "trou": 444, "wavelet": 444, "atwt": 444, "multiresolut": 444, "focus": [444, 611, 613, 614], "raut": 444, "2008": [444, 635], "2020": [444, 580, 615, 619, 621, 622, 649, 680, 690, 691], "sensit": 444, "howev": [444, 461, 615, 684], "intermedi": 444, "signific": 444, "approxim": [444, 611, 614, 621, 630], "break": [444, 619, 623, 624, 693], "season": 444, "2018": [444, 460, 615], "discuss": [444, 615, 625], "insensit": 444, "variat": [444, 454, 461, 621], "dyadic": 444, "scale_break_us": 444, "bypass": 444, "saniti": 444, "fall": 444, "categori": [444, 613, 619], "strong": [444, 455, 613, 669], "updraft": 444, "activ": [444, 694], "collis": 444, "coalesc": 444, "wide": [444, 665], "remain": 444, "intens": [444, 467, 564], "unclassifi": [444, 611], "karekar": 444, "puranik": 444, "infrar": [444, 611], "satellit": [444, 611], "ieee": [444, 462], "geosci": [444, 462], "remot": [444, 462, 613, 614, 615, 621, 622, 634, 691], "sen": [444, 462], "lett": 444, "330": [444, 621], "seed": 444, "reeder": 444, "jakob": 444, "cascad": 444, "downscal": 444, "geophi": 444, "123": [444, 446, 665], "2050": 444, "2067": 444, "louf": 444, "gayatri": 444, "murugavel": 444, "konwar": 444, "prabhakaran": 444, "tran": 444, "5409": 444, "5415": 444, "dx": [445, 455, 467, 668, 669], "dy": [445, 455, 467, 613, 668, 669], "level_m": [445, 455, 669], "bkg_rad_km": [445, 455, 668, 669], "11": [445, 455, 460, 602, 611, 613, 619, 627, 631, 669, 677, 680, 687, 688, 689, 693], "55": [445, 455, 611, 613, 628, 661, 668, 669], "calc_thr": [445, 455, 668, 669], "weak_echo_thr": [445, 455, 668, 669], "min_dbz_us": [445, 668], "db_averag": [445, 455, 668, 669], "remove_small_object": [445, 455, 668, 669], "min_km2_siz": [445, 455, 668, 669], "val_for_max_conv_rad": [445, 668], "max_conv_rad_km": [445, 668], "cs_core": 445, "nosfcecho": [445, 455, 668, 669], "weakecho": [445, 455, 668, 669], "sf": [445, 668], "conv": [445, 668], "estimate_flag": [445, 455, 668, 669], "estimate_offset": [445, 455, 668, 669], "partit": [445, 455, 467, 619], "pars": [445, 455, 614, 615, 621], "least": [445, 455, 668], "simpler": [445, 455, 668], "percentag": [445, 455], "weak": [445, 455, 668, 669], "snow": [445, 449, 455, 460, 580, 594, 614, 649, 668, 669, 670, 671], "underestim": [445, 455, 668, 669], "wih": [445, 455], "convsf_dict": [445, 668, 669], "raindrop": [445, 455, 630, 668, 669], "pacif": [445, 455, 668, 669], "warm": [445, 455, 461, 668], "pool": [445, 455, 668, 669], "implic": [445, 455, 668, 669], "appl": [445, 455, 463, 465, 467, 469, 580, 622, 668, 669, 691], "meteor": [445, 455, 463, 465, 467, 469, 580, 622, 668, 669, 680, 691], "36": [445, 455, 611, 635, 638, 641, 642, 646, 661, 666, 668, 669, 672, 686, 689], "847": [445, 455, 621, 668, 669], "867": [445, 455, 621, 668, 669], "0450": [445, 455, 668, 669], "036": [445, 455, 668, 669], "3c0847": [445, 455, 668, 669], "morsdo": [445, 455, 668, 669], "3e2": [445, 446, 455, 665, 668, 669], "smith": [445, 455, 668, 669], "wilheit": [445, 455, 668, 669], "zipser": [445, 455, 668, 669], "character": [445, 455, 467, 668, 669], "tropic": [445, 455, 668, 669, 671], "kwajex": [445, 455, 668, 669], "385": [445, 455, 621, 668, 669], "415": [445, 455, 668, 669], "jam2206": [445, 455, 668, 669], "field_bin": [446, 665], "altitude_bin": [446, 665], "field_mask": [446, 665], "min_frac_thr": [446, 665], "contour": [446, 621, 632, 643, 663, 665, 689], "diagram": [446, 632, 664, 673, 689], "cfad": [446, 621, 632, 664, 673, 689], "1995": [446, 455, 467, 665, 668, 669], "histogram": [446, 638, 665, 684], "largest": 446, "row": [446, 611, 613, 615, 665], "creation": [446, 621], "total": [446, 461, 462, 463, 614, 617, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 689], "freq_norm": [446, 665], "height_edg": [446, 665], "field_edg": [446, 665], "kinemat": [446, 469, 622, 665, 691], "microphys": [446, 611, 665], "evolut": [446, 665], "florida": [446, 615, 665], "cumulonimbu": [446, 665], "mon": [446, 665], "wea": [446, 665], "rev": [446, 665], "1941": [446, 665], "1963": [446, 665], "0493": [446, 665], "3c1941": [446, 665], "tdkame": [446, 665], "the_spectra": 447, "vel_bin": 447, "wavelength": [447, 611, 614], "left_limit": 447, "right_limit": 447, "new_spectra": 447, "new_bin": 447, "a_field": [448, 449, 452], "rr_field": [448, 449, 450, 451, 452, 453, 454], "go": [448, 449, 450, 452, 453, 460, 605, 612, 613, 618, 619, 621, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 683], "diederich": 448, "tromel": [448, 465], "2015": [448, 451, 465, 680], "wavelenght": 448, "hydrometeorologi": 448, "487": [448, 611], "502": [448, 621], "alphazr": 449, "0376": [449, 451, 452, 453], "betazr": 449, "6112": [449, 451, 452, 453], "alphaz": [449, 452, 453], "betaz": [449, 452, 453], "alphaa": [449, 452], "betaa": [449, 452], "mp_factor": 449, "hydro_field": [449, 460], "main_field": [449, 452, 453], "thresh_max": [449, 452, 453], "main": [449, 452, 453, 611, 613, 614, 615, 621, 622, 652, 691], "secondari": [449, 452, 453, 621], "besic": [449, 460], "figuera": [449, 450, 460], "ventura": [449, 460], "grazioli": [449, 460, 462], "gabella": [449, 460], "germann": [449, 460], "bern": [449, 460, 462], "statist": [449, 460, 581, 621, 622, 691], "cluster": [449, 460], "semi": [449, 460], "supervis": [449, 460], "approach": [449, 460, 611, 614, 639], "mea": [449, 460, 594, 649, 669], "4425": [449, 460], "4445": [449, 460], "5194": [449, 460, 594, 649, 669], "amt": [449, 460, 594, 649, 669], "term": [450, 621], "monitor": 450, "french": 450, "sever": [450, 613, 621, 669], "quantit": 450, "ideal": [450, 614], "quarterli": 450, "royal": 450, "2012": [450, 461, 463], "1002": [450, 621], "qj": 450, "1934": 450, "fabri": 451, "fr\u00e9d\u00e9ric": 451, "meterologi": 451, "ch": [451, 670, 672], "pg": 451, "148": 451, "165": 451, "1017": 451, "cbo9781107707405": 451, "blend": [452, 453, 615, 657], "rain_main": [452, 453], "alphakdp": 453, "betakdp": 453, "polynomi": 454, "develop": [454, 455, 611, 615, 621, 669, 680, 690], "mcgill": [454, 680], "doell": 454, "systemat": 454, "drop": [454, 614, 615, 621], "northern": [454, 613], "germani": 454, "seven": 454, "year": [454, 611, 613, 617, 620, 634, 635], "1998": 454, "1545": [454, 621], "1556": 454, "joss": 454, "switzerland": 454, "vdf": 454, "hochschulverlag": 454, "ag": [454, 460, 670], "eth": 454, "zurich": 454, "134": [454, 611], "min_val_us": [455, 669], "binary_clos": 455, "val_for_max_rad": [455, 669], "max_rad_km": [455, 669], "core_v": [455, 669], "bkgd_val": [455, 669], "feat_val": [455, 669], "overest_field": [455, 669], "underest_field": [455, 669], "featur": [455, 612, 613, 615, 619, 625, 632, 649, 664, 665, 668, 673, 680, 689], "2023": [455, 617, 680], "steiner": [455, 467, 621, 668, 669], "lauratomkin": [455, 594, 621], "overestim": [455, 668, 669], "feature_dict": [455, 669], "climatolog": [455, 467, 668, 669], "gaug": [455, 467, 668, 669], "1978": [455, 467, 668, 669], "2007": [455, 467, 668, 669], "miller": [455, 594, 649, 669], "2024": [455, 609, 618, 619, 647, 669], "identif": [455, 594, 649, 669], "faint": [455, 669], "prep": [455, 669], "sonde_dset": 456, "time_kei": 456, "height_kei": 456, "nvar": 456, "vap": 456, "startard": 456, "ncvar": 456, "return_d": 456, "freq": 457, "hz": [457, 460, 655, 671], "freq_band": 457, "grid1": 458, "grid2": 458, "return_valu": 458, "displac": 458, "en": [458, 617, 621, 622, 680, 690, 691], "wikipedia": 458, "phase_correl": 458, "inspir": 458, "christoph": 458, "gohlk": 458, "lfd": 458, "uci": 458, "imreg": 458, "advect": [458, 459, 621], "trim_edg": 459, "shifted_grid": 459, "subset": [459, 605, 611, 613, 617, 621, 632, 664, 666], "hydro_nam": 460, "lr": [460, 670], "rp": [460, 670], "rn": [460, 670], "vi": [460, 670], "mh": [460, 670], "ih": [460, 670], "hdg": [460, 670], "var_nam": 460, "zh": [460, 630], "relh": 460, "mass_cent": 460, "lapse_r": 460, "entropy_field": 460, "radar_freq": [460, 671], "compute_entropi": 460, "output_dist": 460, "ndarrai": [460, 581, 688], "centroid": 460, "nclass": 460, "nvariabl": 460, "h_iso0": 460, "decai": 460, "decreas": [460, 611, 665], "celsiu": 460, "entropi": 460, "hertz": 460, "fields_dict": 460, "directionari": 460, "hydro": [460, 670, 671], "aggreg": [460, 670, 671], "crystal": [460, 670, 671], "light": [460, 630, 644, 670, 671], "rime": [460, 670], "particl": [460, 670], "wet": [460, 670, 671], "hail": [460, 617, 621, 670, 671], "densiti": [460, 611, 670, 671], "graupel": [460, 670, 671], "shannon": 460, "demix": 460, "propx": 460, "proport": [460, 461], "decomposit": 460, "gehr": 460, "praz": 460, "unravel": 460, "mixtur": 460, "4847": 460, "4866": 460, "suppli": [460, 671], "cg": 461, "backscatt": [461, 465], "clpf": 461, "length_scal": 461, "first_guess": 461, "finite_ord": 461, "fill_valu": [461, 462, 463, 467, 615, 628, 671, 682, 683, 688], "psidp_field": [461, 462, 463, 670], "verbos": [461, 621, 622, 691], "maesaka": 461, "monoton": [461, 464, 644], "propag": [461, 462, 463], "notat": 461, "dr": 461, "analys": [461, 462, 463], "cost": [461, 621], "nonlinear": 461, "conjug": 461, "gradient": [461, 621, 644], "broyden": 461, "fletcher": 461, "goldfarb": 461, "shanno": 461, "bfg": 461, "100k": 461, "consider": [461, 617, 668, 669], "parameter": 461, "attentu": 461, "constraint": 461, "bring": [461, 611], "guess": 461, "root": [461, 690, 694], "signifi": [461, 467], "everywher": 461, "exactli": [461, 619, 638], "avoid": [461, 621, 624, 694], "converg": 461, "fact": [461, 463], "closer": [461, 618], "finit": 461, "accuraci": 461, "maxit": 461, "met": 461, "achiev": 461, "somewhat": 461, "arbitrari": 461, "parallel": [461, 462, 463], "thread": [461, 615], "cpu": 461, "multiprocess": 461, "capabl": [461, 614, 684, 688], "relev": [461, 618, 619, 625], "kdp_dict": [461, 462, 463], "phidpf_dict": 461, "phidpr_dict": [461, 462, 463], "forward": [461, 591, 592], "iwanami": 461, "maki": 461, "seventh": 461, "european": 461, "confer": 461, "hydrologi": 461, "rcov": 462, "pcov": 462, "prefilter_psidp": [462, 463], "filter_opt": [462, 463], "kalman": 462, "schneeb": 462, "psidp": [462, 463], "char": [462, 463], "capit": [462, 463], "intercept": 462, "slope": 462, "3x3": 462, "4x4": 462, "filter_psidp": [462, 463, 621], "enabl": [462, 463, 614, 617, 621], "kdp_std_dict": 462, "dev": [462, 614, 617, 619, 622, 686, 691], "ensembl": 462, "52": [462, 465, 611, 614, 666], "5137": 462, "5149": 462, "1109": [462, 621], "tgr": 462, "2287017": 462, "windsiz": 463, "n_iter": 463, "vulpiani": [463, 621], "pre": [463, 618, 621, 622, 691], "advantag": 463, "eat": 463, "gianfranco": 463, "mario": 463, "montopoli": 463, "luca": 463, "delli": 463, "passeri": 463, "antonio": 463, "gioia": 463, "pietro": 463, "giordano": 463, "frank": 463, "marzano": 463, "On": [463, 612, 613], "dual": [463, 618, 621], "mountain": 463, "climatol": [463, 580, 668, 669], "51": [463, 611, 666], "405": [463, 621], "425": [463, 621], "05024": 463, "profile_field": 464, "height_field": 464, "3re": 464, "whole": [464, 621], "height_dict": 464, "profile_dict": 464, "desired_angl": [465, 621], "wanted_angl": 465, "dictonari": 465, "troemel": 465, "clim": [465, 614, 615], "2529": 465, "2548": 465, "meteorol": [465, 668, 669], "54": [465, 611, 613, 614, 635], "2344": 465, "2359": 465, "submit": [465, 615, 680], "work_level": 467, "3000": [467, 630, 682, 686], "peak_rel": 467, "area_rel": 467, "medium": 467, "bkg_rad": 467, "11000": [467, 686], "use_intens": 467, "bright": [467, 611], "sgp": [467, 560], "peaked": 467, "eclass": 467, "z_want": [469, 470, 622, 672, 691], "valid_ray_min": [469, 622, 691], "velocity_azimuth_displai": [469, 622, 691], "one_sweep_radar": 469, "extract_sweep": [469, 617, 639, 665, 668, 669, 672], "vad": [469, 470, 621, 622, 632, 664, 673, 689, 691], "amount": [469, 614, 617, 622, 669, 686, 691], "_averag1d": [469, 622, 691], "idw": 469, "brown": [469, 621, 622, 691], "wexler": [469, 622, 691], "1968": [469, 622, 691], "105": [469, 622, 672, 691], "113": [469, 622, 666, 691], "linespac": 470, "michelson": [470, 621, 680], "andersson": 470, "koistinen": [470, 680], "collier": 470, "riedl": 470, "szturc": 470, "gjertsen": 470, "nielsen": 470, "overgaard": 470, "2000": [470, 611, 640, 686], "baltex": 470, "centr": 470, "smhi": 470, "swedish": 470, "hydrolog": 470, "institut": [470, 611, 688], "norrkop": 470, "suffix": 482, "tmp": 482, "dir": 482, "temporari": [482, 621], "my_cwd": 482, "getcwd": 482, "tmpdir": 482, "_": [482, 613, 617, 618, 619, 634, 635, 670], "txt": [482, 621, 690], "wt": 482, "assert": [482, 621, 622, 691], "isfil": 482, "path_to_fil": 559, "local": [559, 612, 613, 617, 618, 621, 622, 647, 680, 690, 691], "without": [560, 574, 599, 611, 614, 621, 628, 671, 690], "site": [560, 611, 613, 614, 615, 616, 617, 618, 619, 647, 666, 683, 686, 690], "puls": [563, 614, 621, 684], "min_valu": 564, "max_valu": 564, "grid_len": 564, "sigma": [564, 565, 657, 658], "mu": [564, 565], "masked_boundari": 564, "gaussian": [564, 565, 621, 657], "dp_phase_shift": [566, 666, 682], "diff_phas": [566, 682], "differential_reflect": [566, 618, 630, 634, 650, 657, 687, 688], "rectangular": [567, 568, 615, 621], "alia": [572, 573, 615, 621], "miscellan": 574, "depreci": [574, 621], "caution": [574, 665], "radian": [575, 577, 600, 611], "std": [577, 578, 596, 602], "convolut": 579, "ndimag": [579, 621, 657, 658], "generic_filt": 579, "pi": [579, 611, 684], "std_dev": 579, "azimuth_spread": 580, "spatial_spread": 580, "spatial_rang": 580, "sphere_dist": [580, 593], "for_azimuth": [580, 593], "get_sweep_rai": 580, "subset_field": 580, "assemble_column": 580, "murphi": 580, "columnar": 580, "cvp": [580, 621], "situ": 580, "37": [580, 611, 614, 638, 666, 669, 687], "1623": 580, "1642": 580, "0011": 580, "bukov\u010di\u0107": 580, "zrni\u0107": 580, "59": [580, 611, 614], "991": [580, 621], "1009": [580, 621], "19": [580, 611, 613, 614, 621, 663, 672, 688], "0140": 580, "stat": [581, 611, 621], "nvalid": 581, "az_tol": 582, "radar_rhi": 582, "target_elev": 583, "el_tol": 583, "radar_ppi": 583, "epoch": [584, 585, 586, 587, 588, 611], "max_offset": 589, "running_win_dt": 589, "deg_rng": 589, "consider_2pi_jump": 589, "is_ppi": 589, "wise": 589, "could": [589, 615, 619, 622, 635, 691], "strategi": [589, 611], "might": [589, 612, 682, 694], "goe": [589, 615], "shot": 589, "navg": 590, "nnoise_min": 590, "hildebrand": [590, 621], "sehkon": 590, "1974": 590, "spectral": [590, 611, 614, 621], "articl": 590, "peak": [590, 614, 684], "var": [590, 606, 607, 611], "varianc": [590, 639], "nnois": 590, "sekhon": [590, 621], "808": 590, "811": [590, 621], "target_latitud": [591, 604], "target_longitud": [591, 604], "bear": [591, 613], "alongitudeg": 591, "great": [591, 604], "circl": [591, 604, 668], "known": [591, 621, 622, 688, 691], "6371000": [591, 604], "calculatitude": 591, "degress": [591, 604], "further": [593, 612, 614, 618, 619, 693], "get_column_rai": 593, "mute_field": [594, 649], "mute_threshold": [594, 649], "field_threshold": [594, 649], "discern": 594, "mute": [594, 621, 632, 643, 663, 668, 669, 689], "allen": [594, 649, 669], "5515": [594, 649, 669], "5525": [594, 649, 669], "interval_min": [595, 596], "interval_max": [595, 596], "endpoint": [595, 596], "to_vpt": 597, "90": [597, 611, 613, 614, 622, 691], "verticl": 597, "radar1": 598, "radar2": 598, "tup": 599, "guarante": 599, "broadcast": 599, "broadcasted_arrai": 599, "angles1": 600, "angles2": 600, "angle1": 601, "angle2": 601, "eg": 602, "ma": [602, 622, 638, 640, 647, 665, 668, 669, 683, 687, 691], "sim_vel_field": 603, "kind": [603, 611, 619], "slinear": 603, "quadrat": 603, "cubic": 603, "interp1d": [603, 622, 691], "sim_vel": [603, 622, 691], "rng_min": 605, "rng_max": 605, "ele_min": 605, "ele_max": 605, "azi_min": 605, "azi_max": 605, "coverag": [605, 611, 621, 622, 691], "11pt": 606, "stdev": 606, "texarrai": 606, "pyradarobj": 606, "tex": 607, "single_scan": 608, "is_vpt": 608, "mislabel": 608, "properli": [608, 622, 635, 691], "releas": [609, 616, 622, 625, 680, 683, 686, 690, 691, 693], "aug": 609, "guid": [609, 611, 612, 621, 680, 693], "public": [609, 611, 615, 617, 619, 621, 622, 682, 683, 684, 686, 687, 688, 691], "broken": [609, 621], "aerosol": 611, "experi": 611, "depart": [611, 614, 615, 617, 682, 683, 684, 686, 687, 688], "energi": [611, 614, 615, 617, 682, 683, 684, 686, 687, 688], "iop": 611, "goal": 611, "studi": 611, "lifecycl": 611, "houston": [611, 634], "impact": [611, 617, 657], "uniqu": 611, "suit": [611, 621, 686], "seabreez": 611, "coast": [611, 615], "cleaner": [611, 687], "air": [611, 615, 619], "pollut": 611, "click": [611, 612, 619, 624], "post": [611, 613, 614, 615, 617, 619, 621, 624, 680], "overlai": 611, "texa": [611, 634], "lightn": 611, "csapr2": 611, "wildfir": 611, "smoke": 611, "entrain": 611, "juli": [611, 635], "we": [611, 613, 614, 615, 617, 619, 622, 625, 628, 630, 634, 635, 638, 644, 665, 666, 668, 669, 671, 676, 682, 683, 684, 686, 687, 688, 690, 691, 692, 693, 694], "highlight": [611, 612, 615], "minut": [611, 613, 614, 618, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678], "pyart": [611, 613, 617, 619, 622, 624, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 680, 682, 683, 684, 686, 687, 688, 690, 691, 693, 694], "pyplot": [611, 612, 613, 614, 615, 617, 618, 619, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 682, 683, 684, 686, 687], "plt": [611, 612, 613, 614, 615, 617, 618, 619, 621, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 682, 683, 684, 686, 687], "xr": [611, 614], "s3f": 611, "ccr": [611, 613, 615, 617, 618, 619, 634, 635, 638, 639, 646, 648, 654, 661, 666, 668, 669, 676, 683, 684, 687], "panda": [611, 614, 617, 621, 694], "pd": [611, 613, 614, 617], "kdtree": 611, "inlin": [611, 618, 657, 658], "download": [611, 612, 614, 615, 619, 621, 622, 627, 628, 629, 630, 632, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 680, 691, 694], "longwav": 611, "ensur": [611, 613, 621, 630, 669, 693], "c13": 611, "denot": [611, 639], "anonym": [611, 613], "credenti": 611, "s3filesystem": 611, "day_no": 611, "168": 611, "dai": [611, 617, 618], "16th": 611, "leap": 611, "hour": [611, 615, 617, 618, 634, 635], "goes16": 611, "abi": 611, "l1b": 611, "radc": 611, "02d": [611, 618], "fi": 611, "or_abi": 611, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 611, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 611, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 611, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 611, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 611, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 611, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 611, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 611, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 611, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 611, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 611, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 611, "goes_d": 611, "open_dataset": [611, 614], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 611, "lt": [611, 614], "gt": [611, 614], "1500": [611, 682], "2500": 611, "number_of_time_bound": 611, "number_of_image_bound": 611, "num_star_look": 611, "datetime64": [611, 614, 666], "07": [611, 613, 614, 635, 649, 668, 669, 688], "1282": 611, "1013": 611, "y_imag": 611, "08624": 611, "x_imag": 611, "03136": 611, "band_id": 611, "int8": 611, "band_wavelength": 611, "t_star_look": 611, "band_wavelength_star_look": 611, "rad": [611, 614], "dqf": 611, "time_bound": 611, "goes_imager_project": 611, "int32": [611, 688], "2147483647": 611, "y_image_bound": 611, "x_image_bound": 611, "algorithm_dynamic_input_data_contain": 611, "processing_parm_version_contain": 611, "algorithm_product_version_contain": 611, "star_id": 611, "channel_integration_tim": 611, "336": [611, 621], "channel_gain_field": 611, "naming_author": 611, "nesdi": 611, "standard_name_vocabulari": 611, "v35": 611, "commerc": 611, "production_sit": 611, "wcda": 611, "timeline_id": 611, "date_cr": 611, "12t20": 611, "09": [611, 613, 619, 663, 668, 669, 679, 689], "3z": 611, "time_coverage_start": [611, 682, 688], "time_coverage_end": [611, 682], "08": [611, 636, 642, 663, 689], "7z": 611, "lut_filenam": 611, "spacelookparam": 611, "fm1a_cdrl79revp_pr_09_00_02": 611, "f45b564c": 611, "dcb9": 611, "498a": 611, "ac56": 611, "da80a1d735a5xarrai": 611, "datasetdimens": [611, 614], "1500x": 611, "2500number_of_time_bound": 611, "2number_of_image_bound": 611, "2band": 611, "1num_star_look": 611, "24coordin": 611, "j2000": 611, "mid": 611, "secondsstandard_nam": 611, "timeaxi": 611, "tbound": 611, "time_boundsarrai": 611, "x27": [611, 614], "537394048": 611, "float640": 611, "04432": 611, "04427unit": 611, "radaxi": 611, "ylong_nam": 611, "coordinatestandard_nam": 611, "projection_y_coordinatearrai": 611, "128212": 611, "128156": 611, "1281": 611, "04438": 611, "044324": 611, "044268": 611, "03856": 611, "03861unit": 611, "xlong_nam": 611, "projection_x_coordinatearrai": 611, "101332": 611, "101276": 611, "10122": 611, "0385": 611, "038556": 611, "038612": 611, "imagestandard_nam": 611, "projection_y_coordinateunit": 611, "yarrai": 611, "projection_x_coordinateunit": 611, "numberstandard_nam": 611, "sensor_band_identifierunit": 611, "1arrai": [611, 614], "wavelengthstandard_nam": 611, "sensor_band_central_radiation_wavelengthunit": 611, "umarrai": 611, "star": 611, "tarrai": 611, "01t11": 611, "43": [611, 614, 617], "000000000": [611, 614], "starstandard_nam": 611, "radiancesstandard_nam": 611, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 611, "12valid_rang": 611, "4094": 611, "mw": 611, "cm": [611, 658], "1resolut": 611, "000056": 611, "radgrid_map": 611, "goes_imager_projectioncell_method": 611, "pointancillary_vari": 611, "3750000": 611, "radianc": 611, "flagsstandard_nam": 611, "status_flagvalid_rang": 611, "1grid_map": 611, "pointflag_valu": 611, "flag_mean": [611, 628], "good_pixel_qf": 611, "conditionally_usable_pixel_qf": 611, "out_of_range_pixel_qf": 611, "no_value_pixel_qf": 611, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 611, "5percent_good_pixel_qf": 611, "0percent_conditionally_usable_pixel_qf": 611, "0percent_out_of_range_pixel_qf": 611, "0percent_no_value_pixel_qf": 611, "0percent_focal_plane_temperature_threshold_exceeded_qf": 611, "00": [611, 613, 614, 617, 619, 621, 631, 636, 642, 663, 673, 674, 679, 689], "326423040": 611, "748365056": 611, "projectiongrid_mapping_nam": 611, "geostationaryperspective_point_height": 611, "35786023": 611, "0semi_major_axi": 611, "6378137": 611, "0semi_minor_axi": 611, "6356752": 611, "31414inverse_flatten": 611, "298": 611, "2572221latitude_of_projection_origin": 611, "0longitude_of_projection_origin": 611, "0sweep_angle_axi": 611, "south": [611, 615, 650], "extent": [611, 613, 614, 617, 618, 639, 641], "imageunit": 611, "radarrai": 611, "12824": 611, "04424": 611, "10136": 611, "03864": 611, "nominal_satellite_subpoint_lat": 611, "nomin": 611, "subpoint": 611, "standard_nam": [611, 668, 669, 671, 683, 688], "latitudeunit": [611, 614], "degrees_northarrai": 611, "nominal_satellite_subpoint_lon": 611, "longitudeunit": [611, 614], "degrees_eastarrai": 611, "199997": 611, "nominal_satellite_height": 611, "gr": 611, "80": [611, 613, 629, 647, 661, 667], "ellipsoid": 611, "height_above_reference_ellipsoidunit": 611, "kmarrai": 611, "35786": 611, "023438": 611, "geospatial_lat_lon_ext": 611, "geospati": 611, "referencesgeospatial_westbound_longitud": 611, "152": [611, 669], "10928geospatial_northbound_latitud": 611, "76145geospatial_eastbound_longitud": 611, "94688geospatial_southbound_latitud": 611, "14": [611, 614, 615, 617, 619, 644, 648, 676, 688], "57134geospatial_lat_cent": 611, "083002geospatial_lon_cent": 611, "096954geospatial_lat_nadir": 611, "0geospatial_lon_nadir": 611, "0geospatial_lat_unit": 611, "degrees_northgeospatial_lon_unit": 611, "96921e": 611, "yaw_flip_flag": 611, "spacecraft": 611, "yaw": 611, "flip": 611, "configurationvalid_rang": 611, "1flag_valu": 611, "truearrai": 611, "esun": 611, "bandpass": 611, "solar": 611, "irradi": 611, "sun": 611, "distancestandard_nam": 611, "toa_shortwave_irradiance_per_unit_wavelengthunit": 611, "um": 611, "1cell_method": 611, "meanarrai": 611, "kappa0": 611, "incom": 611, "d2": 611, "instantan": [611, 621], "divid": 611, "reflectanceunit": 611, "planck_fk1": 611, "wavenumb": 611, "c2": 611, "nu3": 611, "emiss": 611, "monochromat": 611, "nu": 611, "constantsunit": 611, "10803": 611, "299805": 611, "planck_fk2": 611, "karrai": 611, "1392": [611, 621], "73999": 611, "planck_bc1": 611, "bc_1": 611, "bc_2": 611, "planck_funct": 611, "wavenumberunit": 611, "0755": 611, "planck_bc2": 611, "99975": 611, "valid_pixel_count": 611, "condition": 611, "pixelsunit": 611, "countgrid_map": 611, "sum": [611, 620, 665], "comment": [611, 612, 628, 658, 688], "3702838": 611, "missing_pixel_count": 611, "saturated_pixel_count": 611, "satur": 611, "radiometr": 611, "geoloc": 611, "undersaturated_pixel_count": 611, "undersatur": 611, "focal_plane_temperature_threshold_exceeded_count": 611, "exceed": 611, "thresholdunit": 611, "min_radiance_value_of_valid_pixel": 611, "pixelsstandard_nam": 611, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 611, "6443": 611, "185": 611, "5699": 611, "849287": 611, "max_radiance_value_of_valid_pixel": 611, "154": [611, 654], "23053": 611, "mean_radiance_value_of_valid_pixel": 611, "197975": 611, "std_dev_radiance_value_of_valid_pixel": 611, "toa_outgoing_radiance_per_unit_wavenumberunit": 611, "standard_devi": 611, "985853": 611, "maximum_focal_plane_temperatur": 611, "focal": 611, "valuevalid_rang": 611, "951939": 611, "focal_plane_temperature_threshold_increas": 611, "bound": [611, 614, 669], "81": [611, 613, 688], "focal_plane_temperature_threshold_decreas": 611, "percent_uncorrectable_l0_error": 611, "percent": 611, "l0": 611, "errorsvalid_rang": 611, "percentgrid_map": 611, "earth_sun_distance_anomaly_in_au": 611, "anomali": [611, 669], "astronom": 611, "unitsunit": 611, "uacell_method": 611, "016543": 611, "datainput_abi_l0_data": 611, "m6_g16_s20221932006173_e20221932008557_c": 611, "ncarrai": 611, "filenamesl1b_processing_parm_vers": 611, "parm": 611, "rad_g16_v01r00": 611, "ziparrai": 611, "packag": [611, 612, 613, 614, 615, 617, 619, 621, 622, 635, 680, 683, 686, 690, 691, 693, 694], "versionalgorithm_vers": 611, "alg": 611, "rad_v01r00": 611, "zipproduct_vers": 611, "v01r00arrai": 611, "stararrai": 611, "vnir": 611, "ir": 611, "telemetryunit": 611, "countarrai": 611, "gain": [611, 614], "noaaconvent": 611, "7standard_name_vocabulari": 611, "administr": [611, 615, 634], "servicesproject": 611, "goesproduction_sit": 611, "wcdasproduction_environ": 611, "oespatial_resolut": 611, "2km": 611, "nadirmetadata_convent": 611, "discoveri": [611, 619], "0orbital_slot": 611, "eastplatform_id": 611, "g16instrument_typ": 611, "baselin": 611, "scene_id": 611, "conusinstrument_id": 611, "fm1titl": 611, "radiancessummari": 611, "digit": 611, "outgo": 611, "engin": 611, "radiancekeywords_vocabulari": 611, "nasa": 611, "master": [611, 621, 624, 658], "gcmd": 611, "scienc": [611, 615, 617, 682, 683, 684, 686, 687, 688], "0iso_series_metadata_id": 611, "a70be540": 611, "c38b": 611, "11e0": 611, "962b": 611, "0800200c9a66licens": 611, "restrict": 611, "approv": 611, "processing_level": 611, "aeronaut": 611, "l1bcdm_data_typ": 611, "imagedataset_nam": 611, "ncproduction_data_sourc": 611, "realtimetimeline_id": 611, "6date_cr": 611, "3ztime_coverage_start": 611, "3ztime_coverage_end": 611, "7zlut_filenam": 611, "637827000": 611, "h5": [611, 621], "qtableband13": 611, "fm1a_cdrl79revh_do_08_00_00": 611, "582860861": 611, "caltargettimeinterv": 611, "fm1a_cdrl79revp_do_08_00_01": 611, "611906620": 611, "bandsaturationlimit": 611, "600000000": 611, "solarspacelookparam": 611, "fm1a_adr1233_pr_09_08_25": 611, "709281036": 611, "deadrowlistparam": 611, "mirror_record": 611, "fm1a_cdrl79revg_do_07_00_00": 611, "kalmanastroconst": 611, "xml": [611, 617], "kalmanfiltercontrol": 611, "fm1a_pr_09_08_02": 611, "677650371": 611, "kalmanmeasmaxsens": 611, "fmaa_int_only_do_09_01_00": 611, "652936814": 611, "kalmanpreprocessorcontrol": 611, "fm1a_cdrl79revj_pr_09_06_02": 611, "657795700": 611, "kalmanreferencedata": 611, "888": 611, "kalmanstarcatalog": 611, "abi_navigationrdp_band13": 611, "fm1a_cdrl79revj_do_07_00_00": 611, "abi_navigationparameters_band13": 611, "fm1a_cdrl79revh_do_07_00_00": 611, "abi_resamplingimplementation_band13": 611, "fm1a_cdrl79revh_do_07_02_00": 611, "602129336": 611, "abi_resamplingparameters_band13": 611, "starlookparam": 611, "stardetectionparam": 611, "resamplingscaledconvers": 611, "fmaa_int_only_do_08_00_00": 611, "1111": [611, 614, 621], "blockreleaseregion": 611, "2222": 611, "csv": [611, 613], "ir_retrievalparamet": 611, "fm1a_cdrl79revh_do_09_01_00": 611, "652936750": 611, "radiancelut_band13": 611, "fm1a_cdrl79reve_do_08_00_00": 611, "ict_record": 611, "fm1a_tmabi_18_159_pr_09_00_02": 611, "icm_conversionconst": 611, "fm1a_cdrl43": 611, "18_do_09_01_00": 611, "icm_sensorcoeffici": 611, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 611, "676949608": 611, "h5id": 611, "da80a1d735a5": 611, "team": 611, "bobbi": [611, 638], "jackson": [611, 638], "pug": 611, "l2": [611, 621], "file_id": 611, "def": [611, 613, 617, 618, 621, 622, 644, 647, 669, 671, 691], "calculate_degre": 611, "x_coordinate_1d": 611, "y_coordinate_1d": 611, "projection_info": 611, "lon_origin": 611, "attr": 611, "longitude_of_projection_origin": 611, "perspective_point_height": 611, "semi_major_axi": 611, "r_eq": 611, "r_pol": 611, "semi_minor_axi": 611, "matric": 611, "x_coordinate_2d": 611, "y_coordinate_2d": 611, "meshgrid": [611, 638, 665], "lambda_0": 611, "a_var": 611, "b_var": 611, "c_var": 611, "r_": 611, "s_x": 611, "s_y": 611, "s_z": 611, "conu": 611, "seterr": 611, "abi_lat": 611, "arctan": 611, "abi_lon": 611, "crop": 611, "our": [611, 613, 616, 618, 628, 634, 635, 638, 644, 646, 666, 668, 669, 676, 680, 693], "circ": 611, "95": [611, 613, 666, 688], "nan_to_num": 611, "9999": [611, 688], "lat_rang": 611, "lon_rang": 611, "lat_min": 611, "lat_max": 611, "lat_min_bound": 611, "argmin": 611, "lat_max_bound": 611, "lon_min": 611, "lon_max": 611, "lon_min_bound": 611, "lon_max_bound": 611, "a1": [611, 614, 619, 628, 630, 645, 654], "disoveri": 611, "toolkit": [611, 614, 615, 617, 619, 682, 683, 684, 686, 687, 688], "5439": [611, 614, 619], "1467901": 611, "page": [611, 616, 621, 624], "block": [611, 619, 621], "autom": [611, 617, 619], "catalogu": 611, "adam": [611, 621, 628], "theisen": [611, 628], "geometri": [611, 617, 621], "cell_track_info": 611, "read_csv": [611, 613], "raw": [611, 627, 628, 629, 639], "githubusercont": 611, "com": [611, 622, 658, 690, 691, 693, 694], "adamtheisen": [611, 621], "cell": [611, 618, 619, 621, 657, 677, 693], "houcsapr": 611, "20220617": 611, "index_col": 611, "parse_d": 611, "unnam": 611, "scan_mod": [611, 614, 621], "template_nam": 611, "azimuth_min": 611, "azimuth_max": 611, "elevation_min": 611, "elevation_max": 611, "range_min": 611, "range_max": 611, "cell_azimuth": 611, "cell_rang": 611, "cell_zh": 611, "ngates_gt_0": 611, "ngates_gt_10": 611, "ngates_gt_30": 611, "ngates_gt_50": 611, "ngates_gt_10_5km": 611, "ngates_gt40_5km": 611, "03": [611, 614, 634, 663, 673, 679, 689], "hou": 611, "303": [611, 621], "74450": 611, "637207": 611, "383545": 611, "109900": 611, "297": 611, "59216": 611, "307": [611, 621], "63367": 611, "021240": 611, "988037": 611, "910767": 611, "700": [611, 614, 617, 621], "930866": 611, "78": 611, "302": 611, "64587": 611, "645874": 611, "1800": [611, 613, 682], "776333": 611, "55798": 611, "59094": 611, "97546": 611, "99744": 611, "975464": 611, "900": [611, 682], "972101": 611, "46": [611, 666], "2826": 611, "301": [611, 621], "48132": 611, "50330": 611, "648193": 611, "382324": 611, "503296": 611, "62400": 611, "327583": 611, "990": 611, "989": [611, 621], "210": [611, 669], "995": [611, 621, 630], "2827": 611, "305": [611, 621], "70007": 611, "404297": 611, "700073": 611, "13600": 611, "29": [611, 614, 647, 669, 673, 689], "037998": 611, "2828": 611, "23510": 611, "26807": 611, "235107": 611, "459156": 611, "2829": 611, "296": [611, 621], "08704": 611, "306": [611, 621], "16150": 611, "999268": 611, "998291": 611, "646362": 611, "59100": 611, "882927": 611, "807": 611, "783": [611, 621], "27": [611, 615, 666], "63": [611, 688], "830": 611, "2830": 611, "05835": 611, "08032": 611, "058350": 611, "62800": 611, "198204": 611, "767": [611, 621], "76": 611, "773": [611, 621], "2831": 611, "notebook": [611, 613, 614, 618, 620, 621, 627, 628, 629, 630, 632, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 683, 686, 687, 694], "much": [611, 613, 614, 615, 617, 618, 619, 621, 665, 684, 686, 687], "frequent": 611, "start_hour": [611, 618], "end_hour": [611, 618], "utc": [611, 613, 614, 615, 618, 619, 634, 635, 647, 660], "48": [611, 613, 641], "04": [611, 614, 617, 618, 642, 663, 666, 679, 689], "38": [611, 614, 635], "57": [611, 668, 669], "rjackson": [611, 638], "paw": 611, "houcsapr2cfrs2": 611, "20220712": 611, "200714": 611, "easili": [611, 617], "eol": 611, "cgi": 611, "codiac": 611, "fgr_form": 611, "016": 611, "lma_d": 611, "lylout_220712_000000_86400_map500m": 611, "afternoon": 611, "203229": 611, "lylout_220617_000000_86400_map500m": 611, "radarmapdisplai": [611, 613, 617, 618, 619, 621, 634, 635, 638, 648, 654, 666, 676, 678, 682, 683, 684, 686, 687], "subplot": [611, 613, 614, 615, 617, 618, 619, 621, 630, 634, 638, 644, 646, 648, 660, 665, 666, 667, 668, 669, 670, 671, 672, 676, 684], "subplot_kw": 611, "disp": 611, "graph": [611, 612, 613, 614, 615, 617, 618, 619, 621, 627, 628, 629, 634, 635, 638, 639, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 676, 677, 678, 682, 683, 684, 686, 687], "150": [611, 612, 653, 671, 684], "plot_ppi_map": [611, 613, 617, 618, 619, 621, 634, 635, 638, 648, 654, 666, 676, 683, 684, 687], "flash_tim": 611, "squeez": [611, 682], "argwher": [611, 638], "logical_and": [611, 638], "flash_time_start": 611, "17t20": 611, "flash_center_longitud": 611, "flash_center_latitud": 611, "set_xlim": [611, 661, 665, 670], "96": [611, 613, 614, 638, 680, 687], "94": [611, 688], "set_ylim": [611, 661, 665, 670], "deprecationwarn": [611, 686], "escap": 611, "sequenc": [611, 615], "xf": 611, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 611, "ipykernel_41252": 611, "2371313213": 611, "opt": [611, 612, 614, 615, 621], "anaconda3": [611, 614, 615, 680, 683, 686, 690, 694], "env": [611, 612, 614, 615, 617, 619, 621, 680, 683, 686, 694], "pyart_env2": 611, "lib": [611, 614, 615, 617, 619, 683, 686, 690], "python3": [611, 614, 615, 617, 619, 620], "mpl": [611, 621, 670, 683, 686], "gridlin": [611, 615, 617, 648], "451": [611, 614], "userwarn": [611, 619], "xlabels_top": [611, 615], "deprec": [611, 615, 624, 683, 686], "top_label": [611, 617, 648], "toggl": [611, 621], "visibl": [611, 615, 621], "ylabels_right": [611, 615], "right_label": [611, 617, 648], "strike": 611, "overlaid": 611, "csapr_rhi": 611, "203012": 611, "flash_alt": 611, "flash_init_altitud": 611, "flash_lon": 611, "flash_init_longitud": 611, "flash_lat": 611, "flash_init_latitud": 611, "rhi_lon": 611, "flatten": [611, 638], "rhi_lat": 611, "rhi_alt": 611, "kdtree_data": 611, "stack": [611, 614, 617, 622, 690, 691], "inp_data": 611, "where_in_rhi": 611, "flash_rang": 611, "1e3": [611, 647], "motiv": [612, 615], "blog": [612, 617, 621, 622, 691], "come": [612, 615, 668], "colorschem": 612, "vision": 612, "defici": 612, "illustr": 612, "collabor": 612, "contributor": [612, 624, 680, 692, 693], "guidenc": 612, "ve": [612, 618], "trip": [612, 687], "me": 612, "assist": 612, "https_link_to_your_fork": 612, "unfamiliar": 612, "yml": [612, 621, 680, 694], "slightli": [612, 615, 648], "latest": [612, 621, 622, 680, 691], "button": [612, 616, 624], "kshrc": 612, "export": [612, 690, 694], "pip": [612, 622, 690, 691, 693, 694], "checkout": [612, 622, 624, 691], "newblog_post": 612, "plot_ppi_mdv": [612, 653, 663, 689], "radardisplai": [612, 613, 614, 619, 621, 627, 628, 629, 639, 644, 645, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 662, 665, 667, 670, 671], "jonathan": [612, 627, 629, 640, 641, 650, 651, 653, 655, 659, 662, 694], "helmu": [612, 615, 617, 622, 627, 629, 640, 641, 650, 651, 653, 655, 659, 662, 680, 682, 683, 684, 686, 687, 688, 691, 694], "jhelmu": [612, 621, 627, 629, 640, 641, 650, 651, 653, 655, 659, 662], "anl": [612, 627, 629, 634, 635, 638, 640, 641, 644, 645, 646, 648, 650, 651, 652, 653, 655, 657, 658, 659, 660, 662, 666, 667, 676, 677, 678], "licens": [612, 622, 627, 628, 629, 634, 635, 638, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 672, 676, 677, 678, 680, 691], "bsd": [612, 622, 627, 628, 629, 634, 635, 638, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 672, 676, 677, 678, 680, 691], "claus": [612, 622, 627, 628, 629, 634, 635, 638, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 672, 676, 677, 678, 691], "get_test_data": [612, 627, 629, 638, 640, 641, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 676, 677, 678, 693], "110635": [612, 640, 653, 686], "figsiz": [612, 613, 614, 615, 617, 618, 619, 627, 629, 630, 634, 635, 638, 639, 644, 646, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 665, 667, 668, 669, 670, 671, 676, 683, 684, 686, 687], "add_subplot": [612, 627, 629, 639, 640, 641, 650, 651, 652, 653, 655, 656, 657, 658, 659, 662, 671], "111": [612, 613, 615, 618, 619, 638, 640, 641, 648, 651, 652, 653, 657, 658, 659, 666], "get_cmap": [612, 649, 668, 669], "jet": 612, "colorbind": 612, "pyart_homeyerrainbow": [612, 614, 638, 644, 646, 647, 648, 653, 656, 660, 661, 667], "plot_rhi_cfradial_singlescan": [612, 656, 663, 689], "panel": [612, 619, 632, 643, 663, 665, 689], "sgpxsaprrhicmaci5": [612, 655, 656, 660, 665], "c0": [612, 627, 655, 656, 660, 665, 683], "20110524": [612, 655, 656, 660, 665], "015604_nc4": [612, 655, 656, 660, 665], "read_cfradi": [612, 627, 638, 641, 646, 655, 656, 660, 665, 670, 671, 672], "subplots_adjust": [612, 614, 644, 655, 656], "hspace": [612, 614, 655, 656], "xlabel": [612, 614, 638, 655, 656, 684], "ylabel": [612, 614, 638, 655, 656, 684], "stage": 612, "my": [612, 690], "untrack": [612, 622, 691], "blog_pr": 612, "restor": 612, "discard": 612, "_static": 612, "As": [612, 614, 618, 622, 682, 684, 686, 687, 691], "statement": [612, 618, 621, 622, 691], "hint": [612, 615, 623], "wait": [612, 615], "editor": [612, 620, 622, 691, 694], "enh": [612, 621], "abort": 612, "person": 612, "addition": [612, 615], "anyon": 612, "respond": 612, "walk": [613, 614, 617, 618, 619, 620], "septemb": 613, "2021": [613, 668, 669], "thunderstorm": 613, "southern": 613, "wisconsin": [613, 621], "illinoi": 613, "trail": 613, "damag": [613, 617], "milwauke": [613, 617], "madison": 613, "imageri": [613, 617], "russ": 613, "schumach": 613, "colorado": 613, "unvers": 613, "put": 613, "togeth": [613, 614, 615, 621], "hi": [613, 669], "glob": [613, 614, 617, 618, 619, 622, 647, 691], "math": 613, "atan2": 613, "tempfil": 613, "cfeatur": [613, 615, 617, 618, 619], "mcolor": [613, 615, 649, 668, 669], "mdate": 613, "uscounti": [613, 617, 618], "imageio": 613, "pytz": [613, 621, 647], "temploc": 613, "mkdtemp": 613, "filterwarn": [613, 614, 615, 617, 618, 638], "let": [613, 614, 615, 616, 618, 619, 621, 622, 628, 634, 635, 638, 644, 647, 648, 665, 666, 668, 669, 671, 676, 682, 684, 686, 687, 688, 691, 694], "machin": [613, 614, 617, 619, 694], "kmkx": [613, 617], "nexrad_path": [613, 647], "level2": [613, 617, 618, 621, 634, 635, 647, 649, 668, 669], "d_": [613, 647], "kmkx20210907_170101_v06": 613, "kmkx20210907_170739_v06": 613, "kmkx20210907_171431_v06": 613, "kmkx20210907_172123_v06": 613, "kmkx20210907_172814_v06": 613, "kmkx20210907_173452_v06": 613, "kmkx20210907_174130_v06": 613, "kmkx20210907_174807_v06": 613, "kmkx20210907_175459_v06": 613, "kmkx20210907_175459_v06_mdm": 613, "read_nexrad_arch": [613, 617, 618, 634, 635, 647, 649, 650, 651, 668, 669], "possibli": 613, "add_featur": [613, 615, 617, 618, 619], "pyart_chasespectr": [613, 617, 618, 619, 677, 678, 693], "70": [613, 614, 617, 634, 638, 646, 678], "set_ext": 613, "easier": [613, 614, 615], "scroll": 613, "radar_id": 613, "timestamp": [613, 614], "tz_local": 613, "later": [613, 615, 683, 686], "interfac": [613, 619, 621, 693], "conn": 613, "nexradawsinterfac": 613, "get_avail_scans_in_rang": 613, "len": [613, 618, 644, 660, 670, 682], "kmkx20210907_151132_v06": 613, "kmkx20210907_152621_v06": 613, "kmkx20210907_150152_v06": 613, "kmkx20210907_151622_v06": 613, "kmkx20210907_152121_v06": 613, "kmkx20210907_150642_v06": 613, "kmkx20210907_155424_v06_mdm": 613, "kmkx20210907_153610_v06": 613, "kmkx20210907_154814_v06": 613, "kmkx20210907_155424_v06": 613, "kmkx20210907_154205_v06": 613, "kmkx20210907_160034_v06": 613, "kmkx20210907_160607_v06": 613, "kmkx20210907_161141_v06": 613, "kmkx20210907_163532_v06": 613, "kmkx20210907_161714_v06": 613, "kmkx20210907_162924_v06": 613, "kmkx20210907_164816_v06": 613, "kmkx20210907_165433_v06": 613, "kmkx20210907_165433_v06_mdm": 613, "kmkx20210907_162247_v06": 613, "kmkx20210907_153134_v06": 613, "kmkx20210907_164149_v06": 613, "kmkx20210907_182057_v06": 613, "kmkx20210907_182749_v06": 613, "kmkx20210907_184048_v06": 613, "kmkx20210907_180841_v06": 613, "kmkx20210907_183440_v06": 613, "kmkx20210907_185431_v06_mdm": 613, "kmkx20210907_181448_v06": 613, "kmkx20210907_180150_v06": 613, "kmkx20210907_185431_v06": 613, "kmkx20210907_190109_v06": 613, "kmkx20210907_190703_v06": 613, "kmkx20210907_193238_v06": 613, "kmkx20210907_191951_v06": 613, "kmkx20210907_191327_v06": 613, "kmkx20210907_195642_v06": 613, "kmkx20210907_194459_v06": 613, "kmkx20210907_195642_v06_mdm": 613, "kmkx20210907_193849_v06": 613, "kmkx20210907_184739_v06": 613, "kmkx20210907_192614_v06": 613, "kmkx20210907_195056_v06": 613, "now": [613, 614, 615, 617, 618, 619, 621, 628, 635, 638, 639, 644, 648, 666, 668, 669, 676, 682, 684, 690, 693], "predict": 613, "tornado": [613, 617], "offic": [613, 615, 617, 682, 683, 684, 686, 687, 688], "acces": 613, "internet": 613, "wcm": 613, "2021_wind": 613, "read_spc_report": 613, "start_tim": 613, "end_tim": 613, "hazard": 613, "timezon": [613, 647], "gmt": 613, "torn": 613, "df": 613, "datafram": 613, "conver": 613, "to_datetim": [613, 614, 617], "set_index": 613, "inplac": 613, "ambigu": 613, "nat": 613, "nonexist": 613, "shift_forward": 613, "tz_convert": 613, "timedelta": [613, 617, 618], "wind_report": 613, "tornado_report": 613, "hail_report": 613, "om": 613, "yr": 613, "mo": 613, "st": 613, "stf": 613, "stn": 613, "elon": 613, "wid": 613, "sn": 613, "sg": 613, "f1": 613, "f2": 613, "f3": 613, "f4": 613, "657521": 613, "tx": 613, "7500": [613, 682], "331": [613, 621], "657522": 613, "4300": 613, "657523": 613, "0500": 613, "167": 613, "657524": 613, "0200": 613, "657525": 613, "1595": 613, "663777": 613, "sc": 613, "0100": [613, 619], "663778": 613, "663779": 613, "2200": 613, "663780": 613, "1900": 613, "49": [613, 614], "663781": 613, "1100": [613, 621], "6261": 613, "gc_latlon_bear_dist": 613, "lat1": 613, "lon1": 613, "decim": 613, "lat2": 613, "lon2": 613, "lat1r": 613, "deg2rad": 613, "lon1r": 613, "bearr": 613, "lat2r": 613, "lon2r": 613, "rad2deg": [613, 672], "add_scale_lin": 613, "fontsiz": [613, 614, 615, 618, 619, 627, 629, 644, 648, 657, 658], "fontweight": 613, "zoom": [613, 614], "black": [613, 621, 646, 665, 666], "frac_lat": 613, "frac_lon": 613, "e1": 613, "get_ext": 613, "center_lon": 613, "center_lat": 613, "shorten": 613, "hash": [613, 624], "lat1a": 613, "lon1a": 613, "lat1b": 613, "lon1b": 613, "lat2a": 613, "lon2a": 613, "lat2b": 613, "lon2b": 613, "horizontalalign": 613, "verticalalign": 613, "enumer": [613, 618], "iter_success": 613, "mdm": [613, 618], "this_tim": 613, "open_pyart": 613, "map_panel_ax": [613, 661], "x_cut_panel_ax": [613, 661], "y_cut_panel_ax": [613, 661], "masking_data_with_gatefilt": [613, 621], "ax1": [613, 614, 619, 627, 629, 646, 661, 662, 665, 668, 669, 671, 676], "add_ax": [613, 661], "recogniz": 613, "with_scal": 613, "500k": 613, "grai": [613, 615, 617, 648, 649, 665], "plot_colorbar": 613, "pad": [613, 618], "plot_range_r": [613, 621, 639, 651, 652, 654], "dash": [613, 615, 658], "set_xtick": [613, 665, 683, 686], "arang": [613, 619, 622, 638, 654, 657, 658, 665, 666, 670, 671, 672, 691], "set_ytick": [613, 665, 683, 686], "wind_reports_now": 613, "slon": 613, "tolist": 613, "slat": 613, "facecolor": [613, 615, 617], "deepskyblu": 613, "tornado_reports_now": 613, "tab": [613, 624, 646], "red": [613, 657, 658, 671], "hail_reports_now": 613, "lawngreen": 613, "legend": [613, 617, 618, 619, 646], "savefig": [613, 615, 617, 618], "_dz_rpt": 613, "bbox_inch": [613, 618], "tight": [613, 618], "white": [613, 615, 657, 671], "mp4": 613, "map_imag": 613, "gif_titl": 613, "delet": [613, 621, 622, 648, 691], "gif": 613, "get_writ": 613, "fp": 613, "writer": [613, 621], "imread": 613, "append_data": 613, "ffmpeg_writ": 613, "divis": [613, 621], "macro_block_s": 613, "resiz": 613, "1930": 613, "1766": 613, "1936": 613, "1776": 613, "video": 613, "codec": 613, "player": 613, "incompat": [613, 621, 625], "ipython": [613, 617, 618, 620, 694], "browser": 613, "event": [613, 618, 619, 668, 669], "overview": [613, 616, 624], "retrospect": 613, "ecosystem": 614, "By": [614, 615, 619, 625], "learn": [614, 618, 680], "portal": [614, 615], "march": [614, 617, 634], "shown": [614, 618, 644, 693], "offici": [614, 622, 691], "probe": 614, "millimet": 614, "ghz": 614, "purpos": [614, 615, 668, 669, 693], "nearli": [614, 657], "bokeh": 614, "formatt": 614, "datetimetickformatt": 614, "hv": 614, "guckazrcfrgem1": 614, "20220314": [614, 671], "000003": 614, "0x7f7dbd517400": 614, "linear_depolarization_ratio": 614, "mean_doppler_velocity_crosspolar_v": 614, "reflectivity_crosspolar_v": 614, "signal_to_noise_ratio_copolar_h": [614, 619], "signal_to_noise_ratio_crosspolar_v": 614, "spectral_width": 614, "spectral_width_crosspolar_v": 614, "vertical": 614, "awai": [614, 615, 645], "pyart_bal": [614, 615, 619, 638, 660, 676, 684], "substanti": 614, "211": [614, 662], "ax2": [614, 619, 627, 629, 638, 646, 661, 662, 665, 667, 668, 669, 671, 676, 684], "212": [614, 662], "pangeo": 614, "1736": 614, "600": [614, 682], "r_calib": 614, "14t00": 614, "489e": 614, "806e": 614, "107": 614, "886e": 614, "command_lin": 614, "kazrcfr_ingest": 614, "guc": 614, "m1": 614, "process_vers": 614, "kazrcfr": 614, "el7": 614, "dod_vers": 614, "kazrcfrg": 614, "input_sourc": 614, "guckazrm1": 614, "kazr_moments_": 614, "site_id": 614, "software_vers": 614, "wed": 614, "mar": 614, "leachman": 614, "1498936": 614, "histori": [614, 688], "dsmgr": 614, "procnode2": 614, "1736rang": 614, "600frequenc": 614, "1sweep": 614, "1r_calib": 614, "1coordin": 614, "453818": 614, "startstandard_nam": 614, "timearrai": 614, "453818000": 614, "527426000": 614, "601027000": 614, "002026000": 614, "075634000": 614, "149219000": 614, "float323": 614, "10long_nam": 614, "transmit": [614, 684], "frequencyunit": 614, "hzstandard_nam": 614, "radiation_frequencymeta_group": 614, "instrument_parametersarrai": 614, "float32100": 614, "130": 614, "803e": 614, "04long_nam": 614, "volumeunit": 614, "mmeters_between_g": 614, "979246meters_to_center_of_first_g": 614, "679245spacing_is_const": 614, "truestandard_nam": 614, "projection_range_coordinateaxi": 614, "radial_range_coordinatearrai": 614, "679245": 614, "6585": 614, "160": [614, 672, 686], "63774": 614, "17998": 614, "18028": 614, "268": 614, "18058": 614, "248": 614, "northunit": 614, "degreestandard_nam": 614, "sensor_to_target_azimuth_angleaxi": 614, "radial_azimuth_coordinatearrai": 614, "planeunit": 614, "sensor_to_target_elevation_angleaxi": 614, "radial_elevation_coordinatearrai": 614, "00long_nam": 614, "epochancillary_vari": 614, "time_offsetarrai": 614, "base_timeancillary_vari": 614, "base_timearrai": 614, "unspecifiedunit": 614, "dbstandard_nam": 614, "radar_linear_depolarization_ratiounpacking_detail": 614, "unpack": 614, "pack": [614, 621], "1041600": 614, "motion": 614, "instrumentunit": 614, "sstandard_nam": 614, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 614, "crosspolar": 614, "channelunit": 614, "factorunit": 614, "dbzstandard_nam": 614, "equivalent_reflectivity_factorunpacking_detail": 614, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 614, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 614, "widthunit": 614, "radar_doppler_spectrum_widthunpacking_detail": 614, "angleunit": 614, "degreearrai": 614, "n_sampl": 614, "momentsunit": 614, "1meta_group": 614, "instrument_parametersstandard_nam": 614, "number_of_samples_used_to_compute_momentsarrai": 614, "noise_figur": 614, "methodunit": 614, "dbarrai": 614, "67": [614, 668, 669], "8043": 614, "unambigu": [614, 688], "velocityunit": 614, "smeta_group": 614, "968252": 614, "repetit": 614, "timeunit": 614, "sarrai": 614, "00027": 614, "transmitt": 614, "r_calib_radar_constant_copol": 614, "copolarunit": 614, "dbmeta_group": 614, "radar_calibrationstandard_nam": 614, "calibrated_radar_constant_h_channelarrai": 614, "996191": 614, "r_calib_radar_constant_crosspol": 614, "crosspolarunit": 614, "405288": 614, "r_calib_two_way_radome_loss_h": 614, "radom": 614, "loss": 614, "radar_calibration_two_way_radome_loss_h_channelarrai": 614, "half": 614, "radar_measured_sky_noise_h": 614, "sky": 614, "dbmarrai": 614, "69": [614, 630, 654], "03703": 614, "035995": 614, "0373": 614, "03814": 614, "05106": 614, "05984": 614, "radar_measured_sky_noise_v": 614, "radar_measured_transmit_pow": 614, "powerunit": 614, "dbmmeta_group": 614, "radar_transmit_powerarrai": 614, "143": [614, 672], "receiver_gain_copol": 614, "copolunit": 614, "sweepunit": 614, "1735": 614, "s22": 614, "basedunit": 614, "unambiguous_rang": [614, 688], "rangeunit": 614, "mmeta_group": 614, "unambiguous_rangearrai": 614, "40479": 614, "477": [614, 621], "degree_nstandard_nam": 614, "latitudevalid_min": 614, "0valid_max": 614, "0arrai": 614, "956158": 614, "degree_estandard_nam": 614, "longitudevalid_min": 614, "106": 614, "987854": 614, "altitudeunit": 614, "mstandard_nam": 614, "altitudearrai": 614, "2886": 614, "levelunit": 614, "heightarrai": 614, "m1convent": 614, "radar_calibrationprocess_vers": 614, "el7dod_vers": 614, "1input_sourc": 614, "kazr_moments_20220314": 614, "000005": 614, "datsite_id": 614, "gucplatform_id": 614, "kazrcfrgefacility_id": 614, "m1data_level": 614, "a1location_descript": 614, "laboratori": [614, 618], "sail": 614, "mt": 614, "crest": 614, "butt": [614, 615], "coloradodatastream": 614, "a1antenna_altitud": 614, "mantenna_diamet": 614, "mcomment": 614, "digital_rx_dec": 614, "24dualpol": 614, "0fft_len": 614, "512filter_length": 614, "67institut": 614, "radiat": [614, 615, 617, 619, 622, 680, 682, 683, 684, 686, 687, 688, 691], "research": [614, 615, 617, 622, 680, 682, 683, 684, 686, 687, 688, 691], "facilityn_g": 614, "1024num_spectral_averag": 614, "15pulse_compression_ratio": 614, "3range_gate_spacing_m": 614, "979246range_offset_ch1": 614, "mrange_offset_ch2": 614, "mscan_mod": 614, "pointingscan_nam": 614, "vptsoftware_vers": 614, "leachmantitl": 614, "momentsdoi": 614, "1498936histori": 614, "isel": 614, "coupl": [614, 619], "extra": [614, 617, 621], "won": [614, 618], "600rang": 614, "600coordin": 614, "395940000": 614, "469427000": 614, "542946000": 614, "360000": 614, "quadmesh": [614, 615], "0x7f7dad654f10": 614, "meant": [614, 616, 618], "popular": [614, 617], "jump": 614, "bar": 614, "hover": 614, "inspect": 614, "clabel": [614, 657, 658], "xformatt": 614, "ref_plot": 614, "7000": [614, 686], "platform_id": 614, "location_descript": 614, "xtick": [614, 683, 686], "ytick": [614, 683, 686], "vel_plot": 614, "prepar": [614, 615, 617, 619, 622, 682, 683, 684, 686, 687, 688, 691, 693], "plot1": 614, "plot2": 614, "datashad": 614, "lazili": 614, "coars": 614, "intial": 614, "unfortun": 614, "ref_plot_rast": 614, "param": [614, 621], "dynamic_oper": 614, "outofboundsdatetim": 614, "nanosecond": 614, "54168": 614, "invok": 614, "x_rang": 614, "13t23": 614, "417014000": 614, "579705000": 614, "y_rang": 614, "traceback": 614, "recent": [614, 618, 621, 694], "mgrover": [614, 617, 619, 634, 638, 644, 645, 646, 652, 660, 666, 667, 676, 677, 678], "277": [614, 621], "get_plot_fram": 614, "map_obj": 614, "1344": 614, "val": 614, "_execute_callback": 614, "tuple_kei": 614, "retval": 614, "callback": 614, "arg": 614, "708": 614, "__call__": 614, "ret": 614, "__init__": [614, 622, 691], "1043": [614, 621], "obj": 614, "resolv": [614, 621], "1032": [614, 621], "1044": 614, "1036": 614, "_process": 614, "1018": [614, 621], "process_el": 614, "194": [614, 651, 663, 689], "_appli": 614, "141": 614, "1514": 614, "predic": [614, 619], "pipelined_fn": 614, "method_fn": 614, "1223": 614, "super": [614, 651, 683, 686], "710": [614, 621], "map_fn": 614, "214": 614, "1133": [614, 621], "astyp": 614, "int64": [614, 628], "1497": [614, 621], "apply_ufunc": 614, "1159": 614, "apply_dataarray_vfunc": 614, "286": [614, 621], "result_var": 614, "data_var": 614, "750": [614, 621], "apply_variable_ufunc": 614, "as_compatible_data": 614, "234": 614, "_possibly_convert_object": 614, "178": 614, "asarrai": 614, "ravel": 614, "reshap": 614, "sanitize_arrai": 614, "567": [614, 621], "subarr": 614, "_try_cast": 614, "raise_cast_failur": 614, "726": [614, 621], "sanitize_to_nanosecond": 614, "arr": 614, "cast": 614, "1717": 614, "ensure_datetime64n": 614, "_lib": 614, "tslib": 614, "pyx": [614, 621], "257": 614, "np_datetim": 614, "120": [614, 682], "check_dts_bound": 614, "saw": 614, "few": [614, 621, 624, 694], "pro": 614, "con": 614, "thing": [614, 622, 691], "clear": [614, 619], "push": [614, 621, 622, 624, 691], "share": 614, "ran": [614, 622, 691], "shareabl": 614, "workflow": [614, 617, 621, 693], "mb": [614, 631, 636, 642, 663, 673, 674, 679, 689], "difficult": [614, 638], "jupyterbook": 614, "jupyt": [614, 617, 621, 627, 628, 629, 630, 632, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 694], "campaign": [614, 619, 669], "twitter": 615, "nou": 615, "dryglick": 615, "notic": [615, 619, 621, 638, 648], "odd": 615, "directli": [615, 644, 693], "grei": 615, "darker": 615, "moir\u00e9": 615, "ryan": 615, "dopplershift": [615, 621], "turbul": 615, "ncei": 615, "search": [615, 680, 690], "aw": [615, 617, 621, 632, 633, 635, 636, 689], "mention": [615, 621, 622, 680, 691, 693, 694], "he": 615, "n0u": [615, 634], "elgin": 615, "panhandl": 615, "kevx": 615, "1458": 615, "octob": 615, "landfal": 615, "gulf": 615, "lookl": 615, "webpag": 615, "cart": 615, "sent": 615, "email": [615, 619, 621], "websit": 615, "ftp": 615, "unzip": [615, 617], "kmob_sdus54_n0uevx_201810101458": 615, "partli": [615, 617, 682, 683, 684, 686, 687, 688], "facil": [615, 617, 618, 619, 622, 680, 682, 683, 684, 686, 687, 688, 691], "cite": [615, 617, 619, 621, 682, 683, 684, 686, 687, 688], "jj": [615, 617, 682, 683, 684, 686, 687, 688], "sm": [615, 617, 682, 683, 684, 686, 687, 688], "colli": [615, 617, 622, 680, 682, 683, 684, 686, 687, 688, 691], "jor": [615, 617, 622, 680, 682, 683, 684, 686, 687, 688, 691], "5334": [615, 617, 622, 680, 682, 683, 684, 686, 687, 688, 691], "119": [615, 617, 622, 635, 680, 682, 683, 684, 686, 687, 688, 691], "read_level3": 615, "dark": 615, "dark_background": [615, 647], "okai": 615, "88": [615, 617, 618, 666], "83": 615, "31msignatur": [615, 619], "0m": [615, 617, 619], "0mdisplai": 615, "34m": [615, 619], "0mplot_ppi_map": 615, "0mfield": 615, "0msweep": 615, "36m0": 615, "0mmask_tupl": 615, "32mnone": [615, 619], "0mvmin": 615, "0mvmax": 615, "0mcmap": 615, "0mnorm": 615, "0mmask_outsid": 615, "32mfals": 615, "0mtitl": 615, "0mtitle_flag": 615, "32mtrue": 615, "0mcolorbar_flag": 615, "0mcolorbar_label": 615, "0max": 615, "0mfig": 615, "0mlat_lin": 615, "0mlon_lin": 615, "0mproject": 615, "0mmin_lon": 615, "0mmax_lon": 615, "0mmin_lat": 615, "0mmax_lat": 615, "0mwidth": 615, "0mheight": 615, "0mlon_0": 615, "0mlat_0": 615, "0mresolut": 615, "0mshapefil": 615, "0mshapefile_kwarg": 615, "0medg": 615, "0mgatefilt": 615, "0mfilter_transit": 615, "0membelish": 615, "0mraster": 615, "0mtick": 615, "0mticklab": 615, "0malpha": 615, "31msourc": 615, "32mdef": 615, "0mself": 615, "embelish": [615, 621], "31m": 615, "0mparse_vmin_vmax": 615, "0m_radar": 615, "0mparse_cmap": 615, "32mif": 615, "32mi": 615, "0mnp": 615, "0marang": 615, "36m30": 615, "36m46": 615, "36m1": 615, "36m110": 615, "36m75": 615, "0mloc": 615, "0mdata": 615, "0m_get_data": 615, "0mx": 615, "0my": 615, "0m_get_x_i": 615, "0mma": 615, "0mmasked_outsid": 615, "0mplt": 615, "0mgcf": 615, "32mnot": 615, "0mhasattr": 615, "32mels": 615, "0mcartopi": 615, "0mcr": 615, "0mlambertconform": 615, "0mcentral_longitud": 615, "0mcentral_latitud": 615, "0mwarn": 615, "overrid": [615, 658], "lambert": [615, 621], "0muserwarn": 615, "0mset_ext": 615, "0mplatecarre": 615, "32melif": 615, "36m2": 615, "0mgrid_project": 615, "0mpm": 615, "0mpcolormesh": 615, "36m1000": 615, "0mtransform": 615, "graphic": 615, "0mset_raster": 615, "admin": [615, 622, 691], "0mstates_provinc": 615, "0mfeatur": 615, "0mnaturalearthfeatur": 615, "0mcategori": 615, "cultur": 615, "0mname": 615, "admin_1_states_provinces_lin": 615, "0mscale": 615, "0mfacecolor": 615, "0mcoastlin": 615, "0madd_featur": 615, "0medgecolor": 615, "pose": 615, "difficulti": 615, "spectif": 615, "32min": 615, "0mmercat": 615, "0mgl": 615, "0mgridlin": 615, "0mxloc": 615, "0myloc": 615, "0mdraw_label": 615, "0mxlabels_top": 615, "0mylabels_right": 615, "0misinst": 615, "0mfigur": 615, "0mcanva": 615, "0mdraw": 615, "maker": 615, "0mxaxi": 615, "0mset_major_formatt": 615, "0mmpl": 615, "0mlongitude_formatt": 615, "0myaxi": 615, "0mlatitude_formatt": 615, "0m_lambert_gridlin": 615, "0mlambert_xtick": 615, "0mlambert_ytick": 615, "32mfrom": 615, "0mio": 615, "0mshaperead": 615, "32mimport": 615, "0mreader": 615, "0madd_geometri": 615, "0mgeometri": 615, "0m_set_titl": 615, "0mplot": 615, "0mappend": 615, "0mplot_var": 615, "0mplot_colorbar": 615, "0mmappabl": 615, "0mlabel": 615, "32mreturn": 615, "31mfile": [615, 619], "git_repo": 615, "31mtype": [615, 619], "fashion": 615, "0marg": 615, "0mshade": 615, "0mantialias": 615, "0mkwarg": 615, "31mdocstr": [615, 619], "pseudocolor": 615, "signatur": [615, 617], "quadrilater": 615, "pcolor": 615, "prefer": [615, 621, 690], "shade": [615, 621], "flat": [615, 634], "gouraud": 615, "cari": 615, "expand": 615, "rc": 615, "regist": [615, 619], "canon": 615, "chosen": 615, "patch": [615, 657], "force_edgecolor": 615, "singular": [615, 618], "opaqu": 615, "solid": [615, 658], "quad": 615, "halfwai": 615, "galleri": [615, 621, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 680, 689], "images_contours_and_field": 615, "pcolormesh_grid": 615, "snap": 615, "mesh": 615, "misc": [615, 621], "rasterization_demo": 615, "constructor": 615, "agg_filt": 615, "anim": 615, "antialias": [615, 657, 658], "aa": 615, "capstyl": 615, "clip_box": 615, "bbox": 615, "clip_on": 615, "clip_path": 615, "rgba": 615, "ec": 615, "fc": 615, "gid": 615, "hatch": 615, "in_layout": 615, "joinstyl": 615, "miter": 615, "bevel": 615, "thereof": 615, "offset_transform": 615, "path_effect": 615, "abstractpatheffect": 615, "picker": 615, "pickradiu": 615, "sketch_param": 615, "random": [615, 619], "zorder": 615, "imshow": [615, 621, 639, 640, 641, 644], "_ax": 615, "nrow": [615, 644], "ncolumn": 615, "_differ": 615, "li": 615, "handl": [615, 621], "polycollect": 615, "thu": [615, 624], "almost": 615, "slight": 615, "polygon": 615, "irrespect": 615, "One": [615, 618, 622, 682, 688, 691, 694], "masked_arrai": [615, 628, 671, 682, 688], "1e": [615, 671, 682, 688], "next": [615, 617, 624, 628, 634, 665], "get_gate_lat_lon_alt": [615, 619, 621], "565": [615, 621], "562763": 615, "560526": 615, "888458": 615, "886227": 615, "883991": 615, "562765": 615, "560532": 615, "892834": 615, "890606": 615, "888374": 615, "562769": 615, "56054": 615, "898003": 615, "89578": 615, "893553": 615, "562756": 615, "560509": 615, "880096": 615, "877857": 615, "875618": 615, "560513": 615, "881853": 615, "879616": 615, "877377": 615, "56276": 615, "560518": 615, "884874": 615, "88264": 615, "880404": 615, "92199": 615, "92222": 615, "92245": 615, "186806": 615, "18703": 615, "18723": 615, "922264": 615, "92254": 615, "2396": 615, "23986": 615, "24012": 615, "92231": 615, "92263": 615, "29231": 615, "29262": 615, "29292": 615, "92208": 615, "92218": 615, "02802": 615, "02811": 615, "0282": 615, "92212": 615, "92226": 615, "07571": 615, "07583": 615, "07595": 615, "922356": 615, "133934": 615, "1341": [615, 621], "13428": 615, "setup": [615, 619, 621, 634, 638, 644, 646, 652, 666, 680, 690], "geoaxi": 615, "border": [615, 657], "cbar": [615, 618, 648], "tick_param": [615, 671], "labels": 615, "set_label": [615, 618, 648], "gl": [615, 617, 648], "draw_label": [615, 617, 648], "xlabel_styl": [615, 648], "ylabel_styl": [615, 648], "kevz_velocity_2018_10_10_1458": 615, "specifici": 615, "pull": [615, 618, 621, 622, 623, 624, 635, 691], "pr": [615, 624], "importantli": 615, "api": [615, 621, 680, 693], "abil": [615, 621, 680, 694], "arguement": 615, "appreci": [615, 680], "hello": 616, "welcom": [616, 693], "narr": 616, "feedback": [616, 693], "feel": 616, "know": [616, 618, 619, 694], "fridai": 617, "midwest": 617, "142": 617, "368": [617, 621], "excess": 617, "65": [617, 618, 665, 671], "knot": 617, "mph": 617, "184": 617, "bing": 617, "diamet": 617, "ifram": 617, "spc": [617, 621], "climo": 617, "gmf": 617, "php": 617, "rpt": 617, "230331_rpts_filter": 617, "walworth": 617, "counti": 617, "southeastern": [617, 638], "geneva": 617, "tourist": 617, "especi": [617, 619, 639], "live": 617, "chicagoland": 617, "confirm": [617, 634, 682], "assembl": 617, "summari": [617, 634], "grlevel": 617, "encourag": 617, "peopl": 617, "cookbook": [617, 621, 680, 692], "moor": 617, "focu": 617, "varieti": [617, 619, 622, 632, 633, 669, 691], "forg": [617, 621, 622, 680, 690, 691, 694], "arm_pyart": [617, 622, 624, 680, 690, 691, 694], "shaperead": 617, "shpreader": 617, "shapelyfeatur": 617, "miniforge3": 617, "tqdm": 617, "tqdmwarn": 617, "iprogress": 617, "ipywidget": 617, "readthedoc": 617, "stabl": 617, "user_instal": 617, "autonotebook": 617, "notebook_tqdm": 617, "credit": 617, "censu": 617, "mac": [617, 621, 680], "curl": 617, "linux": [617, 621, 622, 680, 691, 694], "wget": 617, "www2": 617, "geo": [617, 621], "tiger": 617, "tiger2016": 617, "primaryroad": 617, "tl_2016_us_primaryroad": 617, "zip": [617, 618, 627, 628, 629, 630, 632, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678, 680], "xferd": 617, "dload": 617, "upload": [617, 621], "spent": 617, "7m": 617, "cpg": 617, "inflat": 617, "dbf": 617, "prj": 617, "shp": 617, "ea": 617, "iso": 617, "shx": 617, "reader": [617, 620, 621, 635, 647], "geom": 617, "loop": [617, 621, 672], "rec": 617, "fullnam": 617, "interstate_featur": 617, "darkblu": 617, "clean": [617, 618, 621, 665, 676], "filesystem": [617, 618, 647], "month": [617, 634, 635], "kmkx20230401_010517_v06": 617, "kmkx20230401_011057_v06": 617, "kmkx20230401_011638_v06": 617, "kmkx20230401_012219_v06": 617, "kmkx20230401_012759_v06": 617, "kmkx20230401_013341_v06": 617, "kmkx20230401_013922_v06": 617, "kmkx20230401_014502_v06": 617, "kmkx20230401_015042_v06": 617, "kmkx20230401_015623_v06": 617, "kmkx20230401_015928_v06": 617, "plot_configur": 617, "twilight_shift": [617, 676], "cross_correlation_ratio": [617, 618, 634, 649, 650, 668, 669, 687, 688], "plot_radar_ppi": 617, "left_field": 617, "right_field": 617, "plot_config": 617, "precip": 617, "vel_dealia": 617, "dealias_region_bas": [617, 621, 629, 665, 676, 684], "add_field": [617, 622, 627, 629, 665, 668, 669, 670, 671, 676, 683, 684, 691], "corrected_veloc": [617, 629, 665, 672, 676, 684, 687], "plot_numb": 617, "config": [617, 621, 682, 694], "121": [617, 619, 634, 638, 646, 667, 671, 676], "generate_titl": 617, "time_step": 617, "get_start_end": 617, "central_tim": 617, "astimezon": [617, 647], "new_titl": 617, "cdt": 617, "sharon": 617, "Near": 617, "delavan": 617, "6105": 617, "60666": 617, "lightgrei": 617, "lavenderblush": 617, "ppi_velocity_reflectivity_": 617, "flexibl": [617, 621], "hope": 617, "concept": 618, "quickstart": 618, "basic": [618, 621, 680, 681, 683], "visual": [618, 619, 621, 644, 649, 657, 666, 669, 676, 693], "compet": 618, "bytesio": 618, "pil": 618, "ipimag": 618, "repositori": [618, 622, 623, 624, 680, 690, 691, 694], "chicago": 618, "klot": 618, "june": 618, "5th": 618, "start_dat": 618, "yyyi": [618, 619, 620], "dd": [618, 619, 620], "hh": 618, "end_dat": 618, "argonn": 618, "lemont": 618, "il": 618, "sawmil": 618, "creek": 618, "darien": 618, "ie": 618, "slot": 618, "700937896518866": 618, "73884644555692": 618, "99578103231573": 618, "98744136114946": 618, "tower": 618, "scm": [618, 621, 622, 691], "magenta": 618, "cyan": [618, 671], "current_d": 618, "date_str": 618, "date_str_compact": 618, "hour_str": 618, "all_fil": 618, "filtered_fil": 618, "endswith": [618, 647], "_mdm": [618, 647], "although": 618, "pol": 618, "check_radar_field": 618, "file_path": 618, "rb": 618, "radar_data": 618, "klot20240605_040442_v06": 618, "clutter_filter_power_remov": [618, 634], "spectrum_width": [618, 634, 687, 688], "differential_phas": [618, 634, 650, 687, 688], "streamlin": 618, "read_radar_data": 618, "tell": [618, 671, 687], "halt": 618, "unabl": 618, "sometim": [618, 624, 682], "reduc": [618, 649, 669, 690], "nonmeteorolog": 618, "blob": [618, 658], "aforement": 618, "fit": 618, "pure": 618, "aesthet": 618, "decis": 618, "basenam": 618, "markers": 618, "tight_layout": [618, 619, 630, 639, 662, 665], "046": 618, "radar_frame_": 618, "frame": 618, "someth": [618, 680], "rid": 618, "temporarili": 618, "abl": [618, 680, 690], "pillow": 618, "gif_filenam": 618, "radar_anim": 618, "save_al": 618, "append_imag": 618, "durat": 618, "704120": 618, "968328": 618, "frames_dir": 618, "makedir": 618, "exist_ok": 618, "radar_displai": 618, "notabl": [619, 620], "insight": [619, 620], "analyz": [619, 622, 680, 687, 691], "decid": 619, "quicklook": 619, "januari": [619, 622, 680, 691], "wettest": 619, "la": 619, "jolla": 619, "california": 619, "tarfil": 619, "download_arm_data": 619, "0mact": 619, "0mdiscoveri": 619, "0mdownload_arm_data": 619, "0musernam": 619, "0mtoken": 619, "0mdatastream": 619, "0mstartdat": 619, "0menddat": 619, "0mtime": 619, "0moutput": 619, "webservic": 619, "usernam": [619, 690], "log": [619, 621, 624, 647], "adc": [619, 621], "datastream": 619, "acquir": 619, "startdat": 619, "yyyymmdd": 619, "thh": 619, "ss": 619, "15t12": 619, "enddat": 619, "15t13": 619, "hhmmss": 619, "programmat": 619, "rest": 619, "savedata": 619, "cron": 619, "job": 619, "workspac": 619, "disk": 619, "hpss": 619, "armliv": 619, "livedata": 619, "giansiracusa": 619, "giansiracumt": 619, "ornl": 619, "sgpmete13": 619, "jan": 619, "xxxxxxxxxxxxxxxx": 619, "download_data": 619, "mambaforg": 619, "epckasacrcfrs2": 619, "21t01": 619, "20240121": 619, "010020": 619, "010436": 619, "011116": 619, "012914": 619, "012503": 619, "011845": 619, "012257": 619, "010757": 619, "010118": 619, "011434": 619, "012708": 619, "011640": 619, "012051": 619, "hardin": 619, "isom": 619, "lindenmai": 619, "matthew": 619, "nelson": 619, "feng": 619, "deng": 619, "rocqu": 619, "castro": 619, "wendler": 619, "ka": 619, "kasacrcfr": 619, "1469302": 619, "trick": 619, "ones": [619, 644], "798": 619, "runtimewarn": 619, "encount": 619, "intersect": 619, "whic": 619, "ppi_fil": 619, "rhi_fil": 619, "elif": 619, "mainli": 619, "threshold_valu": 619, "suptitl": [619, 627, 629, 639, 660, 672], "too": [619, 621], "And": [619, 621, 628], "remaind": 619, "fromnumer": 619, "784": [619, 621], "maskedarrai": [619, 621], "kth": 619, "idea": [619, 682, 684], "0115": 619, "rhi_radar": 619, "ppi_radar": 619, "achiv": 619, "past": [620, 622, 691], "tag": [620, 621], "kernelspec": 620, "display_nam": 620, "ipykernel": 620, "languag": [620, 622, 680, 691], "language_info": 620, "codemirror_mod": 620, "file_extens": 620, "mimetyp": 620, "nbconvert_export": 620, "pygments_lex": 620, "ipython3": 620, "insert": 620, "nbformat": 620, "nbformat_minor": 620, "care": 620, "isilb": 621, "sinaram": 621, "1532": 621, "zssherman": 621, "get_azimuth": 621, "xradar": [621, 679, 689, 693], "1547": 621, "mgrover1": 621, "1544": 621, "1542": 621, "1541": 621, "bridg": 621, "1537": 621, "columnsect": [621, 666], "1529": 621, "failur": 621, "wheel": 621, "1526": 621, "dep": 621, "bump": 621, "action": [621, 622, 624, 691], "group": [621, 622, 691], "1539": 621, "dependabot": 621, "epcap": 621, "1534": 621, "1530": 621, "1528": 621, "zdist_factor": 621, "1509": 621, "1524": 621, "1519": 621, "codeql": 621, "1515": 621, "pin": [621, 624], "ci": [621, 623, 624], "1507": 621, "xdrlib": 621, "1525": 621, "1518": 621, "1492": 621, "kmuehlbauer": 621, "rtanamachi": 621, "1504": 621, "1487": 621, "1478": 621, "jrobrien91": 621, "1503": 621, "1501": 621, "outdat": 621, "ipynb": [621, 627, 628, 629, 630, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678], "1490": 621, "1484": 621, "1482": 621, "1474": 621, "commit": [621, 622, 624, 691], "1506": 621, "1475": 621, "rainbow_wrl": 621, "happyxiaoanan": 621, "reclass": 621, "1495": 621, "rbhupi": 621, "1493": 621, "minor": [621, 639, 683, 686], "get_elev": 621, "1489": 621, "rescal": [621, 668, 669], "1486": 621, "1479": 621, "rcjackson": 621, "app": 621, "cmweather": [621, 693], "1452": 621, "accessor": 621, "1457": 621, "1456": 621, "typo": 621, "1471": 621, "isinst": 621, "1448": 621, "1472": 621, "1470": 621, "1469": 621, "instruct": [621, 680, 692], "1462": 621, "1473": 621, "1468": 621, "1450": 621, "scolli": 621, "dim": 621, "load_kazr": 621, "1446": 621, "1447": 621, "arm_vpt": 621, "1445": 621, "lint": [621, 622, 691], "1444": 621, "mnt": 621, "1440": [621, 682], "dedic": [621, 693], "1442": 621, "1443": 621, "1437": 621, "algorith": 621, "1434": 621, "wolfidan": 621, "1430": 621, "1433": 621, "1428": 621, "neutrinocero": 621, "odim": 621, "1425": 621, "gatemapp": [621, 632, 637, 642, 689], "1418": 621, "hook": [621, 622, 691], "1419": 621, "sphinx": [621, 627, 628, 629, 630, 632, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 676, 677, 678], "theme": 621, "1427": 621, "feet": 621, "1423": 621, "leak": 621, "mapper": 621, "1421": 621, "vforcel": 621, "1417": 621, "steepatticstair": 621, "1407": 621, "readm": [621, 690], "1397": 621, "1416": 621, "1413": 621, "1411": 621, "1409": 621, "1401": 621, "joshua": 621, "hampton": 621, "del": [621, 648], "old": 621, "conda_recip": 621, "1399": 621, "ruff": 621, "1388": 621, "wrong": 621, "1390": 621, "1385": 621, "1383": 621, "pkg_resourc": 621, "runtim": 621, "1394": 621, "mail": [621, 622, 680, 691], "1393": 621, "codeown": 621, "1391": 621, "1384": 621, "1382": 621, "1379": 621, "mismatch": 621, "1381": 621, "wrap": 621, "get_gate_area": 621, "1375": 621, "1380": [621, 682], "1372": 621, "exec_modul": 621, "load_modul": 621, "1369": 621, "badg": 621, "read_sigmet": 621, "1351": 621, "zouihao": 621, "unus": 621, "1343": 621, "1342": 621, "range_step": 621, "1338": 621, "max_num_g": 621, "1337": 621, "1327": 621, "revert": 621, "setuptool": 621, "unwant": 621, "cleanup": 621, "1357": 621, "1355": 621, "1339": 621, "1361": 621, "1335": 621, "manipul": [621, 648, 681], "1300": 621, "kylejgillett": 621, "melovato": 621, "tsbiscaro": 621, "1324": 621, "1319": 621, "1314": 621, "add_filt": 621, "1326": 621, "1320": [621, 682], "1325": 621, "jthielen": 621, "1303": 621, "jjhelmu": [621, 694], "wx4stg": 621, "antiviru": 621, "similiar": 621, "1307": 621, "1299": 621, "throw": 621, "convolve1d": 621, "1313": 621, "1306": 621, "1317": 621, "1311": 621, "jfigui": 621, "citat": [621, 622, 649, 680, 691], "1304": 621, "gamaanderson": 621, "hhuangwx": 621, "josephhardine": 621, "meteoswiss": [621, 670, 672], "mdr": 621, "ngui": 621, "tjlang": 621, "1294": 621, "1290": 621, "1285": 621, "1279": 621, "backward": [621, 625], "1278": 621, "1284": 621, "tracer": 621, "1296": 621, "1292": 621, "1287": 621, "cibuildwheel": 621, "1267": 621, "ocefpaf": 621, "1275": 621, "1276": 621, "1265": 621, "dcedgren": 621, "jilling": 621, "zhaobudaola": 621, "1263": 621, "1235": 621, "1215": 621, "1261": 621, "1241": 621, "1240": 621, "gatefi": 621, "1226": 621, "join_radar": 621, "repititon": 621, "iparam": 621, "1218": 621, "1216": 621, "trmm_rsl": 621, "1239": 621, "cftime": 621, "1211": 621, "incorrect": [621, 625, 684], "1231": 621, "ci_setup": 621, "1213": 621, "1264": 621, "1251": 621, "1234": 621, "1228": 621, "subset_radar": 621, "radar_util": 621, "1227": 621, "pyrad": 621, "1220": 621, "tst": 621, "1214": 621, "srbrodzik": 621, "1208": 621, "1204": 621, "1201": [621, 634], "1198": 621, "1196": 621, "catch": 621, "1191": 621, "1207": 621, "pypi": 621, "1206": 621, "unitest": 621, "1200": [621, 682], "1199": 621, "echoclass": 621, "1197": 621, "convv": 621, "awhil": 621, "back": 621, "1195": 621, "1190": 621, "dp": 621, "1184": 621, "solver": [621, 680], "1183": 621, "1176": 621, "1187": 621, "revis": 621, "270": [621, 622, 662, 691], "1185": 621, "1181": 621, "1178": 621, "1171": 621, "1180": 621, "1177": 621, "1173": 621, "sobitp59": 621, "rogu": 621, "1170": 621, "1160": 621, "1152": 621, "1151": 621, "mispel": 621, "1158": 621, "1148": 621, "1167": 621, "1154": 621, "unittest": 621, "1153": 621, "1136": 621, "trigger": 621, "1126": 621, "1118": 621, "1115": 621, "maco": 621, "1147": 621, "prune": 621, "1143": 621, "1141": 621, "1140": [621, 682], "1139": 621, "1137": 621, "1131": 621, "1130": 621, "1129": 621, "1128": 621, "1127": 621, "1125": 621, "1124": 621, "1123": 621, "1120": 621, "1119": 621, "dpr": 621, "1116": 621, "postcard": 621, "1104": 621, "1103": 621, "1122": 621, "gridmapdisplai": [621, 632, 643, 646, 647, 663, 668, 669, 677, 686, 689, 693], "1099": 621, "quick": [621, 634], "1146": 621, "contribut": [621, 622, 691, 692], "1106": 621, "1117": 621, "1113": 621, "submodul": [621, 686], "1110": 621, "forgotten": 621, "1108": 621, "test_echo_class": 621, "1107": 621, "1101": 621, "1098": 621, "1097": 621, "1094": 621, "1080": [621, 682], "registri": 621, "1087": 621, "1096": 621, "1093": 621, "1090": 621, "1089": 621, "1088": 621, "1085": 621, "1084": 621, "analyt": 621, "1081": 621, "1079": 621, "1077": 621, "pmi": 621, "csp": 621, "ritvj": 621, "doesn": [621, 682], "mandat": 621, "1014": 621, "reallynicegui": 621, "hasattr": 621, "1034": 621, "overlap": [621, 648, 657], "mapdisplai": 621, "1029": 621, "azimuth_rhi_plot": 621, "1025": 621, "1019": 621, "rxm25": 621, "1075": 621, "1064": 621, "mute_radar": 621, "1033": 621, "1030": 621, "radxgrid": 621, "1027": 621, "1026": 621, "roadmap": 621, "repo": [621, 622, 691], "1059": 621, "sidebar": 621, "1074": 621, "datetime_util": 621, "1072": 621, "1071": 621, "pydata": 621, "1069": 621, "1068": 621, "1067": 621, "1066": 621, "1063": 621, "codecov": 621, "1061": 621, "1060": 621, "1058": 621, "1056": 621, "1055": 621, "1053": 621, "1051": 621, "1050": 621, "1048": 621, "branch": [621, 622, 624, 691, 694], "1040": 621, "1039": 621, "1038": 621, "1031": 621, "1024": 621, "1020": [621, 682], "humphreyscart": 621, "tkralph": 621, "1003": 621, "997": [621, 646, 663, 689], "1007": 621, "1001": 621, "1010": 621, "travi": 621, "sty": [621, 622, 691], "pep8": [621, 622, 691], "1005": 621, "988": 621, "quba1": 621, "984": [621, 644, 663, 689], "tdwr": 621, "969": 621, "956": 621, "994": 621, "979": 621, "h5py": [621, 680], "978": 621, "june1st": 621, "switch": [621, 622, 691], "973": 621, "maint": [621, 622, 691], "966": 621, "983": 621, "amarouan": 621, "abdelhak": 621, "bmgxyz": 621, "address": [621, 671], "962": 621, "mwilson14": 621, "963": 621, "nonetyp": 621, "regard": 621, "959": 621, "964": 621, "176": 621, "919": 621, "rda": 621, "903": 621, "add_gate_area": 621, "950": 621, "blotchi": 621, "947": 621, "946": 621, "944": 621, "694": 621, "938": 621, "vlouf": 621, "934": 621, "925": 621, "924": 621, "917": 621, "appveyor": 621, "937": 621, "927": 621, "liter": 621, "said": 621, "949": 621, "948": 621, "929": 621, "926": 621, "920": 621, "915": 621, "911": 621, "grwise1": 621, "jsignel": 621, "rumpki": 621, "broke": 621, "913": 621, "msg29": 621, "909": 621, "907": 621, "framework": 621, "910": 621, "912": 621, "napoleon": 621, "902": 621, "rtd": 621, "893": 621, "892": 621, "odimh5": 621, "898": 621, "895": 621, "896": 621, "864": 621, "louiswick": 621, "hilderbrand": 621, "877": 621, "886": 621, "crash": 621, "878": 621, "891": 621, "zflamig": 621, "futur": [621, 622, 625, 691], "890": 621, "889": 621, "885": 621, "dstex": 621, "880": [621, 647, 663, 689], "soon": 621, "879": 621, "plot_grid": [621, 646, 661, 668, 669, 677, 686, 693], "to_xarrai": 621, "873": 621, "876": 621, "elementwis": 621, "anaconda": [621, 622, 624, 680, 690, 691], "faq": 621, "868": 621, "mvanlierwalq": 621, "848": 621, "grid_io": 621, "846": 621, "jhemedin": 621, "841": 621, "nbin": 621, "865": 621, "856": 621, "840": [621, 682], "caus": 621, "852": 621, "849": 621, "get_dataset": 621, "845": 621, "docstr": 621, "838": 621, "836": 621, "cheatsheet": 621, "fortran": 621, "bit": [621, 690], "environ": [621, 680, 690, 692], "contr": 621, "843": 621, "spell": 621, "835": 621, "read_d3r_gcpex_nc": 621, "842": 621, "eccc": 621, "837": 621, "taylbm": 621, "kenkeho": 621, "swnesbitt": 621, "827": [621, 660, 663, 689], "822": 621, "806": 621, "804": 621, "800": [621, 665], "778": 621, "688": [621, 666], "incomplet": 621, "msg5": 621, "832": 621, "820": 621, "812": 621, "deal": 621, "809": 621, "contiuum": 621, "gh": 621, "795": 621, "explicit": 621, "py2": 621, "790": 621, "sh": 621, "kai": 621, "muehlbauer": 621, "789": 621, "777": 621, "indexerror": 621, "check_outli": 621, "776": 621, "juhi24": 621, "770": 621, "imp": 621, "newer": [621, 690], "675": 621, "824": [621, 655, 663, 689], "minu": 621, "803": 621, "738": 621, "799": 621, "792": 621, "favor": 621, "791": 621, "786": 621, "itself": [621, 688], "inc": 621, "794": [621, 673], "rst": 621, "preformat": 621, "779": 621, "eaxmpl": 621, "834": 621, "833": [621, 671], "elsewher": 621, "831": 621, "828": 621, "821": 621, "pytest": [621, 622, 680, 690, 691], "818": 621, "atteun": 621, "817": 621, "simulated_veloc": [621, 687], "802": 621, "grab": [621, 660], "796": [621, 676, 679, 689], "793": 621, "787": 621, "781": 621, "cvd": 621, "775": 621, "774": 621, "769": 621, "nl2": 621, "765": 621, "miaoneng": 621, "gewitterblitz": 621, "liliaow567": 621, "764": 621, "coveral": 621, "messsag": 621, "761": 621, "757": 621, "set_raster": 621, "748": [621, 630, 631, 689], "754": 621, "755": 621, "recompil": 621, "758": 621, "ngoldbaum": 621, "reciev": 621, "752": 621, "gate_id": [621, 687], "749": 621, "746": 621, "744": 621, "zxdawn": 621, "netcdftim": 621, "736": 621, "731": 621, "dot_product": 621, "729": 621, "test_rhi_elev": 621, "twice": [621, 669], "724": 621, "728": 621, "727": 621, "nosetest": 621, "715": 621, "vradh": 621, "vradv": 621, "quantiti": 621, "739": 621, "es5nhc": 621, "735": 621, "wave100": 621, "734": 621, "733": 621, "730": 621, "723": 621, "comp": 621, "721": 621, "cameron": 621, "homey": 621, "716": 621, "cameronhomey": 621, "jamessong": 621, "winash12": 621, "687": 621, "csnardi": 621, "645": 621, "docbuild": 621, "709": 621, "mhpicel": 621, "705": 621, "fromstr": 621, "704": 621, "692": 621, "651": 621, "711": 621, "calculate_velocity_textur": [621, 676, 684], "retreiv": 621, "672": 621, "bucket": [621, 634, 647], "673": [621, 649, 663, 689], "653": 621, "638": 621, "635": 621, "frombuff": 621, "702": 621, "grid_mapp": 621, "707": 621, "706": 621, "goharkai": 621, "infinit": 621, "693": 621, "freemansw1": 621, "683": 621, "674": 621, "668": 621, "contact": 621, "land": 621, "667": [621, 682], "665": 621, "662": [621, 641, 642, 689], "661": 621, "attributeerror": 621, "656": 621, "oserror": 621, "650": 621, "overflowerror": 621, "648": 621, "happier": 621, "647": 621, "640": 621, "639": 621, "634": 621, "620": 621, "itsjm": 621, "kirknorth": 621, "617": 621, "616": 621, "631": 621, "swap": 621, "el": 621, "plot_rai": 621, "618": 621, "_get_angl": 621, "613": 621, "607": 621, "linspac": [621, 622, 644, 649, 665, 668, 669, 682, 691], "603": 621, "627": 621, "623": 621, "596": 621, "595": 621, "632": 621, "630": 621, "625": [621, 677, 679, 689], "tulipasilva": 621, "622": 621, "normbw": 621, "q": 621, "quit": [621, 680], "614": 621, "git": [621, 622, 680, 690, 691, 693, 694], "611": 621, "608": 621, "mrugna": 621, "605": 621, "bld": 621, "kludg": 621, "604": 621, "acknowledg": [621, 680], "602": 621, "qpe": [621, 669], "mustafaalicelik": 621, "580": 621, "577": 621, "576": 621, "575": 621, "azim": 621, "546": 621, "pickl": 621, "unpickl": 621, "543": 621, "vcp": 621, "541": 621, "noaaport": 621, "seper": 621, "540": [621, 658, 663, 682, 689], "521": 621, "459": 621, "590": 621, "bugfix": 621, "l3": 621, "135": [621, 653, 663, 689], "eet": 621, "585": 621, "582": 621, "570": 621, "558": 621, "ctm": 621, "553": 621, "542": [621, 627, 631, 689], "aux_io": [621, 628], "read_gam": 621, "535": 621, "midnight": 621, "523": 621, "importerror": 621, "522": 621, "519": 621, "512": 621, "510": 621, "phase_proc": 621, "zerodivis": 621, "494": 621, "485": 621, "unsupport": [621, 693], "481": 621, "579": 621, "578": 621, "568": 621, "563": 621, "559": 621, "549": 621, "547": 621, "gamicfil": 621, "gamic_hdf5": 621, "536": 621, "524": 621, "513": 621, "balltre": 621, "504": 621, "501": 621, "482": 621, "479": 621, "594": 621, "561": 621, "despeckle_field": 621, "544": 621, "axislabel_flag": 621, "539": 621, "529": 621, "_get_x_z": 621, "491": 621, "486": 621, "586": 621, "572": 621, "fixup": 621, "569": 621, "560": 621, "555": [621, 666], "recip": [621, 624], "554": 621, "nose_arg": 621, "548": 621, "538": 621, "532": 621, "531": 621, "528": 621, "output_to_geotiff": 621, "514": 621, "511": 621, "507": 621, "506": 621, "498": 621, "libgfortran": 621, "497": [621, 669, 673, 689], "495": 621, "493": 621, "489": 621, "488": 621, "argentinean": 621, "480": [621, 682], "bdolan44": 621, "dara74k": 621, "gavi": 621, "jacaicedob": 621, "wx": 621, "pfhein": 621, "tamisalex": 621, "469": 621, "468": 621, "467": 621, "luminos": 621, "464": 621, "455": 621, "hclass": 621, "447": 621, "439": 621, "434": 621, "433": 621, "427": 621, "411": 621, "404": 621, "388": 621, "cross_section_ppi": [621, 662], "380": [621, 654, 663, 689], "472": 621, "471": 621, "470": 621, "prf": 621, "460": 621, "get_field_colormap": 621, "446": 621, "444": 621, "example_cfradial_rhi": 621, "441": [621, 647], "417": 621, "struct": 621, "410": 621, "383": 621, "unicod": 621, "382": 621, "gatefit": 621, "372": 621, "465": 621, "refactor": 621, "463": 621, "decor": 621, "416": 621, "392": 621, "radxcovert": 621, "clarifi": 621, "475": 621, "406": 621, "add_field_lik": [621, 628, 638], "397": 621, "391": 621, "376": 621, "370": 621, "corner_to_point": 621, "473": 621, "466": 621, "456": 621, "outstand": 621, "412": 621, "413": 621, "454": [621, 650, 663, 689], "453": 621, "449": 621, "438": 621, "437": 621, "430": 621, "426": 621, "miniconda": [621, 622, 680, 691], "reactiv": 621, "422": 621, "plot_map_one_radar_to_grid": [621, 640, 642, 689], "420": [621, 682], "419": 621, "408": 621, "resilli": 621, "403": 621, "write_mdv_grid": 621, "402": 621, "401": 621, "399": 621, "395": 621, "documen": 621, "add_2d_latlon_axi": 621, "394": 621, "378": 621, "acess": 621, "377": [621, 662, 663, 689], "373": 621, "deeplycloudi": 621, "358": [621, 622, 691], "edge_netcdf": 621, "read_edge_netcdf": 621, "357": [621, 622, 691], "dealias_fourdd": [621, 693], "348": 621, "346": 621, "326": 621, "308": 621, "361": 621, "refl_filter_flag": 621, "map_gate_to_grid": 621, "334": 621, "region_dealia": 621, "327": 621, "libm": 621, "posix": 621, "319": 621, "unnecessari": 621, "inmemoryfil": 621, "365": 621, "359": [621, 622, 691], "354": 621, "_rsl_interfac": 621, "342": 621, "binstar": 621, "337": 621, "320": 621, "317": 621, "362": 621, "plot_grid_three_panel": 621, "353": 621, "confus": 621, "363": 621, "340": 621, "externalis": 621, "339": 621, "333": 621, "332": 621, "47": [621, 672], "324": 621, "323": 621, "271": 621, "binar": 621, "266": 621, "313": 621, "312": 621, "290": 621, "280": 621, "273": 621, "272": 621, "261": 621, "256": [621, 644, 670], "dealias_phase_unwrap": 621, "radarmapdispl": 621, "249": 621, "discontin": 621, "314": 621, "288": 621, "fault": 621, "276": 621, "dealias_unwrap_phas": 621, "275": 621, "corrupt": 621, "269": 621, "283": 621, "inconsist": 621, "274": 621, "254": [621, 669], "fallback": 621, "245": 621, "316": 621, "ngates_vart": 621, "310": 621, "py3": [621, 694], "nexrad_level2": 621, "nexrad_level3": 621, "309": 621, "1byte": 621, "datatyp": 621, "weathergod": 621, "293": 621, "292": 621, "289": 621, "291": 621, "138": 621, "284": 621, "alter": 621, "267": 621, "latlon": 621, "264": 621, "262": 621, "260": 621, "259": 621, "258": 621, "241": [621, 640], "rebuild": 621, "237": 621, "scientif": [622, 680, 691], "e25": [622, 680, 691], "publish": [622, 691], "easiest": [622, 680, 691], "1st": [622, 680, 691], "Then": [622, 624, 680, 690, 691], "termin": [622, 680, 691, 694], "prompt": [622, 680, 691], "mamba": [622, 691], "openradar": [622, 691], "short": [622, 624, 691], "cours": [622, 638, 691], "ev": [622, 691], "pyart_short_cours": [622, 691], "youtub": [622, 691], "watch": [622, 691], "diip": [622, 691], "q3bkzw": [622, 691], "book": [622, 691], "rule": [622, 691], "pep": [622, 691], "0008": [622, 691], "afterward": [622, 691], "neccessari": [622, 691], "brief": [622, 623, 691], "parti": [622, 691], "explain": [622, 691], "_inverse_dist_squar": [622, 691], "_average1d": [622, 691], "seen": [622, 691], "explan": [622, 623, 691], "privat": [622, 691], "rerun": [622, 691], "test_vad": [622, 691], "test_radar": [622, 682, 691], "make_target_radar": [622, 691], "1000": [622, 630, 641, 651, 657, 658, 665, 669, 686, 691], "ones_lik": [622, 691], "z_start": [622, 691], "z_end": [622, 691], "z_count": [622, 691], "vad_height": [622, 691], "vad_spe": [622, 691], "98665725": [622, 691], "94020686": [622, 691], "88107152": [622, 691], "81939374": [622, 691], "75851962": [622, 691], "vad_direct": [622, 691], "84659496": [622, 691], "30240553": [622, 691], "58658589": [622, 691], "81073051": [622, 691], "01353486": [622, 691], "01335138": [622, 691], "06014712": [622, 691], "12039762": [622, 691], "18410404": [622, 691], "24791911": [622, 691], "98663937": [622, 691], "9398407": [622, 691], "87958641": [622, 691], "81587601": [622, 691], "75205693": [622, 691], "assert_almost_equ": [622, 691], "pyarg": [622, 691], "test_cfradi": [622, 691], "cd": [622, 691], "fork": [622, 624, 691], "cartopy_map": [622, 691], "branch_nam": [622, 691], "task": [622, 632, 675, 691], "mind": [622, 638, 691], "simpli": [622, 668, 676, 684, 686, 690, 691, 694], "acronym": [622, 691], "finish": [622, 691, 694], "quotat": [622, 691], "hit": [622, 691], "depth": [622, 680, 688, 691], "acronymn": [622, 691], "gitwash": [622, 691], "development_workflow": [622, 691], "whitespac": [622, 691], "usual": [622, 635, 691], "vim": [622, 691], "fetch": [622, 628, 630, 639, 645, 665, 669, 670, 671, 672, 691], "ff": [622, 691], "sit": [622, 691], "guidanc": [622, 691], "anyth": 624, "creator": 624, "draft": 624, "shortlog": 624, "uplod": 624, "feedstock": 624, "clone": [624, 680, 690], "meta": 624, "yaml": 624, "sha256": 624, "rerend": 624, "smithi": 624, "bot": 624, "awar": 624, "semant": 625, "earlier": 625, "ceas": 625, "Such": 625, "proceed": 625, "futurewarn": 625, "__doc__": [627, 628, 629, 634, 635, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 668, 669], "sgpcsaprsurcmaci7": [627, 683], "20110520": [627, 683], "095101": [627, 683], "pop": 627, "specific_attenu": [627, 666, 670, 682, 687], "corrected_reflectivity_horizont": [627, 641, 646, 666, 676, 678, 682], "calculate_attenu": 627, "131": [627, 668, 669], "132": [627, 668, 669], "ax3": [627, 629, 661, 665, 668, 669, 671], "133": [627, 666, 668, 669], "plot_attenu": [627, 631, 689], "zach": 628, "sherman": [628, 635], "open_radar_data": [628, 630, 639, 645, 665, 669, 670, 671, 672], "sgpkazrgec1": 628, "20190529": 628, "000002": 628, "cdf": [628, 629, 665, 669], "read_kazr": 628, "reflectivity_copol": 628, "calc_cloud_mask": 628, "cloud_mask_radar": 628, "cloud_mask_2": 628, "ll": 628, "reflectivity_cloud_mask": 628, "flag_valu": 628, "no_cloud": 628, "999999": 628, "int16": 628, "850": [628, 631, 689], "plot_cloud_mask": [628, 631, 689], "ial": 629, "095636": [629, 684], "sonde_fil": 629, "sgpinterpolatedsondec1": 629, "c1": [629, 671, 687], "20110510": 629, "000000": 629, "dt": 629, "read_arm_sonde_vap": 629, "exclude_transit": [629, 640, 641, 646, 647, 667], "exclude_invalid": [629, 665], "exclude_outsid": [629, 647, 665], "dealias_data": 629, "sixth": 629, "221": [629, 650], "223": [629, 650, 659, 663, 689], "ax4": 629, "224": [629, 650], "935": [629, 631, 689], "plot_dealia": [629, 631, 689], "birdbath": 630, "spheric": 630, "sgpxsaprcfrvpti4": 630, "20200205": 630, "100827": 630, "cross_correlation_ratio_hv": [630, 688], "exclude_abov": [630, 641, 646, 676, 684], "calc_zdr_offset": 630, "2f": 630, "profile_zdr": 630, "set_ylabel": [630, 658, 665, 671, 672], "set_xlabel": [630, 665, 672], "profile_reflect": 630, "profile_cross_correlation_ratio_hv": 630, "plot_zdr_check": [630, 631, 689], "074": 631, "mem": [631, 636, 642, 663, 673, 674, 679, 689], "examples_python": 632, "examples_jupyt": 632, "grover": [634, 638, 644, 645, 646, 652, 660, 666, 667, 676, 677, 678], "filepath": [634, 635], "organ": 634, "radarsit": [634, 635], "_v06": 634, "khgx": 634, "aws_nexrad_level2_fil": [634, 635], "khgx20220322_120125_v06": 634, "relect": 634, "z_": [634, 638, 648, 671], "v_": 634, "noq": 634, "level3": 634, "aws_nexrad_level3_velocity_fil": 634, "hgx_n0u_2022_03_22_12_01_25": 634, "aws_nexrad_level3_reflectivity_fil": 634, "hgx_n0q_2022_03_22_12_01_25": 634, "read_nexrad_level3": 634, "radar_level3_veloc": 634, "radar_level3_reflect": 634, "reflectivity_displai": 634, "velocity_displai": 634, "166": [634, 636, 689], "plot_nexrad_data_aw": [634, 636, 689], "zachari": 635, "zsherman": [635, 694], "tendenc": 635, "gz": 635, "handford": 635, "ca": 635, "khnx": 635, "0203": 635, "v06": 635, "khnx20060724_020338": 635, "clearli": 635, "lucki": 635, "31417": 635, "63111": 635, "plote": [635, 654], "central_latitud": [635, 654, 668, 669, 683], "central_longitud": [635, 654, 668, 669, 683], "plot_older_nexrad_data_aw": [635, 636, 689], "666": 636, "xsapr": [638, 641, 646], "xsapr_sw_fil": [638, 641, 646], "swx_20120520_0641": [638, 641, 644, 646, 648, 652, 662, 666, 667, 668, 669, 676, 677, 678, 693], "xsapr_se_fil": [638, 641, 646], "sex_20120520_0641": [638, 641, 646], "radar_sw": [638, 641, 646], "radar_s": [638, 641, 646], "southwestern": 638, "gmapper": 638, "radar_sw_mapped_to_radar_s": 638, "disp1": 638, "98": [638, 666, 672, 687], "97": [638, 641, 646, 649, 661, 666, 668, 669, 682], "disp2": 638, "remap": 638, "eyebal": 638, "fortun": 638, "reflectivity_se_radar": 638, "reflectivity_sw_radar": 638, "reflectivity_differ": 638, "reflectivity_bia": 638, "southwest": 638, "xspar": 638, "southeast": 638, "neccessarili": 638, "incl_gat": 638, "refl_s": 638, "refl_sw": 638, "values_without_mask": 638, "hist": [638, 676, 684], "histogram2d": 638, "masked_wher": [638, 665, 669, 687], "log_": 638, "031": [638, 642, 689], "plot_compare_two_radars_gatemapp": [638, 642, 689], "solut": 639, "arguabl": 639, "overlook": 639, "neglig": 639, "ze": 639, "2nd": 639, "4th": 639, "purpl": 639, "truncat": 639, "ok": 639, "israel": 639, "silber": 639, "file_nam": 639, "example_plot_ppi_single_sweep": 639, "processed_field": 639, "reflectivity_at_cor": 639, "radar_obj": 639, "nnow": 639, "ax_ind": 639, "sweep_obj": 639, "fig2": 639, "1601": 639, "40000": [639, 641, 646, 654, 686], "set_titl": [639, 644, 665, 668, 669], "nuse": 639, "056": [639, 642, 689], "plot_grid_single_sweep_ppi": [639, 642, 689], "123000": 640, "597": [640, 642, 689], "xsarp": [641, 655, 656], "gatefilter_s": [641, 646], "gatefilter_sw": [641, 646], "201": [641, 668, 669, 686], "57861": [641, 646], "363611": [641, 646], "plot_map_two_radars_to_grid": [641, 642, 689], "347": 642, "helper": 644, "vstack": 644, "plot_color_gradi": 644, "cmap_categori": 644, "cmap_list": 644, "figh": 644, "99": 644, "cmap_nam": 644, "pyart_": 644, "va": 644, "transax": 644, "spine": 644, "set_axis_off": 644, "perceptu": [644, 649], "diverg": 644, "meaning": 644, "terrain": 644, "spectral_r": 644, "rememb": 644, "front": 644, "plot_choose_a_colormap": [644, 663, 689], "sgpkasacrcrrasterc1": 645, "20130419": 645, "012153": 645, "478": 645, "plot_cr_rast": 645, "003": [645, 663, 670, 689], "plot_corner_reflector": [645, 663, 689], "181": 646, "blue": [646, 657, 658], "plot_cross_sect": [646, 663, 689], "syed44": 647, "purdu": 647, "grid_fil": 647, "20110520100000_nexrad_grid": [647, 661], "read_grid": [647, 661, 665, 669], "gdisplai": 647, "plot_maxcappi": 647, "download_nexrad": 647, "local_d": 647, "utc_dat": 647, "phwa": 647, "nexrad_arch": 647, "3d": 647, "max_rang": 647, "ceil": 647, "font_manag": 647, "findfont": 647, "font": 647, "famili": 647, "courier": 647, "plot_max_cappi": [647, 663, 689], "colobar": 648, "joe": 648, "brien": 648, "obrienj": 648, "perfect": 648, "coord": 648, "gca": 648, "set_major_loc": 648, "nullloc": 648, "axsb": 648, "ppi_map": 648, "set_tick": [648, 671], "058": [648, 657, 663, 689], "plot_modify_colorbar": [648, 663, 689], "promin": [649, 669], "deemphas": 649, "depict": [649, 665], "ultim": 649, "misinterpret": 649, "lmtomkin": [649, 665, 668, 669], "ncsu": [649, 665, 668, 669], "nexrad_fil": [649, 668, 669], "kbgm": 649, "kbgm20200207_132642_v06": 649, "image_mute_radar": [649, 668, 669], "magma_cmap": 649, "magma_r": [649, 665, 668, 669], "grays_cmap": [649, 669], "gray_r": [649, 669], "nonmuted_cmap": 649, "linearsegmentedcolormap": [649, 668, 669], "from_list": [649, 668, 669], "muted_cmap": [649, 669], "nonmuted_reflect": [649, 668], "muted_reflect": [649, 669], "set_aspect": [649, 665, 668, 669, 670], "plot_nexrad_image_muted_reflect": [649, 663, 689], "katx20130717_195021_v06": [650, 688], "plot_nexrad_multiple_mo": [650, 663, 689], "level2_katx_20130717_1950": 651, "ar2v": 651, "plot_nexrad_reflect": [651, 663, 689], "plot_cross_hair": 652, "364": [652, 663, 689], "plot_ppi_cfradi": [652, 663, 689], "jason": [654, 661], "hemeding": [654, 661], "nsaxsaprppic1": 654, "20140201": 654, "184802": 654, "157": [654, 666, 673, 689], "156": 654, "71": 654, "158": 654, "72": 654, "40km": 654, "plot_line_xi": 654, "20000": [654, 686], "200000": [654, 668, 669], "plot_point": 654, "plot_ppi_with_r": [654, 663, 689], "instrument_nam": [655, 656, 688], "agl": 655, "fac": 655, "nplot": [655, 656, 660], "snum": 655, "hsrhi": [655, 656], "3f": [655, 656], "time_start": 655, "num2dat": 655, "only_use_cftime_datetim": 655, "only_use_python_datetim": 655, "figure_titl": 655, "isoformat": 655, "plot_rhi_cfradi": [655, 663, 689], "872": [656, 663, 689], "differnenti": 657, "cori": [657, 658], "weber": [657, 658], "cweber": [657, 658], "220629": 657, "matplolib": 657, "visabl": 657, "flow": 657, "paramt": 657, "compens": 657, "00015": 657, "veri": [657, 665, 668, 669], "moir": 657, "001": 657, "get_start": [657, 658], "get_end": [657, 658], "blur": 657, "nice": [657, 690], "arbirarli": 657, "gaussian_filt": [657, 658], "ang": [657, 658], "levels_rain": 657, "levels_ic": 657, "contours_ic": 657, "contours_rain": 657, "fmt": [657, 658], "0000": [657, 658], "plot_rhi_contours_differential_reflect": [657, 663, 689], "spyi": 658, "034142": 658, "ramp": 658, "pyart_budrd18": 658, "coutour": 658, "major": 658, "axhlin": [658, 665], "axvlin": 658, "00b4ff": 658, "ff6800": 658, "cp": 658, "plot_rhi_data_overlai": [658, 663, 689], "110041": 659, "plot_rhi_mdv": [659, 663, 689], "fields_to_plot": 660, "plot_num": 660, "u00b0": 660, "plot_rhi_two_panel": [660, 663, 689], "plot_crosshair": 661, "plot_longitude_slic": 661, "plot_latitude_slic": [661, 686], "229": [661, 663, 689], "plot_three_panel_gridmapdisplai": [661, 663, 689], "225": 662, "xsect": 662, "plot_xsect": [662, 663, 689], "072": 663, "essenti": 665, "distinguish": 665, "insuffici": 665, "tenth": 665, "aggress": 665, "noisi": 665, "ref_data": 665, "ref_data_mask": 665, "masked_outsid": 665, "create_cfad": 665, "freq_norm_mask": 665, "masked_less_equ": [665, 669], "cfad_pm": 665, "plasma": 665, "8km": 665, "freq_norm2": 665, "freq_norm0": 665, "freq_norm2_mask": 665, "freq_norm0_mask": 665, "chart": 665, "14km": 665, "12km": 665, "swath": 665, "velocity_dealia": 665, "rdbu_r": 665, "bimod": 665, "reproduc": 665, "2c": 665, "demonstr": [665, 680], "ddop": 665, "910815": 665, "213931": 665, "altitude_data": 665, "field_data": 665, "maxdz": [665, 669], "vvel_data": 665, "w_wind": 665, "vvel_mask": 665, "masked_invalid": [665, 668], "field_data_mask": 665, "cont": 665, "plot_cfad": [665, 673, 689], "maxwel": [666, 667], "site_lon": 666, "73": 666, "site_lat": 666, "latitdu": 666, "pathcollect": 666, "0x7f65d9130ef0": 666, "get_field_loc": 666, "2kb": 666, "176b": 666, "350": 666, "818e": 666, "recalculated_diff_phas": [666, 682], "2778": 666, "unf_dp_phase_shift": [666, 682], "88b": 666, "145": [666, 669], "144": [666, 669], "diff_reflect": [666, 682], "8b": 666, "distance_from_radar": 666, "233": 666, "545": 666, "latitude_of_loc": 666, "longitude_of_loc": 666, "line2d": 666, "0x7f65d944a7b0": 666, "plot_column_subset": [666, 673, 689], "compz": 667, "composite_reflect": 667, "composite_displai": 667, "208": [667, 673, 689], "plot_composite_reflect": [667, 673, 689], "classifc": 668, "summer": [668, 669], "ian": [668, 669], "footprint": 668, "yield": 668, "smoother": 668, "curv": 668, "plot_convstrat_schem": 668, "pick": 668, "radii": 668, "dilat": 668, "conv_strat_yut": 668, "convsf_mask": 668, "masked_equ": [668, 669], "feature_detect": [668, 669], "convsf": [668, 669], "magma_r_cmap": [668, 669], "ref_cmap": [668, 669], "albersequalarea": [668, 669], "convsf_und": 668, "convsf_ov": 668, "uncertainti": [668, 669], "underest": [668, 669], "feature_und": [668, 669], "overest": [668, 669], "feature_ov": [668, 669], "ktbw": [668, 669], "ktbw20220928_190142_v06": [668, 669], "rasumussen": [668, 669], "2003": [668, 669], "reflecit": 668, "kokx": [668, 669], "kokx20210207_161413_v06": [668, 669], "nonmuted_ref": 668, "nonmuted_ref_linear": 668, "mm6": 668, "m3": 668, "snow_rat": [668, 669], "snow_rate_dict": 668, "40500": 668, "034": [668, 669], "ccotd": [668, 669], "rasmussen": [668, 669], "dixon": [668, 669, 680], "vasiloff": [668, 669], "hage": [668, 669], "knight": [668, 669], "vivekanandan": [668, 669], "xu": [668, 669], "nowcast": [668, 669], "accumul": [668, 669], "042": [668, 669], "3c0020": [668, 669], "snuart": [668, 669], "458": [668, 673, 689], "plot_convective_stratiform": [668, 673, 689], "heavili": 669, "customiz": 669, "manuscript": 669, "feature_mask": 669, "19990811": 669, "221202": 669, "convsf_cmap": 669, "140": 669, "253": 669, "231": 669, "csb": 669, "csb_mask": 669, "csl": 669, "convsf_lo": 669, "csl_mask": 669, "csh": 669, "convsf_hi": 669, "csh_mask": 669, "rpm": 669, "csbpm": 669, "set_yticklabel": [669, 671], "lo": 669, "cslpm": 669, "cshpm": 669, "csb_lt": 669, "csb_lt_mask": 669, "csu_lt": 669, "csu_lt_mask": 669, "cso_lt": 669, "cso_lt_mask": 669, "csupm": 669, "csopm": 669, "ztor": 669, "ref_field_ov": 669, "ref_field_und": 669, "2db": 669, "_overest": 669, "_underest": 669, "reflectivity_ov": 669, "reflectivity_und": 669, "snow_rate_ov": 669, "snow_rate_und": 669, "feature_estimate_dict": 669, "bpm": 669, "upm": 669, "opm": 669, "distinct": 669, "scalar_features_mask": 669, "cosine_features_mask": 669, "isol": 669, "faint_featur": 669, "faint_features_mask": 669, "features_faint_strong": 669, "features_faint_strong_mask": 669, "new_dict": 669, "comment_1": 669, "faint_strong_cmap": 669, "faint_strong": 669, "238": 669, "93": 669, "66": 669, "quickli": 669, "quick_image_mut": 669, "muted_ref": 669, "nonmuted_field": 669, "muted_field": 669, "snow_rate_nonmut": 669, "snow_rate_mut": 669, "features_nonmut": 669, "features_mut": 669, "srpm": 669, "srpmm": 669, "csbpmm": 669, "plot_feature_detect": [669, 673, 689], "daniel": [670, 672], "wolfensberg": [670, 672], "mll2217907250u": 670, "preinterpol": 670, "20220628072500_savevol_cosmo_lookup_temp": 670, "nwp_temp": 670, "calculate_attenuation_zphi": 670, "uncorrected_differential_phas": 670, "pia": 670, "pida": 670, "corrected_reflect": [670, 671, 687], "corrected_differential_reflect": [670, 671, 687], "kdp_maesaka": 670, "specific_differential_phas": [670, 687], "hydroclass_semisupervis": [670, 671], "uncorrected_cross_correlation_ratio": 670, "radar_echo_classif": 670, "boundarynorm": 670, "114": [670, 673, 689], "plot_hydrometeor": [670, 673, 689], "gucxprecipradarcmacppis2": 671, "025840": 671, "pyart_carbone42": 671, "corrected_specific_diff_phas": [671, 687], "hydromet_class": 671, "filtered_corrected_specific_diff_phas": [671, 687], "sounding_temperatur": [671, 687], "hydro_classif": 671, "2e9": 671, "pipelin": 671, "hid_color": 671, "lightblu": 671, "mediumblu": 671, "darkorang": 671, "lightpink": 671, "darkgrai": 671, "lime": 671, "yellow": 671, "cmaphid": 671, "listedcolormap": 671, "cmapmeth": 671, "cmapmeth_trop": 671, "adjust_fhc_colorbar_for_pyart": 671, "hd": 671, "adjust_meth_colorbar_for_pyart": 671, "zrain": 671, "z_all": 671, "z_c": 671, "two_panel_plot": 671, "var1": 671, "vmin1": 671, "vmax1": 671, "cmap1": 671, "rdylbu_r": 671, "units1": 671, "var2": 671, "vmin2": 671, "vmax2": 671, "cmap2": 671, "units2": 671, "return_flag": 671, "lim": 671, "097": [671, 673, 689], "plot_hydrometeor_class_x_band": [671, 673, 689], "2682": 672, "5470354519784": 672, "447328651323915": 672, "5273": 672, "055615736172": 672, "7533807586878538": 672, "7815": 672, "51210340485": 672, "341798234730959": 672, "10403": 672, "798749463633": 672, "977668723091483": 672, "14259": 672, "735154148191": 672, "905980195850134": 672, "18533": 672, "70608163625": 672, "262251073494554": 672, "22800": [672, 682], "97541932203": 672, "613871516659856": 672, "27060": [672, 682], "25919727981": 672, "959520922973752": 672, "31310": 672, "269606200978": 672, "29787217825651": 672, "35549": 672, "73140401952": 672, "62760841473937": 672, "39777": 672, "36820153147": 672, "94740904122591": 672, "43991": 672, "90973467566": 672, "25595719181001": 672, "50263": 672, "42219179496": 672, "671291364356875": 672, "58621": 672, "52730140835": 672, "22838316485286": 672, "71003": 672, "14627731778": 672, "68": 672, "92013945430517": 672, "87118": 672, "5253265705": 672, "4666496720165": 672, "106741": 672, "22752280161": 672, "65626102685928": 672, "125477": 672, "00644101389": 672, "124": 672, "97631322406232": 672, "143293": 672, "15816160105": 672, "38701202347875": 672, "160000": 672, "28993562795": 672, "68618156574667": 672, "mla2119412050u": 672, "zlevel": 672, "5000": [672, 686], "u_allsweep": 672, "v_allsweep": 672, "idx": 672, "radar_1sweep": 672, "vad_brown": 672, "u_avg": 672, "nanmean": 672, "v_avg": 672, "sharei": 672, "462": [672, 673, 689], "plot_vad": [672, 673, 689], "000": 674, "xd": [676, 677, 678, 693], "open_cfradial1_datatre": [676, 677, 678, 693], "to_radar": [676, 677, 678, 693], "sweep_0": 676, "vel_textur": [676, 684], "velocity_textur": [676, 684, 687], "At": [676, 684], "velocity_dealias": [676, 684], "plot_dealias_xradar": [676, 679, 689], "101": [677, 693], "10_000": [677, 693], "50_000": [677, 693], "plot_grid_xradar": [677, 679, 689], "649": [678, 679, 689], "plot_xradar": [678, 679, 689], "070": 679, "conceptu": 680, "projectpythia": 680, "understand": 680, "maik": 680, "heistermann": 680, "bam": 680, "kellei": 680, "peura": 680, "pfaff": 680, "wolff": 680, "emerg": 680, "bull": 680, "amer": 680, "soc": 680, "117": 680, "128": 680, "00240": 680, "sophist": 680, "tutori": 680, "materi": 680, "erad": 680, "asr": 680, "asm": 680, "Or": 680, "pyart_env": [680, 683, 686, 694], "wish": 680, "unreleas": 680, "charg": 680, "resourc": [680, 690], "lassen": 680, "radtec": 680, "rsl_path": [680, 690], "usr": 680, "wrapper": 680, "fastest": 680, "cbc": 680, "glpk": 680, "coincbc": [680, 690, 694], "coin_install_dir": [680, 690, 694], "ask": [680, 694], "hypothet": 682, "dict_kei": [682, 687], "rain_rate_a": [682, 687], "volume_numb": 682, "platform_typ": 682, "instrument_typ": 682, "primary_axi": 682, "make_empty_ppi_radar": 682, "59416667": 682, "isn": 682, "240": 682, "660": 682, "720": 682, "780": 682, "960": 682, "1260": 682, "1560": 682, "1620": 682, "1680": 682, "1740": 682, "1860": 682, "1920": 682, "1980": 682, "2040": 682, "2100": 682, "2160": 682, "2220": 682, "2280": 682, "2340": 682, "2400": 682, "2460": 682, "2520": 682, "2580": 682, "2640": 682, "2700": 682, "2760": 682, "2820": 682, "2880": 682, "2940": 682, "3060": 682, "3120": 682, "3180": 682, "3240": 682, "3300": 682, "3360": 682, "3420": 682, "3480": 682, "3540": 682, "3600": 682, "3660": 682, "3720": 682, "3780": 682, "3840": 682, "3900": 682, "3960": 682, "4020": 682, "4080": 682, "4140": 682, "4200": 682, "4260": 682, "4320": 682, "4380": 682, "4440": 682, "4500": 682, "4560": 682, "4620": 682, "4680": 682, "4740": 682, "4800": 682, "4860": 682, "4920": 682, "4980": 682, "5040": 682, "5100": 682, "5160": 682, "5220": 682, "5280": 682, "5340": 682, "5400": 682, "5460": 682, "5520": 682, "5580": 682, "5640": 682, "5700": 682, "5760": 682, "5820": 682, "5880": 682, "5940": 682, "6000": [682, 686], "6060": 682, "6120": 682, "6180": 682, "6240": 682, "6300": 682, "6360": 682, "6420": 682, "6480": 682, "6540": 682, "6600": 682, "6660": 682, "6720": 682, "6780": 682, "6840": 682, "6900": 682, "6960": 682, "7020": 682, "7080": 682, "7140": 682, "7200": [682, 688], "7260": 682, "7320": 682, "7380": 682, "7440": 682, "7560": 682, "7620": 682, "7680": 682, "7740": 682, "7800": 682, "7860": 682, "7920": 682, "7980": 682, "8040": 682, "8100": 682, "8160": 682, "8220": 682, "8280": 682, "8340": 682, "8400": 682, "8460": 682, "8520": 682, "8580": 682, "8640": 682, "8700": 682, "8760": 682, "8820": 682, "8880": 682, "8940": 682, "9000": [682, 686], "9060": 682, "9120": 682, "9180": 682, "9240": 682, "9300": 682, "9360": 682, "9420": 682, "9480": 682, "9540": 682, "9600": 682, "9660": 682, "9720": 682, "9780": 682, "9840": 682, "9900": 682, "9960": 682, "10020": 682, "10080": 682, "10140": 682, "10200": 682, "10260": 682, "10320": 682, "10380": 682, "10440": 682, "10500": 682, "10560": 682, "10620": 682, "10680": 682, "10740": 682, "10800": 682, "10860": 682, "10920": 682, "10980": 682, "11040": 682, "11100": 682, "11160": 682, "11220": 682, "11280": 682, "11340": 682, "11400": 682, "11460": 682, "11520": 682, "11580": 682, "11640": 682, "11700": 682, "11760": 682, "11820": 682, "11880": 682, "11940": 682, "12060": 682, "12120": 682, "12180": 682, "12240": 682, "12300": 682, "12360": 682, "12420": 682, "12480": 682, "12540": 682, "12600": 682, "12660": 682, "12720": 682, "12780": 682, "12840": 682, "12900": 682, "12960": 682, "13020": 682, "13080": 682, "13140": 682, "13200": 682, "13260": 682, "13320": 682, "13380": 682, "13440": 682, "13500": 682, "13560": 682, "13620": 682, "13680": 682, "13740": 682, "13800": 682, "13860": 682, "13920": 682, "13980": 682, "14040": 682, "14100": 682, "14160": 682, "14220": 682, "14280": 682, "14340": 682, "14400": 682, "14460": 682, "14520": 682, "14580": 682, "14640": 682, "14700": 682, "14760": 682, "14820": 682, "14880": 682, "14940": 682, "15060": 682, "15120": 682, "15180": 682, "15240": 682, "15300": 682, "15360": 682, "15420": 682, "15480": 682, "15540": 682, "15600": 682, "15660": 682, "15720": 682, "15780": 682, "15840": 682, "15900": 682, "15960": 682, "16020": 682, "16080": 682, "16140": 682, "16200": 682, "16260": 682, "16320": 682, "16380": 682, "16440": 682, "16500": 682, "16560": 682, "16620": 682, "16680": 682, "16740": 682, "16800": 682, "16860": 682, "16920": 682, "16980": 682, "17040": 682, "17100": 682, "17160": 682, "17220": 682, "17280": 682, "17340": 682, "17400": 682, "17460": 682, "17520": 682, "17580": 682, "17640": 682, "17700": 682, "17760": 682, "17820": 682, "17880": 682, "17940": 682, "18000": [682, 686], "18060": 682, "18120": 682, "18180": 682, "18240": 682, "18300": 682, "18360": 682, "18420": 682, "18480": 682, "18540": 682, "18600": 682, "18660": 682, "18720": 682, "18780": 682, "18840": 682, "18900": 682, "18960": 682, "19020": 682, "19080": 682, "19140": 682, "19200": 682, "19260": 682, "19320": 682, "19380": 682, "19440": 682, "19500": 682, "19560": 682, "19620": 682, "19680": 682, "19740": 682, "19800": 682, "19860": 682, "19920": 682, "19980": 682, "20040": 682, "20100": 682, "20160": 682, "20220": 682, "20280": 682, "20340": 682, "20400": 682, "20460": 682, "20520": 682, "20580": 682, "20640": 682, "20700": 682, "20760": 682, "20820": 682, "20880": 682, "20940": 682, "21000": [682, 686], "21060": 682, "21120": 682, "21180": 682, "21240": 682, "21300": 682, "21360": 682, "21420": 682, "21480": 682, "21540": 682, "21600": 682, "21660": 682, "21720": 682, "21780": 682, "21840": 682, "21900": 682, "21960": 682, "22020": 682, "22080": 682, "22140": 682, "22200": 682, "22260": 682, "22320": 682, "22380": 682, "22440": 682, "22500": 682, "22560": 682, "22620": 682, "22680": 682, "22740": 682, "22860": 682, "22920": 682, "22980": 682, "23040": 682, "23100": 682, "23160": 682, "23220": 682, "23280": 682, "23340": 682, "23400": 682, "23460": 682, "23520": 682, "23580": 682, "23640": 682, "23700": 682, "23760": 682, "23820": 682, "23880": 682, "23940": 682, "24000": [682, 686], "24060": 682, "24120": 682, "24180": 682, "24240": 682, "24300": 682, "24360": 682, "24420": 682, "24480": 682, "24540": 682, "24600": 682, "24660": 682, "24720": 682, "24780": 682, "24840": 682, "24900": 682, "24960": 682, "25020": 682, "25080": 682, "25140": 682, "25200": 682, "25260": 682, "25320": 682, "25380": 682, "25440": 682, "25500": 682, "25560": 682, "25620": 682, "25680": 682, "25740": 682, "25800": 682, "25860": 682, "25920": 682, "25980": 682, "26040": 682, "26100": 682, "26160": 682, "26220": 682, "26280": 682, "26340": 682, "26400": 682, "26460": 682, "26520": 682, "26580": 682, "26640": 682, "26700": 682, "26760": 682, "26820": 682, "26880": 682, "26940": 682, "27000": [682, 686], "27120": 682, "27180": 682, "27240": 682, "27300": 682, "27360": 682, "27420": 682, "27480": 682, "27540": 682, "27600": 682, "27660": 682, "27720": 682, "27780": 682, "27840": 682, "27900": 682, "27960": 682, "28020": 682, "28080": 682, "28140": 682, "28200": 682, "28260": 682, "28320": 682, "28380": 682, "28440": 682, "28500": 682, "28560": 682, "28620": 682, "28680": 682, "28740": 682, "28800": 682, "28860": 682, "28920": 682, "28980": 682, "29040": 682, "29100": 682, "29160": 682, "29220": 682, "29280": 682, "29340": 682, "29400": 682, "29460": 682, "29520": 682, "29580": 682, "29640": 682, "29700": 682, "29760": 682, "29820": 682, "29880": 682, "29940": 682, "30000": [682, 686], "30060": 682, "30120": 682, "30180": 682, "30240": 682, "30300": 682, "30360": 682, "30420": 682, "30480": 682, "30540": 682, "30600": 682, "30660": 682, "30720": 682, "30780": 682, "30840": 682, "30900": 682, "30960": 682, "31020": 682, "31080": 682, "31140": 682, "31200": 682, "31260": 682, "31320": 682, "31380": 682, "31440": 682, "31500": 682, "31560": 682, "31620": 682, "31680": 682, "31740": 682, "31800": 682, "31860": 682, "31920": 682, "31980": 682, "32040": 682, "32100": 682, "32160": 682, "32220": 682, "32280": 682, "32340": 682, "32400": 682, "32460": 682, "32520": 682, "32580": 682, "32640": 682, "32700": 682, "32760": 682, "32820": 682, "32880": 682, "32940": 682, "33000": [682, 686], "33060": 682, "33120": 682, "33180": 682, "33240": 682, "33300": 682, "33360": 682, "33420": 682, "33480": 682, "33540": 682, "33600": 682, "33660": 682, "33720": 682, "33780": 682, "33840": 682, "33900": 682, "33960": 682, "34020": 682, "34080": 682, "34140": 682, "34200": 682, "34260": 682, "34320": 682, "34380": 682, "34440": 682, "34500": 682, "34560": 682, "34620": 682, "34680": 682, "34740": 682, "34800": 682, "34860": 682, "34920": 682, "34980": 682, "35040": 682, "35100": 682, "35160": 682, "35220": 682, "35280": 682, "35340": 682, "35400": 682, "35460": 682, "35520": 682, "35580": 682, "35640": 682, "35700": 682, "35760": 682, "35820": 682, "35880": 682, "35940": 682, "36000": [682, 686], "36060": 682, "36120": 682, "36180": 682, "36240": 682, "36300": 682, "36360": 682, "36420": 682, "36480": 682, "36540": 682, "36600": 682, "36660": 682, "36720": 682, "36780": 682, "36840": 682, "36900": 682, "36960": 682, "37020": 682, "37080": 682, "37140": 682, "37200": 682, "37260": 682, "37320": 682, "37380": 682, "37440": 682, "37500": 682, "37560": 682, "37620": 682, "37680": 682, "37740": 682, "37800": 682, "37860": 682, "37920": 682, "37980": 682, "38040": 682, "38100": 682, "38160": 682, "38220": 682, "38280": 682, "38340": 682, "38400": 682, "38460": 682, "38520": 682, "38580": 682, "38640": 682, "38700": 682, "38760": 682, "38820": 682, "38880": 682, "38940": 682, "39000": [682, 686], "39060": 682, "39120": 682, "39180": 682, "39240": 682, "39300": 682, "39360": 682, "39420": 682, "39480": 682, "39540": 682, "39600": 682, "39660": 682, "39720": 682, "39780": 682, "39840": 682, "39900": 682, "39960": 682, "59416776": 682, "59416886": 682, "59489769": 682, "59489879": 682, "5948999": 682, "59415662": 682, "59414657": 682, "5874659": 682, "58745576": 682, "58744563": 682, "59414621": 682, "59412575": 682, "5805231": 682, "58050246": 682, "58048182": 682, "59419881": 682, "59423095": 682, "61560159": 682, "61563401": 682, "61566644": 682, "59418877": 682, "59421087": 682, "6089062": 682, "6089285": 682, "60895079": 682, "59417836": 682, "59419005": 682, "60196382": 682, "60197561": 682, "60198741": 682, "get_metadata": 682, "ref_dict": 682, "reflecitivity_horizont": 682, "21875": 682, "34375": 682, "0078125": 682, "2109375": 682, "1171875": 682, "59375": 682, "421875": 682, "5625": 682, "7109375": 682, "609375": 682, "5078125": 682, "3828125": 682, "6875": 682, "328125": 682, "3203125": 682, "859375": 682, "6484375": 682, "8515625": 682, "9375": [682, 688], "0234375": 682, "6328125": 682, "2890625": 682, "546875": 682, "578125": 682, "6796875": 682, "ref_gt_0": 683, "mask_dict": 683, "reflectivity_mask": 683, "coolwarm": 683, "sherm": [683, 686], "782": [683, 686], "matplotlibdeprecationwarn": [683, 686], "position": [683, 686], "829": [683, 686], "write_cfradi": 683, "new_radar": 683, "2pi": 684, "wave": 684, "3pi": 684, "erron": 684, "phenomena": [684, 688], "maximium": 684, "unambi": 684, "preprocess": 684, "thankfulli": [684, 686], "surround": [684, 686], "presenc": 684, "524973": 684, "vleociti": 684, "realist": 684, "characterist": 686, "100000": 686, "gates_to_grid": 686, "99000": 686, "98000": 686, "97000": 686, "96000": 686, "95000": 686, "94000": 686, "93000": 686, "92000": 686, "91000": 686, "90000": 686, "89000": 686, "88000": 686, "87000": 686, "86000": 686, "85000": 686, "84000": 686, "83000": 686, "82000": 686, "81000": 686, "80000": 686, "79000": 686, "78000": 686, "77000": 686, "76000": 686, "75000": 686, "74000": 686, "73000": 686, "72000": 686, "71000": 686, "70000": 686, "69000": 686, "68000": 686, "67000": 686, "66000": 686, "65000": 686, "64000": 686, "63000": 686, "62000": 686, "61000": 686, "59000": 686, "58000": 686, "57000": 686, "56000": 686, "55000": 686, "54000": 686, "53000": 686, "52000": 686, "51000": 686, "49000": 686, "48000": 686, "47000": 686, "46000": 686, "45000": 686, "44000": 686, "43000": 686, "42000": 686, "41000": 686, "38000": 686, "37000": 686, "35000": 686, "34000": 686, "32000": 686, "31000": 686, "29000": 686, "28000": 686, "26000": 686, "23000": 686, "22000": 686, "19000": 686, "16000": 686, "14000": 686, "13000": 686, "8000": 686, "longitudn": 686, "latitudn": 686, "suffer": 686, "artifici": 686, "feather": 686, "grid_bett": 686, "1750": 686, "sgpxsaprcmacsuri5": 687, "20171004": 687, "203018": 687, "total_pow": 687, "xsapr_clutt": 687, "signal_to_noise_ratio": 687, "unfolded_differential_phas": 687, "corrected_differential_phas": 687, "filtered_corrected_differential_phas": 687, "path_integrated_attenu": 687, "specific_differential_attenu": 687, "path_integrated_differential_attenu": 687, "nonhydrometeor": 687, "exclude_equ": 687, "refl_arrai": 687, "reflectivity_w_mask": 687, "iter_slic": [687, 688], "9344453454202706": 687, "620691732853737": 687, "3756584054113996": 687, "597935968662154": 687, "696735014111216": 687, "061894569912447": 687, "721673265240488": 687, "086695918593689": 687, "33930700509078": 687, "599363169483158": 687, "836875745223637": 687, "051601529570966": 687, "22435547210836": 687, "378109469982695": 687, "553820234067336": 687, "648943841665002": 687, "837593740986444": 687, "049614721040282": 687, "331202567459613": 687, "585432697375357": 687, "87002341270722": 687, "993012637722325": 687, "061966001642219": 687, "122799449619672": 687, "861035552720102": 687, "74608994279257": 687, "148801770281325": 687, "70860719727862": 687, "989513966551444": 687, "188644935344827": 687, "89301878240611": 687, "172644371021923": 687, "79879842243138": 687, "912806090219976": 687, "766281467013889": 687, "920522471877334": 687, "898600907318164": 687, "971026055481874": 687, "110503947133682": 687, "094456418731509": 687, "0822160050675675": 687, "036430544969512": 687, "259332430219459": 687, "2438254054588604": 687, "473482666015625": 687, "574283685503023": 687, "866719139946832": 687, "771468742643597": 687, "beam_azimuth_angl": 688, "azimuth_angle_from_true_north": 688, "radial_azimuth_coordin": 688, "beam_elevation_angl": 688, "elevation_angle_from_horizontal_plan": 688, "radial_elevation_coordin": 688, "1832": 688, "log_differential_reflectivity_hv": 688, "875": 688, "differential_phase_hv": 688, "equivalent_reflectivity_factor": 688, "correlation_ratio": 688, "meters_per_second": 688, "doppler_spectrum_width": 688, "radial_velocity_of_scatterers_away_from_instru": 688, "target_fixed_angl": 688, "degrees_north": 688, "degrees_east": 688, "projection_range_coordin": 688, "range_to_measurement_volum": 688, "radial_range_coordin": 688, "spacing_is_const": 688, "meters_to_center_of_first_g": 688, "2125": 688, "meters_between_g": 688, "s20": 688, "unitless": 688, "coplan": 688, "vertical_point": 688, "idl": 688, "azimuth_surveil": 688, "elevation_surveil": 688, "sunscan": 688, "manual_ppi": 688, "manual_rhi": 688, "17t19": 688, "21z": 688, "time_in_seconds_since_volume_start": 688, "calendar": 688, "gregorian": 688, "katx": 688, "original_contain": 688, "vcp_pattern": 688, "7470703": 688, "7196045": 688, "6893921": 688, "511719": 688, "get_slic": 688, "sweep_1": 688, "52734375": 688, "indici": 688, "slice_indic": 688, "9066728410400056": 688, "478547577741713": 688, "587792083929423": 688, "871031288639269": 688, "971692217963673": 688, "830616390843327": 688, "108188248095756": 688, "483419908190385": 688, "88976917057903": 688, "852766685681688": 688, "410455582269897": 688, "66444787446138": 688, "997862391449566": 688, "172098402018502": 688, "489752513534416": 688, "712565619531706": 688, "commonli": 688, "022": 689, "9x": 690, "10x": 690, "11x": 690, "But": 690, "bash": 690, "pythonpath": 690, "pth": 690, "build_ext": 690, "segfault": 690, "Theres": 690, "proper": 690, "reinstal": 690, "remedi": 690, "fno": 690, "protector": 690, "d_fortify_sourc": 690, "cflag": 690, "makefil": 690, "troubl": 690, "define_macro": 690, "macro": 690, "extra_compile_arg": 690, "m32": 690, "extra_link_arg": 690, "m64": 690, "proj_lib": 690, "plai": 690, "xx": 690, "xxx": 690, "mpl_toolkit": 690, "candid": 693, "cfradial1": 693, "conflict": 694, "exit": 694, "led": 694, "manag": 694, "deactiv": 694, "enviro": 694, "scratch": 694, "spyder": 694, "though": 694, "yourusernam": 694, "youranacondadir": 694, "gitter": 694, "im": 694}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [127, 1, 0, "-", "correct"], [176, 1, 0, "-", "exceptions"], [177, 1, 0, "-", "filters"], [212, 1, 0, "-", "graph"], [371, 1, 0, "-", "io"], [392, 1, 0, "-", "lazydict"], [416, 1, 0, "-", "map"], [429, 1, 0, "-", "retrieve"], [471, 1, 0, "-", "testing"], [574, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_antenna"], [122, 0, 1, "", "cartesian_to_geographic"], [123, 0, 1, "", "cartesian_to_geographic_aeqd"], [124, 0, 1, "", "cartesian_vectors_to_geographic"], [125, 0, 1, "", "geographic_to_cartesian"], [126, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[128, 2, 1, "", "GateFilter"], [158, 0, 1, "", "calc_cloud_mask"], [159, 0, 1, "", "calc_noise_floor"], [160, 0, 1, "", "calc_zdr_offset"], [161, 0, 1, "", "calculate_attenuation"], [162, 0, 1, "", "calculate_attenuation_philinear"], [163, 0, 1, "", "calculate_attenuation_zphi"], [164, 0, 1, "", "cloud_threshold"], [165, 0, 1, "", "correct_bias"], [166, 0, 1, "", "correct_noise_rhohv"], [167, 0, 1, "", "dealias_fourdd"], [168, 0, 1, "", "dealias_region_based"], [169, 0, 1, "", "dealias_unwrap_phase"], [170, 0, 1, "", "despeckle_field"], [171, 0, 1, "", "find_objects"], [172, 0, 1, "", "moment_based_gate_filter"], [173, 0, 1, "", "phase_proc_lp"], [174, 0, 1, "", "phase_proc_lp_gf"], [175, 0, 1, "", "range_correction"]], "pyart.correct.GateFilter": [[129, 3, 1, "", "copy"], [130, 3, 1, "", "exclude_above"], [131, 3, 1, "", "exclude_above_toa"], [132, 3, 1, "", "exclude_all"], [133, 3, 1, "", "exclude_below"], [134, 3, 1, "", "exclude_equal"], [135, 3, 1, "", "exclude_gates"], [136, 3, 1, "", "exclude_inside"], [137, 3, 1, "", "exclude_invalid"], [138, 3, 1, "", "exclude_last_gates"], [139, 3, 1, "", "exclude_masked"], [140, 3, 1, "", "exclude_none"], [141, 3, 1, "", "exclude_not_equal"], [142, 3, 1, "", "exclude_outside"], [143, 3, 1, "", "exclude_transition"], [144, 4, 1, "", "gate_excluded"], [145, 4, 1, "", "gate_included"], [146, 3, 1, "", "include_above"], [147, 3, 1, "", "include_all"], [148, 3, 1, "", "include_below"], [149, 3, 1, "", "include_equal"], [150, 3, 1, "", "include_gates"], [151, 3, 1, "", "include_inside"], [152, 3, 1, "", "include_none"], [153, 3, 1, "", "include_not_equal"], [154, 3, 1, "", "include_not_masked"], [155, 3, 1, "", "include_not_transition"], [156, 3, 1, "", "include_outside"], [157, 3, 1, "", "include_valid"]], "pyart.filters": [[178, 2, 1, "", "GateFilter"], [208, 0, 1, "", "iso0_based_gate_filter"], [209, 0, 1, "", "moment_and_texture_based_gate_filter"], [210, 0, 1, "", "moment_based_gate_filter"], [211, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[179, 3, 1, "", "copy"], [180, 3, 1, "", "exclude_above"], [181, 3, 1, "", "exclude_above_toa"], [182, 3, 1, "", "exclude_all"], [183, 3, 1, "", "exclude_below"], [184, 3, 1, "", "exclude_equal"], [185, 3, 1, "", "exclude_gates"], [186, 3, 1, "", "exclude_inside"], [187, 3, 1, "", "exclude_invalid"], [188, 3, 1, "", "exclude_last_gates"], [189, 3, 1, "", "exclude_masked"], [190, 3, 1, "", "exclude_none"], [191, 3, 1, "", "exclude_not_equal"], [192, 3, 1, "", "exclude_outside"], [193, 3, 1, "", "exclude_transition"], [194, 4, 1, "", "gate_excluded"], [195, 4, 1, "", "gate_included"], [196, 3, 1, "", "include_above"], [197, 3, 1, "", "include_all"], [198, 3, 1, "", "include_below"], [199, 3, 1, "", "include_equal"], [200, 3, 1, "", "include_gates"], [201, 3, 1, "", "include_inside"], [202, 3, 1, "", "include_none"], [203, 3, 1, "", "include_not_equal"], [204, 3, 1, "", "include_not_masked"], [205, 3, 1, "", "include_not_transition"], [206, 3, 1, "", "include_outside"], [207, 3, 1, "", "include_valid"]], "pyart.graph": [[213, 2, 1, "", "AirborneRadarDisplay"], [243, 2, 1, "", "GridMapDisplay"], [260, 2, 1, "", "GridMapDisplayBasemap"], [274, 2, 1, "", "RadarDisplay"], [303, 2, 1, "", "RadarMapDisplay"], [336, 2, 1, "", "RadarMapDisplayBasemap"], [369, 0, 1, "", "plot_convstrat_scheme"], [370, 0, 1, "", "plot_maxcappi"]], "pyart.graph.AirborneRadarDisplay": [[214, 3, 1, "", "generate_az_rhi_title"], [215, 3, 1, "", "generate_filename"], [216, 3, 1, "", "generate_ray_title"], [217, 3, 1, "", "generate_title"], [218, 3, 1, "", "generate_vpt_title"], [219, 3, 1, "", "label_xaxis_r"], [220, 3, 1, "", "label_xaxis_rays"], [221, 3, 1, "", "label_xaxis_time"], [222, 3, 1, "", "label_xaxis_x"], [223, 3, 1, "", "label_yaxis_field"], [224, 3, 1, "", "label_yaxis_y"], [225, 3, 1, "", "label_yaxis_z"], [226, 3, 1, "", "plot"], [227, 3, 1, "", "plot_azimuth_to_rhi"], [228, 3, 1, "", "plot_colorbar"], [229, 3, 1, "", "plot_cr_raster"], [230, 3, 1, "", "plot_cross_hair"], [231, 3, 1, "", "plot_grid_lines"], [232, 3, 1, "", "plot_label"], [233, 3, 1, "", "plot_labels"], [234, 3, 1, "", "plot_ppi"], [235, 3, 1, "", "plot_range_ring"], [236, 3, 1, "", "plot_range_rings"], [237, 3, 1, "", "plot_ray"], [238, 3, 1, "", "plot_rhi"], [239, 3, 1, "", "plot_sweep_grid"], [240, 3, 1, "", "plot_vpt"], [241, 3, 1, "", "set_aspect_ratio"], [242, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[244, 3, 1, "", "cartopy_coastlines"], [245, 3, 1, "", "cartopy_political_boundaries"], [246, 3, 1, "", "cartopy_states"], [247, 3, 1, "", "generate_filename"], [248, 3, 1, "", "generate_grid_title"], [249, 3, 1, "", "generate_latitudinal_level_title"], [250, 3, 1, "", "generate_longitudinal_level_title"], [251, 3, 1, "", "plot_colorbar"], [252, 3, 1, "", "plot_cross_section"], [253, 3, 1, "", "plot_crosshairs"], [254, 3, 1, "", "plot_grid"], [255, 3, 1, "", "plot_latitude_slice"], [256, 3, 1, "", "plot_latitudinal_level"], [257, 3, 1, "", "plot_longitude_slice"], [258, 3, 1, "", "plot_longitudinal_level"], [259, 3, 1, "", "plot_maxcappi"]], "pyart.graph.GridMapDisplayBasemap": [[261, 3, 1, "", "generate_filename"], [262, 3, 1, "", "generate_grid_title"], [263, 3, 1, "", "generate_latitudinal_level_title"], [264, 3, 1, "", "generate_longitudinal_level_title"], [265, 3, 1, "", "get_basemap"], [266, 3, 1, "", "plot_basemap"], [267, 3, 1, "", "plot_colorbar"], [268, 3, 1, "", "plot_crosshairs"], [269, 3, 1, "", "plot_grid"], [270, 3, 1, "", "plot_latitude_slice"], [271, 3, 1, "", "plot_latitudinal_level"], [272, 3, 1, "", "plot_longitude_slice"], [273, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[275, 3, 1, "", "generate_az_rhi_title"], [276, 3, 1, "", "generate_filename"], [277, 3, 1, "", "generate_ray_title"], [278, 3, 1, "", "generate_title"], [279, 3, 1, "", "generate_vpt_title"], [280, 3, 1, "", "label_xaxis_r"], [281, 3, 1, "", "label_xaxis_rays"], [282, 3, 1, "", "label_xaxis_time"], [283, 3, 1, "", "label_xaxis_x"], [284, 3, 1, "", "label_yaxis_field"], [285, 3, 1, "", "label_yaxis_y"], [286, 3, 1, "", "label_yaxis_z"], [287, 3, 1, "", "plot"], [288, 3, 1, "", "plot_azimuth_to_rhi"], [289, 3, 1, "", "plot_colorbar"], [290, 3, 1, "", "plot_cr_raster"], [291, 3, 1, "", "plot_cross_hair"], [292, 3, 1, "", "plot_grid_lines"], [293, 3, 1, "", "plot_label"], [294, 3, 1, "", "plot_labels"], [295, 3, 1, "", "plot_ppi"], [296, 3, 1, "", "plot_range_ring"], [297, 3, 1, "", "plot_range_rings"], [298, 3, 1, "", "plot_ray"], [299, 3, 1, "", "plot_rhi"], [300, 3, 1, "", "plot_vpt"], [301, 3, 1, "", "set_aspect_ratio"], [302, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[304, 3, 1, "", "generate_az_rhi_title"], [305, 3, 1, "", "generate_filename"], [306, 3, 1, "", "generate_ray_title"], [307, 3, 1, "", "generate_title"], [308, 3, 1, "", "generate_vpt_title"], [309, 3, 1, "", "label_xaxis_r"], [310, 3, 1, "", "label_xaxis_rays"], [311, 3, 1, "", "label_xaxis_time"], [312, 3, 1, "", "label_xaxis_x"], [313, 3, 1, "", "label_yaxis_field"], [314, 3, 1, "", "label_yaxis_y"], [315, 3, 1, "", "label_yaxis_z"], [316, 3, 1, "", "plot"], [317, 3, 1, "", "plot_azimuth_to_rhi"], [318, 3, 1, "", "plot_colorbar"], [319, 3, 1, "", "plot_cr_raster"], [320, 3, 1, "", "plot_cross_hair"], [321, 3, 1, "", "plot_grid_lines"], [322, 3, 1, "", "plot_label"], [323, 3, 1, "", "plot_labels"], [324, 3, 1, "", "plot_line_geo"], [325, 3, 1, "", "plot_line_xy"], [326, 3, 1, "", "plot_point"], [327, 3, 1, "", "plot_ppi"], [328, 3, 1, "", "plot_ppi_map"], [329, 3, 1, "", "plot_range_ring"], [330, 3, 1, "", "plot_range_rings"], [331, 3, 1, "", "plot_ray"], [332, 3, 1, "", "plot_rhi"], [333, 3, 1, "", "plot_vpt"], [334, 3, 1, "", "set_aspect_ratio"], [335, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[337, 3, 1, "", "generate_az_rhi_title"], [338, 3, 1, "", "generate_filename"], [339, 3, 1, "", "generate_ray_title"], [340, 3, 1, "", "generate_title"], [341, 3, 1, "", "generate_vpt_title"], [342, 3, 1, "", "label_xaxis_r"], [343, 3, 1, "", "label_xaxis_rays"], [344, 3, 1, "", "label_xaxis_time"], [345, 3, 1, "", "label_xaxis_x"], [346, 3, 1, "", "label_yaxis_field"], [347, 3, 1, "", "label_yaxis_y"], [348, 3, 1, "", "label_yaxis_z"], [349, 3, 1, "", "plot"], [350, 3, 1, "", "plot_azimuth_to_rhi"], [351, 3, 1, "", "plot_colorbar"], [352, 3, 1, "", "plot_cr_raster"], [353, 3, 1, "", "plot_cross_hair"], [354, 3, 1, "", "plot_grid_lines"], [355, 3, 1, "", "plot_label"], [356, 3, 1, "", "plot_labels"], [357, 3, 1, "", "plot_line_geo"], [358, 3, 1, "", "plot_line_xy"], [359, 3, 1, "", "plot_point"], [360, 3, 1, "", "plot_ppi"], [361, 3, 1, "", "plot_ppi_map"], [362, 3, 1, "", "plot_range_ring"], [363, 3, 1, "", "plot_range_rings"], [364, 3, 1, "", "plot_ray"], [365, 3, 1, "", "plot_rhi"], [366, 3, 1, "", "plot_vpt"], [367, 3, 1, "", "set_aspect_ratio"], [368, 3, 1, "", "set_limits"]], "pyart.io": [[372, 0, 1, "", "prepare_for_read"], [373, 0, 1, "", "read"], [374, 0, 1, "", "read_arm_sonde"], [375, 0, 1, "", "read_arm_sonde_vap"], [376, 0, 1, "", "read_cfradial"], [377, 0, 1, "", "read_chl"], [378, 0, 1, "", "read_grid"], [379, 0, 1, "", "read_grid_mdv"], [380, 0, 1, "", "read_mdv"], [381, 0, 1, "", "read_nexrad_archive"], [382, 0, 1, "", "read_nexrad_cdm"], [383, 0, 1, "", "read_nexrad_level3"], [384, 0, 1, "", "read_rsl"], [385, 0, 1, "", "read_sigmet"], [386, 0, 1, "", "read_uf"], [387, 0, 1, "", "write_cfradial"], [388, 0, 1, "", "write_grid"], [389, 0, 1, "", "write_grid_geotiff"], [390, 0, 1, "", "write_grid_mdv"], [391, 0, 1, "", "write_uf"]], "pyart.lazydict": [[393, 2, 1, "", "LazyLoadDict"], [406, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[394, 3, 1, "", "clear"], [395, 3, 1, "", "copy"], [396, 3, 1, "", "get"], [397, 3, 1, "", "has_key"], [398, 3, 1, "", "items"], [399, 3, 1, "", "keys"], [400, 3, 1, "", "pop"], [401, 3, 1, "", "popitem"], [402, 3, 1, "", "set_lazy"], [403, 3, 1, "", "setdefault"], [404, 3, 1, "", "update"], [405, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[407, 3, 1, "", "clear"], [408, 3, 1, "", "get"], [409, 3, 1, "", "items"], [410, 3, 1, "", "keys"], [411, 3, 1, "", "pop"], [412, 3, 1, "", "popitem"], [413, 3, 1, "", "setdefault"], [414, 3, 1, "", "update"], [415, 3, 1, "", "values"]], "pyart.map": [[417, 2, 1, "", "GateMapper"], [421, 0, 1, "", "example_roi_func_constant"], [422, 0, 1, "", "example_roi_func_dist"], [423, 0, 1, "", "example_roi_func_dist_beam"], [424, 0, 1, "", "grid_from_radars"], [425, 0, 1, "", "grid_ppi_sweeps"], [426, 0, 1, "", "grid_rhi_sweeps"], [427, 0, 1, "", "map_gates_to_grid"], [428, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[418, 4, 1, "", "distance_tolerance"], [419, 3, 1, "", "mapped_radar"], [420, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[430, 0, 1, "", "ZtoR"], [431, 0, 1, "", "calculate_snr_from_reflectivity"], [432, 0, 1, "", "calculate_velocity_texture"], [433, 0, 1, "", "composite_reflectivity"], [434, 0, 1, "", "compute_cdr"], [435, 0, 1, "", "compute_evp"], [436, 0, 1, "", "compute_l"], [437, 0, 1, "", "compute_noisedBZ"], [438, 0, 1, "", "compute_qvp"], [439, 0, 1, "", "compute_rqvp"], [440, 0, 1, "", "compute_snr"], [441, 0, 1, "", "compute_svp"], [442, 0, 1, "", "compute_ts_along_coord"], [443, 0, 1, "", "compute_vp"], [444, 0, 1, "", "conv_strat_raut"], [445, 0, 1, "", "conv_strat_yuter"], [446, 0, 1, "", "create_cfad"], [447, 0, 1, "", "dealias_spectra"], [448, 0, 1, "", "est_rain_rate_a"], [449, 0, 1, "", "est_rain_rate_hydro"], [450, 0, 1, "", "est_rain_rate_kdp"], [451, 0, 1, "", "est_rain_rate_z"], [452, 0, 1, "", "est_rain_rate_za"], [453, 0, 1, "", "est_rain_rate_zkdp"], [454, 0, 1, "", "est_rain_rate_zpoly"], [455, 0, 1, "", "feature_detection"], [456, 0, 1, "", "fetch_radar_time_profile"], [457, 0, 1, "", "get_freq_band"], [458, 0, 1, "", "grid_displacement_pc"], [459, 0, 1, "", "grid_shift"], [460, 0, 1, "", "hydroclass_semisupervised"], [461, 0, 1, "", "kdp_maesaka"], [462, 0, 1, "", "kdp_schneebeli"], [463, 0, 1, "", "kdp_vulpiani"], [464, 0, 1, "", "map_profile_to_gates"], [465, 0, 1, "", "quasi_vertical_profile"], [466, 0, 1, "", "spectra_moments"], [467, 0, 1, "", "steiner_conv_strat"], [468, 0, 1, "", "texture_of_complex_phase"], [469, 0, 1, "", "vad_browning"], [470, 0, 1, "", "vad_michelson"]], "pyart.testing": [[472, 2, 1, "", "Grid"], [482, 2, 1, "", "InTemporaryDirectory"], [484, 2, 1, "", "Radar"], [513, 2, 1, "", "RadarSpectra"], [558, 0, 1, "", "get_metadata"], [559, 0, 1, "", "get_test_data"], [560, 0, 1, "", "make_empty_grid"], [561, 0, 1, "", "make_empty_ppi_radar"], [562, 0, 1, "", "make_empty_rhi_radar"], [563, 0, 1, "", "make_empty_spectra_radar"], [564, 0, 1, "", "make_gaussian_storm_grid"], [565, 0, 1, "", "make_normal_storm"], [566, 0, 1, "", "make_single_ray_radar"], [567, 0, 1, "", "make_storm_grid"], [568, 0, 1, "", "make_target_grid"], [569, 0, 1, "", "make_target_radar"], [570, 0, 1, "", "make_target_rhi_radar"], [571, 0, 1, "", "make_target_spectra_radar"], [572, 0, 1, "", "make_velocity_aliased_radar"], [573, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[473, 3, 1, "", "add_field"], [474, 3, 1, "", "get_point_longitude_latitude"], [475, 3, 1, "", "get_projparams"], [476, 3, 1, "", "init_point_altitude"], [477, 3, 1, "", "init_point_longitude_latitude"], [478, 3, 1, "", "init_point_x_y_z"], [479, 4, 1, "", "projection_proj"], [480, 3, 1, "", "to_xarray"], [481, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[483, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[485, 3, 1, "", "add_field"], [486, 3, 1, "", "add_field_like"], [487, 3, 1, "", "add_filter"], [488, 3, 1, "", "check_field_exists"], [489, 3, 1, "", "extract_sweeps"], [490, 3, 1, "", "get_azimuth"], [491, 3, 1, "", "get_elevation"], [492, 3, 1, "", "get_end"], [493, 3, 1, "", "get_field"], [494, 3, 1, "", "get_gate_area"], [495, 3, 1, "", "get_gate_lat_lon_alt"], [496, 3, 1, "", "get_gate_x_y_z"], [497, 3, 1, "", "get_nyquist_vel"], [498, 3, 1, "", "get_slice"], [499, 3, 1, "", "get_start"], [500, 3, 1, "", "get_start_end"], [501, 3, 1, "", "info"], [502, 3, 1, "", "init_gate_altitude"], [503, 3, 1, "", "init_gate_longitude_latitude"], [504, 3, 1, "", "init_gate_x_y_z"], [505, 3, 1, "", "init_rays_per_sweep"], [506, 3, 1, "", "iter_azimuth"], [507, 3, 1, "", "iter_elevation"], [508, 3, 1, "", "iter_end"], [509, 3, 1, "", "iter_field"], [510, 3, 1, "", "iter_slice"], [511, 3, 1, "", "iter_start"], [512, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[514, 4, 1, "", "altitude"], [515, 4, 1, "", "azimuth"], [516, 3, 1, "", "check_field_exists"], [517, 4, 1, "", "elevation"], [518, 4, 1, "", "fields"], [519, 4, 1, "", "fixed_angle"], [520, 4, 1, "", "gate_altitude"], [521, 4, 1, "", "gate_latitude"], [522, 4, 1, "", "gate_longitude"], [523, 4, 1, "", "gate_x"], [524, 4, 1, "", "gate_y"], [525, 4, 1, "", "gate_z"], [526, 3, 1, "", "get_end"], [527, 3, 1, "", "get_slice"], [528, 3, 1, "", "get_start"], [529, 3, 1, "", "get_start_end"], [530, 3, 1, "", "init_gate_altitude"], [531, 3, 1, "", "init_gate_longitude_latitude"], [532, 3, 1, "", "init_gate_x_y_z"], [533, 3, 1, "", "init_rays_per_sweep"], [534, 3, 1, "", "iter_azimuth"], [535, 3, 1, "", "iter_elevation"], [536, 3, 1, "", "iter_end"], [537, 3, 1, "", "iter_field"], [538, 3, 1, "", "iter_slice"], [539, 3, 1, "", "iter_start"], [540, 3, 1, "", "iter_start_end"], [541, 4, 1, "", "latitude"], [542, 4, 1, "", "longitude"], [543, 4, 1, "", "ngates"], [544, 4, 1, "", "npulses_max"], [545, 4, 1, "", "nrays"], [546, 4, 1, "", "nsweeps"], [547, 4, 1, "", "projection"], [548, 4, 1, "", "range"], [549, 4, 1, "", "rays_per_sweep"], [550, 4, 1, "", "scan_type"], [551, 4, 1, "", "sweep_end_ray_index"], [552, 4, 1, "", "sweep_mode"], [553, 4, 1, "", "sweep_number"], [554, 4, 1, "", "sweep_start_ray_index"], [555, 4, 1, "", "time"], [556, 3, 1, "", "to_vpt"], [557, 4, 1, "", "velocity_bins"]], "pyart.util": [[575, 0, 1, "", "angular_mean"], [576, 0, 1, "", "angular_mean_deg"], [577, 0, 1, "", "angular_std"], [578, 0, 1, "", "angular_std_deg"], [579, 0, 1, "", "angular_texture_2d"], [580, 0, 1, "", "column_vertical_profile"], [581, 0, 1, "", "compute_directional_stats"], [582, 0, 1, "", "cross_section_ppi"], [583, 0, 1, "", "cross_section_rhi"], [584, 0, 1, "", "datetime_from_dataset"], [585, 0, 1, "", "datetime_from_grid"], [586, 0, 1, "", "datetime_from_radar"], [587, 0, 1, "", "datetimes_from_dataset"], [588, 0, 1, "", "datetimes_from_radar"], [589, 0, 1, "", "determine_sweeps"], [590, 0, 1, "", "estimate_noise_hs74"], [591, 0, 1, "", "for_azimuth"], [592, 0, 1, "", "get_column_rays"], [593, 0, 1, "", "get_field_location"], [594, 0, 1, "", "image_mute_radar"], [595, 0, 1, "", "interval_mean"], [596, 0, 1, "", "interval_std"], [597, 0, 1, "", "is_vpt"], [598, 0, 1, "", "join_radar"], [599, 0, 1, "", "ma_broadcast_to"], [600, 0, 1, "", "mean_of_two_angles"], [601, 0, 1, "", "mean_of_two_angles_deg"], [602, 0, 1, "", "rolling_window"], [603, 0, 1, "", "simulated_vel_from_profile"], [604, 0, 1, "", "sphere_distance"], [605, 0, 1, "", "subset_radar"], [606, 0, 1, "", "texture"], [607, 0, 1, "", "texture_along_ray"], [608, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 612, 614, 615, 618, 621], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 468], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 558], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 639, 640, 641, 646, 677, 686], "add_field": [32, 46, 473, 485], "get_point_longitude_latitud": [33, 474], "get_projparam": [34, 475], "init_point_altitud": [35, 476], "init_point_longitude_latitud": [36, 477], "init_point_x_y_z": [37, 478], "projection_proj": [38, 479], "to_xarrai": [39, 480], "write": [40, 481], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 613, 614, 618, 619, 622, 624, 638, 640, 641, 666, 680, 683, 688, 691], "add_field_lik": [47, 486], "add_filt": [48, 487], "check_field_exist": [49, 77, 488, 516], "extract_sweep": [50, 489], "get_azimuth": [51, 490], "get_elev": [52, 491], "get_end": [53, 87, 492, 526], "get_field": [54, 493], "get_gate_area": [55, 494], "get_gate_lat_lon_alt": [56, 495], "get_gate_x_y_z": [57, 496], "get_nyquist_vel": [58, 497], "get_slic": [59, 88, 498, 527], "get_start": [60, 89, 499, 528], "get_start_end": [61, 90, 500, 529], "info": [62, 501], "init_gate_altitud": [63, 91, 502, 530], "init_gate_longitude_latitud": [64, 92, 503, 531], "init_gate_x_y_z": [65, 93, 504, 532], "init_rays_per_sweep": [66, 94, 505, 533], "iter_azimuth": [67, 95, 506, 534], "iter_elev": [68, 96, 507, 535], "iter_end": [69, 97, 508, 536], "iter_field": [70, 98, 509, 537], "iter_slic": [71, 99, 510, 538], "iter_start": [72, 100, 511, 539], "iter_start_end": [73, 101, 512, 540], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557], "altitud": [75, 514], "azimuth": [76, 515], "elev": [78, 517], "field": [79, 518, 683], "fixed_angl": [80, 519], "gate_altitud": [81, 520], "gate_latitud": [82, 521], "gate_longitud": [83, 522], "gate_x": [84, 523], "gate_i": [85, 524], "gate_z": [86, 525], "latitud": [102, 541, 635], "longitud": [103, 542, 635], "ngate": [104, 543], "npulses_max": [105, 544], "nrai": [106, 545], "nsweep": [107, 546], "project": [108, 547], "rang": [109, 548, 618], "rays_per_sweep": [110, 549], "scan_typ": [111, 550], "sweep_end_ray_index": [112, 551], "sweep_mod": [113, 552], "sweep_numb": [114, 553], "sweep_start_ray_index": [115, 554], "time": [116, 555, 614, 618, 631, 636, 642, 663, 673, 674, 679, 689], "to_vpt": [117, 556, 608], "velocity_bin": [118, 557], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_antenna": 121, "cartesian_to_geograph": 122, "cartesian_to_geographic_aeqd": 123, "cartesian_vectors_to_geograph": 124, "geographic_to_cartesian": 125, "geographic_to_cartesian_aeqd": 126, "correct": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 619, 626, 627, 632, 693], "gatefilt": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 687], "copi": [129, 179, 395], "exclude_abov": [130, 180], "exclude_above_toa": [131, 181], "exclude_al": [132, 182], "exclude_below": [133, 183], "exclude_equ": [134, 184], "exclude_g": [135, 185], "exclude_insid": [136, 186], "exclude_invalid": [137, 187], "exclude_last_g": [138, 188], "exclude_mask": [139, 189], "exclude_non": [140, 190], "exclude_not_equ": [141, 191], "exclude_outsid": [142, 192], "exclude_transit": [143, 193], "gate_exclud": [144, 194], "gate_includ": [145, 195], "include_abov": [146, 196], "include_al": [147, 197], "include_below": [148, 198], "include_equ": [149, 199], "include_g": [150, 200], "include_insid": [151, 201], "include_non": [152, 202], "include_not_equ": [153, 203], "include_not_mask": [154, 204], "include_not_transit": [155, 205], "include_outsid": [156, 206], "include_valid": [157, 207], "calc_cloud_mask": 158, "calc_noise_floor": 159, "calc_zdr_offset": 160, "calculate_attenu": 161, "calculate_attenuation_philinear": 162, "calculate_attenuation_zphi": 163, "cloud_threshold": 164, "correct_bia": 165, "correct_noise_rhohv": 166, "dealias_fourdd": 167, "dealias_region_bas": 168, "dealias_unwrap_phas": 169, "despeckle_field": 170, "find_object": 171, "moment_based_gate_filt": [172, 210], "phase_proc_lp": 173, "phase_proc_lp_gf": 174, "range_correct": 175, "except": 176, "filter": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "iso0_based_gate_filt": 208, "moment_and_texture_based_gate_filt": 209, "temp_based_gate_filt": 211, "graph": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 693], "airborneradardisplai": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "generate_az_rhi_titl": [214, 275, 304, 337], "generate_filenam": [215, 247, 261, 276, 305, 338], "generate_ray_titl": [216, 277, 306, 339], "generate_titl": [217, 278, 307, 340], "generate_vpt_titl": [218, 279, 308, 341], "label_xaxis_r": [219, 280, 309, 342], "label_xaxis_rai": [220, 281, 310, 343], "label_xaxis_tim": [221, 282, 311, 344], "label_xaxis_x": [222, 283, 312, 345], "label_yaxis_field": [223, 284, 313, 346], "label_yaxis_i": [224, 285, 314, 347], "label_yaxis_z": [225, 286, 315, 348], "plot": [226, 287, 316, 349, 613, 614, 615, 617, 618, 619, 628, 632, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 667, 670, 672, 678], "plot_azimuth_to_rhi": [227, 288, 317, 350], "plot_colorbar": [228, 251, 267, 289, 318, 351], "plot_cr_rast": [229, 290, 319, 352], "plot_cross_hair": [230, 291, 320, 353], "plot_grid_lin": [231, 292, 321, 354], "plot_label": [232, 233, 293, 294, 322, 323, 355, 356], "plot_ppi": [234, 295, 327, 360], "plot_range_r": [235, 236, 296, 297, 329, 330, 362, 363], "plot_rai": [237, 298, 331, 364], "plot_rhi": [238, 299, 332, 365], "plot_sweep_grid": 239, "plot_vpt": [240, 300, 333, 366], "set_aspect_ratio": [241, 301, 334, 367], "set_limit": [242, 302, 335, 368], "gridmapdisplai": [243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 661], "cartopy_coastlin": 244, "cartopy_political_boundari": 245, "cartopy_st": 246, "generate_grid_titl": [248, 262], "generate_latitudinal_level_titl": [249, 263], "generate_longitudinal_level_titl": [250, 264], "plot_cross_sect": 252, "plot_crosshair": [253, 268], "plot_grid": [254, 269], "plot_latitude_slic": [255, 270], "plot_latitudinal_level": [256, 271], "plot_longitude_slic": [257, 272], "plot_longitudinal_level": [258, 273], "plot_maxcappi": [259, 370], "gridmapdisplaybasemap": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "get_basemap": 265, "plot_basemap": 266, "radardisplai": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "radarmapdisplai": [303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 615], "plot_line_geo": [324, 357], "plot_line_xi": [325, 358], "plot_point": [326, 359], "plot_ppi_map": [328, 361, 615], "radarmapdisplaybasemap": [336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "plot_convstrat_schem": 369, "io": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 693], "prepare_for_read": 372, "read": [373, 613, 614, 615, 618, 619, 634, 635], "read_arm_sond": 374, "read_arm_sonde_vap": 375, "read_cfradi": 376, "read_chl": 377, "read_grid": 378, "read_grid_mdv": 379, "read_mdv": 380, "read_nexrad_arch": 381, "read_nexrad_cdm": 382, "read_nexrad_level3": 383, "read_rsl": 384, "read_sigmet": 385, "read_uf": 386, "write_cfradi": 387, "write_grid": 388, "write_grid_geotiff": 389, "write_grid_mdv": 390, "write_uf": 391, "lazydict": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415], "lazyloaddict": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "clear": [394, 407], "get": [396, 408, 680], "has_kei": 397, "item": [398, 409], "kei": [399, 410, 614], "pop": [400, 411], "popitem": [401, 412], "set_lazi": 402, "setdefault": [403, 413], "updat": [404, 414, 624], "valu": [405, 415], "mutablemap": [406, 407, 408, 409, 410, 411, 412, 413, 414, 415], "map": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 618, 632, 637, 639, 640, 641, 654, 686], "gatemapp": [417, 418, 419, 420, 638], "distance_toler": 418, "mapped_radar": 419, "time_toler": 420, "example_roi_func_const": 421, "example_roi_func_dist": 422, "example_roi_func_dist_beam": 423, "grid_from_radar": 424, "grid_ppi_sweep": 425, "grid_rhi_sweep": 426, "map_gates_to_grid": 427, "map_to_grid": 428, "retriev": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 619, 632, 664], "ztor": 430, "calculate_snr_from_reflect": 431, "calculate_velocity_textur": 432, "composite_reflect": 433, "compute_cdr": 434, "compute_evp": 435, "compute_l": 436, "compute_noisedbz": 437, "compute_qvp": 438, "compute_rqvp": 439, "compute_snr": 440, "compute_svp": 441, "compute_ts_along_coord": 442, "compute_vp": 443, "conv_strat_raut": 444, "conv_strat_yut": 445, "create_cfad": 446, "dealias_spectra": 447, "est_rain_rate_a": 448, "est_rain_rate_hydro": 449, "est_rain_rate_kdp": 450, "est_rain_rate_z": 451, "est_rain_rate_za": 452, "est_rain_rate_zkdp": 453, "est_rain_rate_zpoli": 454, "feature_detect": 455, "fetch_radar_time_profil": 456, "get_freq_band": 457, "grid_displacement_pc": 458, "grid_shift": 459, "hydroclass_semisupervis": 460, "usag": 460, "kdp_maesaka": 461, "kdp_schneeb": 462, "kdp_vulpiani": 463, "map_profile_to_g": 464, "quasi_vertical_profil": 465, "spectra_mo": 466, "paramet": [466, 615], "steiner_conv_strat": 467, "vad_brown": 469, "vad_michelson": 470, "test": [471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 622, 691], "intemporarydirectori": [482, 483], "cleanup": 483, "get_test_data": 559, "make_empty_grid": 560, "make_empty_ppi_radar": 561, "make_empty_rhi_radar": 562, "make_empty_spectra_radar": 563, "make_gaussian_storm_grid": 564, "make_normal_storm": 565, "make_single_ray_radar": 566, "make_storm_grid": 567, "make_target_grid": 568, "make_target_radar": 569, "make_target_rhi_radar": 570, "make_target_spectra_radar": 571, "make_velocity_aliased_radar": 572, "make_velocity_aliased_rhi_radar": 573, "util": [574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608], "angular_mean": 575, "angular_mean_deg": 576, "angular_std": 577, "angular_std_deg": 578, "angular_texture_2d": 579, "column_vertical_profil": 580, "compute_directional_stat": 581, "cross_section_ppi": 582, "cross_section_rhi": 583, "datetime_from_dataset": 584, "datetime_from_grid": 585, "datetime_from_radar": 586, "datetimes_from_dataset": 587, "datetimes_from_radar": 588, "determine_sweep": 589, "estimate_noise_hs74": 590, "for_azimuth": 591, "assumpt": [591, 604], "get_column_rai": 592, "get_field_loc": 593, "image_mute_radar": 594, "interval_mean": 595, "interval_std": 596, "is_vpt": 597, "join_radar": 598, "ma_broadcast_to": 599, "mean_of_two_angl": 600, "mean_of_two_angles_deg": 601, "rolling_window": 602, "simulated_vel_from_profil": 603, "sphere_dist": 604, "subset_radar": 605, "textur": 606, "texture_along_rai": 607, "api": [609, 619], "refer": [609, 619, 668, 669], "manual": 609, "blog": [610, 618, 620], "blend": 611, "observ": 611, "from": [611, 613, 618, 619, 634, 646, 650, 652, 653, 655, 656, 657, 658, 659, 662, 690], "tracer": 611, "us": [611, 613, 614, 615, 618, 619, 629, 638, 639, 661, 676, 677, 678], "py": [611, 612, 613, 618, 619, 621, 622, 623, 624, 676, 677, 678, 680, 687, 688, 690, 691, 693], "art": [611, 612, 613, 618, 619, 621, 622, 623, 624, 676, 677, 678, 680, 687, 688, 690, 691, 693], "import": [611, 613, 614, 615, 617, 622, 691], "goe": 611, "data": [611, 613, 614, 615, 617, 618, 619, 634, 635, 677, 686, 687], "access": [611, 613, 615, 617, 618], "csapr": 611, "load": [611, 614], "lma": 611, "flash": 611, "june": 611, "17th": 611, "case": 611, "17": [611, 621], "rhi": [611, 619, 655, 656, 657, 658, 659, 660], "activ": 612, "develop": [612, 625], "submit": 612, "pull": 612, "request": 612, "pr": [612, 621], "first": 612, "you": [612, 619], "have": 612, "done": 612, "so": 612, "alreadi": 612, "need": 612, "fork": 612, "github": [612, 622, 624, 691], "repositori": 612, "second": 612, "termin": 612, "clone": 612, "your": [612, 618, 619, 644, 648], "remot": 612, "git": [612, 624], "command": 612, "third": 612, "creat": [612, 613, 614, 618, 624, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 665, 682, 694], "doc": [612, 616], "conda": [612, 624], "environ": [612, 694], "fourth": 612, "we": [612, 618], "instal": [612, 622, 680, 690, 691], "trmm": 612, "rsl": 612, "librari": 612, "lastli": 612, "python": [612, 622, 680, 691], "script": 612, "within": [612, 618], "okai": 612, "should": 612, "now": 612, "readi": 612, "make": [612, 624], "chang": 612, "sourc": [612, 690], "code": [612, 618, 622, 691], "1": [612, 618, 621, 669], "new": [612, 616], "branch": 612, "our": [612, 614, 615, 617, 619], "2": [612, 618, 621, 634, 635, 669, 693], "push": 612, "To": 612, "let": 612, "commit": 612, "after": 612, "thi": [612, 618, 621], "i": [612, 619, 680], "what": [612, 680], "look": 612, "like": 612, "hope": 612, "help": [612, 680], "hail": 613, "storm": 613, "visual": [613, 614, 617], "panda": 613, "motiv": [613, 617, 619, 620], "nexrad": [613, 615, 617, 618, 634, 635, 650, 651], "fsspec": 613, "setup": [613, 617, 622, 623, 691], "filesystem": 613, "bucket": 613, "file": [613, 618, 622, 650, 652, 653, 655, 656, 657, 658, 659, 682, 683, 691], "dataset": 613, "nexradaw": 613, "configur": 613, "search": [613, 619], "download": [613, 617], "spc": 613, "report": 613, "function": [613, 617], "loop": [613, 618], "through": [613, 618, 619], "helper": 613, "scale": 613, "bar": 613, "an": [613, 649, 657, 658, 694], "anim": [613, 618], "imag": [613, 617, 649], "view": [613, 614], "final": [613, 614], "conclus": [613, 615, 617, 619, 620], "work": [614, 668, 669], "vertic": 614, "point": [614, 618, 666], "xarrai": 614, "hvplot": 614, "overview": [614, 618], "ka": 614, "band": 614, "arm": [614, 619, 622, 680, 691], "zenith": 614, "kazr": 614, "instrument": 614, "clean": [614, 619], "up": [614, 615, 618, 694], "bit": 614, "analysi": 614, "subset": 614, "reflect": [614, 627, 649, 651, 657, 658, 667], "veloc": [614, 619, 629, 665, 676, 684], "quick": 614, "extract": [614, 666], "date": [614, 617, 618], "inform": [614, 694], "label": 614, "holoview": 614, "try": [614, 615, 693], "raster": 614, "takeawai": 614, "fix": [615, 621, 635], "weird": 615, "pattern": 615, "when": 615, "level": [615, 618, 634, 635], "3": [615, 618, 621, 634, 661], "The": [615, 617, 619, 620, 622, 680, 688, 691], "recreat": 615, "issu": [615, 635], "set": [615, 618, 671, 694], "matplotlib": 615, "style": [615, 622, 691], "without": 615, "alpha": 615, "add": [615, 617], "argument": 615, "dig": 615, "investig": [615, 617, 619], "pcolormesh": 615, "edgecolor": 615, "modifi": [615, 648], "default": 615, "solut": [615, 619, 620], "sever": 617, "weather": 617, "wisconsin": 617, "outbreak": 617, "focus": 617, "southern": 617, "reproduc": 617, "event": 617, "road": 617, "interst": 617, "featur": [617, 618, 621, 669], "avail": 617, "run": 617, "gif": 618, "post": [618, 620], "cover": 618, "aw": [618, 634], "how": [618, 624, 668, 669, 693], "acquir": 618, "prerequisit": 618, "s3": 618, "filysystem": 618, "select": 618, "station": 618, "period": 618, "option": [618, 680, 690, 694], "individu": 618, "locat": 618, "gener": 618, "list": 618, "check": 618, "plottabl": 618, "product": 618, "ad": [618, 694], "custom": [618, 671], "counti": 618, "zoom": 618, "colorbar": [618, 648], "note": [618, 624], "full": 618, "block": 618, "construct": 618, "properli": 618, "creation": 618, "whole": 618, "summari": [618, 668, 669], "scan": 619, "cloud": [619, 628, 634], "epcap": 619, "problem": [619, 620], "dq": 619, "browser": 619, "act": 619, "token": 619, "live": 619, "pass": 619, "credenti": 619, "take": 619, "peak": 619, "strategi": 619, "sort": 619, "all": 619, "ppi": [619, 639, 652, 653, 654, 662, 678], "appli": 619, "explor": 619, "threshold": 619, "snr": 619, "revis": 619, "where": 619, "slice": 619, "frame": 619, "templat": 620, "changelog": 621, "18": 621, "enhanc": 621, "made": 621, "bug": 621, "other": 621, "merg": 621, "contributor": [621, 622, 691], "releas": [621, 624], "0": [621, 693], "document": [621, 624], "improv": 621, "16": 621, "mainten": 621, "upkeep": 621, "15": 621, "v1": 621, "14": 621, "6": 621, "5": 621, "4": 621, "13": 621, "12": 621, "7": 621, "11": 621, "8": 621, "deprec": 621, "10": 621, "9": 621, "picasso": 621, "": [622, 625, 691], "guid": [622, 625, 691, 692], "toolkit": [622, 680, 691], "link": [622, 691], "cite": [622, 680, 691], "resourc": [622, 691], "continu": 623, "integr": 623, "tag": 624, "prepar": 624, "trigger": 624, "pypi": 624, "upload": 624, "packag": 624, "forg": 624, "announc": 624, "open": 624, "forum": 624, "version": 625, "moment": [626, 632, 650], "exampl": [626, 632, 633, 637, 643, 664, 665, 668, 675], "attenu": 627, "calcul": [628, 630, 667, 670, 672], "mask": [628, 687], "dealia": [629, 676], "doppler": 629, "region": 629, "base": 629, "algorithm": [629, 668, 669], "zdr": 630, "bia": 630, "comput": [631, 636, 642, 663, 673, 674, 679, 689], "galleri": [632, 681], "input": [632, 633, 693], "output": [632, 633, 693], "xradar": [632, 675, 676, 677, 678], "older": 635, "compar": 638, "two": [638, 641, 660], "singl": [639, 640], "sweep": 639, "cartesian": [639, 640, 641, 686], "2d": 639, "weight": 639, "choos": 644, "colormap": 644, "corner": 645, "reflector": 645, "cross": [646, 662], "section": [646, 662], "max": 647, "cappi": 647, "mute": 649, "multipl": [650, 655, 656], "cfradial": 652, "mdv": [653, 657, 658, 659], "cartopi": 654, "panel": [655, 656, 660, 661], "cf": [655, 656], "radial": [655, 656, 676], "contour": [657, 658], "line": [657, 658], "volum": 662, "cfad": 665, "diagram": 665, "valid": 665, "column": 666, "abov": 666, "composit": 667, "convect": [668, 669], "stratiform": [668, 669], "classif": [668, 669, 670, 671], "recommend": [668, 669], "best": [668, 669], "practic": [668, 669], "detect": 669, "part": 669, "warm": 669, "season": 669, "cool": 669, "hydrometeor": [670, 671], "frequenc": 671, "vad": 672, "profil": 672, "can": 680, "do": 680, "short": 680, "cours": 680, "depend": [680, 690, 694], "contribut": 680, "notebook": 681, "basic": 682, "ingest": 682, "netcdf": 682, "manipul": 683, "save": 683, "object": [683, 688], "dealias": 684, "With": 687, "index": 688, "build": 690, "requir": 690, "obtain": 690, "latest": 690, "frequent": 690, "ask": 690, "question": 690, "user": 692, "anaconda": 694, "channel": 694, "path": 694, "more": 694}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[121, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[122, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[123, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[124, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[125, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[126, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[127, "pyart-correct"]], "pyart.correct.GateFilter": [[128, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[129, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[130, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_above_toa": [[131, "pyart-correct-gatefilter-exclude-above-toa"]], "pyart.correct.GateFilter.exclude_all": [[132, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[133, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[134, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[135, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[136, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[137, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_last_gates": [[138, "pyart-correct-gatefilter-exclude-last-gates"]], "pyart.correct.GateFilter.exclude_masked": [[139, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[140, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[141, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[142, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[143, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[144, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[145, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[146, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[147, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[148, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[149, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[150, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[151, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[152, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[153, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[154, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[155, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[156, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[157, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calc_cloud_mask": [[158, "pyart-correct-calc-cloud-mask"]], "pyart.correct.calc_noise_floor": [[159, "pyart-correct-calc-noise-floor"]], "pyart.correct.calc_zdr_offset": [[160, "pyart-correct-calc-zdr-offset"]], "pyart.correct.calculate_attenuation": [[161, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[162, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[163, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.cloud_threshold": [[164, "pyart-correct-cloud-threshold"]], "pyart.correct.correct_bias": [[165, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[166, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[167, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[168, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[169, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[170, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[171, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[172, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[173, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[174, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.range_correction": [[175, "pyart-correct-range-correction"]], "pyart.exceptions": [[176, "pyart-exceptions"]], "pyart.filters": [[177, "pyart-filters"]], "pyart.filters.GateFilter": [[178, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[179, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[180, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_above_toa": [[181, "pyart-filters-gatefilter-exclude-above-toa"]], "pyart.filters.GateFilter.exclude_all": [[182, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[183, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[184, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[185, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[186, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[187, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_last_gates": [[188, "pyart-filters-gatefilter-exclude-last-gates"]], "pyart.filters.GateFilter.exclude_masked": [[189, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[190, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[191, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[192, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[193, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[194, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[195, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[196, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[197, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[198, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[199, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[200, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[201, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[202, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[203, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[204, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[205, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[206, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[207, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[208, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[209, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[210, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[211, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[212, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[213, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[214, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[215, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[216, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[217, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[218, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[219, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[220, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[221, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[222, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[223, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[224, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[225, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[226, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[227, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[228, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[229, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[230, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[231, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[232, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[233, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[234, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[235, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[236, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[237, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[238, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[239, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[240, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[241, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[242, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[243, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[244, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[245, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[246, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[247, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[248, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[249, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[250, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[251, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[252, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[253, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[254, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[255, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[256, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[257, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[258, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplay.plot_maxcappi": [[259, "pyart-graph-gridmapdisplay-plot-maxcappi"]], "pyart.graph.GridMapDisplayBasemap": [[260, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[261, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[262, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[263, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[264, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[265, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[266, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[267, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[268, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[269, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[270, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[271, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[272, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[273, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[274, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[275, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[276, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[277, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[278, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[279, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[280, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[281, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[282, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[283, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[284, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[285, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[286, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[287, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[288, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[289, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[290, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[291, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[292, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[293, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[294, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[295, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[296, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[297, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[298, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[299, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[300, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[301, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[302, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[303, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[304, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[305, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[306, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[307, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[308, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[309, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[310, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[311, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[312, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[313, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[314, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[315, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[316, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[317, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[318, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[319, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[320, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[321, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[322, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[323, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[324, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[325, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[326, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[327, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[328, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[329, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[330, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[331, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[332, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[333, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[334, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[335, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[336, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[337, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[338, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[339, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[340, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[341, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[342, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[343, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[344, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[345, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[346, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[347, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[348, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[349, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[350, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[351, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[352, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[353, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[354, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[355, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[356, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[357, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[358, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[359, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[360, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[361, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[362, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[363, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[364, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[365, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[366, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[367, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[368, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[369, "pyart-graph-plot-convstrat-scheme"]], "pyart.graph.plot_maxcappi": [[370, "pyart-graph-plot-maxcappi"]], "pyart.io": [[371, "pyart-io"]], "pyart.io.prepare_for_read": [[372, "pyart-io-prepare-for-read"]], "pyart.io.read": [[373, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[374, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[375, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[376, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[377, "pyart-io-read-chl"]], "pyart.io.read_grid": [[378, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[379, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[380, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[381, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[382, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[383, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[384, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[385, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[386, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[387, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[388, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[389, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[390, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[391, "pyart-io-write-uf"]], "pyart.lazydict": [[392, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[393, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[394, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[395, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[396, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[397, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[398, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[399, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[400, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[401, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[402, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[403, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[404, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[405, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[406, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[407, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[408, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[409, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[410, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[411, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[412, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[413, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[414, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[415, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[416, "pyart-map"]], "pyart.map.GateMapper": [[417, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[418, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[419, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[420, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[421, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[422, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[423, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[424, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[425, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[426, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[427, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[428, "pyart-map-map-to-grid"]], "pyart.retrieve": [[429, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[430, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[431, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[432, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[433, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[434, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_evp": [[435, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_l": [[436, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[437, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_qvp": [[438, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_rqvp": [[439, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_snr": [[440, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_svp": [[441, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[442, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vp": [[443, "pyart-retrieve-compute-vp"]], "pyart.retrieve.conv_strat_raut": [[444, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[445, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.create_cfad": [[446, "pyart-retrieve-create-cfad"]], "pyart.retrieve.dealias_spectra": [[447, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[448, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[449, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[450, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[451, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[452, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[453, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[454, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[455, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[456, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[457, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[458, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[459, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[460, "pyart-retrieve-hydroclass-semisupervised"]], "Usage": [[460, "usage"]], "pyart.retrieve.kdp_maesaka": [[461, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[462, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[463, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[464, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[465, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[466, "pyart-retrieve-spectra-moments"]], "Parameter": [[466, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[467, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[468, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[469, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[470, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[471, "pyart-testing"]], "pyart.testing.Grid": [[472, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[473, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[474, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[475, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[476, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[477, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[478, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[479, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[480, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[481, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[482, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[483, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[484, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[485, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[486, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[487, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[488, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[489, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[490, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[491, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[492, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[493, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[494, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[495, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[496, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[497, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[498, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[499, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[500, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[501, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[502, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[503, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[504, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[505, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[506, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[507, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[508, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[509, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[510, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[511, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[512, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[513, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[514, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[515, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[516, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[517, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[518, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[519, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[520, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[521, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[522, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[523, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[524, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[525, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[526, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[527, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[528, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[529, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[530, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[531, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[532, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[533, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[534, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[535, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[536, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[537, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[538, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[539, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[540, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[541, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[542, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[543, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[544, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[545, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[546, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[547, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[548, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[549, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[550, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[551, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[552, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[553, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[554, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[555, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[556, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[557, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[558, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[559, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[560, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[561, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[562, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[563, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[564, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[565, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[566, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[567, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[568, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[569, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_rhi_radar": [[570, "pyart-testing-make-target-rhi-radar"]], "pyart.testing.make_target_spectra_radar": [[571, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[572, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[573, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[574, "pyart-util"]], "pyart.util.angular_mean": [[575, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[576, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[577, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[578, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[579, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[580, "pyart-util-column-vertical-profile"]], "pyart.util.compute_directional_stats": [[581, "pyart-util-compute-directional-stats"]], "pyart.util.cross_section_ppi": [[582, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[583, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[584, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[585, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[586, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[587, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[588, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[589, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[590, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[591, "pyart-util-for-azimuth"]], "Assumptions": [[591, "assumptions"], [604, "assumptions"]], "pyart.util.get_column_rays": [[592, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[593, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[594, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[595, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[596, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[597, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[598, "pyart-util-join-radar"]], "pyart.util.ma_broadcast_to": [[599, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[600, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[601, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[602, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[603, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[604, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[605, "pyart-util-subset-radar"]], "pyart.util.texture": [[606, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[607, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[608, "pyart-util-to-vpt"]], "API Reference Manual": [[609, "api-reference-manual"]], "Blog": [[610, "blog"]], "Blending Observations from TRACER using Py-ART": [[611, "blending-observations-from-tracer-using-py-art"]], "Imports": [[611, "imports"], [613, "imports"], [614, "imports"], [615, "imports"], [617, "imports"]], "GOES data access": [[611, "goes-data-access"]], "CSAPR data access": [[611, "csapr-data-access"]], "Load LMA Flash data": [[611, "load-lma-flash-data"]], "June 17th case": [[611, "june-17th-case"]], "June 17 RHI": [[611, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[612, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[612, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[612, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[612, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[612, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[612, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[612, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[612, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[612, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[612, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[612, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[612, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[613, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[613, "motivation"], [617, "motivation"], [619, "motivation"], [620, "motivation"]], "NEXRAD Data Access - fsspec": [[613, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[613, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[613, "read-in-a-file"]], "Visualize the Dataset": [[613, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[613, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[613, "configure-the-search"]], "Search and Download the Data": [[613, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[613, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[613, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[613, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[613, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[613, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[613, "create-an-animation-of-the-images"]], "View the Final Animation": [[613, "view-the-final-animation"]], "Conclusion": [[613, "conclusion"], [615, "conclusion"], [617, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[614, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[614, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[614, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[614, "plot-using-pyart"]], "Load in the data using pyart": [[614, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[614, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[614, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[614, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[614, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[614, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[614, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[614, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[614, "create-our-holoviews-plots"]], "View the Final Visualization": [[614, "view-the-final-visualization"]], "Try Using Rasterize": [[614, "try-using-rasterize"]], "Key Takeaways": [[614, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[615, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[615, "the-data"]], "Data Access": [[615, "data-access"]], "Recreate the Issue Using PyART": [[615, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[615, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[615, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[615, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[615, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[615, "add-in-the-alpha-argument"]], "Dig into the Issue": [[615, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[615, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[615, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[615, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[615, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[615, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[615, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[615, "fixing-the-issue-in-pyart"]], "New Docs": [[616, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[617, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[617, "the-outbreak"]], "Focusing on Southern Wisconsin": [[617, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[617, "reproducing-event-images"]], "Visualizing the Event": [[617, "visualizing-the-event"]], "Access the Data": [[617, "access-the-data"]], "Download the Road Data": [[617, "download-the-road-data"]], "Add the Interstate Date as a feature": [[617, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[617, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[617, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[617, "run-our-plotting-functions"]], "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART": [[618, "creating-animated-gifs-with-nexrad-level-2-radar-data-using-py-art"]], "Overview": [[618, "overview"]], "Within this blog post, we will cover:": [[618, "within-this-blog-post-we-will-cover"]], "1: Accessing NEXRAD data from AWS": [[618, "accessing-nexrad-data-from-aws"]], "2: How to read the data into Py-ART and create plots": [[618, "how-to-read-the-data-into-py-art-and-create-plots"]], "3: How to create animated gifs with acquired radar data from Py-ART": [[618, "how-to-create-animated-gifs-with-acquired-radar-data-from-py-art"]], "Prerequisites": [[618, "prerequisites"]], "Set up the AWS S3 filysystem": [[618, "set-up-the-aws-s3-filysystem"]], "Selecting your date, station, and time period": [[618, "selecting-your-date-station-and-time-period"]], "OPTIONAL* setting up individual locations to be plotted on your map": [[618, "optional-setting-up-individual-locations-to-be-plotted-on-your-map"]], "Generating your file list": [[618, "generating-your-file-list"]], "Checking your plottable radar products": [[618, "checking-your-plottable-radar-products"]], "Reading the data into PyART": [[618, "reading-the-data-into-pyart"]], "Looping through the radar data": [[618, "looping-through-the-radar-data"]], "Plotting code with added features and plotted points": [[618, "plotting-code-with-added-features-and-plotted-points"]], "Customizing the range of plotted data": [[618, "customizing-the-range-of-plotted-data"]], "Counties": [[618, "counties"]], "Location plotting": [[618, "location-plotting"]], "Zooming": [[618, "zooming"]], "Colorbar": [[618, "colorbar"]], "NOTE": [[618, "note"]], "Full code block constructed properly within the for loop.": [[618, "full-code-block-constructed-properly-within-the-for-loop"]], "GIF creation": [[618, "gif-creation"]], "Code in whole": [[618, "code-in-whole"]], "Summary": [[618, "summary"]], "Investigating ARM Scanning Cloud Radar Data from EPCAPE": [[619, "investigating-arm-scanning-cloud-radar-data-from-epcape"]], "The Problem": [[619, "the-problem"], [620, "the-problem"]], "The Solution": [[619, "the-solution"], [620, "the-solution"]], "Searching for data through the DQ Plot Browser": [[619, "searching-for-data-through-the-dq-plot-browser"]], "Use ACT to retrieve data from EPCAPE": [[619, "use-act-to-retrieve-data-from-epcape"]], "Retrieve you API token from ARM Live": [[619, "retrieve-you-api-token-from-arm-live"]], "Pass your Credentials into the Search": [[619, "pass-your-credentials-into-the-search"]], "Read the Data into Py-ART": [[619, "read-the-data-into-py-art"]], "Take a Peak at the Scan Strategy": [[619, "take-a-peak-at-the-scan-strategy"]], "Sort the Scans by Scan Strategy": [[619, "sort-the-scans-by-scan-strategy"]], "Plot all of the PPI Scans": [[619, "plot-all-of-the-ppi-scans"]], "Plot all the RHI Scans": [[619, "plot-all-the-rhi-scans"]], "Apply Corrections to the Velocity Data": [[619, "apply-corrections-to-the-velocity-data"]], "Explore a Threshold for SNR": [[619, "explore-a-threshold-for-snr"]], "Plot our Revised, Cleaned Data": [[619, "plot-our-revised-cleaned-data"]], "Plot where the RHI scan is slicing through using the PPI for a frame of reference": [[619, "plot-where-the-rhi-scan-is-slicing-through-using-the-ppi-for-a-frame-of-reference"]], "Conclusions": [[619, "conclusions"], [620, "conclusions"]], "Blog Post Template": [[620, "blog-post-template"]], "Changelog": [[621, "changelog"]], "Py-ART 1.18.1": [[621, "py-art-1-18-1"]], "Enhancements made": [[621, "enhancements-made"], [621, "id1"], [621, "id5"], [621, "id9"], [621, "id14"], [621, "id29"], [621, "id35"], [621, "id46"], [621, "id49"], [621, "id54"], [621, "id59"], [621, "id62"], [621, "id66"], [621, "id79"], [621, "id89"], [621, "id99"], [621, "id105"], [621, "id111"], [621, "id119"], [621, "id132"], [621, "id136"], [621, "id140"], [621, "id146"], [621, "id152"], [621, "id161"], [621, "id168"], [621, "id175"], [621, "id181"], [621, "id188"], [621, "id194"], [621, "id200"]], "Bugs fixed": [[621, "bugs-fixed"], [621, "id2"], [621, "id6"], [621, "id10"], [621, "id15"], [621, "id22"], [621, "id26"], [621, "id30"], [621, "id36"], [621, "id41"], [621, "id50"], [621, "id55"], [621, "id60"], [621, "id67"], [621, "id72"], [621, "id76"], [621, "id80"], [621, "id85"], [621, "id90"], [621, "id95"], [621, "id100"], [621, "id106"], [621, "id112"], [621, "id116"], [621, "id120"], [621, "id124"], [621, "id129"], [621, "id133"], [621, "id137"], [621, "id141"], [621, "id147"], [621, "id153"], [621, "id157"], [621, "id162"], [621, "id169"], [621, "id176"], [621, "id182"], [621, "id189"], [621, "id195"]], "Other merged PRs": [[621, "other-merged-prs"], [621, "id3"], [621, "id7"], [621, "id12"], [621, "id17"], [621, "id20"], [621, "id24"], [621, "id27"], [621, "id32"], [621, "id37"], [621, "id44"], [621, "id47"], [621, "id52"], [621, "id57"], [621, "id64"], [621, "id70"], [621, "id74"], [621, "id77"], [621, "id83"], [621, "id87"], [621, "id93"], [621, "id97"], [621, "id103"], [621, "id109"], [621, "id114"], [621, "id122"], [621, "id127"], [621, "id134"], [621, "id144"], [621, "id150"], [621, "id155"], [621, "id159"], [621, "id166"], [621, "id173"], [621, "id179"], [621, "id186"], [621, "id192"], [621, "id198"]], "Contributors to this release": [[621, "contributors-to-this-release"], [621, "id4"], [621, "id8"], [621, "id13"], [621, "id18"], [621, "id21"], [621, "id25"], [621, "id28"], [621, "id33"], [621, "id34"], [621, "id38"], [621, "id40"], [621, "id45"], [621, "id48"], [621, "id53"], [621, "id58"], [621, "id61"], [621, "id65"], [621, "id71"], [621, "id75"], [621, "id78"], [621, "id84"], [621, "id88"], [621, "id94"], [621, "id98"], [621, "id104"], [621, "id110"], [621, "id115"], [621, "id118"], [621, "id123"], [621, "id128"], [621, "id131"], [621, "id135"], [621, "id139"], [621, "id145"], [621, "id151"], [621, "id156"], [621, "id160"], [621, "id167"], [621, "id174"], [621, "id180"], [621, "id187"], [621, "id193"], [621, "id199"], [621, "id202"]], "Py-ART 1.18.0": [[621, "py-art-1-18-0"]], "Py-ART 1.17.0": [[621, "py-art-1-17-0"]], "Documentation improvements": [[621, "documentation-improvements"], [621, "id11"], [621, "id16"], [621, "id43"], [621, "id51"], [621, "id56"], [621, "id69"], [621, "id82"], [621, "id92"], [621, "id102"], [621, "id108"], [621, "id126"], [621, "id138"], [621, "id143"], [621, "id149"], [621, "id154"], [621, "id158"], [621, "id164"], [621, "id171"], [621, "id178"], [621, "id184"], [621, "id191"], [621, "id197"]], "Py-ART 1.16.1": [[621, "py-art-1-16-1"]], "Py-ART 1.16.0": [[621, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[621, "maintenance-and-upkeep-improvements"], [621, "id19"], [621, "id23"], [621, "id31"], [621, "id39"], [621, "id42"], [621, "id63"], [621, "id68"], [621, "id73"], [621, "id81"], [621, "id86"], [621, "id91"], [621, "id96"], [621, "id101"], [621, "id107"], [621, "id113"], [621, "id117"], [621, "id121"], [621, "id125"], [621, "id130"], [621, "id142"], [621, "id148"], [621, "id163"], [621, "id170"], [621, "id177"], [621, "id183"], [621, "id190"], [621, "id196"], [621, "id201"]], "Py-ART 1.15.2": [[621, "py-art-1-15-2"]], "Py-ART 1.15.1": [[621, "py-art-1-15-1"]], "Py-ART v1.15.0": [[621, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[621, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[621, "py-art-v1-14-5"]], "Merged PRs": [[621, "merged-prs"]], "Py-ART v1.14.4": [[621, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[621, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[621, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[621, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[621, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[621, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[621, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[621, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[621, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[621, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[621, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[621, "py-art-v1-12-5"]], "PyART v1.12.4": [[621, "pyart-v1-12-4"]], "PyART v1.12.2": [[621, "pyart-v1-12-2"]], "PyART v1.12.0": [[621, "pyart-v1-12-0"]], "PyART v1.11.8": [[621, "pyart-v1-11-8"]], "Deprecated features": [[621, "deprecated-features"], [621, "id165"], [621, "id172"], [621, "id185"]], "PyART v1.11.6": [[621, "pyart-v1-11-6"]], "PyART v1.11.5": [[621, "pyart-v1-11-5"]], "PyART v1.11.3": [[621, "pyart-v1-11-3"]], "PyART v1.11.2": [[621, "pyart-v1-11-2"]], "PyART v1.11.1": [[621, "pyart-v1-11-1"]], "PyART v1.11.0": [[621, "pyart-v1-11-0"]], "PyART v1.10.4": [[621, "pyart-v1-10-4"]], "PyART v1.10.3": [[621, "pyart-v1-10-3"]], "PyART v1.10.2": [[621, "pyart-v1-10-2"]], "PyART v1.10.1": [[621, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[621, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[621, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[621, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[621, "pyart-v1-8-0"]], "PyART v1.7.0": [[621, "pyart-v1-7-0"]], "PyART v1.6.0": [[621, "pyart-v1-6-0"]], "PyART v1.5.0": [[621, "pyart-v1-5-0"]], "PyART v1.4.0": [[621, "pyart-v1-4-0"]], "PyART v1.3.0": [[621, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[622, "contributor-s-guide"], [691, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[622, "the-python-arm-radar-toolkit-py-art"], [691, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[622, "important-links"], [691, "important-links"]], "Citing": [[622, "citing"], [691, "citing"]], "Install": [[622, "install"], [680, "install"], [691, "install"]], "Resources": [[622, "resources"], [691, "resources"]], "Code Style": [[622, "code-style"], [691, "code-style"]], "Python File Setup": [[622, "python-file-setup"], [691, "python-file-setup"]], "Testing": [[622, "testing"], [691, "testing"]], "GitHub": [[622, "github"], [691, "github"]], "Py-ART Continuous Integration Setup": [[623, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[624, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[624, "make-the-tagged-git-release"]], "Prepare the release notes": [[624, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[624, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[624, "documentation"]], "Create conda packages on conda-forge": [[624, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[624, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[625, "developer-s-guide"]], "Versions": [[625, "versions"]], "Moment correction examples": [[626, "moment-correction-examples"], [632, "moment-correction-examples"]], "Correct reflectivity attenuation": [[627, "correct-reflectivity-attenuation"]], "Calculating and Plotting a Cloud Mask": [[628, "calculating-and-plotting-a-cloud-mask"]], "Dealias doppler velocities using the Region Based Algorithm": [[629, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "ZDR Bias Calculation": [[630, "zdr-bias-calculation"]], "Computation times": [[631, "computation-times"], [636, "computation-times"], [642, "computation-times"], [663, "computation-times"], [673, "computation-times"], [674, "computation-times"], [679, "computation-times"], [689, "computation-times"]], "Example Gallery": [[632, "example-gallery"]], "Input/Output Examples": [[632, "input-output-examples"], [633, "input-output-examples"]], "Mapping examples": [[632, "mapping-examples"], [637, "mapping-examples"]], "Plotting examples": [[632, "plotting-examples"], [643, "plotting-examples"]], "Retrieval Examples": [[632, "retrieval-examples"], [664, "retrieval-examples"]], "Xradar Examples": [[632, "xradar-examples"], [675, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[634, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[634, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[634, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[635, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[635, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[638, "compare-two-radars-using-gatemapper"]], "Map a single PPI sweep to a Cartesian grid using 2D weighting": [[639, "map-a-single-ppi-sweep-to-a-cartesian-grid-using-2d-weighting"]], "Map a single radar to a Cartesian grid": [[640, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[641, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[644, "choose-a-colormap-for-your-plot"]], "Plot a Corner Reflector": [[645, "plot-a-corner-reflector"]], "Plot a Cross Section from a Grid": [[646, "plot-a-cross-section-from-a-grid"]], "Plot Max-CAPPI": [[647, "plot-max-cappi"]], "Modify a Colorbar for your Plot": [[648, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[649, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[650, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[651, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[652, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[653, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[654, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[655, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [656, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[657, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [658, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[659, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[660, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[661, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[662, "plot-a-cross-section-from-a-ppi-volume"]], "Creating a CFAD diagram": [[665, "creating-a-cfad-diagram"]], "Velocity example": [[665, "velocity-example"]], "Validation": [[665, "validation"]], "Extract a radar column above a point": [[666, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[667, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[668, "convective-stratiform-classification"]], "How the algorithm works": [[668, "how-the-algorithm-works"], [669, "how-the-algorithm-works"]], "Examples": [[668, "examples"]], "Summary of recommendations and best practices": [[668, "summary-of-recommendations-and-best-practices"], [669, "summary-of-recommendations-and-best-practices"]], "References": [[668, "references"], [669, "references"]], "Feature Detection classification": [[669, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[669, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[669, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[670, "calculate-and-plot-hydrometeor-classification"]], "Hydrometeor Classification with Custom Frequency Settings": [[671, "hydrometeor-classification-with-custom-frequency-settings"]], "Calculate and Plot VAD profile": [[672, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[676, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[677, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[678, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[680, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[680, "what-is-py-art"]], "Citing Py-ART": [[680, "citing-py-art"]], "What can Py-ART do?": [[680, "what-can-py-art-do"]], "Short Courses": [[680, "short-courses"]], "Dependencies": [[680, "dependencies"]], "Optional Dependences": [[680, "optional-dependences"]], "Getting help": [[680, "getting-help"]], "Contributing": [[680, "contributing"]], "Notebook Gallery": [[681, "notebook-gallery"]], "Notebooks": [[681, null]], "Creating a basic ingest of a NetCDF file": [[682, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[683, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[684, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[686, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[687, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[688, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[690, "building-and-installing-py-art"]], "Required Dependencies": [[690, "required-dependencies"]], "Optional Dependencies": [[690, "optional-dependencies"]], "Obtaining the latest source": [[690, "obtaining-the-latest-source"]], "Installing from Source": [[690, "installing-from-source"]], "Frequently asked questions": [[690, "frequently-asked-questions"]], "User Guide": [[692, "user-guide"]], "Py-ART 2.0": [[693, "py-art-2-0"]], "How to Try Py-ART 2.0": [[693, "how-to-try-py-art-2-0"]], "Input/Output (IO)": [[693, "input-output-io"]], "Correct": [[693, "correct"]], "Graph": [[693, "graph"]], "Setting up an Environment": [[694, "setting-up-an-environment"]], "Anaconda": [[694, "anaconda"]], "Setting a Channel": [[694, "setting-a-channel"]], "Creating an Environment": [[694, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[694, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[694, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [127, "module-pyart.correct"], [176, "module-pyart.exceptions"], [177, "module-pyart.filters"], [212, "module-pyart.graph"], [371, "module-pyart.io"], [392, "module-pyart.lazydict"], [416, "module-pyart.map"], [429, "module-pyart.retrieve"], [471, "module-pyart.testing"], [574, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[121, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[123, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[124, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[126, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[127, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[128, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[141, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[142, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[144, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[145, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[155, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[156, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[157, "pyart.correct.GateFilter.include_valid"]], "calc_cloud_mask() (in module pyart.correct)": [[158, "pyart.correct.calc_cloud_mask"]], "calc_noise_floor() (in module pyart.correct)": [[159, "pyart.correct.calc_noise_floor"]], "calc_zdr_offset() (in module pyart.correct)": [[160, "pyart.correct.calc_zdr_offset"]], "calculate_attenuation() (in module pyart.correct)": [[161, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[162, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[163, "pyart.correct.calculate_attenuation_zphi"]], "cloud_threshold() (in module pyart.correct)": [[164, "pyart.correct.cloud_threshold"]], "correct_bias() (in module pyart.correct)": [[165, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[166, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[167, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[168, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[169, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[170, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[171, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[172, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[173, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[174, "pyart.correct.phase_proc_lp_gf"]], "range_correction() (in module pyart.correct)": [[175, "pyart.correct.range_correction"]], "pyart.exceptions": [[176, "module-pyart.exceptions"]], "pyart.filters": [[177, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[178, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[184, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[194, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[195, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[198, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[199, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[200, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[201, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[202, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[203, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[204, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[205, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[206, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[207, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[208, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[209, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[210, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[211, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[212, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[213, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[221, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[225, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[233, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[234, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[235, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[236, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[237, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[238, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[239, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[240, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[241, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[242, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[243, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[254, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[255, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[256, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[257, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[258, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "plot_maxcappi() (pyart.graph.gridmapdisplay method)": [[259, "pyart.graph.GridMapDisplay.plot_maxcappi"]], "gridmapdisplaybasemap (class in pyart.graph)": [[260, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[268, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[269, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[270, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[271, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[272, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[273, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[274, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[282, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[290, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[291, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[292, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[293, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[294, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[295, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[296, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[297, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[298, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[299, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[300, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[301, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[302, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[303, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[310, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[311, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[320, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[321, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[325, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[326, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[327, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[328, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[329, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[330, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[331, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[332, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[333, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[334, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[335, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[336, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[342, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[343, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[344, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[361, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[362, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[363, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[364, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[365, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[366, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[367, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[368, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[369, "pyart.graph.plot_convstrat_scheme"]], "plot_maxcappi() (in module pyart.graph)": [[370, "pyart.graph.plot_maxcappi"]], "pyart.io": [[371, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[372, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[373, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[374, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[375, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[376, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[377, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[378, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[379, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[380, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[381, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[382, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[383, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[384, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[385, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[386, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[387, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[388, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[389, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[390, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[391, "pyart.io.write_uf"]], "pyart.lazydict": [[392, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[393, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[394, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[395, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[396, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[397, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[398, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[399, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[400, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[401, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[406, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[407, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[408, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[409, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[410, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[411, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[412, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[413, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[414, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[415, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[416, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[417, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[418, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[419, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[420, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[421, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[422, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[423, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[424, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[425, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[426, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[427, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[428, "pyart.map.map_to_grid"]], "pyart.retrieve": [[429, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[430, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[431, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[432, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[433, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[434, "pyart.retrieve.compute_cdr"]], "compute_evp() (in module pyart.retrieve)": [[435, "pyart.retrieve.compute_evp"]], "compute_l() (in module pyart.retrieve)": [[436, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[437, "pyart.retrieve.compute_noisedBZ"]], "compute_qvp() (in module pyart.retrieve)": [[438, "pyart.retrieve.compute_qvp"]], "compute_rqvp() (in module pyart.retrieve)": [[439, "pyart.retrieve.compute_rqvp"]], "compute_snr() (in module pyart.retrieve)": [[440, "pyart.retrieve.compute_snr"]], "compute_svp() (in module pyart.retrieve)": [[441, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[442, "pyart.retrieve.compute_ts_along_coord"]], "compute_vp() (in module pyart.retrieve)": [[443, "pyart.retrieve.compute_vp"]], "conv_strat_raut() (in module pyart.retrieve)": [[444, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[445, "pyart.retrieve.conv_strat_yuter"]], "create_cfad() (in module pyart.retrieve)": [[446, "pyart.retrieve.create_cfad"]], "dealias_spectra() (in module pyart.retrieve)": [[447, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[448, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[449, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[450, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[451, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[452, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[453, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[454, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[455, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[456, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[457, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[458, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[459, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[460, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[461, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[462, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[463, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[464, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[465, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[466, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[467, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[468, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[469, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[470, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[471, "module-pyart.testing"]], "grid (class in pyart.testing)": [[472, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[473, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[474, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[475, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[476, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[477, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[478, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[479, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[480, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[481, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[482, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[483, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[484, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[491, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[492, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[493, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[494, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[495, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[496, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[497, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[498, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[499, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[500, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[501, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[502, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[503, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[504, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[505, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[506, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[507, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[508, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[509, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[510, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[511, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[512, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[513, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[514, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[515, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[516, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[517, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[518, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[519, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[520, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[521, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[522, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[523, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[524, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[525, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[526, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[527, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[528, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[529, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[530, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[531, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[532, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[533, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[534, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[535, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[536, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[537, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[538, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[539, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[540, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[541, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[542, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[543, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[544, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[545, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[546, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[547, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[548, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[549, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[550, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[551, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[552, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[553, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[554, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[555, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[556, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[557, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[558, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[559, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[560, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[561, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[562, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[563, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[564, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[565, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[566, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[567, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[568, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[569, "pyart.testing.make_target_radar"]], "make_target_rhi_radar() (in module pyart.testing)": [[570, "pyart.testing.make_target_rhi_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[571, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[572, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[573, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[574, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[575, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[576, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[577, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[578, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[579, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[580, "pyart.util.column_vertical_profile"]], "compute_directional_stats() (in module pyart.util)": [[581, "pyart.util.compute_directional_stats"]], "cross_section_ppi() (in module pyart.util)": [[582, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[583, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[584, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[585, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[586, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[587, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[588, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[589, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[590, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[591, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[592, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[593, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[594, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[595, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[596, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[597, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[598, "pyart.util.join_radar"]], "ma_broadcast_to() (in module pyart.util)": [[599, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[600, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[601, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[602, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[603, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[604, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[605, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[606, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[607, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[608, "pyart.util.to_vpt"]]}})