Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_snr", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"stream": [0, 62, 364, 478], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 198, 199, 200, 201, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 384, 392, 395, 396, 402, 405, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 449, 459, 461, 464, 472, 473, 490, 556, 557, 567, 575, 577, 585, 587, 589, 591, 592, 613, 622, 632, 649, 651], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 212, 214, 215, 216, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 313, 314, 315, 317, 318, 325, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 390, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585, 586, 587, 589, 591, 592, 594, 597, 598, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641, 643, 644, 645, 647, 648, 649, 651, 653], "print": [0, 62, 155, 166, 167, 233, 249, 373, 438, 442, 478, 583, 585, 586, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 632, 644, 648, 649], "out": [0, 62, 163, 167, 198, 201, 375, 376, 377, 378, 379, 419, 433, 478, 585, 586, 587, 589, 591, 592, 607, 608, 612, 623, 631, 633, 641, 647, 650, 651, 652], "version": [0, 12, 31, 202, 407, 449, 549, 583, 584, 590, 591, 592, 594, 641, 649, 650, 651, 653], "statu": [0, 584, 592, 651], "inform": [0, 24, 31, 45, 62, 74, 140, 152, 155, 160, 166, 167, 183, 195, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 365, 373, 376, 438, 444, 449, 461, 478, 490, 583, 587, 590, 591, 592, 595, 603, 623, 641, 651], "debug": [0, 155, 160, 166, 167, 233, 249, 373, 438, 591], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 121, 123, 124, 131, 140, 141, 142, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 174, 183, 184, 185, 198, 199, 200, 201, 216, 242, 276, 292, 305, 317, 325, 338, 350, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 392, 394, 402, 405, 407, 413, 414, 418, 419, 424, 433, 438, 439, 440, 444, 446, 449, 451, 461, 463, 464, 467, 468, 470, 472, 473, 474, 490, 542, 554, 555, 563, 567, 570, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 602, 603, 606, 607, 611, 612, 613, 614, 617, 623, 630, 632, 637, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 417, 424, 437, 438, 439, 440, 441, 444, 445, 448, 458, 461, 478, 490, 536, 575, 583, 584, 586, 587, 589, 591, 594, 597, 599, 600, 602, 603, 604, 607, 609, 610, 611, 614, 616, 619, 625, 626, 627, 628, 631, 632, 633, 634, 635, 638, 639, 640, 641, 642, 648, 649, 650, 653], "can": [0, 12, 16, 29, 45, 54, 57, 74, 121, 123, 124, 127, 140, 152, 156, 157, 160, 163, 165, 170, 183, 195, 198, 199, 200, 201, 216, 276, 305, 338, 360, 367, 368, 370, 373, 377, 378, 379, 413, 414, 438, 439, 440, 442, 447, 461, 470, 473, 490, 583, 584, 585, 586, 587, 589, 591, 592, 594, 602, 603, 606, 611, 630, 632, 637, 643, 644, 645, 647, 648, 649, 650, 651, 653], "run": [0, 229, 424, 448, 584, 586, 591, 592, 593, 594, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641, 650, 651, 653], "script": [0, 29, 591, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 122, 125, 127, 131, 133, 140, 141, 147, 152, 155, 156, 157, 159, 160, 161, 162, 165, 166, 167, 169, 170, 174, 176, 183, 184, 190, 195, 198, 199, 200, 201, 203, 217, 218, 219, 224, 227, 228, 229, 230, 233, 241, 242, 244, 246, 248, 249, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 314, 316, 317, 320, 321, 322, 325, 339, 340, 341, 347, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 390, 392, 395, 402, 404, 407, 409, 410, 411, 413, 414, 417, 418, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 438, 440, 441, 442, 444, 445, 446, 447, 449, 452, 457, 461, 463, 466, 470, 471, 472, 473, 490, 542, 554, 555, 556, 557, 563, 564, 565, 566, 567, 568, 569, 570, 575, 584, 586, 587, 589, 591, 592, 594, 598, 600, 601, 603, 604, 605, 606, 607, 608, 610, 611, 613, 614, 616, 619, 625, 626, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 641, 643, 647, 648, 649, 651, 653], "directori": [0, 29, 459, 581, 583, 584, 590, 591, 592, 602, 650, 651], "report": [0, 1, 292, 325, 372, 447, 589, 591, 592, 641, 651], "dependeci": 0, "befor": [0, 31, 56, 160, 164, 167, 405, 424, 446, 449, 472, 585, 586, 587, 592, 606, 632, 641, 645, 649, 651], "build": [0, 121, 123, 124, 127, 131, 133, 140, 147, 152, 170, 174, 176, 183, 190, 195, 379, 585, 589, 591, 592, 594, 641, 651, 652], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 121, 122, 123, 124, 125, 127, 140, 152, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 203, 205, 207, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 296, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 329, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 405, 412, 413, 414, 416, 417, 419, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 461, 463, 470, 472, 473, 490, 542, 549, 554, 555, 556, 557, 563, 570, 575, 577, 578, 579, 580, 584, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 600, 601, 602, 603, 605, 609, 610, 611, 612, 614, 617, 618, 620, 621, 622, 623, 624, 628, 630, 632, 636, 640, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653], "python": [0, 29, 377, 583, 585, 586, 587, 589, 590, 591, 594, 597, 598, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 643, 644, 645, 647, 648, 649, 650, 653], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 417, 418, 424, 435, 436, 437, 438, 439, 440, 441, 444, 445, 449, 461, 490, 549, 555, 565, 566, 575, 581, 586, 587, 589, 590, 595, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 640, 642, 643, 644, 645, 647, 652, 653], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 458, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 478, 490, 493, 535, 536, 537, 538, 539, 540, 550, 551, 552, 553, 554, 555, 556, 557, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 583, 585, 586, 591, 592, 626, 632, 644, 645, 647, 649, 650, 651], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 121, 122, 124, 125, 161, 162, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 386, 387, 397, 398, 419, 478, 545, 546, 547, 548, 550, 551, 552, 553, 563, 568, 585, 586, 587, 590, 591, 592, 602, 603, 606, 641, 643, 645, 647, 651], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 127, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 198, 199, 200, 201, 203, 218, 233, 241, 244, 249, 256, 263, 278, 292, 307, 317, 325, 340, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 386, 387, 390, 393, 397, 398, 403, 405, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 442, 443, 445, 446, 447, 448, 449, 450, 457, 458, 462, 463, 464, 466, 467, 468, 470, 478, 487, 515, 533, 537, 538, 539, 540, 542, 555, 563, 565, 566, 567, 570, 571, 574, 577, 579, 580, 583, 584, 586, 587, 589, 591, 592, 602, 606, 613, 614, 618, 619, 620, 621, 622, 623, 624, 625, 626, 630, 632, 633, 641, 642, 643, 647, 648, 651], "sy": 0, "stdout": [0, 62, 478], "descript": [1, 16, 18, 30, 126, 168, 169, 202, 359, 380, 404, 415, 448, 549, 575, 587, 592, 594, 641, 651], "addit": [1, 2, 7, 8, 12, 14, 19, 160, 161, 162, 164, 216, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 358, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 405, 412, 414, 424, 567, 583, 585, 586, 591, 594, 600, 602, 629, 632, 641], "class": [1, 18, 19, 30, 31, 41, 45, 74, 126, 127, 169, 170, 202, 203, 233, 244, 249, 263, 292, 317, 325, 380, 381, 394, 404, 405, 406, 408, 413, 437, 448, 449, 459, 461, 490, 581, 585, 586, 587, 591, 592, 641, 647, 648, 651], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 126, 164, 165, 169, 198, 199, 200, 201, 202, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 276, 277, 284, 288, 289, 292, 305, 306, 316, 321, 322, 325, 338, 339, 349, 354, 355, 358, 359, 361, 364, 367, 368, 374, 377, 404, 405, 409, 410, 411, 413, 414, 415, 419, 424, 438, 440, 446, 448, 472, 549, 555, 566, 567, 570, 574, 575, 580, 581, 586, 587, 591, 592, 611, 630, 632, 637, 641, 645, 647, 649, 650, 651], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 127, 141, 142, 170, 184, 185, 217, 228, 277, 288, 306, 321, 339, 354, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 583, 589, 591, 597, 598, 600, 601, 604, 606, 607, 608, 611, 612, 613, 614, 617, 619, 622, 623, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641, 643, 644, 645, 647, 648, 649], "write": [1, 15, 359, 375, 376, 377, 378, 379, 448, 459, 590, 591, 600, 601, 644], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 131, 140, 152, 158, 159, 160, 161, 162, 174, 183, 195, 203, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 258, 260, 262, 263, 277, 279, 284, 287, 288, 289, 292, 306, 308, 316, 317, 320, 321, 322, 325, 339, 341, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 404, 405, 412, 414, 416, 419, 425, 428, 433, 438, 439, 440, 442, 443, 444, 447, 449, 450, 461, 462, 463, 466, 467, 468, 470, 471, 472, 473, 474, 483, 484, 486, 490, 511, 512, 514, 536, 542, 567, 577, 580, 591, 592, 597, 598, 600, 601, 604, 606, 607, 608, 610, 611, 612, 613, 614, 616, 617, 619, 620, 621, 622, 623, 625, 627, 629, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 644, 645, 649, 651], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 163, 164, 166, 167, 216, 220, 224, 225, 227, 228, 229, 230, 242, 276, 280, 284, 285, 287, 288, 289, 305, 309, 316, 317, 318, 320, 321, 322, 338, 342, 349, 350, 351, 353, 354, 355, 359, 364, 371, 377, 378, 412, 413, 414, 422, 436, 438, 440, 449, 461, 467, 468, 470, 471, 472, 473, 474, 490, 537, 538, 539, 540, 555, 563, 580, 583, 586, 587, 589, 592, 594, 595, 611, 613, 641, 649, 651], "format": [1, 12, 13, 39, 40, 45, 74, 205, 207, 217, 219, 224, 227, 228, 229, 230, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 359, 361, 370, 372, 374, 375, 376, 378, 457, 458, 461, 490, 583, 585, 586, 587, 591, 594, 623, 641, 643], "These": [1, 29, 127, 160, 170, 255, 377, 414, 585, 592, 602, 611, 632, 641, 648, 650, 651], "auxiliari": 1, "input": [1, 166, 167, 377, 436, 437, 440, 567, 583, 585, 632, 648], "output": [1, 13, 62, 159, 377, 419, 437, 478, 564, 584, 586, 589, 591, 641], "routin": [1, 12, 169, 375, 413, 591, 641], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 122, 125, 140, 152, 155, 156, 157, 160, 161, 162, 164, 165, 167, 169, 183, 195, 198, 199, 200, 201, 202, 217, 223, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 277, 283, 284, 288, 289, 306, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 345, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 383, 411, 412, 413, 414, 416, 418, 419, 424, 426, 427, 428, 430, 431, 438, 440, 444, 449, 461, 472, 474, 490, 538, 539, 540, 556, 557, 563, 564, 568, 569, 576, 580, 583, 584, 585, 586, 587, 589, 590, 591, 592, 594, 598, 600, 602, 603, 606, 611, 613, 614, 622, 625, 630, 632, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653], "well": [1, 163, 165, 198, 199, 200, 201, 350, 369, 371, 414, 583, 585, 591, 592, 603, 612, 641, 647, 648, 651], "polish": 1, "those": [1, 48, 55, 141, 142, 161, 162, 184, 185, 373, 413, 464, 471, 581, 587, 589, 653], "io": [1, 127, 170, 412, 583, 584, 585, 586, 587, 589, 591, 592, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641, 644, 645, 647, 648, 649, 650, 651, 653], "thei": [1, 4, 58, 131, 133, 140, 160, 161, 162, 164, 174, 176, 183, 350, 365, 373, 379, 438, 474, 587, 589, 592, 632, 651], "mai": [1, 29, 131, 133, 140, 147, 152, 160, 161, 174, 176, 183, 190, 195, 292, 325, 369, 371, 377, 381, 414, 440, 549, 587, 589, 594, 632, 641], "requir": [1, 31, 45, 74, 121, 123, 124, 160, 163, 164, 373, 377, 414, 446, 449, 461, 490, 563, 583, 584, 591, 592, 603, 641, 651, 653], "depend": [1, 156, 157, 414, 427, 583, 587, 591, 592, 594, 651], "beyond": [1, 650], "standard": [1, 40, 45, 62, 74, 119, 120, 160, 375, 376, 377, 419, 439, 458, 461, 478, 490, 552, 553, 569, 583, 587, 591, 592, 643, 644, 645, 651], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 417, 418, 424, 435, 436, 437, 438, 439, 440, 441, 444, 445, 449, 461, 490, 549, 555, 565, 566, 575, 581, 587, 589, 595, 597, 598, 600, 601, 602, 603, 610, 611, 613, 630, 636, 640, 642, 643, 644, 645, 647, 652, 653], "instal": [1, 10, 121, 123, 124, 163, 164, 377, 586, 589, 591, 594, 652, 653], "non": [1, 121, 123, 124, 162, 373, 375, 424, 438, 440, 587, 591, 632], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 202, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 444, 445, 449, 450, 461, 462, 463, 465, 470, 478, 490, 493, 536, 549, 567, 575, 579, 583, 586, 587, 589, 590, 591, 602, 644, 649], "support": [1, 244, 317, 350, 361, 368, 369, 370, 371, 372, 380, 381, 405, 438, 585, 587, 589, 591, 592, 622, 641, 643, 644, 645, 647, 648, 649, 650, 651], "fulli": [1, 367, 589, 650], "test": [1, 12, 160, 364, 369, 371, 381, 584, 587, 591, 593, 594, 597, 598, 606, 607, 608, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 637, 638, 639, 641, 643], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 127, 130, 137, 140, 144, 149, 152, 160, 161, 162, 164, 165, 166, 167, 170, 173, 180, 183, 187, 192, 195, 200, 217, 223, 224, 227, 228, 229, 230, 244, 277, 283, 284, 287, 288, 289, 306, 312, 316, 317, 320, 321, 322, 339, 345, 349, 350, 353, 354, 355, 358, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 382, 394, 395, 412, 413, 414, 418, 424, 433, 436, 438, 440, 449, 451, 461, 464, 472, 473, 490, 563, 581, 583, 584, 585, 586, 587, 588, 591, 592, 594, 600, 611, 630, 631, 632, 634, 641, 649, 651, 653], "pleas": [1, 56, 292, 325, 472, 583, 584, 587, 589, 592, 641, 643, 644, 645, 647, 648, 649, 651], "your": [1, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585, 586, 587, 590, 592, 594, 600, 610, 612, 628, 632, 641, 650, 651, 653], "own": [1, 12, 586, 594, 611, 641, 650], "risk": [1, 585], "bug": [1, 586, 592, 595, 641, 650, 651], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 127, 131, 141, 142, 159, 160, 161, 162, 167, 170, 174, 184, 185, 203, 243, 257, 317, 350, 358, 359, 360, 373, 376, 378, 379, 413, 414, 424, 438, 439, 440, 442, 444, 446, 447, 449, 461, 463, 470, 490, 563, 587, 590, 591, 592, 594, 611, 632, 641, 650, 651, 653], "fix": [1, 583, 586, 592, 593, 595, 600, 601, 604, 625, 643, 650, 651, 653], "them": [1, 4, 5, 6, 56, 160, 161, 162, 163, 233, 249, 317, 350, 364, 373, 414, 472, 586, 592, 594, 611, 641, 651, 653], "prioriti": [1, 653], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 205, 237, 250, 265, 294, 317, 327, 350, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 458, 583, 584, 585, 587, 591, 592, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 651], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 158, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 450, 462, 463, 465, 470, 486, 493, 514, 577, 606, 647], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 129, 131, 133, 139, 140, 141, 142, 143, 145, 147, 152, 153, 155, 160, 161, 162, 166, 167, 170, 172, 174, 176, 182, 183, 184, 185, 186, 188, 190, 195, 196, 205, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 277, 279, 284, 287, 288, 289, 294, 306, 308, 316, 317, 320, 321, 322, 327, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 413, 414, 418, 424, 427, 430, 438, 439, 440, 442, 450, 451, 458, 459, 462, 463, 464, 467, 468, 470, 472, 473, 474, 547, 548, 558, 559, 560, 561, 562, 570, 580, 583, 585, 586, 587, 589, 591, 592, 613, 620, 622, 623, 625, 632, 643, 644, 648, 649, 651], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 464, 591], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 160, 161, 162, 216, 217, 218, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 276, 277, 278, 284, 288, 289, 305, 306, 307, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 340, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 412, 413, 414, 438, 558, 559, 560, 561, 562, 586, 587, 591], "d3r": [2, 591], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 362, 363, 364, 366, 370, 375, 376, 433, 458, 558, 561, 583, 591, 641, 642], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 40, 45, 46, 47, 49, 54, 74, 77, 121, 123, 124, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 439, 440, 441, 444, 445, 449, 450, 458, 461, 462, 463, 465, 470, 490, 493, 536, 567, 575, 577, 579, 585, 587, 589, 591], "odim_h5": [2, 8, 591], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 121, 123, 124, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 203, 263, 292, 317, 325, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 381, 413, 414, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 443, 444, 445, 449, 450, 452, 457, 461, 462, 490, 575, 583, 587, 643], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 122, 123, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 170, 174, 176, 183, 190, 195, 217, 224, 228, 229, 230, 232, 242, 244, 246, 248, 255, 258, 260, 262, 277, 284, 288, 289, 291, 306, 314, 315, 316, 317, 318, 321, 322, 324, 339, 347, 348, 349, 350, 354, 355, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 444, 445, 447, 449, 450, 451, 458, 461, 462, 463, 464, 467, 468, 470, 472, 473, 478, 490, 556, 557, 563, 570, 575, 579, 580, 586, 587, 591, 632, 649], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 121, 123, 124, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 385, 412, 413, 414, 417, 418, 424, 426, 427, 428, 429, 430, 431, 432, 441, 443, 444, 445, 449, 450, 461, 462, 463, 465, 490, 493, 535, 575, 603, 644, 649], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 122, 125, 222, 244, 255, 282, 292, 311, 313, 314, 315, 317, 318, 325, 344, 346, 347, 348, 350, 351, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 392, 402, 419, 441, 449, 461, 490, 583, 585, 586, 587, 589, 591, 592, 606, 609, 610, 612, 613, 628, 630, 632, 638, 641, 642, 651], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 217, 218, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 276, 277, 278, 279, 284, 287, 288, 289, 292, 293, 294, 295, 296, 297, 302, 305, 306, 307, 308, 316, 317, 320, 321, 322, 325, 326, 327, 328, 329, 330, 335, 338, 339, 340, 341, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 457, 461, 462, 463, 464, 465, 470, 473, 486, 490, 493, 514, 537, 538, 539, 540, 542, 545, 546, 547, 548, 554, 555, 566, 567, 575, 577, 578, 579, 583, 585, 586, 587, 589, 591, 592, 597, 600, 602, 606, 607, 608, 611, 612, 614, 625, 629, 630, 631, 632, 633, 637, 639, 641, 642, 643, 645, 647, 648, 649, 651], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 126, 127, 140, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 202, 203, 216, 217, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 276, 277, 282, 284, 288, 289, 292, 305, 306, 311, 314, 316, 317, 321, 322, 325, 338, 339, 344, 347, 349, 350, 354, 355, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 404, 405, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 457, 490, 533, 538, 539, 540, 542, 545, 546, 547, 548, 555, 556, 557, 560, 562, 564, 565, 566, 567, 570, 571, 575, 576, 577, 578, 579, 580, 583, 584, 587, 589, 591, 596, 597, 598, 600, 601, 602, 603, 605, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 631, 632, 633, 634, 635, 637, 638, 639, 642, 643, 645, 647, 648, 652], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 121, 123, 124, 140, 152, 158, 160, 163, 164, 165, 183, 195, 199, 200, 205, 207, 217, 218, 223, 224, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 283, 284, 288, 289, 294, 296, 306, 307, 312, 315, 316, 317, 321, 322, 327, 329, 339, 340, 345, 348, 349, 350, 354, 355, 358, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 388, 392, 399, 402, 414, 418, 424, 426, 427, 428, 430, 431, 433, 438, 439, 440, 441, 444, 449, 450, 461, 463, 464, 465, 472, 490, 493, 554, 556, 557, 563, 577, 584, 586, 587, 588, 589, 592, 594, 632, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 161, 162, 203, 263, 292, 325, 361, 365, 367, 368, 369, 370, 372, 373, 374, 378, 379, 427, 438, 461, 490, 533, 584, 587, 591, 592, 641, 649, 651], "found": [2, 7, 8, 12, 14, 29, 163, 361, 365, 367, 368, 369, 370, 372, 373, 374, 388, 399, 412, 413, 414, 419, 433, 583, 585, 587, 589, 591, 592, 594, 603, 641, 650, 651, 653], "doe": [2, 7, 8, 12, 14, 49, 77, 121, 123, 124, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 465, 493, 580, 585, 587, 591, 592, 594, 623, 643, 650, 651, 653], "appear": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 570, 587], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 159, 160, 205, 237, 249, 250, 265, 294, 325, 327, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 385, 392, 402, 404, 427, 430, 431, 461, 490, 542, 563, 579, 584, 586, 587, 589, 592, 594, 602, 611, 632, 641, 647, 649, 650, 651, 653], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 121, 122, 123, 124, 125, 127, 129, 131, 132, 133, 135, 138, 140, 143, 145, 146, 147, 150, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 178, 181, 183, 186, 188, 189, 190, 193, 195, 197, 198, 199, 200, 201, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 306, 307, 308, 310, 313, 314, 315, 316, 317, 319, 320, 321, 322, 339, 340, 341, 343, 346, 347, 348, 349, 350, 352, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 394, 399, 400, 413, 414, 416, 418, 419, 422, 424, 427, 430, 431, 435, 437, 438, 439, 440, 444, 446, 449, 461, 464, 490, 538, 539, 540, 554, 563, 567, 568, 569, 583, 585, 586, 587, 591, 592, 603, 606, 611, 614, 630, 631, 632, 637, 644, 645, 648, 651], "place": [2, 7, 8, 12, 14, 218, 222, 223, 241, 243, 256, 257, 278, 282, 283, 307, 311, 312, 340, 344, 345, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 580, 591, 647, 650], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 122, 125, 127, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 198, 199, 200, 201, 203, 233, 242, 249, 263, 292, 315, 325, 348, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 380, 381, 394, 412, 413, 414, 418, 419, 424, 426, 437, 438, 439, 440, 442, 444, 445, 446, 447, 449, 461, 463, 490, 555, 567, 583, 587, 591, 592, 614, 632, 641, 651], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 224, 227, 228, 229, 230, 232, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 284, 287, 288, 289, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 316, 317, 320, 321, 322, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 349, 350, 353, 354, 355, 357, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 384, 396, 414, 416, 417, 419, 424, 427, 430, 431, 433, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 449, 461, 467, 468, 470, 472, 473, 478, 490, 538, 539, 540, 563, 575, 584, 585, 591, 592, 622, 623, 632, 641, 650, 651, 653], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 121, 123, 124, 155, 156, 157, 160, 163, 165, 166, 167, 198, 199, 200, 201, 222, 223, 227, 282, 283, 287, 311, 312, 320, 344, 345, 353, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 379, 413, 414, 418, 437, 438, 444, 449, 461, 490, 554, 555, 583, 586, 587, 590, 591, 612, 613, 630, 632], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 417, 424, 437, 438, 439, 440, 441, 444, 445, 575, 583, 584, 587, 589, 591, 592, 602, 606, 631, 637, 651], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 449, 467, 468, 470, 471, 472, 473, 474, 555, 591, 592, 631, 632, 633, 634, 637, 645, 651], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 155, 156, 157, 160, 161, 162, 166, 167, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 417, 419, 438, 439, 440, 441, 445, 449, 450, 461, 462, 463, 490, 535, 537, 542, 575, 590, 591, 603, 620, 621, 625, 649], "dure": [2, 7, 8, 12, 14, 19, 140, 152, 159, 160, 161, 162, 183, 195, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 424, 432, 438, 444, 583, 650, 653], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 121, 122, 123, 124, 125, 129, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 172, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 199, 200, 205, 207, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 279, 282, 283, 284, 287, 288, 289, 292, 294, 296, 306, 307, 308, 311, 312, 316, 317, 320, 321, 322, 325, 327, 329, 339, 340, 341, 344, 345, 349, 350, 353, 354, 355, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 392, 394, 399, 400, 402, 405, 412, 413, 414, 416, 418, 419, 424, 426, 427, 430, 431, 433, 437, 438, 439, 440, 444, 446, 449, 450, 451, 461, 463, 464, 471, 472, 473, 474, 478, 490, 542, 554, 556, 557, 563, 564, 567, 570, 576, 577, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 591, 592, 594, 597, 602, 603, 606, 611, 612, 613, 614, 617, 622, 623, 630, 632, 643, 644, 645, 647, 648, 649, 650, 651, 653], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 131, 133, 140, 141, 142, 147, 152, 155, 156, 157, 160, 161, 162, 163, 165, 166, 167, 174, 176, 183, 184, 185, 190, 195, 199, 200, 292, 325, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 414, 419, 437, 462, 463, 537, 580, 584, 588, 595, 643], "success": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 594], "unless": [2, 7, 8, 12, 14, 58, 121, 123, 124, 162, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 474, 587], "explicitli": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 127, 131, 133, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 169, 170, 174, 176, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 413, 414, 436, 446, 461, 466, 472, 473, 490, 555, 584, 586, 587, 589, 590, 591, 592, 594, 602, 606, 625, 641, 648, 650, 651], "introduct": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 592, 651], "specif": [2, 7, 8, 12, 14, 140, 152, 155, 156, 157, 183, 195, 325, 350, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 414, 426, 427, 428, 430, 431, 433, 437, 438, 439, 440, 567, 585, 587, 591, 592, 597, 611, 632, 641, 651, 653], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 121, 123, 124, 131, 133, 147, 160, 161, 162, 169, 174, 176, 190, 217, 219, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 277, 279, 284, 288, 289, 306, 308, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 346, 347, 348, 349, 350, 351, 354, 355, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 388, 399, 405, 413, 414, 438, 439, 440, 449, 461, 464, 472, 473, 490, 575, 579, 585, 586, 587, 591, 598, 602, 647, 648, 650], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 131, 133, 140, 147, 152, 155, 160, 161, 162, 166, 167, 170, 174, 176, 183, 190, 195, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 412, 414, 418, 424, 427, 430, 431, 438, 439, 440, 442, 444, 450, 451, 458, 462, 463, 464, 467, 468, 470, 472, 473, 474, 570, 580, 587], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 123, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 412, 413, 414, 418, 424, 427, 430, 431, 438, 439, 440, 444, 449, 450, 451, 458, 459, 461, 462, 463, 464, 467, 468, 470, 472, 473, 474, 490, 547, 548, 570, 580, 583, 584, 585, 586, 587, 589, 591, 592, 613, 620, 621, 622, 623, 632, 634, 637, 644, 645, 649, 651], "mdv": [2, 8, 12, 14, 367, 368, 378, 584, 591, 598, 600, 607, 610, 628, 641, 645, 647], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 121, 123, 124, 140, 152, 160, 162, 183, 195, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 585, 586, 587, 589, 591, 592, 602, 603, 606, 623, 651], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 418, 583, 584, 585, 586, 587, 589, 591, 597, 606], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 122, 125, 155, 156, 157, 158, 160, 161, 162, 163, 198, 201, 222, 242, 282, 311, 344, 350, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 405, 406, 407, 408, 412, 413, 414, 416, 418, 419, 422, 423, 424, 435, 437, 438, 439, 440, 444, 446, 449, 461, 490, 536, 549, 550, 551, 554, 563, 568, 569, 575, 577, 579, 583, 584, 585, 586, 591, 594, 600, 603, 614, 625, 632, 642, 645, 648, 650], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 141, 142, 155, 156, 157, 159, 160, 162, 166, 167, 184, 185, 217, 228, 244, 277, 288, 306, 317, 321, 339, 350, 354, 361, 365, 367, 368, 369, 370, 371, 372, 373, 414, 438, 446, 466, 472, 473, 556, 557, 570, 577, 583, 584, 585, 587, 589, 591, 592, 595, 606, 613, 623, 632, 644, 645, 647, 651], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 131, 133, 140, 147, 152, 155, 156, 157, 160, 174, 176, 183, 190, 195, 217, 228, 249, 277, 288, 306, 317, 321, 339, 354, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 424, 435, 451, 461, 464, 472, 490, 583, 585, 586, 587, 588, 589, 591, 592, 602, 603, 630, 632, 641, 647, 650, 651, 652, 653], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 121, 123, 124, 160, 161, 162, 317, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 383, 385, 388, 389, 390, 392, 394, 399, 400, 402, 413, 414, 433, 449, 450, 461, 462, 463, 490, 542, 585, 587, 643, 644, 648], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 203, 219, 223, 226, 249, 263, 279, 283, 286, 292, 308, 312, 319, 325, 341, 345, 352, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 407, 414, 433, 436, 464, 555, 556, 557, 565, 586, 587, 589, 590, 591, 592, 594, 602, 641, 651, 652], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 149, 152, 155, 156, 157, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 192, 195, 198, 199, 200, 201, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 438, 439, 440, 442, 446, 447, 464, 598, 607, 648], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 158, 161, 162, 164, 165, 166, 167, 199, 200, 217, 218, 224, 227, 228, 229, 230, 241, 256, 277, 278, 284, 287, 288, 289, 306, 307, 316, 317, 320, 321, 322, 339, 340, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 405, 412, 414, 419, 424, 427, 461, 464, 490, 563, 585, 586, 587, 589, 591, 602, 611, 622, 632, 637, 645], "after": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 438, 583, 585, 587, 591, 592, 594, 603, 632, 650, 651, 653], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 231, 232, 242, 244, 277, 279, 284, 287, 288, 289, 290, 291, 306, 308, 316, 317, 320, 321, 322, 323, 324, 339, 341, 349, 350, 353, 354, 355, 356, 357, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 386, 387, 390, 391, 397, 398, 401, 414, 426, 427, 428, 430, 431, 438, 439, 440, 449, 461, 472, 473, 474, 490, 538, 539, 540, 547, 548, 554, 572, 573, 584, 585, 591, 592, 603, 606, 612, 619, 622, 623, 626, 627, 632, 637, 641, 645, 650, 651, 652], "you": [2, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 583, 586, 587, 588, 589, 590, 592, 594, 602, 632, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653], "want": [2, 584, 586, 587, 589, 592, 603, 641, 648, 649, 651, 653], "altitud": [2, 31, 45, 56, 74, 166, 167, 203, 414, 419, 444, 449, 461, 472, 490, 564, 576, 583, 586, 591, 623, 634, 643, 647, 649], "provid": [2, 6, 45, 48, 74, 160, 202, 223, 283, 312, 317, 345, 363, 364, 365, 370, 373, 377, 378, 379, 381, 386, 387, 393, 394, 397, 398, 403, 405, 461, 464, 490, 567, 575, 581, 583, 586, 587, 589, 590, 592, 603, 630, 632, 641, 648, 650, 651], "np": [2, 405, 422, 447, 574, 583, 585, 586, 587, 589, 591, 592, 606, 607, 611, 614, 619, 622, 623, 625, 630, 632, 633, 634, 643, 644, 645, 647, 648, 649, 651], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 164, 170, 174, 176, 183, 184, 185, 190, 195, 203, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 288, 289, 292, 306, 307, 308, 313, 314, 316, 317, 321, 322, 325, 339, 340, 341, 346, 347, 349, 350, 354, 355, 405, 413, 414, 422, 424, 425, 437, 439, 440, 441, 446, 447, 449, 451, 457, 463, 467, 468, 470, 471, 472, 473, 474, 550, 551, 552, 553, 554, 561, 562, 563, 568, 569, 572, 573, 574, 583, 587, 591, 592, 606, 619, 632, 634, 643, 644, 645, 647, 648, 649, 651], "295": [2, 591], "dtype": [2, 412, 414, 583, 586, 587, 591, 643, 645, 649], "float64": [2, 413, 414, 583, 586, 630, 649], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 128, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 198, 199, 200, 201, 204, 205, 206, 207, 208, 237, 238, 239, 240, 250, 251, 252, 253, 264, 265, 266, 267, 268, 293, 294, 295, 296, 297, 326, 327, 328, 329, 330, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 388, 389, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 451, 452, 459, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 489, 503, 504, 505, 506, 511, 512, 513, 514, 515, 516, 517, 533, 535, 536, 537, 538, 539, 540, 542, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 575, 576, 577, 579, 583, 585, 586, 587, 591, 592, 630, 632, 644, 647, 649, 651], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 232, 277, 284, 287, 288, 289, 291, 306, 316, 317, 320, 321, 322, 324, 339, 349, 350, 353, 354, 355, 357, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 394, 412, 413, 414, 416, 417, 418, 419, 424, 426, 427, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 461, 462, 466, 467, 468, 470, 471, 472, 473, 474, 490, 554, 555, 556, 557, 566, 575, 577, 580, 583, 584, 587, 591, 592, 603, 615, 616, 641, 643, 644, 647, 649, 650, 651, 653], "edg": [3, 33, 57, 120, 123, 160, 161, 162, 163, 164, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 436, 440, 451, 473, 585, 586, 587, 622, 623, 632], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 379, 586, 591], "gamic": [4, 591], "hdf5": [4, 8, 591, 641], "unlik": [4, 5, 6, 364], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 160, 161, 162, 163, 164, 165, 200, 217, 219, 224, 227, 228, 229, 230, 244, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 366, 369, 371, 373, 377, 405, 414, 424, 442, 446, 449, 457, 461, 490, 538, 539, 540, 585, 586, 587, 592, 632, 641, 643, 650, 651, 653], "still": [4, 5, 6, 160, 292, 325, 364, 379, 414, 570, 589, 591, 592, 602, 651], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 218, 222, 223, 224, 227, 228, 229, 230, 233, 241, 244, 246, 248, 249, 255, 256, 258, 260, 262, 277, 278, 282, 283, 284, 287, 288, 289, 306, 307, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 360, 361, 363, 364, 369, 370, 373, 374, 376, 377, 378, 379, 381, 409, 410, 411, 412, 413, 414, 417, 418, 433, 437, 438, 439, 440, 444, 445, 446, 449, 451, 461, 466, 470, 483, 484, 486, 487, 490, 511, 512, 514, 515, 554, 555, 556, 557, 563, 565, 566, 567, 568, 569, 575, 579, 583, 584, 585, 586, 587, 589, 591, 592, 594, 598, 602, 603, 606, 611, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 630, 637, 638, 639, 641, 645, 647, 649, 650, 651], "renam": [4, 5, 6, 29, 364, 374, 591], "uniform": [4, 5, 6, 58, 161, 162, 364, 372, 418, 474, 591, 611, 614, 641, 643], "forc": [4, 5, 6, 364, 374, 418, 587, 591], "extract": [4, 217, 277, 306, 339, 373, 433, 555, 556, 557, 566, 589, 591, 600, 606, 627, 629, 632, 635, 641], "valid": [4, 31, 45, 74, 154, 155, 160, 197, 218, 241, 256, 278, 307, 340, 369, 378, 379, 414, 449, 461, 490, 555, 556, 557, 563, 591, 592, 651], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 157, 203, 217, 219, 224, 225, 226, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 263, 277, 279, 284, 285, 286, 288, 289, 292, 306, 308, 316, 317, 318, 319, 321, 322, 325, 339, 341, 349, 350, 351, 352, 354, 355, 372, 422, 438, 440, 461, 471, 473, 490, 555, 577, 583, 585, 586, 587, 591, 611, 616, 619, 625, 634, 643, 649], "valid_min": [4, 160, 161, 162, 365, 591, 632, 649], "valid_max": [4, 160, 161, 162, 365, 632, 649], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 166, 167, 174, 176, 183, 184, 185, 190, 195, 217, 224, 228, 229, 230, 244, 249, 277, 284, 288, 289, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 369, 370, 372, 373, 375, 379, 381, 405, 414, 418, 427, 430, 431, 438, 439, 440, 446, 448, 449, 461, 462, 463, 467, 468, 470, 472, 473, 490, 563, 584, 585, 586, 589, 591, 592, 593, 594, 595, 611, 632, 641, 644, 645, 648, 650, 651, 653], "present": [4, 29, 31, 45, 74, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 392, 402, 414, 449, 461, 490, 587, 643, 648], "unit": [4, 55, 121, 122, 123, 124, 125, 161, 162, 209, 212, 213, 214, 215, 222, 242, 269, 272, 273, 274, 275, 282, 298, 301, 302, 303, 304, 311, 331, 334, 335, 336, 337, 344, 365, 367, 416, 435, 448, 471, 542, 563, 583, 587, 589, 591, 592, 593, 620, 625, 632, 641, 644, 649, 651], "avail": [4, 16, 45, 56, 57, 58, 74, 140, 152, 155, 156, 157, 164, 183, 195, 202, 242, 244, 246, 248, 258, 260, 262, 367, 377, 461, 472, 473, 474, 490, 583, 585, 586, 587, 591, 594, 600, 602, 611, 641], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 122, 125, 437, 446, 447, 583, 585, 586, 587, 588, 589, 591, 592, 603, 634, 643, 644, 645, 647, 648, 649, 651], "k": [5, 125, 221, 222, 223, 225, 226, 227, 281, 282, 283, 285, 286, 287, 310, 311, 312, 318, 319, 320, 343, 344, 345, 351, 352, 353, 384, 388, 389, 391, 392, 396, 399, 400, 401, 402, 438, 446, 585, 589, 592, 612, 619, 622, 623, 651], "band": [5, 9, 155, 157, 159, 377, 426, 428, 434, 438, 439, 440, 444, 583, 591], "arm": [5, 6, 40, 362, 363, 375, 376, 433, 458, 537, 542, 583, 585, 587, 589, 591, 594, 608, 623, 643, 644, 645, 647, 648, 649, 650, 653], "zenith": 5, "kazr": [5, 6, 591], "ingest": [5, 586, 591, 641, 642], "spectra": [6, 74, 117, 425, 443, 490, 533, 540, 546, 563, 591], "radar_spectra": 6, "delay_field_load": [6, 361, 364, 367, 368, 369, 372, 374], "delai": [6, 361, 364, 367, 368, 369, 372, 591], "load": [6, 29, 361, 364, 367, 368, 369, 372, 380, 381, 390, 591, 649], "until": [6, 29, 161, 361, 364, 367, 368, 369, 372, 594], "particular": [6, 361, 364, 367, 368, 369, 372, 414, 586, 594, 641], "access": [6, 19, 31, 45, 56, 57, 74, 141, 142, 184, 185, 361, 364, 367, 368, 369, 372, 381, 449, 461, 472, 473, 490, 536, 586, 602, 603, 647, 649], "In": [6, 121, 123, 124, 162, 164, 359, 361, 364, 367, 368, 369, 371, 372, 392, 402, 405, 416, 419, 438, 447, 554, 555, 583, 585, 586, 587, 589, 592, 597, 598, 603, 632, 641, 644, 645, 647, 648, 650, 651], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 140, 141, 142, 152, 160, 183, 184, 185, 195, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 367, 368, 369, 372, 375, 376, 379, 449, 452, 453, 454, 455, 461, 472, 473, 479, 480, 481, 482, 490, 507, 508, 509, 510, 583, 586, 587, 589, 630, 643, 649], "radarspectra": [6, 443, 540], "lazyloaddict": [6, 31, 45, 74, 361, 364, 367, 368, 369, 372, 449, 461, 490], "speedup": [6, 244, 317, 350, 364, 587, 591], "where": [6, 15, 56, 57, 119, 122, 125, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 165, 167, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 217, 224, 227, 228, 229, 230, 243, 257, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 358, 364, 419, 424, 441, 447, 472, 473, 556, 557, 564, 567, 579, 583, 584, 587, 589, 591, 602, 603, 606, 611, 614, 630, 632, 641, 644, 648, 653], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 284, 288, 289, 292, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 364, 369, 370, 371, 372, 405, 412, 413, 414, 438, 439, 440, 441, 442, 446, 447, 461, 471, 472, 473, 490, 538, 539, 540, 554, 555, 565, 566, 583, 587, 591, 598, 603, 606, 607, 608, 612, 643, 645, 647, 648, 649], "vari": [6, 364, 367, 632], "between": [6, 33, 45, 56, 57, 74, 120, 122, 123, 140, 152, 160, 161, 163, 164, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 358, 364, 369, 372, 378, 379, 405, 424, 427, 451, 461, 472, 473, 490, 549, 576, 583, 585, 586, 587, 592, 594, 606, 612, 622, 632, 645, 647, 651, 653], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 140, 152, 155, 156, 157, 160, 161, 162, 164, 167, 183, 195, 199, 204, 206, 210, 211, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 264, 266, 270, 271, 277, 284, 287, 288, 289, 293, 295, 299, 300, 306, 316, 317, 320, 321, 322, 326, 328, 332, 333, 339, 349, 350, 353, 354, 355, 363, 364, 369, 372, 373, 405, 418, 422, 446, 461, 469, 472, 473, 474, 475, 476, 477, 490, 503, 504, 505, 506, 538, 539, 540, 542, 555, 560, 562, 565, 579, 580, 586, 587, 592, 607, 643, 649, 651], "ngates_vari": [6, 364], "recommend": [6, 29, 45, 74, 160, 162, 350, 364, 373, 414, 424, 438, 461, 490, 554, 592, 594, 611, 641, 650, 651, 652, 653], "noxp": [7, 591], "iphex": [7, 591], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 317, 350, 369, 371, 433, 555, 558, 561, 566, 583, 586, 587, 591, 602, 630, 633, 634, 641, 643], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 129, 131, 132, 133, 134, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 160, 165, 172, 174, 175, 176, 177, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 199, 200, 217, 222, 223, 242, 243, 245, 246, 247, 248, 257, 259, 260, 261, 262, 277, 282, 283, 306, 311, 312, 313, 314, 339, 344, 345, 346, 347, 388, 399, 405, 413, 414, 437, 441, 449, 451, 461, 467, 468, 469, 470, 473, 474, 475, 476, 477, 490, 503, 504, 505, 506, 535, 555, 565, 566, 568, 569, 575, 583, 587, 630, 632, 641], "dataset1": 8, "dataset2": 8, "pattern": [9, 622], "project": [9, 16, 31, 34, 45, 74, 121, 122, 123, 124, 125, 222, 233, 244, 255, 282, 292, 311, 317, 344, 350, 367, 376, 377, 414, 449, 452, 461, 490, 583, 585, 587, 589, 591, 602, 603, 606, 612, 613, 619, 626, 630, 632, 637, 641, 644, 645, 647, 648, 650], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 203, 212, 217, 219, 222, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 263, 272, 277, 279, 282, 284, 287, 288, 289, 291, 292, 301, 306, 308, 311, 314, 316, 320, 321, 322, 324, 325, 334, 339, 341, 344, 347, 349, 353, 354, 355, 357, 405, 409, 410, 411, 412, 413, 414, 418, 424, 426, 434, 435, 436, 438, 439, 440, 444, 449, 455, 457, 473, 481, 509, 537, 554, 583, 586, 587, 590, 591, 595, 606, 612, 613, 622, 623, 632, 647, 648, 649], "radx_dir": 10, "first": [10, 45, 58, 74, 160, 162, 242, 362, 363, 372, 375, 405, 414, 424, 438, 439, 440, 444, 461, 474, 490, 558, 560, 572, 573, 583, 585, 586, 587, 589, 592, 594, 598, 602, 603, 616, 625, 630, 632, 637, 645, 647, 648, 649, 651], "convert": [10, 13, 39, 416, 424, 457, 570, 580, 583, 585, 587, 591, 632], "cf": [10, 13, 45, 74, 364, 375, 376, 433, 461, 490, 583, 584, 585, 586, 600, 610, 628, 641, 649], "radial": [10, 13, 45, 74, 160, 161, 364, 375, 418, 438, 461, 490, 554, 575, 584, 586, 587, 589, 591, 596, 600, 602, 610, 628, 636, 640, 641, 645, 649], "radxconvert": 10, "path": [10, 15, 156, 157, 162, 459, 536, 584, 585, 587, 589, 591, 592, 602, 603, 641, 650, 651], "radx": [10, 591], "grid": [11, 24, 45, 74, 202, 219, 221, 229, 233, 237, 243, 244, 245, 247, 249, 250, 255, 257, 258, 259, 261, 279, 281, 308, 310, 341, 343, 359, 366, 367, 376, 377, 378, 409, 410, 411, 412, 413, 414, 424, 435, 436, 444, 461, 490, 537, 541, 543, 544, 559, 577, 583, 587, 591, 600, 605, 609, 610, 613, 623, 626, 628, 632, 636, 640, 641, 642], "produc": [11, 163, 366, 375, 377, 381, 442, 447, 587, 589, 592, 641, 651], "radx2grid": 11, "within": [11, 29, 47, 48, 127, 160, 161, 162, 163, 167, 170, 202, 412, 413, 414, 418, 437, 463, 464, 549, 555, 556, 557, 564, 566, 568, 569, 581, 585, 587, 588, 589, 591, 592, 602, 603, 613, 614, 641, 645, 647, 651, 653], "lrose": 11, "must": [11, 155, 156, 157, 160, 317, 363, 366, 367, 372, 378, 435, 438, 439, 440, 575, 587, 592, 632, 641, 650, 651], "been": [11, 12, 131, 133, 140, 147, 152, 159, 160, 174, 176, 183, 190, 195, 249, 325, 364, 366, 369, 370, 371, 373, 563, 584, 589, 592, 602, 632, 641, 647, 650, 651], "write_grid": [11, 366], "ident": [11, 161, 162, 366, 413], "layout": [11, 33, 366, 451, 591], "rainbow": 12, "rainbow5": [12, 591], "5": [12, 31, 155, 157, 160, 163, 164, 165, 166, 200, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 376, 413, 414, 424, 427, 437, 449, 570, 583, 584, 585, 586, 587, 589, 590, 592, 597, 598, 603, 611, 614, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 637, 643, 645, 648, 649, 651], "22": [12, 583, 585, 589, 591, 602, 611, 630], "3": [12, 45, 74, 119, 120, 160, 161, 198, 199, 201, 229, 367, 371, 377, 412, 414, 418, 424, 461, 490, 537, 555, 583, 584, 585, 586, 589, 590, 592, 597, 598, 600, 603, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 637, 638, 639, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653], "34": [12, 444, 583, 632], "16": [12, 426, 446, 581, 583, 584, 585, 587, 592, 597, 598, 606, 618, 624, 631, 637, 640, 645, 649, 651], "35": [12, 162, 166, 167, 583, 585, 586, 611, 620, 622, 623, 648], "1": [12, 31, 45, 55, 74, 119, 122, 125, 140, 160, 162, 166, 167, 183, 263, 364, 369, 370, 371, 376, 413, 414, 416, 421, 424, 427, 437, 438, 440, 449, 461, 471, 490, 555, 563, 574, 581, 583, 585, 586, 587, 589, 592, 594, 595, 597, 598, 602, 606, 607, 608, 611, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 632, 633, 634, 638, 641, 643, 644, 645, 647, 648, 649, 651], "sinc": [12, 419, 438, 583, 585, 586, 587, 632, 644, 647, 649], "evolv": [12, 583], "constantli": 12, "guaranti": 12, "work": [12, 122, 125, 244, 292, 317, 325, 350, 369, 371, 444, 584, 585, 587, 589, 591, 592, 594, 595, 603, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653], "necessari": [12, 583], "user": [12, 29, 48, 156, 157, 163, 350, 377, 464, 555, 579, 583, 586, 587, 589, 591, 592, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653], "adapt": [12, 119, 583, 653], "code": [12, 29, 160, 435, 446, 583, 585, 589, 591, 595, 597, 598, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641, 650, 653], "accord": [12, 159, 373, 414, 421, 426, 427, 428, 430, 431], "its": [12, 438, 585, 586, 589, 591, 592, 594, 595, 641, 650, 651, 653], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 361, 372, 388, 389, 399, 400, 449, 450, 462, 463, 465, 474, 493, 586, 587, 591], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 135, 160, 161, 162, 163, 165, 166, 167, 178, 198, 199, 200, 201, 203, 222, 282, 311, 344, 350, 373, 376, 377, 393, 403, 405, 412, 413, 414, 418, 433, 449, 457, 461, 463, 464, 467, 468, 474, 483, 484, 485, 486, 487, 488, 489, 490, 511, 512, 513, 514, 515, 516, 517, 535, 537, 538, 539, 540, 554, 557, 561, 562, 568, 569, 578, 580, 583, 584, 586, 587, 589, 591, 592, 594, 595, 600, 603, 606, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 624, 625, 626, 627, 628, 630, 632, 637, 638, 639, 641, 643, 644, 645, 647, 648, 649, 650, 651, 652], "issu": [12, 29, 292, 325, 373, 376, 586, 590, 591, 592, 600, 601, 604, 641, 650, 651, 653], "upstream": [12, 584, 592, 594, 651], "reflect": [12, 47, 117, 127, 141, 142, 155, 156, 157, 158, 163, 165, 166, 167, 170, 184, 185, 199, 200, 219, 279, 308, 341, 358, 405, 416, 417, 419, 422, 423, 424, 427, 429, 430, 431, 432, 437, 438, 444, 463, 533, 545, 547, 548, 567, 583, 584, 585, 589, 591, 596, 598, 599, 600, 602, 603, 606, 607, 608, 610, 611, 612, 613, 615, 618, 621, 624, 625, 627, 628, 629, 630, 632, 635, 637, 639, 641, 643, 644, 645, 647, 648, 649], "dbz": [12, 155, 159, 166, 167, 416, 422, 423, 424, 444, 584, 586, 589, 602, 606, 613, 620, 621, 627, 632, 649], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 160, 161, 162, 418, 425, 435, 446, 447, 474, 533, 554, 575, 587, 589, 591, 592, 596, 599, 600, 602, 611, 615, 623, 625, 636, 640, 641, 642, 648, 649, 651], "v": [12, 41, 42, 44, 388, 389, 392, 399, 400, 402, 446, 447, 585, 592, 622, 623, 634, 651], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 563, 649], "width": [12, 243, 257, 317, 350, 414, 585, 586, 587, 589, 591, 649], "w": [12, 62, 162, 478, 583, 633], "wu": [12, 412, 647], "wv": 12, "wvu": 12, "differenti": [12, 17, 155, 156, 157, 166, 167, 199, 428, 431, 437, 438, 439, 440, 442, 445, 591, 615, 641], "zdr": [12, 156, 157, 159, 199, 420], "zdru": 12, "co": [12, 119, 122, 125, 424, 583, 585, 632], "polar": [12, 367, 368, 440, 586], "correl": [12, 165, 199, 200, 435, 437, 567, 589, 614, 615, 631, 632], "coeffici": [12, 155, 156, 157, 166, 167, 416, 437, 567, 583, 591, 614, 615, 631], "rhohv": [12, 159, 165, 199, 200, 420, 421, 591, 614, 649], "rhohvu": 12, "phase": [12, 17, 155, 156, 157, 162, 166, 167, 199, 428, 431, 435, 437, 438, 439, 440, 442, 445, 591, 615, 641, 645], "phidp": [12, 156, 157, 166, 167, 199, 438, 591, 641], "uphidp": 12, "uphidpu": 12, "kdp": [12, 166, 167, 428, 431, 438, 439, 440, 591, 633, 641], "ukdp": 12, "ukdpu": 12, "signal": [12, 159, 165, 200, 417, 563, 586], "qualiti": [12, 159, 165, 200, 428, 439, 440, 583, 589, 602], "sqi": [12, 591], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 156, 157, 201, 437, 583, 633], "temp": [12, 591], "posit": [12, 45, 74, 122, 125, 156, 157, 160, 419, 438, 461, 490, 586, 591, 606, 611, 613, 649], "bin": [12, 45, 74, 119, 120, 157, 372, 425, 461, 490, 563, 583, 591, 606, 645, 649], "respect": [12, 45, 74, 424, 444, 461, 490, 587], "iso0": [12, 156, 198], "cfradial_outfil": 13, "head": [13, 45, 74, 203, 461, 490], "ridgelin": 13, "instrument": [13, 45, 74, 140, 152, 165, 183, 195, 199, 200, 379, 461, 490, 591, 645, 649], "rxm": [13, 591], "25": [13, 583, 585, 589, 591, 602, 606, 622, 623, 626, 630, 643, 648], "rli": 13, "here": [13, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 255, 583, 584, 585, 586, 587, 589, 590, 594, 606, 632, 637, 641, 643, 648, 650, 653], "float": [13, 24, 58, 122, 125, 131, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 217, 219, 220, 224, 225, 227, 228, 229, 230, 242, 243, 244, 245, 246, 247, 248, 255, 257, 258, 259, 260, 261, 262, 263, 264, 277, 279, 280, 284, 285, 287, 288, 289, 292, 293, 306, 308, 309, 315, 316, 317, 318, 320, 321, 322, 325, 326, 339, 341, 342, 348, 349, 350, 351, 353, 354, 355, 358, 377, 405, 406, 408, 409, 410, 411, 412, 414, 416, 417, 418, 422, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 438, 439, 440, 441, 442, 444, 474, 537, 550, 551, 552, 553, 554, 555, 556, 557, 563, 564, 565, 566, 567, 568, 569, 570, 576, 577, 587], "offset": [13, 155, 166, 167, 203, 263, 292, 315, 325, 348, 424, 570, 583, 586, 587], "exist": [13, 28, 32, 46, 47, 49, 77, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 199, 200, 373, 438, 450, 459, 462, 463, 465, 493, 535, 580, 585, 586, 587, 591, 594, 597, 641, 643], "enter": [13, 584, 587, 592, 651], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 166, 167, 201, 203, 217, 222, 223, 242, 243, 245, 247, 255, 257, 259, 261, 263, 277, 282, 283, 292, 306, 311, 312, 315, 317, 325, 339, 344, 345, 348, 350, 446, 451, 471, 472, 551, 553, 555, 556, 557, 564, 565, 566, 570, 573, 576, 585, 587, 591, 592, 627, 630, 649, 651], "sinarame_h5": [14, 15, 591], "take": [15, 47, 161, 413, 414, 417, 438, 463, 585, 586, 587, 592, 602, 603, 606, 613, 632, 651], "everi": [15, 439, 440, 593, 641], "one": [15, 25, 31, 39, 40, 45, 47, 74, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 200, 375, 376, 378, 405, 412, 413, 414, 419, 438, 439, 440, 446, 449, 457, 458, 461, 463, 490, 556, 557, 567, 571, 575, 584, 586, 587, 589, 590, 591, 592, 594, 600, 605, 606, 611, 641, 644, 649, 651, 653], "volum": [15, 45, 74, 160, 162, 163, 317, 350, 369, 370, 371, 379, 405, 433, 461, 490, 556, 557, 559, 577, 580, 583, 586, 587, 589, 591, 600, 610, 628], "folder": [15, 583, 592, 651], "cfradial": [15, 364, 584, 591, 600, 610, 611, 625, 627, 628, 639, 643], "each": [15, 31, 39, 41, 45, 55, 74, 155, 156, 157, 161, 162, 163, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 373, 377, 379, 405, 412, 413, 414, 437, 446, 449, 457, 461, 471, 490, 538, 539, 540, 583, 586, 587, 591, 592, 602, 607, 622, 625, 632, 648, 649, 651], "act": [16, 427, 430, 431, 583, 591, 632, 643], "commun": [16, 583, 592, 641, 651, 653], "softwar": [16, 229, 370, 377, 587, 589, 592, 641, 643, 644, 645, 647, 648, 649, 650, 651], "namespac": [16, 591], "current": [16, 27, 33, 131, 133, 140, 147, 152, 160, 174, 176, 183, 190, 195, 205, 207, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 265, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 296, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 327, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 368, 406, 408, 438, 451, 583, 584, 586, 587, 589, 592, 651], "extens": [16, 205, 237, 250, 265, 294, 327, 377, 586, 594, 650], "wradlib": [16, 591, 641], "http": [16, 369, 370, 371, 416, 419, 424, 428, 429, 435, 555, 567, 583, 585, 587, 589, 592, 603, 614, 623, 632, 641, 650, 651, 653], "org": [16, 416, 419, 424, 428, 429, 435, 555, 567, 591, 592, 614, 632, 641, 651], "phidp_field": [17, 155, 156, 157, 166, 167, 438, 439, 440, 445, 597, 633], "phidp_texture_field": [17, 445], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 123, 127, 141, 142, 155, 156, 157, 165, 166, 167, 170, 184, 185, 198, 199, 200, 201, 203, 263, 292, 325, 413, 414, 417, 418, 424, 435, 442, 443, 445, 446, 447, 449, 451, 461, 472, 473, 490, 554, 555, 563, 564, 565, 566, 576, 583, 591, 592, 597, 600, 606, 622, 623, 629, 632, 635, 637, 641, 645, 648, 651], "textur": [17, 199, 418, 445, 554, 579, 591, 637, 641, 645], "real": [17, 160, 445, 600, 610, 632, 653], "part": [17, 426, 445, 586, 587, 589, 591, 602, 641, 643, 644, 645, 647, 648, 649], "complex": [17, 445], "shift": [17, 166, 167, 203, 263, 292, 325, 436, 439, 445, 591, 645], "texture_field": [17, 445], "refer": [17, 31, 45, 47, 74, 119, 122, 125, 155, 156, 157, 159, 160, 161, 162, 166, 167, 369, 370, 371, 412, 416, 419, 422, 424, 426, 428, 429, 432, 437, 438, 439, 440, 442, 444, 445, 446, 447, 449, 461, 463, 490, 555, 563, 567, 584, 589, 591, 592, 641, 649, 651], "gourlei": [17, 159, 445], "j": [17, 122, 125, 162, 166, 167, 419, 424, 437, 439, 440, 442, 444, 445, 446, 447, 555, 584, 587, 592, 597, 598, 607, 608, 615, 616, 618, 620, 624, 627, 632, 641, 651], "p": [17, 20, 22, 28, 119, 122, 125, 412, 426, 442, 445, 535, 555, 563, 586, 592, 641, 651], "tabari": [17, 445], "parent": [17, 445], "du": [17, 445], "chatelet": [17, 445], "fuzzi": [17, 445], "logic": [17, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 445], "algorithm": [17, 127, 160, 161, 162, 170, 412, 414, 424, 438, 444, 445, 583, 591, 592, 596, 599, 600, 637, 641, 651], "separ": [17, 435, 444, 445, 563, 567, 602, 614, 653], "precipit": [17, 416, 428, 432, 437, 445, 567, 583, 585, 587, 591, 592, 606, 614, 632, 641, 651], "nonprecipit": [17, 445], "echo": [17, 424, 437, 445, 632, 648], "polarimetr": [17, 155, 156, 157, 159, 166, 167, 427, 428, 437, 442, 445, 555, 591, 597], "observ": [17, 119, 424, 438, 445, 632], "journal": [17, 160, 162, 412, 426, 428, 445, 563, 592, 641, 651], "atmospher": [17, 45, 74, 119, 120, 160, 161, 414, 426, 441, 445, 461, 490, 583, 586, 587, 589, 592, 602, 641, 643, 644, 645, 647, 648, 649, 651], "ocean": [17, 160, 166, 167, 424, 426, 432, 442, 445, 555, 583, 587, 602, 632], "technologi": [17, 160, 426, 445], "24": [17, 445, 583, 585, 591, 603, 634], "8": [17, 62, 155, 160, 166, 199, 242, 244, 246, 248, 258, 260, 262, 445, 478, 583, 585, 586, 587, 589, 594, 603, 606, 612, 622, 626, 630, 637, 638, 643, 644, 645, 647, 648, 649], "1439": [17, 445], "1451": [17, 445], "filetyp": [19, 25, 587], "need": [19, 45, 54, 56, 57, 74, 377, 424, 461, 470, 472, 473, 490, 564, 576, 585, 586, 587, 590, 591, 592, 594, 602, 606, 611, 632, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653], "being": [19, 21, 160, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 414, 419, 440, 568, 569, 585, 587, 589, 591, 623, 650], "keep": [19, 160, 373, 577, 587, 592, 606, 632, 651, 653], "string": [19, 31, 45, 74, 219, 222, 223, 227, 230, 243, 257, 279, 282, 283, 287, 289, 308, 311, 312, 313, 314, 315, 318, 320, 322, 341, 344, 345, 346, 347, 348, 351, 353, 355, 413, 414, 433, 435, 439, 440, 442, 446, 447, 449, 461, 490, 585, 586, 587, 591, 592, 611, 651], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 127, 160, 161, 170, 203, 263, 292, 325, 381, 453, 454, 455, 479, 480, 481, 482, 507, 508, 509, 510, 587, 591, 613], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 131, 140, 141, 142, 152, 167, 174, 183, 184, 185, 195, 373, 438, 439, 440, 442, 446, 447, 449, 461, 485, 488, 489, 490, 513, 516, 517, 565, 583, 585, 587, 591, 602, 619], "dic": [22, 31, 45, 46, 74, 381, 449, 461, 462, 490], "colormap": [23, 202, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 586, 587, 591, 600, 610, 614, 628, 633], "select": [24, 50, 59, 88, 162, 466, 475, 504, 583, 586, 589, 591, 594], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 122, 125, 127, 152, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 170, 195, 198, 199, 200, 201, 203, 216, 217, 224, 227, 228, 229, 230, 231, 244, 258, 263, 276, 277, 284, 287, 288, 289, 290, 292, 305, 306, 315, 316, 317, 320, 321, 322, 323, 325, 338, 339, 348, 349, 350, 353, 354, 355, 356, 373, 377, 405, 413, 414, 417, 419, 424, 427, 429, 430, 431, 436, 437, 438, 439, 442, 444, 446, 447, 451, 461, 466, 467, 468, 470, 471, 472, 473, 474, 490, 570, 583, 584, 585, 586, 587, 589, 592, 594, 595, 597, 598, 599, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 643, 644, 645, 647, 648, 649, 650, 651], "limit": [24, 160, 161, 165, 166, 167, 198, 199, 200, 201, 219, 232, 255, 279, 291, 308, 324, 341, 357, 367, 378, 438, 577, 586, 587, 591, 607, 608, 612, 647], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 140, 152, 160, 161, 162, 164, 165, 183, 195, 199, 200, 205, 207, 216, 217, 219, 224, 228, 229, 230, 265, 267, 276, 277, 279, 284, 288, 289, 294, 296, 305, 306, 308, 316, 317, 321, 322, 327, 329, 338, 339, 341, 349, 350, 354, 355, 369, 370, 371, 373, 405, 418, 446, 461, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 489, 490, 503, 504, 505, 506, 511, 512, 513, 514, 515, 516, 517, 538, 539, 556, 557, 583, 584, 586, 587, 589, 591, 598, 602, 606, 622, 623, 625, 630, 632, 634, 637, 645, 648, 649], "get": [24, 234, 235, 236, 254, 381, 391, 401, 405, 583, 584, 586, 587, 589, 591, 592, 603, 622, 623, 632, 643, 645, 648, 649, 650, 651, 652, 653], "relat": [24, 157, 202, 378, 416, 424, 427, 430, 431, 432, 439, 444, 555, 586, 591, 592, 632, 641, 650, 651], "instac": 24, "nyquist": [24, 58, 160, 161, 162, 418, 474, 554, 591, 637, 645, 649], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 140, 152, 157, 160, 161, 163, 164, 166, 167, 183, 195, 199, 205, 206, 207, 216, 220, 224, 225, 227, 228, 229, 237, 238, 239, 240, 242, 244, 250, 251, 252, 253, 255, 258, 265, 266, 267, 276, 280, 284, 285, 287, 288, 294, 295, 296, 305, 309, 316, 317, 318, 320, 321, 327, 328, 329, 338, 342, 349, 350, 351, 353, 354, 377, 414, 418, 422, 424, 438, 440, 446, 449, 451, 461, 467, 468, 470, 471, 472, 473, 474, 490, 538, 539, 540, 554, 555, 563, 565, 579, 585, 587, 591, 592, 651], "consid": [24, 155, 163, 164, 358, 424, 556, 557, 563, 570, 632], "vmin": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 583, 584, 585, 586, 587, 589, 591, 597, 598, 602, 603, 606, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 637, 638, 639, 644, 645, 647, 648], "vmax": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 583, 584, 585, 586, 587, 589, 591, 597, 598, 602, 603, 606, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 637, 638, 639, 644, 645, 647, 648], "2": [24, 119, 122, 162, 163, 164, 199, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 308, 311, 312, 316, 319, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 352, 353, 354, 355, 357, 369, 370, 371, 373, 389, 400, 405, 412, 414, 418, 424, 438, 446, 537, 554, 567, 583, 585, 586, 587, 589, 592, 595, 606, 612, 613, 616, 619, 620, 622, 623, 626, 630, 632, 634, 637, 641, 643, 644, 645, 647, 648, 649, 651], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 381, 414, 449, 463, 464, 466, 467, 468, 470, 580, 586, 590, 591, 644], "field_map": 25, "anoth": [25, 405, 567, 586, 587, 591, 606, 643, 648, 650, 653], "fill": [27, 155, 156, 157, 444, 587, 591, 643, 644], "empti": [28, 389, 400, 439, 440, 535, 537, 540, 584, 591, 643], "control": [29, 160, 373, 375, 376, 414, 438, 589, 647], "singl": [29, 161, 162, 163, 164, 222, 223, 225, 227, 282, 283, 285, 287, 311, 312, 318, 320, 344, 345, 351, 353, 377, 414, 542, 580, 583, 586, 587, 589, 591, 592, 600, 602, 605, 606, 609, 630, 651], "self": [29, 166, 167, 586, 587, 592, 644, 647, 651], "descrip": 29, "exampl": [29, 47, 127, 170, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 381, 405, 409, 410, 411, 413, 414, 446, 459, 463, 583, 584, 585, 586, 587, 588, 591, 592, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 633, 634, 637, 638, 639, 641, 643, 645, 648, 649, 651, 653], "default_config": 29, "modifi": [29, 45, 74, 163, 461, 490, 584, 591, 592, 600, 610, 628, 651], "environment": [29, 583, 584, 641, 650], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 203, 233, 249, 263, 292, 325, 375, 376, 405, 427, 433, 437, 438, 441, 442, 449, 457, 458, 461, 471, 490, 563, 583, 585, 586, 591, 602, 606, 630, 632, 641, 643, 644, 649, 650], "pyart_config": 29, "point": [29, 31, 33, 47, 123, 155, 156, 157, 167, 220, 225, 242, 243, 257, 280, 285, 292, 309, 314, 315, 318, 342, 347, 348, 351, 367, 368, 371, 373, 377, 412, 413, 414, 424, 444, 449, 451, 463, 537, 563, 566, 570, 580, 583, 585, 587, 589, 591, 594, 600, 612, 619, 629, 632, 635, 637, 641, 645, 647, 649], "new": [29, 47, 48, 50, 131, 133, 140, 147, 152, 163, 174, 176, 183, 190, 195, 425, 436, 442, 446, 463, 464, 466, 567, 577, 589, 591, 592, 594, 595, 606, 630, 633, 637, 641, 644, 645, 651, 653], "execut": [29, 591, 599, 604, 609, 628, 635, 640], "full": [29, 62, 163, 164, 373, 478, 589, 591, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639], "permiss": 29, "secur": 29, "do": [29, 45, 74, 160, 165, 199, 200, 377, 378, 461, 490, 587, 589, 591, 592, 603, 632, 643, 644, 645, 647, 648, 650, 651, 653], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 127, 131, 133, 140, 147, 152, 155, 157, 166, 167, 170, 174, 176, 183, 190, 195, 229, 242, 378, 379, 381, 392, 394, 402, 413, 433, 438, 439, 440, 446, 449, 463, 470, 472, 473, 563, 581, 586, 587, 591, 592, 594, 597, 617, 637, 638, 639, 641, 648, 651], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 141, 142, 160, 184, 185, 372, 381, 449, 459, 461, 463, 467, 468, 470, 472, 490, 549, 583, 585, 587, 591, 592, 593, 594, 595, 632, 644, 647, 649, 650, 651], "home": [29, 589, 592, 597, 603, 651, 653], "make": [29, 31, 449, 537, 541, 543, 544, 585, 586, 587, 589, 590, 591, 592, 593, 595, 606, 613, 622, 632, 637, 641, 643, 644, 650, 651, 653], "adjust": [29, 122, 232, 291, 324, 357, 587, 591, 611, 614, 622], "login": 29, "": [29, 31, 45, 58, 62, 74, 119, 120, 122, 125, 161, 162, 166, 167, 205, 207, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 265, 267, 277, 284, 288, 289, 294, 296, 306, 316, 321, 322, 327, 329, 339, 349, 354, 355, 386, 387, 393, 397, 398, 403, 405, 407, 412, 424, 426, 427, 434, 435, 438, 439, 440, 442, 444, 447, 449, 461, 474, 478, 490, 563, 567, 583, 584, 585, 586, 587, 589, 591, 593, 594, 602, 603, 606, 611, 613, 614, 623, 630, 632, 634, 637, 641, 643, 644, 645, 647, 648, 649, 652], "also": [29, 45, 74, 131, 174, 202, 218, 241, 256, 278, 307, 340, 370, 371, 375, 377, 379, 391, 401, 405, 424, 461, 490, 583, 584, 585, 586, 587, 589, 591, 592, 602, 606, 632, 641, 643, 647, 649, 650, 651, 652, 653], "shell": 29, "session": 29, "modif": [29, 47, 463, 591], "last": [29, 45, 74, 160, 217, 218, 224, 228, 229, 230, 241, 246, 248, 249, 256, 258, 260, 262, 277, 278, 284, 288, 289, 306, 307, 316, 317, 321, 322, 325, 339, 340, 349, 350, 354, 355, 461, 490, 586, 587, 589, 590, 591, 607, 649], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 155, 156, 157, 161, 162, 167, 242, 469, 477, 485, 489, 503, 506, 513, 517, 583, 585, 586, 587, 589, 591, 592, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641, 651], "interact": [30, 583, 586], "weather": [30, 119, 160, 412, 438, 585, 587, 591, 592, 602, 611, 641, 643, 644, 645, 647, 648, 649, 651], "time": [31, 39, 40, 45, 74, 160, 205, 207, 217, 219, 224, 228, 229, 230, 265, 267, 277, 279, 284, 288, 289, 294, 296, 306, 308, 316, 317, 321, 322, 327, 329, 339, 341, 349, 350, 354, 355, 362, 363, 373, 375, 376, 405, 408, 414, 433, 435, 449, 457, 458, 461, 490, 558, 561, 583, 584, 585, 587, 589, 591, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 643, 649, 653], "origin_latitud": [31, 449], "origin_longitud": [31, 449], "origin_altitud": [31, 449], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 203, 205, 214, 217, 219, 222, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 263, 265, 274, 277, 279, 282, 284, 287, 288, 289, 291, 292, 294, 303, 306, 308, 311, 314, 316, 320, 321, 322, 324, 325, 327, 336, 339, 341, 344, 347, 349, 353, 354, 355, 357, 405, 409, 410, 411, 412, 413, 414, 424, 435, 436, 444, 449, 455, 457, 473, 481, 509, 537, 583, 585, 586, 587, 595, 606, 612, 613, 622, 623, 630, 632], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 155, 157, 166, 167, 215, 275, 304, 337, 367, 377, 378, 409, 410, 411, 412, 413, 414, 416, 419, 424, 427, 430, 431, 432, 435, 449, 455, 457, 461, 473, 481, 490, 509, 537, 597, 620, 622, 623, 632, 644], "radar_latitud": [31, 449, 564, 576], "radar_longitud": [31, 449, 564, 576], "radar_altitud": [31, 449], "radar_tim": [31, 449], "radar_nam": [31, 449], "store": [31, 45, 74, 160, 161, 162, 381, 414, 419, 449, 461, 490, 583, 585, 587, 591, 602, 630, 641, 644, 647, 649, 653], "rectilinear": [31, 449], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 367, 404, 405, 412, 413, 414, 449, 451, 457, 461, 490, 600, 605, 609, 612, 641, 642], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 376, 404, 405, 407, 412, 414, 449, 451, 457, 461, 472, 490, 537, 554, 583, 585, 586, 587, 591, 596, 600, 603, 605, 606, 607, 608, 630, 641, 647, 649], "section": [31, 45, 47, 74, 217, 242, 277, 306, 339, 414, 449, 461, 463, 490, 556, 557, 583, 587, 588, 590, 591, 592, 600, 610, 628, 632, 641, 651], "To": [31, 47, 165, 198, 199, 200, 201, 375, 376, 378, 449, 463, 580, 585, 592, 594, 641, 644, 647, 650, 651, 653], "creat": [31, 42, 45, 47, 50, 74, 160, 161, 162, 163, 165, 198, 199, 200, 201, 202, 203, 216, 230, 233, 249, 263, 276, 289, 292, 305, 317, 322, 325, 338, 350, 355, 370, 375, 376, 377, 378, 379, 413, 414, 442, 447, 449, 459, 461, 463, 466, 490, 574, 575, 577, 583, 587, 589, 591, 592, 597, 598, 600, 603, 606, 607, 608, 610, 611, 613, 627, 628, 632, 639, 641, 642, 644, 647, 651], "legaci": [31, 419, 449], "from_legacy_paramet": [31, 449], "ax": [31, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 356, 357, 409, 410, 411, 424, 436, 444, 449, 583, 584, 585, 586, 587, 589, 591, 597, 598, 602, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 637, 645], "moment": [31, 39, 45, 74, 117, 159, 160, 161, 162, 165, 199, 200, 369, 370, 371, 414, 443, 449, 457, 461, 490, 533, 563, 586, 591, 603, 610, 628, 641, 648], "describ": [31, 45, 74, 165, 198, 199, 200, 201, 243, 257, 449, 461, 490, 589, 632], "geograph": [31, 45, 56, 74, 121, 122, 123, 124, 125, 292, 317, 325, 350, 376, 414, 449, 461, 472, 490, 587, 641], "origin": [31, 39, 160, 161, 162, 203, 263, 292, 325, 373, 375, 376, 381, 383, 412, 414, 449, 457, 556, 557, 583, 584, 585, 587, 591, 592, 606, 607, 608, 631, 632, 651], "distanc": [31, 39, 57, 119, 120, 217, 228, 277, 288, 306, 321, 339, 354, 405, 406, 409, 410, 411, 413, 414, 422, 435, 440, 449, 457, 473, 555, 556, 557, 564, 565, 566, 576, 583, 584, 585, 606, 615, 620, 621, 622], "axi": [31, 39, 45, 74, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 307, 308, 309, 310, 311, 312, 316, 317, 319, 320, 321, 322, 324, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 357, 367, 377, 449, 457, 461, 490, 583, 586, 587, 597, 612, 623, 632, 634, 649], "dimension": [31, 39, 160, 162, 412, 444, 449, 457, 606, 632], "space": [31, 45, 74, 123, 219, 279, 308, 341, 378, 414, 424, 435, 449, 461, 490, 583, 586, 603, 632, 643], "along": [31, 161, 164, 242, 245, 246, 247, 248, 259, 260, 261, 262, 449, 555, 556, 557, 565, 566, 577, 579, 585, 586, 587, 591, 632, 637], "three": [31, 162, 165, 200, 377, 444, 449, 586, 594, 632], "repeat": [31, 449], "throughout": [31, 449], "nz": [31, 449], "nx": [31, 449], "ny": [31, 449], "dimens": [31, 160, 367, 414, 418, 419, 424, 433, 435, 438, 440, 444, 449, 554, 577, 583, 586, 587, 591, 630, 632, 643, 647, 649], "transform": [31, 45, 74, 121, 122, 123, 124, 125, 222, 229, 282, 292, 311, 325, 344, 350, 376, 414, 449, 461, 490, 585, 587, 591, 611, 632], "proj": [31, 45, 74, 121, 123, 124, 255, 325, 449, 461, 490, 591], "pyart_aeqd": [31, 45, 74, 121, 123, 124, 449, 461, 490], "nativ": [31, 45, 74, 121, 123, 124, 361, 414, 419, 449, 461, 490, 591], "azimuth": [31, 45, 51, 52, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 203, 204, 217, 219, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 264, 277, 279, 282, 284, 288, 289, 292, 293, 306, 308, 311, 316, 317, 321, 322, 325, 326, 339, 341, 344, 349, 350, 354, 355, 373, 377, 419, 440, 446, 447, 449, 461, 467, 468, 471, 473, 483, 490, 511, 555, 556, 557, 564, 565, 580, 586, 587, 591, 592, 625, 627, 630, 643, 649, 651], "equidist": [31, 45, 74, 121, 122, 123, 124, 125, 222, 282, 311, 344, 350, 377, 414, 449, 461, 490, 587], "pyproj": [31, 45, 74, 121, 123, 124, 449, 461, 490, 591, 650], "projparam": [31, 34, 45, 74, 121, 123, 124, 449, 452, 461, 490], "special": [31, 45, 74, 449, 461, 490, 587], "_include_lon_0_lat_0": [31, 45, 74, 449, 461, 490], "remov": [31, 45, 56, 57, 74, 155, 156, 157, 160, 165, 198, 199, 200, 201, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 382, 388, 389, 395, 399, 400, 424, 449, 461, 472, 473, 490, 585, 587, 591, 592, 597, 607, 613, 622, 632, 645, 648, 651], "interpret": [31, 45, 74, 161, 162, 376, 449, 461, 490, 568, 569, 587], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 247, 248, 255, 257, 259, 261, 262, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 414, 449, 451, 454, 457, 461, 472, 490, 555, 564, 565, 566, 576, 583, 585, 586, 587, 600, 601, 604, 612, 619, 626, 630, 632, 643, 644, 649], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 246, 247, 255, 257, 259, 260, 261, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 414, 449, 451, 454, 457, 461, 472, 490, 555, 564, 565, 566, 576, 583, 585, 586, 587, 600, 601, 604, 612, 619, 626, 630, 632, 643, 644, 649], "ad": [31, 45, 47, 74, 164, 166, 167, 249, 315, 348, 413, 424, 449, 461, 463, 490, 584, 586, 589, 591, 592, 622, 623, 643, 644, 650, 651], "lon_0": [31, 45, 74, 122, 125, 317, 350, 449, 461, 490, 619], "lat_0": [31, 45, 74, 122, 125, 317, 350, 449, 461, 490, 619], "get_projparam": [31, 449], "evalu": [31, 381, 383, 428, 449, 589, 591], "locat": [31, 33, 45, 55, 56, 57, 74, 203, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 292, 306, 307, 308, 311, 312, 314, 316, 317, 318, 319, 321, 322, 325, 339, 340, 341, 344, 345, 347, 349, 350, 351, 352, 354, 355, 369, 370, 372, 378, 405, 412, 413, 414, 449, 451, 461, 471, 472, 473, 490, 537, 549, 555, 564, 565, 566, 583, 584, 585, 587, 589, 591, 592, 617, 619, 630, 637, 638, 639, 641, 647, 650, 651], "up": [31, 45, 74, 131, 133, 140, 147, 152, 156, 157, 174, 176, 183, 190, 195, 416, 419, 427, 430, 431, 441, 449, 461, 490, 554, 584, 585, 589, 590, 591, 594, 632, 645, 649, 652], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 242, 373, 379, 433, 449, 461, 476, 477, 488, 489, 490, 505, 506, 516, 517, 559, 583, 584, 585, 586, 587, 589, 592, 602, 611, 612, 622, 623, 641, 643, 651, 652], "collect": [31, 140, 152, 183, 195, 363, 369, 370, 371, 373, 404, 413, 414, 449, 586, 587, 592, 602, 616, 630, 641, 651, 652, 653], "nradar": [31, 449], "whose": [31, 372, 411, 449, 583], "wa": [31, 56, 57, 140, 161, 162, 183, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 449, 472, 473, 567, 583, 585, 587, 589, 591, 641, 653], "projection_proj": [31, 449], "instanc": [31, 42, 48, 160, 161, 162, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 378, 379, 419, 449, 464, 567, 571, 575, 585, 587, 591], "valueerror": [31, 32, 46, 47, 449, 450, 462, 463, 587], "point_z": [31, 376, 449], "point_x": [31, 376, 449], "point_i": [31, 376, 449], "func": [31, 449, 586, 591], "init_point_x_y_z": [31, 449], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 449, 454, 455, 461, 472, 480, 481, 482, 490, 508, 509, 510, 648], "point_latitud": [31, 376, 449], "point_longitud": [31, 376, 449], "perform": [31, 45, 56, 57, 58, 74, 131, 133, 140, 147, 152, 159, 160, 161, 162, 164, 174, 176, 183, 190, 195, 217, 222, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 282, 284, 287, 288, 289, 306, 311, 316, 317, 320, 321, 322, 325, 339, 344, 349, 350, 353, 354, 355, 369, 372, 377, 438, 449, 461, 472, 473, 474, 490, 580, 586, 587, 596, 597, 598, 600, 607, 608, 612, 641], "invers": [31, 45, 74, 446, 449, 461, 490, 583], "rel": [31, 45, 74, 156, 198, 229, 315, 348, 449, 461, 490, 583, 591, 592, 649, 651], "init_point_longitude_latitud": [31, 449], "point_altitud": [31, 35, 376, 449, 453], "init_point_altitud": [31, 449], "init": [31, 233, 249, 381, 449, 564, 591], "field_dict": [32, 450], "replace_exist": [32, 46, 47, 48, 450, 462, 463, 464, 589, 591, 592, 632, 637, 644, 645, 651], "add": [32, 46, 47, 163, 167, 217, 219, 224, 227, 228, 229, 230, 242, 243, 244, 246, 248, 255, 257, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 450, 462, 463, 584, 585, 586, 591, 592, 606, 611, 612, 613, 622, 623, 625, 630, 632, 633, 637, 645, 650, 651, 653], "replac": [32, 46, 47, 48, 131, 133, 140, 147, 152, 161, 162, 174, 176, 183, 190, 195, 450, 462, 463, 464, 582, 591], "overwrit": [32, 450], "alreadi": [32, 46, 47, 450, 462, 463], "level": [33, 39, 41, 42, 45, 62, 74, 156, 157, 237, 238, 239, 240, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 369, 370, 371, 377, 378, 435, 444, 446, 451, 457, 461, 478, 490, 563, 583, 585, 586, 591, 592, 622, 623, 626, 631, 638, 641, 647, 649, 651], "height": [33, 39, 41, 42, 156, 157, 198, 244, 258, 317, 350, 414, 417, 424, 433, 441, 444, 446, 447, 451, 457, 575, 583, 586, 587, 589, 591, 592, 611, 620, 630, 634, 648, 651], "determin": [33, 45, 74, 160, 161, 162, 242, 244, 246, 248, 255, 258, 260, 262, 317, 350, 358, 361, 369, 370, 373, 378, 379, 418, 424, 426, 427, 428, 430, 431, 444, 446, 451, 461, 490, 563, 570, 575, 578, 586, 587, 592, 632, 637, 651], "same": [33, 45, 47, 55, 56, 57, 74, 122, 125, 133, 147, 160, 176, 190, 229, 317, 350, 367, 373, 377, 378, 379, 414, 424, 435, 441, 451, 461, 463, 471, 472, 473, 490, 564, 576, 580, 583, 587, 592, 602, 622, 623, 632, 643, 648, 651, 653], "interpol": [33, 57, 120, 123, 217, 224, 228, 229, 230, 242, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 363, 369, 413, 414, 433, 440, 441, 446, 451, 473, 575, 587, 591, 592, 603, 632, 647, 651], "extrapol": [33, 120, 123, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 451, 587], "boundari": [33, 120, 123, 164, 235, 236, 255, 350, 440, 451, 587, 633], "center": [33, 45, 57, 74, 119, 120, 122, 123, 125, 161, 217, 222, 224, 228, 229, 230, 243, 245, 246, 247, 248, 257, 258, 259, 260, 261, 262, 277, 282, 284, 288, 289, 292, 306, 311, 316, 317, 321, 322, 339, 344, 349, 350, 354, 355, 369, 371, 409, 410, 411, 451, 461, 473, 490, 537, 554, 583, 585, 586, 587, 589, 611, 637, 645, 649], "2d": [33, 55, 56, 57, 120, 367, 377, 437, 440, 451, 471, 472, 473, 554, 583, 587, 606, 649], "point_": [36, 37, 454, 455], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 141, 142, 184, 185, 406, 408, 446, 456, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 583, 587, 592, 651], "xarrai": [39, 233, 242, 244, 457, 555, 566, 583, 591, 626, 630, 637, 641, 650], "netcdf4": [40, 370, 375, 376, 458, 583, 584, 591, 620, 641, 643, 650, 653], "arm_time_vari": [40, 375, 376, 458], "arm_alt_lat_lon_vari": [40, 376, 458], "save": [40, 205, 217, 219, 224, 228, 229, 230, 237, 250, 265, 277, 279, 284, 288, 289, 294, 306, 308, 316, 317, 321, 322, 327, 339, 341, 349, 350, 354, 355, 376, 378, 458, 587, 589, 641, 642], "netcdf4_class": [40, 375, 376, 458], "netcdf3_class": [40, 375, 376, 458], "netcdf3_64bit": [40, 375, 376, 458], "base_tim": [40, 375, 376, 458, 586, 630], "time_offset": [40, 375, 376, 458, 586, 630], "alt": [40, 56, 376, 458, 472, 586, 587, 591], "lat": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 458, 472, 583, 586, 587, 591, 612, 613, 626, 647], "lon": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 458, 472, 583, 586, 587, 591, 613, 626], "speed": [41, 42, 414, 446, 447, 554, 586, 587, 589, 592, 634, 651], "direct": [41, 62, 373, 438, 446, 447, 478, 591, 592, 634, 651], "horizont": [41, 42, 43, 44, 45, 74, 155, 158, 159, 160, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 362, 363, 446, 461, 490, 575, 585, 586, 589, 591, 592, 613, 623, 638, 649, 651], "wind": [41, 42, 43, 44, 160, 161, 362, 363, 446, 447, 575, 585, 586, 587, 589, 591, 592, 634, 651], "profil": [41, 160, 362, 363, 433, 439, 440, 441, 442, 555, 575, 591, 592, 598, 600, 629, 635, 651], "1d": [41, 42, 120, 123, 437, 583, 591, 649], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 203, 263, 292, 314, 317, 325, 347, 350, 405, 406, 408, 409, 410, 411, 412, 413, 414, 417, 424, 435, 438, 441, 444, 446, 472, 473, 474, 537, 564, 576, 586, 587, 591, 592, 606, 634, 647, 649, 651], "abov": [41, 42, 45, 47, 74, 129, 143, 155, 156, 157, 160, 163, 164, 165, 166, 167, 172, 186, 198, 199, 200, 201, 222, 223, 282, 283, 311, 312, 344, 345, 358, 414, 417, 424, 446, 461, 463, 490, 555, 563, 565, 566, 583, 584, 585, 586, 591, 592, 594, 600, 606, 621, 623, 629, 634, 635, 637, 641, 643, 645, 651, 653], "sea": [41, 42, 45, 74, 446, 461, 490, 586, 591, 592, 651], "were": [41, 42, 131, 133, 140, 174, 176, 183, 446, 585, 587, 589, 592, 651], "sampl": [41, 42, 446, 447, 448, 541, 543, 544, 563, 583, 585, 586, 591, 592, 602, 603, 611, 631, 633, 634, 641, 651], "per": [41, 42, 43, 44, 58, 160, 414, 446, 474, 538, 539, 540, 592, 651], "second": [41, 42, 43, 44, 47, 58, 119, 160, 373, 381, 405, 440, 446, 463, 474, 572, 573, 583, 586, 589, 592, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 648, 649, 651], "north": [41, 45, 74, 242, 244, 255, 317, 350, 461, 490, 555, 566, 583, 586, 587, 615, 649], "east": [41, 217, 228, 242, 277, 288, 306, 321, 339, 354, 555, 566, 583, 586, 587, 615], "u_wind": [41, 42, 446, 447, 592, 634, 651], "compon": [41, 42, 43, 44, 586, 592, 651], "v_wind": [41, 42, 446, 447, 592, 634, 651], "classmethod": 42, "_rang": [45, 74, 422, 461, 490], "scan_typ": [45, 74, 203, 216, 263, 276, 292, 305, 325, 338, 461, 490, 649], "sweep_numb": [45, 74, 461, 490, 586, 591, 620, 643, 649], "sweep_mod": [45, 74, 461, 490, 586, 591, 643, 649], "fixed_angl": [45, 74, 203, 263, 292, 325, 461, 490, 586, 591, 620, 621, 625, 643, 649], "sweep_start_ray_index": [45, 74, 461, 490, 586, 643, 649], "sweep_end_ray_index": [45, 74, 461, 490, 586, 643, 649], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 203, 217, 219, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 373, 440, 461, 468, 473, 484, 490, 512, 557, 570, 583, 586, 587, 589, 591, 606, 631, 643, 649], "altitude_agl": [45, 74, 461, 490, 586, 649], "target_scan_r": [45, 74, 461, 490, 591, 649], "rays_are_index": [45, 74, 461, 490], "ray_angle_r": [45, 74, 461, 490], "scan_rat": [45, 74, 379, 461, 490, 591, 649], "antenna_transit": [45, 56, 57, 74, 140, 152, 183, 195, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 461, 472, 473, 490, 587, 649], "instrument_paramet": [45, 74, 160, 379, 461, 490, 586, 589, 645, 649], "radar_calibr": [45, 74, 461, 490, 649], "rotat": [45, 74, 203, 461, 490], "tilt": [45, 74, 203, 229, 317, 350, 442, 461, 490, 587, 591, 603, 619, 626], "roll": [45, 74, 203, 373, 461, 490, 574, 579], "drift": [45, 74, 203, 461, 490], "pitch": [45, 74, 203, 461, 490], "georefs_appli": [45, 74, 461, 490], "antenna": [45, 56, 57, 74, 119, 120, 140, 152, 183, 195, 198, 201, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 419, 461, 472, 473, 490, 587, 591, 596, 600, 605, 606, 607, 608, 641, 647, 649], "structur": [45, 74, 379, 444, 461, 490, 602, 632, 648], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 127, 161, 162, 165, 170, 198, 199, 200, 201, 230, 289, 322, 355, 377, 411, 413, 414, 424, 438, 461, 466, 467, 468, 470, 471, 472, 473, 474, 490, 567, 585, 586, 587, 591, 592, 596, 599, 600, 602, 637, 641, 645, 648, 649, 651], "global": [45, 74, 461, 490, 583, 649, 650], "4": [45, 74, 119, 120, 364, 367, 412, 416, 441, 461, 490, 583, 584, 585, 586, 590, 592, 602, 603, 611, 613, 620, 621, 622, 623, 625, 626, 632, 634, 637, 641, 648, 651], "repres": [45, 74, 160, 437, 461, 490, 538, 539, 580, 591], "under": [45, 74, 160, 161, 162, 414, 461, 490, 591, 592, 632, 641, 650, 651], "sub": [45, 74, 461, 490, 583, 591], "convent": [45, 74, 160, 461, 490, 583, 586, 587, 602, 641, 649], "meta_group": [45, 74, 461, 490, 649], "scan": [45, 74, 117, 160, 161, 162, 163, 203, 216, 217, 219, 230, 263, 276, 277, 279, 289, 292, 305, 306, 308, 322, 325, 338, 339, 341, 355, 369, 419, 461, 490, 533, 538, 539, 564, 570, 575, 580, 583, 584, 585, 586, 591, 603, 606, 616, 617, 627], "ppi": [45, 74, 161, 162, 163, 164, 216, 220, 224, 276, 280, 284, 305, 309, 316, 317, 338, 342, 349, 350, 440, 461, 490, 538, 539, 542, 545, 547, 556, 557, 583, 584, 587, 591, 600, 610, 613, 614, 626, 628, 636, 638, 640, 641, 649], "rhi": [45, 74, 216, 217, 228, 276, 277, 288, 305, 306, 321, 338, 339, 354, 440, 461, 490, 539, 548, 556, 557, 584, 591, 600, 610, 628, 641, 649], "sector": [45, 74, 461, 490, 583, 591, 649], "multipl": [45, 74, 461, 490, 584, 585, 591, 592, 600, 605, 610, 622, 628, 648, 651, 653], "mode": [45, 62, 74, 360, 461, 478, 490, 583, 586, 591, 592, 649, 650, 651], "ground": [45, 74, 419, 461, 490, 586, 587, 602], "target": [45, 74, 377, 461, 490, 541, 543, 544, 545, 546, 547, 548, 555, 564, 565, 566, 576, 586, 649], "angl": [45, 51, 52, 74, 119, 120, 203, 217, 229, 263, 277, 292, 306, 325, 339, 440, 442, 461, 467, 468, 490, 550, 551, 552, 553, 555, 556, 557, 564, 565, 572, 573, 580, 583, 586, 591, 625, 627, 634, 643, 649], "thr": [45, 74, 461, 490], "index": [45, 60, 74, 89, 165, 200, 230, 244, 246, 248, 258, 260, 262, 289, 322, 355, 377, 405, 419, 442, 461, 476, 490, 505, 583, 585, 586, 587, 589, 591, 642], "rays_per_sweep": [45, 66, 74, 94, 461, 482, 490, 510, 538, 539], "upon": [45, 74, 165, 198, 199, 200, 201, 461, 490, 585, 589, 591], "prior": [45, 47, 74, 164, 166, 167, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 373, 461, 463, 490, 587, 594, 603, 641], "init_rays_per_sweep": [45, 74, 461, 490], "intend": [45, 74, 461, 490], "rate": [45, 74, 416, 424, 426, 427, 428, 429, 430, 431, 432, 461, 490, 591, 632], "whether": [45, 74, 131, 174, 412, 461, 490, 586, 587, 648], "regular": [45, 74, 378, 461, 490, 587, 611], "angular": [45, 74, 461, 490, 554, 572, 573], "resolut": [45, 74, 217, 219, 220, 224, 225, 228, 229, 230, 255, 277, 279, 280, 284, 285, 288, 289, 306, 308, 309, 316, 317, 318, 321, 322, 339, 341, 342, 349, 350, 351, 354, 355, 369, 424, 438, 444, 461, 490, 585, 586, 587, 603, 616, 619, 637, 638, 645, 647, 648], "express": [45, 74, 461, 490], "360": [45, 74, 163, 164, 318, 351, 461, 490, 591, 634, 643, 649], "represent": [45, 74, 461, 490], "forbidden": [45, 74, 461, 490], "plane": [45, 74, 377, 461, 490, 583, 649], "180": [45, 74, 122, 461, 490, 583, 585, 586, 592, 643, 651], "gate_z": [45, 57, 74, 461, 473, 490], "gate_x": [45, 57, 74, 461, 473, 490], "gate_i": [45, 57, 74, 461, 473, 490], "system": [45, 74, 121, 122, 123, 166, 167, 360, 369, 377, 407, 412, 461, 490, 591, 592, 650, 651], "assum": [45, 74, 119, 120, 160, 163, 435, 438, 440, 441, 461, 490, 585, 589], "earth": [45, 74, 119, 120, 122, 125, 461, 490, 564, 576, 583, 587], "radiu": [45, 74, 119, 120, 122, 125, 409, 410, 411, 412, 413, 414, 424, 444, 461, 490, 564, 576, 632, 647], "model": [45, 74, 119, 120, 161, 370, 376, 461, 490, 586, 633], "init_gate_x_y_z": [45, 74, 461, 490], "gate_latitud": [45, 56, 64, 74, 92, 461, 472, 480, 490, 508, 583], "gate_longitud": [45, 56, 64, 74, 92, 461, 472, 480, 490, 508, 583, 643], "init_gate_longitude_latitud": [45, 74, 461, 490, 643], "gate_altitud": [45, 56, 63, 74, 91, 461, 472, 479, 490, 507, 583], "init_gate_altitud": [45, 74, 461, 490, 643], "actual": [45, 74, 373, 377, 412, 461, 490, 653], "flag": [45, 74, 160, 263, 373, 439, 440, 442, 444, 461, 490, 570, 583, 591, 653], "transit": [45, 56, 57, 74, 140, 152, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 439, 461, 472, 473, 490, 587, 591], "ye": [45, 74, 160, 461, 490], "about": [45, 74, 461, 490, 583, 585, 590, 591], "aircraft": [45, 74, 229, 373, 461, 490, 555], "longitudin": [45, 74, 229, 240, 248, 252, 253, 262, 461, 490], "vertic": [45, 74, 159, 160, 217, 218, 219, 224, 228, 229, 230, 238, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 377, 435, 442, 461, 490, 555, 570, 580, 583, 585, 591, 623, 633, 634, 638], "orthogon": [45, 74, 461, 490], "platform": [45, 74, 461, 490, 583, 594], "right": [45, 74, 461, 490, 585, 588, 589, 591, 611, 612, 641], "wing": [45, 74, 461, 490], "down": [45, 74, 461, 490, 581, 585], "track": [45, 74, 461, 490, 583, 587], "compass": [45, 74, 461, 490], "clockwis": [45, 74, 461, 490], "nose": [45, 74, 461, 490, 591], "had": [45, 74, 378, 461, 490, 591, 602, 653], "georefer": [45, 74, 461, 490], "lead": [45, 74, 461, 490, 587, 606], "centric": [45, 74, 461, 490], "avaiabl": [45, 74, 461, 490], "radar_paramet": [45, 74, 461, 490, 586], "subconvent": [45, 74, 461, 490], "calibr": [45, 74, 426, 461, 490, 586], "ngate": [45, 55, 74, 461, 471, 490, 538, 539, 540, 583, 591, 643, 649], "nrai": [45, 55, 74, 422, 461, 471, 490, 540, 565, 591, 643, 649], "nsweep": [45, 74, 461, 490, 538, 539, 620, 621, 634, 649], "loos": [46, 47, 462, 463], "existing_field_nam": [47, 463], "note": [47, 119, 131, 133, 140, 147, 152, 160, 164, 174, 176, 183, 190, 195, 244, 317, 364, 367, 368, 378, 435, 438, 446, 463, 584, 587, 591, 592, 602, 603, 613, 632, 650, 651], "made": [47, 375, 418, 463, 580, 584, 586, 587, 592, 593, 651], "done": [47, 160, 164, 444, 463, 592, 594, 643, 650, 651, 653], "both": [47, 160, 165, 200, 361, 435, 436, 463, 583, 587, 591, 592, 603, 606, 608, 612, 627, 641, 647, 648, 650, 651], "numpi": [47, 133, 147, 176, 190, 463, 583, 585, 586, 587, 589, 591, 592, 594, 597, 606, 607, 611, 614, 619, 622, 623, 625, 630, 632, 633, 634, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653], "see": [47, 120, 127, 160, 170, 216, 230, 242, 245, 247, 255, 259, 261, 276, 289, 305, 317, 322, 338, 350, 355, 367, 375, 376, 414, 424, 435, 444, 463, 583, 585, 587, 589, 591, 592, 602, 603, 611, 632, 641, 643, 645, 647, 648, 651], "how": [47, 373, 375, 376, 463, 583, 584, 585, 586, 587, 589, 591, 593, 602, 603, 611, 612, 613, 641, 644, 647, 648, 653], "reflectivity_copi": [47, 463], "gatefilt": [48, 155, 156, 157, 160, 161, 162, 163, 164, 165, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 405, 413, 414, 419, 438, 439, 440, 442, 446, 447, 464, 583, 585, 587, 589, 591, 592, 598, 606, 607, 608, 612, 631, 637, 642, 645, 651], "updat": [48, 464, 584, 588, 589, 591, 592, 613, 632, 641, 651], "mask": [48, 131, 133, 136, 140, 147, 151, 152, 160, 161, 162, 163, 165, 174, 176, 179, 183, 190, 194, 195, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 369, 370, 371, 414, 419, 441, 464, 567, 587, 591, 597, 606, 607, 632, 637, 642, 643, 644, 649], "filter": [48, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 164, 165, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 405, 413, 414, 418, 438, 439, 440, 464, 583, 585, 587, 589, 591, 598, 606, 607, 608, 612, 631, 637, 645, 648], "equal": [48, 121, 123, 124, 132, 133, 138, 146, 147, 150, 161, 175, 176, 181, 189, 190, 193, 350, 367, 378, 444, 446, 464, 587, 614, 632, 633, 648], "condit": [48, 127, 131, 133, 140, 147, 152, 160, 170, 174, 176, 183, 190, 195, 378, 428, 464, 583, 598, 644, 648], "append": [48, 464, 589, 591, 634], "filtered_": [48, 464], "prefix": [48, 459, 464], "check": [49, 58, 77, 161, 162, 163, 164, 372, 418, 441, 465, 474, 493, 564, 576, 580, 585, 586, 589, 591, 592, 594, 641, 650, 651, 652], "keyerror": [49, 77, 388, 389, 399, 400, 465, 493, 650], "array_lik": [50, 466, 569], "view": [51, 52, 54, 381, 386, 387, 393, 397, 398, 403, 467, 468, 470, 583, 612, 645, 647, 649], "possibl": [51, 52, 54, 373, 467, 468, 470, 563, 587, 589, 591, 595, 611, 632, 645, 647], "underli": [51, 52, 54, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 467, 468, 470, 587, 641], "get_gate_x_y_z": [54, 470, 622, 623], "obtain": [54, 57, 470, 473, 592, 634, 643, 651], "plot": [54, 57, 202, 203, 204, 205, 206, 207, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 442, 447, 470, 473, 583, 584, 591, 597, 598, 602, 603, 606, 607, 608, 628, 629, 630, 632, 635, 636, 637, 640, 641, 643, 644, 645, 647, 648], "correct": [54, 57, 170, 198, 199, 200, 201, 367, 433, 438, 470, 473, 542, 583, 585, 589, 591, 592, 595, 598, 599, 603, 613, 633, 637, 641, 645, 651], "spatial": [54, 57, 160, 470, 473, 583, 647], "context": [54, 57, 470, 473, 585, 630], "request": [54, 123, 369, 413, 414, 436, 470, 587, 591, 592, 593, 594, 641, 651], "area": [55, 217, 219, 224, 228, 229, 230, 231, 277, 279, 284, 288, 289, 290, 306, 308, 316, 317, 321, 322, 323, 339, 341, 349, 350, 354, 355, 356, 440, 444, 471, 567, 583, 585, 587, 589], "squar": [55, 418, 435, 438, 446, 471], "assumpt": [55, 438, 471], "size": [55, 157, 160, 161, 163, 164, 199, 220, 280, 309, 342, 411, 413, 414, 418, 424, 432, 438, 440, 471, 554, 579, 586, 613, 626, 632], "m": [55, 58, 162, 198, 201, 205, 265, 294, 327, 412, 418, 422, 426, 435, 437, 438, 439, 442, 444, 471, 474, 554, 555, 567, 577, 583, 585, 586, 587, 589, 591, 592, 594, 602, 614, 623, 632, 634, 637, 641, 650, 651], "reset_gate_coord": [56, 472], "filter_transit": [56, 57, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 472, 473, 587], "With": [56, 57, 472, 473, 641, 642, 643], "therefor": [56, 57, 438, 472, 473, 583, 645, 649], "more": [56, 57, 62, 161, 164, 377, 412, 413, 414, 419, 424, 444, 472, 473, 478, 556, 557, 583, 584, 585, 586, 587, 588, 591, 592, 606, 611, 622, 623, 641, 645, 649, 651], "effici": [56, 57, 413, 472, 473, 641, 645], "than": [56, 57, 161, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 424, 438, 472, 473, 567, 585, 586, 587, 632, 653], "through": [56, 57, 242, 437, 472, 473, 586, 587, 589, 590, 592, 606, 611, 651], "No": [56, 57, 162, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 377, 414, 472, 473, 587], "get_field": [57, 473, 622, 623], "check_uniform": [58, 474], "lookuperror": [58, 474], "except": [58, 377, 394, 474, 587, 591, 647], "skip": [58, 161, 162, 372, 418, 474, 585, 591, 592, 651], "nyquist_veloc": [58, 161, 162, 379, 474, 586, 589, 645, 649], "slice": [59, 71, 88, 99, 245, 246, 247, 248, 259, 260, 261, 262, 475, 487, 504, 515, 626, 647, 649], "_io": [62, 478], "textiowrapp": [62, 478], "encod": [62, 378, 478, 591], "utf": [62, 478], "compact": [62, 478], "c": [62, 119, 122, 125, 155, 157, 159, 160, 162, 255, 350, 426, 428, 434, 438, 439, 440, 442, 447, 478, 542, 583, 587, 589, 591, 592, 606, 641, 644, 647, 650, 651, 653], "f": [62, 255, 350, 392, 402, 478, 583, 584, 585, 586, 587, 589, 603, 611, 625, 632, 641, 653], "minim": [62, 438, 444, 478], "everyth": [62, 478, 587, 592, 603, 651], "screen": [62, 478], "gate_": [65, 93, 481, 509], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 392, 402, 438, 440, 483, 484, 485, 486, 487, 488, 489, 511, 512, 513, 514, 515, 516, 517, 589, 649], "over": [69, 72, 73, 97, 100, 101, 160, 161, 198, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 424, 485, 488, 489, 513, 516, 517, 563, 583, 587, 589, 591, 606, 632, 634, 641, 644, 649], "npulses_max": [74, 490, 540], "velocity_bin": [74, 490], "simpl": [117, 405, 533, 591, 644, 645], "vpt": [117, 208, 216, 230, 268, 276, 289, 297, 305, 322, 330, 338, 355, 533, 570, 586, 591], "mean": [117, 119, 446, 533, 550, 551, 563, 568, 572, 573, 583, 586, 591, 592, 595, 602, 603, 648, 649, 651], "kilomet": [119, 424], "equat": [119, 438, 563, 583, 591], "28": [119, 583, 585, 587, 591, 632, 634], "b": [119, 358, 416, 424, 439, 447, 583, 584, 585, 586, 591, 592, 641, 651], "doviak": 119, "zrnic": 119, "sqrt": [119, 122, 583, 622, 623, 634], "r": [119, 121, 122, 123, 124, 125, 160, 162, 166, 167, 209, 222, 223, 243, 257, 269, 282, 283, 298, 311, 312, 313, 314, 331, 344, 345, 346, 347, 416, 424, 427, 430, 431, 432, 444, 446, 563, 567, 583, 592, 602, 614, 622, 623, 632, 651], "sin": [119, 122, 125, 583, 585], "theta_": 119, "arcsin": [119, 122, 585], "frac": 119, "theta_a": 119, "arc": [119, 564], "length": [119, 166, 167, 438, 585, 587, 591], "effect": [119, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 229, 413, 414, 585, 622], "taken": [119, 166, 167, 217, 277, 306, 339, 542, 556, 557, 563, 568, 569, 615], "6371": [119, 122, 125, 564, 576, 585], "km": [119, 122, 125, 203, 220, 225, 226, 232, 263, 280, 285, 286, 291, 292, 309, 318, 319, 324, 325, 342, 350, 351, 352, 357, 422, 424, 438, 564, 576, 584, 585, 586, 587, 615, 620, 621, 623, 630, 638, 647], "doppler": [119, 160, 161, 162, 446, 563, 586, 592, 596, 599, 600, 615, 625, 641, 649, 651], "edit": [119, 590, 591, 592, 651], "1993": 119, "21": [119, 432, 583, 585, 589, 602, 604], "vector": [120, 123, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 422, 435, 583, 585, 587, 591], "util": [120, 157, 160, 161, 229, 426, 448, 586, 591, 592, 603, 614, 627, 630, 632, 641, 651], "antenna_to_cartesian": [120, 591], "detail": [120, 127, 160, 170, 242, 255, 317, 350, 375, 376, 412, 414, 424, 583, 585, 587, 589, 592, 593, 594, 632, 641, 649, 651], "cartograph": [121, 122, 123, 124, 125, 325], "differ": [121, 123, 124, 160, 358, 405, 424, 427, 438, 584, 585, 586, 587, 591, 592, 600, 602, 606, 632, 636, 647, 650, 651], "pass": [121, 123, 124, 160, 161, 162, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 360, 361, 369, 371, 412, 414, 438, 585, 587, 591, 594, 602, 603, 644, 647], "desir": [121, 123, 124, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 381, 424, 446, 536, 577, 585, 586, 630, 648], "6370997": [122, 125], "rho": 122, "arctan2": [122, 634], "correspond": [122, 125, 141, 142, 184, 185, 216, 244, 258, 276, 305, 338, 362, 388, 399, 414, 555, 563, 565, 585, 587, 592, 602, 614, 645, 649, 651], "typic": [122, 125, 127, 131, 133, 140, 147, 152, 161, 170, 174, 176, 183, 190, 195, 377, 412, 413, 653], "snyder": [122, 125], "manual": [122, 125, 591, 594], "geolog": [122, 125], "survei": [122, 125], "profession": [122, 125], "paper": [122, 125, 641], "1395": [122, 125, 591], "1987": [122, 125], "pp": [122, 125], "191": [122, 125], "202": [122, 125], "find": [123, 161, 164, 405, 412, 413, 414, 433, 583, 587, 589, 591, 603, 641, 653], "arcco": 125, "exclude_bas": [127, 170], "boolean": [127, 133, 141, 142, 147, 170, 176, 184, 185, 190, 358, 424, 442, 591, 648], "variou": [127, 163, 165, 170, 198, 199, 200, 201, 555, 566, 585, 591, 600, 629, 641], "exclude_below": [127, 170, 583, 585, 589, 606, 631, 637, 648], "suggest": [127, 170, 584, 591], "begin": [127, 160, 161, 162, 166, 167, 170, 205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 367, 368, 371, 373, 591], "import": [127, 170, 442, 446, 447, 459, 584, 591, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 643, 644, 645, 647, 648, 649, 650], "radar_fil": [127, 170, 598, 611, 613], "nc": [127, 170, 583, 584, 586, 591, 597, 606, 608, 611, 612, 613, 617, 619, 620, 621, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 643, 644, 648], "10": [127, 163, 166, 167, 170, 412, 414, 424, 428, 429, 437, 439, 440, 555, 567, 583, 585, 586, 587, 589, 592, 598, 603, 606, 607, 611, 614, 615, 617, 619, 622, 623, 626, 632, 634, 637, 641, 643, 644, 645, 647, 648, 649, 651], "normalized_coherent_pow": [127, 170, 583, 648], "75": [127, 170, 231, 290, 323, 356, 377, 424, 437, 583, 589, 606, 622, 632, 643, 647, 648], "exclude_mask": [129, 131, 132, 133, 134, 135, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 607], "op": [129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 586], "inclus": [129, 131, 134, 139, 143, 145, 148, 153, 172, 174, 177, 182, 186, 188, 191, 196, 412, 414, 537, 591, 611], "below": [131, 145, 160, 163, 165, 166, 167, 174, 188, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 413, 414, 424, 427, 430, 431, 438, 563, 583, 584, 585, 586, 587, 611, 632, 643, 645, 648, 652], "compar": [131, 160, 174, 419, 554, 592, 600, 605, 609, 611, 632, 651], "against": [131, 160, 174, 593, 594, 622], "mark": [131, 140, 141, 142, 152, 160, 174, 183, 184, 185, 195, 584], "exclus": [131, 174], "oper": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 373, 412, 428, 432, 440, 444, 583, 586, 587, 592, 632, 650, 651], "merg": [131, 133, 140, 147, 152, 161, 174, 176, 183, 190, 195, 363, 592, 594, 651], "AND": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195], "OR": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 583], "gener": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 204, 205, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 242, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 264, 265, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 294, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 327, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 376, 379, 394, 405, 413, 414, 433, 438, 585, 587, 588, 591, 594, 597, 598, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641], "meet": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 375, 641], "result": [131, 133, 140, 147, 152, 160, 161, 162, 174, 176, 183, 190, 195, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 360, 376, 381, 414, 419, 442, 447, 574, 585, 586, 587, 592, 603, 633, 641, 647, 651], "previous": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 602, 632], "becaus": [131, 133, 140, 174, 176, 183, 438, 632, 653], "invalid": [131, 133, 135, 140, 165, 174, 176, 178, 183, 198, 199, 200, 201, 583], "shape": [133, 147, 176, 190, 367, 441, 583, 586, 587, 589, 591, 592, 632, 643, 647, 648, 649, 651], "v1": [134, 139, 148, 153, 177, 182, 191, 196, 583, 584, 594, 650], "v2": [134, 139, 148, 153, 177, 182, 191, 196, 592, 651], "insid": [134, 148, 177, 191, 644], "interv": [134, 139, 148, 153, 161, 165, 177, 182, 191, 196, 200, 554, 568, 569, 583, 591], "occur": [135, 154, 164, 178, 197, 369, 370, 583, 645, 649], "nan": [135, 154, 160, 165, 178, 197, 200, 440, 583, 586, 591, 630], "inf": [135, 154, 165, 178, 197, 200, 591], "outsid": [139, 153, 165, 182, 196, 200, 224, 227, 229, 230, 242, 244, 246, 248, 258, 260, 262, 284, 287, 289, 316, 317, 320, 322, 349, 350, 353, 355, 587, 591, 592, 651], "trans_valu": [140, 152, 183, 195], "construct": [140, 152, 183, 195, 414, 586], "element": [141, 142, 160, 161, 162, 163, 164, 184, 185, 379, 413, 414, 418, 441, 554, 568, 569, 572, 573, 585, 586, 587], "NOT": [141, 142, 184, 185], "gate_includ": [141, 184, 648], "lost": [141, 142, 184, 185, 440, 580, 583, 647], "again": [141, 142, 184, 185, 587, 594, 603, 613, 650], "gate_exclud": [142, 185, 648], "z_offset": 155, "doc": [155, 156, 157, 167, 583, 587, 591, 592, 594, 597, 603, 641, 650, 651, 653], "15": [155, 438, 567, 583, 584, 585, 586, 597, 598, 603, 611, 614, 620, 621, 622, 623, 626, 627, 630, 634, 645, 649], "fzl": [155, 156, 157, 166, 167], "4000": [155, 166, 167, 647], "rhv_min": 155, "ncp_min": 155, "a_coef": [155, 157], "06": [155, 583, 585, 589, 640], "beta": [155, 157, 426, 427, 428, 429, 430, 431], "refl_field": [155, 156, 157, 165, 166, 167, 199, 200, 414, 417, 423, 424, 427, 429, 430, 431, 432, 437, 444, 597, 632, 633], "ncp_field": [155, 165, 166, 167, 200, 597], "rhv_field": [155, 165, 166, 167, 199, 200, 437, 597, 633], "spec_at_field": [155, 156, 157], "corr_refl_field": [155, 156, 157], "attenu": [155, 156, 157, 426, 427, 430, 591, 596, 599, 600, 633, 641], "phi": [155, 157, 166, 591, 597], "copol_coeff": [155, 542, 597, 630, 631, 643], "norm_coherent_pow": [155, 542, 597, 643], "proc_dp_phase_shift": [155, 597, 630, 643], "reflectivity_horizont": [155, 160, 542, 584, 597, 606, 611, 613, 617, 619, 620, 621, 625, 627, 630, 631, 632, 638, 643, 644], "supress": [155, 233, 244, 249, 317, 350, 587, 591], "freez": [155, 156, 157], "layer": [155, 156, 157, 198, 201, 377, 427, 438, 442], "combin": [155, 156, 157, 571, 583, 585, 586, 592, 594, 651], "minimum": [155, 165, 166, 167, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 412, 414, 424, 537, 563, 583, 585, 587, 591, 632, 647], "normal": [155, 165, 166, 167, 200, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 587, 622], "coher": [155, 165, 166, 167, 200], "power": [155, 157, 165, 166, 167, 200, 426, 427, 428, 429, 430, 431, 583, 586], "zdr_field": [155, 156, 157, 159, 199, 420, 437, 633], "spec_at": [155, 156, 157, 597, 633], "cor_z": [155, 156, 157, 597, 633], "gu": [155, 157], "et": [155, 157, 159, 424, 428, 432, 437, 438, 444, 632], "al": [155, 157, 159, 424, 428, 432, 437, 438, 439, 444, 632], "heavi": [155, 157, 567, 585, 614, 622], "rain": [155, 157, 426, 427, 428, 429, 432, 444, 591, 614, 622, 632, 633], "jamc": [155, 157, 440, 555], "2011": [155, 157, 630], "50": [155, 157, 554, 583, 584, 585, 586, 589, 608, 626, 628, 630, 633, 647, 649], "39": [155, 157, 583, 585, 630], "58": [155, 157, 586, 630], "pia_coef": 156, "pida_coef": 156, "temp_field": [156, 157, 201, 437, 633], "iso0_field": [156, 157, 198], "pia_field": [156, 157], "spec_diff_at_field": [156, 157], "pida_field": [156, 157], "corr_zdr_field": [156, 157], "temp_ref": [156, 157, 633], "linear": [156, 166, 167, 242, 369, 424, 440, 563, 575, 586, 587, 591, 632, 641], "dependec": 156, "comput": [156, 157, 159, 199, 420, 421, 422, 423, 424, 438, 439, 440, 550, 551, 552, 553, 554, 568, 569, 572, 573, 579, 583, 586, 591, 633, 634, 641], "either": [156, 157, 160, 161, 162, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 320, 321, 322, 339, 340, 341, 349, 353, 354, 355, 363, 392, 402, 427, 430, 431, 592, 632, 650, 651], "frequenc": [156, 157, 379, 426, 427, 428, 430, 431, 434, 438, 439, 440, 586], "refl": [156, 157, 620], "integr": [156, 157, 583, 586], "pida_coeff": 156, "0c": [156, 157], "isotherm": [156, 157], "height_over_iso0": [156, 157, 648], "fixed_fzl": [156, 157], "pia_dict": [156, 157], "spec_diff_at": [156, 157, 633], "pida_dict": [156, 157], "cor_zdr": [156, 157, 633], "smooth_window_len": 157, "d": [157, 162, 205, 265, 294, 327, 381, 382, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 440, 447, 555, 583, 585, 586, 587, 592, 630, 641, 651], "smooth": [157, 164, 438, 564, 576, 587, 622, 623, 647], "window": [157, 160, 166, 167, 199, 418, 440, 446, 554, 574, 579, 591, 592, 641, 651], "expon": [157, 166, 167, 416, 426, 427, 428, 429, 430, 431], "law": [157, 426, 427, 428, 429, 430, 431], "ryzhkov": [157, 426, 442, 555], "potenti": [157, 426, 583], "rainfal": [157, 426, 427, 428, 429, 430, 431, 432, 438, 440], "estim": [157, 198, 201, 219, 279, 308, 341, 422, 426, 427, 428, 429, 430, 431, 432, 438, 439, 440, 442, 555, 563, 586, 591, 632], "mitig": [157, 426], "partial": [157, 426, 591], "beam": [157, 411, 413, 414, 426, 586], "blockag": [157, 426], "network": [157, 161, 371, 426, 585], "jaot": [157, 159], "2014": [157, 426, 439, 442, 641], "31": [157, 369, 426, 583, 585, 586, 589, 603, 630, 640], "599": [157, 426], "619": [157, 426, 591], "bia": [158, 591], "magnitud": [158, 438, 634, 649], "corrected_field": 158, "urhohv_field": 159, "snr_field": [159, 417, 423], "nh_field": 159, "nv_field": 159, "rhohv_field": [159, 420, 421], "nois": [159, 417, 422, 423, 563, 586, 591, 645], "eq": [159, 620], "6": [159, 199, 427, 583, 585, 586, 603, 606, 611, 612, 616, 619, 630, 631, 633, 634, 639, 643, 645, 648, 649], "2006": [159, 603], "subtract": [159, 424], "uncorrect": [159, 583, 637], "snr": [159, 417, 423, 591], "channel": [159, 377, 583, 586, 591, 594], "meteo": 159, "franc": 159, "23": [159, 583, 585, 586], "1340": 159, "1356": [159, 591], "last_radar": 160, "sonde_profil": 160, "filt": 160, "rsl_badval": 160, "131072": 160, "keep_origin": [160, 161, 162], "set_limit": [160, 161, 162, 584, 614, 615, 616, 618, 620, 621, 622, 623, 625], "vel_field": [160, 161, 162, 418, 447, 637, 645], "corr_vel_field": [160, 161, 162], "last_vel_field": 160, "max_shear": 160, "05": [160, 413, 414, 583, 585, 626, 628, 630, 635], "sign": [160, 591, 622, 623], "dealia": [160, 161, 162, 425, 589, 591, 596, 599, 600, 636, 640, 645], "4dd": [160, 591], "univers": [160, 374, 432, 583, 591, 641], "washington": 160, "previou": [160, 317, 350, 587, 591, 594], "sound": [160, 591], "For": [160, 245, 247, 259, 261, 367, 377, 413, 438, 583, 584, 586, 587, 591, 592, 595, 602, 606, 633, 641, 648, 649, 651, 653], "best": [160, 585], "argument": [160, 161, 162, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 277, 284, 288, 289, 306, 313, 314, 315, 316, 317, 318, 321, 322, 339, 346, 347, 348, 349, 350, 351, 354, 355, 369, 371, 379, 381, 412, 414, 439, 440, 591, 592, 651], "_fourdd_interfac": 160, "fourdd_dealia": 160, "fine": 160, "tune": [160, 632], "behavior": [160, 317, 350, 367, 381, 587, 591, 595], "fourdd": 160, "document": [160, 245, 247, 255, 259, 261, 317, 350, 370, 375, 376, 575, 581, 584, 586, 587, 588, 592, 593, 641, 647, 651], "dealias": [160, 161, 162, 425, 591, 592, 598, 602, 637, 641, 642, 651], "mean_doppler_veloc": [160, 586, 625, 630, 637, 643], "successfulli": 160, "greatli": 160, "improv": [160, 439, 440, 567, 587, 594, 614], "final": [160, 439, 440, 583, 584, 590, 594, 632], "horizontalwindprofil": [160, 362, 363, 447, 575, 591, 592, 651], "sond": [160, 161, 362, 363, 433, 591, 598], "moment_based_gate_filt": [160, 161, 162, 414, 585], "bergen": 160, "alber": 160, "bad": [160, 438, 439, 440, 444], "rsl": [160, 361, 372, 373, 591, 641, 650], "procedur": [160, 161, 162], "fail": [160, 161, 162, 367, 377, 591, 592, 651], "otherwis": [160, 388, 399, 427, 430, 431, 435, 594], "maxshear": 160, "maximum": [160, 161, 165, 166, 167, 198, 199, 200, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 358, 377, 412, 414, 419, 424, 427, 430, 431, 438, 537, 554, 570, 583, 585, 587, 631, 632, 637, 649], "shear": 160, "incorpor": [160, 632], "match": [160, 163, 164, 203, 263, 292, 325, 373, 405, 591, 606, 613], "toward": 160, "neg": [160, 217, 228, 277, 288, 306, 321, 339, 354, 438, 583, 591, 611], "compthresh": 160, "fraction": [160, 585, 632, 649], "threshold": [160, 163, 164, 165, 198, 199, 200, 201, 358, 424, 427, 430, 431, 563, 567, 583, 585, 589, 632, 637, 645, 648], "continu": [160, 162, 586, 591, 592, 651], "unfold": [160, 161, 166, 167, 438], "compthresh2": 160, "thresh": [160, 427, 430, 431], "adjac": [160, 587], "count": [160, 606, 645, 649], "assign": [160, 585, 591, 632], "question": [160, 359, 414, 587, 641], "ckval": 160, "absolut": [160, 554], "stdthresh": 160, "deviat": [160, 552, 553, 569, 583, 645], "portion": [160, 589, 647], "epsilon": 160, "miss": [160, 438, 439, 440, 444, 583, 591, 603], "maxcount": 160, "allow": [160, 163, 164, 216, 276, 305, 338, 405, 555, 584, 587, 591, 595, 606, 649, 653], "fold": [160, 161, 602], "pass2": 160, "retain": [160, 161, 162, 165, 198, 199, 200, 201, 580], "rm": 160, "what": [160, 169, 414, 583, 586, 587, 589, 590, 591, 592, 602, 611, 637, 643, 645, 648, 651, 653], "left": [160, 315, 348, 585, 587, 589, 611, 613], "proxim": 160, "side": 160, "doubl": [160, 377, 632], "captur": [160, 637], "suffici": 160, "good": [160, 161, 583, 584, 594], "mingood": 160, "ba_mincount": 160, "neighbor": [160, 369, 414, 583, 591, 647], "ba_edgecount": 160, "usuccess": 160, "radialvelvolum": 160, "lastvelvolum": 160, "unfoldedvolum": 160, "sondvolum": 160, "vr_corr": 160, "due": [160, 419, 583, 585, 587, 591, 606, 645, 650, 653], "call": [160, 163, 216, 217, 219, 224, 228, 229, 230, 244, 276, 277, 279, 284, 288, 289, 305, 306, 308, 316, 317, 321, 322, 338, 339, 341, 349, 350, 354, 355, 372, 377, 381, 555, 566, 584, 586, 587, 592, 594, 645, 649, 651, 653], "999": [160, 381, 583, 591], "long": [160, 428, 591, 644, 649], "n": [160, 418, 437, 554, 583, 585, 586, 587, 589, 592, 602, 606, 614, 625, 627, 630, 632, 641, 651, 653], "jame": 160, "houz": [160, 358, 424, 444, 632], "jr": [160, 424, 444, 632], "four": [160, 369, 370, 372], "dealis": 160, "scheme": [160, 358, 412, 424, 438, 584, 632], "2001": 160, "18": [160, 583, 585, 608, 609, 612, 623, 628], "1674": 160, "ref_vel_field": 161, "interval_split": 161, "interval_limit": 161, "skip_between_rai": 161, "100": [161, 163, 165, 200, 220, 225, 242, 280, 285, 309, 342, 379, 447, 583, 585, 586, 587, 589, 608, 612, 622, 623, 634], "skip_along_rai": 161, "nyquist_vel": [161, 162, 589, 637, 645], "check_nyquist_uniform": [161, 162, 418], "rays_wrap_around": [161, 162], "region": [161, 167, 255, 317, 350, 419, 567, 583, 585, 586, 587, 589, 591, 592, 596, 599, 600, 602, 614, 632, 637, 648, 651], "similar": [161, 586, 587, 606, 647], "pair": [161, 242, 369, 381, 389, 394, 400, 585, 643], "accomplish": [161, 373, 600, 636], "problem": [161, 166, 167, 292, 325, 414, 603], "dynam": [161, 583], "reduct": 161, "anchor": 161, "onc": [161, 587, 592, 594, 632, 650, 651, 653], "complet": [161, 591], "simul": [161, 575, 591], "simulated_vel_from_profil": [161, 592, 651], "segment": [161, 313, 314, 346, 347, 591], "split": [161, 567, 583], "larger": [161, 587, 632], "longer": [161, 585, 591, 592, 641, 650, 651], "process": [161, 166, 167, 583, 586, 589, 591, 592, 594, 602, 641, 651], "better": [161, 220, 225, 280, 285, 309, 318, 342, 351, 591, 641, 645], "seem": 161, "compromis": 161, "artifact": [161, 645, 647], "free": [161, 588, 589, 641], "cover": [161, 583], "entir": [161, 162, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 414, 577, 583, 586, 587], "join": [161, 459, 591], "gap": [161, 163, 164, 647], "connect": [161, 162], "disabl": [161, 162, 165, 198, 199, 200, 201], "across": [161, 585, 591, 631], "so": [161, 217, 228, 277, 288, 306, 321, 339, 354, 373, 414, 583, 586, 587, 589, 591, 592, 602, 603, 632, 641, 651, 653], "averag": [161, 358, 424, 563, 568, 589, 632, 634], "individu": [161, 162, 414], "attempt": [161, 162, 375, 376, 591], "de": [161, 162, 348, 547, 548], "alias": [161, 162, 547, 548, 589, 591, 645, 649], "corr_vel": [161, 162], "unwrap_unit": 162, "skip_check": [162, 591], "multi": [162, 591], "unwrap": [162, 166, 167, 591], "independ": 162, "often": [162, 419], "give": [162, 377, 587, 593, 594, 637, 638, 639, 641, 645, 648], "superior": 162, "lower": [162, 242, 244, 246, 248, 258, 260, 262, 586, 607, 608], "contamin": [162, 444], "clutter": [162, 645, 648], "poor": 162, "verif": [162, 555, 591], "appropi": [162, 216, 276, 305, 338], "offer": [162, 584], "extrem": 162, "miguel": 162, "arevallilo": 162, "herraez": 162, "david": [162, 587], "burton": 162, "michael": [162, 587], "lalor": 162, "munther": 162, "gdeisat": 162, "fast": 162, "two": [162, 379, 412, 424, 435, 436, 444, 571, 572, 573, 585, 586, 587, 589, 591, 592, 594, 600, 605, 609, 610, 612, 627, 628, 644, 647, 651], "sort": [162, 585, 589, 590, 591], "reliabl": 162, "follow": [162, 165, 199, 200, 375, 376, 378, 379, 392, 402, 413, 414, 437, 438, 583, 585, 586, 587, 589, 592, 594, 595, 602, 630, 641, 650, 651], "noncontinu": 162, "optic": 162, "vol": 162, "41": [162, 585, 630, 634, 647], "2002": 162, "7437": 162, "abdul": 162, "rahman": 162, "h": [162, 205, 255, 265, 294, 327, 350, 442, 563, 583, 585, 586, 606, 613], "osten": 162, "gorecki": 162, "e": [162, 164, 166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 362, 377, 392, 402, 424, 438, 444, 567, 583, 584, 586, 587, 592, 602, 614, 632, 650, 651], "l": [162, 166, 167, 221, 225, 226, 255, 281, 285, 286, 310, 319, 343, 350, 352, 421, 567, 583, 587, 614], "novak": 162, "ed": 162, "metrologi": 162, "2005": [162, 424, 632], "32": [162, 583, 591, 611, 615, 616, 617, 627, 630, 634, 649], "40": [162, 255, 583, 586, 598, 608, 613, 617, 619, 622, 626, 628, 632, 637], "intern": [162, 587], "societi": [162, 416, 419, 428], "photon": 162, "label_dict": [163, 164], "delta": [163, 164, 439], "despeckl": [163, 591], "identifi": [163, 164, 358, 424, 563, 583, 587, 589, 614, 632, 648], "small": [163, 164, 424, 444, 591, 606, 622], "investig": [163, 164, 442, 602], "scipi": [163, 164, 438, 575, 583, 591, 592, 622, 623, 641, 650, 651, 653], "core": [163, 164, 358, 377, 405, 414, 424, 439, 440, 555, 566, 586, 591, 592, 597, 632, 651], "queri": [163, 164, 414, 583, 587], "speckl": [163, 632], "find_object": 163, "tupl": [163, 164, 217, 219, 222, 223, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 277, 279, 282, 283, 284, 287, 288, 289, 291, 306, 308, 311, 312, 316, 317, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 353, 354, 355, 357, 389, 400, 412, 414, 418, 435, 436, 537, 554, 587, 591], "contigu": [163, 164], "perman": 163, "deg": [163, 164, 198, 201, 438, 577, 583, 634], "label": [164, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 282, 283, 284, 287, 288, 289, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 312, 315, 316, 317, 320, 321, 322, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 344, 345, 348, 349, 350, 353, 354, 355, 580, 583, 585, 587, 589, 591, 606, 612, 613, 622, 623, 627, 633], "period": [164, 583, 586, 645], "account": [164, 591], "g": [164, 377, 412, 438, 440, 447], "examin": [164, 360, 373, 376, 586, 589, 592, 641, 651], "box": [164, 377, 633], "alwai": [164, 361, 373, 424, 438, 587, 591, 595, 641], "readi": 164, "min_ncp": [165, 166, 200], "min_rhv": [165, 166, 199, 200], "min_refl": [165, 200], "20": [165, 199, 200, 442, 555, 583, 584, 585, 586, 587, 589, 602, 603, 606, 609, 612, 613, 614, 617, 619, 620, 621, 622, 623, 625, 631, 632, 638, 639, 643, 647, 649], "max_refl": [165, 200], "undesir": [165, 198, 199, 200, 201, 414], "cross": [165, 199, 200, 217, 220, 242, 277, 280, 306, 309, 339, 342, 556, 557, 583, 586, 589, 591, 600, 610, 619, 628, 632, 649], "ratio": [165, 199, 200, 231, 290, 323, 356, 417, 420, 583, 586, 589, 649], "min_rhi": [165, 200], "criteria": [165, 198, 199, 200, 201, 414, 438, 444], "built": [165, 198, 199, 200, 201, 413, 414], "lowest": [165, 198, 199, 200, 201, 419, 441, 589, 602, 606, 630, 632], "greatest": [165, 200], "self_const": [166, 167], "60000": [166, 167, 608, 612, 647], "low_z": [166, 167], "high_z": [166, 167], "53": [166, 167, 583, 585, 589], "min_phidp": [166, 167], "01": [166, 167, 315, 348, 438, 583, 585, 586, 589, 599, 609, 611, 628], "sys_phas": 166, "overide_sys_phas": 166, "nowrap": [166, 167], "really_verbos": [166, 167], "lp_solver": [166, 167], "pyglpk": [166, 167, 591, 641, 650], "kdp_field": [166, 167, 427, 428, 430, 431, 437, 438, 439, 440, 633], "unf_field": [166, 167], "window_len": [166, 167], "proc": [166, 167, 438, 591], "coef": [166, 167, 591], "914": [166, 167, 591], "lp": [166, 167, 591, 641], "consist": [166, 167, 591, 647], "factor": [166, 167, 379, 419, 426, 427, 428, 429, 430, 431, 554, 583, 584, 586, 613, 621, 627, 647], "low": [166, 167, 369, 438, 614], "high": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 438, 586, 587, 589, 633], "copolar": [166, 167, 437, 631], "automat": [166, 373, 378, 379, 414, 418, 444, 585, 587, 591, 592, 594, 617, 641, 651], "lpx": [166, 167], "messag": [166, 167, 233, 249, 369, 584, 591, 594, 603], "suppress": [166, 167, 438], "cvxopt": [166, 167, 591, 641, 650], "cylp": [166, 167, 591, 641, 650, 653], "cylp_mp": [166, 167], "modul": [166, 167, 542, 581, 587, 591, 592, 602, 603, 641, 644, 645, 647, 648, 649, 650, 651], "solv": [166, 167, 590, 591], "horizon": [166, 167, 437], "sobel": [166, 167], "worker": [166, 167], "link": [166, 167, 585, 586, 589, 591], "1z": [166, 167], "reproc_phas": [166, 167], "sob_kdp": [166, 167], "recalcul": [166, 167, 643], "giangrand": [166, 167, 641], "mcgraw": [166, 167], "lei": [166, 167], "applic": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 424, 574, 587, 589, 592, 651], "program": [166, 167, 591, 592, 641, 651], "atmo": [166, 167, 432, 437, 442, 555, 567, 592, 614, 651], "tech": [166, 167, 437, 567, 614], "2013": [166, 167, 439, 442, 649], "30": [166, 167, 424, 583, 585, 586, 587, 606, 613, 617, 619, 632, 645], "1716": [166, 167], "system_phas": 167, "ncpt": 167, "first_gate_sysp": 167, "carri": 167, "smaller": [167, 350, 583, 586, 587, 592, 632, 651], "off": [167, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 436, 442, 583, 587, 611, 632], "custom": [168, 216, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 276, 277, 278, 279, 284, 288, 289, 305, 306, 307, 308, 316, 317, 321, 322, 338, 339, 340, 341, 349, 350, 354, 355, 413, 587, 647], "max_h_iso0": 198, "thick": [198, 201], "400": [198, 201, 591, 643], "beamwidth": [198, 201], "primarili": [198, 201], "melt": [198, 201, 427, 438, 442, 567, 614, 632, 633], "db": [198, 201, 417, 622, 649], "phi_field": 199, "textzdr_field": 199, "textrhv_field": 199, "textphi_field": 199, "textrefl_field": 199, "wind_siz": [199, 418, 579, 645], "7": [199, 367, 446, 579, 583, 585, 586, 587, 589, 592, 594, 603, 612, 614, 626, 648, 649, 651], "max_textphi": 199, "max_textrhv": 199, "max_textzdr": 199, "85": [199, 583, 587, 634], "max_textrefl": 199, "move": [199, 563, 585, 589, 591, 606], "highest": 199, "min_temp": 201, "There": [202, 585, 587, 589, 594, 611, 650, 653], "colorblind": [202, 584, 589, 611], "friendli": [202, 584, 589, 591, 611], "revers": [202, 217, 228, 277, 288, 306, 321, 339, 354, 373, 438, 591], "_r": 202, "matplotlib": [202, 217, 219, 222, 223, 224, 228, 229, 230, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 288, 289, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 377, 583, 584, 585, 586, 589, 591, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 641, 643, 644, 645, 647, 648, 650, 653], "pyart_colormap": 202, "bluebrown10": [202, 611], "bluebrown11": [202, 611], "brbu10": [202, 611], "brbu12": [202, 611], "bu10": [202, 611], "bu7": [202, 611], "budor12": [202, 611], "budor18": [202, 611], "budrd12": [202, 611], "budrd18": [202, 611], "bugr14": [202, 611], "bugy8": [202, 611], "buor10": [202, 611], "buor12": [202, 611], "buor8": [202, 611], "buorr14": [202, 611], "carbone11": [202, 611], "carbone17": [202, 611], "carbone42": [202, 611], "cat12": [202, 611], "ewilson17": [202, 611], "grmg16": [202, 611], "gray5": [202, 611], "gray9": [202, 611], "nwsref": [202, 611], "nwsvel": [202, 611], "nws_spw": [202, 611], "pd17": [202, 611], "rrate11": [202, 611], "rdylbu11b": [202, 611], "refdiff": [202, 611], "scook18": [202, 611], "stepseq25": [202, 611], "symgray12": [202, 611], "theodore16": [202, 611], "wild25": [202, 611], "langrainbow12": [202, 611], "homeyerrainbow": [202, 591, 611], "balanc": [202, 591, 611], "chasespectr": [202, 611], "spectralextend": [202, 611], "displai": [203, 217, 219, 224, 228, 229, 230, 232, 263, 277, 279, 284, 288, 289, 291, 292, 306, 308, 316, 317, 321, 322, 324, 325, 339, 341, 349, 350, 354, 355, 357, 377, 419, 446, 447, 584, 585, 586, 587, 589, 591, 592, 597, 598, 602, 603, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 643, 644, 645, 647, 648, 651], "airborn": [203, 591], "plot_var": [203, 263, 292, 325], "order": [203, 263, 292, 325, 358, 373, 378, 379, 405, 424, 438, 554, 583, 591, 592, 597, 632, 641, 651], "cb": [203, 263, 292, 325, 613], "colorbar": [203, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 249, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 316, 317, 320, 321, 322, 325, 339, 340, 341, 349, 350, 353, 354, 355, 583, 585, 586, 587, 591, 600, 606, 610, 611, 627, 628], "loc": [203, 263, 292, 325, 583, 585, 589, 612], "titl": [204, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 238, 239, 240, 242, 244, 246, 248, 251, 252, 253, 258, 260, 262, 264, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 584, 585, 586, 587, 589, 590, 591, 597, 598, 606, 613, 615, 616, 618, 620, 621, 625, 649], "ext": [205, 237, 250, 265, 294, 327], "png": [205, 237, 250, 265, 294, 327, 584, 585, 587, 589], "datetime_format": [205, 207, 265, 267, 294, 296, 327, 329], "use_sweep_tim": [205, 207, 265, 267, 294, 296, 327, 329], "form": [205, 219, 237, 250, 265, 279, 294, 308, 327, 341, 583, 587, 591], "radar_name_field_sweep_tim": [205, 265, 294, 327], "datetim": [205, 207, 224, 228, 230, 265, 267, 284, 288, 289, 294, 296, 316, 321, 322, 327, 329, 349, 354, 355, 362, 363, 379, 558, 559, 560, 561, 562, 585, 589, 591], "strftime": [205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 585, 586], "suitabl": [205, 237, 250, 265, 294, 327, 587], "xaxi": [209, 212, 269, 272, 298, 301, 331, 334, 613], "static": [210, 211, 220, 221, 225, 231, 232, 270, 271, 280, 281, 285, 290, 291, 299, 300, 309, 310, 323, 324, 332, 333, 342, 343, 356, 357, 584], "yaxi": [210, 211, 213, 214, 215, 270, 271, 273, 274, 275, 299, 300, 302, 303, 304, 332, 333, 335, 336, 337], "keyword": [216, 276, 305, 317, 338, 350, 369, 371, 583, 587, 591, 644, 647], "plot_ppi": [216, 276, 305, 338, 591, 598, 633, 637, 639, 643], "plot_sweep_grid": [216, 591], "target_azimuth": [217, 277, 306, 339, 556], "mask_tupl": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 587], "norm": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 438, 587, 591, 613, 633], "cmap": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 583, 584, 585, 586, 587, 589, 606, 611, 612, 613, 614, 618, 621, 623, 625, 626, 631, 632, 637, 638, 639, 644, 645], "mask_outsid": [217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 584, 587, 591, 620, 621], "title_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 587, 625], "axislabel": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 584, 615, 620, 621], "axislabels_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 591, 632], "colorbar_flag": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585, 587], "colorbar_label": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 584, 587, 589, 597, 598, 602, 615, 616, 620, 621, 622, 623, 627, 637], "colorbar_ori": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589, 591], "reverse_xaxi": [217, 228, 277, 288, 306, 321, 339, 354], "fig": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 583, 584, 585, 586, 587, 589, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 631, 633, 634, 637, 645, 647, 648], "tick": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 587, 591, 611, 613, 632, 633], "ticklab": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 587, 591, 632, 633], "raster": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 587, 591], "pseudo": [217, 277, 306, 339, 591], "associ": [217, 277, 306, 339, 394, 583, 594], "pcolormesh": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 583, 591, 606, 622, 632], "integ": [217, 277, 306, 339, 379, 418, 435, 436], "ncp": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 587], "lumin": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587], "scale": [217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 413, 414, 421, 438, 439, 583, 586, 587, 614], "west": [217, 228, 277, 288, 306, 321, 339, 354, 583, 587, 615], "leav": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585, 587], "orient": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 585, 587, 588, 633, 634], "treat": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 587], "themselv": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 587], "figur": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 584, 585, 586, 587, 589, 590, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 631, 632, 637, 644, 645, 647, 648], "render": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 586, 587], "rather": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587], "larg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 438, 444, 587, 589, 591], "Be": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587, 594], "sure": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 586, 587, 590, 591, 592, 594, 606, 613, 632, 650, 651, 653], "dpi": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585, 587, 589], "pdf": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587], "ep": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587], "svg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587], "mappabl": [218, 241, 249, 256, 278, 307, 340], "cax": [218, 241, 256, 278, 307, 340, 633], "imag": [218, 241, 256, 278, 307, 340, 436, 554, 567, 583, 584, 586, 587, 591, 600, 610, 628, 630, 632], "contourset": [218, 241, 249, 256, 278, 307, 340], "etc": [218, 241, 244, 249, 256, 278, 307, 317, 340, 350, 376, 585, 587, 591], "onto": [218, 241, 256, 258, 278, 307, 317, 340, 350, 405, 412, 414, 441, 587], "drawn": [218, 241, 256, 278, 307, 340, 587], "target_rang": [219, 279, 308, 341], "delta_x": [219, 279, 308, 341], "delta_i": [219, 279, 308, 341], "az_limit": [219, 279, 308, 341], "el_limit": [219, 279, 308, 341], "corner": [219, 279, 308, 315, 341, 348, 587, 588, 591], "reflector": [219, 279, 308, 341, 591], "griddata": [219, 279, 308, 341], "min": [219, 279, 308, 341, 583, 587, 634], "max": [219, 279, 308, 341, 377, 583, 587, 591, 602, 606, 611, 612, 617, 625, 634, 637, 638, 639], "npt": [220, 225, 280, 285, 309, 318, 342, 351], "hair": [220, 280, 309, 342, 619], "higher": [220, 225, 280, 285, 309, 318, 342, 351, 586, 645, 647], "col": [221, 225, 226, 281, 285, 286, 310, 319, 343, 352, 586], "line": [221, 227, 243, 244, 255, 257, 281, 287, 310, 313, 314, 317, 318, 320, 343, 346, 347, 350, 351, 353, 377, 438, 584, 585, 586, 587, 591, 592, 594, 600, 610, 612, 628, 630, 650, 651, 653], "color": [221, 222, 223, 225, 226, 243, 281, 282, 283, 285, 286, 310, 311, 312, 314, 317, 318, 319, 343, 344, 345, 350, 352, 377, 584, 585, 586, 587, 589, 612, 613, 614, 622, 623, 630, 632, 633], "linestyl": [221, 225, 226, 243, 281, 285, 286, 310, 319, 343, 352, 585, 587, 589, 612, 613, 623], "symbol": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348], "text_color": [222, 223, 282, 283, 311, 312, 344, 345], "text": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348, 459, 585, 590, 591, 594, 611, 620, 634, 641, 645], "just": [222, 223, 282, 283, 311, 312, 344, 345, 367, 591, 592, 611, 614, 643, 649, 651, 653], "marker": [222, 223, 227, 243, 257, 282, 283, 287, 311, 312, 320, 344, 345, 353, 583, 585], "title_datetime_format": [224, 228, 284, 288, 316, 321, 349, 354], "title_use_sweep_tim": [224, 228, 284, 288, 316, 321, 349, 354], "range_ring_location_km": [225, 285, 318, 351], "lw": [225, 226, 285, 286, 319, 352, 587, 589], "ring": [225, 226, 285, 286, 318, 319, 351, 352, 585, 607, 619], "range_r": [226, 286, 319, 352], "seri": [226, 286, 319, 352, 583, 586], "draw": [226, 244, 255, 286, 317, 319, 350, 352, 585, 587], "format_str": [227, 287, 320, 353], "ray_min": [227, 287, 320, 353], "ray_max": [227, 287, 320, 353], "style": [227, 243, 257, 287, 313, 314, 318, 320, 346, 347, 351, 353, 377, 591], "ignoretilt": 229, "antenna_to_cartesian_track_rel": 229, "slant": 229, "ncar": 229, "soloii": 229, "time_axis_flag": [230, 289, 322, 355, 586], "date_time_form": [230, 289, 322, 355], "tz": [230, 289, 322, 355, 585], "zone": [230, 289, 322, 355], "info": [230, 289, 317, 322, 350, 355, 587, 591, 633, 649], "aspect_ratio": [231, 290, 323, 356], "aspect": [231, 290, 323, 356, 611], "xlim": [232, 291, 324, 357, 583, 584, 587, 589, 616, 618, 622, 623, 647], "ylim": [232, 291, 324, 357, 583, 584, 586, 587, 589, 616, 618, 620, 621, 622, 623, 625, 627], "cartopi": [233, 234, 235, 236, 244, 292, 317, 583, 585, 587, 589, 591, 592, 600, 602, 603, 606, 610, 612, 613, 626, 628, 630, 632, 637, 641, 644, 645, 647, 648, 650, 651, 653], "coastlin": [234, 244, 317, 350, 583, 587], "polit": 235, "state": [236, 439, 585, 587, 589, 591], "grid_name_field_level_tim": [237, 250], "latitudin": [239, 246, 260], "step": [242, 377, 584, 586, 594, 602, 622, 623, 632, 653], "interp_typ": 242, "x_axi": [242, 612], "metpi": [242, 585, 587, 589], "design": [242, 567, 583, 592, 622, 632, 641, 651], "geodes": 242, "nearest": [242, 369, 414, 433, 556, 557, 575, 583, 587, 591, 647], "dataarrai": 242, "interp": [242, 440], "ex": [242, 440, 585, 589, 590, 611], "upper": [242, 244, 246, 248, 258, 260, 262, 585, 589, 612], "colormesh": [242, 244, 246, 248, 258, 260, 262], "64": [242, 244, 246, 248, 258, 260, 262, 584, 611, 616, 617, 618, 622, 624, 626, 627, 630, 648, 650], "linewidth": [243, 257, 585, 587, 589, 613, 622, 623], "crosshair": [243, 257, 587], "lat_lin": [244, 255, 317, 350, 585, 587, 606, 619, 630], "lon_lin": [244, 255, 317, 350, 585, 587, 606, 619, 630], "embellish": [244, 317, 350, 585, 613], "add_grid_lin": [244, 317, 585], "reason": [244, 255, 587], "america": [244, 255, 317, 350, 587], "cr": [244, 292, 317, 583, 585, 587, 589, 602, 603, 606, 612, 613, 619, 626, 630, 632, 633, 637, 644, 645, 648], "subsequ": [244, 317, 587], "geoax": [244, 317, 587, 644, 647], "platecarre": [244, 317, 583, 585, 587, 589, 602, 606, 612, 613, 626, 630, 632, 637, 645, 648], "shapefil": [244, 317, 350, 587], "certain": [244, 317, 359, 436, 567, 587, 591, 632, 648], "plot_latitudinal_level": [245, 259], "y_index": [246, 260], "basemap": [246, 248, 249, 254, 255, 258, 260, 262, 325, 346, 347, 348, 350, 351, 591, 641, 650], "plot_longitudinal_level": [247, 261], "x_index": [248, 262], "top": [249, 414, 441, 583, 585, 588, 591, 592, 611, 630, 647, 651], "veric": 251, "area_thresh": [255, 350], "10000": [255, 350, 447, 612, 632, 647], "auto_rang": 255, "min_lon": [255, 317, 350, 585, 587, 606, 619, 648], "92": [255, 620, 630], "max_lon": [255, 317, 350, 585, 587, 606, 619, 648], "86": [255, 587], "min_lat": [255, 317, 350, 585, 587, 606, 619, 648], "max_lat": [255, 317, 350, 585, 587, 606, 619, 648], "44": [255, 424, 583, 585, 632, 650], "databas": [255, 350, 589], "merc": [255, 350], "mercat": 255, "line_styl": [257, 313, 314, 318, 346, 347, 351, 619], "plot_rhi": [276, 305, 338, 583], "plot_vpt": [276, 305, 338, 586], "grid_project": [292, 413, 414, 587], "progress": [292, 325], "some": [292, 325, 389, 400, 440, 459, 584, 585, 586, 587, 589, 590, 591, 603, 611, 612, 630, 632, 641, 645, 647, 650], "correctli": [292, 325, 591], "github": [292, 325, 585, 588, 591, 623, 641, 650, 653], "tracker": [292, 325, 592, 641, 651], "azimuthalequidist": 292, "line_lon": [313, 346], "line_lat": [313, 346], "compat": [313, 314, 315, 318, 346, 347, 348, 351, 374, 585, 591, 595, 653], "line_x": [314, 347], "line_i": [314, 347], "ro": [315, 348], "label_text": [315, 348], "label_offset": [315, 348], "bottom": [315, 348, 585, 587, 611, 613], "110m": [317, 587], "shapefile_kwarg": [317, 587], "alpha": [317, 350, 426, 427, 428, 429, 430, 431, 585, 589, 613, 622], "edgecolor": [317, 350, 585, 589, 622], "face": [317, 350, 587], "reson": [317, 350, 587], "lambertconform": [317, 587, 603, 619, 644], "domain": [317, 350, 583, 587, 606], "neither": [317, 350, 381, 587], "extend": [317, 350, 373, 587], "word": [317, 587], "10m": [317, 585, 587, 603, 619], "50m": [317, 587, 637, 645, 648], "naturalearthfeatur": [317, 587], "tranpar": [317, 350, 587], "overplot": [317, 350, 587], "pixel": [317, 350, 435, 436, 583, 587], "lcc": 350, "cylindr": 350, "mill": 350, "exhibit": 350, "distort": 350, "aea": 350, "laea": 350, "conform": [350, 587, 641, 643], "tmerc": 350, "stere": 350, "aeqd": 350, "cass": 350, "even": [350, 440, 589, 591, 622, 641, 647, 653], "cyl": [350, 591], "cannot": [350, 361, 585, 587], "lake": [350, 589], "esri": 350, "background": [350, 358, 424, 444, 587, 590, 619, 626, 632], "untest": 350, "always_core_thr": [358, 424, 632], "use_cosin": [358, 424, 632], "max_diff": [358, 424, 632], "zero_diff_cos_v": [358, 424, 632], "use_addit": [358, 424, 632], "scalar_diff": [358, 424, 632], "convect": [358, 424, 444, 583, 591, 600, 629, 635], "stratiform": [358, 424, 444, 591, 600, 629, 635], "classif": [358, 424, 427, 437, 444, 591, 600, 629, 635], "cosin": [358, 424, 632], "scalar": [358, 424, 585, 587, 591, 632], "classifi": [358, 424, 437, 591, 632, 633], "eqn": [358, 424], "b1": [358, 424], "yuter": [358, 424, 444, 567, 614, 632], "1997": [358, 424, 632], "zero": [358, 375, 424, 436, 438, 575, 591, 632, 644, 648], "multipli": [358, 424, 586, 632, 643], "most": [359, 367, 585, 586, 587, 591, 611, 645, 647, 653], "storage_opt": [360, 369, 371], "anon": [360, 369, 371, 583, 585, 589], "open": [360, 369, 371, 459, 583, 586, 587, 589, 590, 591, 592, 616, 641, 643, 644, 645, 647, 648, 649, 651, 653], "binari": [360, 583, 594], "transpar": [360, 585, 587, 591, 622], "decompress": [360, 591], "gzip": [360, 367, 368], "bzip2": [360, 591], "close": [360, 438, 584, 585, 589, 591], "compress": [360, 367, 368, 587, 591], "backend": [360, 369], "googl": [360, 369, 591, 592, 651], "cloud": [360, 369, 438, 585, 586, 592, 594, 600, 601, 604, 641, 651, 653], "storag": [360, 369, 536], "amazon": [360, 369, 583, 585, 587, 589, 602, 603], "web": [360, 369, 377, 583, 587, 589, 602, 603], "servic": [360, 369, 583, 585, 587, 589, 594, 602, 603, 611], "s3": [360, 369, 585, 589, 602, 603, 614, 632], "file_lik": 360, "use_rsl": 361, "read_": 361, "trmm": [361, 373, 591, 641, 650], "librari": [361, 370, 373, 376, 377, 583, 585, 586, 587, 589, 591, 592, 593, 641, 643, 644, 645, 647, 648, 649, 650, 651], "choos": [361, 587, 600, 610, 628, 632, 653], "Not": [361, 368], "typeerror": [361, 591], "launch_datetim": 362, "date": [362, 363, 581, 585, 587, 590, 591, 602, 603], "radiosond": 362, "launch": 362, "record": [362, 589, 649], "target_datetim": 363, "closest": [363, 405], "profile_datetim": 363, "use_file_field_attribut": 365, "csu": [365, 591], "chill": 365, "chl": [365, 591], "field_file_nam": 365, "long_nam": [365, 583, 586, 632, 644, 649], "zlib": [367, 368], "read_mdv": [367, 584, 598, 607, 618, 622, 623, 624], "interchang": 367, "vlevel": 367, "proj_polar_radar": 367, "9": [367, 429, 437, 563, 583, 585, 586, 587, 589, 590, 603, 607, 614, 619, 623, 630, 631, 632, 641, 643, 648, 649], "proj_rhi_radar": 367, "13": [367, 563, 583, 586, 589, 597, 599, 603, 625, 641, 648, 649], "vlevel_typ": 367, "vert_type_z": 367, "vert_type_elev": 367, "vert_type_az": 367, "17": [367, 585, 586, 620, 625], "vert_type_pressur": 367, "vert_type_theta": 367, "unknown": [367, 591], "station": [369, 370, 587, 603], "linear_interp": 369, "nexrad": [369, 370, 371, 372, 583, 591, 600, 601, 604, 610, 614, 628, 632, 641, 649], "archiv": [369, 585, 587, 589, 615, 641], "host": [369, 371, 585, 594], "noaa": [369, 371, 373, 583, 585, 587, 589, 602, 603, 614, 632], "nation": [369, 371, 583, 585, 587, 589, 602, 611], "climat": [369, 371, 586, 587, 589, 591, 592, 641, 643, 644, 645, 647, 648, 649, 651], "ucar": [369, 370, 583], "thredd": [369, 370, 376], "server": [369, 370], "letter": [369, 370, 372], "icao": [369, 370, 591], "older": [369, 370, 591, 592, 600, 601, 604, 641, 651], "mix": [369, 567, 614, 632], "constant": [369, 409, 413, 414, 435, 438, 583, 586, 591, 603], "fsspec": [369, 371, 589, 591], "cut": [369, 370, 371, 436], "www": [369, 370, 371, 435, 585, 589, 592, 651], "ncdc": [369, 371], "gov": [369, 371, 583, 584, 585, 589, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 615, 616, 617, 618, 620, 622, 623, 624, 625, 627, 630, 631, 637, 638, 639], "edu": [369, 370, 435, 583, 614, 632], "catalog": [369, 370, 583], "html": [369, 370, 435, 585, 589, 591, 592, 641, 650, 651], "common": [370, 586, 591, 641, 650], "cdm": [370, 376], "url": [370, 585, 587, 603], "java": [370, 376], "tool": [370, 376, 583, 586, 592, 641, 650, 651], "opendap": 370, "accept": [370, 439, 440, 587, 591, 592, 651], "compil": [370, 439, 591, 641, 650], "unidata": [370, 583, 602], "htm": 370, "product": [371, 373, 419, 447, 583, 587, 591], "nw": [371, 589], "wsr": 371, "88d": 371, "iii": 371, "distribut": [371, 424, 432, 446, 550, 551, 552, 553, 568, 569, 591, 592, 632, 641, 651], "roc": 371, "wsr88d": [371, 372], "level_iii": 371, "level3info": 371, "asp": 371, "radar_format": 372, "callid": 372, "skip_range_check": 372, "rsl_radar": 372, "id": [372, 377, 583, 591], "verifi": [372, 570, 580], "ioerror": 372, "time_ord": [373, 591], "full_xhdr": 373, "noaa_hh_hdr": 373, "ignore_xhdr": 373, "ignore_sweep_start_m": 373, "sigmet": [373, 591, 641], "iri": [373, 591, 641, 650], "sequenti": [373, 611], "re": [373, 585], "manner": 373, "determind": 373, "maintain": [373, 412, 591], "yet": [373, 602], "warn": [373, 376, 583, 585, 586, 587, 589, 591, 597, 603, 606, 647], "reverse_and_rol": 373, "strictli": 373, "increas": [373, 414, 438, 441, 583, 587, 592, 611, 647, 651], "becom": [373, 632, 644, 647], "thisopt": 373, "strict": 373, "header": [373, 591], "decod": [373, 591], "hurrican": [373, 587, 632], "hunter": 373, "millisecond": 373, "precis": 373, "explic": 373, "read_rsl": [373, 650], "error": [373, 377, 439, 440, 583, 585, 587, 590, 591, 650], "uf": [374, 379, 591, 641], "introduc": [374, 440], "implement": [374, 381, 394, 413, 428, 435, 586, 587, 591, 592, 597, 651], "time_refer": [375, 643], "compliant": 375, "mani": [375, 591, 592, 641, 647, 651, 653], "outlin": [375, 438, 563], "_zlib": [375, 376], "_deflatelevel": [375, 376], "_shuffl": [375, 376], "_fletcher32": [375, 376], "_contingu": [375, 376], "_chunksiz": [375, 376], "_endian": [375, 376], "_least_significant_digit": [375, 376], "_fillvalu": [375, 376, 591, 644, 649], "write_proj_coord_si": 376, "proj_coord_si": 376, "write_point_x_y_z": 376, "write_point_lon_lat_alt": 376, "projectioncoordinatesystem": 376, "toolsui": 376, "written": [376, 378, 379, 591, 594, 641], "appropri": [376, 563, 587, 595], "understood": 376, "rgb": 377, "viridi": [377, 632], "color_level": 377, "warp": 377, "sld": 377, "use_doublequot": 377, "geotiff": [377, 591, 641], "wgs84": 377, "sphere": [377, 564, 576], "latter": [377, 587], "usabl": [377, 583], "byte": [377, 591], "former": 377, "gi": 377, "while": [377, 587, 641, 645, 653], "show": [377, 583, 584, 585, 587, 589, 590, 591, 592, 597, 598, 602, 603, 606, 607, 608, 611, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 632, 637, 643, 645, 647, 648, 649, 651], "lack": [377, 392, 402], "composit": [377, 419, 583, 586, 591, 600, 629, 635], "gdal": [377, 591, 641], "via": [377, 585, 587, 594], "conda": [377, 589, 591, 592, 641, 650, 651, 653], "rbg": 377, "tabl": [377, 583], "column": [377, 555, 565, 566, 583, 585, 586, 587, 591, 600, 629, 635], "categor": [377, 585, 633], "255": [377, 591], "hydrometeor": [377, 427, 437, 591, 600, 629, 635, 645], "gdalwarp": 377, "command": [377, 591, 592, 594, 641, 644, 651, 653], "o": [377, 459, 585, 587, 592, 613, 641, 650, 651], "az": [377, 585, 591, 620, 621], "descriptor": 377, "tiff": 377, "don": [377, 586, 587, 591, 606], "t": [377, 424, 438, 439, 442, 447, 583, 586, 587, 591, 606, 632, 641, 643], "quot": 377, "help": [377, 448, 585, 586, 587, 589, 592, 594, 606, 611, 632, 651, 653], "translat": 377, "sr": [377, 583], "instead": [377, 583, 585, 587, 591, 592, 603, 632, 647, 650, 651, 653], "mdv_field_nam": [378, 591], "field_write_ord": [378, 379], "sentinel": [378, 379], "float32": [378, 583, 586, 587, 591, 630, 643, 645, 649], "_write_as_dtyp": 378, "writabl": 378, "satisfi": 378, "xy": [378, 414], "irregular": 378, "exce": [378, 632], "122": [378, 602, 606, 612, 631, 637], "uint8": 378, "uint16": 378, "scale_factor": [378, 586], "add_offset": [378, 586], "uncompress": 378, "sai": [378, 592, 651], "uf_field_nam": 379, "radar_field_nam": 379, "volume_start": 379, "templates_extra": 379, "radar_beam_width_h": [379, 586], "radar_beam_width_v": [379, 586], "radar_receiver_bandwidth": 379, "prt": [379, 586], "polarization_mod": 379, "round": [379, 587, 591], "_uf_scale_factor": 379, "charact": 379, "advanc": [379, 583], "usag": 379, "templat": [379, 591, 594], "mandatory_head": 379, "optional_head": 379, "field_head": 379, "lazi": [380, 381, 383, 390, 591], "set_lazi": 381, "callabl": [381, 390, 586, 587], "cach": 381, "tradit": 381, "supplement": 381, "syntax": [381, 591], "prevent": [381, 414, 585, 591, 592, 651], "comparison": [381, 591, 606], "__cmp__": 381, "__ge__": 381, "__gt__": 381, "__le__": 381, "__lt__": 381, "__ne__": 381, "nor": 381, "viewitem": 381, "viewkei": 381, "viewvalu": 381, "fromkei": 381, "tradition": 381, "referenc": 381, "lazyloaddictionari": 381, "henc": 381, "key1": 381, "value1": 381, "key2": 381, "value2": 381, "lazy_func": 381, "lambda": 381, "lazykey1": 381, "item": [382, 392, 395, 402, 591], "els": [384, 385, 396, 586], "value_cal": 390, "concret": 394, "__getitem__": [394, 586], "__setitem__": 394, "__delitem__": 394, "__iter__": 394, "__len__": 394, "robust": 404, "src_radar": 405, "dest_radar": 405, "distance_toler": [405, 606], "500": [405, 413, 414, 585, 589, 606, 612, 616], "gatefilter_src": [405, 606], "time_toler": [405, 606], "60": [405, 583, 597, 602, 606, 608, 613, 638, 643, 645, 647], "kd": 405, "tree": [405, 414, 637, 638, 639], "physic": [405, 419, 424, 632], "easi": [405, 419, 641], "equival": [405, 584, 586, 591, 602, 613, 621, 627], "src_radar_i": 405, "src_radar_x": 405, "destin": [405, 407, 585, 589, 591, 606], "toler": [405, 406, 408, 556, 557, 591], "src_radar_tim": 405, "dest_radar_tim": 405, "gate_mapp": 405, "src": [405, 589], "dest": 405, "dest_index": 405, "radar_map": 405, "mapped_radar": [405, 606], "adequ": [405, 606], "getter": [406, 408], "field_list": [407, 436], "zg": [409, 410, 411], "yg": [409, 410, 411], "xg": [409, 410, 411], "roi": [409, 410, 411, 414, 591], "influenc": [409, 412, 413, 414, 647], "grow": [410, 411, 413, 414, 592, 651], "virtual": [411, 413, 414], "grid_shap": [412, 413, 414, 537, 607, 608, 612, 632, 638, 647], "grid_limit": [412, 413, 414, 537, 607, 608, 612, 632, 638, 647], "gridding_algo": 412, "map_gates_to_grid": [412, 591], "copy_field_dtyp": [412, 591], "map_to_grid": [412, 413, 591], "significantli": [412, 414], "faster": [412, 414, 587, 591], "barn": [412, 414, 591, 647], "1964": 412, "techniqu": 412, "maxim": 412, "numer": [412, 591], "analysi": [412, 566, 587, 591], "meteorologi": [412, 416, 419, 438, 447, 563], "climatologi": [412, 447], "396": [412, 586], "409": [412, 591], "cressman": [412, 414, 647], "1959": 412, "monthli": 412, "review": [412, 584, 591], "87": [412, 583, 585], "367": 412, "374": [412, 591], "paulei": [412, 647], "1990": [412, 647], "theoret": 412, "discret": 412, "respons": 412, "118": 412, "1145": [412, 591], "1164": [412, 591], "grid_origin": [413, 414, 608, 612], "grid_origin_alt": [413, 414], "map_roi": [413, 414], "weighting_funct": [413, 414, 647], "barnes2": [413, 414, 591], "toa": [413, 414, 417, 441], "17000": [413, 414, 647], "roi_func": [413, 414, 591, 647], "dist_beam": [413, 414, 647], "constant_roi": [413, 414, 591], "z_factor": [413, 414], "xy_factor": [413, 414], "02": [413, 414, 583, 586, 614, 628, 632, 635], "min_radiu": [413, 414, 591, 647], "h_factor": [413, 414], "nb": [413, 414], "bsp": [413, 414], "weight": [413, 414, 437, 438, 446, 583, 591, 647], "linearli": 413, "roifunct": 413, "dist": [413, 414, 568, 569, 583, 585], "get_roi": 413, "cython": [413, 591], "grid_siz": [413, 414], "grid_from_radar": [413, 414, 607, 608, 612, 632, 638, 647], "around": [413, 424, 554, 589, 607, 622, 625, 632, 643, 645], "copy_field_data": 414, "kd_tree": 414, "leafsiz": 414, "nearbi": [414, 608], "coodin": 414, "azimut": 414, "similarili": 414, "example_roi_func_const": 414, "example_roi_func_dist": 414, "example_roi_func_dist_beam": 414, "altern": [414, 419, 587, 632], "foreach": 414, "metet": 414, "dist_mean": 414, "preserv": [414, 645], "less": [414, 424, 440, 567, 632], "memori": [414, 591], "slower": [414, 438], "It": [414, 440, 554, 563, 585, 587, 592, 595, 606, 651, 653], "leaf": 414, "lookup": 414, "affect": 414, "optim": [414, 438, 591], "natur": [414, 587], "ref_field": [416, 644], "300": [416, 583, 585, 586, 587, 589, 614, 615, 643], "save_nam": 416, "nws_primary_pr": 416, "mm": [416, 590, 632], "hr": [416, 632], "author": [416, 419, 584, 590, 594, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639], "laura": [416, 614, 632], "tomkin": [416, 567, 614, 632], "look": [416, 419, 442, 583, 585, 586, 587, 589, 590, 591, 602, 603, 606, 613, 641, 643, 645, 647, 649], "expect": [416, 440, 592, 651], "relationship": [416, 432], "american": [416, 419], "meteorolog": [416, 419, 428, 447, 587], "2022": [416, 419, 567, 583, 586, 590, 602, 614, 632, 641], "glossari": [416, 419], "ametsoc": [416, 419], "wiki": [416, 419, 435], "r_relat": 416, "25000": [417, 647], "floor": 417, "measur": [417, 424, 426, 432, 437, 438, 439, 440, 555, 586, 587, 589, 592, 632, 641, 643, 644, 645, 647, 648, 649, 651], "nyq": [418, 589, 637, 645], "check_nyq_uniform": 418, "deriv": [418, 438, 440], "try": [418, 438, 585, 590, 647, 648], "vel_dict": 418, "entri": [418, 649], "am": [419, 589, 592, 641, 651], "dry": [419, 633], "world": [419, 600, 610], "aloft": 419, "oppos": [419, 614], "nwp": [419, 633], "why": [419, 587, 590, 592, 651], "would": [419, 583, 584, 585, 586, 589, 591, 592, 602, 603, 645, 647, 651], "think": 419, "turn": [419, 442, 611, 632, 641], "spin": 419, "randi": [419, 589], "chase": [419, 589], "dopplerchas": [419, 591], "cdr_field": 420, "circular": [420, 568, 569, 591, 632], "depolar": [420, 586], "cdr": 420, "l_field": 421, "logarithm": 421, "log10": [421, 606], "l_field_out": 421, "noisedbz_v": 422, "ref_dist": 422, "noise_field": [422, 423], "noisedbz": 422, "dx": [424, 444, 632], "dy": [424, 444, 585, 632], "level_m": 424, "42": [424, 444, 583, 585, 586, 589, 630, 632], "bkg_rad_km": [424, 632], "11": [424, 574, 583, 585, 603, 630, 638, 641, 648, 649], "55": [424, 583, 585, 626, 630, 632], "calc_thr": [424, 632], "weak_echo_thr": [424, 632], "min_dbz_us": [424, 632], "db_averag": [424, 632], "remove_small_object": [424, 632], "min_km2_siz": [424, 632], "val_for_max_conv_rad": [424, 632], "max_conv_rad_km": [424, 632], "cs_core": 424, "nosfcecho": [424, 632], "weakecho": [424, 632], "sf": [424, 632], "conv": [424, 632], "estimate_flag": [424, 632], "estimate_offset": [424, 632], "partit": [424, 444, 597], "pars": [424, 586, 587, 591], "least": [424, 632], "simpler": [424, 632], "percentag": 424, "weak": [424, 632], "surfac": [424, 586, 632], "snow": [424, 427, 555, 567, 586, 614, 632, 633], "underestim": [424, 632], "wih": 424, "convsf_dict": [424, 632], "raindrop": [424, 632], "pacif": [424, 632], "warm": [424, 438, 632], "pool": [424, 632], "implic": [424, 632], "appl": [424, 440, 442, 444, 446, 555, 592, 632, 651], "meteor": [424, 440, 442, 444, 446, 555, 592, 632, 641, 651], "36": [424, 583, 603, 606, 608, 612, 626, 630, 632, 647], "847": [424, 591, 632], "867": [424, 591, 632], "doi": [424, 428, 429, 437, 439, 440, 555, 567, 583, 586, 587, 589, 592, 614, 632, 641, 643, 644, 645, 647, 648, 649, 651], "1175": [424, 440, 555, 591, 632, 641], "1520": [424, 632], "0450": [424, 632], "036": [424, 632], "3c0847": [424, 632], "morsdo": [424, 632], "3e2": [424, 632], "smith": [424, 632], "wilheit": [424, 632], "zipser": [424, 632], "character": [424, 444, 632], "tropic": [424, 632], "kwajex": [424, 632], "385": [424, 591, 632], "415": [424, 632], "jam2206": [424, 632], "the_spectra": 425, "vel_bin": 425, "wavelength": [425, 583, 586], "left_limit": 425, "right_limit": 425, "new_spectra": 425, "new_bin": 425, "a_field": [426, 427, 430], "rr_field": [426, 427, 428, 429, 430, 431, 432], "go": [426, 427, 428, 430, 431, 577, 584, 585, 591, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 644], "diederich": 426, "simmer": [426, 442], "zhang": [426, 442, 555], "tromel": [426, 442], "2015": [426, 429, 442, 641], "wavelenght": 426, "hydrometeorologi": 426, "487": [426, 583], "502": [426, 591], "alphazr": 427, "0376": [427, 429, 430, 431], "betazr": 427, "6112": [427, 429, 430, 431], "alphaz": [427, 430, 431], "betaz": [427, 430, 431], "alphaa": [427, 430], "betaa": [427, 430], "mp_factor": 427, "hydro_field": [427, 437], "main_field": [427, 430, 431], "thresh_max": [427, 430, 431], "main": [427, 430, 431, 583, 585, 586, 587, 591, 592, 617, 651], "secondari": [427, 430, 431, 591], "figuera": [428, 437], "term": [428, 591], "monitor": 428, "french": 428, "sever": [428, 585, 591], "quantit": 428, "ideal": [428, 586], "quarterli": 428, "royal": 428, "2012": [428, 438, 440], "1002": [428, 591], "qj": 428, "1934": 428, "fabri": 429, "fr\u00e9d\u00e9ric": 429, "meterologi": 429, "ch": [429, 633, 634], "pg": 429, "148": 429, "165": 429, "1017": 429, "cbo9781107707405": 429, "blend": [430, 431, 587, 622], "rain_main": [430, 431], "alphakdp": 431, "betakdp": 431, "polynomi": 432, "develop": [432, 583, 587, 591, 641, 650], "mcgill": [432, 641], "doell": 432, "systemat": 432, "variat": [432, 438, 591], "drop": [432, 586, 587, 591], "northern": [432, 585], "germani": 432, "seven": 432, "year": [432, 583, 585, 589, 590, 602, 603], "1998": 432, "technol": [432, 442, 555], "1545": 432, "1556": 432, "joss": 432, "switzerland": 432, "vdf": 432, "hochschulverlag": 432, "ag": [432, 633], "eth": 432, "zurich": 432, "134": [432, 583], "sonde_dset": 433, "time_kei": 433, "height_kei": 433, "nvar": 433, "vap": 433, "startard": 433, "ncvar": 433, "return_d": 433, "freq": 434, "hz": [434, 620], "freq_band": 434, "grid1": 435, "grid2": 435, "return_valu": 435, "displac": 435, "en": [435, 589, 591, 592, 641, 650, 651], "wikipedia": 435, "phase_correl": 435, "inspir": 435, "christoph": 435, "gohlk": 435, "lfd": 435, "uci": 435, "imreg": 435, "advect": [435, 436, 591], "trim_edg": 436, "shifted_grid": 436, "subset": [436, 577, 583, 585, 589, 591, 600, 629, 630], "mass_cent": 437, "approach": [437, 583, 586], "besic": 437, "2016": [437, 583, 586, 587, 589, 592, 641, 643, 644, 645, 647, 648, 649, 651], "ndarrai": [437, 649], "centroid": 437, "nclass": 437, "nvariabl": 437, "hydro": [437, 633], "ventura": 437, "grazioli": [437, 439], "gabella": 437, "germann": 437, "bern": [437, 439], "statist": [437, 591, 592, 651], "cluster": 437, "semi": 437, "supervis": 437, "mea": [437, 567, 614], "4425": 437, "4445": 437, "5194": [437, 567, 614], "amt": [437, 567, 614], "cg": 438, "backscatt": [438, 442], "clpf": 438, "length_scal": 438, "first_guess": 438, "finite_ord": 438, "fill_valu": [438, 439, 440, 444, 587, 643, 644, 649], "psidp_field": [438, 439, 440, 633], "verbos": [438, 442, 591, 592, 651], "total": [438, 439, 440, 586, 589, 597, 598, 599, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640], "maesaka": 438, "monoton": [438, 441, 611], "propag": [438, 439, 440], "notat": 438, "primari": [438, 586], "proport": 438, "dr": 438, "analys": [438, 439, 440], "cost": [438, 591], "nonlinear": 438, "conjug": 438, "gradient": [438, 591, 611], "broyden": 438, "fletcher": 438, "goldfarb": 438, "shanno": 438, "bfg": 438, "howev": [438, 587, 645], "100k": 438, "consider": [438, 589, 632], "parameter": 438, "attentu": 438, "constraint": 438, "bring": [438, 583], "guess": 438, "root": [438, 650, 653], "signifi": [438, 444], "everywher": 438, "exactli": [438, 606], "avoid": [438, 591, 594, 653], "converg": 438, "fact": [438, 440], "closer": 438, "finit": 438, "accuraci": 438, "maxit": 438, "met": 438, "achiev": 438, "somewhat": 438, "arbitrari": 438, "parallel": [438, 439, 440], "thread": [438, 587], "cpu": 438, "multiprocess": 438, "capabl": [438, 586, 645, 649], "relev": [438, 595], "kdp_dict": [438, 439, 440], "phidpf_dict": 438, "phidpr_dict": [438, 439, 440], "forward": [438, 564, 565], "iwanami": 438, "maki": 438, "seventh": 438, "european": 438, "confer": 438, "hydrologi": 438, "rcov": 439, "pcov": 439, "prefilter_psidp": [439, 440], "filter_opt": [439, 440], "kalman": 439, "schneeb": 439, "psidp": [439, 440], "char": [439, 440], "capit": [439, 440], "intercept": 439, "slope": 439, "3x3": 439, "covari": 439, "matrix": [439, 587, 591], "4x4": 439, "filter_psidp": [439, 440, 591], "enabl": [439, 440, 586, 589, 591], "kdp_std_dict": 439, "dev": [439, 586, 589, 592, 647, 651], "ensembl": 439, "ieee": 439, "geosci": 439, "remot": [439, 585, 586, 587, 591, 592, 602, 651], "sen": 439, "52": [439, 442, 583, 586, 606, 609, 630], "5137": 439, "5149": 439, "1109": [439, 591], "tgr": 439, "2287017": 439, "windsiz": 440, "n_iter": 440, "vulpiani": [440, 591], "pre": [440, 591], "advantag": 440, "eat": 440, "gianfranco": 440, "mario": 440, "montopoli": 440, "luca": 440, "delli": 440, "passeri": 440, "antonio": 440, "gioia": 440, "pietro": 440, "giordano": 440, "frank": 440, "marzano": 440, "On": [440, 584, 585], "dual": [440, 591], "mountain": 440, "climatol": [440, 555, 632], "51": [440, 583, 599, 630], "405": [440, 591], "425": [440, 591], "05024": 440, "profile_field": 441, "height_field": 441, "3re": 441, "whole": [441, 591], "height_dict": 441, "profile_dict": 441, "desired_angl": [442, 591], "quasi": 442, "qvp": [442, 591], "wanted_angl": 442, "dictonari": 442, "quasai": 442, "troemel": 442, "kumjian": 442, "clim": [442, 586, 587], "2529": 442, "2548": 442, "meteorol": [442, 632], "54": [442, 583, 585, 586, 603, 634], "2344": 442, "2359": 442, "reev": 442, "tschallen": 442, "wai": [442, 586, 592, 594, 606, 643, 651, 653], "submit": [442, 587, 641], "intens": 444, "work_level": 444, "3000": [444, 643, 647], "peak_rel": 444, "area_rel": 444, "medium": 444, "bkg_rad": 444, "11000": [444, 647], "use_intens": 444, "steiner": [444, 591, 632], "1995": [444, 632], "greater": [444, 587, 632], "bright": [444, 583], "sgp": [444, 537], "peaked": 444, "eclass": 444, "climatolog": [444, 632], "storm": [444, 541, 543, 583, 586, 587, 589, 614, 632, 647], "gaug": [444, 632], "1978": [444, 632], "2007": [444, 632], "z_want": [446, 447, 592, 634, 651], "valid_ray_min": [446, 592, 651], "velocity_azimuth_displai": [446, 592, 651], "one_sweep_radar": 446, "extract_sweep": [446, 589, 632, 634], "vad": [446, 447, 591, 592, 600, 629, 635, 651], "amount": [446, 586, 589, 592, 647, 651], "_averag1d": [446, 592, 651], "idw": 446, "brown": [446, 591, 592, 651], "wexler": [446, 592, 651], "1968": [446, 592, 651], "kinemat": [446, 592, 651], "105": [446, 592, 634, 651], "113": [446, 592, 630, 651], "linespac": 447, "michelson": [447, 591, 641], "andersson": 447, "koistinen": [447, 641], "collier": 447, "riedl": 447, "szturc": 447, "gjertsen": 447, "nielsen": 447, "overgaard": 447, "2000": [447, 583, 607, 647], "baltex": 447, "centr": 447, "methodologi": [447, 555, 645], "smhi": 447, "swedish": 447, "hydrolog": 447, "institut": [447, 583, 649], "norrkop": 447, "suffix": 459, "tmp": 459, "dir": 459, "temporari": [459, 591], "my_cwd": 459, "getcwd": 459, "tmpdir": 459, "_": [459, 585, 589, 602, 603, 633], "txt": [459, 591, 650], "wt": 459, "assert": [459, 591, 592, 651], "isfil": 459, "path_to_fil": 536, "local": [536, 584, 585, 589, 591, 592, 641, 650, 651], "without": [537, 549, 583, 586, 591, 650], "site": [537, 583, 585, 586, 587, 588, 589, 597, 603, 630, 644, 647, 650], "oklahoma": [537, 589], "puls": [540, 586, 591, 645], "sigma": [541, 622, 623], "mu": 541, "gaussian": [541, 622], "sapr": 542, "dp_phase_shift": [542, 630, 643], "diff_phas": [542, 643], "differential_reflect": [542, 602, 615, 622, 648, 649], "rectangular": [543, 544, 587, 591], "alia": [547, 548, 587, 591], "miscellan": 549, "depreci": [549, 591], "caution": 549, "radian": [550, 552, 572, 583], "std": [552, 553, 569, 574], "convolut": 554, "ndimag": [554, 591, 622, 623], "generic_filt": 554, "convers": [554, 586], "pi": [554, 583, 645], "std_dev": 554, "azimuth_spread": 555, "spatial_spread": 555, "spatial_rang": 555, "sphere_dist": [555, 566], "for_azimuth": [555, 566], "get_sweep_rai": 555, "subset_field": 555, "assemble_column": 555, "murphi": 555, "2020": [555, 587, 591, 592, 614, 641, 650, 651], "columnar": 555, "cvp": 555, "ic": [555, 622, 633], "situ": 555, "37": [555, 583, 586, 598, 599, 606, 630, 634, 648], "1623": 555, "1642": 555, "jtech": 555, "0011": 555, "bukov\u010di\u0107": 555, "zrni\u0107": 555, "59": [555, 583, 586], "991": [555, 591], "1009": [555, 591], "19": [555, 583, 585, 586, 591, 634, 649], "0140": 555, "az_tol": 556, "radar_rhi": 556, "target_elev": 557, "el_tol": 557, "radar_ppi": 557, "epoch": [558, 559, 560, 561, 562, 583], "navg": 563, "nnoise_min": 563, "hildebrand": [563, 591], "sehkon": 563, "1974": 563, "spectral": [563, 583, 586, 591], "articl": 563, "peak": [563, 586, 645], "var": [563, 578, 579, 583], "varianc": 563, "nnois": 563, "sekhon": [563, 591], "808": 563, "811": [563, 591], "target_latitud": [564, 576], "target_longitud": [564, 576], "bear": [564, 585], "alongitudeg": 564, "great": [564, 576], "circl": [564, 576, 632], "known": [564, 591, 592, 649, 651], "6371000": [564, 576], "calculatitude": 564, "degress": [564, 576], "further": [566, 584, 586], "get_column_rai": 566, "mute_field": [567, 614], "mute_threshold": [567, 614], "field_threshold": [567, 614], "discern": 567, "mute": [567, 591, 600, 610, 628, 632], "miller": [567, 614], "allen": [567, 614], "identif": [567, 614], "5515": [567, 614], "5525": [567, 614], "interval_min": [568, 569], "interval_max": [568, 569], "endpoint": [568, 569], "to_vpt": 570, "90": [570, 583, 585, 586, 592, 651], "verticl": 570, "radar1": 571, "radar2": 571, "angles1": 572, "angles2": 572, "angle1": 573, "angle2": 573, "eg": 574, "ma": [574, 592, 606, 607, 632, 644, 648, 651], "interp_kind": 575, "sim_vel_field": 575, "kind": [575, 583, 597], "slinear": 575, "quadrat": 575, "cubic": 575, "interp1d": [575, 592, 651], "sim_vel": [575, 592, 651], "rng_min": 577, "rng_max": 577, "ele_min": 577, "ele_max": 577, "azi_min": 577, "azi_max": 577, "coverag": [577, 583, 591, 592, 651], "11pt": 578, "stdev": 578, "texarrai": 578, "pyradarobj": 578, "tex": 579, "single_scan": 580, "is_vpt": 580, "mislabel": 580, "properli": [580, 592, 603, 651], "releas": [581, 588, 592, 595, 641, 644, 647, 650, 651], "post6": 581, "nov": 581, "09": [581, 583, 585, 609, 628, 632], "2023": [581, 589, 641], "guid": [581, 583, 584, 591, 641], "public": [581, 583, 587, 589, 591, 592, 643, 644, 645, 647, 648, 649, 651], "broken": [581, 591], "aerosol": 583, "experi": 583, "depart": [583, 586, 587, 589, 643, 644, 645, 647, 648, 649], "energi": [583, 586, 587, 589, 643, 644, 645, 647, 648, 649], "iop": 583, "goal": 583, "studi": 583, "lifecycl": 583, "houston": [583, 602], "impact": [583, 589, 622], "uniqu": 583, "suit": [583, 591, 592, 647, 651], "seabreez": 583, "coast": [583, 587], "cleaner": [583, 648], "air": [583, 587], "pollut": 583, "click": [583, 584, 594], "post": [583, 585, 586, 587, 589, 591, 594, 641], "overlai": 583, "texa": [583, 602], "lightn": 583, "csapr2": 583, "wildfir": 583, "smoke": 583, "entrain": 583, "juli": [583, 603], "12": [583, 585, 586, 590, 597, 602, 603, 604, 613, 620, 630, 641, 644, 648, 649], "we": [583, 585, 586, 587, 589, 592, 595, 602, 603, 606, 611, 630, 632, 637, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653], "highlight": [583, 584, 587], "minut": [583, 585, 586, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639], "pyart": [583, 585, 589, 592, 594, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653], "pyplot": [583, 584, 585, 586, 587, 589, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 643, 644, 645, 647, 648], "plt": [583, 584, 585, 586, 587, 589, 591, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 643, 644, 645, 647, 648], "xr": [583, 586], "s3f": 583, "ccr": [583, 585, 587, 589, 602, 603, 606, 612, 613, 619, 626, 630, 632, 637, 644, 645, 648], "panda": [583, 586, 589, 591, 653], "pd": [583, 585, 586, 589], "kdtree": 583, "inlin": [583, 622, 623], "satellit": 583, "download": [583, 584, 586, 587, 592, 597, 598, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641, 651, 653], "longwav": 583, "infrar": 583, "ensur": [583, 585, 591], "c13": 583, "denot": 583, "anonym": [583, 585], "credenti": 583, "s3filesystem": 583, "day_no": 583, "168": 583, "dai": [583, 589], "16th": 583, "leap": 583, "hour": [583, 587, 589, 602, 603], "goes16": 583, "abi": 583, "l1b": 583, "radc": 583, "02d": 583, "fi": 583, "or_abi": 583, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 583, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 583, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 583, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 583, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 583, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 583, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 583, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 583, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 583, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 583, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 583, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 583, "goes_d": 583, "open_dataset": [583, 586], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 583, "lt": [583, 586], "gt": [583, 586], "1500": [583, 643], "2500": 583, "number_of_time_bound": 583, "number_of_image_bound": 583, "num_star_look": 583, "datetime64": [583, 586, 630], "07": [583, 585, 586, 603, 614, 632, 649], "1282": 583, "1013": 583, "y_imag": 583, "08624": 583, "x_imag": 583, "03136": 583, "band_id": 583, "int8": 583, "band_wavelength": 583, "33": [583, 586, 587, 604, 632, 635, 649], "t_star_look": 583, "band_wavelength_star_look": 583, "rad": [583, 586], "dqf": 583, "time_bound": 583, "goes_imager_project": 583, "int32": [583, 649], "2147483647": 583, "y_image_bound": 583, "x_image_bound": 583, "algorithm_dynamic_input_data_contain": 583, "processing_parm_version_contain": 583, "algorithm_product_version_contain": 583, "star_id": 583, "channel_integration_tim": 583, "336": [583, 591], "channel_gain_field": 583, "naming_author": 583, "nesdi": 583, "standard_name_vocabulari": 583, "v35": 583, "commerc": 583, "production_sit": 583, "wcda": 583, "timeline_id": 583, "date_cr": 583, "12t20": 583, "3z": 583, "time_coverage_start": [583, 643, 649], "time_coverage_end": [583, 643], "08": [583, 640], "7z": 583, "lut_filenam": 583, "spacelookparam": 583, "fm1a_cdrl79revp_pr_09_00_02": 583, "f45b564c": 583, "dcb9": 583, "498a": 583, "ac56": 583, "da80a1d735a5xarrai": 583, "datasetdimens": [583, 586], "1500x": 583, "2500number_of_time_bound": 583, "2number_of_image_bound": 583, "2band": 583, "1num_star_look": 583, "24coordin": 583, "j2000": 583, "mid": 583, "secondsstandard_nam": 583, "timeaxi": 583, "tbound": 583, "time_boundsarrai": 583, "x27": [583, 586], "537394048": 583, "float640": 583, "04432": 583, "04427unit": 583, "radaxi": 583, "ylong_nam": 583, "coordinatestandard_nam": 583, "projection_y_coordinatearrai": 583, "128212": 583, "128156": 583, "1281": 583, "04438": 583, "044324": 583, "044268": 583, "03856": 583, "03861unit": 583, "xlong_nam": 583, "projection_x_coordinatearrai": 583, "101332": 583, "101276": 583, "10122": 583, "0385": 583, "038556": 583, "038612": 583, "imagestandard_nam": 583, "projection_y_coordinateunit": 583, "yarrai": 583, "projection_x_coordinateunit": 583, "numberstandard_nam": 583, "sensor_band_identifierunit": 583, "1arrai": [583, 586], "central": [583, 585, 589], "wavelengthstandard_nam": 583, "sensor_band_central_radiation_wavelengthunit": 583, "umarrai": 583, "star": 583, "tarrai": 583, "01t11": 583, "43": [583, 586, 589], "000000000": [583, 586], "starstandard_nam": 583, "radiancesstandard_nam": 583, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 583, "12valid_rang": 583, "4094": 583, "mw": 583, "cm": [583, 623], "1resolut": 583, "000056": 583, "radgrid_map": 583, "goes_imager_projectioncell_method": 583, "pointancillary_vari": 583, "3750000": 583, "radianc": 583, "flagsstandard_nam": 583, "status_flagvalid_rang": 583, "1grid_map": 583, "pointflag_valu": 583, "flag_mean": 583, "good_pixel_qf": 583, "conditionally_usable_pixel_qf": 583, "out_of_range_pixel_qf": 583, "no_value_pixel_qf": 583, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 583, "5percent_good_pixel_qf": 583, "0percent_conditionally_usable_pixel_qf": 583, "0percent_out_of_range_pixel_qf": 583, "0percent_no_value_pixel_qf": 583, "0percent_focal_plane_temperature_threshold_exceeded_qf": 583, "00": [583, 585, 586, 589, 591, 599, 604, 609, 628, 635, 640], "326423040": 583, "748365056": 583, "projectiongrid_mapping_nam": 583, "geostationaryperspective_point_height": 583, "35786023": 583, "0semi_major_axi": 583, "6378137": 583, "0semi_minor_axi": 583, "6356752": 583, "31414inverse_flatten": 583, "298": 583, "2572221latitude_of_projection_origin": 583, "0longitude_of_projection_origin": 583, "0sweep_angle_axi": 583, "south": [583, 587, 615], "extent": [583, 585, 586, 589, 608], "imageunit": 583, "radarrai": 583, "12824": 583, "04424": 583, "10136": 583, "03864": 583, "nominal_satellite_subpoint_lat": 583, "nomin": 583, "subpoint": 583, "standard_nam": [583, 632, 644, 649], "latitudeunit": [583, 586], "degrees_northarrai": 583, "nominal_satellite_subpoint_lon": 583, "longitudeunit": [583, 586], "degrees_eastarrai": 583, "199997": 583, "nominal_satellite_height": 583, "gr": 583, "80": [583, 585, 598, 626, 631], "ellipsoid": 583, "height_above_reference_ellipsoidunit": 583, "kmarrai": 583, "35786": 583, "023438": 583, "geospatial_lat_lon_ext": 583, "geospati": 583, "referencesgeospatial_westbound_longitud": 583, "152": 583, "10928geospatial_northbound_latitud": 583, "56": [583, 586, 630, 634], "76145geospatial_eastbound_longitud": 583, "94688geospatial_southbound_latitud": 583, "14": [583, 586, 587, 589, 603, 611, 613, 637, 649], "57134geospatial_lat_cent": 583, "083002geospatial_lon_cent": 583, "096954geospatial_lat_nadir": 583, "0geospatial_lon_nadir": 583, "0geospatial_lat_unit": 583, "degrees_northgeospatial_lon_unit": 583, "96921e": 583, "yaw_flip_flag": 583, "spacecraft": 583, "yaw": 583, "flip": 583, "configurationvalid_rang": 583, "1flag_valu": 583, "truearrai": 583, "esun": 583, "bandpass": 583, "solar": 583, "irradi": 583, "sun": 583, "distancestandard_nam": 583, "toa_shortwave_irradiance_per_unit_wavelengthunit": 583, "um": 583, "1cell_method": 583, "meanarrai": 583, "kappa0": 583, "incom": 583, "d2": 583, "instantan": [583, 591], "divid": 583, "reflectanceunit": 583, "planck_fk1": 583, "wavenumb": 583, "c2": 583, "nu3": 583, "emiss": 583, "monochromat": 583, "nu": 583, "constantsunit": 583, "10803": 583, "299805": 583, "planck_fk2": 583, "karrai": 583, "1392": [583, 591], "73999": 583, "planck_bc1": 583, "bc_1": 583, "bc_2": 583, "planck_funct": 583, "wavenumberunit": 583, "0755": 583, "planck_bc2": 583, "99975": 583, "valid_pixel_count": 583, "condition": 583, "pixelsunit": 583, "countgrid_map": 583, "sum": [583, 590], "comment": [583, 584, 623, 649], "3702838": 583, "missing_pixel_count": 583, "saturated_pixel_count": 583, "satur": 583, "radiometr": 583, "geoloc": 583, "undersaturated_pixel_count": 583, "undersatur": 583, "focal_plane_temperature_threshold_exceeded_count": 583, "exceed": 583, "thresholdunit": 583, "min_radiance_value_of_valid_pixel": 583, "pixelsstandard_nam": 583, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 583, "6443": 583, "185": 583, "5699": 583, "849287": 583, "max_radiance_value_of_valid_pixel": 583, "154": [583, 619], "23053": 583, "mean_radiance_value_of_valid_pixel": 583, "197975": 583, "std_dev_radiance_value_of_valid_pixel": 583, "toa_outgoing_radiance_per_unit_wavenumberunit": 583, "standard_devi": 583, "985853": 583, "maximum_focal_plane_temperatur": 583, "focal": 583, "valuevalid_rang": 583, "951939": 583, "focal_plane_temperature_threshold_increas": 583, "bound": [583, 586], "81": [583, 585, 649], "focal_plane_temperature_threshold_decreas": 583, "decreas": 583, "percent_uncorrectable_l0_error": 583, "percent": 583, "l0": 583, "errorsvalid_rang": 583, "percentgrid_map": 583, "earth_sun_distance_anomaly_in_au": 583, "anomali": 583, "astronom": 583, "unitsunit": 583, "uacell_method": 583, "016543": 583, "datainput_abi_l0_data": 583, "m6_g16_s20221932006173_e20221932008557_c": 583, "ncarrai": 583, "filenamesl1b_processing_parm_vers": 583, "parm": 583, "rad_g16_v01r00": 583, "ziparrai": 583, "packag": [583, 584, 585, 586, 587, 589, 591, 592, 597, 603, 641, 644, 647, 650, 651, 653], "versionalgorithm_vers": 583, "alg": 583, "rad_v01r00": 583, "zipproduct_vers": 583, "v01r00arrai": 583, "stararrai": 583, "vnir": 583, "ir": 583, "telemetryunit": 583, "countarrai": 583, "gain": [583, 586], "noaaconvent": 583, "7standard_name_vocabulari": 583, "administr": [583, 587, 602], "servicesproject": 583, "goesproduction_sit": 583, "wcdasproduction_environ": 583, "oespatial_resolut": 583, "2km": 583, "nadirmetadata_convent": 583, "discoveri": 583, "0orbital_slot": 583, "eastplatform_id": 583, "g16instrument_typ": 583, "baselin": 583, "scene_id": 583, "conusinstrument_id": 583, "fm1titl": 583, "radiancessummari": 583, "digit": 583, "outgo": 583, "engin": 583, "radiancekeywords_vocabulari": 583, "nasa": 583, "master": [583, 591, 594, 623], "gcmd": 583, "scienc": [583, 587, 589, 643, 644, 645, 647, 648, 649], "0iso_series_metadata_id": 583, "a70be540": 583, "c38b": 583, "11e0": 583, "962b": 583, "0800200c9a66licens": 583, "unclassifi": 583, "restrict": 583, "approv": 583, "processing_level": 583, "aeronaut": 583, "l1bcdm_data_typ": 583, "imagedataset_nam": 583, "ncproduction_data_sourc": 583, "realtimetimeline_id": 583, "6date_cr": 583, "3ztime_coverage_start": 583, "3ztime_coverage_end": 583, "7zlut_filenam": 583, "637827000": 583, "h5": [583, 591], "qtableband13": 583, "fm1a_cdrl79revh_do_08_00_00": 583, "582860861": 583, "caltargettimeinterv": 583, "fm1a_cdrl79revp_do_08_00_01": 583, "611906620": 583, "bandsaturationlimit": 583, "600000000": 583, "solarspacelookparam": 583, "fm1a_adr1233_pr_09_08_25": 583, "709281036": 583, "deadrowlistparam": 583, "mirror_record": 583, "fm1a_cdrl79revg_do_07_00_00": 583, "kalmanastroconst": 583, "xml": [583, 589], "kalmanfiltercontrol": 583, "fm1a_pr_09_08_02": 583, "677650371": 583, "kalmanmeasmaxsens": 583, "fmaa_int_only_do_09_01_00": 583, "652936814": 583, "kalmanpreprocessorcontrol": 583, "fm1a_cdrl79revj_pr_09_06_02": 583, "657795700": 583, "kalmanreferencedata": 583, "888": 583, "kalmanstarcatalog": 583, "abi_navigationrdp_band13": 583, "fm1a_cdrl79revj_do_07_00_00": 583, "abi_navigationparameters_band13": 583, "fm1a_cdrl79revh_do_07_00_00": 583, "abi_resamplingimplementation_band13": 583, "fm1a_cdrl79revh_do_07_02_00": 583, "602129336": 583, "abi_resamplingparameters_band13": 583, "starlookparam": 583, "stardetectionparam": 583, "resamplingscaledconvers": 583, "fmaa_int_only_do_08_00_00": 583, "1111": [583, 586, 591], "blockreleaseregion": 583, "2222": 583, "csv": [583, 585], "ir_retrievalparamet": 583, "fm1a_cdrl79revh_do_09_01_00": 583, "652936750": 583, "radiancelut_band13": 583, "fm1a_cdrl79reve_do_08_00_00": 583, "ict_record": 583, "fm1a_tmabi_18_159_pr_09_00_02": 583, "icm_conversionconst": 583, "fm1a_cdrl43": 583, "18_do_09_01_00": 583, "icm_sensorcoeffici": 583, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 583, "676949608": 583, "h5id": 583, "da80a1d735a5": 583, "team": 583, "bobbi": [583, 606], "jackson": [583, 606], "pug": 583, "l2": [583, 591], "file_id": 583, "def": [583, 585, 589, 591, 592, 611, 651], "calculate_degre": 583, "x_coordinate_1d": 583, "y_coordinate_1d": 583, "projection_info": 583, "lon_origin": 583, "attr": 583, "longitude_of_projection_origin": 583, "perspective_point_height": 583, "semi_major_axi": 583, "r_eq": 583, "r_pol": 583, "semi_minor_axi": 583, "matric": 583, "x_coordinate_2d": 583, "y_coordinate_2d": 583, "meshgrid": [583, 606], "lambda_0": 583, "a_var": 583, "b_var": 583, "c_var": 583, "r_": 583, "s_x": 583, "s_y": 583, "s_z": 583, "conu": 583, "seterr": 583, "abi_lat": 583, "arctan": 583, "abi_lon": 583, "crop": 583, "our": [583, 585, 588, 602, 603, 606, 611, 612, 630, 632, 637, 641], "interest": [583, 585, 586, 587, 589, 606, 632], "circ": 583, "95": [583, 585, 630, 649], "nan_to_num": 583, "9999": [583, 649], "lat_rang": 583, "lon_rang": 583, "lat_min": 583, "lat_max": 583, "lat_min_bound": 583, "argmin": 583, "ab": 583, "lat_max_bound": 583, "lon_min": 583, "lon_max": 583, "lon_min_bound": 583, "lon_max_bound": 583, "a1": [583, 586, 619], "disoveri": 583, "toolkit": [583, 586, 587, 589, 643, 644, 645, 647, 648, 649], "5439": [583, 586], "1467901": 583, "page": [583, 588, 591, 594], "block": [583, 591], "autom": [583, 589], "catalogu": 583, "adam": [583, 591], "theisen": 583, "geometri": [583, 589, 591], "cell_track_info": 583, "read_csv": [583, 585], "raw": [583, 597, 598], "githubusercont": 583, "com": [583, 592, 603, 623, 650, 651, 653], "adamtheisen": [583, 591], "cell": [583, 591, 622, 638], "stat": [583, 591], "houcsapr": 583, "20220617": 583, "index_col": 583, "parse_d": 583, "unnam": 583, "scan_mod": [583, 586], "scan_nam": [583, 586, 591], "template_nam": 583, "azimuth_min": 583, "azimuth_max": 583, "elevation_min": 583, "elevation_max": 583, "range_min": 583, "range_max": 583, "cell_azimuth": 583, "cell_rang": 583, "cell_zh": 583, "ngates_gt_0": 583, "ngates_gt_10": 583, "ngates_gt_30": 583, "ngates_gt_50": 583, "ngates_gt_10_5km": 583, "ngates_gt40_5km": 583, "03": [583, 586, 602, 628, 635], "hou": 583, "303": [583, 591], "74450": 583, "637207": 583, "383545": 583, "109900": 583, "297": 583, "59216": 583, "307": [583, 591], "63367": 583, "021240": 583, "988037": 583, "910767": 583, "700": [583, 586, 589, 591], "930866": 583, "78": 583, "302": 583, "64587": 583, "645874": 583, "1800": [583, 585, 643], "776333": 583, "55798": 583, "59094": 583, "97546": 583, "99744": 583, "975464": 583, "900": [583, 643], "972101": 583, "46": [583, 630], "2826": 583, "301": [583, 591], "48132": 583, "50330": 583, "648193": 583, "382324": 583, "503296": 583, "62400": 583, "327583": 583, "990": 583, "989": [583, 591], "210": 583, "995": [583, 591], "2827": 583, "305": [583, 591], "70007": 583, "404297": 583, "700073": 583, "13600": 583, "29": [583, 586], "037998": 583, "2828": 583, "23510": 583, "26807": 583, "235107": 583, "459156": 583, "2829": 583, "296": [583, 591], "08704": 583, "306": [583, 591], "16150": 583, "999268": 583, "998291": 583, "646362": 583, "59100": 583, "882927": 583, "807": 583, "783": [583, 591], "27": [583, 587, 630], "63": [583, 649], "830": 583, "2830": 583, "05835": 583, "08032": 583, "058350": 583, "62800": 583, "198204": 583, "767": [583, 591], "76": 583, "773": [583, 591], "2831": 583, "row": [583, 585, 587], "notebook": [583, 585, 586, 590, 591, 597, 598, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 644, 647, 648, 653], "focus": [583, 585, 586], "strategi": 583, "much": [583, 585, 586, 587, 589, 591, 645, 647, 648], "frequent": 583, "start_hour": 583, "end_hour": 583, "utc": [583, 585, 586, 587, 602, 603, 625], "48": [583, 585, 608, 635], "04": [583, 586, 589, 628, 630, 635], "26": 583, "38": [583, 586, 603], "57": [583, 632], "rjackson": [583, 606], "paw": 583, "houcsapr2cfrs2": 583, "20220712": 583, "200714": 583, "easili": [583, 589], "eol": 583, "cgi": 583, "codiac": 583, "fgr_form": 583, "016": [583, 624, 628], "densiti": [583, 633], "lma_d": 583, "lylout_220712_000000_86400_map500m": 583, "afternoon": 583, "203229": 583, "lylout_220617_000000_86400_map500m": 583, "radarmapdisplai": [583, 585, 589, 591, 602, 603, 606, 613, 619, 630, 637, 639, 643, 644, 645, 647, 648], "subplot": [583, 585, 586, 587, 589, 591, 602, 606, 611, 612, 613, 625, 630, 631, 632, 633, 634, 637, 645], "subplot_kw": 583, "disp": 583, "graph": [583, 584, 585, 586, 587, 589, 591, 597, 598, 602, 603, 606, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 637, 638, 639, 643, 644, 645, 647, 648], "150": [583, 584, 618, 645], "plot_ppi_map": [583, 585, 589, 591, 602, 603, 606, 613, 619, 630, 637, 644, 645, 648], "flash_tim": 583, "squeez": [583, 643], "argwher": [583, 606], "logical_and": [583, 606], "flash_time_start": 583, "17t20": 583, "scatter": [583, 585, 589, 612, 630], "flash_center_longitud": 583, "flash_center_latitud": 583, "set_xlim": [583, 626, 633], "96": [583, 585, 586, 606, 641, 648], "94": [583, 649], "set_ylim": [583, 626, 633], "deprecationwarn": [583, 647], "escap": 583, "sequenc": [583, 587], "xf": 583, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 583, "ipykernel_41252": 583, "2371313213": 583, "opt": [583, 584, 586, 587, 591], "anaconda3": [583, 586, 587, 641, 644, 647, 650, 653], "env": [583, 584, 586, 587, 589, 591, 597, 603, 641, 644, 647, 653], "pyart_env2": 583, "lib": [583, 586, 587, 589, 597, 603, 644, 647, 650], "python3": [583, 586, 587, 589, 590, 597, 603], "mpl": [583, 591, 633, 644, 647], "gridlin": [583, 587, 589, 613], "451": [583, 586], "userwarn": [583, 597, 603], "xlabels_top": [583, 587], "deprec": [583, 587, 594, 644, 647], "top_label": [583, 589, 613], "toggl": [583, 591], "visibl": [583, 587, 591], "ylabels_right": [583, 587], "right_label": [583, 589, 613], "microphys": 583, "strike": 583, "overlaid": 583, "approxim": [583, 586, 591], "csapr_rhi": 583, "203012": 583, "flash_alt": 583, "flash_init_altitud": 583, "flash_lon": 583, "flash_init_longitud": 583, "flash_lat": 583, "flash_init_latitud": 583, "rhi_lon": 583, "flatten": [583, 606], "rhi_lat": 583, "rhi_alt": 583, "kdtree_data": 583, "stack": [583, 586, 589, 592, 650, 651], "inp_data": 583, "where_in_rhi": 583, "flash_rang": 583, "1e3": 583, "motiv": [584, 587], "blog": [584, 589, 591, 592, 651], "come": [584, 587, 632], "colorschem": 584, "vision": 584, "defici": 584, "illustr": 584, "collabor": 584, "contributor": [584, 594, 641, 652], "guidenc": 584, "ve": 584, "trip": [584, 648], "me": 584, "might": [584, 643, 653], "assist": 584, "https_link_to_your_fork": 584, "unfamiliar": 584, "yml": [584, 591, 641, 653], "slightli": [584, 587, 613], "latest": [584, 591, 592, 641, 651], "button": [584, 588, 594], "kshrc": 584, "export": [584, 650, 653], "pip": [584, 592, 650, 651, 653], "checkout": [584, 592, 594, 651], "newblog_post": 584, "plot_ppi_mdv": [584, 618, 628], "radardisplai": [584, 585, 586, 591, 597, 598, 611, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 627, 631, 633], "jonathan": [584, 597, 598, 607, 608, 615, 616, 618, 620, 624, 627, 653], "helmu": [584, 587, 589, 592, 597, 598, 607, 608, 615, 616, 618, 620, 624, 627, 641, 643, 644, 645, 647, 648, 649, 651, 653], "jhelmu": [584, 591, 597, 598, 607, 608, 615, 616, 618, 620, 624, 627], "anl": [584, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 615, 616, 617, 618, 620, 622, 623, 624, 625, 627, 630, 631, 637, 638, 639], "licens": [584, 592, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641, 651], "bsd": [584, 592, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641, 651], "claus": [584, 592, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 651], "get_test_data": [584, 597, 598, 606, 607, 608, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 637, 638, 639], "110635": [584, 607, 618, 647], "figsiz": [584, 585, 586, 587, 589, 597, 598, 602, 603, 606, 611, 612, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 631, 632, 633, 637, 644, 645, 647, 648], "add_subplot": [584, 597, 598, 607, 608, 615, 616, 617, 618, 620, 621, 622, 623, 624, 627], "111": [584, 585, 587, 606, 607, 608, 613, 616, 617, 618, 622, 623, 624, 630], "get_cmap": [584, 614, 632], "jet": 584, "colorbind": 584, "pyart_homeyerrainbow": [584, 586, 606, 611, 612, 613, 618, 621, 625, 626, 631], "plot_rhi_cfradial_singlescan": [584, 621, 628], "panel": [584, 600, 610, 628], "sgpxsaprrhicmaci5": [584, 620, 621, 625], "c0": [584, 597, 620, 621, 625, 644], "20110524": [584, 620, 621, 625], "015604_nc4": [584, 620, 621, 625], "read_cfradi": [584, 597, 606, 608, 612, 620, 621, 625, 633, 634], "subplots_adjust": [584, 586, 611, 620, 621], "hspace": [584, 586, 620, 621], "xlabel": [584, 586, 606, 620, 621, 645], "ylabel": [584, 586, 606, 620, 621, 645], "stage": 584, "my": [584, 650], "untrack": [584, 592, 651], "blog_pr": 584, "restor": 584, "discard": 584, "_static": 584, "As": [584, 586, 592, 643, 645, 647, 648, 651], "featur": [584, 585, 587, 595, 614, 632, 641], "statement": [584, 591, 592, 651], "hint": [584, 587, 593], "wait": [584, 587], "editor": [584, 590, 592, 651, 653], "enh": [584, 591], "abort": 584, "person": 584, "addition": [584, 587], "anyon": 584, "respond": 584, "walk": [585, 586, 589, 590], "septemb": 585, "2021": [585, 632], "strong": 585, "thunderstorm": 585, "southern": 585, "wisconsin": [585, 591], "illinoi": 585, "trail": 585, "damag": [585, 589], "milwauke": [585, 589], "madison": 585, "imageri": [585, 589], "russ": 585, "schumach": 585, "colorado": 585, "unvers": 585, "put": 585, "togeth": [585, 586, 587, 591], "hi": 585, "glob": [585, 586, 589, 592, 651], "math": 585, "atan2": 585, "tempfil": 585, "cfeatur": [585, 587, 589], "mcolor": [585, 587, 614, 632], "mdate": 585, "uscounti": [585, 589], "imageio": 585, "pytz": [585, 591], "temploc": 585, "mkdtemp": 585, "filterwarn": [585, 586, 587, 589, 606], "let": [585, 586, 587, 588, 591, 592, 602, 603, 606, 611, 613, 630, 632, 637, 643, 645, 647, 648, 649, 651, 653], "machin": [585, 586, 589, 653], "kmkx": [585, 589], "nexrad_path": 585, "level2": [585, 589, 602, 603, 614, 632], "d_": 585, "kmkx20210907_170101_v06": 585, "kmkx20210907_170739_v06": 585, "kmkx20210907_171431_v06": 585, "kmkx20210907_172123_v06": 585, "kmkx20210907_172814_v06": 585, "kmkx20210907_173452_v06": 585, "kmkx20210907_174130_v06": 585, "kmkx20210907_174807_v06": 585, "kmkx20210907_175459_v06": 585, "kmkx20210907_175459_v06_mdm": 585, "read_nexrad_arch": [585, 589, 602, 603, 614, 615, 616, 632], "possibli": 585, "add_featur": [585, 587, 589], "pyart_chasespectr": [585, 589, 638, 639], "70": [585, 586, 589, 602, 606, 612, 639], "set_ext": 585, "easier": [585, 586, 587], "scroll": 585, "radar_id": 585, "timestamp": [585, 586], "tz_local": 585, "later": [585, 587, 644, 647], "interfac": [585, 591], "conn": 585, "nexradawsinterfac": 585, "get_avail_scans_in_rang": 585, "len": [585, 611, 625, 633, 643], "kmkx20210907_151132_v06": 585, "kmkx20210907_152621_v06": 585, "kmkx20210907_150152_v06": 585, "kmkx20210907_151622_v06": 585, "kmkx20210907_152121_v06": 585, "kmkx20210907_150642_v06": 585, "kmkx20210907_155424_v06_mdm": 585, "kmkx20210907_153610_v06": 585, "kmkx20210907_154814_v06": 585, "kmkx20210907_155424_v06": 585, "kmkx20210907_154205_v06": 585, "kmkx20210907_160034_v06": 585, "kmkx20210907_160607_v06": 585, "kmkx20210907_161141_v06": 585, "kmkx20210907_163532_v06": 585, "kmkx20210907_161714_v06": 585, "kmkx20210907_162924_v06": 585, "kmkx20210907_164816_v06": 585, "kmkx20210907_165433_v06": 585, "kmkx20210907_165433_v06_mdm": 585, "kmkx20210907_162247_v06": 585, "kmkx20210907_153134_v06": 585, "kmkx20210907_164149_v06": 585, "kmkx20210907_182057_v06": 585, "kmkx20210907_182749_v06": 585, "kmkx20210907_184048_v06": 585, "kmkx20210907_180841_v06": 585, "kmkx20210907_183440_v06": 585, "kmkx20210907_185431_v06_mdm": 585, "kmkx20210907_181448_v06": 585, "kmkx20210907_180150_v06": 585, "kmkx20210907_185431_v06": 585, "kmkx20210907_190109_v06": 585, "kmkx20210907_190703_v06": 585, "kmkx20210907_193238_v06": 585, "kmkx20210907_191951_v06": 585, "kmkx20210907_191327_v06": 585, "kmkx20210907_195642_v06": 585, "kmkx20210907_194459_v06": 585, "kmkx20210907_195642_v06_mdm": 585, "kmkx20210907_193849_v06": 585, "kmkx20210907_184739_v06": 585, "kmkx20210907_192614_v06": 585, "kmkx20210907_195056_v06": 585, "now": [585, 586, 587, 589, 591, 603, 606, 611, 613, 630, 632, 637, 643, 645, 650], "predict": 585, "tornado": [585, 589], "offic": [585, 587, 589, 643, 644, 645, 647, 648, 649], "acces": 585, "internet": 585, "wcm": 585, "categori": 585, "2021_wind": 585, "read_spc_report": 585, "start_tim": 585, "end_tim": 585, "hazard": 585, "timezon": 585, "gmt": 585, "torn": 585, "df": 585, "datafram": 585, "conver": 585, "to_datetim": [585, 586, 589], "set_index": 585, "inplac": 585, "ambigu": 585, "nat": 585, "nonexist": 585, "shift_forward": 585, "tz_convert": 585, "timedelta": [585, 589], "wind_report": 585, "tornado_report": 585, "hail_report": 585, "om": 585, "yr": 585, "mo": 585, "st": 585, "stf": 585, "stn": 585, "elon": 585, "wid": 585, "sn": 585, "sg": 585, "f1": 585, "f2": 585, "f3": 585, "f4": 585, "657521": 585, "tx": 585, "7500": [585, 643], "331": [585, 591], "657522": 585, "4300": 585, "657523": 585, "0500": 585, "167": 585, "657524": 585, "0200": 585, "657525": 585, "1595": 585, "45": [585, 592, 614, 623, 632, 651], "663777": 585, "sc": 585, "0100": 585, "663778": 585, "663779": 585, "2200": 585, "663780": 585, "1900": 585, "49": [585, 586], "663781": 585, "1100": [585, 591], "6261": 585, "gc_latlon_bear_dist": 585, "lat1": 585, "lon1": 585, "decim": 585, "lat2": 585, "lon2": 585, "lat1r": 585, "deg2rad": 585, "lon1r": 585, "bearr": 585, "lat2r": 585, "lon2r": 585, "rad2deg": [585, 634], "add_scale_lin": 585, "fontsiz": [585, 586, 587, 597, 598, 611, 613, 622, 623], "fontweight": 585, "zoom": [585, 586], "black": [585, 591, 612, 630], "frac_lat": 585, "frac_lon": 585, "e1": 585, "get_ext": 585, "center_lon": 585, "center_lat": 585, "shorten": 585, "hash": [585, 594], "lat1a": 585, "lon1a": 585, "lat1b": 585, "lon1b": 585, "lat2a": 585, "lon2a": 585, "lat2b": 585, "lon2b": 585, "horizontalalign": 585, "verticalalign": 585, "enumer": 585, "iter_success": 585, "mdm": 585, "this_tim": 585, "open_pyart": 585, "map_panel_ax": [585, 626], "x_cut_panel_ax": [585, 626], "y_cut_panel_ax": [585, 626], "masking_data_with_gatefilt": 585, "ax1": [585, 586, 597, 598, 612, 626, 627, 632, 637], "add_ax": [585, 626], "recogniz": 585, "with_scal": 585, "500k": 585, "grai": [585, 587, 589, 613, 614], "plot_colorbar": 585, "pad": 585, "plot_range_r": [585, 591, 616, 617, 619], "dash": [585, 587, 623], "set_xtick": [585, 644, 647], "arang": [585, 592, 606, 619, 622, 623, 630, 633, 634, 651], "set_ytick": [585, 644, 647], "wind_reports_now": 585, "slon": 585, "tolist": 585, "slat": 585, "facecolor": [585, 587, 589], "deepskyblu": 585, "tornado_reports_now": 585, "tab": [585, 594, 612], "red": [585, 622, 623], "hail_reports_now": 585, "lawngreen": 585, "legend": [585, 589, 612], "savefig": [585, 587, 589], "_dz_rpt": 585, "bbox_inch": 585, "tight": 585, "white": [585, 587, 622], "mp4": 585, "map_imag": 585, "gif_titl": 585, "delet": [585, 591, 592, 613, 651], "gif": 585, "get_writ": 585, "fp": 585, "writer": [585, 591], "imread": 585, "append_data": 585, "ffmpeg_writ": 585, "divis": [585, 591], "macro_block_s": 585, "resiz": 585, "1930": 585, "1766": 585, "1936": 585, "1776": 585, "video": 585, "codec": 585, "player": 585, "incompat": [585, 591, 595], "ipython": [585, 589, 590, 653], "browser": 585, "event": [585, 632], "overview": [585, 588, 594], "retrospect": 585, "ecosystem": 586, "By": [586, 587, 595], "learn": [586, 641], "portal": [586, 587], "march": [586, 589, 602], "shown": [586, 611], "offici": [586, 592, 651], "probe": 586, "millimet": 586, "ghz": 586, "purpos": [586, 587, 632], "nearli": [586, 622], "bokeh": 586, "formatt": 586, "datetimetickformatt": 586, "hv": 586, "guckazrcfrgem1": 586, "20220314": 586, "000003": 586, "0x7f7dbd517400": 586, "linear_depolarization_ratio": 586, "mean_doppler_velocity_crosspolar_v": 586, "reflectivity_crosspolar_v": 586, "signal_to_noise_ratio_copolar_h": 586, "signal_to_noise_ratio_crosspolar_v": 586, "spectral_width": 586, "spectral_width_crosspolar_v": 586, "vertical": 586, "awai": [586, 587], "pyart_bal": [586, 587, 606, 625, 637, 645], "substanti": 586, "211": [586, 627], "ax2": [586, 597, 598, 606, 612, 626, 627, 631, 632, 637, 645], "212": [586, 627], "pangeo": 586, "1736": 586, "600": [586, 643], "r_calib": 586, "14t00": 586, "489e": 586, "806e": 586, "107": 586, "886e": 586, "command_lin": 586, "kazrcfr_ingest": 586, "guc": 586, "m1": 586, "process_vers": 586, "kazrcfr": 586, "el7": 586, "dod_vers": 586, "kazrcfrg": 586, "input_sourc": 586, "guckazrm1": 586, "kazr_moments_": 586, "site_id": 586, "software_vers": 586, "wed": 586, "mar": 586, "leachman": 586, "1498936": 586, "histori": [586, 649], "dsmgr": 586, "procnode2": 586, "1736rang": 586, "600frequenc": 586, "1sweep": 586, "1r_calib": 586, "1coordin": 586, "453818": 586, "startstandard_nam": 586, "timearrai": 586, "453818000": 586, "527426000": 586, "601027000": 586, "002026000": 586, "075634000": 586, "149219000": 586, "float323": 586, "10long_nam": 586, "transmit": [586, 645], "frequencyunit": 586, "hzstandard_nam": 586, "radiation_frequencymeta_group": 586, "instrument_parametersarrai": 586, "float32100": 586, "130": 586, "803e": 586, "04long_nam": 586, "volumeunit": 586, "mmeters_between_g": 586, "979246meters_to_center_of_first_g": 586, "679245spacing_is_const": 586, "truestandard_nam": 586, "projection_range_coordinateaxi": 586, "radial_range_coordinatearrai": 586, "679245": 586, "6585": 586, "160": [586, 634, 647], "63774": 586, "17998": 586, "18028": 586, "268": 586, "18058": 586, "248": 586, "northunit": 586, "degreestandard_nam": 586, "sensor_to_target_azimuth_angleaxi": 586, "radial_azimuth_coordinatearrai": 586, "planeunit": 586, "sensor_to_target_elevation_angleaxi": 586, "radial_elevation_coordinatearrai": 586, "00long_nam": 586, "epochancillary_vari": 586, "time_offsetarrai": 586, "base_timeancillary_vari": 586, "base_timearrai": 586, "unspecifiedunit": 586, "dbstandard_nam": 586, "radar_linear_depolarization_ratiounpacking_detail": 586, "unpack": 586, "pack": [586, 591], "1041600": 586, "motion": 586, "instrumentunit": 586, "sstandard_nam": 586, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 586, "crosspolar": 586, "channelunit": 586, "factorunit": 586, "dbzstandard_nam": 586, "equivalent_reflectivity_factorunpacking_detail": 586, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 586, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 586, "widthunit": 586, "radar_doppler_spectrum_widthunpacking_detail": 586, "angleunit": 586, "degreearrai": 586, "n_sampl": 586, "momentsunit": 586, "1meta_group": 586, "instrument_parametersstandard_nam": 586, "number_of_samples_used_to_compute_momentsarrai": 586, "noise_figur": 586, "receiv": [586, 589, 591, 645], "methodunit": 586, "dbarrai": 586, "67": [586, 632], "8043": 586, "unambigu": [586, 649], "velocityunit": 586, "smeta_group": 586, "968252": 586, "repetit": 586, "timeunit": 586, "sarrai": 586, "00027": 586, "transmitt": 586, "r_calib_radar_constant_copol": 586, "copolarunit": 586, "dbmeta_group": 586, "radar_calibrationstandard_nam": 586, "calibrated_radar_constant_h_channelarrai": 586, "996191": 586, "r_calib_radar_constant_crosspol": 586, "crosspolarunit": 586, "405288": 586, "r_calib_two_way_radome_loss_h": 586, "radom": 586, "loss": 586, "radar_calibration_two_way_radome_loss_h_channelarrai": 586, "half": 586, "radar_measured_sky_noise_h": 586, "sky": 586, "dbmarrai": 586, "69": [586, 619, 634], "03703": 586, "035995": 586, "0373": 586, "03814": 586, "05106": 586, "05984": 586, "radar_measured_sky_noise_v": 586, "radar_measured_transmit_pow": 586, "powerunit": 586, "dbmmeta_group": 586, "radar_transmit_powerarrai": 586, "143": [586, 634], "receiver_gain_copol": 586, "copolunit": 586, "sweepunit": 586, "1735": 586, "s22": 586, "basedunit": 586, "unambiguous_rang": [586, 649], "rangeunit": 586, "mmeta_group": 586, "unambiguous_rangearrai": 586, "40479": 586, "477": [586, 591], "degree_nstandard_nam": 586, "latitudevalid_min": 586, "0valid_max": 586, "0arrai": 586, "956158": 586, "degree_estandard_nam": 586, "longitudevalid_min": 586, "106": [586, 599], "987854": 586, "altitudeunit": 586, "mstandard_nam": 586, "altitudearrai": 586, "2886": 586, "levelunit": 586, "heightarrai": 586, "m1convent": 586, "radar_calibrationprocess_vers": 586, "el7dod_vers": 586, "1input_sourc": 586, "kazr_moments_20220314": 586, "000005": 586, "datsite_id": 586, "gucplatform_id": 586, "kazrcfrgefacility_id": 586, "m1data_level": 586, "a1location_descript": 586, "laboratori": 586, "sail": 586, "mt": 586, "crest": 586, "butt": [586, 587], "coloradodatastream": 586, "a1antenna_altitud": 586, "mantenna_diamet": 586, "mcomment": 586, "digital_rx_dec": 586, "24dualpol": 586, "0fft_len": 586, "512filter_length": 586, "67institut": 586, "radiat": [586, 587, 589, 592, 641, 643, 644, 645, 647, 648, 649, 651], "research": [586, 587, 589, 592, 641, 643, 644, 645, 647, 648, 649, 651], "facilityn_g": 586, "1024num_spectral_averag": 586, "15pulse_compression_ratio": 586, "3range_gate_spacing_m": 586, "979246range_offset_ch1": 586, "mrange_offset_ch2": 586, "mscan_mod": 586, "pointingscan_nam": 586, "vptsoftware_vers": 586, "leachmantitl": 586, "momentsdoi": 586, "1498936histori": 586, "isel": 586, "coupl": 586, "extra": [586, 589, 591], "won": 586, "600rang": 586, "600coordin": 586, "395940000": 586, "469427000": 586, "542946000": 586, "360000": 586, "quadmesh": [586, 587], "0x7f7dad654f10": 586, "meant": [586, 588], "popular": [586, 589, 592, 651], "jump": 586, "bar": 586, "hover": 586, "inspect": 586, "clabel": [586, 622, 623], "xformatt": 586, "ref_plot": 586, "7000": [586, 647], "platform_id": 586, "location_descript": 586, "xtick": [586, 644, 647], "ytick": [586, 644, 647], "vel_plot": 586, "prepar": [586, 587, 589, 592, 643, 644, 645, 647, 648, 649, 651], "plot1": 586, "plot2": 586, "datashad": 586, "lazili": 586, "coars": 586, "intial": 586, "unfortun": 586, "ref_plot_rast": 586, "param": [586, 591], "dynamic_oper": 586, "outofboundsdatetim": 586, "nanosecond": 586, "54168": 586, "invok": 586, "x_rang": 586, "13t23": 586, "417014000": 586, "579705000": 586, "y_rang": 586, "traceback": 586, "recent": [586, 591, 653], "mgrover": [586, 589, 602, 606, 611, 612, 617, 625, 630, 631, 637, 638, 639], "277": [586, 591], "get_plot_fram": 586, "map_obj": 586, "1344": 586, "val": 586, "_execute_callback": 586, "tuple_kei": 586, "retval": 586, "callback": 586, "arg": 586, "708": 586, "__call__": 586, "ret": 586, "__init__": [586, 592, 603, 651], "1043": [586, 591], "obj": 586, "resolv": [586, 591], "1032": [586, 591], "1044": 586, "1036": 586, "_process": 586, "1018": [586, 591], "process_el": 586, "194": 586, "_appli": 586, "141": 586, "1514": 586, "predic": 586, "207": 586, "pipelined_fn": 586, "method_fn": 586, "1223": 586, "super": [586, 616, 644, 647], "710": [586, 591], "map_fn": 586, "214": 586, "1133": [586, 591], "astyp": 586, "int64": 586, "1497": 586, "apply_ufunc": 586, "1159": 586, "apply_dataarray_vfunc": 586, "286": [586, 591], "result_var": 586, "data_var": 586, "750": [586, 591], "apply_variable_ufunc": 586, "as_compatible_data": 586, "234": 586, "_possibly_convert_object": 586, "178": 586, "asarrai": 586, "ravel": 586, "reshap": 586, "sanitize_arrai": 586, "567": [586, 591], "subarr": 586, "_try_cast": 586, "raise_cast_failur": 586, "726": [586, 591], "sanitize_to_nanosecond": 586, "arr": 586, "cast": 586, "1717": 586, "ensure_datetime64n": 586, "_lib": 586, "tslib": 586, "pyx": [586, 591], "257": 586, "np_datetim": 586, "120": [586, 643], "check_dts_bound": 586, "saw": 586, "few": [586, 591, 594, 653], "pro": 586, "con": 586, "thing": [586, 592, 651], "clear": 586, "push": [586, 591, 592, 594, 651], "share": 586, "ran": [586, 592, 651], "shareabl": 586, "workflow": [586, 589, 591], "mb": [586, 599, 604, 609, 628, 635, 640], "difficult": [586, 606], "jupyterbook": 586, "jupyt": [586, 589, 591, 597, 598, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 653], "campaign": 586, "twitter": 587, "nou": 587, "dryglick": 587, "notic": [587, 591, 606, 613], "odd": 587, "directli": [587, 611], "grei": 587, "darker": 587, "moir\u00e9": 587, "ryan": 587, "dopplershift": [587, 591], "detect": [587, 591, 617, 632, 645], "turbul": 587, "forecast": 587, "ncei": 587, "search": [587, 641, 650], "could": [587, 592, 603, 651], "aw": [587, 589, 591, 600, 601, 603, 604], "2018": 587, "mention": [587, 591, 592, 641, 651, 653], "he": 587, "n0u": [587, 602], "elgin": 587, "panhandl": 587, "florida": 587, "kevx": 587, "1458": 587, "octob": 587, "landfal": 587, "gulf": 587, "lookl": 587, "webpag": 587, "cart": 587, "sent": 587, "email": [587, 591], "websit": 587, "ftp": 587, "unzip": [587, 589], "kmob_sdus54_n0uevx_201810101458": 587, "partli": [587, 589, 643, 644, 645, 647, 648, 649], "facil": [587, 589, 592, 641, 643, 644, 645, 647, 648, 649, 651], "cite": [587, 589, 591, 643, 644, 645, 647, 648, 649], "jj": [587, 589, 643, 644, 645, 647, 648, 649], "sm": [587, 589, 643, 644, 645, 647, 648, 649], "colli": [587, 589, 592, 641, 643, 644, 645, 647, 648, 649, 651], "jor": [587, 589, 592, 641, 643, 644, 645, 647, 648, 649, 651], "5334": [587, 589, 592, 641, 643, 644, 645, 647, 648, 649, 651], "119": [587, 589, 592, 603, 641, 643, 644, 645, 647, 648, 649, 651], "read_level3": 587, "dark": 587, "dark_background": 587, "okai": 587, "88": [587, 589, 630], "83": 587, "31msignatur": 587, "0m": [587, 589], "0mdisplai": 587, "34m": 587, "0mplot_ppi_map": 587, "0mfield": 587, "0msweep": 587, "36m0": 587, "0mmask_tupl": 587, "32mnone": 587, "0mvmin": 587, "0mvmax": 587, "0mcmap": 587, "0mnorm": 587, "0mmask_outsid": 587, "32mfals": 587, "0mtitl": 587, "0mtitle_flag": 587, "32mtrue": 587, "0mcolorbar_flag": 587, "0mcolorbar_label": 587, "0max": 587, "0mfig": 587, "0mlat_lin": 587, "0mlon_lin": 587, "0mproject": 587, "0mmin_lon": 587, "0mmax_lon": 587, "0mmin_lat": 587, "0mmax_lat": 587, "0mwidth": 587, "0mheight": 587, "0mlon_0": 587, "0mlat_0": 587, "0mresolut": 587, "0mshapefil": 587, "0mshapefile_kwarg": 587, "0medg": 587, "0mgatefilt": 587, "0mfilter_transit": 587, "0membelish": 587, "0mraster": 587, "0mtick": 587, "0mticklab": 587, "0malpha": 587, "31msourc": 587, "32mdef": 587, "0mself": 587, "embelish": [587, 591], "31m": 587, "0mparse_vmin_vmax": 587, "0m_radar": 587, "0mparse_cmap": 587, "32mif": 587, "32mi": 587, "0mnp": 587, "0marang": 587, "36m30": 587, "36m46": 587, "36m1": 587, "36m110": 587, "36m75": 587, "0mloc": 587, "0mdata": 587, "0m_get_data": 587, "0mx": 587, "0my": 587, "0m_get_x_i": 587, "0mma": 587, "0mmasked_outsid": 587, "0mplt": 587, "0mgcf": 587, "32mnot": 587, "0mhasattr": 587, "32mels": 587, "0mcartopi": 587, "0mcr": 587, "0mlambertconform": 587, "0mcentral_longitud": 587, "0mcentral_latitud": 587, "0mwarn": 587, "overrid": [587, 623], "lambert": [587, 591], "0muserwarn": 587, "0mset_ext": 587, "0mplatecarre": 587, "32melif": 587, "36m2": 587, "0mgrid_project": 587, "0mpm": 587, "0mpcolormesh": 587, "36m1000": 587, "0mtransform": 587, "graphic": 587, "0mset_raster": 587, "admin": [587, 592, 651], "0mstates_provinc": 587, "0mfeatur": 587, "0mnaturalearthfeatur": 587, "0mcategori": 587, "cultur": 587, "0mname": 587, "admin_1_states_provinces_lin": 587, "0mscale": 587, "0mfacecolor": 587, "0mcoastlin": 587, "0madd_featur": 587, "0medgecolor": 587, "pose": 587, "difficulti": 587, "spectif": 587, "32min": 587, "0mmercat": 587, "0mgl": 587, "0mgridlin": 587, "0mxloc": 587, "0myloc": 587, "0mdraw_label": 587, "0mxlabels_top": 587, "0mylabels_right": 587, "0misinst": 587, "0mfigur": 587, "0mcanva": 587, "0mdraw": 587, "maker": 587, "0mxaxi": 587, "0mset_major_formatt": 587, "0mmpl": 587, "0mlongitude_formatt": 587, "0myaxi": 587, "0mlatitude_formatt": 587, "0m_lambert_gridlin": 587, "0mlambert_xtick": 587, "0mlambert_ytick": 587, "32mfrom": 587, "0mio": 587, "0mshaperead": 587, "32mimport": 587, "0mreader": 587, "0madd_geometri": 587, "0mgeometri": 587, "0m_set_titl": 587, "0mplot": 587, "0mappend": 587, "0mplot_var": 587, "0mplot_colorbar": 587, "0mmappabl": 587, "0mlabel": 587, "32mreturn": 587, "31mfile": 587, "git_repo": 587, "31mtype": 587, "fashion": 587, "0marg": 587, "0mshade": 587, "0mantialias": 587, "0mkwarg": 587, "31mdocstr": 587, "pseudocolor": 587, "signatur": [587, 589], "quadrilater": 587, "pcolor": 587, "prefer": [587, 591, 650], "discuss": [587, 595], "ref": [587, 603, 626], "shade": [587, 591], "flat": [587, 602], "gouraud": 587, "cari": 587, "expand": 587, "rc": 587, "regist": 587, "canon": 587, "chosen": 587, "patch": [587, 622], "force_edgecolor": 587, "singular": 587, "opaqu": 587, "auto": [587, 589, 611], "solid": [587, 623], "quad": 587, "halfwai": 587, "galleri": [587, 591, 597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639, 641], "images_contours_and_field": 587, "pcolormesh_grid": 587, "snap": 587, "mesh": 587, "misc": [587, 591], "rasterization_demo": 587, "constructor": 587, "agg_filt": 587, "anim": 587, "antialias": [587, 622, 623], "aa": 587, "capstyl": 587, "clip_box": 587, "bbox": 587, "clip_on": 587, "clip_path": 587, "rgba": 587, "ec": 587, "fc": 587, "gid": 587, "hatch": 587, "in_layout": 587, "joinstyl": 587, "miter": 587, "bevel": 587, "thereof": 587, "offset_transform": 587, "path_effect": 587, "abstractpatheffect": 587, "picker": 587, "pickradiu": 587, "sketch_param": 587, "random": 587, "zorder": 587, "imshow": [587, 591, 607, 608, 611], "_ax": 587, "nrow": [587, 611], "ncolumn": 587, "_differ": 587, "li": 587, "handl": [587, 591], "polycollect": 587, "thu": [587, 594], "almost": 587, "slight": 587, "polygon": 587, "irrespect": 587, "One": [587, 592, 643, 649, 651, 653], "masked_arrai": [587, 643, 649], "1e": [587, 643, 649], "next": [587, 589, 594, 602], "get_gate_lat_lon_alt": [587, 591], "565": [587, 591], "562763": 587, "560526": 587, "888458": 587, "886227": 587, "883991": 587, "562765": 587, "560532": 587, "892834": 587, "890606": 587, "888374": 587, "562769": 587, "56054": 587, "898003": 587, "89578": 587, "893553": 587, "562756": 587, "560509": 587, "880096": 587, "877857": 587, "875618": 587, "560513": 587, "881853": 587, "879616": 587, "877377": 587, "56276": 587, "560518": 587, "884874": 587, "88264": 587, "880404": 587, "92199": 587, "92222": 587, "92245": 587, "186806": 587, "18703": 587, "18723": 587, "922264": 587, "92254": 587, "2396": 587, "23986": 587, "24012": 587, "92231": 587, "92263": 587, "29231": 587, "29262": 587, "29292": 587, "92208": 587, "92218": 587, "02802": 587, "02811": 587, "0282": 587, "92212": 587, "92226": 587, "07571": 587, "07583": 587, "07595": 587, "922356": 587, "133934": 587, "1341": [587, 591], "13428": 587, "goe": 587, "setup": [587, 591, 602, 606, 611, 612, 617, 630, 641, 650], "geoaxi": 587, "border": [587, 622], "cbar": [587, 613], "tick_param": 587, "labels": 587, "set_label": [587, 613], "gl": [587, 589, 613], "draw_label": [587, 589, 613], "xlabel_styl": [587, 613], "ylabel_styl": [587, 613], "kevz_velocity_2018_10_10_1458": 587, "specifici": 587, "pull": [587, 591, 592, 593, 594, 603, 651], "pr": [587, 594], "importantli": 587, "api": [587, 591], "abil": [587, 591, 641, 653], "arguement": 587, "explor": [587, 589], "appreci": [587, 641], "hello": 588, "welcom": 588, "narr": 588, "feedback": 588, "feel": 588, "know": [588, 653], "fridai": 589, "midwest": 589, "142": 589, "368": [589, 591], "excess": 589, "65": 589, "knot": 589, "mph": 589, "184": 589, "hail": [589, 591, 633], "bing": 589, "inch": 589, "diamet": 589, "ifram": 589, "spc": [589, 591], "climo": 589, "gmf": 589, "php": 589, "rpt": 589, "230331_rpts_filter": 589, "walworth": 589, "counti": 589, "southeastern": [589, 606], "geneva": 589, "tourist": 589, "especi": 589, "live": 589, "chicagoland": 589, "confirm": [589, 602, 643], "assembl": 589, "summari": [589, 602], "grlevel": 589, "encourag": 589, "peopl": 589, "cookbook": [589, 591, 641, 652], "moor": 589, "focu": 589, "varieti": [589, 592, 600, 601, 651], "forg": [589, 591, 592, 641, 650, 651, 653], "arm_pyart": [589, 592, 594, 641, 650, 651, 653], "shaperead": 589, "shpreader": 589, "shapelyfeatur": 589, "miniforge3": 589, "tqdm": 589, "tqdmwarn": 589, "iprogress": 589, "ipywidget": 589, "readthedoc": [589, 592, 651], "stabl": 589, "user_instal": 589, "autonotebook": 589, "notebook_tqdm": 589, "credit": 589, "censu": 589, "mac": [589, 591, 641], "curl": 589, "linux": [589, 591, 592, 641, 651, 653], "wget": 589, "www2": 589, "geo": [589, 591], "tiger": 589, "tiger2016": 589, "primaryroad": 589, "tl_2016_us_primaryroad": 589, "zip": [589, 600, 603, 611, 641], "xferd": 589, "dload": 589, "upload": [589, 591], "spent": 589, "7m": 589, "cpg": 589, "inflat": 589, "dbf": 589, "prj": 589, "shp": 589, "ea": 589, "iso": 589, "shx": 589, "reader": [589, 590, 591, 603], "geom": 589, "loop": [589, 591, 634], "rec": 589, "fullnam": 589, "interstate_featur": 589, "darkblu": 589, "clean": [589, 591, 637], "filesystem": 589, "month": [589, 602, 603], "kmkx20230401_010517_v06": 589, "kmkx20230401_011057_v06": 589, "kmkx20230401_011638_v06": 589, "kmkx20230401_012219_v06": 589, "kmkx20230401_012759_v06": 589, "kmkx20230401_013341_v06": 589, "kmkx20230401_013922_v06": 589, "kmkx20230401_014502_v06": 589, "kmkx20230401_015042_v06": 589, "kmkx20230401_015623_v06": 589, "kmkx20230401_015928_v06": 589, "plot_configur": 589, "twilight_shift": [589, 637], "cross_correlation_ratio": [589, 602, 614, 615, 632, 648, 649], "plot_radar_ppi": 589, "left_field": 589, "right_field": 589, "plot_config": 589, "precip": 589, "vel_dealia": 589, "dealias_region_bas": [589, 591, 598, 637, 645], "add_field": [589, 592, 597, 598, 632, 633, 637, 644, 645, 651], "corrected_veloc": [589, 598, 634, 637, 645, 648], "plot_numb": 589, "config": [589, 591, 643, 653], "121": [589, 602, 606, 612, 631, 637], "generate_titl": 589, "time_step": 589, "get_start_end": 589, "central_tim": 589, "astimezon": 589, "new_titl": 589, "cdt": 589, "sharon": 589, "Near": 589, "delavan": 589, "6105": 589, "60666": 589, "lightgrei": 589, "lavenderblush": 589, "ppi_velocity_reflectivity_": 589, "flexibl": 589, "hope": 589, "past": [590, 592, 651], "tag": [590, 591], "yyyi": 590, "dd": 590, "kernelspec": 590, "display_nam": 590, "ipykernel": 590, "languag": [590, 592, 641, 651], "language_info": 590, "codemirror_mod": 590, "file_extens": 590, "mimetyp": 590, "nbconvert_export": 590, "pygments_lex": 590, "ipython3": 590, "insert": 590, "nbformat": 590, "nbformat_minor": 590, "care": 590, "notabl": 590, "insight": 590, "cmweather": 591, "1452": 591, "zssherman": 591, "accessor": 591, "1457": 591, "syedhamidali": 591, "xradar": [591, 640], "1456": 591, "mgrover1": 591, "1474": 591, "typo": 591, "1471": 591, "ci": [591, 593, 594], "isinst": 591, "1448": 591, "1472": 591, "1470": 591, "1469": 591, "outdat": 591, "instruct": [591, 641, 652], "1462": 591, "wheel": 591, "1473": 591, "1468": 591, "1450": 591, "app": 591, "scolli": 591, "dim": 591, "load_kazr": 591, "1446": 591, "isilb": 591, "1447": 591, "arm_vpt": 591, "1445": 591, "lint": 591, "1444": 591, "mnt": 591, "1440": [591, 643], "dedic": 591, "1442": 591, "1443": 591, "1437": 591, "minor": [591, 644, 647], "algorith": 591, "1434": 591, "lauratomkin": 591, "wolfidan": 591, "pin": [591, 594], "1430": 591, "codeql": 591, "1433": 591, "1428": 591, "neutrinocero": 591, "odim": 591, "1425": 591, "gatemapp": [591, 600, 605, 609], "1418": 591, "rcjackson": 591, "commit": [591, 592, 594, 651], "hook": 591, "1419": 591, "sphinx": [591, 597, 598, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639], "theme": 591, "1427": 591, "feet": 591, "1423": 591, "leak": 591, "mapper": 591, "1421": 591, "vforcel": 591, "1417": 591, "steepatticstair": 591, "1407": 591, "readm": [591, 650], "1397": 591, "1416": 591, "visual": [591, 611, 614, 622, 630, 637], "1413": 591, "1411": 591, "1409": 591, "1401": 591, "joshua": 591, "hampton": 591, "del": [591, 613], "old": 591, "conda_recip": 591, "1399": 591, "ruff": 591, "1388": 591, "wrong": 591, "1390": 591, "1385": 591, "jrobrien91": 591, "1383": 591, "pkg_resourc": 591, "runtim": 591, "1394": 591, "mail": [591, 592, 641, 651], "1393": 591, "codeown": 591, "1391": 591, "1384": 591, "kmuehlbauer": 591, "1382": 591, "1379": 591, "mismatch": 591, "1381": 591, "wrap": 591, "get_gate_area": 591, "1375": 591, "1380": [591, 643], "1372": 591, "exec_modul": 591, "load_modul": 591, "1369": 591, "badg": 591, "1363": 591, "read_sigmet": 591, "1351": 591, "zouihao": 591, "unus": 591, "1343": 591, "1342": 591, "range_step": 591, "1338": 591, "max_num_g": 591, "1337": 591, "1327": 591, "revert": 591, "setuptool": 591, "unwant": 591, "cleanup": 591, "And": 591, "1357": 591, "1355": 591, "1339": 591, "1361": 591, "1335": 591, "manipul": [591, 613, 642], "1300": 591, "kylejgillett": 591, "melovato": 591, "tsbiscaro": 591, "1324": 591, "1319": 591, "1314": 591, "add_filt": 591, "1326": 591, "1320": [591, 643], "1325": 591, "jthielen": 591, "1303": 591, "jjhelmu": [591, 653], "wx4stg": 591, "antiviru": 591, "similiar": 591, "1307": 591, "1299": 591, "throw": 591, "convolve1d": 591, "1313": 591, "1306": 591, "1317": 591, "1311": 591, "jfigui": 591, "citat": [591, 592, 614, 641, 651], "1304": 591, "gamaanderson": 591, "hhuangwx": 591, "josephhardine": 591, "meteoswiss": [591, 633, 634], "mdr": 591, "ngui": 591, "tjlang": 591, "1294": 591, "1290": 591, "1285": 591, "1279": 591, "backward": [591, 595], "1278": 591, "1284": 591, "tracer": 591, "1296": 591, "1292": 591, "1287": 591, "cibuildwheel": 591, "1267": 591, "ocefpaf": 591, "1275": 591, "1276": 591, "1265": 591, "dcedgren": 591, "jilling": 591, "zhaobudaola": 591, "1263": 591, "1235": 591, "1215": 591, "columnsect": [591, 630], "1261": 591, "1241": 591, "1240": 591, "gatefi": 591, "1226": 591, "join_radar": 591, "repititon": 591, "iparam": 591, "1218": 591, "1216": 591, "trmm_rsl": 591, "1239": 591, "cftime": 591, "1211": 591, "incorrect": [591, 595, 645], "1231": 591, "ci_setup": 591, "1213": 591, "1264": 591, "basic": [591, 641, 642, 644], "1251": 591, "1234": 591, "1228": 591, "subset_radar": 591, "radar_util": 591, "1227": 591, "pyrad": 591, "1220": 591, "tst": 591, "median": 591, "1214": 591, "srbrodzik": 591, "1208": 591, "1204": 591, "1201": [591, 602], "1198": 591, "1196": 591, "catch": 591, "1191": 591, "1207": 591, "pypi": 591, "1206": 591, "unitest": 591, "1200": [591, 643], "1199": 591, "echoclass": 591, "1197": 591, "convv": 591, "awhil": 591, "back": 591, "1195": 591, "1190": 591, "dp": 591, "1184": 591, "solver": [591, 641], "1183": 591, "1176": 591, "1187": 591, "revis": 591, "270": [591, 592, 627, 651], "1185": 591, "1181": 591, "1178": 591, "1171": 591, "1180": 591, "1177": 591, "1173": 591, "sobitp59": 591, "rogu": 591, "1170": 591, "1160": 591, "1152": 591, "1151": 591, "mispel": 591, "1158": 591, "1148": 591, "1167": 591, "1154": 591, "unittest": 591, "1153": 591, "scm": [591, 592, 651], "1136": 591, "trigger": 591, "1126": 591, "action": [591, 592, 594, 651], "1118": 591, "1115": 591, "maco": 591, "1147": 591, "prune": 591, "1143": 591, "1141": 591, "1140": [591, 643], "1139": 591, "1137": 591, "1131": 591, "1130": 591, "1129": 591, "1128": 591, "1127": 591, "1125": 591, "1124": 591, "1123": 591, "1120": 591, "1119": 591, "dpr": 591, "1116": 591, "postcard": 591, "1104": 591, "1103": 591, "1122": 591, "gridmapdisplai": [591, 600, 610, 612, 628, 632, 638, 647], "1099": 591, "quick": [591, 602], "1146": 591, "contribut": [591, 592, 651, 652], "1106": 591, "1117": 591, "1113": 591, "submodul": [591, 647], "1110": 591, "forgotten": 591, "1108": 591, "test_echo_class": 591, "1107": 591, "1101": 591, "1098": 591, "1097": 591, "1094": 591, "1080": [591, 643], "registri": 591, "1087": 591, "1096": 591, "1093": 591, "1090": 591, "1089": 591, "1088": 591, "1085": 591, "1084": 591, "analyt": 591, "1081": 591, "1079": 591, "1077": 591, "pmi": 591, "log": [591, 594], "csp": 591, "ritvj": 591, "doesn": [591, 643], "mandat": 591, "1014": 591, "reallynicegui": 591, "hasattr": 591, "1034": 591, "overlap": [591, 613, 622], "mapdisplai": 591, "1029": 591, "azimuth_rhi_plot": 591, "1025": 591, "1019": 591, "rxm25": 591, "1075": 591, "1064": 591, "mute_radar": 591, "1033": 591, "1030": 591, "radxgrid": 591, "1027": 591, "1026": 591, "roadmap": 591, "repo": 591, "1059": 591, "dep": 591, "sidebar": 591, "1074": 591, "datetime_util": 591, "1072": 591, "1071": 591, "rtanamachi": 591, "pydata": 591, "1069": 591, "adc": 591, "1068": 591, "1067": 591, "1066": 591, "1063": 591, "codecov": 591, "1061": 591, "1060": 591, "1058": 591, "1056": 591, "1055": 591, "1053": 591, "1051": 591, "1050": 591, "1048": 591, "branch": [591, 592, 594, 651, 653], "1040": 591, "1039": 591, "1038": 591, "1031": 591, "1024": 591, "1020": [591, 643], "humphreyscart": 591, "tkralph": 591, "1003": 591, "997": 591, "1007": 591, "1001": 591, "1010": 591, "travi": 591, "sty": [591, 592, 651], "pep8": [591, 592, 651], "1005": 591, "988": 591, "quba1": 591, "984": 591, "tdwr": 591, "969": 591, "956": 591, "994": 591, "979": 591, "h5py": [591, 641], "978": 591, "june1st": 591, "switch": [591, 592, 651], "973": 591, "maint": [591, 592, 651], "966": 591, "983": 591, "amarouan": 591, "abdelhak": 591, "bmgxyz": 591, "address": 591, "962": 591, "mwilson14": 591, "963": 591, "nonetyp": 591, "regard": 591, "959": 591, "964": 591, "176": 591, "919": 591, "rda": 591, "903": 591, "add_gate_area": 591, "950": 591, "blotchi": 591, "947": 591, "946": 591, "944": 591, "694": 591, "938": 591, "vlouf": 591, "934": 591, "925": 591, "924": 591, "917": 591, "appveyor": 591, "937": 591, "927": 591, "liter": 591, "said": 591, "949": 591, "948": 591, "929": 591, "926": 591, "920": 591, "915": 591, "911": 591, "grwise1": 591, "jsignel": 591, "rumpki": 591, "broke": 591, "913": 591, "msg29": 591, "909": 591, "907": 591, "framework": 591, "910": 591, "912": 591, "napoleon": 591, "902": 591, "rtd": 591, "893": 591, "892": 591, "odimh5": 591, "898": 591, "895": 591, "896": 591, "864": 591, "louiswick": 591, "hilderbrand": 591, "877": 591, "886": 591, "crash": 591, "878": 591, "891": 591, "zflamig": 591, "futur": [591, 592, 595, 651], "890": 591, "889": 591, "885": 591, "dstex": 591, "880": 591, "soon": 591, "879": 591, "plot_grid": [591, 612, 626, 632, 638, 647], "to_xarrai": 591, "873": 591, "876": 591, "elementwis": 591, "anaconda": [591, 592, 594, 641, 650, 651], "faq": 591, "group": [591, 592, 651], "868": 591, "mvanlierwalq": 591, "848": 591, "grid_io": 591, "846": 591, "jhemedin": 591, "841": 591, "nbin": 591, "865": 591, "856": 591, "840": [591, 643], "caus": 591, "852": 591, "849": 591, "get_dataset": 591, "845": 591, "docstr": 591, "838": 591, "836": 591, "cheatsheet": 591, "fortran": 591, "bit": [591, 650], "environ": [591, 641, 650, 652], "contr": 591, "843": 591, "spell": 591, "835": 591, "read_d3r_gcpex_nc": 591, "842": 591, "eccc": 591, "837": [591, 597, 599], "taylbm": 591, "kenkeho": 591, "swnesbitt": 591, "827": 591, "822": 591, "806": 591, "804": 591, "800": 591, "778": 591, "688": [591, 630], "incomplet": 591, "msg5": 591, "832": 591, "820": 591, "812": 591, "deal": 591, "809": 591, "contiuum": 591, "gh": 591, "795": 591, "explicit": 591, "py2": 591, "790": 591, "sh": 591, "kai": 591, "muehlbauer": 591, "789": 591, "777": 591, "indexerror": 591, "check_outli": 591, "776": 591, "juhi24": 591, "770": 591, "imp": 591, "newer": [591, 650], "675": 591, "824": 591, "minu": 591, "803": 591, "738": 591, "799": 591, "792": 591, "favor": 591, "791": 591, "786": 591, "784": [591, 635], "itself": [591, 649], "inc": 591, "794": 591, "rst": 591, "preformat": 591, "779": 591, "eaxmpl": 591, "834": 591, "833": 591, "elsewher": 591, "831": 591, "828": 591, "821": 591, "pytest": [591, 592, 641, 650, 651], "818": 591, "atteun": 591, "817": 591, "simulated_veloc": [591, 648], "802": 591, "grab": [591, 625], "801": 591, "796": 591, "793": 591, "787": 591, "781": 591, "cvd": 591, "775": 591, "774": 591, "769": 591, "nl2": 591, "765": 591, "miaoneng": 591, "gewitterblitz": 591, "liliaow567": 591, "764": 591, "coveral": 591, "messsag": 591, "761": 591, "757": 591, "set_raster": 591, "748": 591, "754": 591, "755": 591, "recompil": 591, "758": 591, "ngoldbaum": 591, "reciev": 591, "752": 591, "maskedarrai": [591, 597], "gate_id": [591, 648], "749": 591, "746": 591, "744": 591, "zxdawn": 591, "netcdftim": 591, "736": 591, "731": 591, "dot_product": 591, "729": 591, "test_rhi_elev": 591, "twice": 591, "724": 591, "728": 591, "727": 591, "nosetest": 591, "715": 591, "vradh": 591, "vradv": 591, "quantiti": 591, "739": 591, "es5nhc": 591, "735": 591, "wave100": 591, "734": 591, "733": 591, "730": 591, "723": 591, "comp": 591, "721": 591, "cameron": 591, "homey": 591, "716": 591, "cameronhomey": 591, "jamessong": 591, "winash12": 591, "687": 591, "csnardi": 591, "645": 591, "docbuild": 591, "failur": 591, "709": 591, "mhpicel": 591, "705": 591, "fromstr": 591, "704": 591, "692": 591, "651": 591, "711": 591, "calculate_velocity_textur": [591, 637, 645], "retreiv": 591, "672": 591, "bucket": [591, 602], "673": 591, "653": [591, 628], "638": 591, "635": 591, "frombuff": 591, "702": 591, "grid_mapp": 591, "707": 591, "706": 591, "goharkai": 591, "infinit": 591, "693": 591, "freemansw1": 591, "683": 591, "674": 591, "668": 591, "contact": 591, "land": 591, "667": [591, 643], "665": 591, "662": 591, "661": 591, "attributeerror": 591, "656": 591, "oserror": 591, "650": 591, "overflowerror": 591, "too": 591, "648": 591, "happier": 591, "647": 591, "640": 591, "639": 591, "634": 591, "620": 591, "itsjm": 591, "kirknorth": 591, "617": 591, "616": 591, "631": 591, "swap": 591, "el": 591, "plot_rai": 591, "618": [591, 607, 609], "_get_angl": 591, "613": 591, "607": 591, "linspac": [591, 592, 611, 614, 632, 643, 651], "603": 591, "627": 591, "623": 591, "596": 591, "595": 591, "632": 591, "630": 591, "625": 591, "tulipasilva": 591, "622": 591, "normbw": 591, "q": 591, "quit": [591, 641], "614": 591, "git": [591, 592, 641, 650, 651, 653], "611": 591, "sinaram": 591, "608": 591, "mrugna": 591, "605": 591, "bld": 591, "kludg": 591, "604": 591, "acknowledg": [591, 641], "602": 591, "qpe": 591, "598": 591, "mustafaalicelik": 591, "580": 591, "577": 591, "576": 591, "575": 591, "562": 591, "azim": 591, "546": 591, "pickl": 591, "unpickl": 591, "543": 591, "vcp": 591, "541": 591, "noaaport": 591, "seper": 591, "540": [591, 643], "521": 591, "459": 591, "590": 591, "bugfix": 591, "l3": 591, "135": 591, "eet": 591, "585": 591, "582": 591, "574": 591, "570": 591, "558": [591, 619, 628], "ctm": 591, "553": 591, "542": 591, "aux_io": 591, "read_gam": 591, "535": 591, "midnight": 591, "523": 591, "importerror": 591, "522": [591, 622, 628], "519": 591, "512": 591, "510": 591, "phase_proc": 591, "zerodivis": 591, "494": 591, "485": 591, "unsupport": 591, "481": 591, "579": 591, "578": 591, "568": 591, "563": 591, "559": 591, "549": 591, "547": 591, "gamicfil": 591, "gamic_hdf5": 591, "536": 591, "524": 591, "513": 591, "balltre": 591, "504": 591, "501": 591, "482": [591, 623, 628], "479": 591, "594": 591, "561": 591, "despeckle_field": 591, "544": 591, "axislabel_flag": 591, "539": 591, "529": 591, "_get_x_z": 591, "491": 591, "486": 591, "586": 591, "583": 591, "572": 591, "fixup": 591, "569": 591, "560": 591, "rainbow_wrl": 591, "555": [591, 630], "recip": [591, 594], "554": 591, "nose_arg": 591, "548": 591, "538": 591, "532": 591, "531": 591, "528": 591, "output_to_geotiff": 591, "514": 591, "511": 591, "507": 591, "506": 591, "498": 591, "libgfortran": 591, "497": 591, "contour": [591, 600, 610, 628], "495": 591, "493": 591, "489": 591, "488": 591, "argentinean": 591, "480": [591, 643], "bdolan44": 591, "dara74k": 591, "gavi": 591, "jacaicedob": 591, "wx": 591, "pfhein": 591, "tamisalex": 591, "469": 591, "468": 591, "467": 591, "luminos": 591, "464": 591, "455": 591, "hclass": 591, "447": 591, "439": 591, "434": 591, "433": 591, "427": 591, "411": 591, "404": 591, "388": 591, "cross_section_ppi": [591, 627], "380": 591, "472": 591, "471": 591, "470": 591, "prf": 591, "460": 591, "get_field_colormap": 591, "446": 591, "444": 591, "example_cfradial_rhi": 591, "441": 591, "417": 591, "struct": 591, "410": 591, "383": 591, "unicod": 591, "382": 591, "gatefit": 591, "372": 591, "465": 591, "refactor": 591, "463": 591, "decor": 591, "416": 591, "392": 591, "radxcovert": 591, "clarifi": 591, "475": 591, "406": 591, "add_field_lik": [591, 606], "397": 591, "391": 591, "376": 591, "370": 591, "corner_to_point": 591, "473": 591, "466": 591, "456": 591, "outstand": 591, "412": 591, "413": 591, "454": 591, "453": 591, "449": 591, "438": 591, "437": 591, "430": [591, 637, 640], "426": 591, "miniconda": [591, 592, 641, 651], "reactiv": 591, "422": 591, "plot_map_one_radar_to_grid": [591, 607, 609], "420": [591, 643], "419": 591, "408": 591, "resilli": 591, "403": 591, "write_mdv_grid": 591, "402": 591, "401": 591, "399": 591, "395": 591, "documen": 591, "add_2d_latlon_axi": 591, "394": 591, "378": 591, "acess": 591, "377": [591, 639, 640], "373": 591, "deeplycloudi": 591, "358": [591, 592, 651], "edge_netcdf": 591, "read_edge_netcdf": 591, "357": [591, 592, 651], "dealias_fourdd": 591, "348": 591, "346": 591, "creation": 591, "330": 591, "326": 591, "308": 591, "361": 591, "refl_filter_flag": 591, "map_gate_to_grid": 591, "334": 591, "region_dealia": 591, "327": 591, "libm": 591, "posix": 591, "319": 591, "unnecessari": 591, "inmemoryfil": 591, "365": 591, "359": [591, 592, 651], "354": 591, "_rsl_interfac": 591, "342": 591, "binstar": 591, "337": 591, "320": 591, "317": 591, "362": 591, "plot_grid_three_panel": 591, "353": 591, "confus": 591, "363": 591, "340": 591, "externalis": 591, "339": 591, "333": 591, "332": 591, "47": [591, 634], "324": 591, "323": 591, "271": 591, "binar": 591, "266": 591, "313": 591, "312": 591, "290": 591, "280": 591, "273": 591, "272": 591, "261": 591, "256": [591, 611, 633], "dealias_phase_unwrap": 591, "radarmapdispl": 591, "249": 591, "discontin": 591, "315": 591, "314": 591, "288": 591, "fault": 591, "276": 591, "dealias_unwrap_phas": 591, "275": 591, "corrupt": 591, "269": [591, 598, 599], "283": 591, "inconsist": 591, "274": 591, "254": 591, "fallback": 591, "245": 591, "316": 591, "ngates_vart": 591, "310": 591, "py3": [591, 653], "nexrad_level2": 591, "nexrad_level3": 591, "309": 591, "1byte": 591, "datatyp": 591, "weathergod": 591, "293": [591, 606, 609], "292": 591, "289": 591, "291": 591, "138": 591, "284": 591, "alter": 591, "267": [591, 613, 628], "latlon": 591, "264": 591, "262": 591, "260": [591, 640], "259": 591, "258": 591, "241": [591, 603, 607], "rebuild": 591, "237": 591, "scientif": [592, 641, 651], "analyz": [592, 641, 648, 651], "repositori": [592, 593, 594, 641, 650, 651, 653], "e25": [592, 641, 651], "publish": [592, 651], "easiest": [592, 641, 651], "januari": [592, 641, 651], "1st": [592, 641, 651], "Then": [592, 594, 641, 650, 651], "termin": [592, 641, 651, 653], "prompt": [592, 641, 651], "mamba": [592, 651], "openradar": [592, 651], "short": [592, 594, 651], "cours": [592, 606, 651], "ev": [592, 651], "pyart_short_cours": [592, 651], "youtub": [592, 651], "watch": [592, 651], "diip": [592, 651], "q3bkzw": [592, 651], "book": [592, 651], "pycodestyl": [592, 651], "pylint": [592, 651], "pep": [592, 651], "0008": [592, 651], "highli": [592, 651], "tast": [592, 651], "brief": [592, 593, 651], "third": [592, 651], "parti": [592, 651], "explain": [592, 651], "_inverse_dist_squar": [592, 651], "_average1d": [592, 651], "seen": [592, 651], "explan": [592, 593, 651], "privat": [592, 651], "rerun": [592, 651], "test_vad": [592, 651], "test_radar": [592, 643, 651], "make_target_radar": [592, 651], "1000": [592, 608, 616, 622, 623, 647, 651], "200": [592, 651], "ones_lik": [592, 651], "z_start": [592, 651], "z_end": [592, 651], "z_count": [592, 651], "vad_height": [592, 651], "vad_spe": [592, 651], "98665725": [592, 651], "94020686": [592, 651], "88107152": [592, 651], "81939374": [592, 651], "75851962": [592, 651], "vad_direct": [592, 651], "84659496": [592, 651], "30240553": [592, 651], "58658589": [592, 651], "81073051": [592, 651], "01353486": [592, 651], "01335138": [592, 651], "06014712": [592, 651], "12039762": [592, 651], "18410404": [592, 651], "24791911": [592, 651], "98663937": [592, 651], "9398407": [592, 651], "87958641": [592, 651], "81587601": [592, 651], "75205693": [592, 651], "assert_almost_equ": [592, 651], "pyarg": [592, 651], "test_cfradi": [592, 651], "cd": [592, 651], "fork": [592, 594, 651], "cartopy_map": [592, 651], "branch_nam": [592, 651], "task": [592, 600, 636, 651], "mind": [592, 606, 651], "simpli": [592, 632, 637, 645, 647, 650, 651, 653], "acronym": [592, 651], "finish": [592, 651, 653], "quotat": [592, 651], "hit": [592, 651], "depth": [592, 641, 649, 651], "acronymn": [592, 651], "gitwash": [592, 651], "development_workflow": [592, 651], "whitespac": [592, 651], "usual": [592, 603, 651], "vim": [592, 651], "fetch": [592, 633, 634, 651], "ff": [592, 651], "sit": [592, 651], "guidanc": [592, 651], "break": [593, 594], "anyth": 594, "creator": 594, "draft": 594, "shortlog": 594, "uplod": 594, "feedstock": 594, "clone": [594, 641, 650], "meta": 594, "yaml": 594, "sha256": 594, "rerend": 594, "smithi": 594, "bot": 594, "sometim": [594, 643], "awar": 594, "semant": 595, "earlier": 595, "ceas": 595, "Such": 595, "proceed": 595, "futurewarn": 595, "runner": [597, 603], "micromamba": [597, 603], "fromnumer": 597, "771": 597, "kth": 597, "__doc__": [597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 632], "sgpcsaprsurcmaci7": [597, 644], "20110520": [597, 644], "095101": [597, 644], "pop": 597, "specific_attenu": [597, 630, 633, 643, 648], "corrected_reflectivity_horizont": [597, 608, 612, 630, 637, 639, 643], "calculate_attenu": 597, "131": [597, 632], "132": [597, 632], "ax3": [597, 598, 626, 632], "133": [597, 630, 632], "suptitl": [597, 598, 625, 634], "plot_attenu": [597, 599], "ipynb": [597, 598, 602, 603, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 637, 638, 639], "ial": 598, "095636": [598, 645], "sonde_fil": 598, "sgpinterpolatedsondec1": 598, "c1": [598, 648], "20110510": 598, "000000": 598, "cdf": 598, "dt": 598, "read_arm_sonde_vap": 598, "exclude_transit": [598, 607, 608, 612, 631], "exclude_invalid": 598, "exclude_outsid": 598, "dealias_data": 598, "sixth": 598, "221": [598, 615], "222": [598, 615], "223": [598, 615], "ax4": 598, "224": [598, 615], "plot_dealia": [598, 599], "examples_correct": 599, "examples_python": 600, "examples_jupyt": 600, "grover": [602, 606, 611, 612, 617, 625, 630, 631, 637, 638, 639], "filepath": [602, 603], "organ": 602, "radarsit": [602, 603], "_v06": 602, "khgx": 602, "aws_nexrad_level2_fil": [602, 603], "khgx20220322_120125_v06": 602, "differential_phas": [602, 615, 648, 649], "spectrum_width": [602, 648, 649], "clutter_filter_power_remov": 602, "relect": 602, "z_": [602, 606, 613], "v_": 602, "noq": 602, "level3": 602, "aws_nexrad_level3_velocity_fil": 602, "hgx_n0u_2022_03_22_12_01_25": 602, "aws_nexrad_level3_reflectivity_fil": 602, "hgx_n0q_2022_03_22_12_01_25": 602, "read_nexrad_level3": 602, "radar_level3_veloc": 602, "radar_level3_reflect": 602, "reflectivity_displai": 602, "velocity_displai": 602, "025": [602, 604], "plot_nexrad_data_aw": [602, 604], "2008": 603, "zachari": 603, "sherman": 603, "zsherman": [603, 653], "tendenc": 603, "gz": 603, "handford": 603, "ca": 603, "khnx": 603, "0203": 603, "v06": 603, "khnx20060724_020338": 603, "nexrad_arch": 603, "231": 603, "clearli": 603, "lucki": 603, "31417": 603, "63111": 603, "plote": [603, 619], "central_latitud": [603, 619, 632, 644], "central_longitud": [603, 619, 632, 644], "downloadwarn": 603, "naturalearth": 603, "amazonaw": 603, "10m_physic": 603, "ne_10m_coastlin": 603, "10m_cultur": 603, "ne_10m_admin_1_states_provinces_lin": 603, "325": [603, 604], "plot_older_nexrad_data_aw": [603, 604], "349": 604, "examples_io": 604, "xsapr": [606, 608, 612], "xsapr_sw_fil": [606, 608, 612], "swx_20120520_0641": [606, 608, 611, 612, 613, 617, 627, 630, 631, 632, 637, 638, 639], "xsapr_se_fil": [606, 608, 612], "sex_20120520_0641": [606, 608, 612], "radar_sw": [606, 608, 612], "radar_s": [606, 608, 612], "southwestern": 606, "gmapper": 606, "radar_sw_mapped_to_radar_s": 606, "disp1": 606, "98": [606, 630, 634, 648], "97": [606, 608, 612, 614, 626, 630, 632, 643], "disp2": 606, "remap": 606, "eyebal": 606, "fortun": 606, "reflectivity_se_radar": 606, "reflectivity_sw_radar": 606, "reflectivity_differ": 606, "reflectivity_bia": 606, "southwest": 606, "xspar": 606, "southeast": 606, "histogram": [606, 645], "neccessarili": 606, "incl_gat": 606, "refl_s": 606, "refl_sw": 606, "values_without_mask": 606, "hist": [606, 637, 645], "histogram2d": 606, "masked_wher": [606, 648], "log_": 606, "plot_compare_two_radars_gatemapp": [606, 609], "123000": 607, "xsarp": [608, 620, 621], "gatefilter_s": [608, 612], "exclude_abov": [608, 612, 637, 645], "gatefilter_sw": [608, 612], "201": [608, 632, 647], "50000": [608, 612, 632, 647], "40000": [608, 612, 619, 647], "57861": [608, 612], "363611": [608, 612], "626": [608, 609], "plot_map_two_radars_to_grid": [608, 609], "537": 609, "examples_map": 609, "helper": 611, "vstack": 611, "plot_color_gradi": 611, "cmap_categori": 611, "cmap_list": 611, "figh": 611, "99": 611, "set_titl": [611, 632], "cmap_nam": 611, "pyart_": 611, "va": 611, "transax": 611, "spine": 611, "ones": 611, "set_axis_off": 611, "perceptu": [611, 614], "light": [611, 633], "diverg": 611, "meaning": 611, "terrain": 611, "spectral_r": 611, "rememb": 611, "front": 611, "022": [611, 628], "plot_choose_a_colormap": [611, 628], "181": 612, "blue": [612, 622, 623], "plot_cross_sect": [612, 628], "379": [612, 628], "colobar": 613, "joe": 613, "brien": 613, "obrienj": 613, "perfect": 613, "coord": 613, "gca": 613, "set_major_loc": 613, "nullloc": 613, "axsb": 613, "ppi_map": 613, "set_tick": 613, "plot_modify_colorbar": [613, 628], "reduc": [614, 650], "promin": 614, "winter": [614, 632], "deemphas": 614, "depict": 614, "ultim": 614, "misinterpret": 614, "lmtomkin": [614, 632], "ncsu": [614, 632], "nexrad_fil": [614, 632], "kbgm": 614, "kbgm20200207_132642_v06": 614, "image_mute_radar": [614, 632], "magma_cmap": 614, "magma_r": [614, 632], "grays_cmap": 614, "gray_r": 614, "nonmuted_cmap": 614, "linearsegmentedcolormap": [614, 632], "from_list": [614, 632], "muted_cmap": 614, "nonmuted_reflect": [614, 632], "muted_reflect": 614, "set_aspect": [614, 632, 633], "642": [614, 628], "plot_nexrad_image_muted_reflect": [614, 628], "katx20130717_195021_v06": [615, 649], "209": [615, 628], "plot_nexrad_multiple_mo": [615, 628], "level2_katx_20130717_1950": 616, "ar2v": 616, "612": [616, 628], "plot_nexrad_reflect": [616, 628], "plot_cross_hair": 617, "931": [617, 628], "plot_ppi_cfradi": [617, 628], "566": [618, 628], "jason": [619, 626], "hemeding": [619, 626], "nsaxsaprppic1": 619, "20140201": 619, "184802": 619, "157": 619, "156": 619, "71": 619, "158": 619, "72": 619, "40km": 619, "plot_line_xi": 619, "20000": [619, 647], "200000": [619, 632], "plot_point": 619, "plot_ppi_with_r": [619, 628], "instrument_nam": [620, 621, 649], "agl": 620, "fac": 620, "nplot": [620, 621, 625], "snum": 620, "hsrhi": [620, 621], "3f": [620, 621], "time_start": 620, "num2dat": 620, "only_use_cftime_datetim": 620, "only_use_python_datetim": 620, "figure_titl": 620, "isoformat": 620, "671": [620, 628], "plot_rhi_cfradi": [620, 628], "766": [621, 628], "differnenti": 622, "cori": [622, 623], "weber": [622, 623], "cweber": [622, 623], "220629": 622, "matplolib": 622, "visabl": 622, "flow": 622, "paramt": 622, "compens": 622, "00015": 622, "veri": [622, 632], "moir": 622, "001": 622, "get_start": [622, 623], "get_end": [622, 623], "blur": 622, "nice": [622, 650], "arbirarli": 622, "gaussian_filt": [622, 623], "ang": [622, 623], "levels_rain": 622, "levels_ic": 622, "contours_ic": 622, "contours_rain": 622, "fmt": [622, 623], "0000": [622, 623], "plot_rhi_contours_differential_reflect": [622, 628], "spyi": 623, "034142": 623, "ramp": 623, "blob": 623, "pyart_budrd18": 623, "coutour": 623, "dot": 623, "major": 623, "axhlin": 623, "axvlin": 623, "00b4ff": 623, "ff6800": 623, "set_ylabel": [623, 634], "cp": 623, "plot_rhi_data_overlai": [623, 628], "110041": 624, "plot_rhi_mdv": [624, 628], "fields_to_plot": 625, "plot_num": 625, "u00b0": 625, "177": [625, 628], "plot_rhi_two_panel": [625, 628], "20110520100000_nexrad_grid": 626, "read_grid": 626, "plot_crosshair": 626, "plot_longitude_slic": 626, "plot_latitude_slic": [626, 647], "851": [626, 628], "plot_three_panel_gridmapdisplai": [626, 628], "225": 627, "xsect": 627, "tight_layout": 627, "982": [627, 628], "plot_xsect": [627, 628], "examples_plot": 628, "maxwel": [630, 631], "site_lon": 630, "73": 630, "site_lat": 630, "latitdu": 630, "pathcollect": 630, "0x7f746a47ef60": 630, "get_field_loc": 630, "350": 630, "818e": 630, "recalculated_diff_phas": [630, 643], "2778": 630, "1806": 630, "unf_dp_phase_shift": [630, 643], "953": 630, "145": 630, "144": 630, "diff_reflect": [630, 643], "20t06": 630, "distance_from_radar": 630, "233": 630, "545": 630, "latitude_of_loc": 630, "longitude_of_loc": 630, "line2d": 630, "0x7f744b4ac470": 630, "958": [630, 635], "plot_column_subset": [630, 635], "compz": 631, "composite_reflect": 631, "composite_displai": 631, "182": [631, 635], "plot_composite_reflect": [631, 635], "classifc": 632, "summer": 632, "ian": 632, "footprint": 632, "yield": 632, "smoother": 632, "rescal": 632, "curv": 632, "plot_convstrat_schem": 632, "pick": 632, "radii": 632, "dilat": 632, "conv_strat_yut": 632, "convsf_mask": 632, "masked_equ": 632, "convsf": 632, "magma_r_cmap": 632, "ref_cmap": 632, "albersequalarea": 632, "convsf_und": 632, "overestim": 632, "convsf_ov": 632, "uncertainti": 632, "underest": 632, "overest": 632, "ktbw": 632, "ktbw20220928_190142_v06": 632, "rasumussen": 632, "2003": 632, "reflecit": 632, "kokx": 632, "kokx20210207_161413_v06": 632, "nonmuted_ref": 632, "masked_invalid": 632, "nonmuted_ref_linear": 632, "mm6": 632, "m3": 632, "snow_rat": 632, "snow_rate_dict": 632, "40500": 632, "034": 632, "ccotd": 632, "rasmussen": 632, "dixon": [632, 641], "vasiloff": 632, "hage": 632, "knight": 632, "vivekanandan": 632, "xu": 632, "nowcast": 632, "accumul": 632, "042": 632, "3c0020": 632, "snuart": 632, "147": [632, 635], "plot_convective_stratiform": [632, 635], "daniel": [633, 634], "wolfensberg": [633, 634], "open_radar_data": [633, 634], "mll2217907250u": 633, "003": 633, "preinterpol": 633, "20220628072500_savevol_cosmo_lookup_temp": 633, "nwp_temp": 633, "calculate_attenuation_zphi": 633, "uncorrected_differential_phas": 633, "pia": 633, "pida": 633, "corrected_reflect": [633, 648], "corrected_differential_reflect": [633, 648], "kdp_maesaka": 633, "specific_differential_phas": [633, 648], "hydroclass_semisupervis": 633, "uncorrected_cross_correlation_ratio": 633, "radar_echo_classif": 633, "lr": 633, "rp": 633, "rn": 633, "vi": 633, "mh": 633, "ih": 633, "hdg": 633, "boundarynorm": 633, "aggreg": 633, "crystal": 633, "rime": 633, "particl": 633, "wet": 633, "graupel": 633, "335": [633, 635], "plot_hydrometeor": [633, 635], "2682": 634, "5272": 634, "7815": 634, "10403": 634, "14259": 634, "18533": 634, "22800": [634, 643], "27060": [634, 643], "31310": 634, "35549": 634, "39777": 634, "43991": 634, "50263": 634, "58621": 634, "71002": 634, "87118": 634, "106740": 634, "125476": 634, "124": 634, "143293": 634, "160000": 634, "mla2119412050u": 634, "zlevel": 634, "5000": [634, 647], "u_allsweep": 634, "v_allsweep": 634, "idx": 634, "radar_1sweep": 634, "vad_brown": 634, "u_avg": 634, "nanmean": 634, "v_avg": 634, "sharei": 634, "set_xlabel": 634, "162": [634, 635], "plot_vad": [634, 635], "examples_retriev": 635, "xd": [637, 638, 639], "open_cfradial1_datatre": [637, 638, 639], "sweep_0": 637, "vel_textur": [637, 645], "velocity_textur": [637, 645, 648], "At": [637, 645], "velocity_dealias": [637, 645], "plot_dealias_xradar": [637, 640], "101": 638, "10_000": 638, "50_000": 638, "452": [638, 640], "plot_grid_xradar": [638, 640], "plot_xradar": [639, 640], "examples_xradar": 640, "conceptu": 641, "understand": 641, "someth": 641, "demonstr": 641, "maik": 641, "heistermann": 641, "bam": 641, "kellei": 641, "peura": 641, "pfaff": 641, "wolff": 641, "emerg": 641, "bull": 641, "amer": 641, "soc": 641, "117": 641, "128": 641, "00240": 641, "ii": [641, 649], "abl": [641, 650], "sophist": 641, "tutori": 641, "materi": 641, "erad": 641, "asr": 641, "asm": 641, "Or": 641, "pyart_env": [641, 644, 647, 653], "wish": 641, "unreleas": 641, "charg": 641, "resourc": [641, 650], "lassen": 641, "radtec": 641, "rsl_path": [641, 650], "usr": 641, "wrapper": 641, "fastest": 641, "cbc": 641, "glpk": 641, "coincbc": [641, 650, 653], "coin_install_dir": [641, 650, 653], "ask": [641, 653], "hypothet": 643, "idea": [643, 645], "dict_kei": [643, 648], "rain_rate_a": [643, 648], "volume_numb": 643, "platform_typ": 643, "instrument_typ": 643, "primary_axi": 643, "make_empty_ppi_radar": 643, "59416667": 643, "isn": 643, "240": 643, "660": 643, "720": 643, "780": 643, "960": 643, "1260": 643, "1560": 643, "1620": 643, "1680": 643, "1740": 643, "1860": 643, "1920": 643, "1980": 643, "2040": 643, "2100": 643, "2160": 643, "2220": 643, "2280": 643, "2340": 643, "2400": 643, "2460": 643, "2520": 643, "2580": 643, "2640": 643, "2700": 643, "2760": 643, "2820": 643, "2880": 643, "2940": 643, "3060": 643, "3120": 643, "3180": 643, "3240": 643, "3300": 643, "3360": 643, "3420": 643, "3480": 643, "3540": 643, "3600": 643, "3660": 643, "3720": 643, "3780": 643, "3840": 643, "3900": 643, "3960": 643, "4020": 643, "4080": 643, "4140": 643, "4200": 643, "4260": 643, "4320": 643, "4380": 643, "4440": 643, "4500": 643, "4560": 643, "4620": 643, "4680": 643, "4740": 643, "4800": 643, "4860": 643, "4920": 643, "4980": 643, "5040": 643, "5100": 643, "5160": 643, "5220": 643, "5280": 643, "5340": 643, "5400": 643, "5460": 643, "5520": 643, "5580": 643, "5640": 643, "5700": 643, "5760": 643, "5820": 643, "5880": 643, "5940": 643, "6000": [643, 647], "6060": 643, "6120": 643, "6180": 643, "6240": 643, "6300": 643, "6360": 643, "6420": 643, "6480": 643, "6540": 643, "6600": 643, "6660": 643, "6720": 643, "6780": 643, "6840": 643, "6900": 643, "6960": 643, "7020": 643, "7080": 643, "7140": 643, "7200": [643, 649], "7260": 643, "7320": 643, "7380": 643, "7440": 643, "7560": 643, "7620": 643, "7680": 643, "7740": 643, "7800": 643, "7860": 643, "7920": 643, "7980": 643, "8040": 643, "8100": 643, "8160": 643, "8220": 643, "8280": 643, "8340": 643, "8400": 643, "8460": 643, "8520": 643, "8580": 643, "8640": 643, "8700": 643, "8760": 643, "8820": 643, "8880": 643, "8940": 643, "9000": [643, 647], "9060": 643, "9120": 643, "9180": 643, "9240": 643, "9300": 643, "9360": 643, "9420": 643, "9480": 643, "9540": 643, "9600": 643, "9660": 643, "9720": 643, "9780": 643, "9840": 643, "9900": 643, "9960": 643, "10020": 643, "10080": 643, "10140": 643, "10200": 643, "10260": 643, "10320": 643, "10380": 643, "10440": 643, "10500": 643, "10560": 643, "10620": 643, "10680": 643, "10740": 643, "10800": 643, "10860": 643, "10920": 643, "10980": 643, "11040": 643, "11100": 643, "11160": 643, "11220": 643, "11280": 643, "11340": 643, "11400": 643, "11460": 643, "11520": 643, "11580": 643, "11640": 643, "11700": 643, "11760": 643, "11820": 643, "11880": 643, "11940": 643, "12000": [643, 647], "12060": 643, "12120": 643, "12180": 643, "12240": 643, "12300": 643, "12360": 643, "12420": 643, "12480": 643, "12540": 643, "12600": 643, "12660": 643, "12720": 643, "12780": 643, "12840": 643, "12900": 643, "12960": 643, "13020": 643, "13080": 643, "13140": 643, "13200": 643, "13260": 643, "13320": 643, "13380": 643, "13440": 643, "13500": 643, "13560": 643, "13620": 643, "13680": 643, "13740": 643, "13800": 643, "13860": 643, "13920": 643, "13980": 643, "14040": 643, "14100": 643, "14160": 643, "14220": 643, "14280": 643, "14340": 643, "14400": 643, "14460": 643, "14520": 643, "14580": 643, "14640": 643, "14700": 643, "14760": 643, "14820": 643, "14880": 643, "14940": 643, "15000": [643, 647], "15060": 643, "15120": 643, "15180": 643, "15240": 643, "15300": 643, "15360": 643, "15420": 643, "15480": 643, "15540": 643, "15600": 643, "15660": 643, "15720": 643, "15780": 643, "15840": 643, "15900": 643, "15960": 643, "16020": 643, "16080": 643, "16140": 643, "16200": 643, "16260": 643, "16320": 643, "16380": 643, "16440": 643, "16500": 643, "16560": 643, "16620": 643, "16680": 643, "16740": 643, "16800": 643, "16860": 643, "16920": 643, "16980": 643, "17040": 643, "17100": 643, "17160": 643, "17220": 643, "17280": 643, "17340": 643, "17400": 643, "17460": 643, "17520": 643, "17580": 643, "17640": 643, "17700": 643, "17760": 643, "17820": 643, "17880": 643, "17940": 643, "18000": [643, 647], "18060": 643, "18120": 643, "18180": 643, "18240": 643, "18300": 643, "18360": 643, "18420": 643, "18480": 643, "18540": 643, "18600": 643, "18660": 643, "18720": 643, "18780": 643, "18840": 643, "18900": 643, "18960": 643, "19020": 643, "19080": 643, "19140": 643, "19200": 643, "19260": 643, "19320": 643, "19380": 643, "19440": 643, "19500": 643, "19560": 643, "19620": 643, "19680": 643, "19740": 643, "19800": 643, "19860": 643, "19920": 643, "19980": 643, "20040": 643, "20100": 643, "20160": 643, "20220": 643, "20280": 643, "20340": 643, "20400": 643, "20460": 643, "20520": 643, "20580": 643, "20640": 643, "20700": 643, "20760": 643, "20820": 643, "20880": 643, "20940": 643, "21000": [643, 647], "21060": 643, "21120": 643, "21180": 643, "21240": 643, "21300": 643, "21360": 643, "21420": 643, "21480": 643, "21540": 643, "21600": 643, "21660": 643, "21720": 643, "21780": 643, "21840": 643, "21900": 643, "21960": 643, "22020": 643, "22080": 643, "22140": 643, "22200": 643, "22260": 643, "22320": 643, "22380": 643, "22440": 643, "22500": 643, "22560": 643, "22620": 643, "22680": 643, "22740": 643, "22860": 643, "22920": 643, "22980": 643, "23040": 643, "23100": 643, "23160": 643, "23220": 643, "23280": 643, "23340": 643, "23400": 643, "23460": 643, "23520": 643, "23580": 643, "23640": 643, "23700": 643, "23760": 643, "23820": 643, "23880": 643, "23940": 643, "24000": [643, 647], "24060": 643, "24120": 643, "24180": 643, "24240": 643, "24300": 643, "24360": 643, "24420": 643, "24480": 643, "24540": 643, "24600": 643, "24660": 643, "24720": 643, "24780": 643, "24840": 643, "24900": 643, "24960": 643, "25020": 643, "25080": 643, "25140": 643, "25200": 643, "25260": 643, "25320": 643, "25380": 643, "25440": 643, "25500": 643, "25560": 643, "25620": 643, "25680": 643, "25740": 643, "25800": 643, "25860": 643, "25920": 643, "25980": 643, "26040": 643, "26100": 643, "26160": 643, "26220": 643, "26280": 643, "26340": 643, "26400": 643, "26460": 643, "26520": 643, "26580": 643, "26640": 643, "26700": 643, "26760": 643, "26820": 643, "26880": 643, "26940": 643, "27000": [643, 647], "27120": 643, "27180": 643, "27240": 643, "27300": 643, "27360": 643, "27420": 643, "27480": 643, "27540": 643, "27600": 643, "27660": 643, "27720": 643, "27780": 643, "27840": 643, "27900": 643, "27960": 643, "28020": 643, "28080": 643, "28140": 643, "28200": 643, "28260": 643, "28320": 643, "28380": 643, "28440": 643, "28500": 643, "28560": 643, "28620": 643, "28680": 643, "28740": 643, "28800": 643, "28860": 643, "28920": 643, "28980": 643, "29040": 643, "29100": 643, "29160": 643, "29220": 643, "29280": 643, "29340": 643, "29400": 643, "29460": 643, "29520": 643, "29580": 643, "29640": 643, "29700": 643, "29760": 643, "29820": 643, "29880": 643, "29940": 643, "30000": [643, 647], "30060": 643, "30120": 643, "30180": 643, "30240": 643, "30300": 643, "30360": 643, "30420": 643, "30480": 643, "30540": 643, "30600": 643, "30660": 643, "30720": 643, "30780": 643, "30840": 643, "30900": 643, "30960": 643, "31020": 643, "31080": 643, "31140": 643, "31200": 643, "31260": 643, "31320": 643, "31380": 643, "31440": 643, "31500": 643, "31560": 643, "31620": 643, "31680": 643, "31740": 643, "31800": 643, "31860": 643, "31920": 643, "31980": 643, "32040": 643, "32100": 643, "32160": 643, "32220": 643, "32280": 643, "32340": 643, "32400": 643, "32460": 643, "32520": 643, "32580": 643, "32640": 643, "32700": 643, "32760": 643, "32820": 643, "32880": 643, "32940": 643, "33000": [643, 647], "33060": 643, "33120": 643, "33180": 643, "33240": 643, "33300": 643, "33360": 643, "33420": 643, "33480": 643, "33540": 643, "33600": 643, "33660": 643, "33720": 643, "33780": 643, "33840": 643, "33900": 643, "33960": 643, "34020": 643, "34080": 643, "34140": 643, "34200": 643, "34260": 643, "34320": 643, "34380": 643, "34440": 643, "34500": 643, "34560": 643, "34620": 643, "34680": 643, "34740": 643, "34800": 643, "34860": 643, "34920": 643, "34980": 643, "35040": 643, "35100": 643, "35160": 643, "35220": 643, "35280": 643, "35340": 643, "35400": 643, "35460": 643, "35520": 643, "35580": 643, "35640": 643, "35700": 643, "35760": 643, "35820": 643, "35880": 643, "35940": 643, "36000": [643, 647], "36060": 643, "36120": 643, "36180": 643, "36240": 643, "36300": 643, "36360": 643, "36420": 643, "36480": 643, "36540": 643, "36600": 643, "36660": 643, "36720": 643, "36780": 643, "36840": 643, "36900": 643, "36960": 643, "37020": 643, "37080": 643, "37140": 643, "37200": 643, "37260": 643, "37320": 643, "37380": 643, "37440": 643, "37500": 643, "37560": 643, "37620": 643, "37680": 643, "37740": 643, "37800": 643, "37860": 643, "37920": 643, "37980": 643, "38040": 643, "38100": 643, "38160": 643, "38220": 643, "38280": 643, "38340": 643, "38400": 643, "38460": 643, "38520": 643, "38580": 643, "38640": 643, "38700": 643, "38760": 643, "38820": 643, "38880": 643, "38940": 643, "39000": [643, 647], "39060": 643, "39120": 643, "39180": 643, "39240": 643, "39300": 643, "39360": 643, "39420": 643, "39480": 643, "39540": 643, "39600": 643, "39660": 643, "39720": 643, "39780": 643, "39840": 643, "39900": 643, "39960": 643, "59416776": 643, "59416886": 643, "59489769": 643, "59489879": 643, "5948999": 643, "59415662": 643, "59414657": 643, "5874659": 643, "58745576": 643, "58744563": 643, "59414621": 643, "59412575": 643, "5805231": 643, "58050246": 643, "58048182": 643, "59419881": 643, "59423095": 643, "61560159": 643, "61563401": 643, "61566644": 643, "59418877": 643, "59421087": 643, "6089062": 643, "6089285": 643, "60895079": 643, "59417836": 643, "59419005": 643, "60196382": 643, "60197561": 643, "60198741": 643, "get_metadata": 643, "ref_dict": 643, "reflecitivity_horizont": 643, "21875": 643, "34375": 643, "0078125": 643, "2109375": 643, "1171875": 643, "59375": 643, "421875": 643, "5625": 643, "7109375": 643, "609375": 643, "5078125": 643, "3828125": 643, "6875": 643, "328125": 643, "3203125": 643, "859375": 643, "6484375": 643, "8515625": 643, "9375": [643, 649], "0234375": 643, "6328125": 643, "2890625": 643, "546875": 643, "578125": 643, "6796875": 643, "ref_gt_0": 644, "mask_dict": 644, "reflectivity_mask": 644, "coolwarm": 644, "sherm": [644, 647], "782": [644, 647], "matplotlibdeprecationwarn": [644, 647], "position": [644, 647], "829": [644, 647], "write_cfradi": 644, "new_radar": 644, "2pi": 645, "wave": 645, "3pi": 645, "erron": 645, "phenomena": [645, 649], "maximium": 645, "unambi": 645, "preprocess": 645, "thankfulli": [645, 647], "surround": [645, 647], "presenc": 645, "524973": 645, "elimin": [645, 647], "vleociti": 645, "realist": 645, "characterist": 647, "100000": 647, "gates_to_grid": 647, "99000": 647, "98000": 647, "97000": 647, "96000": 647, "95000": 647, "94000": 647, "93000": 647, "92000": 647, "91000": 647, "90000": 647, "89000": 647, "88000": 647, "87000": 647, "86000": 647, "85000": 647, "84000": 647, "83000": 647, "82000": 647, "81000": 647, "80000": 647, "79000": 647, "78000": 647, "77000": 647, "76000": 647, "75000": 647, "74000": 647, "73000": 647, "72000": 647, "71000": 647, "70000": 647, "69000": 647, "68000": 647, "67000": 647, "66000": 647, "65000": 647, "64000": 647, "63000": 647, "62000": 647, "61000": 647, "59000": 647, "58000": 647, "57000": 647, "56000": 647, "55000": 647, "54000": 647, "53000": 647, "52000": 647, "51000": 647, "49000": 647, "48000": 647, "47000": 647, "46000": 647, "45000": 647, "44000": 647, "43000": 647, "42000": 647, "41000": 647, "38000": 647, "37000": 647, "35000": 647, "34000": 647, "32000": 647, "31000": 647, "29000": 647, "28000": 647, "26000": 647, "23000": 647, "22000": 647, "19000": 647, "16000": 647, "14000": 647, "13000": 647, "8000": 647, "longitudn": 647, "latitudn": 647, "suffer": 647, "artifici": 647, "feather": 647, "grid_bett": 647, "1750": 647, "sgpxsaprcmacsuri5": 648, "20171004": 648, "203018": 648, "total_pow": 648, "xsapr_clutt": 648, "sounding_temperatur": 648, "signal_to_noise_ratio": 648, "unfolded_differential_phas": 648, "corrected_differential_phas": 648, "filtered_corrected_differential_phas": 648, "corrected_specific_diff_phas": 648, "filtered_corrected_specific_diff_phas": 648, "path_integrated_attenu": 648, "specific_differential_attenu": 648, "path_integrated_differential_attenu": 648, "nonhydrometeor": 648, "exclude_equ": 648, "tell": 648, "refl_arrai": 648, "reflectivity_w_mask": 648, "iter_slic": [648, 649], "9344453454202706": 648, "620691732853737": 648, "3756584054113996": 648, "597935968662154": 648, "696735014111216": 648, "061894569912447": 648, "721673265240488": 648, "086695918593689": 648, "33930700509078": 648, "599363169483158": 648, "836875745223637": 648, "051601529570966": 648, "22435547210836": 648, "378109469982695": 648, "553820234067336": 648, "648943841665002": 648, "837593740986444": 648, "049614721040282": 648, "331202567459613": 648, "585432697375357": 648, "87002341270722": 648, "993012637722325": 648, "061966001642219": 648, "122799449619672": 648, "861035552720102": 648, "74608994279257": 648, "148801770281325": 648, "70860719727862": 648, "989513966551444": 648, "188644935344827": 648, "89301878240611": 648, "172644371021923": 648, "79879842243138": 648, "912806090219976": 648, "766281467013889": 648, "920522471877334": 648, "898600907318164": 648, "971026055481874": 648, "110503947133682": 648, "094456418731509": 648, "0822160050675675": 648, "036430544969512": 648, "259332430219459": 648, "2438254054588604": 648, "473482666015625": 648, "574283685503023": 648, "866719139946832": 648, "771468742643597": 648, "beam_azimuth_angl": 649, "azimuth_angle_from_true_north": 649, "radial_azimuth_coordin": 649, "beam_elevation_angl": 649, "elevation_angle_from_horizontal_plan": 649, "radial_elevation_coordin": 649, "1832": 649, "log_differential_reflectivity_hv": 649, "875": 649, "differential_phase_hv": 649, "equivalent_reflectivity_factor": 649, "cross_correlation_ratio_hv": 649, "correlation_ratio": 649, "meters_per_second": 649, "doppler_spectrum_width": 649, "radial_velocity_of_scatterers_away_from_instru": 649, "target_fixed_angl": 649, "degrees_north": 649, "degrees_east": 649, "projection_range_coordin": 649, "range_to_measurement_volum": 649, "radial_range_coordin": 649, "spacing_is_const": 649, "meters_to_center_of_first_g": 649, "2125": 649, "meters_between_g": 649, "250": 649, "s20": 649, "unitless": 649, "coplan": 649, "vertical_point": 649, "idl": 649, "azimuth_surveil": 649, "elevation_surveil": 649, "sunscan": 649, "manual_ppi": 649, "manual_rhi": 649, "17t19": 649, "21z": 649, "time_in_seconds_since_volume_start": 649, "calendar": 649, "gregorian": 649, "katx": 649, "original_contain": 649, "vcp_pattern": 649, "7470703": 649, "7196045": 649, "6893921": 649, "511719": 649, "get_slic": 649, "sweep_1": 649, "52734375": 649, "indici": 649, "slice_indic": 649, "9066728410400056": 649, "478547577741713": 649, "587792083929423": 649, "871031288639269": 649, "971692217963673": 649, "830616390843327": 649, "108188248095756": 649, "483419908190385": 649, "88976917057903": 649, "852766685681688": 649, "410455582269897": 649, "66444787446138": 649, "997862391449566": 649, "172098402018502": 649, "489752513534416": 649, "712565619531706": 649, "commonli": 649, "9x": 650, "10x": 650, "11x": 650, "But": 650, "bash": 650, "pythonpath": 650, "pth": 650, "build_ext": 650, "segfault": 650, "Theres": 650, "proper": 650, "reinstal": 650, "remedi": 650, "fno": 650, "protector": 650, "d_fortify_sourc": 650, "cflag": 650, "makefil": 650, "troubl": 650, "define_macro": 650, "macro": 650, "extra_compile_arg": 650, "m32": 650, "extra_link_arg": 650, "m64": 650, "proj_lib": 650, "plai": 650, "xx": 650, "usernam": 650, "xxx": 650, "mpl_toolkit": 650, "conflict": 653, "exit": 653, "led": 653, "manag": 653, "activ": 653, "deactiv": 653, "enviro": 653, "scratch": 653, "spyder": 653, "enhanc": 653, "though": 653, "yourusernam": 653, "youranacondadir": 653, "gitter": 653, "im": 653}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [126, 1, 0, "-", "correct"], [168, 1, 0, "-", "exceptions"], [169, 1, 0, "-", "filters"], [202, 1, 0, "-", "graph"], [359, 1, 0, "-", "io"], [380, 1, 0, "-", "lazydict"], [404, 1, 0, "-", "map"], [415, 1, 0, "-", "retrieve"], [448, 1, 0, "-", "testing"], [549, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_geographic"], [122, 0, 1, "", "cartesian_to_geographic_aeqd"], [123, 0, 1, "", "cartesian_vectors_to_geographic"], [124, 0, 1, "", "geographic_to_cartesian"], [125, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[127, 2, 1, "", "GateFilter"], [155, 0, 1, "", "calculate_attenuation"], [156, 0, 1, "", "calculate_attenuation_philinear"], [157, 0, 1, "", "calculate_attenuation_zphi"], [158, 0, 1, "", "correct_bias"], [159, 0, 1, "", "correct_noise_rhohv"], [160, 0, 1, "", "dealias_fourdd"], [161, 0, 1, "", "dealias_region_based"], [162, 0, 1, "", "dealias_unwrap_phase"], [163, 0, 1, "", "despeckle_field"], [164, 0, 1, "", "find_objects"], [165, 0, 1, "", "moment_based_gate_filter"], [166, 0, 1, "", "phase_proc_lp"], [167, 0, 1, "", "phase_proc_lp_gf"]], "pyart.correct.GateFilter": [[128, 3, 1, "", "copy"], [129, 3, 1, "", "exclude_above"], [130, 3, 1, "", "exclude_all"], [131, 3, 1, "", "exclude_below"], [132, 3, 1, "", "exclude_equal"], [133, 3, 1, "", "exclude_gates"], [134, 3, 1, "", "exclude_inside"], [135, 3, 1, "", "exclude_invalid"], [136, 3, 1, "", "exclude_masked"], [137, 3, 1, "", "exclude_none"], [138, 3, 1, "", "exclude_not_equal"], [139, 3, 1, "", "exclude_outside"], [140, 3, 1, "", "exclude_transition"], [141, 4, 1, "", "gate_excluded"], [142, 4, 1, "", "gate_included"], [143, 3, 1, "", "include_above"], [144, 3, 1, "", "include_all"], [145, 3, 1, "", "include_below"], [146, 3, 1, "", "include_equal"], [147, 3, 1, "", "include_gates"], [148, 3, 1, "", "include_inside"], [149, 3, 1, "", "include_none"], [150, 3, 1, "", "include_not_equal"], [151, 3, 1, "", "include_not_masked"], [152, 3, 1, "", "include_not_transition"], [153, 3, 1, "", "include_outside"], [154, 3, 1, "", "include_valid"]], "pyart.filters": [[170, 2, 1, "", "GateFilter"], [198, 0, 1, "", "iso0_based_gate_filter"], [199, 0, 1, "", "moment_and_texture_based_gate_filter"], [200, 0, 1, "", "moment_based_gate_filter"], [201, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[171, 3, 1, "", "copy"], [172, 3, 1, "", "exclude_above"], [173, 3, 1, "", "exclude_all"], [174, 3, 1, "", "exclude_below"], [175, 3, 1, "", "exclude_equal"], [176, 3, 1, "", "exclude_gates"], [177, 3, 1, "", "exclude_inside"], [178, 3, 1, "", "exclude_invalid"], [179, 3, 1, "", "exclude_masked"], [180, 3, 1, "", "exclude_none"], [181, 3, 1, "", "exclude_not_equal"], [182, 3, 1, "", "exclude_outside"], [183, 3, 1, "", "exclude_transition"], [184, 4, 1, "", "gate_excluded"], [185, 4, 1, "", "gate_included"], [186, 3, 1, "", "include_above"], [187, 3, 1, "", "include_all"], [188, 3, 1, "", "include_below"], [189, 3, 1, "", "include_equal"], [190, 3, 1, "", "include_gates"], [191, 3, 1, "", "include_inside"], [192, 3, 1, "", "include_none"], [193, 3, 1, "", "include_not_equal"], [194, 3, 1, "", "include_not_masked"], [195, 3, 1, "", "include_not_transition"], [196, 3, 1, "", "include_outside"], [197, 3, 1, "", "include_valid"]], "pyart.graph": [[203, 2, 1, "", "AirborneRadarDisplay"], [233, 2, 1, "", "GridMapDisplay"], [249, 2, 1, "", "GridMapDisplayBasemap"], [263, 2, 1, "", "RadarDisplay"], [292, 2, 1, "", "RadarMapDisplay"], [325, 2, 1, "", "RadarMapDisplayBasemap"], [358, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[204, 3, 1, "", "generate_az_rhi_title"], [205, 3, 1, "", "generate_filename"], [206, 3, 1, "", "generate_ray_title"], [207, 3, 1, "", "generate_title"], [208, 3, 1, "", "generate_vpt_title"], [209, 3, 1, "", "label_xaxis_r"], [210, 3, 1, "", "label_xaxis_rays"], [211, 3, 1, "", "label_xaxis_time"], [212, 3, 1, "", "label_xaxis_x"], [213, 3, 1, "", "label_yaxis_field"], [214, 3, 1, "", "label_yaxis_y"], [215, 3, 1, "", "label_yaxis_z"], [216, 3, 1, "", "plot"], [217, 3, 1, "", "plot_azimuth_to_rhi"], [218, 3, 1, "", "plot_colorbar"], [219, 3, 1, "", "plot_cr_raster"], [220, 3, 1, "", "plot_cross_hair"], [221, 3, 1, "", "plot_grid_lines"], [222, 3, 1, "", "plot_label"], [223, 3, 1, "", "plot_labels"], [224, 3, 1, "", "plot_ppi"], [225, 3, 1, "", "plot_range_ring"], [226, 3, 1, "", "plot_range_rings"], [227, 3, 1, "", "plot_ray"], [228, 3, 1, "", "plot_rhi"], [229, 3, 1, "", "plot_sweep_grid"], [230, 3, 1, "", "plot_vpt"], [231, 3, 1, "", "set_aspect_ratio"], [232, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[234, 3, 1, "", "cartopy_coastlines"], [235, 3, 1, "", "cartopy_political_boundaries"], [236, 3, 1, "", "cartopy_states"], [237, 3, 1, "", "generate_filename"], [238, 3, 1, "", "generate_grid_title"], [239, 3, 1, "", "generate_latitudinal_level_title"], [240, 3, 1, "", "generate_longitudinal_level_title"], [241, 3, 1, "", "plot_colorbar"], [242, 3, 1, "", "plot_cross_section"], [243, 3, 1, "", "plot_crosshairs"], [244, 3, 1, "", "plot_grid"], [245, 3, 1, "", "plot_latitude_slice"], [246, 3, 1, "", "plot_latitudinal_level"], [247, 3, 1, "", "plot_longitude_slice"], [248, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[250, 3, 1, "", "generate_filename"], [251, 3, 1, "", "generate_grid_title"], [252, 3, 1, "", "generate_latitudinal_level_title"], [253, 3, 1, "", "generate_longitudinal_level_title"], [254, 3, 1, "", "get_basemap"], [255, 3, 1, "", "plot_basemap"], [256, 3, 1, "", "plot_colorbar"], [257, 3, 1, "", "plot_crosshairs"], [258, 3, 1, "", "plot_grid"], [259, 3, 1, "", "plot_latitude_slice"], [260, 3, 1, "", "plot_latitudinal_level"], [261, 3, 1, "", "plot_longitude_slice"], [262, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[264, 3, 1, "", "generate_az_rhi_title"], [265, 3, 1, "", "generate_filename"], [266, 3, 1, "", "generate_ray_title"], [267, 3, 1, "", "generate_title"], [268, 3, 1, "", "generate_vpt_title"], [269, 3, 1, "", "label_xaxis_r"], [270, 3, 1, "", "label_xaxis_rays"], [271, 3, 1, "", "label_xaxis_time"], [272, 3, 1, "", "label_xaxis_x"], [273, 3, 1, "", "label_yaxis_field"], [274, 3, 1, "", "label_yaxis_y"], [275, 3, 1, "", "label_yaxis_z"], [276, 3, 1, "", "plot"], [277, 3, 1, "", "plot_azimuth_to_rhi"], [278, 3, 1, "", "plot_colorbar"], [279, 3, 1, "", "plot_cr_raster"], [280, 3, 1, "", "plot_cross_hair"], [281, 3, 1, "", "plot_grid_lines"], [282, 3, 1, "", "plot_label"], [283, 3, 1, "", "plot_labels"], [284, 3, 1, "", "plot_ppi"], [285, 3, 1, "", "plot_range_ring"], [286, 3, 1, "", "plot_range_rings"], [287, 3, 1, "", "plot_ray"], [288, 3, 1, "", "plot_rhi"], [289, 3, 1, "", "plot_vpt"], [290, 3, 1, "", "set_aspect_ratio"], [291, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[293, 3, 1, "", "generate_az_rhi_title"], [294, 3, 1, "", "generate_filename"], [295, 3, 1, "", "generate_ray_title"], [296, 3, 1, "", "generate_title"], [297, 3, 1, "", "generate_vpt_title"], [298, 3, 1, "", "label_xaxis_r"], [299, 3, 1, "", "label_xaxis_rays"], [300, 3, 1, "", "label_xaxis_time"], [301, 3, 1, "", "label_xaxis_x"], [302, 3, 1, "", "label_yaxis_field"], [303, 3, 1, "", "label_yaxis_y"], [304, 3, 1, "", "label_yaxis_z"], [305, 3, 1, "", "plot"], [306, 3, 1, "", "plot_azimuth_to_rhi"], [307, 3, 1, "", "plot_colorbar"], [308, 3, 1, "", "plot_cr_raster"], [309, 3, 1, "", "plot_cross_hair"], [310, 3, 1, "", "plot_grid_lines"], [311, 3, 1, "", "plot_label"], [312, 3, 1, "", "plot_labels"], [313, 3, 1, "", "plot_line_geo"], [314, 3, 1, "", "plot_line_xy"], [315, 3, 1, "", "plot_point"], [316, 3, 1, "", "plot_ppi"], [317, 3, 1, "", "plot_ppi_map"], [318, 3, 1, "", "plot_range_ring"], [319, 3, 1, "", "plot_range_rings"], [320, 3, 1, "", "plot_ray"], [321, 3, 1, "", "plot_rhi"], [322, 3, 1, "", "plot_vpt"], [323, 3, 1, "", "set_aspect_ratio"], [324, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[326, 3, 1, "", "generate_az_rhi_title"], [327, 3, 1, "", "generate_filename"], [328, 3, 1, "", "generate_ray_title"], [329, 3, 1, "", "generate_title"], [330, 3, 1, "", "generate_vpt_title"], [331, 3, 1, "", "label_xaxis_r"], [332, 3, 1, "", "label_xaxis_rays"], [333, 3, 1, "", "label_xaxis_time"], [334, 3, 1, "", "label_xaxis_x"], [335, 3, 1, "", "label_yaxis_field"], [336, 3, 1, "", "label_yaxis_y"], [337, 3, 1, "", "label_yaxis_z"], [338, 3, 1, "", "plot"], [339, 3, 1, "", "plot_azimuth_to_rhi"], [340, 3, 1, "", "plot_colorbar"], [341, 3, 1, "", "plot_cr_raster"], [342, 3, 1, "", "plot_cross_hair"], [343, 3, 1, "", "plot_grid_lines"], [344, 3, 1, "", "plot_label"], [345, 3, 1, "", "plot_labels"], [346, 3, 1, "", "plot_line_geo"], [347, 3, 1, "", "plot_line_xy"], [348, 3, 1, "", "plot_point"], [349, 3, 1, "", "plot_ppi"], [350, 3, 1, "", "plot_ppi_map"], [351, 3, 1, "", "plot_range_ring"], [352, 3, 1, "", "plot_range_rings"], [353, 3, 1, "", "plot_ray"], [354, 3, 1, "", "plot_rhi"], [355, 3, 1, "", "plot_vpt"], [356, 3, 1, "", "set_aspect_ratio"], [357, 3, 1, "", "set_limits"]], "pyart.io": [[360, 0, 1, "", "prepare_for_read"], [361, 0, 1, "", "read"], [362, 0, 1, "", "read_arm_sonde"], [363, 0, 1, "", "read_arm_sonde_vap"], [364, 0, 1, "", "read_cfradial"], [365, 0, 1, "", "read_chl"], [366, 0, 1, "", "read_grid"], [367, 0, 1, "", "read_grid_mdv"], [368, 0, 1, "", "read_mdv"], [369, 0, 1, "", "read_nexrad_archive"], [370, 0, 1, "", "read_nexrad_cdm"], [371, 0, 1, "", "read_nexrad_level3"], [372, 0, 1, "", "read_rsl"], [373, 0, 1, "", "read_sigmet"], [374, 0, 1, "", "read_uf"], [375, 0, 1, "", "write_cfradial"], [376, 0, 1, "", "write_grid"], [377, 0, 1, "", "write_grid_geotiff"], [378, 0, 1, "", "write_grid_mdv"], [379, 0, 1, "", "write_uf"]], "pyart.lazydict": [[381, 2, 1, "", "LazyLoadDict"], [394, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[382, 3, 1, "", "clear"], [383, 3, 1, "", "copy"], [384, 3, 1, "", "get"], [385, 3, 1, "", "has_key"], [386, 3, 1, "", "items"], [387, 3, 1, "", "keys"], [388, 3, 1, "", "pop"], [389, 3, 1, "", "popitem"], [390, 3, 1, "", "set_lazy"], [391, 3, 1, "", "setdefault"], [392, 3, 1, "", "update"], [393, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[395, 3, 1, "", "clear"], [396, 3, 1, "", "get"], [397, 3, 1, "", "items"], [398, 3, 1, "", "keys"], [399, 3, 1, "", "pop"], [400, 3, 1, "", "popitem"], [401, 3, 1, "", "setdefault"], [402, 3, 1, "", "update"], [403, 3, 1, "", "values"]], "pyart.map": [[405, 2, 1, "", "GateMapper"], [409, 0, 1, "", "example_roi_func_constant"], [410, 0, 1, "", "example_roi_func_dist"], [411, 0, 1, "", "example_roi_func_dist_beam"], [412, 0, 1, "", "grid_from_radars"], [413, 0, 1, "", "map_gates_to_grid"], [414, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[406, 4, 1, "", "distance_tolerance"], [407, 3, 1, "", "mapped_radar"], [408, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[416, 0, 1, "", "ZtoR"], [417, 0, 1, "", "calculate_snr_from_reflectivity"], [418, 0, 1, "", "calculate_velocity_texture"], [419, 0, 1, "", "composite_reflectivity"], [420, 0, 1, "", "compute_cdr"], [421, 0, 1, "", "compute_l"], [422, 0, 1, "", "compute_noisedBZ"], [423, 0, 1, "", "compute_snr"], [424, 0, 1, "", "conv_strat_yuter"], [425, 0, 1, "", "dealias_spectra"], [426, 0, 1, "", "est_rain_rate_a"], [427, 0, 1, "", "est_rain_rate_hydro"], [428, 0, 1, "", "est_rain_rate_kdp"], [429, 0, 1, "", "est_rain_rate_z"], [430, 0, 1, "", "est_rain_rate_za"], [431, 0, 1, "", "est_rain_rate_zkdp"], [432, 0, 1, "", "est_rain_rate_zpoly"], [433, 0, 1, "", "fetch_radar_time_profile"], [434, 0, 1, "", "get_freq_band"], [435, 0, 1, "", "grid_displacement_pc"], [436, 0, 1, "", "grid_shift"], [437, 0, 1, "", "hydroclass_semisupervised"], [438, 0, 1, "", "kdp_maesaka"], [439, 0, 1, "", "kdp_schneebeli"], [440, 0, 1, "", "kdp_vulpiani"], [441, 0, 1, "", "map_profile_to_gates"], [442, 0, 1, "", "quasi_vertical_profile"], [443, 0, 1, "", "spectra_moments"], [444, 0, 1, "", "steiner_conv_strat"], [445, 0, 1, "", "texture_of_complex_phase"], [446, 0, 1, "", "vad_browning"], [447, 0, 1, "", "vad_michelson"]], "pyart.testing": [[449, 2, 1, "", "Grid"], [459, 2, 1, "", "InTemporaryDirectory"], [461, 2, 1, "", "Radar"], [490, 2, 1, "", "RadarSpectra"], [535, 0, 1, "", "get_metadata"], [536, 0, 1, "", "get_test_data"], [537, 0, 1, "", "make_empty_grid"], [538, 0, 1, "", "make_empty_ppi_radar"], [539, 0, 1, "", "make_empty_rhi_radar"], [540, 0, 1, "", "make_empty_spectra_radar"], [541, 0, 1, "", "make_normal_storm"], [542, 0, 1, "", "make_single_ray_radar"], [543, 0, 1, "", "make_storm_grid"], [544, 0, 1, "", "make_target_grid"], [545, 0, 1, "", "make_target_radar"], [546, 0, 1, "", "make_target_spectra_radar"], [547, 0, 1, "", "make_velocity_aliased_radar"], [548, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[450, 3, 1, "", "add_field"], [451, 3, 1, "", "get_point_longitude_latitude"], [452, 3, 1, "", "get_projparams"], [453, 3, 1, "", "init_point_altitude"], [454, 3, 1, "", "init_point_longitude_latitude"], [455, 3, 1, "", "init_point_x_y_z"], [456, 4, 1, "", "projection_proj"], [457, 3, 1, "", "to_xarray"], [458, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[460, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[462, 3, 1, "", "add_field"], [463, 3, 1, "", "add_field_like"], [464, 3, 1, "", "add_filter"], [465, 3, 1, "", "check_field_exists"], [466, 3, 1, "", "extract_sweeps"], [467, 3, 1, "", "get_azimuth"], [468, 3, 1, "", "get_elevation"], [469, 3, 1, "", "get_end"], [470, 3, 1, "", "get_field"], [471, 3, 1, "", "get_gate_area"], [472, 3, 1, "", "get_gate_lat_lon_alt"], [473, 3, 1, "", "get_gate_x_y_z"], [474, 3, 1, "", "get_nyquist_vel"], [475, 3, 1, "", "get_slice"], [476, 3, 1, "", "get_start"], [477, 3, 1, "", "get_start_end"], [478, 3, 1, "", "info"], [479, 3, 1, "", "init_gate_altitude"], [480, 3, 1, "", "init_gate_longitude_latitude"], [481, 3, 1, "", "init_gate_x_y_z"], [482, 3, 1, "", "init_rays_per_sweep"], [483, 3, 1, "", "iter_azimuth"], [484, 3, 1, "", "iter_elevation"], [485, 3, 1, "", "iter_end"], [486, 3, 1, "", "iter_field"], [487, 3, 1, "", "iter_slice"], [488, 3, 1, "", "iter_start"], [489, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[491, 4, 1, "", "altitude"], [492, 4, 1, "", "azimuth"], [493, 3, 1, "", "check_field_exists"], [494, 4, 1, "", "elevation"], [495, 4, 1, "", "fields"], [496, 4, 1, "", "fixed_angle"], [497, 4, 1, "", "gate_altitude"], [498, 4, 1, "", "gate_latitude"], [499, 4, 1, "", "gate_longitude"], [500, 4, 1, "", "gate_x"], [501, 4, 1, "", "gate_y"], [502, 4, 1, "", "gate_z"], [503, 3, 1, "", "get_end"], [504, 3, 1, "", "get_slice"], [505, 3, 1, "", "get_start"], [506, 3, 1, "", "get_start_end"], [507, 3, 1, "", "init_gate_altitude"], [508, 3, 1, "", "init_gate_longitude_latitude"], [509, 3, 1, "", "init_gate_x_y_z"], [510, 3, 1, "", "init_rays_per_sweep"], [511, 3, 1, "", "iter_azimuth"], [512, 3, 1, "", "iter_elevation"], [513, 3, 1, "", "iter_end"], [514, 3, 1, "", "iter_field"], [515, 3, 1, "", "iter_slice"], [516, 3, 1, "", "iter_start"], [517, 3, 1, "", "iter_start_end"], [518, 4, 1, "", "latitude"], [519, 4, 1, "", "longitude"], [520, 4, 1, "", "ngates"], [521, 4, 1, "", "npulses_max"], [522, 4, 1, "", "nrays"], [523, 4, 1, "", "nsweeps"], [524, 4, 1, "", "projection"], [525, 4, 1, "", "range"], [526, 4, 1, "", "rays_per_sweep"], [527, 4, 1, "", "scan_type"], [528, 4, 1, "", "sweep_end_ray_index"], [529, 4, 1, "", "sweep_mode"], [530, 4, 1, "", "sweep_number"], [531, 4, 1, "", "sweep_start_ray_index"], [532, 4, 1, "", "time"], [533, 3, 1, "", "to_vpt"], [534, 4, 1, "", "velocity_bins"]], "pyart.util": [[550, 0, 1, "", "angular_mean"], [551, 0, 1, "", "angular_mean_deg"], [552, 0, 1, "", "angular_std"], [553, 0, 1, "", "angular_std_deg"], [554, 0, 1, "", "angular_texture_2d"], [555, 0, 1, "", "column_vertical_profile"], [556, 0, 1, "", "cross_section_ppi"], [557, 0, 1, "", "cross_section_rhi"], [558, 0, 1, "", "datetime_from_dataset"], [559, 0, 1, "", "datetime_from_grid"], [560, 0, 1, "", "datetime_from_radar"], [561, 0, 1, "", "datetimes_from_dataset"], [562, 0, 1, "", "datetimes_from_radar"], [563, 0, 1, "", "estimate_noise_hs74"], [564, 0, 1, "", "for_azimuth"], [565, 0, 1, "", "get_column_rays"], [566, 0, 1, "", "get_field_location"], [567, 0, 1, "", "image_mute_radar"], [568, 0, 1, "", "interval_mean"], [569, 0, 1, "", "interval_std"], [570, 0, 1, "", "is_vpt"], [571, 0, 1, "", "join_radar"], [572, 0, 1, "", "mean_of_two_angles"], [573, 0, 1, "", "mean_of_two_angles_deg"], [574, 0, 1, "", "rolling_window"], [575, 0, 1, "", "simulated_vel_from_profile"], [576, 0, 1, "", "sphere_distance"], [577, 0, 1, "", "subset_radar"], [578, 0, 1, "", "texture"], [579, 0, 1, "", "texture_along_ray"], [580, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 584, 586, 587, 591], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 445], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 535], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 607, 608, 612, 638, 647], "add_field": [32, 46, 450, 462], "get_point_longitude_latitud": [33, 451], "get_projparam": [34, 452], "init_point_altitud": [35, 453], "init_point_longitude_latitud": [36, 454], "init_point_x_y_z": [37, 455], "projection_proj": [38, 456], "to_xarrai": [39, 457], "write": [40, 458], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 585, 586, 592, 594, 606, 607, 608, 630, 641, 644, 649, 651], "add_field_lik": [47, 463], "add_filt": [48, 464], "check_field_exist": [49, 77, 465, 493], "extract_sweep": [50, 466], "get_azimuth": [51, 467], "get_elev": [52, 468], "get_end": [53, 87, 469, 503], "get_field": [54, 470], "get_gate_area": [55, 471], "get_gate_lat_lon_alt": [56, 472], "get_gate_x_y_z": [57, 473], "get_nyquist_vel": [58, 474], "get_slic": [59, 88, 475, 504], "get_start": [60, 89, 476, 505], "get_start_end": [61, 90, 477, 506], "info": [62, 478], "init_gate_altitud": [63, 91, 479, 507], "init_gate_longitude_latitud": [64, 92, 480, 508], "init_gate_x_y_z": [65, 93, 481, 509], "init_rays_per_sweep": [66, 94, 482, 510], "iter_azimuth": [67, 95, 483, 511], "iter_elev": [68, 96, 484, 512], "iter_end": [69, 97, 485, 513], "iter_field": [70, 98, 486, 514], "iter_slic": [71, 99, 487, 515], "iter_start": [72, 100, 488, 516], "iter_start_end": [73, 101, 489, 517], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534], "altitud": [75, 491], "azimuth": [76, 492], "elev": [78, 494], "field": [79, 495, 644], "fixed_angl": [80, 496], "gate_altitud": [81, 497], "gate_latitud": [82, 498], "gate_longitud": [83, 499], "gate_x": [84, 500], "gate_i": [85, 501], "gate_z": [86, 502], "latitud": [102, 518, 603], "longitud": [103, 519, 603], "ngate": [104, 520], "npulses_max": [105, 521], "nrai": [106, 522], "nsweep": [107, 523], "project": [108, 524], "rang": [109, 525], "rays_per_sweep": [110, 526], "scan_typ": [111, 527], "sweep_end_ray_index": [112, 528], "sweep_mod": [113, 529], "sweep_numb": [114, 530], "sweep_start_ray_index": [115, 531], "time": [116, 532, 586, 599, 604, 609, 628, 635, 640], "to_vpt": [117, 533, 580], "velocity_bin": [118, 534], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_geograph": 121, "cartesian_to_geographic_aeqd": 122, "cartesian_vectors_to_geograph": 123, "geographic_to_cartesian": 124, "geographic_to_cartesian_aeqd": 125, "correct": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 596, 597, 600], "gatefilt": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 648], "copi": [128, 171, 383], "exclude_abov": [129, 172], "exclude_al": [130, 173], "exclude_below": [131, 174], "exclude_equ": [132, 175], "exclude_g": [133, 176], "exclude_insid": [134, 177], "exclude_invalid": [135, 178], "exclude_mask": [136, 179], "exclude_non": [137, 180], "exclude_not_equ": [138, 181], "exclude_outsid": [139, 182], "exclude_transit": [140, 183], "gate_exclud": [141, 184], "gate_includ": [142, 185], "include_abov": [143, 186], "include_al": [144, 187], "include_below": [145, 188], "include_equ": [146, 189], "include_g": [147, 190], "include_insid": [148, 191], "include_non": [149, 192], "include_not_equ": [150, 193], "include_not_mask": [151, 194], "include_not_transit": [152, 195], "include_outsid": [153, 196], "include_valid": [154, 197], "calculate_attenu": 155, "calculate_attenuation_philinear": 156, "calculate_attenuation_zphi": 157, "correct_bia": 158, "correct_noise_rhohv": 159, "dealias_fourdd": 160, "dealias_region_bas": 161, "dealias_unwrap_phas": 162, "despeckle_field": 163, "find_object": 164, "moment_based_gate_filt": [165, 200], "phase_proc_lp": 166, "phase_proc_lp_gf": 167, "except": 168, "filter": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "iso0_based_gate_filt": 198, "moment_and_texture_based_gate_filt": 199, "temp_based_gate_filt": 201, "graph": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "airborneradardisplai": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "generate_az_rhi_titl": [204, 264, 293, 326], "generate_filenam": [205, 237, 250, 265, 294, 327], "generate_ray_titl": [206, 266, 295, 328], "generate_titl": [207, 267, 296, 329], "generate_vpt_titl": [208, 268, 297, 330], "label_xaxis_r": [209, 269, 298, 331], "label_xaxis_rai": [210, 270, 299, 332], "label_xaxis_tim": [211, 271, 300, 333], "label_xaxis_x": [212, 272, 301, 334], "label_yaxis_field": [213, 273, 302, 335], "label_yaxis_i": [214, 274, 303, 336], "label_yaxis_z": [215, 275, 304, 337], "plot": [216, 276, 305, 338, 585, 586, 587, 589, 600, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 631, 633, 634, 639], "plot_azimuth_to_rhi": [217, 277, 306, 339], "plot_colorbar": [218, 241, 256, 278, 307, 340], "plot_cr_rast": [219, 279, 308, 341], "plot_cross_hair": [220, 280, 309, 342], "plot_grid_lin": [221, 281, 310, 343], "plot_label": [222, 223, 282, 283, 311, 312, 344, 345], "plot_ppi": [224, 284, 316, 349], "plot_range_r": [225, 226, 285, 286, 318, 319, 351, 352], "plot_rai": [227, 287, 320, 353], "plot_rhi": [228, 288, 321, 354], "plot_sweep_grid": 229, "plot_vpt": [230, 289, 322, 355], "set_aspect_ratio": [231, 290, 323, 356], "set_limit": [232, 291, 324, 357], "gridmapdisplai": [233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 626], "cartopy_coastlin": 234, "cartopy_political_boundari": 235, "cartopy_st": 236, "generate_grid_titl": [238, 251], "generate_latitudinal_level_titl": [239, 252], "generate_longitudinal_level_titl": [240, 253], "plot_cross_sect": 242, "plot_crosshair": [243, 257], "plot_grid": [244, 258], "plot_latitude_slic": [245, 259], "plot_latitudinal_level": [246, 260], "plot_longitude_slic": [247, 261], "plot_longitudinal_level": [248, 262], "gridmapdisplaybasemap": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "get_basemap": 254, "plot_basemap": 255, "radardisplai": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "radarmapdisplai": [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 587], "plot_line_geo": [313, 346], "plot_line_xi": [314, 347], "plot_point": [315, 348], "plot_ppi_map": [317, 350, 587], "radarmapdisplaybasemap": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "plot_convstrat_schem": 358, "io": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379], "prepare_for_read": 360, "read": [361, 585, 586, 587, 602, 603], "read_arm_sond": 362, "read_arm_sonde_vap": 363, "read_cfradi": 364, "read_chl": 365, "read_grid": 366, "read_grid_mdv": 367, "read_mdv": 368, "read_nexrad_arch": 369, "read_nexrad_cdm": 370, "read_nexrad_level3": 371, "read_rsl": 372, "read_sigmet": 373, "read_uf": 374, "write_cfradi": 375, "write_grid": 376, "write_grid_geotiff": 377, "write_grid_mdv": 378, "write_uf": 379, "lazydict": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "lazyloaddict": [381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "clear": [382, 395], "get": [384, 396, 641], "has_kei": 385, "item": [386, 397], "kei": [387, 398, 586], "pop": [388, 399], "popitem": [389, 400], "set_lazi": 390, "setdefault": [391, 401], "updat": [392, 402, 594], "valu": [393, 403], "mutablemap": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "map": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 600, 605, 607, 608, 619, 647], "gatemapp": [405, 406, 407, 408, 606], "distance_toler": 406, "mapped_radar": 407, "time_toler": 408, "example_roi_func_const": 409, "example_roi_func_dist": 410, "example_roi_func_dist_beam": 411, "grid_from_radar": 412, "map_gates_to_grid": 413, "map_to_grid": 414, "retriev": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 600, 629], "ztor": 416, "calculate_snr_from_reflect": 417, "calculate_velocity_textur": 418, "composite_reflect": 419, "compute_cdr": 420, "compute_l": 421, "compute_noisedbz": 422, "compute_snr": 423, "conv_strat_yut": 424, "dealias_spectra": 425, "est_rain_rate_a": 426, "est_rain_rate_hydro": 427, "est_rain_rate_kdp": 428, "est_rain_rate_z": 429, "est_rain_rate_za": 430, "est_rain_rate_zkdp": 431, "est_rain_rate_zpoli": 432, "fetch_radar_time_profil": 433, "get_freq_band": 434, "grid_displacement_pc": 435, "grid_shift": 436, "hydroclass_semisupervis": 437, "kdp_maesaka": 438, "kdp_schneeb": 439, "kdp_vulpiani": 440, "map_profile_to_g": 441, "quasi_vertical_profil": 442, "spectra_mo": 443, "paramet": [443, 587], "steiner_conv_strat": 444, "vad_brown": 446, "vad_michelson": 447, "test": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 592, 651], "intemporarydirectori": [459, 460], "cleanup": 460, "get_test_data": 536, "make_empty_grid": 537, "make_empty_ppi_radar": 538, "make_empty_rhi_radar": 539, "make_empty_spectra_radar": 540, "make_normal_storm": 541, "make_single_ray_radar": 542, "make_storm_grid": 543, "make_target_grid": 544, "make_target_radar": 545, "make_target_spectra_radar": 546, "make_velocity_aliased_radar": 547, "make_velocity_aliased_rhi_radar": 548, "util": [549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580], "angular_mean": 550, "angular_mean_deg": 551, "angular_std": 552, "angular_std_deg": 553, "angular_texture_2d": 554, "column_vertical_profil": 555, "cross_section_ppi": 556, "cross_section_rhi": 557, "datetime_from_dataset": 558, "datetime_from_grid": 559, "datetime_from_radar": 560, "datetimes_from_dataset": 561, "datetimes_from_radar": 562, "estimate_noise_hs74": 563, "for_azimuth": 564, "assumpt": [564, 576], "get_column_rai": 565, "get_field_loc": 566, "image_mute_radar": 567, "interval_mean": 568, "interval_std": 569, "is_vpt": 570, "join_radar": 571, "mean_of_two_angl": 572, "mean_of_two_angles_deg": 573, "rolling_window": 574, "simulated_vel_from_profil": 575, "sphere_dist": 576, "subset_radar": 577, "textur": 578, "texture_along_rai": 579, "api": 581, "refer": [581, 632], "manual": 581, "blog": [582, 590], "blend": 583, "observ": 583, "from": [583, 585, 602, 612, 615, 617, 618, 620, 621, 622, 623, 624, 627, 650], "tracer": 583, "us": [583, 585, 586, 587, 598, 606, 626, 637, 638, 639], "py": [583, 584, 585, 591, 592, 593, 594, 637, 638, 639, 641, 648, 649, 650, 651], "art": [583, 584, 585, 591, 592, 593, 594, 637, 638, 639, 641, 648, 649, 650, 651], "import": [583, 585, 586, 587, 589, 592, 651], "goe": 583, "data": [583, 585, 586, 587, 589, 602, 603, 638, 647, 648], "access": [583, 585, 587, 589], "csapr": 583, "load": [583, 586], "lma": 583, "flash": 583, "june": 583, "17th": 583, "case": 583, "17": 583, "rhi": [583, 620, 621, 622, 623, 624, 625], "activ": 584, "develop": [584, 595], "submit": 584, "pull": 584, "request": 584, "pr": [584, 591], "first": 584, "you": 584, "have": 584, "done": 584, "so": 584, "alreadi": 584, "need": 584, "fork": 584, "github": [584, 592, 594, 651], "repositori": 584, "second": 584, "termin": 584, "clone": 584, "your": [584, 611, 613], "remot": 584, "git": [584, 594], "command": 584, "third": 584, "creat": [584, 585, 586, 594, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 643, 653], "doc": [584, 588], "conda": [584, 594], "environ": [584, 653], "fourth": 584, "we": 584, "instal": [584, 592, 641, 650, 651], "trmm": 584, "rsl": 584, "librari": 584, "lastli": 584, "python": [584, 592, 641, 651], "script": 584, "within": 584, "okai": 584, "should": 584, "now": 584, "readi": 584, "make": [584, 594], "chang": 584, "sourc": [584, 650], "code": [584, 592, 651], "1": [584, 591], "new": [584, 588], "branch": 584, "our": [584, 586, 587, 589], "2": [584, 591, 602, 603], "push": 584, "To": 584, "let": 584, "commit": 584, "after": 584, "thi": [584, 591], "i": [584, 641], "what": [584, 641], "look": 584, "like": 584, "hope": 584, "help": [584, 641], "hail": 585, "storm": 585, "visual": [585, 586, 589], "panda": 585, "motiv": [585, 589, 590], "nexrad": [585, 587, 589, 602, 603, 615, 616], "fsspec": 585, "setup": [585, 589, 592, 593, 651], "filesystem": 585, "bucket": 585, "file": [585, 592, 615, 617, 618, 620, 621, 622, 623, 624, 643, 644, 651], "dataset": 585, "nexradaw": 585, "configur": 585, "search": 585, "download": [585, 589], "spc": 585, "report": 585, "function": [585, 589], "loop": 585, "through": 585, "helper": 585, "scale": 585, "bar": 585, "an": [585, 614, 622, 623, 653], "anim": 585, "imag": [585, 589, 614], "view": [585, 586], "final": [585, 586], "conclus": [585, 587, 589, 590], "work": [586, 632], "vertic": 586, "point": [586, 630], "xarrai": 586, "hvplot": 586, "overview": 586, "ka": 586, "band": 586, "arm": [586, 592, 641, 651], "zenith": 586, "kazr": 586, "instrument": 586, "clean": 586, "up": [586, 587, 653], "bit": 586, "analysi": 586, "subset": 586, "reflect": [586, 597, 614, 616, 622, 623, 631], "veloc": [586, 598, 637, 645], "quick": 586, "extract": [586, 630], "date": [586, 589], "inform": [586, 653], "label": 586, "holoview": 586, "try": [586, 587], "raster": 586, "takeawai": 586, "fix": [587, 591, 603], "weird": 587, "pattern": 587, "when": 587, "level": [587, 602, 603], "3": [587, 591, 602, 626], "The": [587, 589, 590, 592, 641, 649, 651], "recreat": 587, "issu": [587, 603], "set": [587, 653], "matplotlib": 587, "style": [587, 592, 651], "without": 587, "alpha": 587, "add": [587, 589], "argument": 587, "dig": 587, "investig": [587, 589], "pcolormesh": 587, "edgecolor": 587, "modifi": [587, 613], "default": 587, "solut": [587, 590], "sever": 589, "weather": 589, "wisconsin": 589, "outbreak": 589, "focus": 589, "southern": 589, "reproduc": 589, "event": 589, "road": 589, "interst": 589, "featur": [589, 591], "avail": 589, "run": 589, "post": 590, "templat": 590, "problem": 590, "changelog": 591, "16": 591, "enhanc": 591, "made": 591, "bug": 591, "document": [591, 594], "improv": 591, "other": 591, "merg": 591, "contributor": [591, 592, 651], "releas": [591, 594], "0": 591, "mainten": 591, "upkeep": 591, "15": 591, "v1": 591, "14": 591, "6": 591, "5": 591, "4": 591, "13": 591, "12": 591, "7": 591, "11": 591, "8": 591, "deprec": 591, "10": 591, "9": 591, "picasso": 591, "": [592, 595, 651], "guid": [592, 595, 651, 652], "toolkit": [592, 641, 651], "link": [592, 651], "cite": [592, 641, 651], "resourc": [592, 651], "continu": 593, "integr": 593, "how": [594, 632], "tag": 594, "prepar": 594, "note": 594, "trigger": 594, "pypi": 594, "upload": 594, "packag": 594, "forg": 594, "announc": 594, "open": 594, "forum": 594, "version": 595, "moment": [596, 600, 615], "exampl": [596, 600, 601, 605, 610, 629, 632, 636], "attenu": 597, "dealia": [598, 637], "doppler": 598, "region": 598, "base": 598, "algorithm": [598, 632], "comput": [599, 604, 609, 628, 635, 640], "galleri": [600, 642], "input": [600, 601], "output": [600, 601], "xradar": [600, 636, 637, 638, 639], "aw": 602, "cloud": 602, "older": 603, "compar": 606, "two": [606, 608, 625], "singl": 607, "cartesian": [607, 608, 647], "choos": 611, "colormap": 611, "cross": [612, 627], "section": [612, 627], "colorbar": 613, "mute": 614, "multipl": [615, 620, 621], "ppi": [617, 618, 619, 627, 639], "cfradial": 617, "mdv": [618, 622, 623, 624], "cartopi": 619, "panel": [620, 621, 625, 626], "cf": [620, 621], "radial": [620, 621, 637], "contour": [622, 623], "line": [622, 623], "volum": 627, "column": 630, "abov": 630, "calcul": [631, 633, 634], "composit": 631, "convect": 632, "stratiform": 632, "classif": [632, 633], "summari": 632, "recommend": 632, "best": 632, "practic": 632, "hydrometeor": 633, "vad": 634, "profil": 634, "can": 641, "do": 641, "short": 641, "cours": 641, "depend": [641, 650, 653], "option": [641, 650, 653], "contribut": 641, "notebook": 642, "basic": 643, "ingest": 643, "netcdf": 643, "manipul": 644, "save": 644, "object": [644, 649], "dealias": 645, "mask": 648, "With": 648, "index": 649, "build": 650, "requir": 650, "obtain": 650, "latest": 650, "frequent": 650, "ask": 650, "question": 650, "user": 652, "anaconda": 653, "channel": 653, "ad": 653, "path": 653, "more": 653}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[126, "pyart-correct"]], "pyart.correct.GateFilter": [[127, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[128, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[129, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[130, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[131, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[132, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[133, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[134, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[135, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[136, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[137, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[138, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[139, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[140, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[141, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[142, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[143, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[144, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[145, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[146, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[147, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[148, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[149, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[150, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[151, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[152, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[153, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[154, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[155, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[156, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[157, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[158, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[159, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[160, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[161, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[162, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[163, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[164, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[165, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[166, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[167, "pyart-correct-phase-proc-lp-gf"]], "pyart.exceptions": [[168, "pyart-exceptions"]], "pyart.filters": [[169, "pyart-filters"]], "pyart.filters.GateFilter": [[170, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[171, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[172, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[173, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[174, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[175, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[176, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[177, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[178, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[179, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[180, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[181, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[182, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[183, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[184, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[185, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[186, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[187, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[188, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[189, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[190, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[191, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[192, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[193, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[194, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[195, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[196, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[197, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[198, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[199, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[200, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[201, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[202, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[203, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[204, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[205, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[206, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[207, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[208, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[209, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[210, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[211, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[212, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[213, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[214, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[215, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[216, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[217, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[218, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[219, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[220, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[221, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[222, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[223, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[224, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[225, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[226, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[227, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[228, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[229, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[230, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[231, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[232, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[233, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[234, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[235, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[236, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[237, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[238, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[239, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[240, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[241, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[242, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[243, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[244, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[245, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[246, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[247, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[248, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[249, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[250, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[251, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[252, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[253, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[254, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[255, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[256, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[257, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[258, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[259, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[260, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[261, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[262, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[263, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[264, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[265, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[266, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[267, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[268, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[269, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[270, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[271, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[272, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[273, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[274, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[275, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[276, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[277, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[278, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[279, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[280, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[281, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[282, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[283, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[284, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[285, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[286, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[287, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[288, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[289, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[290, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[291, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[292, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[293, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[294, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[295, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[296, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[297, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[298, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[299, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[300, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[301, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[302, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[303, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[304, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[305, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[306, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[307, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[308, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[309, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[310, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[311, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[312, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[313, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[314, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[315, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[316, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[317, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[318, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[319, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[320, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[321, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[322, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[323, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[324, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[325, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[326, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[327, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[328, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[329, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[330, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[331, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[332, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[333, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[334, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[335, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[336, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[337, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[338, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[339, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[340, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[341, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[342, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[343, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[344, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[345, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[346, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[347, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[348, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[349, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[350, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[351, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[352, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[353, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[354, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[355, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[356, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[357, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[358, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[359, "pyart-io"]], "pyart.io.prepare_for_read": [[360, "pyart-io-prepare-for-read"]], "pyart.io.read": [[361, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[362, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[363, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[364, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[365, "pyart-io-read-chl"]], "pyart.io.read_grid": [[366, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[367, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[368, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[369, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[370, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[371, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[372, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[373, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[374, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[375, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[376, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[377, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[378, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[379, "pyart-io-write-uf"]], "pyart.lazydict": [[380, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[381, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[382, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[383, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[384, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[385, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[386, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[387, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[388, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[389, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[390, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[391, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[392, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[393, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[394, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[395, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[396, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[397, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[398, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[399, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[400, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[401, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[402, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[403, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[404, "pyart-map"]], "pyart.map.GateMapper": [[405, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[406, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[407, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[408, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[409, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[410, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[411, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[412, "pyart-map-grid-from-radars"]], "pyart.map.map_gates_to_grid": [[413, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[414, "pyart-map-map-to-grid"]], "pyart.retrieve": [[415, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[416, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[417, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[418, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[419, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[420, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_l": [[421, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[422, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_snr": [[423, "pyart-retrieve-compute-snr"]], "pyart.retrieve.conv_strat_yuter": [[424, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.dealias_spectra": [[425, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[426, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[427, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[428, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[429, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[430, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[431, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[432, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.fetch_radar_time_profile": [[433, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[434, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[435, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[436, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[437, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_maesaka": [[438, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[439, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[440, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[441, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[442, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[443, "pyart-retrieve-spectra-moments"]], "Parameter": [[443, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[444, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[445, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[446, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[447, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[448, "pyart-testing"]], "pyart.testing.Grid": [[449, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[450, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[451, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[452, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[453, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[454, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[455, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[456, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[457, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[458, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[459, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[460, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[461, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[462, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[463, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[464, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[465, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[466, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[467, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[468, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[469, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[470, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[471, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[472, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[473, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[474, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[475, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[476, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[477, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[478, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[479, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[480, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[481, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[482, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[483, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[484, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[485, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[486, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[487, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[488, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[489, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[490, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[491, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[492, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[493, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[494, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[495, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[496, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[497, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[498, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[499, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[500, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[501, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[502, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[503, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[504, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[505, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[506, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[507, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[508, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[509, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[510, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[511, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[512, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[513, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[514, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[515, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[516, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[517, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[518, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[519, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[520, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[521, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[522, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[523, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[524, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[525, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[526, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[527, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[528, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[529, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[530, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[531, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[532, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[533, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[534, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[535, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[536, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[537, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[538, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[539, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[540, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_normal_storm": [[541, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[542, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[543, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[544, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[545, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[546, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[547, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[548, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[549, "pyart-util"]], "pyart.util.angular_mean": [[550, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[551, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[552, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[553, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[554, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[555, "pyart-util-column-vertical-profile"]], "pyart.util.cross_section_ppi": [[556, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[557, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[558, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[559, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[560, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[561, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[562, "pyart-util-datetimes-from-radar"]], "pyart.util.estimate_noise_hs74": [[563, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[564, "pyart-util-for-azimuth"]], "Assumptions": [[564, "assumptions"], [576, "assumptions"]], "pyart.util.get_column_rays": [[565, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[566, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[567, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[568, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[569, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[570, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[571, "pyart-util-join-radar"]], "pyart.util.mean_of_two_angles": [[572, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[573, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[574, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[575, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[576, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[577, "pyart-util-subset-radar"]], "pyart.util.texture": [[578, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[579, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[580, "pyart-util-to-vpt"]], "API Reference Manual": [[581, "api-reference-manual"]], "Blog": [[582, "blog"]], "Blending Observations from TRACER using Py-ART": [[583, "blending-observations-from-tracer-using-py-art"]], "Imports": [[583, "imports"], [585, "imports"], [586, "imports"], [587, "imports"], [589, "imports"]], "GOES data access": [[583, "goes-data-access"]], "CSAPR data access": [[583, "csapr-data-access"]], "Load LMA Flash data": [[583, "load-lma-flash-data"]], "June 17th case": [[583, "june-17th-case"]], "June 17 RHI": [[583, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[584, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[584, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[584, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[584, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[584, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[584, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[584, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[584, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[584, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[584, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[584, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[584, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[585, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[585, "motivation"], [589, "motivation"], [590, "motivation"]], "NEXRAD Data Access - fsspec": [[585, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[585, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[585, "read-in-a-file"]], "Visualize the Dataset": [[585, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[585, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[585, "configure-the-search"]], "Search and Download the Data": [[585, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[585, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[585, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[585, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[585, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[585, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[585, "create-an-animation-of-the-images"]], "View the Final Animation": [[585, "view-the-final-animation"]], "Conclusion": [[585, "conclusion"], [587, "conclusion"], [589, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[586, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[586, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[586, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[586, "plot-using-pyart"]], "Load in the data using pyart": [[586, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[586, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[586, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[586, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[586, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[586, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[586, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[586, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[586, "create-our-holoviews-plots"]], "View the Final Visualization": [[586, "view-the-final-visualization"]], "Try Using Rasterize": [[586, "try-using-rasterize"]], "Key Takeaways": [[586, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[587, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[587, "the-data"]], "Data Access": [[587, "data-access"]], "Recreate the Issue Using PyART": [[587, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[587, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[587, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[587, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[587, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[587, "add-in-the-alpha-argument"]], "Dig into the Issue": [[587, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[587, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[587, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[587, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[587, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[587, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[587, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[587, "fixing-the-issue-in-pyart"]], "New Docs": [[588, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[589, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[589, "the-outbreak"]], "Focusing on Southern Wisconsin": [[589, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[589, "reproducing-event-images"]], "Visualizing the Event": [[589, "visualizing-the-event"]], "Access the Data": [[589, "access-the-data"]], "Download the Road Data": [[589, "download-the-road-data"]], "Add the Interstate Date as a feature": [[589, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[589, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[589, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[589, "run-our-plotting-functions"]], "Blog Post Template": [[590, "blog-post-template"]], "The Problem": [[590, "the-problem"]], "The Solution": [[590, "the-solution"]], "Conclusions": [[590, "conclusions"]], "Changelog": [[591, "changelog"]], "Py-ART 1.16.1": [[591, "py-art-1-16-1"]], "Enhancements made": [[591, "enhancements-made"], [591, "id1"], [591, "id16"], [591, "id22"], [591, "id33"], [591, "id36"], [591, "id41"], [591, "id46"], [591, "id49"], [591, "id53"], [591, "id66"], [591, "id76"], [591, "id86"], [591, "id92"], [591, "id98"], [591, "id106"], [591, "id119"], [591, "id123"], [591, "id127"], [591, "id133"], [591, "id139"], [591, "id148"], [591, "id155"], [591, "id162"], [591, "id168"], [591, "id175"], [591, "id181"], [591, "id187"]], "Bugs fixed": [[591, "bugs-fixed"], [591, "id2"], [591, "id9"], [591, "id13"], [591, "id17"], [591, "id23"], [591, "id28"], [591, "id37"], [591, "id42"], [591, "id47"], [591, "id54"], [591, "id59"], [591, "id63"], [591, "id67"], [591, "id72"], [591, "id77"], [591, "id82"], [591, "id87"], [591, "id93"], [591, "id99"], [591, "id103"], [591, "id107"], [591, "id111"], [591, "id116"], [591, "id120"], [591, "id124"], [591, "id128"], [591, "id134"], [591, "id140"], [591, "id144"], [591, "id149"], [591, "id156"], [591, "id163"], [591, "id169"], [591, "id176"], [591, "id182"]], "Documentation improvements": [[591, "documentation-improvements"], [591, "id3"], [591, "id30"], [591, "id38"], [591, "id43"], [591, "id56"], [591, "id69"], [591, "id79"], [591, "id89"], [591, "id95"], [591, "id113"], [591, "id125"], [591, "id130"], [591, "id136"], [591, "id141"], [591, "id145"], [591, "id151"], [591, "id158"], [591, "id165"], [591, "id171"], [591, "id178"], [591, "id184"]], "Other merged PRs": [[591, "other-merged-prs"], [591, "id4"], [591, "id7"], [591, "id11"], [591, "id14"], [591, "id19"], [591, "id24"], [591, "id31"], [591, "id34"], [591, "id39"], [591, "id44"], [591, "id51"], [591, "id57"], [591, "id61"], [591, "id64"], [591, "id70"], [591, "id74"], [591, "id80"], [591, "id84"], [591, "id90"], [591, "id96"], [591, "id101"], [591, "id109"], [591, "id114"], [591, "id121"], [591, "id131"], [591, "id137"], [591, "id142"], [591, "id146"], [591, "id153"], [591, "id160"], [591, "id166"], [591, "id173"], [591, "id179"], [591, "id185"]], "Contributors to this release": [[591, "contributors-to-this-release"], [591, "id5"], [591, "id8"], [591, "id12"], [591, "id15"], [591, "id20"], [591, "id21"], [591, "id25"], [591, "id27"], [591, "id32"], [591, "id35"], [591, "id40"], [591, "id45"], [591, "id48"], [591, "id52"], [591, "id58"], [591, "id62"], [591, "id65"], [591, "id71"], [591, "id75"], [591, "id81"], [591, "id85"], [591, "id91"], [591, "id97"], [591, "id102"], [591, "id105"], [591, "id110"], [591, "id115"], [591, "id118"], [591, "id122"], [591, "id126"], [591, "id132"], [591, "id138"], [591, "id143"], [591, "id147"], [591, "id154"], [591, "id161"], [591, "id167"], [591, "id174"], [591, "id180"], [591, "id186"], [591, "id189"]], "Py-ART 1.16.0": [[591, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[591, "maintenance-and-upkeep-improvements"], [591, "id6"], [591, "id10"], [591, "id18"], [591, "id26"], [591, "id29"], [591, "id50"], [591, "id55"], [591, "id60"], [591, "id68"], [591, "id73"], [591, "id78"], [591, "id83"], [591, "id88"], [591, "id94"], [591, "id100"], [591, "id104"], [591, "id108"], [591, "id112"], [591, "id117"], [591, "id129"], [591, "id135"], [591, "id150"], [591, "id157"], [591, "id164"], [591, "id170"], [591, "id177"], [591, "id183"], [591, "id188"]], "Py-ART 1.15.2": [[591, "py-art-1-15-2"]], "Py-ART 1.15.1": [[591, "py-art-1-15-1"]], "Py-ART v1.15.0": [[591, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[591, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[591, "py-art-v1-14-5"]], "Merged PRs": [[591, "merged-prs"]], "Py-ART v1.14.4": [[591, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[591, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[591, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[591, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[591, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[591, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[591, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[591, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[591, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[591, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[591, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[591, "py-art-v1-12-5"]], "PyART v1.12.4": [[591, "pyart-v1-12-4"]], "PyART v1.12.2": [[591, "pyart-v1-12-2"]], "PyART v1.12.0": [[591, "pyart-v1-12-0"]], "PyART v1.11.8": [[591, "pyart-v1-11-8"]], "Deprecated features": [[591, "deprecated-features"], [591, "id152"], [591, "id159"], [591, "id172"]], "PyART v1.11.6": [[591, "pyart-v1-11-6"]], "PyART v1.11.5": [[591, "pyart-v1-11-5"]], "PyART v1.11.3": [[591, "pyart-v1-11-3"]], "PyART v1.11.2": [[591, "pyart-v1-11-2"]], "PyART v1.11.1": [[591, "pyart-v1-11-1"]], "PyART v1.11.0": [[591, "pyart-v1-11-0"]], "PyART v1.10.4": [[591, "pyart-v1-10-4"]], "PyART v1.10.3": [[591, "pyart-v1-10-3"]], "PyART v1.10.2": [[591, "pyart-v1-10-2"]], "PyART v1.10.1": [[591, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[591, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[591, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[591, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[591, "pyart-v1-8-0"]], "PyART v1.7.0": [[591, "pyart-v1-7-0"]], "PyART v1.6.0": [[591, "pyart-v1-6-0"]], "PyART v1.5.0": [[591, "pyart-v1-5-0"]], "PyART v1.4.0": [[591, "pyart-v1-4-0"]], "PyART v1.3.0": [[591, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[592, "contributor-s-guide"], [651, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[592, "the-python-arm-radar-toolkit-py-art"], [651, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[592, "important-links"], [651, "important-links"]], "Citing": [[592, "citing"], [651, "citing"]], "Install": [[592, "install"], [641, "install"], [651, "install"]], "Resources": [[592, "resources"], [651, "resources"]], "Code Style": [[592, "code-style"], [651, "code-style"]], "Python File Setup": [[592, "python-file-setup"], [651, "python-file-setup"]], "Testing": [[592, "testing"], [651, "testing"]], "GitHub": [[592, "github"], [651, "github"]], "Py-ART Continuous Integration Setup": [[593, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[594, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[594, "make-the-tagged-git-release"]], "Prepare the release notes": [[594, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[594, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[594, "documentation"]], "Create conda packages on conda-forge": [[594, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[594, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[595, "developer-s-guide"]], "Versions": [[595, "versions"]], "Moment correction examples": [[596, "moment-correction-examples"], [600, "moment-correction-examples"]], "Correct reflectivity attenuation": [[597, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[598, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[599, "computation-times"], [604, "computation-times"], [609, "computation-times"], [628, "computation-times"], [635, "computation-times"], [640, "computation-times"]], "Example Gallery": [[600, "example-gallery"]], "Input/Output Examples": [[600, "input-output-examples"], [601, "input-output-examples"]], "Mapping examples": [[600, "mapping-examples"], [605, "mapping-examples"]], "Plotting examples": [[600, "plotting-examples"], [610, "plotting-examples"]], "Retrieval Examples": [[600, "retrieval-examples"], [629, "retrieval-examples"]], "Xradar Examples": [[600, "xradar-examples"], [636, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[602, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[602, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[602, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[603, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[603, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[606, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[607, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[608, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[611, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[612, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[613, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[614, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[615, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[616, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[617, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[618, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[619, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[620, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [621, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[622, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [623, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[624, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[625, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[626, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[627, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[630, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[631, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[632, "convective-stratiform-classification"]], "How the algorithm works": [[632, "how-the-algorithm-works"]], "Examples": [[632, "examples"]], "Summary of recommendations and best practices": [[632, "summary-of-recommendations-and-best-practices"]], "References": [[632, "references"]], "Calculate and Plot hydrometeor classification": [[633, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[634, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[637, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[638, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[639, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[641, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[641, "what-is-py-art"]], "Citing Py-ART": [[641, "citing-py-art"]], "What can Py-ART do?": [[641, "what-can-py-art-do"]], "Short Courses": [[641, "short-courses"]], "Dependencies": [[641, "dependencies"]], "Optional Dependences": [[641, "optional-dependences"]], "Getting help": [[641, "getting-help"]], "Contributing": [[641, "contributing"]], "Notebook Gallery": [[642, "notebook-gallery"]], "Notebooks": [[642, null]], "Creating a basic ingest of a NetCDF file": [[643, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[644, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[645, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[647, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[648, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[649, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[650, "building-and-installing-py-art"]], "Required Dependencies": [[650, "required-dependencies"]], "Optional Dependencies": [[650, "optional-dependencies"]], "Obtaining the latest source": [[650, "obtaining-the-latest-source"]], "Installing from Source": [[650, "installing-from-source"]], "Frequently asked questions": [[650, "frequently-asked-questions"]], "User Guide": [[652, "user-guide"]], "Setting up an Environment": [[653, "setting-up-an-environment"]], "Anaconda": [[653, "anaconda"]], "Setting a Channel": [[653, "setting-a-channel"]], "Creating an Environment": [[653, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[653, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[653, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [126, "module-pyart.correct"], [168, "module-pyart.exceptions"], [169, "module-pyart.filters"], [202, "module-pyart.graph"], [359, "module-pyart.io"], [380, "module-pyart.lazydict"], [404, "module-pyart.map"], [415, "module-pyart.retrieve"], [448, "module-pyart.testing"], [549, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[126, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[127, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[128, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[141, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[142, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[144, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[145, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[155, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[156, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[157, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[158, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[159, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[160, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[161, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[162, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[163, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[164, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[165, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[166, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[167, "pyart.correct.phase_proc_lp_gf"]], "pyart.exceptions": [[168, "module-pyart.exceptions"]], "pyart.filters": [[169, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[170, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[184, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[185, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[201, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[202, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[203, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[204, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[205, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[210, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[211, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[221, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[231, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[232, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[233, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[234, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[235, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[249, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[250, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[251, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[252, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[253, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[254, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[255, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[256, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[257, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[258, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[263, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[264, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[265, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[266, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[267, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[268, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[270, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[271, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[280, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[285, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[290, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[291, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[292, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[293, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[294, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[295, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[296, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[297, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[299, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[300, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[301, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[309, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[310, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[323, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[324, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[325, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[326, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[327, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[328, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[329, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[330, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[332, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[333, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[334, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[342, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[356, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[357, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[358, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[359, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[360, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[361, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[362, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[363, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[364, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[365, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[366, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[367, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[368, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[369, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[370, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[371, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[372, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[373, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[374, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[375, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[376, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[377, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[378, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[379, "pyart.io.write_uf"]], "pyart.lazydict": [[380, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[381, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[382, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[383, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[384, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[385, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[386, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[394, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[395, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[396, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[397, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[398, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[399, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[400, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[401, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[402, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[403, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[404, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[405, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[406, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[407, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[408, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[409, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[410, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[411, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[412, "pyart.map.grid_from_radars"]], "map_gates_to_grid() (in module pyart.map)": [[413, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[414, "pyart.map.map_to_grid"]], "pyart.retrieve": [[415, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[416, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[417, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[418, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[419, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[420, "pyart.retrieve.compute_cdr"]], "compute_l() (in module pyart.retrieve)": [[421, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[422, "pyart.retrieve.compute_noisedBZ"]], "compute_snr() (in module pyart.retrieve)": [[423, "pyart.retrieve.compute_snr"]], "conv_strat_yuter() (in module pyart.retrieve)": [[424, "pyart.retrieve.conv_strat_yuter"]], "dealias_spectra() (in module pyart.retrieve)": [[425, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[426, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[427, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[428, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[429, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[430, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[431, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[432, "pyart.retrieve.est_rain_rate_zpoly"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[433, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[434, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[435, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[436, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[437, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[438, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[439, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[440, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[441, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[442, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[443, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[444, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[445, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[446, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[447, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[448, "module-pyart.testing"]], "grid (class in pyart.testing)": [[449, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[450, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[451, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[452, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[453, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[454, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[455, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[456, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[457, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[458, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[459, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[460, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[461, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[462, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[463, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[464, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[465, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[466, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[467, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[468, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[469, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[470, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[471, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[472, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[473, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[474, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[475, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[476, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[477, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[478, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[479, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[480, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[481, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[482, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[483, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[484, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[490, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[491, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[492, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[493, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[494, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[495, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[496, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[497, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[498, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[499, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[500, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[501, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[502, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[503, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[504, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[505, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[506, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[507, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[508, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[509, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[510, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[511, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[512, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[513, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[514, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[515, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[516, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[517, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[518, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[519, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[520, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[521, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[522, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[523, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[524, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[525, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[526, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[527, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[528, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[529, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[530, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[531, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[532, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[533, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[534, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[535, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[536, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[537, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[538, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[539, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[540, "pyart.testing.make_empty_spectra_radar"]], "make_normal_storm() (in module pyart.testing)": [[541, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[542, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[543, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[544, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[545, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[546, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[547, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[548, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[549, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[550, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[551, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[552, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[553, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[554, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[555, "pyart.util.column_vertical_profile"]], "cross_section_ppi() (in module pyart.util)": [[556, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[557, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[558, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[559, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[560, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[561, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[562, "pyart.util.datetimes_from_radar"]], "estimate_noise_hs74() (in module pyart.util)": [[563, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[564, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[565, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[566, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[567, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[568, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[569, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[570, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[571, "pyart.util.join_radar"]], "mean_of_two_angles() (in module pyart.util)": [[572, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[573, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[574, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[575, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[576, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[577, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[578, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[579, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[580, "pyart.util.to_vpt"]]}})