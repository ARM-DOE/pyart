Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_above_toa", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_last_gates", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_above_toa", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_last_gates", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.create_cfad", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_rhi_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/2024/animated-gifs-with-pyart", "blog_posts/2024/epcape-blog-post", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_grid_single_sweep_ppi", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_cfad", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_hydrometeor_class_x_band", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_above_toa.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_last_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_above_toa.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_last_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.create_cfad.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_rhi_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/2024/animated-gifs-with-pyart.ipynb", "blog_posts/2024/epcape-blog-post.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_grid_single_sweep_ppi.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_cfad.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_hydrometeor_class_x_band.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_above_toa", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_last_gates", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_above_toa", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_last_gates", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vp", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.create_cfad", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_rhi_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.compute_directional_stats", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART", "Investigating ARM Scanning Cloud Radar Data from EPCAPE", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single PPI sweep to a Cartesian grid using 2D weighting", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Creating a CFAD diagram", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Hydrometeor Classification with Custom Frequency Settings", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"stream": [0, 62, 369, 494], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 203, 204, 205, 206, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 389, 397, 400, 401, 407, 410, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 475, 477, 480, 488, 489, 506, 575, 576, 587, 596, 598, 606, 608, 610, 611, 612, 614, 615, 637, 646, 657, 658, 677, 680], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 217, 219, 220, 221, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 319, 320, 322, 323, 330, 351, 352, 353, 355, 356, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 390, 395, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 606, 607, 608, 610, 614, 615, 617, 620, 621, 623, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 669, 671, 672, 673, 675, 676, 677, 680, 682], "print": [0, 62, 158, 169, 170, 238, 254, 378, 454, 494, 604, 606, 607, 611, 612, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 657, 658, 660, 672, 676, 677], "out": [0, 62, 166, 170, 203, 206, 380, 381, 382, 383, 384, 426, 449, 494, 606, 607, 608, 610, 611, 612, 614, 615, 631, 632, 636, 647, 656, 659, 669, 675, 679, 680, 681], "version": [0, 12, 31, 207, 412, 453, 465, 567, 604, 605, 613, 614, 615, 617, 669, 677, 679, 680, 682], "statu": [0, 605, 615, 680], "inform": [0, 24, 31, 45, 62, 74, 143, 155, 158, 163, 169, 170, 188, 200, 222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 369, 370, 378, 381, 453, 454, 460, 465, 477, 494, 506, 604, 608, 612, 613, 614, 615, 618, 626, 647, 660, 669, 680], "debug": [0, 158, 163, 169, 170, 238, 254, 378, 454, 614], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 122, 124, 125, 133, 138, 143, 144, 145, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 178, 183, 188, 189, 190, 203, 204, 205, 206, 221, 247, 281, 297, 310, 322, 330, 343, 355, 363, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 397, 399, 407, 410, 412, 418, 419, 420, 421, 425, 426, 428, 431, 432, 434, 435, 436, 437, 438, 439, 448, 449, 453, 454, 455, 456, 460, 462, 465, 467, 477, 479, 480, 483, 484, 486, 488, 489, 490, 506, 559, 572, 573, 582, 583, 587, 590, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 615, 616, 617, 618, 620, 621, 625, 626, 629, 630, 631, 635, 636, 637, 638, 641, 647, 654, 655, 657, 658, 660, 665, 669, 671, 672, 673, 675, 676, 677, 679, 680, 682], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 158, 159, 160, 163, 164, 165, 168, 169, 170, 203, 204, 205, 206, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 424, 438, 448, 453, 454, 455, 456, 457, 460, 461, 464, 474, 477, 494, 506, 552, 596, 604, 605, 607, 608, 610, 612, 614, 617, 620, 622, 623, 625, 626, 627, 630, 631, 633, 634, 635, 638, 640, 643, 649, 650, 651, 652, 656, 657, 658, 659, 661, 662, 663, 666, 667, 668, 669, 670, 676, 677, 678, 679, 682], "can": [0, 12, 16, 29, 45, 54, 57, 74, 122, 124, 125, 128, 143, 155, 159, 160, 163, 166, 168, 173, 188, 200, 203, 204, 205, 206, 221, 281, 310, 343, 365, 372, 373, 375, 378, 382, 383, 384, 420, 421, 428, 431, 432, 434, 435, 436, 439, 448, 453, 454, 455, 456, 458, 463, 477, 486, 489, 506, 592, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 617, 625, 626, 629, 635, 654, 655, 657, 658, 660, 665, 671, 672, 673, 675, 676, 677, 679, 680, 682], "run": [0, 234, 438, 448, 464, 582, 605, 607, 611, 614, 615, 616, 617, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 669, 679, 680, 682], "script": [0, 29, 612, 614, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 121, 123, 126, 128, 133, 135, 143, 144, 150, 155, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 172, 173, 178, 180, 188, 189, 195, 200, 203, 204, 205, 206, 208, 222, 223, 224, 229, 232, 233, 234, 235, 238, 246, 247, 249, 251, 253, 254, 260, 261, 263, 265, 267, 268, 282, 283, 284, 289, 292, 293, 294, 297, 311, 312, 313, 319, 321, 322, 325, 326, 327, 330, 344, 345, 346, 352, 354, 355, 358, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 395, 397, 400, 407, 409, 412, 414, 415, 416, 420, 421, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 465, 468, 473, 477, 479, 482, 486, 487, 488, 489, 506, 559, 572, 573, 575, 576, 582, 583, 584, 585, 586, 587, 588, 589, 590, 596, 605, 607, 608, 610, 614, 615, 617, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 640, 643, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 671, 675, 676, 677, 678, 680, 682], "directori": [0, 29, 475, 602, 604, 605, 611, 612, 613, 614, 615, 625, 679, 680], "report": [0, 1, 297, 330, 377, 463, 610, 614, 669], "dependeci": 0, "befor": [0, 31, 56, 163, 167, 170, 410, 428, 431, 432, 434, 436, 438, 448, 462, 465, 488, 606, 607, 608, 615, 629, 657, 669, 673, 677, 680], "build": [0, 122, 124, 125, 128, 133, 135, 143, 150, 155, 173, 178, 180, 188, 195, 200, 384, 606, 610, 614, 615, 617, 669, 680, 681], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 122, 123, 124, 125, 126, 128, 138, 143, 155, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 173, 183, 188, 200, 203, 204, 205, 206, 208, 210, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 301, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 324, 325, 326, 327, 329, 330, 332, 334, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 357, 358, 359, 360, 362, 363, 364, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 410, 417, 418, 419, 420, 421, 423, 424, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 467, 477, 479, 486, 488, 489, 506, 559, 567, 572, 573, 574, 575, 576, 582, 583, 590, 592, 596, 598, 599, 600, 601, 605, 609, 610, 613, 614, 615, 616, 617, 619, 620, 622, 623, 624, 625, 626, 628, 633, 634, 635, 636, 638, 641, 642, 644, 645, 646, 647, 648, 652, 654, 655, 657, 658, 660, 664, 668, 669, 671, 672, 673, 675, 676, 677, 678, 679, 680, 682], "python": [0, 29, 382, 604, 606, 607, 608, 610, 611, 612, 613, 614, 617, 620, 621, 623, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 671, 672, 673, 675, 676, 677, 679, 682], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 122, 124, 125, 128, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 203, 204, 205, 206, 222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 297, 311, 313, 321, 322, 326, 327, 330, 344, 346, 354, 355, 359, 360, 370, 371, 372, 373, 377, 379, 382, 409, 424, 425, 437, 438, 448, 451, 452, 453, 454, 455, 456, 457, 460, 461, 465, 477, 506, 557, 567, 573, 585, 586, 596, 602, 607, 608, 610, 613, 618, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 668, 670, 671, 672, 673, 675, 678, 681, 682], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 178, 180, 188, 195, 200, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 474, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 494, 506, 509, 551, 552, 553, 554, 555, 556, 557, 568, 569, 570, 571, 572, 573, 574, 575, 576, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 600, 601, 604, 606, 607, 612, 614, 615, 650, 657, 658, 660, 672, 673, 675, 677, 679, 680], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 122, 123, 125, 126, 164, 165, 365, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 391, 392, 402, 403, 426, 494, 562, 563, 564, 565, 566, 568, 569, 570, 571, 583, 588, 606, 607, 608, 611, 612, 613, 614, 615, 625, 626, 629, 654, 669, 671, 673, 675, 680], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 128, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 203, 204, 205, 206, 208, 223, 238, 246, 249, 254, 261, 268, 283, 297, 312, 322, 330, 345, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 391, 392, 395, 398, 402, 403, 408, 410, 417, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 458, 459, 461, 462, 463, 464, 465, 466, 473, 474, 478, 479, 480, 482, 483, 484, 486, 494, 503, 531, 549, 553, 554, 555, 556, 559, 573, 582, 583, 585, 586, 587, 590, 591, 595, 598, 600, 601, 604, 605, 607, 608, 610, 611, 614, 615, 625, 629, 637, 638, 642, 643, 644, 645, 646, 647, 648, 649, 650, 655, 657, 658, 659, 660, 669, 670, 671, 675, 676, 680], "sy": 0, "stdout": [0, 62, 494], "descript": [1, 16, 18, 30, 127, 171, 172, 207, 364, 385, 409, 422, 464, 567, 596, 608, 615, 617, 654, 669, 680], "addit": [1, 2, 7, 8, 12, 14, 19, 163, 164, 165, 167, 221, 222, 229, 233, 234, 235, 247, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 281, 282, 289, 293, 294, 310, 311, 318, 319, 320, 321, 322, 323, 326, 327, 343, 344, 351, 352, 353, 354, 355, 356, 359, 360, 363, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 410, 417, 418, 419, 421, 438, 448, 587, 604, 606, 607, 611, 614, 617, 623, 625, 653, 657, 658, 669], "class": [1, 18, 19, 30, 31, 41, 45, 74, 127, 128, 172, 173, 207, 208, 238, 249, 254, 268, 297, 322, 330, 385, 386, 399, 409, 410, 411, 413, 420, 453, 464, 465, 475, 477, 506, 602, 606, 607, 608, 614, 615, 669, 675, 676, 680], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 127, 160, 167, 168, 172, 203, 204, 205, 206, 207, 221, 222, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 281, 282, 289, 293, 294, 297, 310, 311, 321, 326, 327, 330, 343, 344, 354, 359, 360, 363, 364, 366, 369, 372, 373, 379, 382, 409, 410, 414, 415, 416, 418, 419, 420, 421, 422, 426, 432, 437, 438, 439, 448, 453, 454, 456, 462, 464, 488, 567, 573, 586, 587, 590, 595, 596, 601, 602, 607, 608, 611, 612, 614, 615, 635, 654, 655, 657, 658, 660, 665, 669, 673, 675, 677, 679, 680], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 128, 144, 145, 173, 189, 190, 222, 233, 282, 293, 311, 326, 344, 359, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 384, 604, 610, 614, 620, 621, 623, 624, 627, 629, 630, 631, 632, 635, 636, 637, 638, 641, 643, 646, 647, 649, 650, 651, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 669, 671, 672, 673, 675, 676, 677, 678], "write": [1, 15, 364, 380, 381, 382, 383, 384, 464, 475, 613, 614, 623, 624, 672], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 133, 143, 155, 161, 162, 163, 164, 165, 178, 188, 200, 208, 222, 224, 229, 232, 233, 234, 235, 238, 247, 249, 251, 253, 254, 263, 265, 267, 268, 282, 284, 289, 292, 293, 294, 297, 311, 313, 321, 322, 325, 326, 327, 330, 344, 346, 354, 355, 358, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 409, 410, 417, 418, 419, 421, 423, 426, 428, 431, 432, 434, 435, 436, 437, 439, 440, 443, 448, 449, 453, 454, 455, 456, 458, 459, 460, 463, 465, 466, 477, 478, 479, 482, 483, 484, 486, 487, 488, 489, 490, 499, 500, 502, 506, 527, 528, 530, 552, 557, 559, 574, 582, 587, 598, 601, 614, 615, 620, 621, 623, 624, 627, 629, 630, 631, 632, 634, 635, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 649, 651, 653, 654, 655, 657, 658, 660, 661, 664, 665, 667, 668, 669, 670, 671, 672, 673, 677, 678, 680], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 138, 158, 159, 160, 163, 164, 166, 167, 169, 170, 183, 221, 225, 229, 230, 232, 233, 234, 235, 247, 281, 285, 289, 290, 292, 293, 294, 310, 314, 321, 322, 323, 325, 326, 327, 343, 347, 354, 355, 356, 358, 359, 360, 364, 369, 376, 382, 383, 417, 420, 421, 428, 430, 431, 432, 434, 439, 452, 454, 456, 465, 477, 483, 484, 486, 487, 488, 489, 490, 506, 553, 554, 555, 556, 557, 573, 574, 582, 583, 601, 604, 607, 608, 610, 615, 617, 618, 635, 637, 654, 669, 677, 680], "format": [1, 12, 13, 39, 40, 45, 74, 210, 212, 222, 224, 229, 232, 233, 234, 235, 270, 272, 282, 284, 289, 292, 293, 294, 299, 301, 311, 313, 321, 322, 325, 326, 327, 332, 334, 344, 346, 354, 355, 358, 359, 360, 364, 366, 375, 377, 379, 380, 381, 383, 473, 474, 477, 506, 604, 606, 607, 608, 611, 612, 614, 615, 617, 647, 669, 671, 680], "These": [1, 29, 128, 163, 173, 260, 382, 421, 606, 612, 615, 625, 635, 657, 669, 676, 679, 680], "auxiliari": 1, "input": [1, 169, 170, 382, 418, 419, 448, 452, 453, 456, 582, 587, 604, 606, 614, 657, 658, 676], "output": [1, 13, 62, 162, 382, 418, 426, 437, 453, 494, 584, 605, 607, 610, 612, 614, 669], "routin": [1, 12, 172, 380, 420, 614, 669], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 123, 126, 143, 155, 158, 159, 160, 163, 164, 165, 167, 168, 170, 172, 188, 200, 203, 204, 205, 206, 207, 222, 228, 229, 233, 234, 235, 247, 249, 251, 253, 260, 263, 265, 267, 282, 288, 289, 293, 294, 311, 317, 318, 319, 320, 321, 322, 323, 326, 327, 344, 350, 351, 352, 353, 354, 355, 356, 359, 360, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 388, 416, 417, 420, 421, 423, 425, 426, 435, 437, 438, 439, 441, 442, 443, 445, 446, 448, 453, 454, 456, 460, 465, 477, 488, 490, 506, 554, 555, 556, 575, 576, 583, 584, 588, 589, 597, 601, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 617, 621, 623, 625, 626, 629, 630, 635, 637, 638, 646, 649, 654, 655, 657, 658, 660, 669, 671, 672, 673, 675, 676, 677, 679, 680, 682], "well": [1, 166, 168, 203, 204, 205, 206, 355, 374, 376, 421, 604, 606, 611, 612, 614, 615, 626, 636, 658, 669, 675, 676, 680], "polish": 1, "those": [1, 48, 55, 144, 145, 164, 165, 189, 190, 378, 420, 421, 480, 487, 602, 608, 610, 654, 682], "io": [1, 128, 173, 417, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 620, 621, 625, 626, 627, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 669, 672, 673, 675, 676, 677, 678, 679, 680, 682], "thei": [1, 4, 58, 133, 135, 143, 163, 164, 165, 167, 178, 180, 188, 355, 370, 378, 384, 435, 437, 454, 490, 608, 610, 611, 615, 657, 680], "mai": [1, 29, 133, 135, 143, 150, 155, 163, 164, 178, 180, 188, 195, 200, 297, 330, 374, 376, 382, 386, 421, 437, 456, 567, 608, 610, 611, 617, 657, 669], "requir": [1, 31, 45, 74, 122, 124, 125, 163, 166, 167, 378, 382, 418, 419, 421, 462, 465, 477, 506, 583, 604, 605, 611, 614, 615, 626, 669, 680, 682], "depend": [1, 159, 160, 418, 421, 442, 604, 608, 614, 615, 617, 680], "beyond": [1, 679], "standard": [1, 40, 45, 62, 74, 119, 120, 163, 369, 380, 381, 382, 426, 455, 474, 477, 494, 506, 557, 570, 571, 589, 604, 608, 614, 615, 671, 672, 673, 680], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 122, 124, 125, 128, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 203, 204, 205, 206, 222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 297, 311, 313, 321, 322, 326, 327, 330, 344, 346, 354, 355, 359, 360, 370, 371, 372, 373, 377, 379, 382, 409, 424, 425, 437, 438, 448, 451, 452, 453, 454, 455, 456, 457, 460, 461, 465, 477, 506, 557, 567, 573, 585, 586, 596, 602, 608, 610, 618, 620, 621, 623, 624, 625, 626, 634, 635, 637, 655, 658, 664, 668, 670, 671, 672, 673, 675, 678, 681, 682], "instal": [1, 10, 122, 124, 125, 166, 167, 382, 607, 610, 614, 617, 681, 682], "non": [1, 122, 124, 125, 165, 378, 380, 437, 438, 448, 454, 456, 608, 614, 657], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 133, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 203, 204, 205, 206, 207, 222, 224, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 292, 293, 294, 311, 313, 321, 322, 325, 326, 327, 344, 346, 354, 355, 358, 359, 360, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 453, 454, 455, 456, 457, 460, 461, 465, 466, 477, 478, 479, 481, 486, 494, 506, 509, 552, 567, 587, 596, 600, 604, 607, 608, 610, 612, 613, 614, 625, 658, 672, 677], "support": [1, 249, 322, 355, 366, 373, 374, 375, 376, 377, 385, 386, 410, 454, 606, 608, 610, 614, 615, 646, 669, 671, 672, 673, 675, 676, 677, 679, 680], "fulli": [1, 372, 610, 679], "test": [1, 12, 163, 369, 374, 376, 386, 605, 608, 614, 616, 617, 620, 621, 629, 631, 632, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 665, 666, 667, 669, 671], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 128, 132, 140, 143, 147, 152, 155, 163, 164, 165, 167, 168, 169, 170, 173, 177, 185, 188, 192, 197, 200, 205, 222, 228, 229, 232, 233, 234, 235, 249, 282, 288, 289, 292, 293, 294, 311, 317, 321, 322, 325, 326, 327, 344, 350, 354, 355, 358, 359, 360, 363, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 387, 399, 400, 417, 418, 419, 420, 421, 425, 428, 431, 432, 434, 436, 437, 438, 448, 449, 452, 454, 456, 465, 467, 477, 480, 488, 489, 506, 583, 602, 604, 605, 606, 607, 608, 609, 611, 614, 615, 617, 623, 635, 654, 655, 656, 657, 661, 669, 677, 678, 680, 682], "pleas": [1, 56, 297, 330, 488, 604, 605, 608, 610, 612, 615, 669, 671, 672, 673, 675, 676, 677, 680], "your": [1, 222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 606, 607, 608, 613, 615, 617, 623, 634, 636, 652, 657, 658, 669, 678, 679, 680, 682], "own": [1, 12, 607, 611, 612, 617, 635, 669, 679], "risk": [1, 606], "bug": [1, 607, 615, 618, 669, 679, 680], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 128, 133, 144, 145, 162, 163, 164, 165, 170, 173, 178, 189, 190, 208, 248, 262, 322, 355, 363, 364, 365, 378, 381, 383, 384, 418, 419, 420, 421, 438, 448, 454, 455, 456, 458, 460, 462, 463, 465, 477, 479, 486, 506, 582, 583, 608, 611, 613, 614, 615, 617, 635, 657, 660, 669, 679, 680, 682], "fix": [1, 435, 604, 607, 615, 616, 618, 623, 624, 627, 649, 671, 678, 679, 680, 682], "them": [1, 4, 5, 6, 56, 163, 164, 165, 166, 238, 254, 322, 355, 369, 378, 421, 488, 607, 612, 615, 617, 635, 669, 680, 682], "prioriti": [1, 682], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 210, 242, 255, 270, 299, 322, 332, 355, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 474, 604, 605, 606, 608, 611, 614, 615, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 680], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 161, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 428, 431, 432, 434, 435, 436, 466, 478, 479, 481, 486, 502, 509, 530, 598, 629, 675], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 384], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 124, 128, 130, 131, 133, 135, 142, 143, 144, 145, 146, 148, 150, 155, 156, 158, 163, 164, 165, 169, 170, 173, 175, 176, 178, 180, 187, 188, 189, 190, 191, 193, 195, 200, 201, 210, 222, 224, 229, 232, 233, 234, 235, 238, 247, 249, 251, 253, 254, 260, 263, 265, 267, 270, 282, 284, 289, 292, 293, 294, 299, 311, 313, 321, 322, 325, 326, 327, 332, 344, 346, 354, 355, 358, 359, 360, 363, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 390, 420, 421, 425, 437, 438, 442, 445, 448, 453, 454, 455, 456, 466, 467, 474, 475, 478, 479, 480, 483, 484, 486, 488, 489, 490, 565, 566, 577, 578, 579, 580, 581, 582, 590, 601, 604, 606, 607, 608, 610, 611, 614, 615, 637, 644, 646, 647, 649, 657, 658, 660, 671, 672, 676, 677, 680], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 384], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 480, 614], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 163, 164, 165, 221, 222, 223, 229, 233, 234, 235, 247, 249, 250, 251, 252, 253, 260, 263, 264, 265, 266, 267, 281, 282, 283, 289, 293, 294, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 343, 344, 345, 351, 352, 353, 354, 355, 356, 359, 360, 366, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 417, 418, 419, 420, 421, 454, 577, 578, 579, 580, 581, 607, 608, 612, 614], "d3r": [2, 614], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 367, 368, 369, 371, 375, 380, 381, 449, 474, 577, 580, 604, 612, 614, 669, 670], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 34, 40, 45, 46, 47, 49, 54, 74, 77, 122, 124, 125, 133, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 412, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 454, 455, 456, 457, 460, 461, 465, 466, 468, 474, 477, 478, 479, 481, 486, 506, 509, 552, 574, 587, 596, 598, 600, 606, 608, 610, 612, 614], "odim_h5": [2, 8, 614], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 122, 124, 125, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 208, 268, 297, 322, 330, 365, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 386, 420, 421, 425, 427, 429, 430, 433, 437, 438, 441, 442, 443, 444, 445, 446, 447, 448, 449, 453, 454, 455, 456, 457, 459, 460, 461, 465, 466, 468, 473, 477, 478, 506, 596, 604, 608, 671], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 123, 124, 126, 128, 133, 135, 143, 150, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 173, 178, 180, 188, 195, 200, 222, 229, 233, 234, 235, 237, 247, 249, 251, 253, 260, 263, 265, 267, 282, 289, 293, 294, 296, 311, 319, 320, 321, 322, 323, 326, 327, 329, 344, 352, 353, 354, 355, 359, 360, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 421, 424, 425, 427, 429, 430, 433, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 465, 466, 467, 474, 477, 478, 479, 480, 483, 484, 486, 488, 489, 494, 506, 575, 576, 583, 590, 596, 600, 601, 607, 608, 614, 657, 677], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 122, 124, 125, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 388, 390, 417, 420, 421, 424, 425, 437, 438, 441, 442, 443, 444, 445, 446, 447, 448, 453, 457, 459, 460, 461, 465, 466, 477, 478, 479, 481, 506, 509, 551, 596, 626, 658, 672, 677], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 123, 126, 227, 249, 260, 287, 297, 316, 318, 319, 320, 322, 323, 330, 349, 351, 352, 353, 355, 356, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 397, 407, 426, 457, 465, 477, 506, 604, 606, 607, 608, 610, 614, 615, 629, 633, 634, 636, 637, 652, 655, 657, 658, 666, 669, 670, 678, 680], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 221, 222, 223, 224, 229, 232, 233, 234, 235, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 278, 281, 282, 283, 284, 289, 292, 293, 294, 297, 298, 299, 300, 301, 302, 307, 310, 311, 312, 313, 321, 322, 325, 326, 327, 330, 331, 332, 333, 334, 335, 340, 343, 344, 345, 346, 354, 355, 358, 359, 360, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 412, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 473, 477, 478, 479, 480, 481, 486, 489, 502, 506, 509, 530, 553, 554, 555, 556, 557, 559, 562, 563, 564, 565, 566, 572, 573, 574, 586, 587, 596, 598, 599, 600, 604, 606, 607, 608, 610, 611, 612, 614, 615, 620, 623, 625, 629, 630, 631, 632, 635, 636, 638, 649, 653, 654, 655, 656, 657, 658, 659, 665, 667, 669, 670, 671, 673, 675, 676, 677, 680], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 121, 127, 128, 143, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 188, 200, 203, 204, 205, 206, 207, 208, 221, 222, 227, 229, 233, 234, 235, 251, 253, 263, 265, 267, 268, 281, 282, 287, 289, 293, 294, 297, 310, 311, 316, 319, 321, 322, 326, 327, 330, 343, 344, 349, 352, 354, 355, 359, 360, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 409, 410, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 473, 506, 549, 554, 555, 556, 559, 562, 563, 564, 565, 566, 573, 574, 575, 576, 579, 581, 582, 584, 585, 586, 587, 590, 591, 596, 597, 598, 599, 600, 601, 604, 605, 608, 610, 614, 619, 620, 621, 623, 624, 625, 626, 628, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 670, 671, 673, 675, 676, 678, 681], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 122, 124, 125, 143, 155, 161, 163, 166, 167, 168, 188, 200, 204, 205, 210, 212, 222, 223, 228, 229, 233, 234, 235, 246, 247, 248, 249, 250, 251, 252, 253, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 282, 283, 288, 289, 293, 294, 299, 301, 311, 312, 317, 320, 321, 322, 326, 327, 332, 334, 344, 345, 350, 353, 354, 355, 359, 360, 363, 366, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 393, 397, 404, 407, 421, 425, 428, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 453, 454, 455, 456, 457, 460, 465, 466, 477, 479, 480, 481, 488, 506, 509, 572, 575, 576, 583, 598, 605, 607, 608, 609, 610, 612, 615, 617, 657, 669, 671, 672, 673, 675, 676, 677, 679, 680, 682], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 164, 165, 208, 268, 297, 330, 366, 370, 372, 373, 374, 375, 377, 378, 379, 383, 384, 428, 431, 432, 434, 436, 437, 442, 453, 454, 477, 506, 549, 574, 582, 605, 608, 612, 614, 615, 658, 660, 669, 677, 680], "found": [2, 7, 8, 12, 14, 29, 160, 166, 366, 370, 372, 373, 374, 375, 377, 378, 379, 393, 404, 417, 420, 421, 426, 449, 604, 606, 608, 610, 612, 614, 615, 617, 626, 669, 679, 680, 682], "doe": [2, 7, 8, 12, 14, 49, 77, 122, 124, 125, 163, 164, 165, 222, 224, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 292, 293, 294, 311, 313, 321, 322, 325, 326, 327, 344, 346, 354, 355, 358, 359, 360, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 397, 407, 481, 509, 601, 606, 608, 614, 615, 617, 647, 660, 671, 679, 680, 682], "appear": [2, 7, 8, 12, 14, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 590, 608, 611, 612], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 162, 163, 210, 242, 254, 255, 270, 299, 330, 332, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 383, 390, 397, 407, 409, 439, 442, 445, 446, 453, 477, 506, 559, 583, 600, 605, 607, 608, 610, 611, 612, 615, 617, 625, 635, 657, 669, 675, 677, 679, 680, 682], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 122, 123, 124, 125, 126, 128, 130, 131, 133, 134, 135, 137, 141, 143, 146, 148, 149, 150, 153, 155, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 176, 178, 179, 180, 182, 186, 188, 191, 193, 194, 195, 198, 200, 202, 203, 204, 205, 206, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 246, 247, 249, 251, 253, 260, 261, 263, 265, 267, 282, 283, 284, 286, 289, 290, 291, 292, 293, 294, 311, 312, 313, 315, 318, 319, 320, 321, 322, 324, 325, 326, 327, 344, 345, 346, 348, 351, 352, 353, 354, 355, 357, 358, 359, 360, 363, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 393, 394, 399, 404, 405, 420, 421, 423, 425, 426, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 442, 445, 446, 448, 451, 453, 454, 455, 456, 460, 462, 465, 477, 480, 506, 554, 555, 556, 557, 572, 574, 582, 583, 587, 588, 589, 604, 606, 607, 608, 611, 612, 614, 615, 626, 629, 635, 638, 654, 655, 656, 657, 658, 665, 672, 673, 676, 680], "place": [2, 7, 8, 12, 14, 223, 227, 228, 246, 248, 261, 262, 283, 287, 288, 312, 316, 317, 345, 349, 350, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 601, 611, 612, 614, 675, 679], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 123, 126, 128, 158, 159, 160, 163, 164, 165, 168, 169, 170, 173, 203, 204, 205, 206, 208, 238, 247, 254, 268, 297, 320, 330, 353, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 385, 386, 399, 417, 418, 419, 420, 421, 425, 426, 428, 429, 431, 437, 438, 439, 441, 442, 448, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 477, 479, 506, 557, 573, 587, 604, 608, 611, 612, 614, 615, 638, 654, 657, 658, 663, 669, 680], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 173, 178, 180, 188, 195, 200, 203, 204, 205, 206, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 229, 232, 233, 234, 235, 237, 246, 247, 249, 251, 253, 260, 261, 263, 265, 267, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 289, 292, 293, 294, 296, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 321, 322, 325, 326, 327, 329, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 354, 355, 358, 359, 360, 362, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 389, 401, 421, 423, 424, 426, 435, 437, 438, 439, 442, 445, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 465, 477, 483, 484, 486, 488, 489, 494, 506, 554, 555, 556, 574, 582, 583, 596, 605, 606, 614, 615, 646, 647, 654, 657, 658, 660, 669, 679, 680, 682], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 122, 124, 125, 158, 159, 160, 163, 166, 168, 169, 170, 203, 204, 205, 206, 227, 228, 232, 287, 288, 292, 316, 317, 325, 349, 350, 358, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 384, 420, 421, 425, 432, 435, 453, 454, 460, 465, 477, 506, 572, 573, 604, 607, 608, 611, 612, 613, 614, 636, 637, 654, 655, 657], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 158, 159, 160, 163, 164, 165, 168, 169, 170, 203, 204, 205, 206, 222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 424, 438, 448, 453, 454, 455, 456, 457, 460, 461, 596, 604, 605, 608, 610, 614, 625, 629, 656, 665], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 465, 483, 484, 486, 487, 488, 489, 490, 573, 611, 614, 615, 654, 656, 657, 658, 659, 660, 661, 662, 665, 673, 678, 680], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 158, 159, 160, 163, 164, 165, 169, 170, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 383, 424, 426, 437, 454, 455, 456, 457, 461, 465, 466, 477, 478, 479, 506, 551, 553, 559, 596, 612, 613, 614, 626, 644, 645, 649, 677], "dure": [2, 7, 8, 12, 14, 19, 143, 155, 162, 163, 164, 165, 188, 200, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 438, 447, 454, 460, 604, 658, 679, 682], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 122, 123, 124, 125, 126, 130, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 175, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 200, 201, 204, 205, 210, 212, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 246, 247, 248, 249, 250, 251, 252, 253, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 282, 283, 284, 287, 288, 289, 292, 293, 294, 297, 299, 301, 311, 312, 313, 316, 317, 321, 322, 325, 326, 327, 330, 332, 334, 344, 345, 346, 349, 350, 354, 355, 358, 359, 360, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 393, 394, 397, 399, 404, 405, 407, 410, 417, 418, 419, 420, 421, 423, 425, 426, 428, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 445, 446, 448, 449, 453, 454, 455, 456, 460, 462, 465, 466, 467, 477, 479, 480, 487, 488, 489, 490, 494, 506, 559, 572, 575, 576, 582, 583, 584, 587, 590, 592, 597, 598, 600, 601, 602, 604, 606, 607, 608, 609, 610, 611, 613, 614, 615, 617, 620, 625, 626, 629, 630, 635, 636, 637, 638, 641, 646, 647, 654, 655, 657, 658, 660, 671, 672, 673, 675, 676, 677, 679, 680, 682], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 133, 135, 143, 144, 145, 150, 155, 158, 159, 160, 163, 164, 165, 166, 168, 169, 170, 178, 180, 188, 189, 190, 195, 200, 204, 205, 297, 330, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 418, 419, 421, 426, 439, 453, 478, 479, 553, 601, 605, 609, 611, 612, 618, 654, 671], "success": [2, 7, 8, 12, 14, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 617], "unless": [2, 7, 8, 12, 14, 58, 122, 124, 125, 165, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 383, 490, 608], "explicitli": [2, 7, 8, 12, 14, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 418, 419], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 128, 133, 135, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 172, 173, 178, 180, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 222, 229, 233, 234, 235, 247, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 418, 419, 420, 421, 452, 462, 477, 482, 488, 489, 506, 573, 592, 605, 607, 608, 610, 611, 612, 613, 614, 615, 617, 625, 629, 649, 654, 669, 676, 679, 680], "introduct": [2, 7, 8, 12, 14, 366, 370, 372, 373, 374, 375, 376, 377, 378, 615, 680], "specif": [2, 7, 8, 12, 14, 143, 155, 158, 159, 160, 188, 200, 330, 355, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 421, 441, 442, 443, 445, 446, 449, 453, 454, 455, 456, 587, 606, 608, 612, 614, 615, 620, 635, 657, 658, 660, 669, 680, 682], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 122, 124, 125, 133, 135, 150, 163, 164, 165, 172, 178, 180, 195, 222, 224, 229, 233, 234, 235, 247, 249, 250, 251, 252, 253, 260, 263, 264, 265, 266, 267, 282, 284, 289, 293, 294, 311, 313, 318, 319, 320, 321, 322, 323, 326, 327, 344, 346, 351, 352, 353, 354, 355, 356, 359, 360, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 393, 404, 410, 420, 421, 454, 455, 456, 465, 477, 480, 488, 489, 506, 596, 600, 606, 607, 608, 611, 614, 621, 625, 675, 676, 679], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 124, 128, 133, 135, 143, 150, 155, 158, 163, 164, 165, 169, 170, 173, 178, 180, 188, 195, 200, 210, 212, 222, 224, 229, 232, 233, 234, 235, 238, 247, 249, 251, 253, 254, 260, 263, 265, 267, 270, 272, 282, 284, 289, 292, 293, 294, 299, 301, 311, 313, 321, 322, 325, 326, 327, 332, 334, 344, 346, 354, 355, 358, 359, 360, 363, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 417, 418, 421, 425, 437, 438, 442, 445, 446, 448, 453, 454, 455, 456, 460, 466, 467, 474, 478, 479, 480, 483, 484, 486, 488, 489, 490, 582, 590, 601, 608], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 124, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 169, 170, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 210, 212, 222, 224, 229, 232, 233, 234, 235, 238, 247, 249, 251, 253, 254, 260, 263, 265, 267, 270, 272, 282, 284, 289, 292, 293, 294, 299, 301, 311, 313, 321, 322, 325, 326, 327, 332, 334, 344, 346, 354, 355, 358, 359, 360, 363, 365, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 390, 417, 418, 420, 421, 425, 437, 438, 442, 445, 446, 448, 453, 454, 455, 456, 460, 465, 466, 467, 474, 475, 477, 478, 479, 480, 483, 484, 486, 488, 489, 490, 506, 565, 566, 582, 590, 601, 604, 605, 606, 607, 608, 610, 611, 614, 615, 630, 637, 644, 645, 646, 647, 654, 657, 658, 660, 661, 665, 672, 673, 677, 680], "mdv": [2, 8, 12, 14, 372, 373, 383, 605, 614, 621, 623, 631, 634, 652, 669, 673, 675, 678], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 122, 124, 125, 143, 155, 163, 165, 188, 200, 364, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 397, 407, 606, 607, 608, 610, 612, 614, 615, 625, 626, 629, 630, 647, 680], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 163, 164, 165, 222, 224, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 292, 293, 294, 311, 313, 321, 322, 325, 326, 327, 344, 346, 354, 355, 358, 359, 360, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 418, 419, 425, 453, 604, 605, 606, 607, 608, 610, 611, 612, 614, 620, 629], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 123, 126, 158, 159, 160, 161, 163, 164, 165, 166, 203, 206, 227, 247, 287, 316, 349, 355, 365, 366, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 410, 411, 412, 413, 417, 420, 421, 423, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 448, 451, 453, 454, 455, 456, 460, 462, 465, 477, 506, 552, 567, 568, 569, 572, 574, 582, 583, 588, 589, 592, 596, 598, 600, 604, 605, 606, 607, 611, 614, 617, 623, 626, 630, 638, 649, 654, 657, 658, 660, 670, 673, 676, 679], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 144, 145, 158, 159, 160, 162, 163, 165, 169, 170, 189, 190, 222, 233, 249, 282, 293, 311, 322, 326, 344, 355, 359, 366, 370, 372, 373, 374, 375, 376, 377, 378, 418, 419, 421, 454, 462, 482, 488, 489, 575, 576, 590, 592, 598, 604, 605, 606, 608, 610, 614, 615, 618, 629, 630, 637, 647, 657, 658, 672, 673, 675, 680], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 133, 135, 143, 150, 155, 158, 159, 160, 163, 178, 180, 188, 195, 200, 222, 233, 254, 282, 293, 311, 322, 326, 344, 359, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 435, 438, 448, 451, 467, 477, 480, 488, 506, 557, 582, 604, 606, 607, 608, 609, 610, 612, 614, 615, 625, 626, 654, 655, 657, 658, 660, 669, 675, 679, 680, 681, 682], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 122, 124, 125, 163, 164, 165, 322, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 390, 393, 394, 395, 397, 399, 404, 405, 407, 420, 421, 449, 453, 465, 466, 477, 478, 479, 506, 559, 606, 608, 611, 612, 654, 671, 672, 676], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 208, 224, 228, 231, 254, 268, 284, 288, 291, 297, 313, 317, 324, 330, 346, 350, 357, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 412, 418, 419, 421, 428, 431, 432, 434, 435, 436, 439, 449, 452, 480, 573, 575, 576, 585, 607, 608, 610, 612, 613, 614, 615, 617, 625, 669, 680, 681], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 155, 158, 159, 160, 168, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 197, 200, 203, 204, 205, 206, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 437, 454, 455, 456, 458, 462, 463, 480, 621, 631, 676], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 161, 164, 165, 167, 168, 169, 170, 204, 205, 222, 223, 229, 232, 233, 234, 235, 246, 261, 282, 283, 289, 292, 293, 294, 311, 312, 321, 322, 325, 326, 327, 344, 345, 354, 355, 358, 359, 360, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 410, 417, 421, 426, 438, 442, 448, 477, 480, 506, 583, 606, 607, 608, 610, 611, 614, 615, 625, 635, 646, 657, 658, 660, 665, 673, 680], "after": [2, 4, 5, 6, 7, 8, 12, 14, 163, 164, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 386, 454, 604, 606, 608, 614, 615, 617, 626, 657, 679, 680, 682], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 158, 159, 160, 163, 164, 165, 168, 169, 170, 173, 178, 180, 188, 195, 200, 203, 204, 205, 206, 222, 224, 229, 232, 233, 234, 235, 236, 237, 247, 249, 282, 284, 289, 292, 293, 294, 295, 296, 311, 313, 321, 322, 325, 326, 327, 328, 329, 344, 346, 354, 355, 358, 359, 360, 361, 362, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 391, 392, 395, 396, 402, 403, 406, 421, 432, 437, 441, 442, 443, 445, 446, 454, 455, 456, 465, 477, 488, 489, 490, 506, 554, 555, 556, 565, 566, 572, 582, 593, 594, 605, 606, 612, 614, 615, 623, 626, 629, 630, 636, 643, 646, 647, 650, 651, 653, 654, 657, 658, 662, 665, 669, 673, 678, 679, 680, 681], "you": [2, 222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 453, 604, 607, 608, 609, 610, 611, 613, 615, 617, 625, 657, 658, 669, 671, 672, 673, 675, 676, 677, 679, 680, 682], "want": [2, 605, 607, 608, 610, 611, 626, 654, 669, 676, 677, 682], "altitud": [2, 31, 45, 56, 74, 169, 170, 208, 418, 421, 426, 439, 460, 465, 477, 488, 506, 584, 597, 604, 607, 614, 647, 654, 661, 671, 675, 677], "provid": [2, 6, 45, 48, 74, 163, 207, 228, 288, 317, 322, 350, 368, 369, 370, 375, 378, 382, 383, 384, 386, 391, 392, 398, 399, 402, 403, 408, 410, 453, 477, 480, 506, 587, 596, 602, 604, 607, 608, 610, 611, 612, 613, 615, 626, 655, 657, 669, 676, 679, 680], "np": [2, 410, 430, 463, 595, 604, 606, 607, 608, 610, 612, 614, 615, 629, 631, 635, 638, 643, 646, 647, 649, 654, 655, 657, 658, 659, 660, 661, 671, 672, 673, 675, 676, 677, 680], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 126, 128, 133, 135, 143, 144, 145, 150, 155, 163, 164, 165, 167, 173, 178, 180, 188, 189, 190, 195, 200, 208, 222, 223, 224, 229, 233, 234, 235, 246, 247, 249, 251, 253, 260, 261, 263, 265, 267, 268, 282, 283, 284, 289, 293, 294, 297, 311, 312, 313, 318, 319, 321, 322, 326, 327, 330, 344, 345, 346, 351, 352, 354, 355, 359, 360, 410, 420, 421, 430, 438, 439, 440, 448, 453, 455, 456, 457, 462, 463, 465, 467, 473, 479, 483, 484, 486, 487, 488, 489, 490, 568, 569, 570, 571, 572, 580, 581, 583, 588, 589, 592, 593, 594, 595, 604, 608, 614, 615, 629, 643, 654, 657, 658, 661, 671, 672, 673, 675, 676, 677, 680], "295": [2, 614], "dtype": [2, 417, 421, 604, 607, 608, 614, 671, 673, 677], "float64": [2, 420, 421, 604, 607, 655, 677], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 203, 204, 205, 206, 209, 210, 211, 212, 213, 242, 243, 244, 245, 255, 256, 257, 258, 269, 270, 271, 272, 273, 298, 299, 300, 301, 302, 331, 332, 333, 334, 335, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 388, 393, 394, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 467, 468, 475, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 499, 500, 501, 502, 503, 504, 505, 519, 520, 521, 522, 527, 528, 529, 530, 531, 532, 533, 549, 551, 552, 553, 554, 555, 556, 557, 559, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 596, 597, 598, 600, 604, 606, 607, 608, 611, 612, 614, 615, 655, 657, 658, 660, 672, 675, 677, 680], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 203, 204, 205, 206, 222, 229, 232, 233, 234, 235, 237, 282, 289, 292, 293, 294, 296, 311, 321, 322, 325, 326, 327, 329, 344, 354, 355, 358, 359, 360, 362, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 399, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 431, 434, 437, 438, 441, 442, 443, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 466, 467, 477, 478, 482, 483, 484, 486, 487, 488, 489, 490, 506, 572, 573, 575, 576, 582, 586, 596, 598, 601, 604, 605, 608, 611, 614, 615, 626, 639, 640, 658, 669, 671, 672, 675, 677, 679, 680, 682], "edg": [3, 33, 57, 120, 124, 163, 164, 165, 166, 167, 222, 229, 233, 234, 235, 251, 253, 263, 265, 267, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 439, 452, 456, 467, 489, 557, 606, 607, 608, 646, 647, 657], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 384, 607, 614], "gamic": [4, 614], "hdf5": [4, 8, 614, 669], "unlik": [4, 5, 6, 369], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 163, 164, 165, 166, 167, 168, 205, 222, 224, 229, 232, 233, 234, 235, 249, 282, 284, 289, 292, 293, 294, 311, 313, 321, 322, 325, 326, 327, 344, 346, 354, 355, 358, 359, 360, 366, 369, 371, 374, 376, 378, 382, 410, 421, 438, 448, 458, 462, 465, 473, 477, 506, 554, 555, 556, 606, 607, 608, 612, 615, 654, 657, 658, 669, 671, 679, 680, 682], "still": [4, 5, 6, 163, 297, 330, 369, 384, 421, 590, 610, 612, 614, 615, 625, 680], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 128, 133, 135, 143, 150, 155, 163, 164, 165, 166, 168, 169, 170, 173, 178, 180, 188, 195, 200, 203, 204, 205, 206, 222, 223, 227, 228, 229, 232, 233, 234, 235, 238, 246, 249, 251, 253, 254, 260, 261, 263, 265, 267, 282, 283, 287, 288, 289, 292, 293, 294, 311, 312, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 365, 366, 368, 369, 374, 375, 378, 379, 381, 382, 383, 384, 386, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 432, 435, 449, 453, 454, 455, 456, 460, 461, 462, 465, 467, 477, 482, 486, 499, 500, 502, 503, 506, 527, 528, 530, 531, 572, 573, 574, 575, 576, 583, 585, 586, 587, 588, 589, 596, 600, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 617, 621, 625, 626, 629, 635, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 654, 655, 658, 665, 666, 667, 669, 673, 675, 677, 679, 680], "renam": [4, 5, 6, 29, 369, 379, 614], "uniform": [4, 5, 6, 58, 164, 165, 369, 377, 425, 437, 490, 614, 635, 638, 669, 671], "forc": [4, 5, 6, 369, 379, 425, 608, 614], "extract": [4, 222, 282, 311, 344, 378, 435, 437, 449, 573, 575, 576, 586, 610, 614, 623, 629, 651, 653, 654, 657, 658, 662, 669, 678], "valid": [4, 31, 45, 74, 157, 158, 163, 202, 223, 246, 261, 283, 312, 345, 374, 383, 384, 418, 419, 421, 428, 431, 432, 434, 453, 465, 477, 506, 573, 574, 575, 576, 583, 612, 614, 615, 630, 680], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 121, 160, 208, 222, 224, 229, 230, 231, 233, 234, 235, 247, 249, 251, 253, 260, 263, 265, 267, 268, 282, 284, 289, 290, 291, 293, 294, 297, 311, 313, 321, 322, 323, 324, 326, 327, 330, 344, 346, 354, 355, 356, 357, 359, 360, 377, 418, 419, 421, 428, 430, 432, 434, 435, 437, 454, 456, 477, 487, 489, 506, 573, 574, 582, 598, 604, 606, 607, 608, 614, 630, 635, 640, 643, 649, 661, 671, 677], "valid_min": [4, 163, 164, 165, 370, 614, 657, 658, 677], "valid_max": [4, 163, 164, 165, 370, 657, 658, 677], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 133, 135, 138, 143, 144, 145, 150, 155, 163, 164, 165, 169, 170, 178, 180, 183, 188, 189, 190, 195, 200, 222, 229, 233, 234, 235, 249, 254, 282, 289, 293, 294, 311, 321, 322, 326, 327, 330, 344, 354, 355, 359, 360, 374, 375, 377, 378, 380, 384, 386, 410, 421, 425, 428, 431, 432, 434, 436, 442, 445, 446, 454, 455, 456, 462, 464, 465, 477, 478, 479, 483, 484, 486, 488, 489, 506, 583, 605, 606, 607, 610, 611, 614, 615, 616, 617, 618, 635, 654, 657, 658, 660, 669, 672, 673, 676, 679, 680, 682], "present": [4, 29, 31, 45, 74, 222, 229, 233, 234, 235, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 383, 384, 397, 407, 421, 453, 465, 477, 506, 608, 671, 676], "unit": [4, 55, 122, 123, 124, 125, 126, 164, 165, 214, 217, 218, 219, 220, 227, 247, 274, 277, 278, 279, 280, 287, 303, 306, 307, 308, 309, 316, 336, 339, 340, 341, 342, 349, 370, 372, 423, 448, 451, 464, 487, 559, 583, 604, 608, 610, 614, 615, 616, 644, 649, 657, 658, 660, 669, 672, 677, 680], "avail": [4, 16, 45, 56, 57, 58, 74, 143, 155, 158, 159, 160, 167, 188, 200, 207, 247, 249, 251, 253, 263, 265, 267, 372, 382, 477, 488, 489, 490, 506, 592, 604, 606, 607, 608, 611, 614, 617, 623, 625, 635, 654, 669], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 123, 126, 442, 453, 462, 463, 604, 606, 607, 608, 609, 610, 611, 612, 614, 615, 626, 661, 671, 672, 673, 675, 676, 677, 680], "k": [5, 126, 226, 227, 228, 230, 231, 232, 286, 287, 288, 290, 291, 292, 315, 316, 317, 323, 324, 325, 348, 349, 350, 356, 357, 358, 389, 393, 394, 396, 397, 401, 404, 405, 406, 407, 437, 454, 462, 606, 610, 612, 615, 636, 643, 646, 647, 680], "band": [5, 9, 158, 160, 162, 382, 428, 441, 443, 450, 453, 454, 455, 456, 460, 604, 612, 614, 658, 660], "arm": [5, 6, 40, 367, 368, 369, 380, 381, 421, 449, 474, 553, 559, 604, 606, 608, 610, 614, 617, 632, 647, 671, 672, 673, 675, 676, 677, 679, 682], "zenith": 5, "kazr": [5, 6, 614], "ingest": [5, 607, 614, 669, 670], "spectra": [6, 74, 117, 440, 459, 506, 549, 556, 564, 583, 614], "radar_spectra": 6, "delay_field_load": [6, 366, 369, 372, 373, 374, 377, 379], "delai": [6, 366, 369, 372, 373, 374, 377, 614], "load": [6, 29, 366, 369, 372, 373, 374, 377, 385, 386, 395, 614, 630, 677], "until": [6, 29, 164, 366, 369, 372, 373, 374, 377, 611, 617], "particular": [6, 366, 369, 372, 373, 374, 377, 421, 435, 607, 617, 654, 669], "access": [6, 19, 31, 45, 56, 57, 74, 144, 145, 189, 190, 366, 369, 372, 373, 374, 377, 386, 465, 477, 488, 489, 506, 552, 607, 612, 625, 626, 675, 677], "In": [6, 122, 124, 125, 165, 167, 364, 366, 369, 372, 373, 374, 376, 377, 397, 407, 410, 423, 426, 435, 439, 454, 463, 572, 573, 604, 606, 607, 608, 610, 611, 615, 620, 621, 626, 654, 657, 658, 669, 672, 673, 675, 676, 679, 680], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 143, 144, 145, 155, 163, 188, 189, 190, 200, 222, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 366, 369, 370, 372, 373, 374, 377, 380, 381, 384, 465, 468, 469, 470, 471, 477, 488, 489, 495, 496, 497, 498, 506, 523, 524, 525, 526, 604, 607, 608, 610, 612, 655, 671, 677], "radarspectra": [6, 459, 556], "lazyloaddict": [6, 31, 45, 74, 366, 369, 372, 373, 374, 377, 465, 477, 506], "speedup": [6, 249, 322, 355, 369, 608, 614], "where": [6, 15, 56, 57, 119, 123, 126, 130, 133, 134, 135, 136, 137, 139, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 163, 164, 165, 168, 170, 175, 178, 179, 180, 181, 182, 184, 186, 187, 188, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 222, 229, 232, 233, 234, 235, 248, 262, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 363, 369, 426, 428, 431, 432, 434, 435, 436, 438, 439, 448, 457, 463, 488, 489, 575, 576, 584, 587, 600, 604, 605, 608, 610, 614, 625, 626, 629, 635, 638, 654, 655, 657, 660, 669, 672, 676, 682], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 121, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 222, 229, 233, 234, 235, 251, 253, 263, 265, 267, 268, 282, 289, 293, 294, 297, 311, 321, 322, 326, 327, 330, 344, 354, 355, 359, 360, 369, 374, 375, 376, 377, 410, 417, 420, 421, 454, 455, 456, 457, 458, 462, 463, 477, 487, 488, 489, 506, 554, 555, 556, 572, 573, 585, 586, 604, 608, 614, 621, 626, 629, 631, 632, 636, 671, 673, 675, 676, 677], "vari": [6, 369, 372, 437, 657, 658], "between": [6, 33, 45, 56, 57, 74, 120, 123, 124, 143, 155, 163, 164, 166, 167, 168, 188, 200, 204, 205, 222, 229, 233, 234, 235, 247, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 363, 369, 374, 377, 383, 384, 410, 437, 438, 442, 448, 467, 477, 488, 489, 506, 567, 582, 597, 604, 606, 607, 608, 615, 617, 629, 636, 646, 654, 657, 673, 675, 680, 682], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 138, 143, 155, 158, 159, 160, 163, 164, 165, 167, 170, 183, 188, 200, 204, 209, 211, 215, 216, 222, 229, 232, 233, 234, 235, 251, 253, 263, 265, 267, 269, 271, 275, 276, 282, 289, 292, 293, 294, 298, 300, 304, 305, 311, 321, 322, 325, 326, 327, 331, 333, 337, 338, 344, 354, 355, 358, 359, 360, 368, 369, 374, 377, 378, 410, 425, 430, 462, 477, 485, 488, 489, 490, 491, 492, 493, 506, 519, 520, 521, 522, 554, 555, 556, 559, 573, 574, 579, 581, 585, 600, 601, 607, 608, 615, 631, 671, 677, 680], "ngates_vari": [6, 369], "recommend": [6, 29, 45, 74, 163, 165, 355, 369, 378, 421, 437, 438, 448, 454, 477, 506, 572, 615, 617, 635, 654, 669, 679, 680, 681, 682], "noxp": [7, 614], "iphex": [7, 614], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 138, 183, 322, 355, 374, 376, 418, 419, 449, 573, 577, 580, 586, 604, 607, 608, 614, 625, 630, 654, 655, 658, 659, 660, 661, 669, 671], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 130, 131, 133, 134, 135, 136, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 156, 163, 168, 175, 176, 178, 179, 180, 181, 184, 186, 187, 191, 193, 194, 195, 196, 198, 199, 201, 204, 205, 222, 227, 228, 247, 248, 250, 251, 252, 253, 262, 264, 265, 266, 267, 282, 287, 288, 311, 316, 317, 318, 319, 344, 349, 350, 351, 352, 393, 404, 410, 418, 419, 420, 421, 432, 453, 457, 465, 467, 477, 483, 484, 485, 486, 489, 490, 491, 492, 493, 506, 519, 520, 521, 522, 551, 573, 582, 585, 586, 588, 589, 596, 604, 608, 612, 654, 655, 657, 669], "dataset1": 8, "dataset2": 8, "pattern": [9, 557, 646, 654], "project": [9, 16, 31, 34, 45, 74, 122, 123, 124, 125, 126, 227, 238, 249, 260, 287, 297, 316, 322, 349, 355, 372, 381, 382, 421, 428, 431, 432, 434, 436, 465, 468, 477, 506, 604, 606, 608, 610, 611, 612, 614, 625, 626, 629, 630, 636, 637, 643, 650, 655, 657, 658, 665, 669, 672, 673, 675, 676, 679], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 126, 208, 217, 222, 224, 227, 229, 232, 233, 234, 235, 237, 247, 249, 251, 253, 263, 265, 267, 268, 277, 282, 284, 287, 289, 292, 293, 294, 296, 297, 306, 311, 313, 316, 319, 321, 325, 326, 327, 329, 330, 339, 344, 346, 349, 352, 354, 358, 359, 360, 362, 410, 414, 415, 416, 417, 418, 420, 421, 425, 438, 439, 441, 448, 450, 451, 452, 453, 454, 455, 456, 460, 465, 471, 473, 489, 497, 525, 553, 557, 572, 604, 607, 608, 611, 613, 614, 618, 629, 636, 637, 646, 647, 654, 657, 658, 660, 675, 676, 677], "radx_dir": 10, "first": [10, 45, 58, 74, 163, 165, 247, 367, 368, 377, 380, 410, 421, 438, 448, 454, 455, 456, 460, 477, 490, 506, 577, 579, 582, 593, 594, 604, 606, 607, 608, 610, 611, 615, 617, 621, 625, 626, 640, 649, 654, 655, 657, 658, 665, 673, 675, 676, 677, 680], "convert": [10, 13, 39, 423, 438, 448, 473, 590, 601, 604, 606, 608, 614, 657, 658], "cf": [10, 13, 45, 74, 369, 380, 381, 449, 477, 506, 604, 605, 606, 607, 623, 634, 652, 669, 677, 678], "radial": [10, 13, 45, 74, 163, 164, 369, 380, 425, 454, 477, 506, 572, 596, 605, 607, 608, 610, 614, 619, 623, 625, 634, 652, 664, 668, 669, 673, 677, 678], "radxconvert": 10, "path": [10, 15, 159, 160, 165, 475, 552, 605, 606, 608, 610, 611, 614, 615, 625, 626, 669, 679, 680], "radx": [10, 614], "grid": [11, 24, 45, 74, 207, 224, 226, 234, 238, 242, 248, 249, 250, 252, 254, 255, 260, 262, 263, 264, 266, 284, 286, 313, 315, 346, 348, 364, 371, 372, 381, 382, 383, 414, 415, 416, 417, 418, 419, 420, 421, 428, 431, 432, 434, 436, 437, 438, 439, 448, 451, 452, 460, 477, 506, 553, 557, 558, 560, 561, 578, 598, 604, 608, 611, 614, 623, 628, 633, 634, 637, 647, 650, 652, 654, 657, 658, 664, 668, 669, 670, 678], "produc": [11, 166, 371, 380, 382, 386, 458, 463, 608, 610, 615, 658, 669, 680], "radx2grid": 11, "within": [11, 29, 47, 48, 128, 163, 164, 165, 166, 170, 173, 207, 417, 420, 421, 425, 428, 431, 432, 434, 436, 453, 479, 480, 567, 573, 575, 576, 584, 586, 588, 589, 602, 606, 608, 609, 610, 612, 614, 615, 625, 626, 637, 638, 669, 673, 675, 680, 682], "lrose": 11, "must": [11, 158, 159, 160, 163, 322, 368, 371, 372, 377, 383, 437, 451, 454, 455, 456, 596, 608, 615, 657, 669, 679, 680], "been": [11, 12, 133, 135, 143, 150, 155, 162, 163, 178, 180, 188, 195, 200, 254, 330, 369, 371, 374, 375, 376, 378, 583, 605, 610, 615, 625, 657, 669, 675, 679, 680], "write_grid": [11, 371], "ident": [11, 164, 165, 371, 420, 658], "layout": [11, 33, 371, 467, 614], "rainbow": 12, "rainbow5": [12, 614], "5": [12, 31, 158, 160, 163, 166, 167, 168, 169, 205, 222, 229, 232, 233, 234, 235, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 381, 437, 438, 442, 448, 453, 465, 557, 582, 590, 604, 605, 606, 607, 608, 610, 611, 612, 613, 615, 620, 621, 626, 630, 635, 638, 640, 641, 642, 645, 646, 647, 648, 649, 650, 654, 655, 657, 658, 659, 660, 661, 665, 671, 673, 676, 677, 680], "22": [12, 604, 606, 610, 614, 625, 635, 655, 657, 662, 678], "3": [12, 45, 74, 119, 120, 163, 164, 203, 204, 206, 234, 372, 376, 382, 417, 418, 419, 421, 425, 437, 438, 448, 453, 477, 506, 553, 557, 573, 604, 605, 606, 607, 610, 613, 615, 620, 621, 623, 626, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 668, 669, 671, 672, 673, 675, 676, 677, 678, 679, 680, 682], "34": [12, 448, 460, 604, 657, 658], "16": [12, 437, 441, 462, 604, 605, 606, 608, 612, 615, 620, 621, 629, 642, 648, 654, 656, 673, 677, 680], "35": [12, 165, 169, 170, 604, 606, 607, 629, 633, 635, 644, 646, 647, 654, 676, 678], "1": [12, 31, 45, 55, 74, 119, 123, 126, 143, 163, 165, 169, 170, 188, 268, 369, 374, 375, 376, 381, 420, 421, 423, 428, 429, 431, 432, 434, 435, 437, 438, 439, 442, 448, 453, 454, 456, 465, 477, 487, 506, 557, 573, 574, 582, 583, 595, 602, 604, 606, 607, 608, 610, 612, 615, 617, 618, 620, 621, 625, 629, 630, 631, 632, 635, 636, 637, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 657, 659, 660, 661, 666, 669, 671, 672, 673, 675, 677, 680], "sinc": [12, 426, 454, 604, 606, 607, 608, 630, 657, 658, 672, 675, 677], "evolv": [12, 604], "constantli": 12, "guaranti": 12, "work": [12, 123, 126, 249, 297, 322, 330, 355, 374, 376, 460, 605, 606, 608, 610, 611, 612, 614, 615, 617, 618, 626, 654, 669, 671, 672, 673, 675, 676, 677, 679, 680, 682], "necessari": [12, 604, 611], "user": [12, 29, 48, 159, 160, 166, 355, 382, 437, 453, 480, 573, 600, 604, 607, 608, 610, 612, 614, 615, 660, 669, 671, 672, 673, 675, 676, 677, 679, 680, 682], "adapt": [12, 119, 604, 682], "code": [12, 29, 163, 451, 462, 604, 606, 610, 612, 614, 618, 620, 621, 623, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 669, 679, 682], "accord": [12, 162, 378, 421, 429, 441, 442, 443, 445, 446], "its": [12, 454, 592, 606, 607, 610, 611, 614, 615, 617, 618, 669, 679, 680, 682], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 366, 377, 393, 394, 404, 405, 465, 466, 478, 479, 481, 490, 509, 607, 608, 611, 614], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 137, 163, 164, 165, 166, 168, 169, 170, 182, 203, 204, 205, 206, 208, 227, 287, 316, 349, 355, 378, 381, 382, 398, 408, 410, 417, 418, 420, 421, 425, 431, 434, 439, 449, 465, 473, 477, 479, 480, 483, 484, 490, 499, 500, 501, 502, 503, 504, 505, 506, 527, 528, 529, 530, 531, 532, 533, 551, 553, 554, 555, 556, 563, 572, 576, 580, 581, 588, 589, 599, 601, 604, 605, 607, 608, 610, 611, 612, 614, 615, 617, 618, 623, 626, 629, 630, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 654, 655, 657, 658, 660, 665, 666, 667, 669, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681], "issu": [12, 29, 297, 330, 378, 381, 607, 612, 613, 614, 615, 623, 624, 627, 660, 669, 678, 679, 680, 682], "upstream": [12, 605, 615, 617, 680], "reflect": [12, 47, 117, 128, 144, 145, 158, 159, 160, 161, 166, 168, 169, 170, 173, 189, 190, 204, 205, 224, 284, 313, 346, 363, 410, 421, 423, 424, 426, 430, 433, 437, 438, 439, 442, 444, 445, 446, 447, 448, 453, 454, 460, 479, 549, 562, 563, 565, 566, 587, 604, 605, 606, 610, 611, 612, 614, 619, 621, 622, 623, 625, 626, 629, 630, 631, 632, 634, 635, 636, 637, 639, 642, 645, 648, 649, 651, 652, 653, 654, 655, 657, 658, 662, 665, 667, 669, 671, 672, 673, 675, 676, 677, 678], "dbz": [12, 158, 162, 169, 170, 423, 430, 433, 437, 438, 448, 453, 460, 605, 607, 610, 611, 625, 629, 637, 644, 645, 651, 654, 657, 658, 660, 677], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 163, 164, 165, 425, 439, 440, 451, 462, 463, 490, 549, 572, 596, 608, 610, 611, 614, 615, 619, 622, 623, 625, 635, 639, 647, 649, 660, 664, 668, 669, 670, 676, 677, 678, 680], "v": [12, 41, 42, 44, 393, 394, 397, 404, 405, 407, 427, 429, 437, 462, 463, 606, 611, 612, 615, 646, 647, 658, 661, 680], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 583, 677], "width": [12, 248, 262, 322, 355, 421, 606, 607, 608, 610, 614, 677], "w": [12, 62, 165, 437, 453, 494, 604, 659], "wu": [12, 417, 675], "wv": 12, "wvu": 12, "differenti": [12, 17, 158, 159, 160, 169, 170, 204, 439, 443, 446, 453, 454, 455, 456, 458, 461, 614, 639, 654, 669], "zdr": [12, 159, 160, 162, 204, 427, 453, 660], "zdru": 12, "co": [12, 119, 123, 126, 427, 429, 438, 439, 448, 604, 606, 630, 654, 657, 658], "polar": [12, 372, 373, 456, 607, 630], "correl": [12, 168, 204, 205, 451, 453, 587, 610, 638, 639, 656, 657, 658], "coeffici": [12, 158, 159, 160, 169, 170, 423, 437, 453, 587, 604, 614, 638, 639, 656], "rhohv": [12, 162, 168, 204, 205, 427, 429, 453, 614, 638, 660, 677], "rhohvu": 12, "phase": [12, 17, 158, 159, 160, 165, 169, 170, 204, 434, 443, 446, 451, 453, 454, 455, 456, 458, 461, 614, 639, 669, 673], "phidp": [12, 159, 160, 169, 170, 204, 454, 614, 669], "uphidp": 12, "uphidpu": 12, "kdp": [12, 169, 170, 443, 446, 453, 454, 455, 456, 614, 659, 660, 669], "ukdp": 12, "ukdpu": 12, "signal": [12, 162, 168, 205, 424, 583, 607, 612], "qualiti": [12, 162, 168, 205, 443, 455, 456, 604, 610, 612, 625], "sqi": [12, 614], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 159, 160, 206, 453, 604, 659], "temp": [12, 614], "posit": [12, 45, 74, 123, 126, 159, 160, 163, 426, 454, 477, 506, 607, 614, 629, 635, 637, 677], "bin": [12, 45, 74, 119, 120, 121, 160, 377, 428, 431, 432, 434, 436, 439, 440, 477, 506, 582, 583, 604, 614, 629, 654, 673, 677], "respect": [12, 45, 74, 438, 448, 453, 460, 477, 506, 608], "iso0": [12, 159, 203, 453], "cfradial_outfil": 13, "head": [13, 45, 74, 208, 477, 506], "ridgelin": 13, "instrument": [13, 45, 74, 143, 155, 168, 188, 200, 204, 205, 384, 477, 506, 612, 614, 660, 673, 677], "rxm": [13, 614], "25": [13, 418, 419, 437, 604, 606, 610, 614, 625, 629, 646, 647, 650, 655, 660, 671, 676], "rli": 13, "here": [13, 133, 135, 143, 150, 155, 178, 180, 188, 195, 200, 260, 604, 605, 606, 607, 608, 610, 612, 613, 617, 629, 654, 657, 658, 660, 665, 669, 671, 676, 679, 682], "float": [13, 24, 58, 123, 126, 133, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 178, 203, 204, 205, 206, 208, 209, 222, 224, 225, 229, 230, 232, 233, 234, 235, 247, 248, 249, 250, 251, 252, 253, 260, 262, 263, 264, 265, 266, 267, 268, 269, 282, 284, 285, 289, 290, 292, 293, 294, 297, 298, 311, 313, 314, 320, 321, 322, 323, 325, 326, 327, 330, 331, 344, 346, 347, 353, 354, 355, 356, 358, 359, 360, 363, 382, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 490, 553, 557, 568, 569, 570, 571, 572, 573, 575, 576, 582, 583, 584, 585, 586, 587, 588, 589, 590, 597, 598, 608, 612], "offset": [13, 158, 169, 170, 208, 268, 297, 320, 330, 353, 438, 448, 582, 590, 604, 607, 608, 658], "exist": [13, 28, 32, 46, 47, 49, 77, 133, 135, 143, 150, 155, 167, 168, 178, 180, 188, 195, 200, 204, 205, 378, 454, 466, 475, 478, 479, 481, 509, 551, 601, 606, 607, 608, 614, 617, 620, 669, 671], "enter": [13, 605, 608, 615, 680], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 126, 169, 170, 206, 208, 222, 227, 228, 247, 248, 250, 252, 260, 262, 264, 266, 268, 282, 287, 288, 297, 311, 316, 317, 320, 322, 330, 344, 349, 350, 353, 355, 428, 434, 462, 467, 487, 488, 569, 571, 573, 575, 576, 584, 585, 586, 590, 594, 597, 606, 608, 612, 614, 615, 651, 655, 677, 680], "sinarame_h5": [14, 15, 614], "take": [15, 47, 164, 420, 421, 424, 454, 479, 606, 607, 608, 615, 625, 626, 629, 637, 657, 658, 680], "everi": [15, 455, 456, 615, 616, 669, 680], "one": [15, 25, 31, 39, 40, 45, 47, 74, 133, 135, 143, 150, 155, 167, 168, 178, 180, 188, 195, 200, 205, 380, 381, 383, 410, 417, 420, 421, 426, 454, 455, 456, 462, 465, 473, 474, 477, 479, 506, 574, 575, 576, 582, 587, 591, 596, 605, 607, 608, 610, 611, 613, 614, 615, 617, 623, 628, 629, 630, 635, 654, 669, 672, 677, 680, 682], "volum": [15, 45, 74, 163, 165, 166, 322, 355, 374, 375, 376, 384, 410, 418, 419, 428, 431, 432, 434, 435, 436, 449, 453, 477, 506, 575, 576, 578, 598, 601, 604, 607, 608, 610, 612, 614, 623, 630, 634, 652, 678], "folder": [15, 604, 612, 615, 680], "cfradial": [15, 369, 605, 614, 623, 634, 635, 649, 651, 652, 667, 671, 678], "each": [15, 31, 39, 41, 45, 55, 74, 138, 158, 159, 160, 164, 165, 166, 183, 222, 229, 233, 234, 235, 251, 253, 263, 265, 267, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 378, 382, 384, 410, 417, 420, 421, 435, 439, 453, 462, 465, 473, 477, 487, 506, 554, 555, 556, 604, 607, 608, 611, 612, 614, 615, 625, 631, 646, 649, 654, 657, 658, 676, 677, 680], "act": [16, 442, 445, 446, 604, 614, 654, 657, 671], "commun": [16, 604, 612, 615, 669, 680, 682], "softwar": [16, 234, 375, 382, 608, 610, 615, 669, 671, 672, 673, 675, 676, 677, 679, 680], "namespac": [16, 614], "current": [16, 27, 33, 133, 135, 143, 150, 155, 163, 178, 180, 188, 195, 200, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 246, 247, 248, 249, 251, 253, 260, 261, 262, 263, 265, 267, 270, 272, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 299, 301, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 329, 332, 334, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 362, 373, 411, 413, 428, 431, 432, 434, 435, 436, 454, 467, 582, 604, 605, 607, 608, 610, 612, 615, 680], "extens": [16, 210, 242, 255, 270, 299, 332, 382, 607, 617, 679], "wradlib": [16, 614, 669], "http": [16, 374, 375, 376, 423, 426, 427, 429, 438, 439, 442, 443, 444, 448, 451, 453, 573, 587, 604, 606, 608, 610, 612, 615, 626, 638, 647, 654, 657, 658, 669, 679, 680, 682], "org": [16, 423, 426, 427, 429, 438, 439, 442, 443, 444, 448, 451, 453, 573, 587, 612, 614, 615, 638, 654, 657, 658, 669, 680], "phidp_field": [17, 158, 159, 160, 169, 170, 454, 455, 456, 461, 620, 659], "phidp_texture_field": [17, 461], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 124, 128, 144, 145, 158, 159, 160, 168, 169, 170, 173, 189, 190, 203, 204, 205, 206, 208, 268, 297, 330, 420, 421, 424, 425, 437, 438, 448, 451, 458, 459, 461, 462, 463, 465, 467, 477, 488, 489, 506, 572, 573, 582, 583, 584, 585, 586, 597, 604, 614, 615, 620, 623, 629, 630, 646, 647, 653, 657, 662, 665, 669, 673, 676, 678, 680], "textur": [17, 204, 425, 461, 572, 600, 614, 665, 669, 673], "real": [17, 163, 461, 623, 634, 657, 658, 682], "part": [17, 439, 441, 461, 582, 607, 608, 610, 614, 625, 654, 669, 671, 672, 673, 675, 676, 677], "complex": [17, 461], "shift": [17, 169, 170, 208, 268, 297, 330, 452, 455, 461, 582, 614, 673], "texture_field": [17, 461], "refer": [17, 31, 45, 47, 74, 119, 123, 126, 158, 159, 160, 162, 163, 164, 165, 169, 170, 374, 375, 376, 417, 423, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 447, 448, 453, 454, 455, 456, 458, 460, 461, 462, 463, 465, 477, 479, 506, 573, 583, 587, 605, 610, 614, 615, 654, 669, 677, 680], "gourlei": [17, 162, 461], "j": [17, 123, 126, 165, 169, 170, 426, 427, 429, 437, 438, 442, 448, 453, 455, 456, 458, 460, 461, 462, 463, 573, 605, 608, 612, 615, 620, 621, 631, 632, 639, 640, 642, 644, 648, 651, 657, 658, 669, 680], "p": [17, 20, 22, 28, 119, 123, 126, 417, 431, 432, 434, 437, 441, 458, 461, 551, 573, 583, 607, 615, 669, 680], "tabari": [17, 461], "parent": [17, 461], "du": [17, 461], "chatelet": [17, 461], "fuzzi": [17, 461], "logic": [17, 133, 135, 143, 150, 155, 178, 180, 188, 195, 200, 461], "algorithm": [17, 128, 163, 164, 165, 173, 417, 421, 437, 438, 448, 453, 454, 460, 461, 604, 614, 615, 619, 622, 623, 665, 669, 678, 680], "separ": [17, 418, 419, 437, 451, 460, 461, 583, 587, 625, 630, 638, 658, 682], "precipit": [17, 421, 423, 432, 434, 437, 443, 447, 453, 461, 587, 604, 606, 608, 614, 615, 629, 638, 657, 658, 660, 669, 680], "nonprecipit": [17, 461], "echo": [17, 437, 438, 448, 453, 461, 614, 654, 657, 658, 676], "polarimetr": [17, 158, 159, 160, 162, 169, 170, 428, 429, 431, 432, 434, 442, 443, 453, 458, 461, 573, 614, 620], "observ": [17, 119, 432, 434, 438, 448, 454, 461, 654, 657, 658], "journal": [17, 163, 165, 417, 441, 443, 461, 583, 615, 669, 680], "atmospher": [17, 45, 74, 119, 120, 163, 164, 421, 441, 457, 461, 477, 506, 604, 607, 608, 610, 612, 615, 625, 669, 671, 672, 673, 675, 676, 677, 680], "ocean": [17, 163, 169, 170, 427, 429, 438, 441, 447, 448, 458, 461, 573, 604, 608, 612, 625, 657, 658], "technologi": [17, 163, 441, 461], "24": [17, 461, 604, 606, 614, 626, 678], "8": [17, 62, 158, 163, 169, 204, 247, 249, 251, 253, 263, 265, 267, 437, 453, 461, 494, 604, 606, 607, 608, 610, 611, 617, 626, 629, 636, 646, 650, 654, 655, 658, 662, 665, 671, 672, 673, 675, 676, 677], "1439": [17, 461], "1451": [17, 461], "filetyp": [19, 25, 608], "need": [19, 45, 54, 56, 57, 74, 382, 438, 448, 477, 486, 488, 489, 506, 584, 597, 606, 607, 608, 611, 612, 613, 614, 615, 617, 625, 629, 635, 657, 658, 669, 671, 672, 673, 675, 676, 677, 679, 680, 682], "being": [19, 21, 163, 222, 224, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 292, 293, 294, 311, 313, 321, 322, 325, 326, 327, 344, 346, 354, 355, 358, 359, 360, 421, 426, 456, 588, 589, 606, 608, 610, 611, 614, 647, 679], "keep": [19, 163, 378, 598, 608, 615, 629, 657, 658, 680, 682], "string": [19, 31, 45, 74, 224, 227, 228, 232, 235, 248, 262, 284, 287, 288, 292, 294, 313, 316, 317, 318, 319, 320, 323, 325, 327, 346, 349, 350, 351, 352, 353, 356, 358, 360, 420, 421, 449, 451, 455, 456, 458, 462, 463, 465, 477, 506, 606, 607, 608, 614, 615, 635, 680], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 128, 163, 164, 173, 208, 268, 297, 330, 386, 469, 470, 471, 495, 496, 497, 498, 523, 524, 525, 526, 608, 612, 614, 637, 660], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 133, 143, 144, 145, 155, 170, 178, 188, 189, 190, 200, 378, 454, 455, 456, 458, 462, 463, 465, 477, 501, 504, 505, 506, 529, 532, 533, 585, 604, 606, 608, 614, 625, 643], "dic": [22, 31, 45, 46, 74, 386, 465, 477, 478, 506], "colormap": [23, 207, 222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 382, 607, 608, 614, 623, 634, 638, 652, 658, 659, 678], "select": [24, 50, 59, 88, 165, 428, 431, 432, 434, 436, 482, 491, 520, 604, 607, 610, 614, 617, 660], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 123, 126, 128, 155, 158, 159, 161, 163, 164, 166, 167, 168, 169, 170, 173, 200, 203, 204, 205, 206, 208, 221, 222, 229, 232, 233, 234, 235, 236, 249, 263, 268, 281, 282, 289, 292, 293, 294, 295, 297, 310, 311, 320, 321, 322, 325, 326, 327, 328, 330, 343, 344, 353, 354, 355, 358, 359, 360, 361, 378, 382, 410, 418, 419, 420, 421, 424, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 442, 444, 445, 446, 448, 452, 453, 454, 455, 458, 460, 462, 463, 467, 477, 482, 483, 484, 486, 487, 488, 489, 490, 506, 557, 574, 582, 590, 604, 605, 606, 607, 608, 610, 611, 612, 615, 617, 618, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 671, 672, 673, 675, 676, 677, 678, 679, 680], "limit": [24, 163, 164, 168, 169, 170, 203, 204, 205, 206, 224, 237, 260, 284, 296, 313, 329, 346, 362, 372, 383, 418, 419, 454, 598, 607, 608, 611, 614, 630, 631, 632, 636, 654, 675], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 143, 155, 163, 164, 165, 167, 168, 188, 200, 204, 205, 210, 212, 221, 222, 224, 229, 233, 234, 235, 270, 272, 281, 282, 284, 289, 293, 294, 299, 301, 310, 311, 313, 321, 322, 326, 327, 332, 334, 343, 344, 346, 354, 355, 359, 360, 374, 375, 376, 378, 410, 418, 419, 425, 431, 434, 462, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 499, 500, 501, 502, 503, 504, 505, 506, 519, 520, 521, 522, 527, 528, 529, 530, 531, 532, 533, 554, 555, 575, 576, 582, 604, 605, 607, 608, 610, 611, 612, 614, 621, 623, 625, 628, 629, 633, 646, 647, 649, 654, 655, 657, 658, 660, 661, 665, 673, 676, 677, 678], "get": [24, 239, 240, 241, 259, 369, 386, 396, 406, 410, 604, 605, 607, 608, 610, 611, 614, 626, 646, 647, 654, 657, 658, 660, 671, 673, 676, 677, 679, 681, 682], "relat": [24, 160, 207, 383, 423, 438, 442, 445, 446, 447, 448, 455, 460, 573, 607, 614, 615, 657, 658, 669, 679, 680], "instac": 24, "nyquist": [24, 58, 163, 164, 165, 425, 490, 572, 614, 660, 665, 673, 677], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 143, 155, 160, 163, 164, 166, 167, 169, 170, 188, 200, 204, 210, 211, 212, 221, 225, 229, 230, 232, 233, 234, 242, 243, 244, 245, 247, 249, 255, 256, 257, 258, 260, 263, 270, 271, 272, 281, 285, 289, 290, 292, 293, 299, 300, 301, 310, 314, 321, 322, 323, 325, 326, 332, 333, 334, 343, 347, 354, 355, 356, 358, 359, 382, 418, 419, 421, 425, 428, 430, 431, 432, 434, 438, 448, 454, 456, 462, 465, 467, 477, 483, 484, 486, 487, 488, 489, 490, 506, 554, 555, 556, 557, 572, 573, 574, 583, 585, 600, 606, 608, 614, 615, 680], "consid": [24, 158, 166, 167, 363, 418, 419, 437, 438, 448, 574, 575, 576, 582, 583, 590, 630, 657], "vmin": [24, 222, 224, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 292, 293, 294, 311, 313, 321, 322, 325, 326, 327, 344, 346, 354, 355, 358, 359, 360, 382, 604, 605, 606, 607, 608, 610, 611, 612, 614, 620, 621, 625, 626, 629, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 660, 665, 666, 667, 672, 673, 675, 676], "vmax": [24, 222, 224, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 292, 293, 294, 311, 313, 321, 322, 325, 326, 327, 344, 346, 354, 355, 358, 359, 360, 382, 604, 605, 606, 607, 608, 610, 611, 612, 614, 620, 621, 625, 626, 629, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 660, 665, 666, 667, 672, 673, 675, 676], "2": [24, 119, 123, 165, 166, 167, 204, 222, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 247, 248, 249, 251, 253, 262, 263, 265, 267, 282, 284, 287, 288, 289, 290, 291, 292, 293, 294, 296, 311, 313, 316, 317, 321, 324, 325, 326, 327, 329, 344, 346, 349, 350, 354, 355, 357, 358, 359, 360, 362, 374, 375, 376, 378, 394, 405, 410, 417, 418, 419, 421, 425, 427, 429, 432, 437, 438, 439, 448, 453, 454, 462, 553, 557, 572, 587, 604, 606, 607, 608, 610, 612, 615, 618, 621, 622, 627, 629, 630, 635, 636, 637, 640, 642, 643, 646, 647, 650, 654, 655, 657, 659, 660, 661, 665, 669, 671, 672, 673, 675, 676, 677, 680], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 386, 421, 465, 479, 480, 482, 483, 484, 486, 601, 607, 613, 614, 658, 672], "field_map": 25, "anoth": [25, 410, 428, 431, 432, 434, 436, 587, 607, 608, 614, 629, 671, 676, 679, 682], "fill": [27, 158, 159, 160, 460, 608, 612, 614, 658, 671, 672], "empti": [28, 394, 405, 455, 456, 551, 553, 556, 605, 614, 671], "control": [29, 163, 378, 380, 381, 421, 453, 454, 610, 611, 612, 654, 675], "singl": [29, 164, 165, 166, 167, 227, 228, 230, 232, 287, 288, 290, 292, 316, 317, 323, 325, 349, 350, 356, 358, 382, 421, 559, 582, 601, 604, 607, 608, 610, 614, 615, 623, 625, 628, 629, 633, 655, 678, 680], "self": [29, 169, 170, 607, 608, 615, 672, 675, 680], "descrip": 29, "exampl": [29, 47, 128, 173, 222, 229, 232, 233, 234, 235, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 386, 410, 414, 415, 416, 420, 421, 462, 475, 479, 582, 604, 605, 606, 607, 608, 609, 611, 612, 614, 615, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 671, 673, 676, 677, 678, 680, 682], "default_config": 29, "modifi": [29, 45, 74, 166, 477, 506, 605, 614, 615, 623, 634, 652, 678, 680], "environment": [29, 604, 605, 669, 679], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 208, 238, 254, 268, 297, 330, 380, 381, 410, 418, 442, 449, 453, 454, 457, 458, 465, 473, 474, 477, 487, 506, 583, 604, 606, 607, 611, 614, 625, 629, 654, 655, 657, 658, 660, 669, 671, 672, 677, 679], "pyart_config": 29, "point": [29, 31, 33, 47, 124, 158, 159, 160, 170, 225, 230, 247, 248, 262, 285, 290, 297, 314, 319, 320, 323, 347, 352, 353, 356, 372, 373, 376, 378, 382, 417, 420, 421, 428, 431, 432, 434, 436, 438, 439, 448, 460, 465, 467, 479, 553, 574, 583, 586, 590, 601, 604, 606, 608, 610, 614, 617, 623, 636, 643, 653, 654, 657, 662, 665, 669, 673, 675, 677, 678], "new": [29, 47, 48, 50, 133, 135, 143, 150, 155, 166, 178, 180, 188, 195, 200, 428, 431, 432, 434, 435, 436, 440, 452, 458, 462, 479, 480, 482, 587, 598, 610, 611, 614, 615, 617, 618, 629, 655, 658, 659, 665, 669, 672, 673, 680, 682], "execut": [29, 614, 622, 627, 633, 652, 662, 663, 668, 678], "full": [29, 62, 166, 167, 378, 494, 610, 612, 614, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667], "permiss": 29, "secur": 29, "do": [29, 45, 74, 163, 168, 204, 205, 382, 383, 477, 506, 608, 610, 611, 612, 614, 615, 626, 657, 658, 671, 672, 673, 675, 676, 679, 680, 682], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 128, 133, 135, 143, 150, 155, 158, 160, 169, 170, 173, 178, 180, 188, 195, 200, 234, 247, 383, 384, 386, 397, 399, 407, 418, 419, 420, 437, 449, 454, 455, 456, 462, 465, 479, 486, 488, 489, 582, 583, 602, 607, 608, 614, 615, 617, 620, 641, 654, 665, 666, 667, 669, 676, 680], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 144, 145, 163, 189, 190, 377, 386, 465, 475, 477, 479, 483, 484, 486, 488, 506, 567, 604, 606, 608, 611, 614, 615, 616, 617, 618, 654, 657, 658, 660, 672, 675, 677, 679, 680], "home": [29, 610, 612, 615, 620, 626, 680, 682], "make": [29, 31, 465, 553, 557, 558, 560, 561, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 618, 629, 637, 646, 654, 657, 665, 669, 671, 672, 679, 680, 682], "adjust": [29, 123, 237, 296, 329, 362, 437, 608, 614, 635, 638, 646, 658], "login": [29, 612], "": [29, 31, 45, 58, 62, 74, 119, 120, 123, 126, 164, 165, 169, 170, 210, 212, 222, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 270, 272, 282, 289, 293, 294, 299, 301, 311, 321, 326, 327, 332, 334, 344, 354, 359, 360, 391, 392, 398, 402, 403, 408, 410, 412, 417, 427, 431, 438, 439, 441, 442, 448, 450, 451, 454, 455, 456, 458, 460, 463, 465, 477, 490, 494, 506, 583, 587, 604, 605, 606, 607, 608, 610, 611, 612, 614, 616, 617, 625, 626, 629, 635, 637, 638, 647, 654, 655, 657, 658, 660, 661, 665, 669, 671, 672, 673, 675, 676, 677, 681], "also": [29, 45, 74, 133, 178, 207, 223, 246, 261, 283, 312, 345, 375, 376, 380, 382, 384, 396, 406, 410, 418, 438, 448, 477, 506, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 625, 629, 654, 657, 658, 669, 671, 675, 677, 679, 680, 681, 682], "shell": 29, "session": 29, "modif": [29, 47, 479, 614], "last": [29, 45, 74, 163, 222, 223, 229, 233, 234, 235, 246, 251, 253, 254, 261, 263, 265, 267, 282, 283, 289, 293, 294, 311, 312, 321, 322, 326, 327, 330, 344, 345, 354, 355, 359, 360, 477, 506, 582, 607, 608, 610, 613, 614, 631, 658, 677], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 138, 158, 159, 160, 164, 165, 170, 183, 247, 485, 493, 501, 505, 519, 522, 529, 533, 604, 606, 607, 608, 610, 611, 612, 614, 615, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 669, 680], "interact": [30, 604, 607], "weather": [30, 119, 163, 417, 427, 428, 432, 454, 606, 608, 611, 614, 615, 625, 635, 669, 671, 672, 673, 675, 676, 677, 680], "time": [31, 39, 40, 45, 74, 163, 210, 212, 222, 224, 229, 233, 234, 235, 270, 272, 282, 284, 289, 293, 294, 299, 301, 311, 313, 321, 322, 326, 327, 332, 334, 344, 346, 354, 355, 359, 360, 367, 368, 378, 380, 381, 410, 413, 421, 428, 431, 432, 434, 435, 436, 437, 449, 451, 465, 473, 474, 477, 506, 577, 580, 604, 605, 606, 608, 610, 612, 614, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 671, 677, 682], "origin_latitud": [31, 465], "origin_longitud": [31, 465], "origin_altitud": [31, 465], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 126, 208, 210, 219, 222, 224, 227, 229, 232, 233, 234, 235, 237, 247, 249, 251, 253, 263, 265, 267, 268, 270, 279, 282, 284, 287, 289, 292, 293, 294, 296, 297, 299, 308, 311, 313, 316, 319, 321, 325, 326, 327, 329, 330, 332, 341, 344, 346, 349, 352, 354, 358, 359, 360, 362, 410, 414, 415, 416, 417, 418, 419, 420, 421, 427, 438, 448, 451, 452, 460, 465, 471, 473, 489, 497, 525, 553, 604, 606, 607, 608, 611, 612, 618, 629, 636, 637, 646, 647, 654, 655, 657, 658], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 121, 158, 160, 169, 170, 220, 280, 309, 342, 372, 382, 383, 414, 415, 416, 417, 419, 420, 421, 423, 426, 437, 438, 442, 445, 446, 447, 448, 451, 465, 471, 473, 477, 489, 497, 506, 525, 553, 611, 620, 630, 644, 646, 647, 657, 658, 660, 672], "radar_latitud": [31, 465, 584, 597], "radar_longitud": [31, 465, 584, 597], "radar_altitud": [31, 465], "radar_tim": [31, 465], "radar_nam": [31, 465], "store": [31, 45, 74, 163, 164, 165, 386, 421, 426, 428, 431, 432, 434, 435, 436, 465, 477, 506, 604, 606, 608, 612, 614, 625, 655, 669, 672, 675, 677, 682], "rectilinear": [31, 465], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 126, 372, 409, 410, 417, 420, 421, 465, 467, 473, 477, 506, 623, 628, 633, 636, 669, 670, 678], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 126, 222, 229, 233, 234, 235, 251, 253, 263, 265, 267, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 381, 409, 410, 412, 417, 421, 435, 439, 465, 467, 473, 477, 488, 506, 553, 572, 604, 606, 607, 608, 614, 619, 623, 626, 628, 629, 630, 631, 632, 655, 669, 675, 677], "section": [31, 45, 47, 74, 222, 247, 282, 311, 344, 419, 421, 465, 477, 479, 506, 575, 576, 604, 608, 609, 613, 614, 615, 623, 634, 652, 654, 657, 658, 669, 678, 680], "To": [31, 47, 168, 203, 204, 205, 206, 380, 381, 383, 465, 479, 601, 606, 611, 612, 615, 617, 658, 660, 669, 672, 675, 679, 680, 682], "creat": [31, 42, 45, 47, 50, 74, 163, 164, 165, 166, 168, 203, 204, 205, 206, 207, 208, 221, 235, 238, 254, 268, 281, 294, 297, 310, 322, 327, 330, 343, 355, 360, 375, 380, 381, 382, 383, 384, 420, 421, 428, 431, 432, 434, 435, 436, 458, 463, 465, 475, 477, 479, 482, 506, 595, 596, 598, 604, 608, 610, 614, 615, 620, 621, 623, 626, 629, 631, 632, 634, 635, 637, 651, 652, 653, 657, 658, 662, 667, 669, 670, 672, 675, 678, 680], "legaci": [31, 426, 465], "from_legacy_paramet": [31, 465], "ax": [31, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 246, 247, 248, 249, 251, 253, 260, 261, 262, 263, 265, 267, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 354, 355, 357, 358, 359, 360, 361, 362, 414, 415, 416, 438, 448, 452, 460, 465, 604, 605, 606, 607, 608, 610, 611, 612, 614, 620, 621, 625, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 654, 655, 656, 657, 658, 659, 660, 661, 665, 673], "moment": [31, 39, 45, 74, 117, 162, 163, 164, 165, 168, 204, 205, 374, 375, 376, 421, 459, 465, 473, 477, 506, 549, 583, 607, 614, 626, 634, 652, 669, 676, 678], "describ": [31, 45, 74, 168, 203, 204, 205, 206, 248, 262, 448, 465, 477, 506, 610, 657, 658], "geograph": [31, 45, 56, 74, 122, 123, 124, 125, 126, 297, 322, 330, 355, 381, 421, 465, 477, 488, 506, 608, 669], "origin": [31, 39, 163, 164, 165, 208, 268, 297, 330, 378, 380, 381, 386, 388, 417, 421, 448, 465, 473, 575, 576, 604, 605, 606, 608, 614, 615, 629, 630, 631, 632, 654, 656, 657, 658, 680], "distanc": [31, 39, 57, 119, 120, 121, 222, 233, 282, 293, 311, 326, 344, 359, 410, 411, 414, 415, 416, 418, 419, 420, 421, 428, 430, 434, 451, 453, 456, 465, 473, 489, 573, 575, 576, 584, 585, 586, 597, 604, 605, 606, 629, 639, 644, 645, 646], "axi": [31, 39, 45, 74, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 246, 247, 248, 249, 251, 253, 260, 261, 262, 263, 265, 267, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 311, 312, 313, 314, 315, 316, 317, 321, 322, 324, 325, 326, 327, 329, 344, 345, 346, 347, 348, 349, 350, 354, 355, 357, 358, 359, 360, 362, 372, 382, 465, 473, 477, 506, 574, 604, 607, 608, 612, 620, 636, 647, 654, 657, 661, 677], "dimension": [31, 39, 163, 165, 417, 439, 448, 460, 465, 473, 629, 654, 657, 658], "space": [31, 45, 74, 124, 224, 284, 313, 346, 383, 421, 437, 438, 448, 451, 465, 477, 506, 604, 607, 626, 657, 671], "along": [31, 164, 167, 247, 250, 251, 252, 253, 264, 265, 266, 267, 435, 465, 573, 574, 575, 576, 585, 586, 598, 600, 606, 607, 608, 614, 657, 665], "three": [31, 165, 168, 205, 382, 439, 448, 460, 465, 607, 617, 654, 657, 658], "repeat": [31, 465], "throughout": [31, 465, 654], "nz": [31, 465], "nx": [31, 465], "ny": [31, 465], "dimens": [31, 163, 372, 418, 419, 421, 425, 426, 438, 448, 449, 451, 454, 456, 460, 465, 572, 598, 604, 607, 608, 614, 630, 655, 657, 658, 671, 675, 677], "transform": [31, 45, 74, 122, 123, 124, 125, 126, 227, 234, 287, 297, 316, 330, 349, 355, 381, 421, 437, 453, 465, 477, 506, 606, 608, 611, 614, 635, 657, 658], "proj": [31, 45, 74, 122, 124, 125, 260, 330, 465, 477, 506, 614], "pyart_aeqd": [31, 45, 74, 122, 124, 125, 465, 477, 506], "nativ": [31, 45, 74, 122, 124, 125, 366, 421, 426, 465, 477, 506, 614], "azimuth": [31, 45, 51, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 126, 208, 209, 222, 224, 227, 229, 233, 234, 235, 251, 253, 263, 265, 267, 268, 269, 282, 284, 287, 289, 293, 294, 297, 298, 311, 313, 316, 321, 322, 326, 327, 330, 331, 344, 346, 349, 354, 355, 359, 360, 378, 382, 419, 426, 428, 434, 435, 456, 462, 463, 465, 477, 483, 487, 489, 499, 506, 527, 573, 575, 576, 582, 584, 585, 601, 607, 608, 614, 615, 649, 651, 655, 671, 677, 680], "equidist": [31, 45, 74, 122, 123, 124, 125, 126, 227, 287, 316, 349, 355, 382, 421, 465, 477, 506, 608], "pyproj": [31, 45, 74, 122, 124, 125, 465, 477, 506, 614, 679], "projparam": [31, 34, 45, 74, 122, 124, 125, 465, 468, 477, 506], "special": [31, 45, 74, 465, 477, 506, 608], "_include_lon_0_lat_0": [31, 45, 74, 465, 477, 506], "remov": [31, 45, 56, 57, 74, 158, 159, 160, 163, 168, 203, 204, 205, 206, 222, 229, 233, 234, 235, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 387, 393, 394, 400, 404, 405, 438, 439, 448, 465, 477, 488, 489, 506, 606, 608, 611, 612, 614, 615, 620, 631, 637, 646, 654, 657, 673, 676, 680], "interpret": [31, 45, 74, 164, 165, 381, 429, 465, 477, 506, 588, 589, 608, 654], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 122, 123, 124, 126, 208, 227, 228, 247, 248, 249, 250, 252, 253, 260, 262, 264, 266, 267, 268, 287, 288, 297, 316, 317, 318, 320, 322, 330, 349, 350, 351, 353, 355, 421, 428, 434, 436, 465, 467, 470, 473, 477, 488, 506, 573, 584, 585, 586, 597, 604, 606, 607, 608, 611, 612, 623, 624, 627, 636, 643, 650, 655, 657, 658, 671, 672, 677, 678], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 122, 123, 124, 126, 208, 227, 228, 247, 248, 249, 250, 251, 252, 260, 262, 264, 265, 266, 268, 287, 288, 297, 316, 317, 318, 320, 322, 330, 349, 350, 351, 353, 355, 421, 428, 434, 436, 465, 467, 470, 473, 477, 488, 506, 573, 584, 585, 586, 597, 604, 606, 607, 608, 611, 612, 623, 624, 627, 636, 643, 650, 655, 657, 658, 671, 672, 677, 678], "ad": [31, 45, 47, 74, 167, 169, 170, 254, 320, 353, 418, 420, 437, 438, 448, 465, 477, 479, 506, 557, 605, 607, 610, 612, 614, 615, 646, 647, 671, 672, 679, 680], "lon_0": [31, 45, 74, 123, 126, 322, 355, 465, 477, 506, 643], "lat_0": [31, 45, 74, 123, 126, 322, 355, 465, 477, 506, 643], "get_projparam": [31, 465], "evalu": [31, 386, 388, 443, 465, 610, 614], "locat": [31, 33, 45, 55, 56, 57, 74, 208, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 246, 247, 249, 251, 253, 260, 261, 263, 265, 267, 268, 282, 283, 284, 287, 288, 289, 290, 291, 293, 294, 297, 311, 312, 313, 316, 317, 319, 321, 322, 323, 324, 326, 327, 330, 344, 345, 346, 349, 350, 352, 354, 355, 356, 357, 359, 360, 374, 375, 377, 383, 410, 417, 420, 421, 465, 467, 477, 487, 488, 489, 506, 553, 567, 573, 584, 585, 586, 604, 605, 606, 608, 610, 614, 615, 641, 643, 655, 665, 666, 667, 669, 675, 679, 680], "up": [31, 45, 74, 133, 135, 143, 150, 155, 159, 160, 178, 180, 188, 195, 200, 418, 419, 423, 426, 432, 439, 442, 445, 446, 457, 465, 477, 506, 572, 605, 606, 610, 612, 613, 614, 617, 654, 657, 673, 677, 681], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 247, 378, 384, 435, 449, 465, 477, 492, 493, 504, 505, 506, 521, 522, 532, 533, 578, 604, 605, 606, 607, 608, 610, 611, 612, 615, 625, 635, 636, 646, 647, 669, 671, 680, 681], "collect": [31, 143, 155, 188, 200, 368, 374, 375, 376, 378, 409, 420, 421, 465, 607, 608, 615, 625, 640, 655, 669, 680, 681, 682], "nradar": [31, 465], "whose": [31, 377, 416, 465, 604], "wa": [31, 56, 57, 143, 164, 165, 188, 222, 229, 233, 234, 235, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 465, 488, 489, 587, 604, 606, 608, 610, 611, 612, 614, 669, 682], "projection_proj": [31, 465], "instanc": [31, 42, 48, 163, 164, 165, 222, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 383, 384, 426, 465, 480, 587, 591, 596, 606, 608, 614], "valueerror": [31, 32, 46, 47, 465, 466, 478, 479, 608], "point_z": [31, 381, 465, 654], "point_x": [31, 381, 465], "point_i": [31, 381, 465], "func": [31, 465, 607, 614], "init_point_x_y_z": [31, 465], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 465, 470, 471, 477, 488, 496, 497, 498, 506, 524, 525, 526, 676], "point_latitud": [31, 381, 465], "point_longitud": [31, 381, 465], "perform": [31, 45, 56, 57, 58, 74, 133, 135, 143, 150, 155, 162, 163, 164, 165, 167, 178, 180, 188, 195, 200, 222, 227, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 287, 289, 292, 293, 294, 311, 316, 321, 322, 325, 326, 327, 330, 344, 349, 354, 355, 358, 359, 360, 374, 377, 382, 418, 419, 428, 431, 432, 434, 448, 454, 465, 477, 488, 489, 490, 506, 601, 607, 608, 619, 620, 621, 623, 631, 632, 636, 669], "invers": [31, 45, 74, 462, 465, 477, 506, 604], "rel": [31, 45, 74, 159, 203, 234, 320, 353, 421, 465, 477, 506, 604, 614, 615, 658, 677, 680], "init_point_longitude_latitud": [31, 465], "point_altitud": [31, 35, 381, 465, 469], "init_point_altitud": [31, 465], "init": [31, 238, 254, 386, 465, 584, 612, 614], "field_dict": [32, 453, 466], "replace_exist": [32, 46, 47, 48, 466, 478, 479, 480, 610, 614, 615, 657, 658, 660, 665, 672, 673, 680], "add": [32, 46, 47, 166, 170, 222, 224, 229, 232, 233, 234, 235, 247, 248, 249, 251, 253, 260, 262, 263, 265, 267, 282, 284, 289, 292, 293, 294, 311, 313, 321, 322, 325, 326, 327, 344, 346, 354, 355, 358, 359, 360, 428, 431, 432, 434, 436, 453, 466, 478, 479, 605, 606, 607, 611, 614, 615, 629, 635, 636, 637, 646, 647, 649, 655, 657, 658, 659, 660, 665, 673, 679, 680, 682], "replac": [32, 46, 47, 48, 133, 135, 143, 150, 155, 164, 165, 178, 180, 188, 195, 200, 466, 478, 479, 480, 603, 611, 612, 614], "overwrit": [32, 466, 582], "alreadi": [32, 46, 47, 466, 478, 479], "level": [33, 39, 41, 42, 45, 62, 74, 159, 160, 242, 243, 244, 245, 249, 251, 253, 255, 256, 257, 258, 263, 265, 267, 374, 375, 376, 382, 383, 451, 460, 462, 467, 473, 477, 494, 506, 583, 604, 606, 607, 614, 615, 646, 647, 650, 654, 656, 666, 669, 675, 677, 680], "height": [33, 39, 41, 42, 159, 160, 203, 249, 263, 322, 355, 418, 419, 421, 424, 428, 431, 432, 434, 436, 438, 439, 448, 449, 453, 457, 460, 462, 463, 467, 473, 596, 604, 607, 608, 610, 614, 615, 635, 644, 654, 655, 661, 676, 680], "determin": [33, 45, 74, 163, 164, 165, 247, 249, 251, 253, 260, 263, 265, 267, 322, 355, 363, 366, 374, 375, 378, 383, 384, 425, 438, 441, 442, 443, 445, 446, 448, 460, 462, 467, 477, 506, 582, 583, 590, 596, 599, 607, 608, 614, 615, 657, 665, 680], "same": [33, 45, 47, 55, 56, 57, 74, 123, 126, 135, 150, 163, 180, 195, 234, 322, 355, 372, 378, 382, 383, 384, 421, 438, 439, 448, 451, 457, 467, 477, 479, 487, 488, 489, 506, 557, 582, 584, 597, 601, 604, 608, 611, 612, 615, 625, 646, 647, 654, 657, 658, 671, 676, 680, 682], "interpol": [33, 57, 120, 124, 222, 229, 233, 234, 235, 247, 251, 253, 263, 265, 267, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 368, 374, 420, 421, 428, 431, 432, 434, 436, 449, 456, 457, 462, 467, 489, 596, 608, 614, 615, 626, 657, 658, 675, 680], "extrapol": [33, 120, 124, 222, 229, 233, 234, 235, 251, 253, 263, 265, 267, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 467, 608], "boundari": [33, 120, 124, 167, 240, 241, 260, 355, 456, 467, 557, 608, 659], "center": [33, 45, 57, 74, 119, 120, 121, 123, 124, 126, 164, 222, 227, 229, 233, 234, 235, 248, 250, 251, 252, 253, 262, 263, 264, 265, 266, 267, 282, 287, 289, 293, 294, 297, 311, 316, 321, 322, 326, 327, 344, 349, 354, 355, 359, 360, 374, 376, 414, 415, 416, 428, 431, 432, 434, 436, 467, 477, 489, 506, 553, 557, 572, 604, 606, 607, 608, 610, 611, 635, 665, 673, 677], "2d": [33, 55, 56, 57, 120, 372, 382, 453, 456, 467, 487, 488, 489, 572, 604, 608, 623, 628, 629, 633, 654, 677, 678], "point_": [36, 37, 470, 471], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 144, 145, 189, 190, 411, 413, 462, 472, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 604, 608, 615, 680], "xarrai": [39, 238, 247, 249, 418, 419, 473, 573, 586, 604, 614, 650, 655, 665, 669, 679], "netcdf4": [40, 375, 380, 381, 474, 604, 605, 614, 644, 669, 671, 679, 682], "arm_time_vari": [40, 380, 381, 474], "arm_alt_lat_lon_vari": [40, 381, 474], "save": [40, 210, 222, 224, 229, 233, 234, 235, 242, 255, 270, 282, 284, 289, 293, 294, 299, 311, 313, 321, 322, 326, 327, 332, 344, 346, 354, 355, 359, 360, 381, 383, 474, 608, 610, 611, 669, 670], "netcdf4_class": [40, 380, 381, 474], "netcdf3_class": [40, 380, 381, 474], "netcdf3_64bit": [40, 380, 381, 474], "base_tim": [40, 380, 381, 474, 607, 655], "time_offset": [40, 380, 381, 474, 607, 655], "alt": [40, 56, 381, 474, 488, 607, 608, 612, 614], "lat": [40, 56, 122, 123, 124, 125, 126, 247, 248, 249, 250, 251, 252, 253, 262, 264, 265, 266, 267, 318, 320, 322, 351, 353, 381, 382, 428, 434, 436, 474, 488, 604, 607, 608, 611, 612, 614, 636, 637, 650, 675], "lon": [40, 56, 122, 123, 124, 125, 126, 247, 248, 249, 250, 251, 252, 253, 262, 264, 265, 266, 267, 318, 320, 322, 351, 353, 381, 382, 428, 434, 436, 474, 488, 604, 607, 608, 611, 612, 614, 637, 650], "speed": [41, 42, 421, 462, 463, 572, 607, 608, 610, 614, 615, 661, 680], "direct": [41, 62, 378, 454, 462, 463, 494, 614, 615, 661, 680], "horizont": [41, 42, 43, 44, 45, 74, 158, 161, 162, 163, 222, 223, 224, 229, 233, 234, 235, 246, 247, 249, 251, 253, 261, 263, 265, 267, 282, 283, 284, 289, 293, 294, 311, 312, 313, 321, 322, 326, 327, 344, 345, 346, 354, 355, 359, 360, 367, 368, 418, 419, 462, 477, 506, 596, 606, 607, 610, 614, 615, 637, 647, 666, 677, 680], "wind": [41, 42, 43, 44, 163, 164, 367, 368, 462, 463, 596, 606, 607, 608, 610, 614, 615, 661, 680], "profil": [41, 163, 367, 368, 428, 431, 432, 434, 436, 449, 455, 456, 457, 458, 573, 596, 614, 615, 621, 623, 653, 654, 662, 678, 680], "1d": [41, 42, 120, 124, 453, 574, 604, 614, 677], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 126, 208, 268, 297, 319, 322, 330, 352, 355, 410, 411, 413, 414, 415, 416, 417, 420, 421, 424, 438, 448, 451, 454, 457, 460, 462, 488, 489, 490, 553, 584, 597, 607, 608, 614, 615, 629, 661, 675, 677, 680], "abov": [41, 42, 45, 47, 74, 130, 131, 146, 158, 159, 160, 163, 166, 167, 168, 169, 170, 175, 176, 191, 203, 204, 205, 206, 227, 228, 287, 288, 316, 317, 349, 350, 363, 421, 424, 437, 438, 448, 462, 477, 479, 506, 573, 582, 583, 585, 586, 604, 605, 606, 607, 614, 615, 617, 623, 629, 645, 647, 653, 654, 661, 662, 665, 669, 671, 673, 678, 680, 682], "sea": [41, 42, 45, 74, 462, 477, 506, 607, 614, 615, 680], "were": [41, 42, 133, 135, 143, 178, 180, 188, 462, 606, 608, 610, 611, 615, 680], "sampl": [41, 42, 462, 463, 464, 558, 560, 561, 583, 604, 606, 607, 612, 614, 615, 625, 626, 635, 656, 659, 661, 669, 680], "per": [41, 42, 43, 44, 58, 163, 421, 462, 490, 554, 555, 556, 615, 680], "second": [41, 42, 43, 44, 47, 58, 119, 163, 378, 386, 410, 456, 462, 479, 490, 582, 593, 594, 604, 607, 610, 615, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 676, 677, 680], "north": [41, 45, 74, 247, 249, 260, 322, 355, 477, 506, 573, 586, 604, 607, 608, 639, 677], "east": [41, 222, 233, 247, 282, 293, 311, 326, 344, 359, 573, 586, 604, 607, 608, 639], "u_wind": [41, 42, 462, 463, 615, 661, 680], "compon": [41, 42, 43, 44, 437, 607, 615, 630, 680], "v_wind": [41, 42, 462, 463, 615, 661, 680], "classmethod": 42, "_rang": [45, 74, 430, 477, 506], "scan_typ": [45, 74, 208, 221, 268, 281, 297, 310, 330, 343, 477, 506, 612, 677], "sweep_numb": [45, 74, 477, 506, 607, 614, 644, 671, 677], "sweep_mod": [45, 74, 369, 477, 506, 607, 614, 671, 677], "fixed_angl": [45, 74, 208, 268, 297, 330, 477, 506, 607, 612, 614, 644, 645, 649, 671, 677], "sweep_start_ray_index": [45, 74, 477, 506, 607, 671, 677], "sweep_end_ray_index": [45, 74, 477, 506, 607, 671, 677], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 121, 208, 222, 224, 229, 233, 234, 235, 251, 253, 263, 265, 267, 268, 282, 284, 289, 293, 294, 297, 311, 313, 321, 322, 326, 327, 330, 344, 346, 354, 355, 359, 360, 378, 418, 431, 434, 435, 456, 477, 484, 489, 500, 506, 528, 576, 582, 590, 604, 607, 608, 610, 611, 614, 629, 630, 656, 671, 677], "altitude_agl": [45, 74, 477, 506, 607, 677], "target_scan_r": [45, 74, 477, 506, 614, 677], "rays_are_index": [45, 74, 477, 506], "ray_angle_r": [45, 74, 477, 506], "scan_rat": [45, 74, 384, 477, 506, 614, 677], "antenna_transit": [45, 56, 57, 74, 143, 155, 188, 200, 222, 229, 233, 234, 235, 268, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 477, 488, 489, 506, 608, 677], "instrument_paramet": [45, 74, 163, 384, 453, 477, 506, 607, 610, 660, 673, 677], "radar_calibr": [45, 74, 477, 506, 677], "rotat": [45, 74, 208, 477, 506], "tilt": [45, 74, 208, 234, 322, 355, 458, 477, 506, 608, 614, 626, 643, 650], "roll": [45, 74, 208, 378, 477, 506, 595, 600], "drift": [45, 74, 208, 477, 506], "pitch": [45, 74, 208, 477, 506], "georefs_appli": [45, 74, 477, 506], "antenna": [45, 56, 57, 74, 119, 120, 121, 143, 155, 188, 200, 203, 206, 222, 229, 233, 234, 235, 268, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 426, 435, 477, 488, 489, 506, 608, 614, 619, 623, 628, 629, 630, 631, 632, 669, 675, 677], "structur": [45, 74, 384, 437, 448, 460, 477, 506, 612, 625, 657, 658, 676], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 128, 160, 164, 165, 168, 173, 203, 204, 205, 206, 235, 294, 327, 360, 382, 416, 420, 421, 432, 437, 438, 448, 454, 477, 482, 483, 484, 486, 487, 488, 489, 490, 506, 587, 606, 607, 608, 611, 614, 615, 619, 622, 623, 625, 665, 669, 673, 676, 677, 678, 680], "global": [45, 74, 477, 506, 604, 630, 677, 679], "4": [45, 74, 119, 120, 369, 372, 417, 423, 437, 453, 457, 477, 506, 604, 605, 606, 607, 611, 613, 615, 625, 626, 630, 633, 635, 638, 639, 644, 645, 646, 647, 649, 650, 654, 657, 658, 660, 661, 665, 666, 669, 676, 680], "repres": [45, 74, 163, 418, 419, 453, 477, 506, 554, 555, 601, 611, 614, 654, 658], "under": [45, 74, 163, 164, 165, 421, 477, 506, 611, 614, 615, 657, 658, 669, 679, 680], "sub": [45, 74, 477, 506, 604, 614], "convent": [45, 74, 163, 477, 506, 604, 607, 608, 625, 669, 677], "meta_group": [45, 74, 477, 506, 677], "scan": [45, 74, 117, 163, 164, 165, 166, 208, 221, 222, 224, 235, 268, 281, 282, 284, 294, 297, 310, 311, 313, 327, 330, 343, 344, 346, 360, 374, 418, 426, 477, 506, 549, 554, 555, 582, 584, 590, 596, 601, 604, 605, 606, 607, 611, 614, 626, 629, 640, 641, 651, 654], "ppi": [45, 74, 164, 165, 166, 167, 221, 225, 229, 281, 285, 289, 310, 314, 321, 322, 343, 347, 354, 355, 418, 419, 431, 434, 456, 477, 506, 554, 555, 559, 562, 565, 575, 576, 582, 604, 605, 608, 611, 614, 623, 628, 633, 634, 637, 638, 650, 652, 664, 666, 668, 669, 677, 678], "rhi": [45, 74, 221, 222, 233, 281, 282, 293, 310, 311, 326, 343, 344, 359, 419, 431, 434, 456, 477, 506, 555, 563, 566, 575, 576, 582, 605, 614, 623, 634, 652, 654, 669, 677, 678], "sector": [45, 74, 477, 506, 604, 614, 677], "multipl": [45, 74, 437, 477, 506, 605, 606, 614, 615, 623, 628, 634, 646, 652, 676, 678, 680, 682], "mode": [45, 62, 74, 365, 427, 435, 477, 494, 506, 604, 607, 614, 615, 654, 677, 679, 680], "ground": [45, 74, 426, 432, 477, 506, 607, 608, 612, 625], "target": [45, 74, 382, 477, 506, 558, 560, 561, 562, 563, 564, 565, 566, 573, 584, 585, 586, 597, 607, 677], "angl": [45, 51, 52, 74, 119, 120, 121, 208, 222, 234, 268, 282, 297, 311, 330, 344, 431, 434, 435, 456, 458, 477, 483, 484, 506, 568, 569, 570, 571, 573, 575, 576, 582, 584, 585, 593, 594, 601, 604, 607, 614, 630, 649, 651, 661, 671, 677], "thr": [45, 74, 477, 506], "index": [45, 60, 74, 89, 168, 205, 235, 249, 251, 253, 263, 265, 267, 294, 327, 360, 382, 410, 426, 458, 477, 492, 506, 521, 604, 606, 607, 608, 610, 611, 614, 670], "rays_per_sweep": [45, 66, 74, 94, 477, 498, 506, 526, 554, 555], "upon": [45, 74, 168, 203, 204, 205, 206, 477, 506, 606, 610, 614], "prior": [45, 47, 74, 167, 169, 170, 222, 229, 232, 233, 234, 235, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 378, 477, 479, 506, 608, 617, 626, 669], "init_rays_per_sweep": [45, 74, 477, 506], "intend": [45, 74, 432, 477, 506, 611], "rate": [45, 74, 423, 437, 438, 441, 442, 443, 444, 445, 446, 447, 448, 453, 477, 506, 614, 657, 658], "whether": [45, 74, 133, 178, 369, 417, 477, 506, 607, 608, 676], "regular": [45, 74, 383, 428, 431, 432, 434, 436, 477, 506, 608, 612, 635, 654], "angular": [45, 74, 477, 506, 572, 593, 594], "resolut": [45, 74, 222, 224, 225, 229, 230, 233, 234, 235, 260, 282, 284, 285, 289, 290, 293, 294, 311, 313, 314, 321, 322, 323, 326, 327, 344, 346, 347, 354, 355, 356, 359, 360, 374, 421, 428, 431, 432, 434, 436, 437, 438, 448, 454, 460, 477, 506, 557, 606, 607, 608, 612, 626, 640, 643, 665, 666, 673, 675, 676], "express": [45, 74, 477, 506], "360": [45, 74, 166, 167, 323, 356, 477, 506, 582, 614, 661, 671, 677], "represent": [45, 74, 477, 506], "forbidden": [45, 74, 477, 506], "plane": [45, 74, 382, 418, 419, 477, 506, 604, 677], "180": [45, 74, 121, 123, 477, 506, 582, 604, 606, 607, 615, 658, 671, 680], "gate_z": [45, 57, 74, 477, 489, 506], "gate_x": [45, 57, 74, 477, 489, 506], "gate_i": [45, 57, 74, 477, 489, 506], "system": [45, 74, 122, 123, 124, 169, 170, 365, 374, 382, 412, 417, 477, 506, 611, 614, 615, 679, 680], "assum": [45, 74, 119, 120, 163, 166, 451, 454, 456, 457, 477, 506, 582, 606, 610], "earth": [45, 74, 119, 120, 123, 126, 477, 506, 584, 597, 604, 608], "radiu": [45, 74, 119, 120, 123, 126, 414, 415, 416, 417, 420, 421, 438, 448, 460, 477, 506, 584, 597, 657, 675], "model": [45, 74, 119, 120, 164, 375, 381, 437, 477, 506, 607, 659], "init_gate_x_y_z": [45, 74, 477, 506], "gate_latitud": [45, 56, 64, 74, 92, 477, 488, 496, 506, 524, 604], "gate_longitud": [45, 56, 64, 74, 92, 477, 488, 496, 506, 524, 604, 671], "init_gate_longitude_latitud": [45, 74, 477, 506, 671], "gate_altitud": [45, 56, 63, 74, 91, 477, 488, 495, 506, 523, 604], "init_gate_altitud": [45, 74, 477, 506, 671], "actual": [45, 74, 378, 382, 417, 437, 477, 506, 611, 682], "flag": [45, 74, 163, 268, 378, 455, 456, 460, 477, 506, 590, 604, 612, 614, 682], "transit": [45, 56, 57, 74, 143, 155, 168, 188, 200, 204, 205, 222, 229, 233, 234, 235, 268, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 432, 434, 455, 477, 488, 489, 506, 608, 614], "ye": [45, 74, 163, 477, 506], "about": [45, 74, 477, 506, 604, 606, 612, 613, 614], "aircraft": [45, 74, 234, 378, 477, 506, 573], "longitudin": [45, 74, 234, 245, 253, 257, 258, 267, 477, 506], "vertic": [45, 74, 162, 163, 222, 223, 224, 229, 233, 234, 235, 243, 246, 247, 249, 251, 253, 261, 263, 265, 267, 282, 283, 284, 289, 293, 294, 311, 312, 313, 321, 322, 326, 327, 344, 345, 346, 354, 355, 359, 360, 382, 418, 419, 428, 431, 432, 434, 436, 439, 451, 453, 458, 477, 506, 573, 590, 601, 604, 606, 611, 614, 647, 654, 659, 660, 661, 666], "orthogon": [45, 74, 477, 506], "platform": [45, 74, 477, 506, 604, 617], "right": [45, 74, 477, 506, 606, 609, 610, 611, 612, 614, 635, 636, 654, 669], "wing": [45, 74, 477, 506], "down": [45, 74, 477, 506, 602, 606], "track": [45, 74, 477, 506, 604, 608, 611, 614], "compass": [45, 74, 477, 506], "clockwis": [45, 74, 477, 506], "nose": [45, 74, 477, 506, 614], "had": [45, 74, 383, 477, 506, 612, 614, 625, 682], "georefer": [45, 74, 477, 506], "lead": [45, 74, 477, 506, 608, 629], "centric": [45, 74, 477, 506], "avaiabl": [45, 74, 477, 506], "radar_paramet": [45, 74, 477, 506, 607], "subconvent": [45, 74, 477, 506], "calibr": [45, 74, 441, 477, 506, 607], "ngate": [45, 55, 74, 477, 487, 506, 554, 555, 556, 604, 614, 671, 677], "nrai": [45, 55, 74, 430, 477, 487, 506, 556, 585, 614, 671, 677], "nsweep": [45, 74, 477, 506, 554, 555, 630, 644, 645, 661, 677], "loos": [46, 47, 478, 479, 592], "existing_field_nam": [47, 479], "note": [47, 119, 133, 135, 143, 150, 155, 160, 163, 167, 178, 180, 188, 195, 200, 249, 322, 369, 372, 373, 383, 418, 419, 421, 437, 451, 453, 454, 462, 479, 582, 605, 608, 612, 614, 615, 625, 626, 630, 637, 657, 658, 660, 679, 680], "made": [47, 380, 425, 479, 601, 605, 607, 608, 611, 615, 616, 680], "done": [47, 163, 167, 460, 479, 615, 617, 671, 679, 680, 682], "both": [47, 163, 168, 205, 366, 451, 452, 453, 479, 604, 608, 611, 614, 615, 626, 629, 630, 632, 636, 651, 658, 669, 675, 676, 679, 680], "numpi": [47, 135, 150, 180, 195, 479, 592, 604, 606, 607, 608, 610, 612, 614, 615, 617, 620, 629, 631, 635, 638, 643, 646, 647, 649, 654, 655, 657, 658, 659, 660, 661, 669, 671, 672, 673, 675, 676, 677, 679, 680, 682], "see": [47, 120, 128, 163, 173, 221, 235, 247, 250, 252, 260, 264, 266, 281, 294, 310, 322, 327, 343, 355, 360, 372, 380, 381, 421, 437, 438, 448, 451, 460, 479, 604, 606, 608, 610, 612, 614, 615, 625, 626, 635, 654, 657, 658, 669, 671, 673, 675, 676, 680], "how": [47, 378, 380, 381, 479, 604, 605, 606, 607, 608, 610, 612, 614, 616, 625, 626, 635, 636, 637, 654, 660, 669, 672, 675, 676, 682], "reflectivity_copi": [47, 479], "gatefilt": [48, 158, 159, 160, 163, 164, 165, 166, 167, 168, 170, 203, 204, 205, 206, 222, 229, 232, 233, 234, 235, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 410, 420, 421, 426, 454, 455, 456, 458, 462, 463, 480, 604, 606, 608, 610, 612, 614, 615, 621, 629, 631, 632, 636, 654, 656, 665, 670, 673, 680], "updat": [48, 480, 582, 605, 609, 610, 614, 615, 637, 657, 669, 680], "mask": [48, 133, 135, 139, 143, 150, 154, 155, 163, 164, 165, 166, 168, 178, 180, 184, 188, 195, 199, 200, 203, 204, 205, 206, 222, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 374, 375, 376, 421, 426, 428, 431, 432, 434, 436, 439, 457, 480, 557, 587, 592, 608, 612, 614, 620, 629, 631, 654, 657, 658, 660, 665, 670, 671, 672, 677], "filter": [48, 128, 133, 135, 143, 150, 155, 163, 164, 165, 166, 167, 168, 222, 229, 233, 234, 235, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 410, 420, 421, 425, 454, 455, 456, 480, 604, 606, 608, 610, 612, 614, 621, 629, 631, 632, 636, 654, 656, 665, 673, 676], "equal": [48, 122, 124, 125, 134, 135, 141, 149, 150, 153, 164, 179, 180, 186, 194, 195, 198, 355, 372, 383, 437, 460, 462, 480, 582, 608, 638, 654, 657, 658, 659, 676], "condit": [48, 128, 133, 135, 143, 150, 155, 163, 173, 178, 180, 188, 195, 200, 383, 443, 480, 604, 621, 672, 676], "append": [48, 480, 610, 611, 612, 614, 661], "filtered_": [48, 480], "prefix": [48, 475, 480], "check": [49, 58, 77, 164, 165, 166, 167, 377, 425, 437, 457, 481, 490, 509, 584, 597, 601, 606, 607, 610, 612, 614, 615, 617, 669, 679, 680, 681], "keyerror": [49, 77, 393, 394, 404, 405, 481, 509, 679], "array_lik": [50, 482, 589], "view": [51, 52, 54, 386, 391, 392, 398, 402, 403, 408, 483, 484, 486, 604, 612, 636, 673, 675, 677], "possibl": [51, 52, 54, 378, 483, 484, 486, 583, 608, 610, 612, 614, 618, 635, 654, 657, 658, 673, 675], "underli": [51, 52, 54, 222, 229, 233, 234, 235, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 366, 483, 484, 486, 608, 669], "get_gate_x_y_z": [54, 486, 646, 647], "obtain": [54, 57, 486, 489, 612, 615, 661, 671, 680], "plot": [54, 57, 207, 208, 209, 210, 211, 212, 213, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 428, 431, 432, 434, 436, 458, 463, 486, 489, 604, 605, 614, 620, 621, 625, 626, 629, 630, 631, 632, 652, 653, 654, 655, 657, 658, 660, 662, 664, 665, 668, 669, 671, 672, 673, 675, 676, 678], "correct": [54, 57, 173, 203, 204, 205, 206, 372, 449, 454, 486, 489, 559, 604, 606, 610, 614, 615, 618, 621, 622, 626, 637, 654, 659, 665, 669, 673, 678, 680], "spatial": [54, 57, 163, 486, 489, 604, 675], "context": [54, 57, 486, 489, 606, 655], "request": [54, 124, 374, 420, 421, 452, 486, 608, 614, 615, 616, 617, 669, 680], "area": [55, 222, 224, 229, 233, 234, 235, 236, 282, 284, 289, 293, 294, 295, 311, 313, 321, 322, 326, 327, 328, 344, 346, 354, 355, 359, 360, 361, 437, 456, 460, 487, 587, 604, 606, 608, 610], "squar": [55, 425, 451, 454, 462, 487], "assumpt": [55, 454, 487], "size": [55, 160, 163, 164, 166, 167, 204, 225, 285, 314, 347, 416, 418, 419, 420, 421, 425, 438, 439, 447, 448, 454, 456, 487, 557, 572, 600, 607, 637, 650, 655, 657, 658], "m": [55, 58, 121, 165, 203, 206, 210, 270, 299, 332, 417, 421, 425, 428, 430, 431, 432, 434, 435, 436, 437, 441, 442, 448, 451, 453, 454, 455, 458, 460, 487, 490, 572, 573, 587, 598, 604, 606, 607, 608, 610, 611, 612, 614, 615, 617, 625, 638, 647, 654, 657, 658, 660, 661, 665, 669, 679, 680], "reset_gate_coord": [56, 488], "filter_transit": [56, 57, 222, 229, 233, 234, 235, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 488, 489, 608], "With": [56, 57, 488, 489, 669, 670, 671], "therefor": [56, 57, 454, 488, 489, 604, 673, 677], "more": [56, 57, 62, 164, 167, 382, 417, 420, 421, 426, 437, 438, 448, 460, 488, 489, 494, 575, 576, 604, 605, 606, 607, 608, 609, 612, 614, 615, 629, 635, 646, 647, 654, 669, 673, 677, 680], "effici": [56, 57, 420, 437, 488, 489, 669, 673], "than": [56, 57, 164, 170, 222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 437, 438, 439, 448, 454, 488, 489, 582, 587, 606, 607, 608, 612, 654, 657, 682], "through": [56, 57, 247, 442, 453, 488, 489, 607, 608, 610, 613, 615, 629, 635, 680], "No": [56, 57, 165, 222, 229, 233, 234, 235, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 382, 421, 488, 489, 608, 611], "get_field": [57, 489, 646, 647], "check_uniform": [58, 490], "lookuperror": [58, 490], "except": [58, 382, 399, 490, 608, 611, 614, 675], "skip": [58, 164, 165, 377, 425, 490, 606, 611, 614, 615, 680], "nyquist_veloc": [58, 164, 165, 384, 490, 607, 610, 660, 673, 677], "slice": [59, 71, 88, 99, 250, 251, 252, 253, 264, 265, 266, 267, 491, 503, 520, 531, 650, 675, 677], "_io": [62, 494], "textiowrapp": [62, 494], "encod": [62, 383, 494, 614], "utf": [62, 494], "compact": [62, 494], "c": [62, 119, 123, 126, 158, 160, 162, 163, 165, 260, 355, 428, 431, 437, 441, 443, 450, 453, 454, 455, 456, 458, 463, 494, 559, 604, 608, 610, 612, 614, 615, 629, 658, 660, 669, 672, 675, 679, 680, 682], "f": [62, 260, 355, 397, 407, 494, 604, 605, 606, 607, 608, 610, 611, 612, 626, 630, 635, 644, 645, 649, 654, 657, 658, 669, 682], "minim": [62, 454, 460, 494], "everyth": [62, 494, 608, 611, 615, 626, 680], "screen": [62, 494], "gate_": [65, 93, 497, 525], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 397, 407, 454, 456, 499, 500, 501, 502, 503, 504, 505, 527, 528, 529, 530, 531, 532, 533, 610, 677], "over": [69, 72, 73, 97, 100, 101, 163, 164, 203, 222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 437, 438, 448, 501, 504, 505, 529, 532, 533, 583, 604, 608, 610, 611, 614, 629, 657, 658, 661, 669, 672, 677], "npulses_max": [74, 506, 556], "velocity_bin": [74, 506], "simpl": [117, 410, 549, 614, 672, 673], "vpt": [117, 213, 221, 235, 273, 281, 294, 302, 310, 327, 335, 343, 360, 549, 590, 607, 614], "mean": [117, 119, 428, 431, 432, 434, 462, 549, 557, 568, 569, 574, 583, 588, 593, 594, 604, 607, 614, 615, 618, 625, 626, 654, 676, 677, 680], "kilomet": [119, 418, 438, 448], "equat": [119, 454, 583, 604, 614], "28": [119, 604, 606, 608, 614, 657, 658, 661, 662, 678], "b": [119, 363, 423, 437, 438, 448, 455, 463, 604, 605, 606, 607, 612, 614, 615, 658, 669, 680], "doviak": 119, "zrnic": [119, 434], "sqrt": [119, 123, 604, 646, 647, 661], "r": [119, 122, 123, 124, 125, 126, 163, 165, 169, 170, 214, 227, 228, 248, 262, 274, 287, 288, 303, 316, 317, 318, 319, 336, 349, 350, 351, 352, 423, 428, 432, 437, 438, 439, 442, 445, 446, 447, 448, 460, 462, 583, 587, 604, 615, 625, 638, 646, 647, 654, 657, 658, 660, 680], "sin": [119, 123, 126, 604, 606], "theta_": 119, "arcsin": [119, 123, 606], "frac": 119, "theta_a": 119, "arc": [119, 584], "length": [119, 169, 170, 454, 606, 608, 614, 660], "effect": [119, 133, 135, 143, 150, 155, 178, 180, 188, 195, 200, 234, 420, 421, 606, 630, 646, 654], "taken": [119, 169, 170, 222, 282, 311, 344, 559, 575, 576, 583, 588, 589, 639], "6371": [119, 123, 126, 584, 597, 606], "km": [119, 123, 126, 208, 225, 230, 231, 237, 268, 285, 290, 291, 296, 297, 314, 323, 324, 329, 330, 347, 355, 356, 357, 362, 419, 430, 437, 438, 448, 453, 454, 557, 584, 597, 605, 606, 607, 608, 612, 630, 639, 644, 645, 647, 654, 655, 666, 675], "doppler": [119, 163, 164, 165, 462, 583, 607, 615, 619, 622, 623, 639, 649, 654, 669, 677, 678, 680], "edit": [119, 613, 614, 615, 680], "1993": 119, "21": [119, 427, 447, 604, 606, 610], "vector": [120, 124, 222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 430, 451, 453, 604, 606, 608, 614], "util": [120, 160, 163, 164, 234, 441, 464, 607, 612, 614, 615, 626, 638, 651, 655, 657, 658, 669, 680], "antenna_to_cartesian": [120, 614], "detail": [120, 128, 163, 173, 247, 260, 322, 355, 380, 381, 417, 421, 438, 448, 604, 606, 608, 610, 616, 617, 654, 657, 658, 669, 677], "cartograph": [122, 123, 124, 125, 126, 330], "differ": [122, 124, 125, 163, 363, 410, 418, 419, 437, 438, 442, 448, 454, 605, 606, 607, 608, 612, 614, 615, 623, 625, 629, 654, 657, 658, 664, 675, 679, 680], "pass": [122, 124, 125, 163, 164, 165, 221, 222, 229, 233, 234, 235, 247, 249, 251, 253, 260, 263, 265, 267, 281, 282, 289, 293, 294, 310, 311, 318, 319, 320, 321, 322, 323, 326, 327, 343, 344, 351, 352, 353, 354, 355, 356, 359, 360, 365, 366, 374, 376, 417, 421, 454, 606, 608, 614, 617, 625, 626, 672, 675], "desir": [122, 124, 125, 133, 135, 143, 150, 155, 178, 180, 188, 195, 200, 386, 432, 438, 448, 462, 552, 598, 606, 607, 655, 676], "6370997": [123, 126], "rho": 123, "arctan2": [123, 661], "correspond": [123, 126, 144, 145, 189, 190, 221, 249, 263, 281, 310, 343, 367, 393, 404, 418, 421, 573, 583, 585, 606, 608, 615, 625, 638, 673, 677, 680], "typic": [123, 126, 128, 133, 135, 143, 150, 155, 164, 173, 178, 180, 188, 195, 200, 382, 417, 420, 630, 682], "snyder": [123, 126], "manual": [123, 126, 611, 612, 614, 617, 669], "geolog": [123, 126], "survei": [123, 126], "profession": [123, 126], "paper": [123, 126, 669], "1395": [123, 126, 614], "1987": [123, 126], "pp": [123, 126, 428, 431, 432, 434], "191": [123, 126], "202": [123, 126], "find": [124, 164, 167, 410, 417, 420, 421, 448, 449, 604, 608, 610, 612, 614, 626, 658, 669, 682], "arcco": 126, "exclude_bas": [128, 173], "boolean": [128, 135, 144, 145, 150, 173, 180, 189, 190, 195, 363, 438, 448, 614, 676], "variou": [128, 166, 168, 173, 203, 204, 205, 206, 573, 586, 606, 614, 623, 653, 669], "exclude_below": [128, 173, 604, 606, 610, 612, 629, 656, 665, 676], "suggest": [128, 173, 605, 614], "begin": [128, 163, 164, 165, 169, 170, 173, 210, 212, 229, 233, 270, 272, 289, 293, 299, 301, 321, 326, 332, 334, 354, 359, 372, 373, 376, 378, 614], "import": [128, 173, 458, 462, 463, 475, 605, 611, 612, 614, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 671, 672, 673, 675, 676, 677, 679], "radar_fil": [128, 173, 611, 621, 635, 637], "nc": [128, 173, 604, 605, 607, 612, 614, 620, 629, 630, 632, 635, 636, 637, 641, 643, 644, 645, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 671, 672, 676], "10": [128, 138, 160, 166, 169, 170, 173, 183, 417, 421, 427, 428, 429, 434, 438, 439, 442, 443, 444, 448, 453, 455, 456, 573, 587, 604, 606, 607, 608, 610, 611, 612, 615, 621, 626, 629, 630, 631, 635, 638, 639, 641, 643, 646, 647, 650, 654, 657, 658, 660, 661, 665, 669, 671, 672, 673, 675, 676, 677, 680], "normalized_coherent_pow": [128, 173, 604, 676], "75": [128, 173, 236, 295, 328, 361, 382, 438, 448, 453, 604, 610, 629, 646, 654, 657, 671, 675, 676], "exclude_mask": [130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 631], "op": [130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 607], "inclus": [130, 131, 133, 136, 142, 146, 148, 151, 156, 175, 176, 178, 181, 187, 191, 193, 196, 201, 417, 421, 553, 614, 635], "toa": [131, 176, 420, 421, 424, 457], "below": [133, 148, 163, 166, 168, 169, 170, 178, 193, 203, 204, 205, 206, 222, 229, 232, 233, 234, 235, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 420, 421, 437, 438, 442, 445, 446, 448, 454, 582, 583, 604, 605, 606, 607, 608, 611, 635, 654, 657, 671, 673, 676, 681], "compar": [133, 163, 178, 426, 572, 615, 623, 628, 633, 635, 654, 657, 658, 678, 680], "against": [133, 163, 178, 616, 617, 646], "mark": [133, 143, 144, 145, 155, 163, 178, 188, 189, 190, 200, 605, 611], "exclus": [133, 178, 630], "oper": [133, 135, 143, 150, 155, 178, 180, 188, 195, 200, 378, 417, 421, 427, 443, 447, 448, 456, 460, 604, 607, 608, 615, 657, 658, 679, 680], "merg": [133, 135, 143, 150, 155, 164, 178, 180, 188, 195, 200, 368, 582, 615, 617, 680], "AND": [133, 135, 143, 150, 155, 178, 180, 188, 195, 200], "OR": [133, 135, 143, 150, 155, 178, 180, 188, 195, 200, 604], "gener": [133, 135, 143, 150, 155, 178, 180, 188, 195, 200, 209, 210, 211, 212, 213, 222, 224, 229, 232, 233, 234, 235, 242, 243, 244, 245, 247, 249, 251, 253, 255, 256, 257, 258, 263, 265, 267, 269, 270, 271, 272, 273, 282, 284, 289, 292, 293, 294, 298, 299, 300, 301, 302, 311, 313, 321, 322, 325, 326, 327, 331, 332, 333, 334, 335, 344, 346, 354, 355, 358, 359, 360, 381, 384, 399, 410, 420, 421, 449, 454, 606, 608, 609, 612, 614, 617, 620, 621, 623, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 669], "meet": [133, 135, 143, 150, 155, 178, 180, 188, 195, 200, 380, 669], "result": [133, 135, 143, 150, 155, 163, 164, 165, 178, 180, 188, 195, 200, 222, 229, 232, 233, 234, 235, 251, 253, 263, 265, 267, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 365, 381, 386, 418, 419, 421, 426, 458, 463, 574, 595, 606, 607, 608, 615, 626, 630, 654, 658, 659, 669, 675, 680], "previous": [133, 135, 143, 150, 155, 178, 180, 188, 195, 200, 625, 654, 657], "becaus": [133, 135, 143, 178, 180, 188, 454, 657, 682], "invalid": [133, 135, 137, 143, 168, 178, 180, 182, 188, 203, 204, 205, 206, 604, 612], "shape": [135, 150, 180, 195, 372, 457, 592, 604, 607, 608, 610, 612, 614, 615, 657, 671, 675, 676, 677, 680], "v1": [136, 142, 151, 156, 181, 187, 196, 201, 604, 605, 617, 679], "v2": [136, 142, 151, 156, 181, 187, 196, 201, 615, 680], "insid": [136, 151, 181, 196, 672], "interv": [136, 142, 151, 156, 164, 168, 181, 187, 196, 201, 205, 572, 588, 589, 604, 612, 614], "occur": [137, 157, 167, 182, 202, 374, 375, 604, 673, 677], "nan": [137, 157, 163, 168, 182, 202, 205, 456, 604, 607, 614, 655], "inf": [137, 157, 168, 182, 202, 205, 614], "n_gate": [138, 183], "try": [138, 183, 425, 454, 606, 611, 612, 613, 675, 676], "ring": [138, 183, 230, 231, 290, 291, 323, 324, 356, 357, 606, 630, 631, 643], "artifact": [138, 164, 183, 614, 673, 675], "some": [138, 183, 297, 330, 394, 405, 456, 475, 605, 606, 607, 608, 610, 611, 612, 613, 614, 626, 635, 636, 654, 655, 657, 660, 669, 673, 675, 679], "outsid": [142, 156, 168, 187, 201, 205, 229, 232, 234, 235, 247, 249, 251, 253, 263, 265, 267, 289, 292, 294, 321, 322, 325, 327, 354, 355, 358, 360, 432, 437, 608, 614, 615, 654, 680], "trans_valu": [143, 155, 188, 200], "construct": [143, 155, 188, 200, 421, 607], "element": [144, 145, 163, 164, 165, 166, 167, 189, 190, 384, 418, 419, 420, 421, 425, 457, 572, 588, 589, 593, 594, 606, 607, 608], "NOT": [144, 145, 189, 190], "gate_includ": [144, 189, 676], "lost": [144, 145, 189, 190, 456, 601, 604, 675], "again": [144, 145, 189, 190, 608, 617, 626, 637, 658, 660, 679], "gate_exclud": [145, 190, 676], "z_offset": 158, "doc": [158, 159, 160, 170, 604, 608, 614, 615, 617, 620, 626, 669, 679, 680, 682], "15": [158, 454, 587, 604, 605, 606, 607, 612, 620, 621, 625, 626, 627, 635, 638, 644, 645, 646, 647, 650, 651, 654, 655, 658, 660, 661, 662, 673, 677, 678], "fzl": [158, 159, 160, 169, 170], "4000": [158, 169, 170, 675], "rhv_min": 158, "ncp_min": 158, "a_coef": [158, 160], "06": [158, 604, 606, 610, 611], "beta": [158, 160, 441, 442, 443, 444, 445, 446], "refl_field": [158, 159, 160, 168, 169, 170, 204, 205, 421, 424, 433, 437, 438, 442, 444, 445, 446, 447, 453, 460, 620, 657, 659, 660], "ncp_field": [158, 168, 169, 170, 205, 620], "rhv_field": [158, 168, 169, 170, 204, 205, 453, 620, 659, 660], "spec_at_field": [158, 159, 160], "corr_refl_field": [158, 159, 160], "attenu": [158, 159, 160, 441, 442, 445, 614, 619, 622, 623, 659, 669, 678], "phi": [158, 160, 169, 614, 620], "copol_coeff": [158, 559, 620, 655, 656, 671], "norm_coherent_pow": [158, 559, 620, 671], "proc_dp_phase_shift": [158, 620, 655, 671], "reflectivity_horizont": [158, 163, 559, 605, 620, 629, 635, 637, 641, 643, 644, 645, 649, 651, 654, 655, 656, 657, 658, 666, 671, 672], "supress": [158, 238, 249, 254, 322, 355, 608, 614], "freez": [158, 159, 160, 428, 432], "layer": [158, 159, 160, 203, 206, 382, 442, 454, 458, 557], "combin": [158, 159, 160, 591, 604, 606, 607, 615, 617, 680], "minimum": [158, 168, 169, 170, 204, 205, 206, 222, 224, 229, 232, 233, 234, 235, 282, 284, 289, 292, 293, 294, 311, 313, 321, 322, 325, 326, 327, 344, 346, 354, 355, 358, 359, 360, 382, 417, 421, 428, 431, 432, 434, 435, 437, 438, 439, 448, 553, 557, 574, 583, 604, 606, 608, 611, 612, 614, 654, 657, 675], "normal": [158, 168, 169, 170, 205, 222, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 439, 453, 592, 608, 646, 654], "coher": [158, 168, 169, 170, 205], "power": [158, 160, 168, 169, 170, 205, 432, 441, 442, 443, 444, 445, 446, 604, 607], "zdr_field": [158, 159, 160, 162, 204, 427, 453, 659, 660], "spec_at": [158, 159, 160, 620, 659], "cor_z": [158, 159, 160, 620, 659], "gu": [158, 160], "et": [158, 160, 162, 437, 438, 439, 443, 447, 448, 453, 454, 460, 657, 658], "al": [158, 160, 162, 437, 438, 439, 443, 447, 448, 453, 454, 455, 460, 657, 658], "heavi": [158, 160, 587, 606, 638, 646, 658], "rain": [158, 160, 428, 432, 437, 441, 442, 443, 444, 447, 448, 453, 460, 614, 638, 646, 657, 658, 659, 660], "jamc": [158, 160, 456, 573], "2011": [158, 160, 611, 655], "50": [158, 160, 431, 435, 436, 453, 572, 604, 605, 606, 607, 610, 632, 650, 654, 655, 659, 660, 675, 677], "39": [158, 160, 604, 606, 655], "58": [158, 160, 437, 607, 654, 655], "pia_coef": 159, "pida_coef": 159, "temp_field": [159, 160, 206, 453, 659, 660], "iso0_field": [159, 160, 203, 453], "pia_field": [159, 160], "spec_diff_at_field": [159, 160], "pida_field": [159, 160], "corr_zdr_field": [159, 160], "temp_ref": [159, 160, 453, 659], "linear": [159, 169, 170, 247, 374, 427, 438, 448, 456, 583, 596, 607, 608, 614, 657, 658, 669], "dependec": 159, "comput": [159, 160, 162, 204, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 448, 453, 454, 455, 456, 568, 569, 570, 571, 572, 574, 588, 589, 593, 594, 600, 604, 607, 614, 654, 659, 661, 669], "either": [159, 160, 163, 164, 165, 222, 223, 224, 229, 232, 233, 234, 235, 246, 247, 249, 251, 253, 261, 263, 265, 267, 282, 283, 284, 289, 292, 293, 294, 311, 312, 313, 321, 325, 326, 327, 344, 345, 346, 354, 358, 359, 360, 368, 397, 407, 428, 431, 432, 434, 442, 445, 446, 453, 615, 654, 657, 679, 680], "frequenc": [159, 160, 384, 439, 441, 442, 443, 445, 446, 450, 453, 454, 455, 456, 607, 623, 653, 654, 662, 678], "refl": [159, 160, 644], "integr": [159, 160, 604, 607], "pida_coeff": 159, "0c": [159, 160], "isotherm": [159, 160], "height_over_iso0": [159, 160, 453, 676], "fixed_fzl": [159, 160], "pia_dict": [159, 160], "spec_diff_at": [159, 160, 659], "pida_dict": [159, 160], "cor_zdr": [159, 160, 659], "smooth_window_len": 160, "d": [160, 165, 210, 270, 299, 332, 386, 387, 389, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 432, 434, 437, 456, 463, 573, 604, 606, 607, 608, 611, 612, 615, 655, 669, 680], "forumul": 160, "smooth": [160, 167, 454, 584, 597, 608, 646, 647, 675], "window": [160, 163, 169, 170, 204, 425, 456, 462, 572, 582, 595, 600, 614, 615, 669, 680], "expon": [160, 169, 170, 423, 441, 442, 443, 444, 445, 446], "law": [160, 441, 442, 443, 444, 445, 446], "ryzhkov": [160, 428, 429, 431, 441, 458, 573], "potenti": [160, 441, 604, 612], "rainfal": [160, 437, 441, 442, 443, 444, 445, 446, 447, 454, 456, 611], "estim": [160, 203, 206, 224, 284, 313, 346, 418, 427, 430, 441, 442, 443, 444, 445, 446, 447, 454, 455, 456, 458, 573, 583, 607, 614, 657, 658], "mitig": [160, 441], "partial": [160, 441, 614], "beam": [160, 416, 420, 421, 441, 607], "blockag": [160, 441], "network": [160, 164, 376, 441, 606], "jaot": [160, 162], "2014": [160, 441, 455, 458, 669], "31": [160, 374, 441, 604, 606, 607, 610, 626, 655], "599": [160, 441], "619": [160, 441, 614], "bia": [161, 614], "magnitud": [161, 454, 661, 677], "corrected_field": 161, "urhohv_field": 162, "snr_field": [162, 424, 433], "nh_field": 162, "nv_field": 162, "rhohv_field": [162, 427, 429], "nois": [162, 424, 430, 433, 583, 607, 612, 614, 654, 673], "eq": [162, 644], "6": [162, 204, 437, 442, 453, 604, 606, 607, 611, 612, 626, 629, 630, 635, 636, 640, 643, 654, 655, 656, 659, 660, 661, 671, 673, 676, 677], "2006": [162, 626], "subtract": [162, 438, 448], "uncorrect": [162, 604, 665], "snr": [162, 424, 433, 614], "channel": [162, 382, 604, 607, 614, 617], "meteo": 162, "franc": 162, "23": [162, 604, 606, 607, 611, 661], "1340": 162, "1356": [162, 614], "last_radar": 163, "sonde_profil": 163, "filt": 163, "rsl_badval": 163, "131072": 163, "keep_origin": [163, 164, 165], "set_limit": [163, 164, 165, 605, 638, 639, 640, 642, 644, 645, 646, 647, 649, 654, 660], "vel_field": [163, 164, 165, 425, 463, 654, 665, 673], "corr_vel_field": [163, 164, 165], "last_vel_field": 163, "max_shear": 163, "05": [163, 420, 421, 604, 606, 611, 633, 650, 654, 655, 678], "sign": [163, 614, 646, 647, 654], "dealia": [163, 164, 165, 440, 610, 614, 619, 622, 623, 654, 664, 668, 673, 678], "4dd": [163, 614], "univers": [163, 379, 447, 604, 614, 669], "washington": 163, "previou": [163, 322, 355, 608, 612, 614, 617], "sound": [163, 614], "For": [163, 250, 252, 264, 266, 372, 382, 420, 453, 454, 604, 605, 607, 608, 611, 614, 615, 618, 625, 629, 654, 659, 669, 676, 677, 680, 682], "best": [163, 606, 654], "argument": [163, 164, 165, 222, 229, 233, 234, 235, 247, 249, 250, 251, 252, 253, 263, 264, 265, 266, 267, 282, 289, 293, 294, 311, 318, 319, 320, 321, 322, 323, 326, 327, 344, 351, 352, 353, 354, 355, 356, 359, 360, 374, 376, 384, 386, 417, 421, 455, 456, 614, 615, 680], "_fourdd_interfac": 163, "fourdd_dealia": 163, "fine": 163, "tune": [163, 657, 658], "behavior": [163, 322, 355, 372, 386, 608, 614, 618], "fourdd": 163, "document": [163, 250, 252, 260, 264, 266, 322, 355, 375, 380, 381, 596, 602, 605, 607, 608, 609, 612, 615, 616, 669, 675, 680], "dealias": [163, 164, 165, 440, 614, 615, 621, 625, 665, 669, 670, 680], "mean_doppler_veloc": [163, 607, 612, 649, 654, 655, 665, 671], "successfulli": [163, 611], "greatli": 163, "improv": [163, 455, 456, 587, 608, 617, 638, 658], "final": [163, 455, 456, 604, 605, 612, 613, 617, 630, 654, 657], "horizontalwindprofil": [163, 367, 368, 463, 596, 614, 615, 680], "sond": [163, 164, 367, 368, 449, 614, 621], "moment_based_gate_filt": [163, 164, 165, 421, 606], "bergen": 163, "alber": 163, "bad": [163, 454, 455, 456, 460], "rsl": [163, 366, 377, 378, 614, 669, 679], "procedur": [163, 164, 165], "fail": [163, 164, 165, 372, 382, 611, 614, 615, 680], "otherwis": [163, 393, 404, 428, 431, 432, 434, 435, 436, 442, 445, 446, 451, 592, 617], "maxshear": 163, "maximum": [163, 164, 168, 169, 170, 203, 204, 205, 222, 224, 229, 232, 233, 234, 235, 282, 284, 289, 292, 293, 294, 311, 313, 321, 322, 325, 326, 327, 344, 346, 354, 355, 358, 359, 360, 363, 382, 417, 418, 419, 421, 426, 428, 431, 432, 434, 435, 436, 438, 442, 445, 446, 448, 454, 553, 557, 572, 582, 590, 604, 606, 608, 611, 654, 656, 657, 665, 677], "shear": 163, "incorpor": [163, 448, 657, 660], "match": [163, 166, 167, 208, 268, 297, 330, 378, 410, 612, 614, 629, 637, 658], "toward": 163, "neg": [163, 222, 233, 282, 293, 311, 326, 344, 359, 454, 582, 604, 614, 635], "compthresh": 163, "fraction": [163, 418, 419, 439, 606, 611, 654, 657, 677], "threshold": [163, 166, 167, 168, 203, 204, 205, 206, 363, 437, 438, 442, 445, 446, 448, 583, 587, 604, 606, 610, 654, 657, 665, 673, 676], "continu": [163, 165, 607, 611, 614, 615, 680], "unfold": [163, 164, 169, 170, 454], "compthresh2": 163, "thresh": [163, 442, 445, 446], "adjac": [163, 608], "count": [163, 439, 629, 673, 677], "assign": [163, 453, 606, 614, 657], "question": [163, 364, 421, 608, 669], "ckval": 163, "absolut": [163, 572, 658], "stdthresh": 163, "deviat": [163, 557, 570, 571, 589, 604, 673], "portion": [163, 610, 675], "epsilon": 163, "miss": [163, 453, 454, 455, 456, 460, 604, 614, 626, 660], "maxcount": 163, "allow": [163, 166, 167, 221, 281, 310, 343, 410, 437, 573, 582, 605, 608, 611, 612, 614, 618, 629, 677, 682], "fold": [163, 164, 625], "pass2": 163, "retain": [163, 164, 165, 168, 203, 204, 205, 206, 601], "rm": 163, "what": [163, 172, 421, 604, 607, 608, 610, 611, 612, 613, 614, 615, 625, 635, 665, 671, 673, 676, 680, 682], "left": [163, 320, 353, 606, 608, 610, 612, 635, 637, 654], "proxim": 163, "side": [163, 612, 654], "doubl": [163, 382, 657], "captur": [163, 437, 665], "suffici": [163, 654], "good": [163, 164, 604, 605, 617], "mingood": 163, "ba_mincount": 163, "neighbor": [163, 374, 421, 604, 614, 630, 675], "ba_edgecount": 163, "usuccess": 163, "radialvelvolum": 163, "lastvelvolum": 163, "unfoldedvolum": 163, "sondvolum": 163, "vr_corr": 163, "due": [163, 426, 437, 604, 606, 608, 611, 614, 629, 673, 679, 682], "call": [163, 166, 221, 222, 224, 229, 233, 234, 235, 249, 281, 282, 284, 289, 293, 294, 310, 311, 313, 321, 322, 326, 327, 343, 344, 346, 354, 355, 359, 360, 377, 382, 386, 573, 586, 605, 607, 608, 611, 615, 617, 673, 677, 680, 682], "999": [163, 386, 604, 614], "long": [163, 443, 614, 658, 672, 677], "n": [163, 425, 437, 442, 453, 572, 604, 606, 607, 608, 610, 612, 625, 629, 630, 638, 649, 651, 655, 657, 658, 663, 669, 682], "jame": 163, "houz": [163, 363, 438, 439, 448, 460, 654, 657, 658], "jr": [163, 438, 448, 460, 657, 658], "four": [163, 374, 375, 377], "dealis": 163, "scheme": [163, 363, 417, 438, 448, 454, 605, 657], "2001": [163, 429], "18": [163, 429, 602, 604, 606, 636, 647, 654, 668], "1674": 163, "ref_vel_field": 164, "interval_split": 164, "interval_limit": 164, "skip_between_rai": 164, "100": [164, 166, 168, 205, 225, 230, 247, 285, 290, 314, 347, 384, 421, 463, 604, 606, 607, 608, 610, 632, 636, 646, 647, 654, 661], "skip_along_rai": 164, "nyquist_vel": [164, 165, 610, 654, 665, 673], "check_nyquist_uniform": [164, 165, 425], "rays_wrap_around": [164, 165], "region": [164, 170, 260, 322, 355, 426, 437, 587, 604, 606, 607, 608, 610, 612, 614, 615, 619, 622, 623, 625, 638, 657, 658, 665, 676, 678, 680], "similar": [164, 607, 608, 629, 675], "pair": [164, 247, 374, 386, 394, 399, 405, 606, 671], "accomplish": [164, 378, 623, 664], "problem": [164, 169, 170, 297, 330, 421, 626], "dynam": [164, 604], "reduct": 164, "anchor": 164, "onc": [164, 608, 611, 615, 617, 657, 679, 680, 682], "complet": [164, 614], "simul": [164, 596, 614], "simulated_vel_from_profil": [164, 615, 680], "segment": [164, 318, 319, 351, 352, 614], "split": [164, 587, 604], "larger": [164, 608, 657], "longer": [164, 582, 606, 614, 615, 669, 679, 680], "process": [164, 169, 170, 604, 607, 610, 611, 612, 614, 615, 617, 625, 658, 660, 669, 680], "better": [164, 225, 230, 285, 290, 314, 323, 347, 356, 611, 612, 614, 658, 669, 673], "seem": 164, "compromis": 164, "free": [164, 609, 610, 669], "cover": [164, 604], "entir": [164, 165, 222, 229, 233, 234, 235, 251, 253, 263, 265, 267, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 421, 598, 604, 607, 608, 612, 654], "join": [164, 475, 611, 614], "gap": [164, 166, 167, 675], "connect": [164, 165], "disabl": [164, 165, 168, 203, 204, 205, 206, 611], "across": [164, 606, 614, 654, 656], "so": [164, 222, 233, 282, 293, 311, 326, 344, 359, 378, 421, 604, 607, 608, 610, 611, 612, 614, 615, 625, 626, 654, 657, 669, 680, 682], "averag": [164, 363, 428, 431, 432, 434, 438, 448, 574, 583, 588, 610, 657, 658, 661], "individu": [164, 165, 421, 612], "attempt": [164, 165, 380, 381, 614, 660], "de": [164, 165, 353, 565, 566], "alias": [164, 165, 565, 566, 610, 614, 673, 677], "corr_vel": [164, 165], "unwrap_unit": 165, "skip_check": [165, 614], "multi": [165, 614], "unwrap": [165, 169, 170, 614], "independ": 165, "often": [165, 426, 611], "give": [165, 382, 608, 612, 616, 617, 665, 666, 667, 669, 673, 676], "superior": 165, "lower": [165, 247, 249, 251, 253, 263, 265, 267, 437, 607, 611, 612, 630, 631, 632], "contamin": [165, 460], "clutter": [165, 611, 612, 673, 676], "poor": 165, "verif": [165, 573, 614], "appropi": [165, 221, 281, 310, 343], "offer": [165, 605], "extrem": [165, 654], "miguel": 165, "arevallilo": 165, "herraez": 165, "david": [165, 608], "burton": 165, "michael": [165, 608, 612], "lalor": 165, "munther": 165, "gdeisat": 165, "fast": 165, "two": [165, 384, 417, 435, 438, 448, 451, 452, 460, 557, 591, 593, 594, 606, 607, 608, 610, 611, 612, 614, 617, 623, 628, 633, 634, 636, 651, 652, 672, 675, 678], "sort": [165, 606, 610, 611, 613, 614], "reliabl": 165, "follow": [165, 168, 204, 205, 380, 381, 383, 384, 397, 407, 420, 421, 437, 453, 454, 604, 606, 607, 608, 610, 611, 612, 615, 617, 618, 625, 655, 669, 679, 680], "noncontinu": 165, "optic": 165, "vol": [165, 428, 431, 432, 434], "41": [165, 606, 611, 655, 661, 675], "2002": 165, "7437": 165, "abdul": 165, "rahman": 165, "h": [165, 210, 260, 270, 299, 332, 355, 427, 431, 458, 583, 604, 606, 607, 629, 637, 654], "osten": 165, "gorecki": 165, "e": [165, 167, 169, 170, 222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 367, 382, 397, 407, 435, 437, 438, 439, 448, 454, 460, 587, 604, 605, 607, 608, 611, 615, 625, 638, 654, 657, 658, 679, 680], "l": [165, 169, 170, 226, 230, 231, 260, 286, 290, 291, 315, 324, 348, 355, 357, 429, 448, 587, 604, 608, 638, 654, 658], "novak": 165, "ed": 165, "metrologi": 165, "2005": [165, 438, 448, 657, 658], "32": [165, 432, 437, 557, 604, 614, 635, 639, 640, 641, 651, 655, 658, 661, 677], "40": [165, 260, 437, 604, 607, 612, 621, 630, 632, 637, 641, 643, 646, 654, 657, 658, 665], "intern": [165, 608], "societi": [165, 423, 426, 443], "photon": 165, "label_dict": [166, 167], "delta": [166, 167, 455], "despeckl": [166, 614, 654], "identifi": [166, 167, 363, 438, 448, 583, 604, 608, 610, 638, 657, 658, 660, 676], "small": [166, 167, 437, 438, 448, 460, 614, 629, 630, 646], "investig": [166, 167, 458, 625], "scipi": [166, 167, 454, 596, 604, 614, 615, 646, 647, 669, 679, 680, 682], "core": [166, 167, 363, 382, 410, 421, 437, 438, 448, 455, 456, 573, 586, 607, 612, 614, 615, 657, 680], "queri": [166, 167, 421, 604, 608, 612], "speckl": [166, 657], "find_object": 166, "tupl": [166, 167, 222, 224, 227, 228, 229, 232, 233, 234, 235, 237, 247, 249, 251, 253, 263, 265, 267, 282, 284, 287, 288, 289, 292, 293, 294, 296, 311, 313, 316, 317, 321, 322, 325, 326, 327, 329, 344, 346, 349, 350, 354, 355, 358, 359, 360, 362, 394, 405, 417, 418, 419, 421, 425, 451, 452, 553, 572, 592, 608, 614], "contigu": [166, 167], "perman": 166, "deg": [166, 167, 203, 206, 428, 434, 435, 436, 453, 454, 598, 604, 661], "label": [167, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 246, 247, 249, 251, 253, 261, 263, 265, 267, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 287, 288, 289, 292, 293, 294, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 316, 317, 320, 321, 322, 325, 326, 327, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 350, 353, 354, 355, 358, 359, 360, 601, 604, 606, 608, 610, 611, 612, 614, 629, 636, 637, 646, 647, 651, 659], "period": [167, 582, 604, 607, 612, 673], "account": [167, 614], "g": [167, 382, 417, 434, 448, 454, 456, 463], "examin": [167, 365, 378, 381, 607, 610, 615, 669, 680], "box": [167, 382, 659], "alwai": [167, 366, 378, 437, 438, 448, 454, 608, 614, 618, 669], "readi": 167, "min_ncp": [168, 169, 205], "min_rhv": [168, 169, 204, 205], "min_refl": [168, 205], "20": [168, 204, 205, 458, 573, 604, 605, 606, 607, 608, 610, 612, 625, 626, 629, 630, 636, 637, 638, 641, 643, 644, 645, 646, 647, 649, 654, 656, 657, 658, 660, 666, 667, 671, 675, 677], "max_refl": [168, 205], "undesir": [168, 203, 204, 205, 206, 421], "cross": [168, 204, 205, 222, 225, 247, 282, 285, 311, 314, 344, 347, 419, 575, 576, 604, 607, 610, 614, 623, 634, 643, 652, 654, 657, 677, 678], "ratio": [168, 204, 205, 236, 295, 328, 361, 424, 427, 604, 607, 610, 612, 677], "min_rhi": [168, 205], "criteria": [168, 203, 204, 205, 206, 421, 454, 460, 612], "built": [168, 203, 204, 205, 206, 420, 421, 611], "lowest": [168, 203, 204, 205, 206, 426, 457, 610, 611, 625, 629, 655, 657, 658], "greatest": [168, 205], "self_const": [169, 170], "60000": [169, 170, 632, 636, 675], "low_z": [169, 170], "high_z": [169, 170], "53": [169, 170, 604, 606, 610, 661], "min_phidp": [169, 170], "01": [169, 170, 320, 353, 454, 604, 606, 607, 610, 612, 622, 633, 635, 652, 662, 678], "sys_phas": 169, "overide_sys_phas": 169, "nowrap": [169, 170], "really_verbos": [169, 170], "lp_solver": [169, 170], "pyglpk": [169, 170, 614, 669, 679], "kdp_field": [169, 170, 442, 443, 445, 446, 453, 454, 455, 456, 659, 660], "unf_field": [169, 170], "window_len": [169, 170], "proc": [169, 170, 454, 614], "coef": [169, 170, 614], "914": [169, 170, 614], "lp": [169, 170, 614, 669], "consist": [169, 170, 614, 654, 675], "factor": [169, 170, 384, 426, 441, 442, 443, 444, 445, 446, 572, 604, 605, 607, 611, 614, 637, 645, 651, 675], "low": [169, 170, 374, 454, 611, 630, 638], "high": [169, 170, 222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 437, 453, 454, 607, 608, 610, 630, 659, 660], "copolar": [169, 170, 453, 656], "automat": [169, 378, 383, 384, 421, 425, 460, 606, 608, 612, 614, 615, 617, 641, 669, 680], "lpx": [169, 170], "messag": [169, 170, 238, 254, 374, 605, 611, 614, 617, 626], "suppress": [169, 170, 454], "cvxopt": [169, 170, 614, 669, 679], "cylp": [169, 170, 614, 669, 679, 682], "cylp_mp": [169, 170], "modul": [169, 170, 559, 602, 608, 614, 615, 625, 626, 669, 672, 673, 675, 676, 677, 679, 680], "solv": [169, 170, 613, 614], "horizon": [169, 170, 453], "sobel": [169, 170], "worker": [169, 170], "link": [169, 170, 606, 607, 610, 612, 614], "1z": [169, 170], "reproc_phas": [169, 170], "sob_kdp": [169, 170], "recalcul": [169, 170, 671], "giangrand": [169, 170, 669], "mcgraw": [169, 170], "lei": [169, 170], "applic": [169, 170, 222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 382, 438, 448, 595, 608, 610, 615, 680], "program": [169, 170, 614, 615, 669, 680], "atmo": [169, 170, 427, 429, 437, 442, 447, 453, 458, 573, 587, 611, 615, 638, 658, 680], "tech": [169, 170, 442, 453, 587, 638, 658], "2013": [169, 170, 455, 458, 677], "30": [169, 170, 431, 432, 437, 438, 448, 604, 606, 607, 608, 611, 612, 629, 630, 637, 641, 643, 654, 657, 658, 673], "1716": [169, 170], "system_phas": 170, "ncpt": 170, "first_gate_sysp": 170, "carri": 170, "smaller": [170, 355, 421, 604, 607, 608, 615, 657, 680], "off": [170, 222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 452, 604, 608, 635, 657, 658], "custom": [171, 221, 222, 223, 224, 229, 233, 234, 235, 246, 247, 249, 251, 253, 261, 263, 265, 267, 281, 282, 283, 284, 289, 293, 294, 310, 311, 312, 313, 321, 322, 326, 327, 343, 344, 345, 346, 354, 355, 359, 360, 420, 437, 608, 623, 653, 662, 675, 678], "max_h_iso0": 203, "thick": [203, 206], "400": [203, 206, 614, 671], "beamwidth": [203, 206], "primarili": [203, 206], "melt": [203, 206, 442, 453, 454, 458, 587, 638, 657, 658, 659, 660], "db": [203, 206, 424, 612, 646, 660, 677], "phi_field": 204, "textzdr_field": 204, "textrhv_field": 204, "textphi_field": 204, "textrefl_field": 204, "wind_siz": [204, 425, 600, 673], "7": [204, 372, 453, 462, 600, 602, 604, 606, 607, 608, 610, 611, 615, 617, 626, 636, 638, 650, 654, 660, 676, 677, 680], "max_textphi": 204, "max_textrhv": 204, "max_textzdr": 204, "85": [204, 604, 608, 660, 661], "max_textrefl": 204, "move": [204, 583, 606, 610, 614, 629], "highest": 204, "min_temp": 206, "There": [207, 606, 608, 610, 617, 635, 679, 682], "colorblind": [207, 605, 610, 635], "friendli": [207, 605, 610, 614, 635], "revers": [207, 222, 233, 282, 293, 311, 326, 344, 359, 378, 454, 614], "_r": 207, "matplotlib": [207, 222, 224, 227, 228, 229, 233, 234, 235, 247, 248, 249, 251, 253, 262, 263, 265, 267, 282, 284, 287, 288, 289, 293, 294, 311, 313, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 382, 604, 605, 606, 607, 610, 611, 612, 614, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 669, 671, 672, 673, 675, 676, 679, 682], "pyart_colormap": 207, "bluebrown10": [207, 635], "bluebrown11": [207, 635], "brbu10": [207, 635], "brbu12": [207, 635], "bu10": [207, 635], "bu7": [207, 635], "budor12": [207, 635], "budor18": [207, 635], "budrd12": [207, 635], "budrd18": [207, 635], "bugr14": [207, 635], "bugy8": [207, 635], "buor10": [207, 635], "buor12": [207, 635], "buor8": [207, 635], "buorr14": [207, 635], "carbone11": [207, 635], "carbone17": [207, 635], "carbone42": [207, 635], "cat12": [207, 635], "ewilson17": [207, 635], "grmg16": [207, 635], "gray5": [207, 635], "gray9": [207, 635], "nwsref": [207, 635], "nwsvel": [207, 635], "nws_spw": [207, 635], "pd17": [207, 635], "rrate11": [207, 635], "rdylbu11b": [207, 635], "refdiff": [207, 635], "scook18": [207, 635], "stepseq25": [207, 635], "symgray12": [207, 635], "theodore16": [207, 635], "wild25": [207, 635], "langrainbow12": [207, 635], "homeyerrainbow": [207, 614, 635], "balanc": [207, 614, 635], "chasespectr": [207, 635], "spectralextend": [207, 635], "displai": [208, 222, 224, 229, 233, 234, 235, 237, 268, 282, 284, 289, 293, 294, 296, 297, 311, 313, 321, 322, 326, 327, 329, 330, 344, 346, 354, 355, 359, 360, 362, 382, 426, 462, 463, 605, 606, 607, 608, 610, 611, 612, 614, 615, 620, 621, 625, 626, 630, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 671, 672, 673, 675, 676, 680], "airborn": [208, 614], "plot_var": [208, 268, 297, 330], "order": [208, 268, 297, 330, 363, 378, 383, 384, 410, 438, 448, 453, 454, 572, 604, 611, 612, 614, 615, 620, 657, 658, 669, 680], "cb": [208, 268, 297, 330, 637, 658, 660], "colorbar": [208, 222, 223, 224, 229, 232, 233, 234, 235, 246, 247, 249, 251, 253, 254, 261, 263, 265, 267, 268, 282, 283, 284, 289, 292, 293, 294, 297, 311, 312, 313, 321, 322, 325, 326, 327, 330, 344, 345, 346, 354, 355, 358, 359, 360, 604, 606, 607, 608, 614, 623, 629, 634, 635, 651, 652, 654, 658, 678], "loc": [208, 268, 297, 330, 604, 606, 610, 611, 612, 636], "titl": [209, 211, 212, 213, 222, 224, 229, 232, 233, 234, 235, 243, 244, 245, 247, 249, 251, 253, 256, 257, 258, 263, 265, 267, 269, 271, 272, 273, 282, 284, 289, 292, 293, 294, 298, 300, 301, 302, 311, 313, 321, 322, 325, 326, 327, 331, 333, 334, 335, 344, 346, 354, 355, 358, 359, 360, 605, 606, 607, 608, 610, 611, 613, 614, 620, 621, 629, 637, 639, 640, 642, 644, 645, 649, 677], "ext": [210, 242, 255, 270, 299, 332], "png": [210, 242, 255, 270, 299, 332, 605, 606, 608, 610, 611], "datetime_format": [210, 212, 270, 272, 299, 301, 332, 334], "use_sweep_tim": [210, 212, 270, 272, 299, 301, 332, 334], "form": [210, 224, 242, 255, 270, 284, 299, 313, 332, 346, 604, 608, 614], "radar_name_field_sweep_tim": [210, 270, 299, 332], "datetim": [210, 212, 229, 233, 235, 270, 272, 289, 293, 294, 299, 301, 321, 326, 327, 332, 334, 354, 359, 360, 367, 368, 384, 428, 431, 432, 434, 435, 436, 577, 578, 579, 580, 581, 606, 610, 611, 614], "strftime": [210, 212, 229, 233, 270, 272, 289, 293, 299, 301, 321, 326, 332, 334, 354, 359, 606, 607, 611], "suitabl": [210, 242, 255, 270, 299, 332, 437, 608], "xaxi": [214, 217, 274, 277, 303, 306, 336, 339, 637], "static": [215, 216, 225, 226, 230, 236, 237, 275, 276, 285, 286, 290, 295, 296, 304, 305, 314, 315, 328, 329, 337, 338, 347, 348, 361, 362, 605], "yaxi": [215, 216, 218, 219, 220, 275, 276, 278, 279, 280, 304, 305, 307, 308, 309, 337, 338, 340, 341, 342], "keyword": [221, 281, 310, 322, 343, 355, 374, 376, 604, 608, 614, 672, 675], "plot_ppi": [221, 281, 310, 343, 614, 621, 659, 660, 665, 667, 671], "plot_sweep_grid": [221, 614], "target_azimuth": [222, 282, 311, 344, 575], "mask_tupl": [222, 229, 232, 233, 234, 235, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 608], "norm": [222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 454, 608, 614, 637, 659], "cmap": [222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 382, 604, 605, 606, 607, 608, 610, 611, 612, 629, 635, 636, 637, 638, 642, 645, 647, 649, 650, 654, 656, 657, 658, 660, 665, 666, 667, 672, 673], "mask_outsid": [222, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 605, 608, 614, 644, 645, 654, 660], "title_flag": [222, 224, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 292, 293, 294, 311, 313, 321, 322, 325, 326, 327, 344, 346, 354, 355, 358, 359, 360, 608, 649], "axislabel": [222, 224, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 292, 293, 294, 311, 313, 321, 325, 326, 327, 344, 346, 354, 358, 359, 360, 605, 639, 644, 645], "axislabels_flag": [222, 224, 229, 232, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 292, 293, 294, 311, 313, 321, 325, 326, 327, 344, 346, 354, 358, 359, 360, 614, 657, 658], "colorbar_flag": [222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 606, 608, 611], "colorbar_label": [222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 605, 608, 610, 620, 621, 625, 639, 640, 644, 645, 646, 647, 651, 660, 665], "colorbar_ori": [222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 610, 614], "reverse_xaxi": [222, 233, 282, 293, 311, 326, 344, 359], "fig": [222, 223, 224, 229, 232, 233, 234, 235, 246, 247, 249, 251, 253, 261, 263, 265, 267, 282, 283, 284, 289, 292, 293, 294, 311, 312, 313, 321, 322, 325, 326, 327, 344, 345, 346, 354, 355, 358, 359, 360, 604, 605, 606, 607, 608, 610, 611, 612, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 654, 656, 658, 659, 660, 661, 665, 673, 675, 676], "tick": [222, 223, 224, 229, 233, 234, 235, 246, 247, 249, 251, 253, 261, 263, 265, 267, 282, 283, 284, 289, 293, 294, 311, 312, 313, 321, 322, 326, 327, 344, 345, 346, 354, 355, 359, 360, 608, 614, 635, 637, 657, 658, 659], "ticklab": [222, 223, 224, 229, 233, 234, 235, 246, 247, 249, 251, 253, 261, 263, 265, 267, 282, 283, 284, 289, 293, 294, 311, 312, 313, 321, 322, 326, 327, 344, 345, 346, 354, 355, 359, 360, 608, 614, 657, 658, 659], "raster": [222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 382, 608, 614], "pseudo": [222, 282, 311, 344, 614], "associ": [222, 282, 311, 344, 399, 437, 604, 617, 654], "pcolormesh": [222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 604, 614, 629, 646, 654, 657, 658], "integ": [222, 282, 311, 344, 384, 425, 451, 452], "ncp": [222, 229, 232, 233, 234, 235, 282, 289, 292, 293, 294, 311, 321, 322, 325, 326, 327, 344, 354, 355, 358, 359, 360, 608], "lumin": [222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 608], "scale": [222, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 383, 384, 420, 421, 429, 437, 454, 455, 604, 607, 608, 638], "west": [222, 233, 282, 293, 311, 326, 344, 359, 604, 608, 639], "leav": [222, 224, 229, 233, 234, 235, 247, 249, 251, 253, 263, 265, 267, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 606, 608], "orient": [222, 223, 224, 229, 233, 234, 235, 246, 247, 249, 251, 253, 261, 263, 265, 267, 282, 283, 284, 289, 293, 294, 311, 312, 313, 321, 322, 326, 327, 344, 345, 346, 354, 355, 359, 360, 453, 606, 608, 609, 611, 659, 661], "treat": [222, 229, 233, 234, 235, 251, 253, 263, 265, 267, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 608], "themselv": [222, 229, 233, 234, 235, 251, 253, 263, 265, 267, 282, 289, 293, 294, 311, 321, 322, 326, 327, 344, 354, 355, 359, 360, 608], "figur": [222, 223, 224, 229, 232, 233, 234, 235, 246, 247, 249, 251, 253, 261, 263, 265, 267, 282, 283, 284, 289, 292, 293, 294, 311, 312, 313, 321, 322, 325, 326, 327, 344, 345, 346, 354, 355, 358, 359, 360, 605, 606, 607, 608, 610, 611, 612, 613, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 656, 657, 658, 660, 665, 672, 673, 675, 676], "render": [222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 607, 608], "rather": [222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 608], "larg": [222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 454, 460, 608, 610, 611, 614], "Be": [222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 608, 617], "sure": [222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 607, 608, 611, 613, 614, 617, 629, 637, 657, 679, 682], "dpi": [222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 606, 608, 610], "pdf": [222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 608], "ep": [222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 608], "svg": [222, 224, 229, 233, 234, 235, 282, 284, 289, 293, 294, 311, 313, 321, 322, 326, 327, 344, 346, 354, 355, 359, 360, 608], "mappabl": [223, 246, 254, 261, 283, 312, 345, 611], "cax": [223, 246, 261, 283, 312, 345, 659], "imag": [223, 246, 261, 283, 312, 345, 437, 452, 572, 587, 604, 605, 607, 608, 611, 614, 623, 634, 652, 655, 657, 658, 678], "contourset": [223, 246, 254, 261, 283, 312, 345], "etc": [223, 246, 249, 254, 261, 283, 312, 322, 345, 355, 381, 428, 431, 432, 434, 436, 448, 606, 608, 614, 654], "onto": [223, 246, 261, 263, 283, 312, 322, 345, 355, 410, 417, 421, 457, 608, 612], "drawn": [223, 246, 261, 283, 312, 345, 608], "target_rang": [224, 284, 313, 346], "delta_x": [224, 284, 313, 346], "delta_i": [224, 284, 313, 346], "az_limit": [224, 284, 313, 346], "el_limit": [224, 284, 313, 346], "corner": [224, 284, 313, 320, 346, 353, 608, 609, 614], "reflector": [224, 284, 313, 346, 614], "griddata": [224, 284, 313, 346], "min": [224, 284, 313, 346, 604, 608, 661], "max": [224, 284, 313, 346, 382, 604, 608, 614, 625, 629, 630, 635, 636, 641, 649, 661, 665, 666, 667], "npt": [225, 230, 285, 290, 314, 323, 347, 356], "hair": [225, 285, 314, 347, 643], "higher": [225, 230, 285, 290, 314, 323, 347, 356, 421, 607, 612, 654, 673, 675], "col": [226, 230, 231, 286, 290, 291, 315, 324, 348, 357, 607, 630], "line": [226, 232, 248, 249, 260, 262, 286, 292, 315, 318, 319, 322, 323, 325, 348, 351, 352, 355, 356, 358, 382, 454, 605, 606, 607, 608, 611, 614, 615, 617, 623, 634, 636, 652, 654, 655, 678, 679, 680, 682], "color": [226, 227, 228, 230, 231, 248, 286, 287, 288, 290, 291, 315, 316, 317, 319, 322, 323, 324, 348, 349, 350, 355, 357, 382, 605, 606, 607, 608, 610, 611, 612, 636, 637, 638, 646, 647, 654, 655, 657, 658, 659, 660], "linestyl": [226, 230, 231, 248, 286, 290, 291, 315, 324, 348, 357, 606, 608, 610, 636, 637, 647], "symbol": [227, 228, 287, 288, 316, 317, 320, 349, 350, 353], "text_color": [227, 228, 287, 288, 316, 317, 349, 350], "text": [227, 228, 287, 288, 316, 317, 320, 349, 350, 353, 475, 606, 613, 614, 617, 635, 644, 661, 669, 673], "just": [227, 228, 287, 288, 316, 317, 349, 350, 372, 582, 612, 614, 615, 635, 638, 671, 677, 680, 682], "marker": [227, 228, 232, 248, 262, 287, 288, 292, 316, 317, 325, 349, 350, 358, 604, 606, 611], "title_datetime_format": [229, 233, 289, 293, 321, 326, 354, 359], "title_use_sweep_tim": [229, 233, 289, 293, 321, 326, 354, 359], "range_ring_location_km": [230, 290, 323, 356], "lw": [230, 231, 290, 291, 324, 357, 608, 610, 654], "range_r": [231, 291, 324, 357], "seri": [231, 291, 324, 357, 435, 604, 607], "draw": [231, 249, 260, 291, 322, 324, 355, 357, 606, 608], "format_str": [232, 292, 325, 358], "ray_min": [232, 292, 325, 358], "ray_max": [232, 292, 325, 358], "style": [232, 248, 262, 292, 318, 319, 323, 325, 351, 352, 356, 358, 382, 614], "ignoretilt": 234, "antenna_to_cartesian_track_rel": 234, "slant": [234, 418, 434], "ncar": 234, "soloii": 234, "time_axis_flag": [235, 294, 327, 360, 607], "date_time_form": [235, 294, 327, 360], "tz": [235, 294, 327, 360, 606], "zone": [235, 294, 327, 360], "info": [235, 294, 322, 327, 355, 360, 608, 614, 659, 660, 677], "aspect_ratio": [236, 295, 328, 361], "aspect": [236, 295, 328, 361, 635], "xlim": [237, 296, 329, 362, 604, 605, 608, 610, 611, 612, 640, 642, 646, 647, 660, 675], "ylim": [237, 296, 329, 362, 604, 605, 607, 608, 610, 611, 612, 640, 642, 644, 645, 646, 647, 649, 651, 654, 660], "cartopi": [238, 239, 240, 241, 249, 297, 322, 604, 606, 608, 610, 611, 612, 614, 615, 623, 625, 626, 629, 630, 634, 636, 637, 650, 652, 655, 657, 658, 665, 669, 672, 673, 675, 676, 678, 679, 680, 682], "coastlin": [239, 249, 322, 355, 604, 608], "polit": 240, "state": [241, 455, 606, 608, 610, 614], "grid_name_field_level_tim": [242, 255], "latitudin": [244, 251, 265], "step": [247, 382, 428, 431, 432, 434, 435, 436, 605, 607, 612, 617, 625, 646, 647, 657, 682], "interp_typ": 247, "x_axi": [247, 636], "metpi": [247, 606, 608, 610, 611, 614], "design": [247, 587, 604, 615, 646, 657, 658, 669, 680], "geodes": 247, "nearest": [247, 374, 418, 421, 428, 431, 432, 434, 436, 449, 575, 576, 596, 604, 608, 614, 675], "dataarrai": 247, "interp": [247, 456], "ex": [247, 456, 606, 610, 612, 613, 635], "upper": [247, 249, 251, 253, 263, 265, 267, 606, 610, 611, 612, 636], "colormesh": [247, 249, 251, 253, 263, 265, 267], "64": [247, 249, 251, 253, 263, 265, 267, 605, 635, 640, 641, 642, 646, 648, 650, 651, 655, 676, 679], "linewidth": [248, 262, 606, 608, 610, 611, 637, 646, 647], "crosshair": [248, 262, 608], "lat_lin": [249, 260, 322, 355, 606, 608, 629, 643, 655], "lon_lin": [249, 260, 322, 355, 606, 608, 629, 643, 655], "embellish": [249, 322, 355, 606, 637], "add_grid_lin": [249, 322, 606], "reason": [249, 260, 608], "america": [249, 260, 322, 355, 608], "cr": [249, 297, 322, 453, 604, 606, 608, 610, 611, 612, 625, 626, 629, 630, 636, 637, 643, 650, 655, 657, 658, 659, 665, 672, 673, 676], "subsequ": [249, 322, 608], "geoax": [249, 322, 608, 672, 675], "platecarre": [249, 322, 604, 606, 608, 610, 611, 612, 625, 629, 636, 637, 650, 655, 657, 658, 665, 673, 676], "shapefil": [249, 322, 355, 608], "certain": [249, 322, 364, 452, 587, 608, 614, 657, 658, 676], "plot_latitudinal_level": [250, 264], "y_index": [251, 265], "basemap": [251, 253, 254, 259, 260, 263, 265, 267, 330, 351, 352, 353, 355, 356, 614, 669, 679], "plot_longitudinal_level": [252, 266], "x_index": [253, 267], "top": [254, 421, 457, 604, 606, 609, 614, 615, 635, 654, 655, 675, 680], "veric": 256, "area_thresh": [260, 355], "10000": [260, 355, 428, 431, 432, 434, 436, 463, 630, 636, 657, 658, 675], "auto_rang": 260, "min_lon": [260, 322, 355, 606, 608, 629, 643, 676], "92": [260, 644, 655], "max_lon": [260, 322, 355, 606, 608, 629, 643, 676], "86": [260, 608], "min_lat": [260, 322, 355, 606, 608, 629, 643, 676], "max_lat": [260, 322, 355, 606, 608, 629, 643, 676], "44": [260, 438, 448, 604, 606, 657, 658, 679], "databas": [260, 355, 610], "merc": [260, 355], "mercat": [260, 630], "line_styl": [262, 318, 319, 323, 351, 352, 356, 643], "plot_rhi": [281, 310, 343, 604], "plot_vpt": [281, 310, 343, 607], "grid_project": [297, 420, 421, 608], "progress": [297, 330, 611], "correctli": [297, 330, 611, 614], "github": [297, 330, 606, 609, 614, 647, 669, 679, 682], "tracker": [297, 330, 615, 669, 680], "azimuthalequidist": 297, "line_lon": [318, 351], "line_lat": [318, 351], "compat": [318, 319, 320, 323, 351, 352, 353, 356, 379, 606, 614, 618, 682], "line_x": [319, 352], "line_i": [319, 352], "ro": [320, 353], "label_text": [320, 353], "label_offset": [320, 353], "bottom": [320, 353, 606, 608, 635, 637], "110m": [322, 608], "shapefile_kwarg": [322, 608], "alpha": [322, 355, 441, 442, 443, 444, 445, 446, 606, 610, 637, 646, 654], "edgecolor": [322, 355, 606, 610, 646], "face": [322, 355, 608], "reson": [322, 355, 608], "lambertconform": [322, 608, 626, 643, 672], "domain": [322, 355, 604, 608, 629], "neither": [322, 355, 386, 608], "extend": [322, 355, 378, 608], "word": [322, 608], "10m": [322, 606, 608, 612, 626, 643], "50m": [322, 608, 665, 673, 676], "naturalearthfeatur": [322, 608], "tranpar": [322, 355, 608], "overplot": [322, 355, 608], "pixel": [322, 355, 451, 452, 557, 604, 608], "lcc": 355, "cylindr": 355, "mill": 355, "exhibit": 355, "distort": 355, "aea": 355, "laea": 355, "conform": [355, 608, 669, 671], "tmerc": 355, "stere": 355, "aeqd": 355, "cass": 355, "even": [355, 437, 456, 610, 614, 646, 654, 669, 675, 682], "cyl": [355, 614], "cannot": [355, 366, 606, 608], "lake": [355, 610], "esri": 355, "background": [355, 363, 438, 448, 460, 608, 613, 643, 650, 657, 658], "untest": 355, "always_core_thr": [363, 438, 448, 657, 658], "use_cosin": [363, 438, 448, 657, 658], "max_diff": [363, 438, 448, 657, 658], "zero_diff_cos_v": [363, 438, 448, 657, 658], "use_addit": [363, 438, 448, 657, 658], "scalar_diff": [363, 438, 448, 657, 658], "convect": [363, 437, 438, 448, 460, 604, 611, 614, 623, 653, 662, 678], "stratiform": [363, 437, 438, 448, 460, 614, 623, 653, 662, 678], "classif": [363, 437, 438, 442, 448, 453, 460, 614, 623, 653, 662, 678], "cosin": [363, 438, 448, 657, 658], "scalar": [363, 438, 448, 606, 608, 614, 657], "classifi": [363, 437, 438, 448, 453, 614, 657, 658, 659], "eqn": [363, 438, 448], "b1": [363, 438, 448, 612], "yuter": [363, 438, 439, 448, 460, 587, 638, 654, 657, 658], "1997": [363, 438, 448, 657, 658], "zero": [363, 380, 438, 448, 452, 454, 596, 611, 614, 654, 657, 658, 672, 676], "multipli": [363, 438, 448, 607, 657, 671], "most": [364, 372, 606, 607, 608, 614, 635, 654, 658, 673, 675, 682], "storage_opt": [365, 374, 376], "anon": [365, 374, 376, 604, 606, 610, 611], "open": [365, 374, 376, 475, 604, 607, 608, 610, 611, 613, 614, 615, 640, 669, 671, 672, 673, 675, 676, 677, 680, 682], "binari": [365, 448, 604, 617], "transpar": [365, 606, 608, 614, 646], "decompress": [365, 614], "gzip": [365, 372, 373], "bzip2": [365, 614], "close": [365, 448, 454, 605, 606, 610, 611, 612, 614], "compress": [365, 372, 373, 608, 614], "backend": [365, 374], "googl": [365, 374, 614, 615, 680], "cloud": [365, 374, 437, 454, 606, 607, 615, 617, 623, 624, 627, 669, 678, 680, 682], "storag": [365, 374, 552], "amazon": [365, 374, 604, 606, 608, 610, 625, 626], "web": [365, 374, 382, 604, 608, 610, 612, 625, 626], "servic": [365, 374, 604, 606, 608, 610, 612, 617, 625, 626, 635], "s3": [365, 374, 606, 610, 625, 626, 638, 657, 658], "file_lik": 365, "use_rsl": 366, "read_": 366, "trmm": [366, 378, 614, 669, 679], "librari": [366, 375, 378, 381, 382, 604, 606, 607, 608, 610, 614, 615, 616, 669, 671, 672, 673, 675, 676, 677, 679, 680], "choos": [366, 608, 623, 634, 652, 657, 658, 678, 682], "Not": [366, 373, 453], "typeerror": [366, 614], "launch_datetim": 367, "date": [367, 368, 602, 606, 608, 612, 613, 614, 625, 626], "radiosond": 367, "launch": 367, "record": [367, 610, 612, 677], "target_datetim": 368, "closest": [368, 410, 428, 431, 432, 434, 436], "profile_datetim": 368, "use_arm_scan_nam": 369, "scan_nam": [369, 604, 607, 614], "use_file_field_attribut": 370, "csu": [370, 614], "chill": 370, "chl": [370, 614], "field_file_nam": 370, "long_nam": [370, 604, 607, 657, 658, 660, 672, 677], "zlib": [372, 373], "read_mdv": [372, 605, 621, 631, 642, 646, 647, 648], "interchang": 372, "vlevel": 372, "proj_polar_radar": 372, "9": [372, 442, 444, 453, 583, 604, 606, 607, 608, 610, 611, 613, 626, 631, 636, 638, 643, 647, 655, 656, 657, 658, 660, 665, 669, 671, 676, 677], "proj_rhi_radar": 372, "13": [372, 583, 604, 607, 610, 626, 627, 632, 633, 649, 654, 660, 669, 676, 677, 678], "vlevel_typ": 372, "vert_type_z": 372, "vert_type_elev": 372, "vert_type_az": 372, "17": [372, 606, 607, 644, 649, 652], "vert_type_pressur": 372, "vert_type_theta": 372, "unknown": [372, 614], "station": [374, 375, 608, 626], "linear_interp": 374, "nexrad": [374, 375, 376, 377, 604, 614, 623, 624, 627, 634, 638, 652, 657, 658, 669, 677, 678], "archiv": [374, 606, 608, 610, 612, 639, 669], "host": [374, 376, 606, 617], "noaa": [374, 376, 378, 604, 606, 608, 610, 611, 625, 626, 638, 657, 658], "nation": [374, 376, 604, 606, 608, 610, 611, 625, 635], "climat": [374, 376, 607, 608, 610, 614, 615, 669, 671, 672, 673, 675, 676, 677, 680], "ucar": [374, 375, 604], "thredd": [374, 375, 381], "server": [374, 375], "letter": [374, 375, 377], "icao": [374, 375, 614], "older": [374, 375, 614, 615, 623, 624, 627, 669, 678, 680], "mix": [374, 437, 587, 638, 657, 658], "constant": [374, 414, 420, 421, 451, 454, 604, 607, 614, 626], "fsspec": [374, 376, 610, 611, 614], "cut": [374, 375, 376, 452], "www": [374, 375, 376, 451, 606, 610, 615, 680], "ncdc": [374, 376], "gov": [374, 376, 604, 605, 606, 610, 612, 620, 621, 625, 626, 629, 631, 632, 635, 636, 637, 639, 640, 641, 642, 644, 646, 647, 648, 649, 651, 655, 656, 665, 666, 667], "edu": [374, 375, 451, 604, 638, 654, 657, 658], "catalog": [374, 375, 604], "html": [374, 375, 451, 606, 610, 614, 615, 669, 679, 680], "common": [375, 607, 614, 630, 669, 679], "cdm": [375, 381], "url": [375, 606, 608, 612, 626], "java": [375, 381], "tool": [375, 381, 604, 607, 612, 669, 679], "opendap": 375, "accept": [375, 428, 431, 432, 434, 455, 456, 608, 612, 614, 615, 680], "compil": [375, 455, 611, 614, 669, 679], "unidata": [375, 604, 625], "htm": 375, "product": [376, 378, 426, 463, 604, 608, 614], "nw": [376, 610, 611], "wsr": 376, "88d": 376, "iii": 376, "distribut": [376, 438, 439, 447, 448, 462, 557, 568, 569, 570, 571, 588, 589, 614, 615, 654, 657, 658, 669, 680], "roc": 376, "wsr88d": [376, 377], "level_iii": 376, "level3info": 376, "asp": 376, "radar_format": 377, "callid": 377, "skip_range_check": 377, "rsl_radar": 377, "id": [377, 382, 604, 612, 614], "verifi": [377, 590, 601], "ioerror": 377, "time_ord": [378, 614], "full_xhdr": 378, "noaa_hh_hdr": 378, "ignore_xhdr": 378, "ignore_sweep_start_m": 378, "sigmet": [378, 614, 669], "iri": [378, 614, 669, 679], "sequenti": [378, 635], "re": [378, 437, 606, 615, 680], "manner": 378, "determind": 378, "maintain": [378, 417, 614], "yet": [378, 625, 630], "warn": [378, 381, 453, 604, 606, 607, 608, 610, 611, 612, 614, 620, 626, 629, 660, 675], "reverse_and_rol": 378, "strictli": 378, "increas": [378, 421, 454, 457, 604, 608, 615, 635, 654, 675, 680], "becom": [378, 657, 672, 675], "thisopt": 378, "strict": 378, "header": [378, 614], "decod": [378, 614], "hurrican": [378, 608, 657, 658], "hunter": 378, "millisecond": [378, 611], "precis": [378, 437], "explic": 378, "read_rsl": [378, 679], "error": [378, 382, 455, 456, 604, 606, 608, 611, 613, 614, 630, 679], "uf": [379, 384, 614, 669], "introduc": [379, 456], "implement": [379, 386, 399, 420, 443, 451, 607, 608, 611, 614, 615, 620, 658, 680], "time_refer": [380, 671], "compliant": 380, "mani": [380, 614, 615, 669, 675, 680, 682], "outlin": [380, 454, 583], "_zlib": [380, 381], "_deflatelevel": [380, 381], "_shuffl": [380, 381], "_fletcher32": [380, 381], "_contingu": [380, 381], "_chunksiz": [380, 381], "_endian": [380, 381], "_least_significant_digit": [380, 381], "_fillvalu": [380, 381, 614, 672, 677], "write_proj_coord_si": 381, "proj_coord_si": 381, "write_point_x_y_z": 381, "write_point_lon_lat_alt": 381, "projectioncoordinatesystem": 381, "toolsui": 381, "written": [381, 383, 384, 614, 617, 669], "appropri": [381, 583, 608, 618], "understood": 381, "rgb": 382, "viridi": [382, 657, 658], "color_level": 382, "warp": 382, "sld": 382, "use_doublequot": 382, "geotiff": [382, 614, 669], "wgs84": 382, "sphere": [382, 584, 597], "latter": [382, 608], "usabl": [382, 604], "byte": [382, 614], "former": 382, "gi": 382, "while": [382, 608, 611, 612, 630, 669, 673, 682], "show": [382, 604, 605, 606, 608, 610, 612, 613, 614, 615, 620, 621, 625, 626, 629, 630, 631, 632, 635, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 657, 658, 660, 665, 671, 673, 675, 676, 677, 680], "lack": [382, 397, 407], "composit": [382, 426, 604, 607, 614, 623, 653, 662, 678], "gdal": [382, 614, 669], "via": [382, 418, 419, 606, 608, 617], "conda": [382, 610, 614, 615, 669, 679, 680, 682], "rbg": 382, "tabl": [382, 604], "column": [382, 573, 585, 586, 604, 606, 607, 608, 614, 623, 653, 662, 678], "categor": [382, 606, 659], "255": [382, 614, 658], "hydrometeor": [382, 442, 453, 614, 623, 653, 662, 673, 678], "gdalwarp": 382, "command": [382, 614, 615, 617, 669, 672, 680, 682], "o": [382, 475, 606, 608, 611, 615, 637, 669, 679, 680], "az": [382, 606, 614, 644, 645], "descriptor": 382, "tiff": 382, "don": [382, 607, 608, 611, 614, 629], "t": [382, 431, 437, 438, 448, 454, 455, 458, 463, 604, 607, 608, 611, 612, 614, 629, 654, 657, 658, 669, 671], "quot": 382, "help": [382, 464, 606, 607, 608, 610, 612, 615, 617, 629, 635, 657, 680, 682], "translat": 382, "sr": [382, 604], "instead": [382, 604, 606, 608, 611, 612, 614, 615, 626, 654, 657, 675, 679, 680, 682], "mdv_field_nam": [383, 614], "field_write_ord": [383, 384], "sentinel": [383, 384], "float32": [383, 604, 607, 608, 614, 655, 671, 673, 677], "_write_as_dtyp": 383, "writabl": 383, "satisfi": 383, "xy": [383, 421], "irregular": 383, "exce": [383, 657, 658], "122": [383, 612, 625, 629, 636, 656, 660, 665], "uint8": 383, "uint16": 383, "scale_factor": [383, 607], "add_offset": [383, 607], "uncompress": 383, "sai": [383, 615, 680], "uf_field_nam": 384, "radar_field_nam": 384, "volume_start": 384, "templates_extra": 384, "radar_beam_width_h": [384, 607], "radar_beam_width_v": [384, 607], "radar_receiver_bandwidth": 384, "prt": [384, 607], "polarization_mod": 384, "round": [384, 418, 419, 608, 612, 614], "_uf_scale_factor": 384, "charact": 384, "advanc": [384, 604], "usag": 384, "templat": [384, 614, 617], "mandatory_head": 384, "optional_head": 384, "field_head": 384, "lazi": [385, 386, 388, 395, 614], "set_lazi": 386, "callabl": [386, 395, 607, 608], "cach": 386, "tradit": 386, "supplement": 386, "syntax": [386, 614], "prevent": [386, 421, 606, 614, 615, 680], "comparison": [386, 614, 629, 658], "__cmp__": 386, "__ge__": 386, "__gt__": 386, "__le__": 386, "__lt__": 386, "__ne__": 386, "nor": 386, "viewitem": 386, "viewkei": 386, "viewvalu": 386, "fromkei": 386, "tradition": 386, "referenc": 386, "lazyloaddictionari": 386, "henc": 386, "key1": 386, "value1": 386, "key2": 386, "value2": 386, "lazy_func": 386, "lambda": 386, "lazykey1": 386, "item": [387, 397, 400, 407, 614], "els": [389, 390, 401, 607, 611, 612, 660], "value_cal": 395, "concret": 399, "__getitem__": [399, 607], "__setitem__": 399, "__delitem__": 399, "__iter__": 399, "__len__": 399, "robust": [409, 437, 614], "src_radar": 410, "dest_radar": 410, "distance_toler": [410, 629], "500": [410, 606, 610, 629, 636, 640], "gatefilter_src": [410, 629], "time_toler": [410, 629], "60": [410, 604, 620, 625, 629, 632, 637, 666, 671, 673, 675], "kd": 410, "tree": [410, 421, 665, 666, 667], "physic": [410, 426, 438, 448, 657, 658], "easi": [410, 426, 669], "equival": [410, 605, 607, 611, 614, 625, 637, 645, 651], "src_radar_i": 410, "src_radar_x": 410, "destin": [410, 412, 606, 610, 614, 629], "toler": [410, 411, 413, 428, 431, 434, 435, 436, 575, 576, 614], "src_radar_tim": 410, "dest_radar_tim": 410, "gate_mapp": 410, "src": [410, 610], "dest": 410, "dest_index": 410, "radar_map": 410, "mapped_radar": [410, 629], "adequ": [410, 629], "getter": [411, 413], "field_list": [412, 452], "zg": [414, 415, 416], "yg": [414, 415, 416], "xg": [414, 415, 416], "roi": [414, 415, 416, 418, 419, 421, 614, 630], "influenc": [414, 417, 420, 421, 675], "grow": [415, 416, 420, 421, 615, 680], "virtual": [416, 420, 421], "grid_shap": [417, 418, 419, 420, 421, 553, 630, 631, 632, 636, 657, 658, 666, 675], "grid_limit": [417, 418, 419, 420, 421, 553, 630, 631, 632, 636, 657, 658, 666, 675], "gridding_algo": 417, "map_gates_to_grid": [417, 614], "copy_field_dtyp": [417, 614], "map_to_grid": [417, 420, 614], "significantli": [417, 421], "faster": [417, 421, 608, 614], "barn": [417, 421, 614, 675], "1964": 417, "techniqu": [417, 437, 658], "maxim": 417, "numer": [417, 614], "analysi": [417, 429, 437, 586, 608, 612, 614], "meteorologi": [417, 423, 426, 454, 463, 583], "climatologi": [417, 463], "396": [417, 607], "409": [417, 614], "cressman": [417, 421, 675], "1959": 417, "monthli": 417, "review": [417, 605, 614], "87": [417, 604, 606, 611], "367": 417, "374": [417, 614], "paulei": [417, 675], "1990": [417, 675], "theoret": [417, 429], "discret": 417, "respons": 417, "118": 417, "1145": [417, 614], "1164": [417, 614], "target_sweep": [418, 419], "grid_siz": [418, 419, 420, 421], "801": [418, 419, 614], "auto": [418, 419, 608, 610, 635], "max_z": [418, 419], "12000": [418, 419, 671, 675], "el_rounding_frac": 418, "add_grid_altitud": 418, "weight": [418, 419, 420, 421, 432, 453, 454, 462, 604, 614, 623, 628, 633, 675, 678], "grid_from_radar": [418, 419, 420, 421, 630, 631, 632, 636, 657, 658, 666, 675], "receiv": [418, 419, 427, 607, 610, 614, 673], "h_factor": [418, 419, 420, 421, 630], "dist_factor": [418, 419, 420, 630], "radar_d": [418, 419], "third": [418, 419, 615, 680], "az_rounding_frac": 419, "12": [419, 604, 606, 607, 611, 612, 613, 620, 625, 626, 630, 637, 644, 654, 655, 658, 669, 672, 676, 677], "grid_origin": [420, 421, 632, 636], "grid_origin_alt": [420, 421], "map_roi": [420, 421], "weighting_funct": [420, 421, 675], "barnes2": [420, 421, 614], "17000": [420, 421, 675], "roi_func": [420, 421, 614, 675], "dist_beam": [420, 421, 675], "constant_roi": [420, 421, 614], "z_factor": [420, 421], "xy_factor": [420, 421], "02": [420, 421, 604, 607, 622, 638, 652, 657, 658, 662, 678], "min_radiu": [420, 421, 614, 675], "250": [420, 421, 428, 434, 677], "nb": [420, 421], "bsp": [420, 421], "linearli": 420, "roifunct": 420, "dist": [420, 421, 588, 589, 604, 606], "get_roi": 420, "cython": [420, 614], "around": [420, 435, 438, 448, 557, 572, 610, 612, 631, 646, 649, 654, 657, 671, 673], "copy_field_data": 421, "kd_tree": 421, "leafsiz": 421, "nearbi": [421, 632], "coodin": 421, "azimut": 421, "similarili": 421, "example_roi_func_const": 421, "example_roi_func_dist": 421, "example_roi_func_dist_beam": 421, "altern": [421, 426, 608, 657], "foreach": 421, "metet": 421, "sacr": 421, "sapr": [421, 559], "dist_mean": 421, "preserv": [421, 612, 673], "less": [421, 437, 438, 439, 448, 456, 587, 612, 654, 657], "memori": [421, 614], "slower": [421, 454], "It": [421, 456, 572, 583, 606, 608, 612, 615, 618, 629, 680, 682], "leaf": 421, "lookup": 421, "affect": 421, "optim": [421, 454, 614], "natur": [421, 437, 608], "ref_field": [423, 658, 672], "300": [423, 604, 606, 607, 608, 610, 611, 638, 639, 671], "save_nam": [423, 658], "nws_primary_pr": 423, "mm": [423, 611, 612, 613, 657, 658], "hr": [423, 657, 658], "author": [423, 426, 448, 587, 605, 612, 613, 617, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 661, 665, 666, 667], "laura": [423, 448, 587, 638, 654, 657, 658], "tomkin": [423, 448, 587, 638, 654, 657, 658], "look": [423, 426, 431, 439, 458, 604, 606, 607, 608, 610, 612, 613, 614, 625, 626, 629, 630, 637, 669, 671, 673, 675, 677], "expect": [423, 456, 615, 680], "relationship": [423, 437, 447], "american": [423, 426], "meteorolog": [423, 426, 429, 443, 463, 608], "2022": [423, 426, 587, 604, 607, 613, 625, 638, 657, 658, 669], "glossari": [423, 426], "ametsoc": [423, 426], "wiki": [423, 426, 451], "r_relat": 423, "25000": [424, 675], "floor": 424, "measur": [424, 427, 438, 441, 442, 447, 448, 453, 454, 455, 456, 573, 607, 608, 610, 612, 615, 657, 658, 669, 671, 672, 673, 675, 676, 677, 680], "nyq": [425, 610, 665, 673], "check_nyq_uniform": 425, "deriv": [425, 454, 456], "vel_dict": 425, "entri": [425, 677], "am": [426, 610, 615, 669, 680], "dry": [426, 453, 659, 660], "world": [426, 623, 634], "aloft": 426, "oppos": [426, 638], "nwp": [426, 659], "why": [426, 608, 613, 615, 680], "would": [426, 604, 605, 606, 607, 610, 612, 614, 615, 625, 626, 673, 675, 680], "think": 426, "turn": [426, 635, 657, 658, 669], "spin": [426, 612], "randi": [426, 610], "chase": [426, 610], "dopplerchas": [426, 614], "cdr_field": 427, "circular": [427, 588, 589, 614, 657], "depolar": [427, 607], "cdr": 427, "matrosov": 427, "2004": 427, "simultan": 427, "transmiss": 427, "technol": [427, 429, 447, 458, 573], "574": [427, 614], "583": [427, 614], "doi": [427, 429, 438, 439, 442, 443, 444, 448, 453, 455, 456, 573, 587, 604, 607, 608, 610, 612, 615, 638, 654, 657, 658, 669, 671, 672, 673, 675, 676, 677, 680], "1175": [427, 429, 438, 439, 448, 456, 573, 614, 654, 657, 658, 669], "1520": [427, 429, 438, 439, 448, 614, 654, 657, 658], "0426": [427, 429], "021": 427, "0574": 427, "deflha": 427, "ref_tim": [428, 431, 432, 434, 435, 436], "latlon_tol": [428, 434, 436], "0005": [428, 434, 436], "delta_rng": [428, 434], "15000": [428, 434, 654, 671, 675], "delta_azi": [428, 434], "hmax": [428, 431, 432, 434, 436], "hre": [428, 431, 432, 434, 436], "avg_typ": [428, 431, 432, 434, 574], "nvalid_min": [428, 431, 432, 434, 574], "interp_kind": [428, 431, 432, 434, 436, 596], "qvp": [428, 431, 432, 434, 436, 458, 614], "enhanc": [428, 660, 682], "interest": [428, 434, 436, 604, 606, 607, 608, 610, 612, 629, 657, 660], "central": [428, 434, 604, 606, 610], "evp": [428, 434], "median": [428, 431, 432, 434, 574, 614], "regardless": [428, 431, 432, 434, 436], "elimin": [428, 431, 432, 434, 436, 612, 673, 675], "kaltenboeck": 428, "2016": [428, 431, 442, 453, 604, 607, 608, 610, 615, 669, 671, 672, 673, 675, 676, 677, 680], "storm": [428, 448, 460, 557, 558, 560, 604, 607, 608, 610, 638, 657, 658, 675], "explor": [428, 608, 610], "methodologi": [428, 463, 573, 673], "meteorologisch": 428, "zeitschrift": 428, "26": [428, 604], "207": [428, 607], "222": [428, 621, 639], "l_field": 429, "logarithm": 429, "log10": [429, 629], "l_field_out": 429, "covari": [429, 455], "matrix": [429, 455, 608, 614], "scatter": [429, 604, 606, 610, 611, 612, 636, 655], "315": [429, 614], "328": [429, 437], "018": 429, "0315": 429, "ioprcm": 429, "noisedbz_v": 430, "ref_dist": 430, "noise_field": [430, 433], "noisedbz": 430, "ang_tol": [431, 434, 435], "quasi": [431, 432, 458], "convers": [431, 434, 437, 572, 607], "zhang": [431, 434, 441, 458, 573], "reev": [431, 458], "kumjian": [431, 432, 458], "tschallen": [431, 458], "tr\u00f6mel": 431, "simmer": [431, 441, 458], "wai": [431, 458, 607, 615, 617, 629, 671, 680, 682], "jtech": [431, 434, 573], "33": [431, 604, 607, 608, 658, 677], "551": 431, "562": [431, 614], "rmax": 432, "50000": [432, 632, 636, 657, 658, 675], "weight_pow": 432, "ab": [432, 604], "grng": 432, "tobin": 432, "2017": [432, 434, 612], "surfac": [432, 438, 448, 607, 657, 658], "ic": [432, 434, 453, 573, 646, 659, 660], "pellet": 432, "forecast": [432, 608], "2065": 432, "2082": 432, "bukovc": 434, "winter": [434, 448, 638, 657, 658], "liquid": 434, "reveal": 434, "2dvd": 434, "oklahoma": [434, 553, 610], "56": [434, 604, 607, 661], "1345": 434, "1363": [434, 614], "along_azi": 435, "fixed_rang": 435, "fixed_azimuth": 435, "fixed_elev": 435, "rng_tol": 435, "value_start": 435, "value_stop": 435, "acoord": 435, "along_el": 435, "along_rng": 435, "stop": 435, "cappi_level": 437, "zr_a": 437, "200": [437, 615, 680], "zr_b": 437, "core_wt_threshold": 437, "conv_wt_threshold": 437, "conv_scale_km": 437, "min_reflect": 437, "conv_min_refl": 437, "conv_core_threshold": 437, "42": [437, 438, 448, 460, 604, 606, 607, 610, 657, 658], "override_check": 437, "computation": 437, "\u00e0": 437, "trou": 437, "wavelet": 437, "atwt": 437, "multiresolut": 437, "focus": [437, 604, 606, 607], "raut": 437, "2008": [437, 626], "2020": [437, 573, 608, 612, 614, 615, 638, 669, 679, 680], "sensit": 437, "howev": [437, 454, 608, 673], "intermedi": 437, "signific": 437, "approxim": [437, 604, 607, 614], "break": [437, 612, 616, 617], "season": 437, "2018": [437, 453, 608], "discuss": [437, 608, 618], "insensit": 437, "variat": [437, 447, 454, 614], "dyadic": 437, "scale_break_us": 437, "greater": [437, 460, 608, 657], "bypass": 437, "saniti": 437, "fall": 437, "categori": [437, 606, 612], "strong": [437, 448, 606, 658], "updraft": 437, "activ": [437, 682], "collis": 437, "coalesc": 437, "wide": [437, 654], "remain": 437, "intens": [437, 460, 557], "unclassifi": [437, 604], "karekar": 437, "puranik": 437, "infrar": [437, 604], "satellit": [437, 604], "ieee": [437, 455], "geosci": [437, 455], "remot": [437, 455, 606, 607, 608, 614, 615, 625, 680], "sen": [437, 455], "lett": 437, "330": [437, 614], "seed": 437, "reeder": 437, "jakob": 437, "cascad": 437, "downscal": 437, "geophi": 437, "123": [437, 439, 654], "2050": 437, "2067": 437, "louf": 437, "gayatri": 437, "murugavel": 437, "konwar": 437, "prabhakaran": 437, "tran": 437, "5409": 437, "5415": 437, "dx": [438, 448, 460, 657, 658], "dy": [438, 448, 460, 606, 657, 658], "level_m": [438, 448, 658], "bkg_rad_km": [438, 448, 657, 658], "11": [438, 448, 453, 595, 604, 606, 612, 620, 622, 626, 658, 660, 662, 666, 669, 676, 677, 678], "55": [438, 448, 604, 606, 650, 657, 658], "calc_thr": [438, 448, 657, 658], "weak_echo_thr": [438, 448, 657, 658], "min_dbz_us": [438, 657], "db_averag": [438, 448, 657, 658], "remove_small_object": [438, 448, 657, 658], "min_km2_siz": [438, 448, 657, 658], "val_for_max_conv_rad": [438, 657], "max_conv_rad_km": [438, 657], "cs_core": 438, "nosfcecho": [438, 448, 657, 658], "weakecho": [438, 448, 657, 658], "sf": [438, 657], "conv": [438, 657], "estimate_flag": [438, 448, 657, 658], "estimate_offset": [438, 448, 657, 658], "partit": [438, 448, 460, 612, 620], "pars": [438, 448, 607, 608, 614], "least": [438, 448, 657], "simpler": [438, 448, 657], "percentag": [438, 448], "weak": [438, 448, 657, 658], "snow": [438, 442, 448, 453, 573, 587, 607, 638, 657, 658, 659, 660], "underestim": [438, 448, 657, 658], "wih": [438, 448], "convsf_dict": [438, 657, 658], "raindrop": [438, 448, 657, 658], "pacif": [438, 448, 657, 658], "warm": [438, 448, 454, 657], "pool": [438, 448, 657, 658], "implic": [438, 448, 657, 658], "appl": [438, 448, 456, 458, 460, 462, 573, 615, 657, 658, 680], "meteor": [438, 448, 456, 458, 460, 462, 573, 615, 657, 658, 669, 680], "36": [438, 448, 604, 626, 629, 632, 636, 650, 655, 657, 658, 661, 675, 678], "847": [438, 448, 614, 657, 658], "867": [438, 448, 614, 657, 658], "0450": [438, 448, 657, 658], "036": [438, 448, 657, 658], "3c0847": [438, 448, 657, 658], "morsdo": [438, 448, 657, 658], "3e2": [438, 439, 448, 654, 657, 658], "smith": [438, 448, 657, 658], "wilheit": [438, 448, 657, 658], "zipser": [438, 448, 657, 658], "character": [438, 448, 460, 657, 658], "tropic": [438, 448, 657, 658, 660], "kwajex": [438, 448, 657, 658], "385": [438, 448, 614, 631, 633, 657, 658, 678], "415": [438, 448, 657, 658], "jam2206": [438, 448, 657, 658], "field_bin": [439, 654], "altitude_bin": [439, 654], "field_mask": [439, 654], "min_frac_thr": [439, 654], "contour": [439, 614, 623, 634, 652, 654, 678], "diagram": [439, 623, 653, 662, 678], "cfad": [439, 614, 623, 653, 662, 678], "1995": [439, 448, 460, 654, 657, 658], "histogram": [439, 629, 654, 673], "largest": 439, "row": [439, 604, 606, 608, 654], "creation": [439, 614], "total": [439, 454, 455, 456, 607, 610, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 678], "freq_norm": [439, 654], "height_edg": [439, 654], "field_edg": [439, 654], "kinemat": [439, 462, 615, 654, 680], "microphys": [439, 604, 654], "evolut": [439, 654], "florida": [439, 608, 654], "cumulonimbu": [439, 654], "ii": [439, 654, 669, 677], "mon": [439, 654], "wea": [439, 654], "rev": [439, 654], "1941": [439, 654], "1963": [439, 654], "0493": [439, 654], "3c1941": [439, 654], "tdkame": [439, 654], "the_spectra": 440, "vel_bin": 440, "wavelength": [440, 604, 607], "left_limit": 440, "right_limit": 440, "new_spectra": 440, "new_bin": 440, "a_field": [441, 442, 445], "rr_field": [441, 442, 443, 444, 445, 446, 447], "go": [441, 442, 443, 445, 446, 453, 598, 605, 606, 611, 612, 614, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 672], "diederich": 441, "tromel": [441, 458], "2015": [441, 444, 458, 669], "wavelenght": 441, "hydrometeorologi": 441, "487": [441, 604], "502": [441, 614], "alphazr": 442, "0376": [442, 444, 445, 446], "betazr": 442, "6112": [442, 444, 445, 446], "alphaz": [442, 445, 446], "betaz": [442, 445, 446], "alphaa": [442, 445], "betaa": [442, 445], "mp_factor": 442, "hydro_field": [442, 453], "main_field": [442, 445, 446], "thresh_max": [442, 445, 446], "main": [442, 445, 446, 604, 606, 607, 608, 614, 615, 641, 680], "secondari": [442, 445, 446, 614], "besic": [442, 453], "figuera": [442, 443, 453], "ventura": [442, 453], "grazioli": [442, 453, 455], "gabella": [442, 453], "germann": [442, 453], "bern": [442, 453, 455], "statist": [442, 453, 574, 614, 615, 680], "cluster": [442, 453], "semi": [442, 453], "supervis": [442, 453], "approach": [442, 453, 604, 607, 630], "mea": [442, 453, 587, 638, 658], "4425": [442, 453], "4445": [442, 453], "5194": [442, 453, 587, 638, 658], "amt": [442, 453, 587, 638, 658], "term": [443, 614], "monitor": 443, "french": 443, "sever": [443, 606, 614, 658], "quantit": 443, "ideal": [443, 607], "quarterli": 443, "royal": 443, "2012": [443, 454, 456], "1002": [443, 614], "qj": 443, "1934": 443, "fabri": 444, "fr\u00e9d\u00e9ric": 444, "meterologi": 444, "ch": [444, 659, 661], "pg": 444, "148": 444, "165": 444, "1017": 444, "cbo9781107707405": 444, "blend": [445, 446, 608, 646], "rain_main": [445, 446], "alphakdp": 446, "betakdp": 446, "polynomi": 447, "develop": [447, 448, 604, 608, 614, 658, 669, 679], "mcgill": [447, 669], "doell": 447, "systemat": 447, "drop": [447, 607, 608, 614], "northern": [447, 606], "germani": 447, "seven": 447, "year": [447, 604, 606, 610, 613, 625, 626], "1998": 447, "1545": [447, 614], "1556": 447, "joss": 447, "switzerland": 447, "vdf": 447, "hochschulverlag": 447, "ag": [447, 453, 659], "eth": 447, "zurich": 447, "134": [447, 604], "min_val_us": [448, 658], "binary_clos": 448, "val_for_max_rad": [448, 658], "max_rad_km": [448, 658], "core_v": [448, 658], "bkgd_val": [448, 658], "feat_val": [448, 658], "overest_field": [448, 658], "underest_field": [448, 658], "detect": [448, 608, 614, 623, 641, 653, 657, 662, 673, 678], "featur": [448, 605, 606, 608, 612, 618, 623, 638, 653, 654, 657, 662, 669, 678], "2023": [448, 610, 669], "steiner": [448, 460, 614, 657, 658], "lauratomkin": [448, 587, 614], "overestim": [448, 657, 658], "feature_dict": [448, 658], "climatolog": [448, 460, 657, 658], "gaug": [448, 460, 657, 658], "1978": [448, 460, 657, 658], "2007": [448, 460, 657, 658], "miller": [448, 587, 638, 658], "2024": [448, 602, 611, 612, 658], "identif": [448, 587, 638, 658], "faint": [448, 658], "prep": [448, 658], "sonde_dset": 449, "time_kei": 449, "height_kei": 449, "nvar": 449, "vap": 449, "startard": 449, "ncvar": 449, "return_d": 449, "freq": 450, "hz": [450, 453, 644, 660], "freq_band": 450, "grid1": 451, "grid2": 451, "return_valu": 451, "displac": 451, "en": [451, 610, 614, 615, 669, 679, 680], "wikipedia": 451, "phase_correl": 451, "inspir": 451, "christoph": 451, "gohlk": 451, "lfd": 451, "uci": 451, "imreg": 451, "advect": [451, 452, 614], "trim_edg": 452, "shifted_grid": 452, "subset": [452, 598, 604, 606, 610, 614, 623, 653, 655], "hydro_nam": 453, "lr": [453, 659], "rp": [453, 659], "rn": [453, 659], "vi": [453, 659], "mh": [453, 659], "ih": [453, 659], "hdg": [453, 659], "var_nam": 453, "zh": 453, "relh": 453, "mass_cent": 453, "lapse_r": 453, "entropy_field": 453, "radar_freq": [453, 660], "compute_entropi": 453, "output_dist": 453, "ndarrai": [453, 574, 677], "centroid": 453, "nclass": 453, "nvariabl": 453, "h_iso0": 453, "decai": 453, "decreas": [453, 604, 654], "celsiu": 453, "entropi": 453, "hertz": 453, "fields_dict": 453, "directionari": 453, "hydro": [453, 659, 660], "aggreg": [453, 659, 660], "crystal": [453, 659, 660], "light": [453, 635, 659, 660], "rime": [453, 659], "particl": [453, 659], "wet": [453, 659, 660], "hail": [453, 610, 614, 659, 660], "densiti": [453, 604, 659, 660], "graupel": [453, 659, 660], "shannon": 453, "demix": 453, "propx": 453, "proport": [453, 454], "decomposit": 453, "gehr": 453, "praz": 453, "unravel": 453, "mixtur": 453, "4847": 453, "4866": 453, "suppli": [453, 660], "cg": 454, "backscatt": [454, 458], "clpf": 454, "length_scal": 454, "first_guess": 454, "finite_ord": 454, "fill_valu": [454, 455, 456, 460, 608, 660, 671, 672, 677], "psidp_field": [454, 455, 456, 659], "verbos": [454, 614, 615, 680], "maesaka": 454, "monoton": [454, 457, 635], "propag": [454, 455, 456], "notat": 454, "primari": [454, 607], "dr": 454, "analys": [454, 455, 456], "cost": [454, 614], "nonlinear": 454, "conjug": 454, "gradient": [454, 614, 635], "broyden": 454, "fletcher": 454, "goldfarb": 454, "shanno": 454, "bfg": 454, "100k": 454, "consider": [454, 610, 657, 658], "parameter": 454, "attentu": 454, "constraint": 454, "bring": [454, 604], "guess": 454, "root": [454, 679, 682], "signifi": [454, 460], "everywher": 454, "exactli": [454, 612, 629], "avoid": [454, 614, 617, 682], "converg": 454, "fact": [454, 456], "closer": [454, 611], "finit": 454, "accuraci": 454, "maxit": 454, "met": 454, "achiev": 454, "somewhat": 454, "arbitrari": 454, "parallel": [454, 455, 456], "thread": [454, 608], "cpu": 454, "multiprocess": 454, "capabl": [454, 607, 673, 677], "relev": [454, 611, 612, 618], "kdp_dict": [454, 455, 456], "phidpf_dict": 454, "phidpr_dict": [454, 455, 456], "forward": [454, 584, 585], "iwanami": 454, "maki": 454, "seventh": 454, "european": 454, "confer": 454, "hydrologi": 454, "rcov": 455, "pcov": 455, "prefilter_psidp": [455, 456], "filter_opt": [455, 456], "kalman": 455, "schneeb": 455, "psidp": [455, 456], "char": [455, 456], "capit": [455, 456], "intercept": 455, "slope": 455, "3x3": 455, "4x4": 455, "filter_psidp": [455, 456, 614], "enabl": [455, 456, 607, 610, 614], "kdp_std_dict": 455, "dev": [455, 607, 610, 612, 615, 675, 680], "ensembl": 455, "52": [455, 458, 604, 607, 655], "5137": 455, "5149": 455, "1109": [455, 614], "tgr": 455, "2287017": 455, "windsiz": 456, "n_iter": 456, "vulpiani": [456, 614], "pre": [456, 611, 614, 615, 680], "advantag": 456, "eat": 456, "gianfranco": 456, "mario": 456, "montopoli": 456, "luca": 456, "delli": 456, "passeri": 456, "antonio": 456, "gioia": 456, "pietro": 456, "giordano": 456, "frank": 456, "marzano": 456, "On": [456, 605, 606], "dual": [456, 611, 614], "mountain": 456, "climatol": [456, 573, 657, 658], "51": [456, 604, 655], "405": [456, 614], "425": [456, 614], "05024": 456, "profile_field": 457, "height_field": 457, "3re": 457, "whole": [457, 614], "height_dict": 457, "profile_dict": 457, "desired_angl": [458, 614], "wanted_angl": 458, "dictonari": 458, "troemel": 458, "clim": [458, 607, 608], "2529": 458, "2548": 458, "meteorol": [458, 657, 658], "54": [458, 604, 606, 607, 626], "2344": 458, "2359": 458, "submit": [458, 608, 669], "work_level": 460, "3000": [460, 671, 675], "peak_rel": 460, "area_rel": 460, "medium": 460, "bkg_rad": 460, "11000": [460, 675], "use_intens": 460, "bright": [460, 604], "sgp": [460, 553], "peaked": 460, "eclass": 460, "z_want": [462, 463, 615, 661, 680], "valid_ray_min": [462, 615, 680], "velocity_azimuth_displai": [462, 615, 680], "one_sweep_radar": 462, "extract_sweep": [462, 610, 630, 654, 657, 658, 661], "vad": [462, 463, 614, 615, 623, 653, 662, 678, 680], "amount": [462, 607, 610, 615, 658, 675, 680], "_averag1d": [462, 615, 680], "idw": 462, "brown": [462, 614, 615, 680], "wexler": [462, 615, 680], "1968": [462, 615, 680], "105": [462, 615, 661, 680], "113": [462, 615, 655, 680], "linespac": 463, "michelson": [463, 614, 669], "andersson": 463, "koistinen": [463, 669], "collier": 463, "riedl": 463, "szturc": 463, "gjertsen": 463, "nielsen": 463, "overgaard": 463, "2000": [463, 604, 631, 675], "baltex": 463, "centr": 463, "smhi": 463, "swedish": 463, "hydrolog": 463, "institut": [463, 604, 677], "norrkop": 463, "suffix": 475, "tmp": 475, "dir": 475, "temporari": [475, 614], "my_cwd": 475, "getcwd": 475, "tmpdir": 475, "_": [475, 606, 610, 611, 612, 625, 626, 659], "txt": [475, 614, 679], "wt": 475, "assert": [475, 614, 615, 680], "isfil": 475, "path_to_fil": 552, "local": [552, 605, 606, 610, 611, 614, 615, 669, 679, 680], "without": [553, 567, 592, 604, 607, 614, 660, 679], "site": [553, 604, 606, 607, 608, 609, 610, 611, 612, 620, 626, 655, 672, 675, 679], "puls": [556, 607, 614, 673], "min_valu": 557, "max_valu": 557, "45": [557, 606, 615, 638, 647, 657, 658, 680], "grid_len": 557, "sigma": [557, 558, 646, 647], "mu": [557, 558], "masked_boundari": 557, "gaussian": [557, 558, 614, 646], "dp_phase_shift": [559, 655, 671], "diff_phas": [559, 671], "differential_reflect": [559, 611, 625, 639, 646, 676, 677], "rectangular": [560, 561, 608, 614], "alia": [565, 566, 608, 614], "miscellan": 567, "depreci": [567, 614], "caution": [567, 654], "radian": [568, 570, 593, 604], "std": [570, 571, 589, 595], "convolut": 572, "ndimag": [572, 614, 646, 647], "generic_filt": 572, "pi": [572, 604, 673], "std_dev": 572, "azimuth_spread": 573, "spatial_spread": 573, "spatial_rang": 573, "sphere_dist": [573, 586], "for_azimuth": [573, 586], "get_sweep_rai": 573, "subset_field": 573, "assemble_column": 573, "murphi": 573, "columnar": 573, "cvp": [573, 614], "situ": 573, "37": [573, 604, 607, 629, 655, 658, 676], "1623": 573, "1642": 573, "0011": 573, "bukov\u010di\u0107": 573, "zrni\u0107": 573, "59": [573, 604, 607], "991": [573, 614], "1009": [573, 614], "19": [573, 604, 606, 607, 614, 661, 677], "0140": 573, "stat": [574, 604, 614], "nvalid": 574, "az_tol": 575, "radar_rhi": 575, "target_elev": 576, "el_tol": 576, "radar_ppi": 576, "epoch": [577, 578, 579, 580, 581, 604], "max_offset": 582, "running_win_dt": 582, "deg_rng": 582, "consider_2pi_jump": 582, "is_ppi": 582, "wise": 582, "could": [582, 608, 612, 615, 626, 680], "strategi": [582, 604], "might": [582, 605, 671, 682], "goe": [582, 608], "shot": 582, "navg": 583, "nnoise_min": 583, "hildebrand": [583, 614], "sehkon": 583, "1974": 583, "spectral": [583, 604, 607, 614], "articl": 583, "peak": [583, 607, 673], "var": [583, 599, 600, 604], "varianc": [583, 630], "nnois": 583, "sekhon": [583, 614], "808": [583, 667, 668, 678], "811": [583, 614], "target_latitud": [584, 597], "target_longitud": [584, 597], "bear": [584, 606], "alongitudeg": 584, "great": [584, 597], "circl": [584, 597, 657], "known": [584, 614, 615, 677, 680], "6371000": [584, 597], "calculatitude": 584, "degress": [584, 597], "further": [586, 605, 607, 611, 612], "get_column_rai": 586, "mute_field": [587, 638], "mute_threshold": [587, 638], "field_threshold": [587, 638], "discern": 587, "mute": [587, 614, 623, 634, 652, 657, 658, 678], "allen": [587, 638, 658], "5515": [587, 638, 658], "5525": [587, 638, 658], "interval_min": [588, 589], "interval_max": [588, 589], "endpoint": [588, 589], "to_vpt": 590, "90": [590, 604, 606, 607, 615, 680], "verticl": 590, "radar1": 591, "radar2": 591, "tup": 592, "guarante": 592, "broadcast": 592, "broadcasted_arrai": 592, "angles1": 593, "angles2": 593, "angle1": 594, "angle2": 594, "eg": 595, "ma": [595, 615, 629, 631, 654, 657, 658, 672, 676, 680], "sim_vel_field": 596, "kind": [596, 604, 612, 620], "slinear": 596, "quadrat": 596, "cubic": 596, "interp1d": [596, 615, 680], "sim_vel": [596, 615, 680], "rng_min": 598, "rng_max": 598, "ele_min": 598, "ele_max": 598, "azi_min": 598, "azi_max": 598, "coverag": [598, 604, 614, 615, 680], "11pt": 599, "stdev": 599, "texarrai": 599, "pyradarobj": 599, "tex": 600, "single_scan": 601, "is_vpt": 601, "mislabel": 601, "properli": [601, 615, 626, 680], "releas": [602, 609, 615, 618, 669, 672, 675, 679, 680], "post6": 602, "aug": 602, "29": [602, 604, 607, 627], "guid": [602, 604, 605, 614, 669], "public": [602, 604, 608, 610, 612, 614, 615, 671, 672, 673, 675, 676, 677, 680], "broken": [602, 614], "aerosol": 604, "experi": 604, "depart": [604, 607, 608, 610, 671, 672, 673, 675, 676, 677], "energi": [604, 607, 608, 610, 671, 672, 673, 675, 676, 677], "iop": 604, "goal": 604, "studi": 604, "lifecycl": 604, "houston": [604, 625], "impact": [604, 610, 646], "uniqu": 604, "suit": [604, 614, 675], "seabreez": 604, "coast": [604, 608], "cleaner": [604, 676], "air": [604, 608, 612], "pollut": 604, "click": [604, 605, 612, 617], "post": [604, 606, 607, 608, 610, 612, 614, 617, 669], "overlai": 604, "texa": [604, 625], "lightn": 604, "csapr2": 604, "wildfir": 604, "smoke": 604, "entrain": 604, "juli": [604, 626], "we": [604, 606, 607, 608, 610, 612, 615, 618, 625, 626, 629, 635, 654, 655, 657, 658, 660, 665, 671, 672, 673, 675, 676, 677, 679, 680, 681, 682], "highlight": [604, 605, 608], "minut": [604, 606, 607, 611, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667], "pyart": [604, 606, 610, 612, 615, 617, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 669, 671, 672, 673, 675, 676, 677, 679, 680, 682], "pyplot": [604, 605, 606, 607, 608, 610, 611, 612, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 671, 672, 673, 675, 676], "plt": [604, 605, 606, 607, 608, 610, 611, 612, 614, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 671, 672, 673, 675, 676], "xr": [604, 607], "s3f": 604, "ccr": [604, 606, 608, 610, 611, 612, 625, 626, 629, 630, 636, 637, 643, 650, 655, 657, 658, 665, 672, 673, 676], "panda": [604, 607, 610, 614, 682], "pd": [604, 606, 607, 610], "kdtree": 604, "inlin": [604, 611, 646, 647], "download": [604, 605, 607, 608, 612, 614, 615, 620, 621, 623, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 669, 680, 682], "longwav": 604, "ensur": [604, 606, 614, 658], "c13": 604, "denot": [604, 630], "anonym": [604, 606], "credenti": 604, "s3filesystem": 604, "day_no": 604, "168": 604, "dai": [604, 610, 611], "16th": 604, "leap": 604, "hour": [604, 608, 610, 611, 625, 626], "goes16": 604, "abi": 604, "l1b": 604, "radc": 604, "02d": [604, 611], "fi": 604, "or_abi": 604, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 604, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 604, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 604, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 604, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 604, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 604, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 604, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 604, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 604, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 604, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 604, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 604, "goes_d": 604, "open_dataset": [604, 607], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 604, "lt": [604, 607], "gt": [604, 607], "1500": [604, 671], "2500": 604, "number_of_time_bound": 604, "number_of_image_bound": 604, "num_star_look": 604, "datetime64": [604, 607, 655], "07": [604, 606, 607, 626, 638, 657, 658, 677], "1282": 604, "1013": 604, "y_imag": 604, "08624": 604, "x_imag": 604, "03136": 604, "band_id": 604, "int8": 604, "band_wavelength": 604, "t_star_look": 604, "band_wavelength_star_look": 604, "rad": [604, 607], "dqf": 604, "time_bound": 604, "goes_imager_project": 604, "int32": [604, 677], "2147483647": 604, "y_image_bound": 604, "x_image_bound": 604, "algorithm_dynamic_input_data_contain": 604, "processing_parm_version_contain": 604, "algorithm_product_version_contain": 604, "star_id": 604, "channel_integration_tim": 604, "336": [604, 614], "channel_gain_field": 604, "naming_author": 604, "nesdi": 604, "standard_name_vocabulari": 604, "v35": 604, "commerc": 604, "production_sit": 604, "wcda": 604, "timeline_id": 604, "date_cr": 604, "12t20": 604, "09": [604, 606, 612, 633, 652, 657, 658, 668, 678], "3z": 604, "time_coverage_start": [604, 671, 677], "time_coverage_end": [604, 671], "08": 604, "7z": 604, "lut_filenam": 604, "spacelookparam": 604, "fm1a_cdrl79revp_pr_09_00_02": 604, "f45b564c": 604, "dcb9": 604, "498a": 604, "ac56": 604, "da80a1d735a5xarrai": 604, "datasetdimens": [604, 607], "1500x": 604, "2500number_of_time_bound": 604, "2number_of_image_bound": 604, "2band": 604, "1num_star_look": 604, "24coordin": 604, "j2000": 604, "mid": 604, "secondsstandard_nam": 604, "timeaxi": 604, "tbound": 604, "time_boundsarrai": 604, "x27": [604, 607], "537394048": 604, "float640": 604, "04432": 604, "04427unit": 604, "radaxi": 604, "ylong_nam": 604, "coordinatestandard_nam": 604, "projection_y_coordinatearrai": 604, "128212": 604, "128156": 604, "1281": 604, "04438": 604, "044324": 604, "044268": 604, "03856": 604, "03861unit": 604, "xlong_nam": 604, "projection_x_coordinatearrai": 604, "101332": 604, "101276": 604, "10122": 604, "0385": 604, "038556": 604, "038612": 604, "imagestandard_nam": 604, "projection_y_coordinateunit": 604, "yarrai": 604, "projection_x_coordinateunit": 604, "numberstandard_nam": 604, "sensor_band_identifierunit": 604, "1arrai": [604, 607], "wavelengthstandard_nam": 604, "sensor_band_central_radiation_wavelengthunit": 604, "umarrai": 604, "star": 604, "tarrai": 604, "01t11": 604, "43": [604, 607, 610], "000000000": [604, 607], "starstandard_nam": 604, "radiancesstandard_nam": 604, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 604, "12valid_rang": 604, "4094": 604, "mw": 604, "cm": [604, 647], "1resolut": 604, "000056": 604, "radgrid_map": 604, "goes_imager_projectioncell_method": 604, "pointancillary_vari": 604, "3750000": 604, "radianc": 604, "flagsstandard_nam": 604, "status_flagvalid_rang": 604, "1grid_map": 604, "pointflag_valu": 604, "flag_mean": 604, "good_pixel_qf": 604, "conditionally_usable_pixel_qf": 604, "out_of_range_pixel_qf": 604, "no_value_pixel_qf": 604, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 604, "5percent_good_pixel_qf": 604, "0percent_conditionally_usable_pixel_qf": 604, "0percent_out_of_range_pixel_qf": 604, "0percent_no_value_pixel_qf": 604, "0percent_focal_plane_temperature_threshold_exceeded_qf": 604, "00": [604, 606, 607, 610, 612, 614, 622, 627, 633, 652, 662, 663, 668, 678], "326423040": 604, "748365056": 604, "projectiongrid_mapping_nam": 604, "geostationaryperspective_point_height": 604, "35786023": 604, "0semi_major_axi": 604, "6378137": 604, "0semi_minor_axi": 604, "6356752": 604, "31414inverse_flatten": 604, "298": 604, "2572221latitude_of_projection_origin": 604, "0longitude_of_projection_origin": 604, "0sweep_angle_axi": 604, "south": [604, 608, 639], "extent": [604, 606, 607, 610, 611, 630, 632], "imageunit": 604, "radarrai": 604, "12824": 604, "04424": 604, "10136": 604, "03864": 604, "nominal_satellite_subpoint_lat": 604, "nomin": 604, "subpoint": 604, "standard_nam": [604, 657, 658, 660, 672, 677], "latitudeunit": [604, 607], "degrees_northarrai": 604, "nominal_satellite_subpoint_lon": 604, "longitudeunit": [604, 607], "degrees_eastarrai": 604, "199997": 604, "nominal_satellite_height": 604, "gr": 604, "80": [604, 606, 621, 650, 656], "ellipsoid": 604, "height_above_reference_ellipsoidunit": 604, "kmarrai": 604, "35786": 604, "023438": 604, "geospatial_lat_lon_ext": 604, "geospati": 604, "referencesgeospatial_westbound_longitud": 604, "152": [604, 658], "10928geospatial_northbound_latitud": 604, "76145geospatial_eastbound_longitud": 604, "94688geospatial_southbound_latitud": 604, "14": [604, 607, 608, 610, 612, 622, 626, 635, 637, 650, 652, 665, 677, 678], "57134geospatial_lat_cent": 604, "083002geospatial_lon_cent": 604, "096954geospatial_lat_nadir": 604, "0geospatial_lon_nadir": 604, "0geospatial_lat_unit": 604, "degrees_northgeospatial_lon_unit": 604, "96921e": 604, "yaw_flip_flag": 604, "spacecraft": 604, "yaw": 604, "flip": 604, "configurationvalid_rang": 604, "1flag_valu": 604, "truearrai": 604, "esun": 604, "bandpass": 604, "solar": 604, "irradi": 604, "sun": 604, "distancestandard_nam": 604, "toa_shortwave_irradiance_per_unit_wavelengthunit": 604, "um": 604, "1cell_method": 604, "meanarrai": 604, "kappa0": 604, "incom": 604, "d2": 604, "instantan": [604, 614], "divid": 604, "reflectanceunit": 604, "planck_fk1": 604, "wavenumb": 604, "c2": 604, "nu3": 604, "emiss": 604, "monochromat": 604, "nu": 604, "constantsunit": 604, "10803": 604, "299805": 604, "planck_fk2": 604, "karrai": 604, "1392": [604, 614], "73999": 604, "planck_bc1": 604, "bc_1": 604, "bc_2": 604, "planck_funct": 604, "wavenumberunit": 604, "0755": 604, "planck_bc2": 604, "99975": 604, "valid_pixel_count": 604, "condition": 604, "pixelsunit": 604, "countgrid_map": 604, "sum": [604, 613, 654], "comment": [604, 605, 647, 677], "3702838": 604, "missing_pixel_count": 604, "saturated_pixel_count": 604, "satur": 604, "radiometr": 604, "geoloc": 604, "undersaturated_pixel_count": 604, "undersatur": 604, "focal_plane_temperature_threshold_exceeded_count": 604, "exceed": 604, "thresholdunit": 604, "min_radiance_value_of_valid_pixel": 604, "pixelsstandard_nam": 604, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 604, "6443": 604, "185": 604, "5699": 604, "849287": 604, "max_radiance_value_of_valid_pixel": 604, "154": [604, 643], "23053": 604, "mean_radiance_value_of_valid_pixel": 604, "197975": 604, "std_dev_radiance_value_of_valid_pixel": 604, "toa_outgoing_radiance_per_unit_wavenumberunit": 604, "standard_devi": 604, "985853": 604, "maximum_focal_plane_temperatur": 604, "focal": 604, "valuevalid_rang": 604, "951939": 604, "focal_plane_temperature_threshold_increas": 604, "bound": [604, 607, 658], "81": [604, 606, 677], "focal_plane_temperature_threshold_decreas": 604, "percent_uncorrectable_l0_error": 604, "percent": 604, "l0": 604, "errorsvalid_rang": 604, "percentgrid_map": 604, "earth_sun_distance_anomaly_in_au": 604, "anomali": [604, 658], "astronom": 604, "unitsunit": 604, "uacell_method": 604, "016543": 604, "datainput_abi_l0_data": 604, "m6_g16_s20221932006173_e20221932008557_c": 604, "ncarrai": 604, "filenamesl1b_processing_parm_vers": 604, "parm": 604, "rad_g16_v01r00": 604, "ziparrai": 604, "packag": [604, 605, 606, 607, 608, 610, 612, 614, 615, 620, 626, 669, 672, 675, 679, 680, 682], "versionalgorithm_vers": 604, "alg": 604, "rad_v01r00": 604, "zipproduct_vers": 604, "v01r00arrai": 604, "stararrai": 604, "vnir": 604, "ir": 604, "telemetryunit": 604, "countarrai": 604, "gain": [604, 607], "noaaconvent": 604, "7standard_name_vocabulari": 604, "administr": [604, 608, 625], "servicesproject": 604, "goesproduction_sit": 604, "wcdasproduction_environ": 604, "oespatial_resolut": 604, "2km": 604, "nadirmetadata_convent": 604, "discoveri": [604, 612], "0orbital_slot": 604, "eastplatform_id": 604, "g16instrument_typ": 604, "baselin": 604, "scene_id": 604, "conusinstrument_id": 604, "fm1titl": 604, "radiancessummari": 604, "digit": 604, "outgo": 604, "engin": 604, "radiancekeywords_vocabulari": 604, "nasa": 604, "master": [604, 614, 617, 647], "gcmd": 604, "scienc": [604, 608, 610, 671, 672, 673, 675, 676, 677], "0iso_series_metadata_id": 604, "a70be540": 604, "c38b": 604, "11e0": 604, "962b": 604, "0800200c9a66licens": 604, "restrict": 604, "approv": 604, "processing_level": 604, "aeronaut": 604, "l1bcdm_data_typ": 604, "imagedataset_nam": 604, "ncproduction_data_sourc": 604, "realtimetimeline_id": 604, "6date_cr": 604, "3ztime_coverage_start": 604, "3ztime_coverage_end": 604, "7zlut_filenam": 604, "637827000": 604, "h5": [604, 614], "qtableband13": 604, "fm1a_cdrl79revh_do_08_00_00": 604, "582860861": 604, "caltargettimeinterv": 604, "fm1a_cdrl79revp_do_08_00_01": 604, "611906620": 604, "bandsaturationlimit": 604, "600000000": 604, "solarspacelookparam": 604, "fm1a_adr1233_pr_09_08_25": 604, "709281036": 604, "deadrowlistparam": 604, "mirror_record": 604, "fm1a_cdrl79revg_do_07_00_00": 604, "kalmanastroconst": 604, "xml": [604, 610], "kalmanfiltercontrol": 604, "fm1a_pr_09_08_02": 604, "677650371": 604, "kalmanmeasmaxsens": 604, "fmaa_int_only_do_09_01_00": 604, "652936814": 604, "kalmanpreprocessorcontrol": 604, "fm1a_cdrl79revj_pr_09_06_02": 604, "657795700": 604, "kalmanreferencedata": 604, "888": 604, "kalmanstarcatalog": 604, "abi_navigationrdp_band13": 604, "fm1a_cdrl79revj_do_07_00_00": 604, "abi_navigationparameters_band13": 604, "fm1a_cdrl79revh_do_07_00_00": 604, "abi_resamplingimplementation_band13": 604, "fm1a_cdrl79revh_do_07_02_00": 604, "602129336": 604, "abi_resamplingparameters_band13": 604, "starlookparam": 604, "stardetectionparam": 604, "resamplingscaledconvers": 604, "fmaa_int_only_do_08_00_00": 604, "1111": [604, 607, 614], "blockreleaseregion": 604, "2222": 604, "csv": [604, 606], "ir_retrievalparamet": 604, "fm1a_cdrl79revh_do_09_01_00": 604, "652936750": 604, "radiancelut_band13": 604, "fm1a_cdrl79reve_do_08_00_00": 604, "ict_record": 604, "fm1a_tmabi_18_159_pr_09_00_02": 604, "icm_conversionconst": 604, "fm1a_cdrl43": 604, "18_do_09_01_00": 604, "icm_sensorcoeffici": 604, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 604, "676949608": 604, "h5id": 604, "da80a1d735a5": 604, "team": 604, "bobbi": [604, 629], "jackson": [604, 629], "pug": 604, "l2": [604, 614], "file_id": 604, "def": [604, 606, 610, 611, 614, 615, 635, 658, 660, 680], "calculate_degre": 604, "x_coordinate_1d": 604, "y_coordinate_1d": 604, "projection_info": 604, "lon_origin": 604, "attr": 604, "longitude_of_projection_origin": 604, "perspective_point_height": 604, "semi_major_axi": 604, "r_eq": 604, "r_pol": 604, "semi_minor_axi": 604, "matric": 604, "x_coordinate_2d": 604, "y_coordinate_2d": 604, "meshgrid": [604, 629, 654], "lambda_0": 604, "a_var": 604, "b_var": 604, "c_var": 604, "r_": 604, "s_x": 604, "s_y": 604, "s_z": 604, "conu": 604, "seterr": 604, "abi_lat": 604, "arctan": 604, "abi_lon": 604, "crop": 604, "our": [604, 606, 609, 611, 625, 626, 629, 635, 636, 655, 657, 658, 665, 669], "circ": 604, "95": [604, 606, 655, 677], "nan_to_num": 604, "9999": [604, 677], "lat_rang": 604, "lon_rang": 604, "lat_min": 604, "lat_max": 604, "lat_min_bound": 604, "argmin": 604, "lat_max_bound": 604, "lon_min": 604, "lon_max": 604, "lon_min_bound": 604, "lon_max_bound": 604, "a1": [604, 607, 612, 643], "disoveri": 604, "toolkit": [604, 607, 608, 610, 612, 671, 672, 673, 675, 676, 677], "5439": [604, 607, 612], "1467901": 604, "page": [604, 609, 614, 617], "block": [604, 612, 614], "autom": [604, 610, 612], "catalogu": 604, "adam": [604, 614], "theisen": 604, "geometri": [604, 610, 614], "cell_track_info": 604, "read_csv": [604, 606], "raw": [604, 620, 621, 630], "githubusercont": 604, "com": [604, 615, 626, 647, 679, 680, 682], "adamtheisen": [604, 614], "cell": [604, 611, 612, 614, 646, 666], "houcsapr": 604, "20220617": 604, "index_col": 604, "parse_d": 604, "unnam": 604, "scan_mod": [604, 607, 614], "template_nam": 604, "azimuth_min": 604, "azimuth_max": 604, "elevation_min": 604, "elevation_max": 604, "range_min": 604, "range_max": 604, "cell_azimuth": 604, "cell_rang": 604, "cell_zh": 604, "ngates_gt_0": 604, "ngates_gt_10": 604, "ngates_gt_30": 604, "ngates_gt_50": 604, "ngates_gt_10_5km": 604, "ngates_gt40_5km": 604, "03": [604, 607, 625, 652, 662, 668, 678], "hou": 604, "303": [604, 614], "74450": 604, "637207": 604, "383545": 604, "109900": 604, "297": 604, "59216": 604, "307": [604, 614], "63367": 604, "021240": 604, "988037": 604, "910767": 604, "700": [604, 607, 610, 614], "930866": 604, "78": 604, "302": 604, "64587": 604, "645874": 604, "1800": [604, 606, 671], "776333": 604, "55798": 604, "59094": 604, "97546": 604, "99744": 604, "975464": 604, "900": [604, 671], "972101": 604, "46": [604, 655], "2826": 604, "301": [604, 614], "48132": 604, "50330": 604, "648193": 604, "382324": 604, "503296": 604, "62400": 604, "327583": 604, "990": 604, "989": [604, 614], "210": [604, 658], "995": [604, 614], "2827": 604, "305": [604, 614], "70007": 604, "404297": 604, "700073": 604, "13600": 604, "037998": 604, "2828": 604, "23510": 604, "26807": 604, "235107": 604, "459156": 604, "2829": 604, "296": [604, 614], "08704": 604, "306": [604, 614], "16150": 604, "999268": 604, "998291": 604, "646362": 604, "59100": 604, "882927": 604, "807": 604, "783": [604, 614], "27": [604, 608, 655], "63": [604, 677], "830": 604, "2830": 604, "05835": 604, "08032": 604, "058350": 604, "62800": 604, "198204": 604, "767": [604, 614], "76": 604, "773": [604, 614], "2831": 604, "notebook": [604, 606, 607, 611, 613, 614, 620, 621, 623, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 672, 675, 676, 682], "much": [604, 606, 607, 608, 610, 611, 612, 614, 654, 673, 675, 676], "frequent": 604, "start_hour": [604, 611], "end_hour": [604, 611], "utc": [604, 606, 607, 608, 611, 612, 625, 626, 649], "48": [604, 606, 632], "04": [604, 607, 610, 611, 633, 652, 655, 668, 678], "38": [604, 607, 626], "57": [604, 657, 658], "rjackson": [604, 629], "paw": 604, "houcsapr2cfrs2": 604, "20220712": 604, "200714": 604, "easili": [604, 610], "eol": 604, "cgi": 604, "codiac": 604, "fgr_form": 604, "016": 604, "lma_d": 604, "lylout_220712_000000_86400_map500m": 604, "afternoon": 604, "203229": 604, "lylout_220617_000000_86400_map500m": 604, "radarmapdisplai": [604, 606, 610, 611, 612, 614, 625, 626, 629, 637, 643, 655, 665, 667, 671, 672, 673, 675, 676], "subplot": [604, 606, 607, 608, 610, 611, 612, 614, 625, 629, 635, 636, 637, 649, 654, 655, 656, 657, 658, 659, 660, 661, 665, 673], "subplot_kw": 604, "disp": 604, "graph": [604, 605, 606, 607, 608, 610, 611, 612, 614, 620, 621, 625, 626, 629, 630, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 665, 666, 667, 671, 672, 673, 675, 676], "150": [604, 605, 642, 660, 673], "plot_ppi_map": [604, 606, 610, 611, 612, 614, 625, 626, 629, 637, 643, 655, 665, 672, 673, 676], "flash_tim": 604, "squeez": [604, 671], "argwher": [604, 629], "logical_and": [604, 629], "flash_time_start": 604, "17t20": 604, "flash_center_longitud": 604, "flash_center_latitud": 604, "set_xlim": [604, 650, 654, 659], "96": [604, 606, 607, 629, 669, 676], "94": [604, 677], "set_ylim": [604, 650, 654, 659], "deprecationwarn": [604, 675], "escap": 604, "sequenc": [604, 608], "xf": 604, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 604, "ipykernel_41252": 604, "2371313213": 604, "opt": [604, 605, 607, 608, 614], "anaconda3": [604, 607, 608, 669, 672, 675, 679, 682], "env": [604, 605, 607, 608, 610, 612, 614, 620, 626, 669, 672, 675, 682], "pyart_env2": 604, "lib": [604, 607, 608, 610, 612, 620, 626, 672, 675, 679], "python3": [604, 607, 608, 610, 612, 613, 620, 626], "mpl": [604, 614, 659, 672, 675], "gridlin": [604, 608, 610, 637], "451": [604, 607], "userwarn": [604, 612, 620, 626], "xlabels_top": [604, 608], "deprec": [604, 608, 617, 672, 675], "top_label": [604, 610, 637], "toggl": [604, 614], "visibl": [604, 608, 614], "ylabels_right": [604, 608], "right_label": [604, 610, 637], "strike": 604, "overlaid": 604, "csapr_rhi": 604, "203012": 604, "flash_alt": 604, "flash_init_altitud": 604, "flash_lon": 604, "flash_init_longitud": 604, "flash_lat": 604, "flash_init_latitud": 604, "rhi_lon": 604, "flatten": [604, 629], "rhi_lat": 604, "rhi_alt": 604, "kdtree_data": 604, "stack": [604, 607, 610, 615, 679, 680], "inp_data": 604, "where_in_rhi": 604, "flash_rang": 604, "1e3": 604, "motiv": [605, 608], "blog": [605, 610, 614, 615, 680], "come": [605, 608, 657], "colorschem": 605, "vision": 605, "defici": 605, "illustr": 605, "collabor": 605, "contributor": [605, 617, 669, 681], "guidenc": 605, "ve": [605, 611], "trip": [605, 676], "me": 605, "assist": 605, "https_link_to_your_fork": 605, "unfamiliar": 605, "yml": [605, 614, 669, 682], "slightli": [605, 608, 637], "latest": [605, 614, 615, 669, 680], "button": [605, 609, 617], "kshrc": 605, "export": [605, 679, 682], "pip": [605, 615, 679, 680, 682], "checkout": [605, 615, 617, 680], "newblog_post": 605, "plot_ppi_mdv": [605, 642, 652, 678], "radardisplai": [605, 606, 607, 612, 614, 620, 621, 630, 635, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 651, 654, 656, 659, 660], "jonathan": [605, 620, 621, 631, 632, 639, 640, 642, 644, 648, 651, 682], "helmu": [605, 608, 610, 615, 620, 621, 631, 632, 639, 640, 642, 644, 648, 651, 669, 671, 672, 673, 675, 676, 677, 680, 682], "jhelmu": [605, 614, 620, 621, 631, 632, 639, 640, 642, 644, 648, 651], "anl": [605, 620, 621, 625, 626, 629, 631, 632, 635, 636, 637, 639, 640, 641, 642, 644, 646, 647, 648, 649, 651, 655, 656, 665, 666, 667], "licens": [605, 615, 620, 621, 625, 626, 629, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 661, 665, 666, 667, 669, 680], "bsd": [605, 615, 620, 621, 625, 626, 629, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 661, 665, 666, 667, 669, 680], "claus": [605, 615, 620, 621, 625, 626, 629, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 661, 665, 666, 667, 680], "get_test_data": [605, 620, 621, 629, 631, 632, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 665, 666, 667], "110635": [605, 631, 642, 675], "figsiz": [605, 606, 607, 608, 610, 611, 612, 620, 621, 625, 626, 629, 630, 635, 636, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 654, 656, 657, 658, 659, 660, 665, 672, 673, 675, 676], "add_subplot": [605, 620, 621, 630, 631, 632, 639, 640, 641, 642, 644, 645, 646, 647, 648, 651, 660], "111": [605, 606, 608, 611, 612, 629, 631, 632, 637, 640, 641, 642, 646, 647, 648, 655], "get_cmap": [605, 638, 657, 658], "jet": 605, "colorbind": 605, "pyart_homeyerrainbow": [605, 607, 629, 635, 636, 637, 642, 645, 649, 650, 656], "plot_rhi_cfradial_singlescan": [605, 645, 652, 678], "panel": [605, 612, 623, 634, 652, 654, 678], "sgpxsaprrhicmaci5": [605, 644, 645, 649, 654], "c0": [605, 620, 644, 645, 649, 654, 672], "20110524": [605, 644, 645, 649, 654], "015604_nc4": [605, 644, 645, 649, 654], "read_cfradi": [605, 620, 629, 632, 636, 644, 645, 649, 654, 659, 660, 661], "subplots_adjust": [605, 607, 635, 644, 645], "hspace": [605, 607, 644, 645], "xlabel": [605, 607, 629, 644, 645, 673], "ylabel": [605, 607, 629, 644, 645, 673], "stage": 605, "my": [605, 679], "untrack": [605, 615, 680], "blog_pr": 605, "restor": 605, "discard": 605, "_static": 605, "As": [605, 607, 611, 615, 671, 673, 675, 676, 680], "statement": [605, 611, 614, 615, 680], "hint": [605, 608, 616], "wait": [605, 608], "editor": [605, 613, 615, 680, 682], "enh": [605, 614], "abort": 605, "person": 605, "addition": [605, 608], "anyon": 605, "respond": 605, "walk": [606, 607, 610, 611, 612, 613], "septemb": 606, "2021": [606, 657, 658], "thunderstorm": 606, "southern": 606, "wisconsin": [606, 614], "illinoi": 606, "trail": 606, "damag": [606, 610], "milwauke": [606, 610], "madison": 606, "imageri": [606, 610], "russ": 606, "schumach": 606, "colorado": 606, "unvers": 606, "put": 606, "togeth": [606, 607, 608, 614], "hi": [606, 658], "glob": [606, 607, 610, 611, 612, 615, 680], "math": 606, "atan2": 606, "tempfil": 606, "cfeatur": [606, 608, 610, 611, 612], "mcolor": [606, 608, 638, 657, 658], "mdate": 606, "uscounti": [606, 610, 611], "imageio": 606, "pytz": [606, 614], "temploc": 606, "mkdtemp": 606, "filterwarn": [606, 607, 608, 610, 611, 629], "let": [606, 607, 608, 609, 611, 612, 614, 615, 625, 626, 629, 635, 637, 654, 655, 657, 658, 660, 665, 671, 673, 675, 676, 677, 680, 682], "machin": [606, 607, 610, 612, 682], "kmkx": [606, 610], "nexrad_path": 606, "level2": [606, 610, 611, 614, 625, 626, 638, 657, 658], "d_": 606, "kmkx20210907_170101_v06": 606, "kmkx20210907_170739_v06": 606, "kmkx20210907_171431_v06": 606, "kmkx20210907_172123_v06": 606, "kmkx20210907_172814_v06": 606, "kmkx20210907_173452_v06": 606, "kmkx20210907_174130_v06": 606, "kmkx20210907_174807_v06": 606, "kmkx20210907_175459_v06": 606, "kmkx20210907_175459_v06_mdm": 606, "read_nexrad_arch": [606, 610, 611, 625, 626, 638, 639, 640, 657, 658], "possibli": 606, "add_featur": [606, 608, 610, 611, 612], "pyart_chasespectr": [606, 610, 611, 612, 666, 667], "70": [606, 607, 610, 625, 629, 636, 667], "set_ext": 606, "easier": [606, 607, 608], "scroll": 606, "radar_id": 606, "timestamp": [606, 607], "tz_local": 606, "later": [606, 608, 672, 675], "interfac": [606, 612, 614], "conn": 606, "nexradawsinterfac": 606, "get_avail_scans_in_rang": 606, "len": [606, 611, 635, 649, 659, 671], "kmkx20210907_151132_v06": 606, "kmkx20210907_152621_v06": 606, "kmkx20210907_150152_v06": 606, "kmkx20210907_151622_v06": 606, "kmkx20210907_152121_v06": 606, "kmkx20210907_150642_v06": 606, "kmkx20210907_155424_v06_mdm": 606, "kmkx20210907_153610_v06": 606, "kmkx20210907_154814_v06": 606, "kmkx20210907_155424_v06": 606, "kmkx20210907_154205_v06": 606, "kmkx20210907_160034_v06": 606, "kmkx20210907_160607_v06": 606, "kmkx20210907_161141_v06": 606, "kmkx20210907_163532_v06": 606, "kmkx20210907_161714_v06": 606, "kmkx20210907_162924_v06": 606, "kmkx20210907_164816_v06": 606, "kmkx20210907_165433_v06": 606, "kmkx20210907_165433_v06_mdm": 606, "kmkx20210907_162247_v06": 606, "kmkx20210907_153134_v06": 606, "kmkx20210907_164149_v06": 606, "kmkx20210907_182057_v06": 606, "kmkx20210907_182749_v06": 606, "kmkx20210907_184048_v06": 606, "kmkx20210907_180841_v06": 606, "kmkx20210907_183440_v06": 606, "kmkx20210907_185431_v06_mdm": 606, "kmkx20210907_181448_v06": 606, "kmkx20210907_180150_v06": 606, "kmkx20210907_185431_v06": 606, "kmkx20210907_190109_v06": 606, "kmkx20210907_190703_v06": 606, "kmkx20210907_193238_v06": 606, "kmkx20210907_191951_v06": 606, "kmkx20210907_191327_v06": 606, "kmkx20210907_195642_v06": 606, "kmkx20210907_194459_v06": 606, "kmkx20210907_195642_v06_mdm": 606, "kmkx20210907_193849_v06": 606, "kmkx20210907_184739_v06": 606, "kmkx20210907_192614_v06": 606, "kmkx20210907_195056_v06": 606, "now": [606, 607, 608, 610, 611, 612, 614, 626, 629, 630, 635, 637, 655, 657, 658, 665, 671, 673, 679], "predict": 606, "tornado": [606, 610], "offic": [606, 608, 610, 671, 672, 673, 675, 676, 677], "acces": 606, "internet": 606, "wcm": 606, "2021_wind": 606, "read_spc_report": 606, "start_tim": 606, "end_tim": 606, "hazard": 606, "timezon": 606, "gmt": 606, "torn": 606, "df": 606, "datafram": 606, "conver": 606, "to_datetim": [606, 607, 610], "set_index": 606, "inplac": 606, "ambigu": 606, "nat": 606, "nonexist": 606, "shift_forward": 606, "tz_convert": 606, "timedelta": [606, 610, 611], "wind_report": 606, "tornado_report": 606, "hail_report": 606, "om": 606, "yr": 606, "mo": 606, "st": 606, "stf": 606, "stn": 606, "elon": 606, "wid": 606, "sn": 606, "sg": 606, "f1": 606, "f2": 606, "f3": 606, "f4": 606, "657521": 606, "tx": 606, "7500": [606, 671], "331": [606, 614], "657522": 606, "4300": 606, "657523": 606, "0500": 606, "167": 606, "657524": 606, "0200": 606, "657525": 606, "1595": 606, "663777": 606, "sc": 606, "0100": [606, 612], "663778": 606, "663779": 606, "2200": 606, "663780": 606, "1900": 606, "49": [606, 607], "663781": 606, "1100": [606, 614], "6261": 606, "gc_latlon_bear_dist": 606, "lat1": 606, "lon1": 606, "decim": 606, "lat2": 606, "lon2": 606, "lat1r": 606, "deg2rad": 606, "lon1r": 606, "bearr": 606, "lat2r": 606, "lon2r": 606, "rad2deg": [606, 661], "add_scale_lin": 606, "fontsiz": [606, 607, 608, 611, 612, 620, 621, 635, 637, 646, 647], "fontweight": 606, "zoom": [606, 607], "black": [606, 614, 636, 654, 655], "frac_lat": 606, "frac_lon": 606, "e1": 606, "get_ext": 606, "center_lon": 606, "center_lat": 606, "shorten": 606, "hash": [606, 617], "lat1a": 606, "lon1a": 606, "lat1b": 606, "lon1b": 606, "lat2a": 606, "lon2a": 606, "lat2b": 606, "lon2b": 606, "horizontalalign": 606, "verticalalign": 606, "enumer": [606, 611], "iter_success": 606, "mdm": [606, 611], "this_tim": 606, "open_pyart": 606, "map_panel_ax": [606, 650], "x_cut_panel_ax": [606, 650], "y_cut_panel_ax": [606, 650], "masking_data_with_gatefilt": [606, 614], "ax1": [606, 607, 612, 620, 621, 636, 650, 651, 654, 657, 658, 660, 665], "add_ax": [606, 650], "recogniz": 606, "with_scal": 606, "500k": 606, "grai": [606, 608, 610, 637, 638, 654], "plot_colorbar": 606, "pad": [606, 611], "plot_range_r": [606, 614, 630, 640, 641, 643], "dash": [606, 608, 647], "set_xtick": [606, 654, 672, 675], "arang": [606, 612, 615, 629, 643, 646, 647, 654, 655, 659, 660, 661, 680], "set_ytick": [606, 654, 672, 675], "wind_reports_now": 606, "slon": 606, "tolist": 606, "slat": 606, "facecolor": [606, 608, 610], "deepskyblu": 606, "tornado_reports_now": 606, "tab": [606, 617, 636], "red": [606, 646, 647, 660], "hail_reports_now": 606, "lawngreen": 606, "legend": [606, 610, 611, 612, 636], "savefig": [606, 608, 610, 611], "_dz_rpt": 606, "bbox_inch": [606, 611], "tight": [606, 611], "white": [606, 608, 646, 660], "mp4": 606, "map_imag": 606, "gif_titl": 606, "delet": [606, 614, 615, 637, 680], "gif": 606, "get_writ": 606, "fp": 606, "writer": [606, 614], "imread": 606, "append_data": 606, "ffmpeg_writ": 606, "divis": [606, 614], "macro_block_s": 606, "resiz": 606, "1930": 606, "1766": 606, "1936": 606, "1776": 606, "video": 606, "codec": 606, "player": 606, "incompat": [606, 614, 618], "ipython": [606, 610, 611, 613, 682], "browser": 606, "event": [606, 611, 612, 657, 658], "overview": [606, 609, 617], "retrospect": 606, "ecosystem": 607, "By": [607, 608, 612, 618], "learn": [607, 611, 669], "portal": [607, 608], "march": [607, 610, 625], "shown": [607, 611, 635], "offici": [607, 615, 680], "probe": 607, "millimet": 607, "ghz": 607, "purpos": [607, 608, 657, 658], "nearli": [607, 646], "bokeh": 607, "formatt": 607, "datetimetickformatt": 607, "hv": 607, "guckazrcfrgem1": 607, "20220314": [607, 660], "000003": 607, "0x7f7dbd517400": 607, "linear_depolarization_ratio": 607, "mean_doppler_velocity_crosspolar_v": 607, "reflectivity_crosspolar_v": 607, "signal_to_noise_ratio_copolar_h": [607, 612], "signal_to_noise_ratio_crosspolar_v": 607, "spectral_width": 607, "spectral_width_crosspolar_v": 607, "vertical": 607, "awai": [607, 608], "pyart_bal": [607, 608, 612, 629, 649, 665, 673], "substanti": 607, "211": [607, 651], "ax2": [607, 612, 620, 621, 629, 636, 650, 651, 654, 656, 657, 658, 660, 665, 673], "212": [607, 651], "pangeo": 607, "1736": 607, "600": [607, 671], "r_calib": 607, "14t00": 607, "489e": 607, "806e": 607, "107": 607, "886e": 607, "command_lin": 607, "kazrcfr_ingest": 607, "guc": 607, "m1": 607, "process_vers": 607, "kazrcfr": 607, "el7": 607, "dod_vers": 607, "kazrcfrg": 607, "input_sourc": 607, "guckazrm1": 607, "kazr_moments_": 607, "site_id": 607, "software_vers": 607, "wed": 607, "mar": 607, "leachman": 607, "1498936": 607, "histori": [607, 677], "dsmgr": 607, "procnode2": 607, "1736rang": 607, "600frequenc": 607, "1sweep": 607, "1r_calib": 607, "1coordin": 607, "453818": 607, "startstandard_nam": 607, "timearrai": 607, "453818000": 607, "527426000": 607, "601027000": 607, "002026000": 607, "075634000": 607, "149219000": 607, "float323": 607, "10long_nam": 607, "transmit": [607, 673], "frequencyunit": 607, "hzstandard_nam": 607, "radiation_frequencymeta_group": 607, "instrument_parametersarrai": 607, "float32100": 607, "130": 607, "803e": 607, "04long_nam": 607, "volumeunit": 607, "mmeters_between_g": 607, "979246meters_to_center_of_first_g": 607, "679245spacing_is_const": 607, "truestandard_nam": 607, "projection_range_coordinateaxi": 607, "radial_range_coordinatearrai": 607, "679245": 607, "6585": 607, "160": [607, 661, 675], "63774": 607, "17998": 607, "18028": 607, "268": 607, "18058": 607, "248": [607, 627], "northunit": 607, "degreestandard_nam": 607, "sensor_to_target_azimuth_angleaxi": 607, "radial_azimuth_coordinatearrai": 607, "planeunit": 607, "sensor_to_target_elevation_angleaxi": 607, "radial_elevation_coordinatearrai": 607, "00long_nam": 607, "epochancillary_vari": 607, "time_offsetarrai": 607, "base_timeancillary_vari": 607, "base_timearrai": 607, "unspecifiedunit": 607, "dbstandard_nam": 607, "radar_linear_depolarization_ratiounpacking_detail": 607, "unpack": 607, "pack": [607, 614], "1041600": 607, "motion": 607, "instrumentunit": 607, "sstandard_nam": 607, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 607, "crosspolar": 607, "channelunit": 607, "factorunit": 607, "dbzstandard_nam": 607, "equivalent_reflectivity_factorunpacking_detail": 607, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 607, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 607, "widthunit": 607, "radar_doppler_spectrum_widthunpacking_detail": 607, "angleunit": 607, "degreearrai": 607, "n_sampl": 607, "momentsunit": 607, "1meta_group": 607, "instrument_parametersstandard_nam": 607, "number_of_samples_used_to_compute_momentsarrai": 607, "noise_figur": 607, "methodunit": 607, "dbarrai": 607, "67": [607, 657, 658], "8043": 607, "unambigu": [607, 677], "velocityunit": 607, "smeta_group": 607, "968252": 607, "repetit": 607, "timeunit": 607, "sarrai": 607, "00027": 607, "transmitt": 607, "r_calib_radar_constant_copol": 607, "copolarunit": 607, "dbmeta_group": 607, "radar_calibrationstandard_nam": 607, "calibrated_radar_constant_h_channelarrai": 607, "996191": 607, "r_calib_radar_constant_crosspol": 607, "crosspolarunit": 607, "405288": 607, "r_calib_two_way_radome_loss_h": 607, "radom": 607, "loss": 607, "radar_calibration_two_way_radome_loss_h_channelarrai": 607, "half": 607, "radar_measured_sky_noise_h": 607, "sky": 607, "dbmarrai": 607, "69": [607, 643], "03703": 607, "035995": 607, "0373": 607, "03814": 607, "05106": 607, "05984": 607, "radar_measured_sky_noise_v": 607, "radar_measured_transmit_pow": 607, "powerunit": 607, "dbmmeta_group": 607, "radar_transmit_powerarrai": 607, "143": [607, 661], "receiver_gain_copol": 607, "copolunit": 607, "sweepunit": 607, "1735": 607, "s22": 607, "basedunit": 607, "unambiguous_rang": [607, 677], "rangeunit": 607, "mmeta_group": 607, "unambiguous_rangearrai": 607, "40479": 607, "477": [607, 614], "degree_nstandard_nam": 607, "latitudevalid_min": 607, "0valid_max": 607, "0arrai": 607, "956158": 607, "degree_estandard_nam": 607, "longitudevalid_min": 607, "106": 607, "987854": 607, "altitudeunit": 607, "mstandard_nam": 607, "altitudearrai": 607, "2886": 607, "levelunit": 607, "heightarrai": 607, "m1convent": 607, "radar_calibrationprocess_vers": 607, "el7dod_vers": 607, "1input_sourc": 607, "kazr_moments_20220314": 607, "000005": 607, "datsite_id": 607, "gucplatform_id": 607, "kazrcfrgefacility_id": 607, "m1data_level": 607, "a1location_descript": 607, "laboratori": [607, 611], "sail": 607, "mt": 607, "crest": 607, "butt": [607, 608], "coloradodatastream": 607, "a1antenna_altitud": 607, "mantenna_diamet": 607, "mcomment": 607, "digital_rx_dec": 607, "24dualpol": 607, "0fft_len": 607, "512filter_length": 607, "67institut": 607, "radiat": [607, 608, 610, 612, 615, 669, 671, 672, 673, 675, 676, 677, 680], "research": [607, 608, 610, 615, 669, 671, 672, 673, 675, 676, 677, 680], "facilityn_g": 607, "1024num_spectral_averag": 607, "15pulse_compression_ratio": 607, "3range_gate_spacing_m": 607, "979246range_offset_ch1": 607, "mrange_offset_ch2": 607, "mscan_mod": 607, "pointingscan_nam": 607, "vptsoftware_vers": 607, "leachmantitl": 607, "momentsdoi": 607, "1498936histori": 607, "isel": 607, "coupl": [607, 612], "extra": [607, 610, 614], "won": [607, 611], "600rang": 607, "600coordin": 607, "395940000": 607, "469427000": 607, "542946000": 607, "360000": 607, "quadmesh": [607, 608], "0x7f7dad654f10": 607, "meant": [607, 609, 611], "popular": [607, 610], "jump": 607, "bar": 607, "hover": 607, "inspect": 607, "clabel": [607, 646, 647], "xformatt": 607, "ref_plot": 607, "7000": [607, 675], "platform_id": 607, "location_descript": 607, "xtick": [607, 672, 675], "ytick": [607, 672, 675], "vel_plot": 607, "prepar": [607, 608, 610, 612, 615, 671, 672, 673, 675, 676, 677, 680], "plot1": 607, "plot2": 607, "datashad": 607, "lazili": 607, "coars": 607, "intial": 607, "unfortun": 607, "ref_plot_rast": 607, "param": [607, 614], "dynamic_oper": 607, "outofboundsdatetim": 607, "nanosecond": 607, "54168": 607, "invok": 607, "x_rang": 607, "13t23": 607, "417014000": 607, "579705000": 607, "y_rang": 607, "traceback": 607, "recent": [607, 611, 614, 682], "mgrover": [607, 610, 612, 625, 629, 635, 636, 641, 649, 655, 656, 665, 666, 667], "277": [607, 614], "get_plot_fram": 607, "map_obj": 607, "1344": 607, "val": 607, "_execute_callback": 607, "tuple_kei": 607, "retval": 607, "callback": 607, "arg": 607, "708": 607, "__call__": 607, "ret": 607, "__init__": [607, 615, 626, 680], "1043": [607, 614], "obj": 607, "resolv": [607, 614], "1032": [607, 614], "1044": 607, "1036": 607, "_process": 607, "1018": [607, 614], "process_el": 607, "194": [607, 640, 652, 678], "_appli": 607, "141": 607, "1514": 607, "predic": [607, 612], "pipelined_fn": 607, "method_fn": 607, "1223": 607, "super": [607, 640, 672, 675], "710": [607, 614], "map_fn": 607, "214": 607, "1133": [607, 614], "astyp": 607, "int64": 607, "1497": [607, 614], "apply_ufunc": 607, "1159": 607, "apply_dataarray_vfunc": 607, "286": [607, 614], "result_var": 607, "data_var": 607, "750": [607, 614], "apply_variable_ufunc": 607, "as_compatible_data": 607, "234": 607, "_possibly_convert_object": 607, "178": 607, "asarrai": 607, "ravel": 607, "reshap": 607, "sanitize_arrai": 607, "567": [607, 614], "subarr": 607, "_try_cast": 607, "raise_cast_failur": 607, "726": [607, 614], "sanitize_to_nanosecond": 607, "arr": 607, "cast": 607, "1717": 607, "ensure_datetime64n": 607, "_lib": 607, "tslib": 607, "pyx": [607, 614], "257": 607, "np_datetim": 607, "120": [607, 671], "check_dts_bound": 607, "saw": 607, "few": [607, 614, 617, 682], "pro": 607, "con": 607, "thing": [607, 615, 680], "clear": [607, 612], "push": [607, 614, 615, 617, 680], "share": 607, "ran": [607, 615, 680], "shareabl": 607, "workflow": [607, 610, 614], "mb": [607, 622, 627, 633, 652, 662, 663, 668, 678], "difficult": [607, 629], "jupyterbook": 607, "jupyt": [607, 610, 614, 620, 621, 623, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 682], "campaign": [607, 612, 658], "twitter": 608, "nou": 608, "dryglick": 608, "notic": [608, 612, 614, 629, 637], "odd": 608, "directli": [608, 635], "grei": 608, "darker": 608, "moir\u00e9": 608, "ryan": 608, "dopplershift": [608, 614], "turbul": 608, "ncei": 608, "search": [608, 669, 679], "aw": [608, 610, 614, 623, 624, 626, 627, 678], "mention": [608, 614, 615, 669, 680, 682], "he": 608, "n0u": [608, 625], "elgin": 608, "panhandl": 608, "kevx": 608, "1458": 608, "octob": 608, "landfal": 608, "gulf": 608, "lookl": 608, "webpag": 608, "cart": 608, "sent": 608, "email": [608, 612, 614], "websit": 608, "ftp": 608, "unzip": [608, 610], "kmob_sdus54_n0uevx_201810101458": 608, "partli": [608, 610, 671, 672, 673, 675, 676, 677], "facil": [608, 610, 611, 612, 615, 669, 671, 672, 673, 675, 676, 677, 680], "cite": [608, 610, 612, 614, 671, 672, 673, 675, 676, 677], "jj": [608, 610, 671, 672, 673, 675, 676, 677], "sm": [608, 610, 671, 672, 673, 675, 676, 677], "colli": [608, 610, 615, 669, 671, 672, 673, 675, 676, 677, 680], "jor": [608, 610, 615, 669, 671, 672, 673, 675, 676, 677, 680], "5334": [608, 610, 615, 669, 671, 672, 673, 675, 676, 677, 680], "119": [608, 610, 615, 626, 669, 671, 672, 673, 675, 676, 677, 680], "read_level3": 608, "dark": 608, "dark_background": 608, "okai": 608, "88": [608, 610, 611, 655], "83": 608, "31msignatur": [608, 612], "0m": [608, 610, 612], "0mdisplai": 608, "34m": [608, 612], "0mplot_ppi_map": 608, "0mfield": 608, "0msweep": 608, "36m0": 608, "0mmask_tupl": 608, "32mnone": [608, 612], "0mvmin": 608, "0mvmax": 608, "0mcmap": 608, "0mnorm": 608, "0mmask_outsid": 608, "32mfals": 608, "0mtitl": 608, "0mtitle_flag": 608, "32mtrue": 608, "0mcolorbar_flag": 608, "0mcolorbar_label": 608, "0max": 608, "0mfig": 608, "0mlat_lin": 608, "0mlon_lin": 608, "0mproject": 608, "0mmin_lon": 608, "0mmax_lon": 608, "0mmin_lat": 608, "0mmax_lat": 608, "0mwidth": 608, "0mheight": 608, "0mlon_0": 608, "0mlat_0": 608, "0mresolut": 608, "0mshapefil": 608, "0mshapefile_kwarg": 608, "0medg": 608, "0mgatefilt": 608, "0mfilter_transit": 608, "0membelish": 608, "0mraster": 608, "0mtick": 608, "0mticklab": 608, "0malpha": 608, "31msourc": 608, "32mdef": 608, "0mself": 608, "embelish": [608, 614], "31m": 608, "0mparse_vmin_vmax": 608, "0m_radar": 608, "0mparse_cmap": 608, "32mif": 608, "32mi": 608, "0mnp": 608, "0marang": 608, "36m30": 608, "36m46": 608, "36m1": 608, "36m110": 608, "36m75": 608, "0mloc": 608, "0mdata": 608, "0m_get_data": 608, "0mx": 608, "0my": 608, "0m_get_x_i": 608, "0mma": 608, "0mmasked_outsid": 608, "0mplt": 608, "0mgcf": 608, "32mnot": 608, "0mhasattr": 608, "32mels": 608, "0mcartopi": 608, "0mcr": 608, "0mlambertconform": 608, "0mcentral_longitud": 608, "0mcentral_latitud": 608, "0mwarn": 608, "overrid": [608, 647], "lambert": [608, 614], "0muserwarn": 608, "0mset_ext": 608, "0mplatecarre": 608, "32melif": 608, "36m2": 608, "0mgrid_project": 608, "0mpm": 608, "0mpcolormesh": 608, "36m1000": 608, "0mtransform": 608, "graphic": 608, "0mset_raster": 608, "admin": [608, 615, 680], "0mstates_provinc": 608, "0mfeatur": 608, "0mnaturalearthfeatur": 608, "0mcategori": 608, "cultur": 608, "0mname": 608, "admin_1_states_provinces_lin": 608, "0mscale": 608, "0mfacecolor": 608, "0mcoastlin": 608, "0madd_featur": 608, "0medgecolor": 608, "pose": 608, "difficulti": 608, "spectif": 608, "32min": 608, "0mmercat": 608, "0mgl": 608, "0mgridlin": 608, "0mxloc": 608, "0myloc": 608, "0mdraw_label": 608, "0mxlabels_top": 608, "0mylabels_right": 608, "0misinst": 608, "0mfigur": 608, "0mcanva": 608, "0mdraw": 608, "maker": 608, "0mxaxi": 608, "0mset_major_formatt": 608, "0mmpl": 608, "0mlongitude_formatt": 608, "0myaxi": 608, "0mlatitude_formatt": 608, "0m_lambert_gridlin": 608, "0mlambert_xtick": 608, "0mlambert_ytick": 608, "32mfrom": 608, "0mio": 608, "0mshaperead": 608, "32mimport": 608, "0mreader": 608, "0madd_geometri": 608, "0mgeometri": 608, "0m_set_titl": 608, "0mplot": 608, "0mappend": 608, "0mplot_var": 608, "0mplot_colorbar": 608, "0mmappabl": 608, "0mlabel": 608, "32mreturn": 608, "31mfile": [608, 612], "git_repo": 608, "31mtype": [608, 612], "fashion": 608, "0marg": 608, "0mshade": 608, "0mantialias": 608, "0mkwarg": 608, "31mdocstr": [608, 612], "pseudocolor": 608, "signatur": [608, 610], "quadrilater": 608, "pcolor": 608, "prefer": [608, 614, 679], "ref": [608, 626, 650, 658], "shade": [608, 614], "flat": [608, 625], "gouraud": 608, "cari": 608, "expand": 608, "rc": 608, "regist": [608, 612], "canon": 608, "chosen": 608, "patch": [608, 646], "force_edgecolor": 608, "singular": [608, 611], "opaqu": 608, "solid": [608, 647], "quad": 608, "halfwai": 608, "galleri": [608, 614, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 669, 678], "images_contours_and_field": 608, "pcolormesh_grid": 608, "snap": 608, "mesh": 608, "misc": [608, 614], "rasterization_demo": 608, "constructor": 608, "agg_filt": 608, "anim": 608, "antialias": [608, 646, 647], "aa": 608, "capstyl": 608, "clip_box": 608, "bbox": 608, "clip_on": 608, "clip_path": 608, "rgba": 608, "ec": 608, "fc": 608, "gid": 608, "hatch": 608, "in_layout": 608, "joinstyl": 608, "miter": 608, "bevel": 608, "thereof": 608, "offset_transform": 608, "path_effect": 608, "abstractpatheffect": 608, "picker": 608, "pickradiu": 608, "sketch_param": 608, "random": [608, 612], "zorder": 608, "imshow": [608, 614, 630, 631, 632, 635], "_ax": 608, "nrow": [608, 635], "ncolumn": 608, "_differ": 608, "li": 608, "handl": [608, 614], "polycollect": 608, "thu": [608, 617], "almost": 608, "slight": 608, "polygon": 608, "irrespect": 608, "One": [608, 611, 615, 671, 677, 680, 682], "masked_arrai": [608, 660, 671, 677], "1e": [608, 660, 671, 677], "next": [608, 610, 617, 625, 654], "get_gate_lat_lon_alt": [608, 612, 614], "565": [608, 614], "562763": 608, "560526": 608, "888458": 608, "886227": 608, "883991": 608, "562765": 608, "560532": 608, "892834": 608, "890606": 608, "888374": 608, "562769": 608, "56054": 608, "898003": 608, "89578": 608, "893553": 608, "562756": 608, "560509": 608, "880096": 608, "877857": 608, "875618": 608, "560513": 608, "881853": 608, "879616": 608, "877377": 608, "56276": 608, "560518": 608, "884874": 608, "88264": 608, "880404": 608, "92199": 608, "92222": 608, "92245": 608, "186806": 608, "18703": 608, "18723": 608, "922264": 608, "92254": 608, "2396": 608, "23986": 608, "24012": 608, "92231": 608, "92263": 608, "29231": 608, "29262": 608, "29292": 608, "92208": 608, "92218": 608, "02802": 608, "02811": 608, "0282": 608, "92212": 608, "92226": 608, "07571": 608, "07583": 608, "07595": 608, "922356": 608, "133934": 608, "1341": [608, 614], "13428": 608, "setup": [608, 612, 614, 625, 629, 635, 636, 641, 655, 669, 679], "geoaxi": 608, "border": [608, 646], "cbar": [608, 611, 637], "tick_param": [608, 660], "labels": 608, "set_label": [608, 611, 637], "gl": [608, 610, 637], "draw_label": [608, 610, 637], "xlabel_styl": [608, 637], "ylabel_styl": [608, 637], "kevz_velocity_2018_10_10_1458": 608, "specifici": 608, "pull": [608, 611, 614, 615, 616, 617, 626, 680], "pr": [608, 617], "importantli": 608, "api": [608, 614, 669], "abil": [608, 614, 669, 682], "arguement": 608, "appreci": [608, 669], "hello": 609, "welcom": 609, "narr": 609, "feedback": 609, "feel": 609, "know": [609, 611, 612, 682], "fridai": 610, "midwest": 610, "142": 610, "368": [610, 614], "excess": 610, "65": [610, 611, 654, 660], "knot": 610, "mph": 610, "184": 610, "bing": 610, "inch": 610, "diamet": 610, "ifram": 610, "spc": [610, 614], "climo": 610, "gmf": 610, "php": 610, "rpt": 610, "230331_rpts_filter": 610, "walworth": 610, "counti": 610, "southeastern": [610, 629], "geneva": 610, "tourist": 610, "especi": [610, 612, 630], "live": 610, "chicagoland": 610, "confirm": [610, 625, 671], "assembl": 610, "summari": [610, 625], "grlevel": 610, "encourag": 610, "peopl": 610, "cookbook": [610, 614, 669, 681], "moor": 610, "focu": 610, "varieti": [610, 612, 615, 623, 624, 658, 680], "forg": [610, 614, 615, 669, 679, 680, 682], "arm_pyart": [610, 615, 617, 669, 679, 680, 682], "shaperead": 610, "shpreader": 610, "shapelyfeatur": 610, "miniforge3": 610, "tqdm": 610, "tqdmwarn": 610, "iprogress": 610, "ipywidget": 610, "readthedoc": 610, "stabl": 610, "user_instal": 610, "autonotebook": 610, "notebook_tqdm": 610, "credit": 610, "censu": 610, "mac": [610, 614, 669], "curl": 610, "linux": [610, 614, 615, 669, 680, 682], "wget": 610, "www2": 610, "geo": [610, 614], "tiger": 610, "tiger2016": 610, "primaryroad": 610, "tl_2016_us_primaryroad": 610, "zip": [610, 611, 620, 621, 623, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667, 669], "xferd": 610, "dload": 610, "upload": [610, 614], "spent": 610, "7m": 610, "cpg": 610, "inflat": 610, "dbf": 610, "prj": 610, "shp": 610, "ea": 610, "iso": 610, "shx": 610, "reader": [610, 613, 614, 626], "geom": 610, "loop": [610, 614, 661], "rec": 610, "fullnam": 610, "interstate_featur": 610, "darkblu": 610, "clean": [610, 611, 614, 654, 665], "filesystem": [610, 611], "month": [610, 625, 626], "kmkx20230401_010517_v06": 610, "kmkx20230401_011057_v06": 610, "kmkx20230401_011638_v06": 610, "kmkx20230401_012219_v06": 610, "kmkx20230401_012759_v06": 610, "kmkx20230401_013341_v06": 610, "kmkx20230401_013922_v06": 610, "kmkx20230401_014502_v06": 610, "kmkx20230401_015042_v06": 610, "kmkx20230401_015623_v06": 610, "kmkx20230401_015928_v06": 610, "plot_configur": 610, "twilight_shift": [610, 665], "cross_correlation_ratio": [610, 611, 625, 638, 639, 657, 658, 676, 677], "plot_radar_ppi": 610, "left_field": 610, "right_field": 610, "plot_config": 610, "precip": 610, "vel_dealia": 610, "dealias_region_bas": [610, 614, 621, 654, 665, 673], "add_field": [610, 615, 620, 621, 654, 657, 658, 659, 660, 665, 672, 673, 680], "corrected_veloc": [610, 621, 654, 661, 665, 673, 676], "plot_numb": 610, "config": [610, 614, 671, 682], "121": [610, 612, 625, 629, 636, 656, 660, 665], "generate_titl": 610, "time_step": 610, "get_start_end": 610, "central_tim": 610, "astimezon": 610, "new_titl": 610, "cdt": 610, "sharon": 610, "Near": 610, "delavan": 610, "6105": 610, "60666": 610, "lightgrei": 610, "lavenderblush": 610, "ppi_velocity_reflectivity_": 610, "flexibl": [610, 614], "hope": 610, "concept": 611, "quickstart": 611, "basic": [611, 614, 669, 670, 672], "visual": [611, 612, 614, 635, 638, 646, 655, 658, 665], "compet": 611, "bytesio": 611, "pil": 611, "ipimag": 611, "repositori": [611, 615, 616, 617, 669, 679, 680, 682], "chicago": 611, "klot": 611, "june": 611, "5th": 611, "start_dat": 611, "yyyi": [611, 612, 613], "dd": [611, 612, 613], "hh": 611, "end_dat": 611, "argonn": 611, "lemont": 611, "il": 611, "sawmil": 611, "creek": 611, "darien": 611, "ie": 611, "slot": 611, "700937896518866": 611, "73884644555692": 611, "99578103231573": 611, "98744136114946": 611, "tower": 611, "scm": [611, 614, 615, 680], "magenta": 611, "cyan": [611, 660], "current_d": 611, "date_str": 611, "date_str_compact": 611, "hour_str": 611, "all_fil": 611, "filtered_fil": 611, "endswith": 611, "_mdm": 611, "although": 611, "pol": 611, "check_radar_field": 611, "file_path": 611, "rb": 611, "radar_data": 611, "klot20240605_040442_v06": 611, "clutter_filter_power_remov": [611, 625], "spectrum_width": [611, 625, 676, 677], "differential_phas": [611, 625, 639, 676, 677], "streamlin": 611, "read_radar_data": 611, "tell": [611, 660, 676], "halt": 611, "unabl": 611, "sometim": [611, 617, 671], "reduc": [611, 638, 658, 679], "nonmeteorolog": 611, "blob": [611, 647], "aforement": 611, "fit": 611, "pure": 611, "aesthet": 611, "decis": 611, "basenam": 611, "markers": 611, "tight_layout": [611, 612, 630, 651, 654], "046": 611, "radar_frame_": 611, "frame": 611, "someth": [611, 669], "rid": 611, "temporarili": 611, "abl": [611, 669, 679], "pillow": 611, "gif_filenam": 611, "radar_anim": 611, "save_al": 611, "append_imag": 611, "durat": 611, "704120": 611, "968328": 611, "frames_dir": 611, "makedir": 611, "exist_ok": 611, "radar_displai": 611, "notabl": [612, 613], "insight": [612, 613], "analyz": [612, 615, 669, 676, 680], "decid": 612, "quicklook": 612, "januari": [612, 615, 669, 680], "wettest": 612, "la": 612, "jolla": 612, "california": 612, "tarfil": 612, "download_arm_data": 612, "0mact": 612, "0mdiscoveri": 612, "0mdownload_arm_data": 612, "0musernam": 612, "0mtoken": 612, "0mdatastream": 612, "0mstartdat": 612, "0menddat": 612, "0mtime": 612, "0moutput": 612, "webservic": 612, "usernam": [612, 679], "log": [612, 614, 617], "adc": [612, 614], "datastream": 612, "acquir": 612, "startdat": 612, "yyyymmdd": 612, "thh": 612, "ss": 612, "15t12": 612, "enddat": 612, "15t13": 612, "hhmmss": 612, "programmat": 612, "rest": 612, "savedata": 612, "cron": 612, "job": 612, "workspac": 612, "disk": 612, "hpss": 612, "armliv": 612, "livedata": 612, "giansiracusa": 612, "giansiracumt": 612, "ornl": 612, "sgpmete13": 612, "jan": 612, "xxxxxxxxxxxxxxxx": 612, "download_data": 612, "mambaforg": 612, "epckasacrcfrs2": 612, "21t01": 612, "20240121": 612, "010020": 612, "010436": 612, "011116": 612, "012914": 612, "012503": 612, "011845": 612, "012257": 612, "010757": 612, "010118": 612, "011434": 612, "012708": 612, "011640": 612, "012051": 612, "bharadwaj": 612, "hardin": 612, "isom": 612, "johnson": 612, "lindenmai": 612, "matthew": 612, "nelson": 612, "feng": 612, "deng": 612, "rocqu": 612, "castro": 612, "wendler": 612, "ka": 612, "kasacrcfr": 612, "1469302": 612, "trick": 612, "ones": [612, 635], "798": 612, "runtimewarn": 612, "encount": 612, "intersect": 612, "whic": 612, "ppi_fil": 612, "rhi_fil": 612, "elif": 612, "mainli": 612, "threshold_valu": 612, "suptitl": [612, 620, 621, 630, 649, 661], "too": [612, 614], "And": [612, 614], "remaind": 612, "fromnumer": [612, 620], "784": [612, 614], "maskedarrai": [612, 614, 620], "kth": [612, 620], "idea": [612, 671, 673], "0115": 612, "rhi_radar": 612, "ppi_radar": 612, "achiv": 612, "past": [613, 615, 680], "tag": [613, 614], "kernelspec": 613, "display_nam": 613, "ipykernel": 613, "languag": [613, 615, 669, 680], "language_info": 613, "codemirror_mod": 613, "file_extens": 613, "mimetyp": 613, "nbconvert_export": 613, "pygments_lex": 613, "ipython3": 613, "insert": 613, "nbformat": 613, "nbformat_minor": 613, "care": 613, "isilb": 614, "sinaram": 614, "1532": 614, "zssherman": 614, "get_azimuth": 614, "xradar": [614, 668, 678], "1547": 614, "mgrover1": 614, "1544": 614, "1542": 614, "1541": 614, "bridg": 614, "1537": 614, "columnsect": [614, 655], "1529": 614, "failur": 614, "wheel": 614, "1526": 614, "dep": 614, "bump": 614, "action": [614, 615, 617, 680], "group": [614, 615, 680], "1539": 614, "dependabot": 614, "epcap": 614, "1534": 614, "1530": 614, "1528": 614, "zdist_factor": 614, "1509": 614, "1524": 614, "1519": 614, "codeql": 614, "1515": 614, "pin": [614, 617], "ci": [614, 616, 617], "1507": 614, "xdrlib": 614, "1525": 614, "1518": 614, "1492": 614, "kmuehlbauer": 614, "rtanamachi": 614, "1504": 614, "1487": 614, "1478": 614, "jrobrien91": 614, "1503": 614, "1501": 614, "outdat": 614, "ipynb": [614, 620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667], "1490": 614, "1484": 614, "1482": 614, "1474": 614, "commit": [614, 615, 617, 680], "1506": 614, "1475": 614, "rainbow_wrl": 614, "happyxiaoanan": 614, "reclass": 614, "1495": 614, "rbhupi": 614, "1493": 614, "minor": [614, 630, 672, 675], "get_elev": 614, "1489": 614, "rescal": [614, 657, 658], "1486": 614, "1479": 614, "rcjackson": 614, "app": 614, "cmweather": 614, "1452": 614, "accessor": 614, "1457": 614, "syedhamidali": 614, "1456": 614, "typo": 614, "1471": 614, "isinst": 614, "1448": 614, "1472": 614, "1470": 614, "1469": 614, "instruct": [614, 669, 681], "1462": 614, "1473": 614, "1468": 614, "1450": 614, "scolli": 614, "dim": 614, "load_kazr": 614, "1446": 614, "1447": 614, "arm_vpt": 614, "1445": 614, "lint": [614, 615, 680], "1444": 614, "mnt": 614, "1440": [614, 671], "dedic": 614, "1442": 614, "1443": 614, "1437": 614, "algorith": 614, "1434": 614, "wolfidan": 614, "1430": 614, "1433": 614, "1428": 614, "neutrinocero": 614, "odim": 614, "1425": 614, "gatemapp": [614, 623, 628, 633, 678], "1418": 614, "hook": [614, 615, 680], "1419": 614, "sphinx": [614, 620, 621, 623, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 667], "theme": 614, "1427": 614, "feet": 614, "1423": 614, "leak": 614, "mapper": 614, "1421": 614, "vforcel": 614, "1417": 614, "steepatticstair": 614, "1407": 614, "readm": [614, 679], "1397": 614, "1416": 614, "1413": 614, "1411": 614, "1409": 614, "1401": 614, "joshua": 614, "hampton": 614, "del": [614, 637], "old": 614, "conda_recip": 614, "1399": 614, "ruff": 614, "1388": 614, "wrong": 614, "1390": 614, "1385": 614, "1383": 614, "pkg_resourc": 614, "runtim": 614, "1394": 614, "mail": [614, 615, 669, 680], "1393": 614, "codeown": 614, "1391": 614, "1384": 614, "1382": 614, "1379": 614, "mismatch": 614, "1381": 614, "wrap": 614, "get_gate_area": 614, "1375": 614, "1380": [614, 671], "1372": 614, "exec_modul": 614, "load_modul": 614, "1369": 614, "badg": 614, "read_sigmet": 614, "1351": 614, "zouihao": 614, "unus": 614, "1343": 614, "1342": 614, "range_step": 614, "1338": 614, "max_num_g": 614, "1337": 614, "1327": 614, "revert": 614, "setuptool": 614, "unwant": 614, "cleanup": 614, "1357": 614, "1355": 614, "1339": 614, "1361": 614, "1335": 614, "manipul": [614, 637, 670], "1300": 614, "kylejgillett": 614, "melovato": 614, "tsbiscaro": 614, "1324": 614, "1319": 614, "1314": 614, "add_filt": 614, "1326": 614, "1320": [614, 671], "1325": 614, "jthielen": 614, "1303": 614, "jjhelmu": [614, 682], "wx4stg": 614, "antiviru": 614, "similiar": 614, "1307": 614, "1299": 614, "throw": 614, "convolve1d": 614, "1313": 614, "1306": 614, "1317": 614, "1311": 614, "jfigui": 614, "citat": [614, 615, 638, 669, 680], "1304": 614, "gamaanderson": 614, "hhuangwx": 614, "josephhardine": 614, "meteoswiss": [614, 659, 661], "mdr": 614, "ngui": 614, "tjlang": 614, "1294": 614, "1290": 614, "1285": 614, "1279": 614, "backward": [614, 618], "1278": 614, "1284": 614, "tracer": 614, "1296": 614, "1292": 614, "1287": 614, "cibuildwheel": 614, "1267": 614, "ocefpaf": 614, "1275": 614, "1276": 614, "1265": 614, "dcedgren": 614, "jilling": 614, "zhaobudaola": 614, "1263": 614, "1235": 614, "1215": 614, "1261": 614, "1241": 614, "1240": 614, "gatefi": 614, "1226": 614, "join_radar": 614, "repititon": 614, "iparam": 614, "1218": 614, "1216": 614, "trmm_rsl": 614, "1239": 614, "cftime": 614, "1211": 614, "incorrect": [614, 618, 673], "1231": 614, "ci_setup": 614, "1213": 614, "1264": 614, "1251": 614, "1234": 614, "1228": 614, "subset_radar": 614, "radar_util": 614, "1227": 614, "pyrad": 614, "1220": 614, "tst": 614, "1214": 614, "srbrodzik": 614, "1208": 614, "1204": 614, "1201": [614, 625], "1198": 614, "1196": 614, "catch": 614, "1191": 614, "1207": 614, "pypi": 614, "1206": 614, "unitest": 614, "1200": [614, 671], "1199": 614, "echoclass": 614, "1197": 614, "convv": 614, "awhil": 614, "back": 614, "1195": 614, "1190": 614, "dp": 614, "1184": 614, "solver": [614, 669], "1183": 614, "1176": 614, "1187": 614, "revis": 614, "270": [614, 615, 651, 680], "1185": 614, "1181": 614, "1178": 614, "1171": 614, "1180": 614, "1177": 614, "1173": 614, "sobitp59": 614, "rogu": 614, "1170": 614, "1160": 614, "1152": 614, "1151": 614, "mispel": 614, "1158": 614, "1148": 614, "1167": 614, "1154": 614, "unittest": 614, "1153": 614, "1136": 614, "trigger": 614, "1126": 614, "1118": 614, "1115": 614, "maco": 614, "1147": 614, "prune": 614, "1143": 614, "1141": 614, "1140": [614, 671], "1139": 614, "1137": 614, "1131": 614, "1130": 614, "1129": 614, "1128": 614, "1127": 614, "1125": 614, "1124": 614, "1123": 614, "1120": 614, "1119": 614, "dpr": 614, "1116": 614, "postcard": 614, "1104": 614, "1103": 614, "1122": 614, "gridmapdisplai": [614, 623, 634, 636, 652, 657, 658, 666, 675, 678], "1099": 614, "quick": [614, 625], "1146": 614, "contribut": [614, 615, 680, 681], "1106": 614, "1117": 614, "1113": 614, "submodul": [614, 675], "1110": 614, "forgotten": 614, "1108": 614, "test_echo_class": 614, "1107": 614, "1101": 614, "1098": 614, "1097": 614, "1094": 614, "1080": [614, 671], "registri": 614, "1087": 614, "1096": 614, "1093": 614, "1090": 614, "1089": 614, "1088": 614, "1085": 614, "1084": 614, "analyt": 614, "1081": 614, "1079": 614, "1077": 614, "pmi": 614, "csp": 614, "ritvj": 614, "doesn": [614, 671], "mandat": 614, "1014": 614, "reallynicegui": 614, "hasattr": 614, "1034": 614, "overlap": [614, 637, 646], "mapdisplai": 614, "1029": 614, "azimuth_rhi_plot": 614, "1025": 614, "1019": 614, "rxm25": 614, "1075": 614, "1064": 614, "mute_radar": 614, "1033": 614, "1030": 614, "radxgrid": 614, "1027": 614, "1026": 614, "roadmap": 614, "repo": [614, 615, 680], "1059": 614, "sidebar": 614, "1074": 614, "datetime_util": 614, "1072": 614, "1071": 614, "pydata": 614, "1069": 614, "1068": 614, "1067": 614, "1066": 614, "1063": 614, "codecov": 614, "1061": 614, "1060": 614, "1058": 614, "1056": 614, "1055": 614, "1053": 614, "1051": 614, "1050": 614, "1048": 614, "branch": [614, 615, 617, 680, 682], "1040": 614, "1039": 614, "1038": 614, "1031": 614, "1024": 614, "1020": [614, 671], "humphreyscart": 614, "tkralph": 614, "1003": 614, "997": 614, "1007": 614, "1001": 614, "1010": 614, "travi": 614, "sty": [614, 615, 680], "pep8": [614, 615, 680], "1005": 614, "988": 614, "quba1": 614, "984": 614, "tdwr": 614, "969": 614, "956": 614, "994": 614, "979": 614, "h5py": [614, 669], "978": 614, "june1st": 614, "switch": [614, 615, 680], "973": 614, "maint": [614, 615, 680], "966": 614, "983": 614, "amarouan": 614, "abdelhak": 614, "bmgxyz": 614, "address": [614, 660], "962": 614, "mwilson14": 614, "963": 614, "nonetyp": 614, "regard": 614, "959": 614, "964": [614, 659, 662, 678], "176": 614, "919": 614, "rda": 614, "903": 614, "add_gate_area": 614, "950": 614, "blotchi": 614, "947": 614, "946": 614, "944": 614, "694": 614, "938": 614, "vlouf": 614, "934": 614, "925": 614, "924": 614, "917": 614, "appveyor": 614, "937": 614, "927": 614, "liter": 614, "said": 614, "949": 614, "948": 614, "929": 614, "926": 614, "920": 614, "915": 614, "911": 614, "grwise1": 614, "jsignel": 614, "rumpki": 614, "broke": 614, "913": 614, "msg29": 614, "909": 614, "907": 614, "framework": 614, "910": 614, "912": 614, "napoleon": 614, "902": 614, "rtd": 614, "893": 614, "892": 614, "odimh5": 614, "898": 614, "895": 614, "896": 614, "864": 614, "louiswick": 614, "hilderbrand": 614, "877": 614, "886": 614, "crash": 614, "878": 614, "891": 614, "zflamig": 614, "futur": [614, 615, 618, 680], "890": 614, "889": 614, "885": 614, "dstex": 614, "880": 614, "soon": 614, "879": 614, "plot_grid": [614, 636, 650, 657, 658, 666, 675], "to_xarrai": 614, "873": 614, "876": 614, "elementwis": 614, "anaconda": [614, 615, 617, 669, 679, 680], "faq": 614, "868": 614, "mvanlierwalq": 614, "848": 614, "grid_io": 614, "846": 614, "jhemedin": 614, "841": 614, "nbin": 614, "865": 614, "856": 614, "840": [614, 671], "caus": 614, "852": 614, "849": 614, "get_dataset": 614, "845": 614, "docstr": 614, "838": 614, "836": 614, "cheatsheet": 614, "fortran": 614, "bit": [614, 679], "environ": [614, 669, 679, 681], "contr": 614, "843": 614, "spell": 614, "835": 614, "read_d3r_gcpex_nc": 614, "842": 614, "eccc": 614, "837": 614, "taylbm": 614, "kenkeho": 614, "swnesbitt": 614, "827": [614, 644, 652, 678], "822": 614, "806": 614, "804": 614, "800": [614, 654], "778": 614, "688": [614, 655], "incomplet": 614, "msg5": 614, "832": 614, "820": 614, "812": 614, "deal": 614, "809": 614, "contiuum": 614, "gh": 614, "795": 614, "explicit": 614, "py2": 614, "790": 614, "sh": 614, "kai": 614, "muehlbauer": 614, "789": [614, 666, 668, 678], "777": 614, "indexerror": 614, "check_outli": 614, "776": 614, "juhi24": 614, "770": 614, "imp": 614, "newer": [614, 679], "675": 614, "824": 614, "minu": 614, "803": 614, "738": 614, "799": 614, "792": 614, "favor": 614, "791": 614, "786": 614, "itself": [614, 677], "inc": 614, "794": 614, "rst": 614, "preformat": 614, "779": 614, "eaxmpl": 614, "834": 614, "833": [614, 660], "elsewher": 614, "831": 614, "828": [614, 649, 652, 678], "821": 614, "pytest": [614, 615, 669, 679, 680], "818": 614, "atteun": 614, "817": 614, "simulated_veloc": [614, 676], "802": 614, "grab": [614, 649], "796": [614, 645, 652, 678], "793": 614, "787": 614, "781": 614, "cvd": 614, "775": 614, "774": 614, "769": 614, "nl2": 614, "765": 614, "miaoneng": 614, "gewitterblitz": 614, "liliaow567": 614, "764": 614, "coveral": 614, "messsag": 614, "761": 614, "757": 614, "set_raster": 614, "748": 614, "754": 614, "755": 614, "recompil": 614, "758": 614, "ngoldbaum": 614, "reciev": 614, "752": 614, "gate_id": [614, 676], "749": 614, "746": 614, "744": 614, "zxdawn": 614, "netcdftim": 614, "736": 614, "731": 614, "dot_product": 614, "729": 614, "test_rhi_elev": 614, "twice": [614, 658], "724": 614, "728": 614, "727": 614, "nosetest": 614, "715": [614, 661, 662, 678], "vradh": 614, "vradv": 614, "quantiti": 614, "739": 614, "es5nhc": 614, "735": 614, "wave100": 614, "734": 614, "733": 614, "730": 614, "723": 614, "comp": 614, "721": 614, "cameron": 614, "homey": 614, "716": 614, "cameronhomey": 614, "jamessong": 614, "winash12": 614, "687": 614, "csnardi": 614, "645": 614, "docbuild": 614, "709": 614, "mhpicel": 614, "705": 614, "fromstr": 614, "704": [614, 678], "692": 614, "651": 614, "711": 614, "calculate_velocity_textur": [614, 665, 673], "retreiv": 614, "672": 614, "bucket": [614, 625], "673": 614, "653": 614, "638": 614, "635": 614, "frombuff": 614, "702": 614, "grid_mapp": 614, "707": 614, "706": 614, "goharkai": 614, "infinit": 614, "693": 614, "freemansw1": 614, "683": 614, "674": 614, "668": 614, "contact": 614, "land": 614, "667": [614, 671], "665": 614, "662": 614, "661": 614, "attributeerror": 614, "656": 614, "oserror": 614, "650": 614, "overflowerror": 614, "648": 614, "happier": 614, "647": [614, 633], "640": 614, "639": 614, "634": 614, "620": 614, "itsjm": 614, "kirknorth": 614, "617": 614, "616": 614, "631": 614, "swap": 614, "el": 614, "plot_rai": 614, "618": [614, 625, 627, 678], "_get_angl": 614, "613": 614, "607": 614, "linspac": [614, 615, 635, 638, 654, 657, 658, 671, 680], "603": 614, "627": 614, "623": 614, "596": 614, "595": 614, "632": 614, "630": [614, 626, 627, 678], "625": 614, "tulipasilva": 614, "622": 614, "normbw": 614, "q": 614, "quit": [614, 669], "614": 614, "git": [614, 615, 669, 679, 680, 682], "611": 614, "608": 614, "mrugna": 614, "605": 614, "bld": 614, "kludg": 614, "604": [614, 638, 652, 678], "acknowledg": [614, 669], "602": 614, "qpe": [614, 658], "598": 614, "mustafaalicelik": 614, "580": 614, "577": 614, "576": 614, "575": 614, "azim": 614, "546": 614, "pickl": 614, "unpickl": 614, "543": 614, "vcp": 614, "541": 614, "noaaport": 614, "seper": 614, "540": [614, 671], "521": 614, "459": 614, "590": 614, "bugfix": 614, "l3": 614, "135": 614, "eet": 614, "585": 614, "582": 614, "570": 614, "558": 614, "ctm": 614, "553": 614, "542": 614, "aux_io": 614, "read_gam": 614, "535": 614, "midnight": 614, "523": 614, "importerror": 614, "522": 614, "519": 614, "512": 614, "510": 614, "phase_proc": 614, "zerodivis": 614, "494": 614, "485": 614, "unsupport": 614, "481": 614, "579": 614, "578": 614, "568": 614, "563": 614, "559": 614, "549": 614, "547": 614, "gamicfil": 614, "gamic_hdf5": 614, "536": 614, "524": 614, "513": 614, "balltre": 614, "504": 614, "501": 614, "482": 614, "479": 614, "594": 614, "561": 614, "despeckle_field": 614, "544": 614, "axislabel_flag": 614, "539": 614, "529": 614, "_get_x_z": 614, "491": [614, 654, 662, 678], "486": 614, "586": 614, "572": [614, 632, 633, 678], "fixup": 614, "569": 614, "560": 614, "555": [614, 621, 622, 655, 678], "recip": [614, 617], "554": 614, "nose_arg": 614, "548": 614, "538": 614, "532": 614, "531": 614, "528": 614, "output_to_geotiff": 614, "514": 614, "511": 614, "507": 614, "506": 614, "498": 614, "libgfortran": 614, "497": 614, "495": 614, "493": 614, "489": 614, "488": 614, "argentinean": 614, "480": [614, 671], "bdolan44": 614, "dara74k": 614, "gavi": 614, "jacaicedob": 614, "wx": 614, "pfhein": 614, "tamisalex": 614, "469": 614, "468": 614, "467": 614, "luminos": 614, "464": 614, "455": 614, "hclass": 614, "447": 614, "439": 614, "434": 614, "433": 614, "427": [614, 656, 662, 678], "411": 614, "404": 614, "388": 614, "cross_section_ppi": [614, 651], "380": 614, "472": 614, "471": 614, "470": 614, "prf": 614, "460": 614, "get_field_colormap": 614, "446": 614, "444": 614, "example_cfradial_rhi": 614, "441": 614, "417": 614, "struct": 614, "410": 614, "383": 614, "unicod": 614, "382": 614, "gatefit": 614, "372": 614, "465": 614, "refactor": 614, "463": 614, "decor": 614, "416": 614, "392": 614, "radxcovert": 614, "clarifi": 614, "475": 614, "406": 614, "add_field_lik": [614, 629], "397": 614, "391": 614, "376": 614, "370": 614, "corner_to_point": 614, "473": 614, "466": 614, "456": 614, "outstand": 614, "412": 614, "413": 614, "454": 614, "453": 614, "449": 614, "438": 614, "437": 614, "430": 614, "426": 614, "miniconda": [614, 615, 669, 680], "reactiv": 614, "422": 614, "plot_map_one_radar_to_grid": [614, 631, 633, 678], "420": [614, 671], "419": 614, "408": 614, "resilli": 614, "403": 614, "write_mdv_grid": 614, "402": 614, "401": 614, "399": 614, "395": [614, 651, 652, 678], "documen": 614, "add_2d_latlon_axi": 614, "394": 614, "378": 614, "acess": 614, "377": 614, "373": 614, "deeplycloudi": 614, "358": [614, 615, 680], "edge_netcdf": 614, "read_edge_netcdf": 614, "357": [614, 615, 680], "dealias_fourdd": 614, "348": 614, "346": 614, "326": 614, "308": 614, "361": 614, "refl_filter_flag": 614, "map_gate_to_grid": 614, "334": 614, "region_dealia": 614, "327": 614, "libm": 614, "posix": 614, "319": 614, "unnecessari": 614, "inmemoryfil": 614, "365": 614, "359": [614, 615, 680], "354": 614, "_rsl_interfac": 614, "342": 614, "binstar": 614, "337": 614, "320": 614, "317": 614, "362": 614, "plot_grid_three_panel": 614, "353": 614, "confus": 614, "363": 614, "340": 614, "externalis": 614, "339": 614, "333": 614, "332": 614, "47": [614, 661], "324": 614, "323": 614, "271": 614, "binar": 614, "266": 614, "313": 614, "312": 614, "290": 614, "280": 614, "273": 614, "272": 614, "261": 614, "256": [614, 635, 659], "dealias_phase_unwrap": 614, "radarmapdispl": 614, "249": 614, "discontin": 614, "314": 614, "288": 614, "fault": 614, "276": 614, "dealias_unwrap_phas": 614, "275": 614, "corrupt": 614, "269": 614, "283": 614, "inconsist": 614, "274": 614, "254": [614, 658], "fallback": 614, "245": 614, "316": 614, "ngates_vart": 614, "310": 614, "py3": [614, 682], "nexrad_level2": 614, "nexrad_level3": 614, "309": 614, "1byte": 614, "datatyp": 614, "weathergod": 614, "293": 614, "292": [614, 622], "289": 614, "291": 614, "138": 614, "284": 614, "alter": 614, "267": 614, "latlon": 614, "264": 614, "262": 614, "260": 614, "259": 614, "258": 614, "241": [614, 626, 631], "rebuild": 614, "237": 614, "scientif": [615, 669, 680], "e25": [615, 669, 680], "publish": [615, 680], "easiest": [615, 669, 680], "1st": [615, 669, 680], "Then": [615, 617, 669, 679, 680], "termin": [615, 669, 680, 682], "prompt": [615, 669, 680], "mamba": [615, 680], "openradar": [615, 680], "short": [615, 617, 680], "cours": [615, 629, 680], "ev": [615, 680], "pyart_short_cours": [615, 680], "youtub": [615, 680], "watch": [615, 680], "diip": [615, 680], "q3bkzw": [615, 680], "book": [615, 680], "rule": [615, 680], "pep": [615, 680], "0008": [615, 680], "afterward": [615, 680], "neccessari": [615, 680], "brief": [615, 616, 680], "parti": [615, 680], "explain": [615, 680], "_inverse_dist_squar": [615, 680], "_average1d": [615, 680], "seen": [615, 680], "explan": [615, 616, 680], "privat": [615, 680], "rerun": [615, 680], "test_vad": [615, 680], "test_radar": [615, 671, 680], "make_target_radar": [615, 680], "1000": [615, 632, 640, 646, 647, 654, 658, 675, 680], "ones_lik": [615, 680], "z_start": [615, 680], "z_end": [615, 680], "z_count": [615, 680], "vad_height": [615, 680], "vad_spe": [615, 680], "98665725": [615, 680], "94020686": [615, 680], "88107152": [615, 680], "81939374": [615, 680], "75851962": [615, 680], "vad_direct": [615, 680], "84659496": [615, 680], "30240553": [615, 680], "58658589": [615, 680], "81073051": [615, 680], "01353486": [615, 680], "01335138": [615, 680], "06014712": [615, 680], "12039762": [615, 680], "18410404": [615, 680], "24791911": [615, 680], "98663937": [615, 680], "9398407": [615, 680], "87958641": [615, 680], "81587601": [615, 680], "75205693": [615, 680], "assert_almost_equ": [615, 680], "pyarg": [615, 680], "test_cfradi": [615, 680], "cd": [615, 680], "fork": [615, 617, 680], "cartopy_map": [615, 680], "branch_nam": [615, 680], "task": [615, 623, 664, 680], "mind": [615, 629, 680], "simpli": [615, 657, 665, 673, 675, 679, 680, 682], "acronym": [615, 680], "finish": [615, 680, 682], "quotat": [615, 680], "hit": [615, 680], "depth": [615, 669, 677, 680], "acronymn": [615, 680], "gitwash": [615, 680], "development_workflow": [615, 680], "whitespac": [615, 680], "usual": [615, 626, 680], "vim": [615, 680], "fetch": [615, 630, 654, 658, 659, 660, 661, 680], "ff": [615, 680], "sit": [615, 680], "guidanc": [615, 680], "anyth": 617, "creator": 617, "draft": 617, "shortlog": 617, "uplod": 617, "feedstock": 617, "clone": [617, 669, 679], "meta": 617, "yaml": 617, "sha256": 617, "rerend": 617, "smithi": 617, "bot": 617, "awar": 617, "semant": 618, "earlier": 618, "ceas": 618, "Such": 618, "proceed": 618, "futurewarn": 618, "runner": [620, 626], "micromamba": [620, 626], "_core": 620, "870": 620, "__doc__": [620, 621, 625, 626, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 657, 658], "sgpcsaprsurcmaci7": [620, 672], "20110520": [620, 672], "095101": [620, 672], "pop": 620, "specific_attenu": [620, 655, 659, 671, 676], "corrected_reflectivity_horizont": [620, 632, 636, 655, 665, 667, 671], "calculate_attenu": 620, "131": [620, 657, 658], "132": [620, 657, 658], "ax3": [620, 621, 650, 654, 657, 658, 660], "133": [620, 655, 657, 658], "737": [620, 622, 678], "plot_attenu": [620, 622, 678], "ial": 621, "095636": [621, 673], "sonde_fil": 621, "sgpinterpolatedsondec1": 621, "c1": [621, 660, 676], "20110510": 621, "000000": 621, "cdf": [621, 654, 658], "dt": 621, "read_arm_sonde_vap": 621, "exclude_transit": [621, 631, 632, 636, 656], "exclude_invalid": [621, 654], "exclude_outsid": [621, 654], "dealias_data": 621, "sixth": 621, "221": [621, 639], "223": [621, 639], "ax4": 621, "224": [621, 639], "plot_dealia": [621, 622, 678], "mem": [622, 627, 633, 652, 662, 663, 668, 678], "examples_python": 623, "examples_jupyt": 623, "grover": [625, 629, 635, 636, 641, 649, 655, 656, 665, 666, 667], "filepath": [625, 626], "organ": 625, "radarsit": [625, 626], "_v06": 625, "khgx": 625, "aws_nexrad_level2_fil": [625, 626], "khgx20220322_120125_v06": 625, "relect": 625, "z_": [625, 629, 637, 660], "v_": 625, "noq": 625, "level3": 625, "aws_nexrad_level3_velocity_fil": 625, "hgx_n0u_2022_03_22_12_01_25": 625, "aws_nexrad_level3_reflectivity_fil": 625, "hgx_n0q_2022_03_22_12_01_25": 625, "read_nexrad_level3": 625, "radar_level3_veloc": 625, "radar_level3_reflect": 625, "reflectivity_displai": 625, "velocity_displai": 625, "plot_nexrad_data_aw": [625, 627, 678], "zachari": 626, "sherman": 626, "zsherman": [626, 682], "tendenc": 626, "gz": 626, "handford": 626, "ca": 626, "khnx": 626, "0203": 626, "v06": 626, "khnx20060724_020338": 626, "nexrad_arch": 626, "231": [626, 658], "clearli": 626, "lucki": 626, "31417": 626, "63111": 626, "plote": [626, 643], "central_latitud": [626, 643, 657, 658, 672], "central_longitud": [626, 643, 657, 658, 672], "downloadwarn": 626, "naturalearth": 626, "amazonaw": 626, "10m_physic": 626, "ne_10m_coastlin": 626, "10m_cultur": 626, "ne_10m_admin_1_states_provinces_lin": 626, "plot_older_nexrad_data_aw": [626, 627, 678], "xsapr": [629, 632, 636], "xsapr_sw_fil": [629, 632, 636], "swx_20120520_0641": [629, 632, 635, 636, 637, 641, 651, 655, 656, 657, 658, 665, 666, 667], "xsapr_se_fil": [629, 632, 636], "sex_20120520_0641": [629, 632, 636], "radar_sw": [629, 632, 636], "radar_s": [629, 632, 636], "southwestern": 629, "gmapper": 629, "radar_sw_mapped_to_radar_s": 629, "disp1": 629, "98": [629, 655, 661, 676], "97": [629, 632, 636, 638, 650, 655, 657, 658, 671], "disp2": 629, "remap": 629, "eyebal": 629, "fortun": 629, "reflectivity_se_radar": 629, "reflectivity_sw_radar": 629, "reflectivity_differ": 629, "reflectivity_bia": 629, "southwest": 629, "xspar": 629, "southeast": 629, "neccessarili": 629, "incl_gat": 629, "refl_s": 629, "refl_sw": 629, "values_without_mask": 629, "hist": [629, 665, 673], "histogram2d": 629, "masked_wher": [629, 654, 658, 676], "log_": 629, "771": [629, 633, 678], "plot_compare_two_radars_gatemapp": [629, 633, 678], "solut": 630, "arguabl": 630, "overlook": 630, "neglig": 630, "ze": 630, "2nd": 630, "4th": 630, "purpl": 630, "truncat": 630, "ok": 630, "israel": 630, "silber": 630, "open_radar_data": [630, 654, 658, 659, 660, 661], "file_nam": 630, "example_plot_ppi_single_sweep": 630, "processed_field": 630, "reflectivity_at_cor": 630, "radar_obj": 630, "nnow": 630, "ax_ind": 630, "sweep_obj": 630, "fig2": 630, "1601": 630, "40000": [630, 632, 636, 643, 675], "set_titl": [630, 635, 654, 657, 658], "nuse": 630, "918": [630, 633, 678], "plot_grid_single_sweep_ppi": [630, 633, 678], "123000": 631, "xsarp": [632, 644, 645], "gatefilter_s": [632, 636], "exclude_abov": [632, 636, 665, 673], "gatefilter_sw": [632, 636], "201": [632, 657, 658, 675], "57861": [632, 636], "363611": [632, 636], "plot_map_two_radars_to_grid": [632, 633, 678], "helper": 635, "vstack": 635, "plot_color_gradi": 635, "cmap_categori": 635, "cmap_list": 635, "figh": 635, "99": 635, "cmap_nam": 635, "pyart_": 635, "va": 635, "transax": 635, "spine": 635, "set_axis_off": 635, "perceptu": [635, 638], "diverg": 635, "meaning": 635, "terrain": 635, "spectral_r": 635, "rememb": 635, "front": 635, "006": [635, 652, 678], "plot_choose_a_colormap": [635, 652, 678], "181": 636, "blue": [636, 646, 647], "plot_cross_sect": [636, 652, 678], "129": [636, 652, 678], "colobar": 637, "joe": 637, "brien": 637, "obrienj": 637, "perfect": 637, "coord": 637, "gca": 637, "set_major_loc": 637, "nullloc": 637, "axsb": 637, "ppi_map": 637, "set_tick": [637, 660], "068": [637, 652, 678], "plot_modify_colorbar": [637, 652, 678], "promin": [638, 658], "deemphas": 638, "depict": [638, 654], "ultim": 638, "misinterpret": 638, "lmtomkin": [638, 654, 657, 658], "ncsu": [638, 654, 657, 658], "nexrad_fil": [638, 657, 658], "kbgm": 638, "kbgm20200207_132642_v06": 638, "image_mute_radar": [638, 657, 658], "magma_cmap": 638, "magma_r": [638, 654, 657, 658], "grays_cmap": [638, 658], "gray_r": [638, 658], "nonmuted_cmap": 638, "linearsegmentedcolormap": [638, 657, 658], "from_list": [638, 657, 658], "muted_cmap": [638, 658], "nonmuted_reflect": [638, 657], "muted_reflect": [638, 658], "set_aspect": [638, 654, 657, 658, 659], "plot_nexrad_image_muted_reflect": [638, 652, 678], "katx20130717_195021_v06": [639, 677], "517": [639, 652, 678], "plot_nexrad_multiple_mo": [639, 652, 678], "level2_katx_20130717_1950": 640, "ar2v": 640, "plot_nexrad_reflect": [640, 652, 678], "plot_cross_hair": 641, "381": [641, 652, 678], "plot_ppi_cfradi": [641, 652, 678], "182": [642, 652, 678], "jason": [643, 650], "hemeding": [643, 650], "nsaxsaprppic1": 643, "20140201": 643, "184802": 643, "157": 643, "156": 643, "71": 643, "158": 643, "72": 643, "40km": 643, "plot_line_xi": 643, "20000": [643, 675], "200000": [643, 657, 658], "plot_point": 643, "235": [643, 652, 678], "plot_ppi_with_r": [643, 652, 678], "instrument_nam": [644, 645, 677], "agl": 644, "fac": 644, "nplot": [644, 645, 649], "snum": 644, "hsrhi": [644, 645], "3f": [644, 645], "time_start": 644, "num2dat": 644, "only_use_cftime_datetim": 644, "only_use_python_datetim": 644, "figure_titl": 644, "isoformat": 644, "plot_rhi_cfradi": [644, 652, 678], "differnenti": 646, "cori": [646, 647], "weber": [646, 647], "cweber": [646, 647], "220629": 646, "matplolib": 646, "visabl": 646, "flow": 646, "paramt": 646, "compens": 646, "00015": 646, "veri": [646, 654, 657, 658], "moir": 646, "001": 646, "get_start": [646, 647], "get_end": [646, 647], "blur": 646, "nice": [646, 679], "arbirarli": 646, "gaussian_filt": [646, 647], "ang": [646, 647], "levels_rain": 646, "levels_ic": 646, "contours_ic": 646, "contours_rain": 646, "fmt": [646, 647], "0000": [646, 647], "099": [646, 652, 678], "plot_rhi_contours_differential_reflect": [646, 652, 678], "spyi": 647, "034142": 647, "ramp": 647, "pyart_budrd18": 647, "coutour": 647, "dot": 647, "major": 647, "axhlin": [647, 654], "axvlin": 647, "00b4ff": 647, "ff6800": 647, "set_ylabel": [647, 654, 660, 661], "cp": 647, "527": [647, 652, 678], "plot_rhi_data_overlai": [647, 652, 678], "110041": 648, "220": [648, 652, 678], "plot_rhi_mdv": [648, 652, 678], "fields_to_plot": 649, "plot_num": 649, "u00b0": 649, "plot_rhi_two_panel": [649, 652, 678], "20110520100000_nexrad_grid": 650, "read_grid": [650, 654, 658], "plot_crosshair": 650, "plot_longitude_slic": 650, "plot_latitude_slic": [650, 675], "059": [650, 652, 678], "plot_three_panel_gridmapdisplai": [650, 652, 678], "225": 651, "xsect": 651, "plot_xsect": [651, 652, 678], "066": 652, "essenti": 654, "distinguish": 654, "insuffici": 654, "tenth": 654, "aggress": 654, "noisi": 654, "ref_data": 654, "ref_data_mask": 654, "masked_outsid": 654, "create_cfad": 654, "freq_norm_mask": 654, "masked_less_equ": [654, 658], "cfad_pm": 654, "plasma": 654, "set_xlabel": [654, 661], "8km": 654, "widen": 654, "freq_norm2": 654, "freq_norm0": 654, "freq_norm2_mask": 654, "freq_norm0_mask": 654, "chart": 654, "14km": 654, "12km": 654, "swath": 654, "velocity_dealia": 654, "rdbu_r": 654, "bimod": 654, "reproduc": 654, "2c": 654, "demonstr": [654, 669], "ddop": 654, "910815": 654, "213931": 654, "altitude_data": 654, "field_data": 654, "maxdz": [654, 658], "vvel_data": 654, "w_wind": 654, "vvel_mask": 654, "masked_invalid": [654, 657], "field_data_mask": 654, "cont": 654, "plot_cfad": [654, 662, 678], "maxwel": [655, 656], "site_lon": 655, "73": 655, "site_lat": 655, "latitdu": 655, "pathcollect": 655, "0x7f3b64886150": 655, "get_field_loc": 655, "2kb": 655, "176b": 655, "350": 655, "818e": 655, "recalculated_diff_phas": [655, 671], "2778": 655, "unf_dp_phase_shift": [655, 671], "88b": 655, "145": [655, 657, 658, 662, 678], "144": [655, 658], "diff_reflect": [655, 671], "8b": 655, "distance_from_radar": 655, "233": 655, "545": 655, "latitude_of_loc": 655, "longitude_of_loc": 655, "line2d": 655, "0x7f3b64cc5040": 655, "164": [655, 662, 678], "plot_column_subset": [655, 662, 678], "compz": 656, "composite_reflect": 656, "composite_displai": 656, "plot_composite_reflect": [656, 662, 678], "classifc": 657, "summer": [657, 658], "ian": [657, 658], "footprint": 657, "yield": 657, "smoother": 657, "curv": 657, "plot_convstrat_schem": 657, "pick": 657, "radii": 657, "dilat": 657, "conv_strat_yut": 657, "convsf_mask": 657, "masked_equ": [657, 658], "feature_detect": [657, 658], "convsf": [657, 658], "magma_r_cmap": [657, 658], "ref_cmap": [657, 658], "albersequalarea": [657, 658], "convsf_und": 657, "convsf_ov": 657, "uncertainti": [657, 658], "underest": [657, 658], "feature_und": [657, 658], "overest": [657, 658], "feature_ov": [657, 658], "ktbw": [657, 658], "ktbw20220928_190142_v06": [657, 658], "rasumussen": [657, 658], "2003": [657, 658], "reflecit": 657, "kokx": [657, 658], "kokx20210207_161413_v06": [657, 658], "nonmuted_ref": 657, "nonmuted_ref_linear": 657, "mm6": 657, "m3": 657, "snow_rat": [657, 658], "snow_rate_dict": 657, "40500": 657, "034": [657, 658], "ccotd": [657, 658], "rasmussen": [657, 658], "dixon": [657, 658, 669], "vasiloff": [657, 658], "hage": [657, 658], "knight": [657, 658], "vivekanandan": [657, 658], "xu": [657, 658], "nowcast": [657, 658], "accumul": [657, 658], "042": [657, 658], "3c0020": [657, 658], "snuart": [657, 658], "plot_convective_stratiform": [657, 662, 678], "heavili": 658, "customiz": 658, "manuscript": 658, "feature_mask": 658, "19990811": 658, "221202": 658, "convsf_cmap": 658, "140": 658, "253": 658, "csb": 658, "csb_mask": 658, "csl": 658, "convsf_lo": 658, "csl_mask": 658, "csh": 658, "convsf_hi": 658, "csh_mask": 658, "rpm": 658, "csbpm": 658, "set_yticklabel": [658, 660], "lo": 658, "cslpm": 658, "cshpm": 658, "csb_lt": 658, "csb_lt_mask": 658, "csu_lt": 658, "csu_lt_mask": 658, "cso_lt": 658, "cso_lt_mask": 658, "csupm": 658, "csopm": 658, "ztor": 658, "ref_field_ov": 658, "ref_field_und": 658, "2db": 658, "_overest": 658, "_underest": 658, "reflectivity_ov": 658, "reflectivity_und": 658, "snow_rate_ov": 658, "snow_rate_und": 658, "feature_estimate_dict": 658, "bpm": 658, "upm": 658, "opm": 658, "distinct": 658, "scalar_features_mask": 658, "cosine_features_mask": 658, "isol": 658, "faint_featur": 658, "faint_features_mask": 658, "features_faint_strong": 658, "features_faint_strong_mask": 658, "new_dict": 658, "comment_1": 658, "faint_strong_cmap": 658, "faint_strong": 658, "238": 658, "93": 658, "66": 658, "quickli": 658, "quick_image_mut": 658, "muted_ref": 658, "nonmuted_field": 658, "muted_field": 658, "snow_rate_nonmut": 658, "snow_rate_mut": 658, "features_nonmut": 658, "features_mut": 658, "srpm": 658, "srpmm": 658, "csbpmm": 658, "085": [658, 662, 678], "plot_feature_detect": [658, 662, 678], "daniel": [659, 661], "wolfensberg": [659, 661], "mll2217907250u": 659, "003": 659, "preinterpol": 659, "20220628072500_savevol_cosmo_lookup_temp": 659, "nwp_temp": 659, "calculate_attenuation_zphi": 659, "uncorrected_differential_phas": 659, "pia": 659, "pida": 659, "corrected_reflect": [659, 660, 676], "corrected_differential_reflect": [659, 660, 676], "kdp_maesaka": 659, "specific_differential_phas": [659, 676], "hydroclass_semisupervis": [659, 660], "uncorrected_cross_correlation_ratio": 659, "radar_echo_classif": 659, "boundarynorm": 659, "plot_hydrometeor": [659, 662, 678], "gucxprecipradarcmacppis2": 660, "025840": 660, "pyart_carbone42": 660, "corrected_specific_diff_phas": [660, 676], "hydromet_class": 660, "filtered_corrected_specific_diff_phas": [660, 676], "sounding_temperatur": [660, 676], "hydro_classif": 660, "2e9": 660, "pipelin": 660, "hid_color": 660, "lightblu": 660, "mediumblu": 660, "darkorang": 660, "lightpink": 660, "darkgrai": 660, "lime": 660, "yellow": 660, "cmaphid": 660, "listedcolormap": 660, "cmapmeth": 660, "cmapmeth_trop": 660, "adjust_fhc_colorbar_for_pyart": 660, "hd": 660, "adjust_meth_colorbar_for_pyart": 660, "zrain": 660, "z_all": 660, "z_c": 660, "two_panel_plot": 660, "var1": 660, "vmin1": 660, "vmax1": 660, "cmap1": 660, "rdylbu_r": 660, "units1": 660, "var2": 660, "vmin2": 660, "vmax2": 660, "cmap2": 660, "units2": 660, "return_flag": 660, "lim": 660, "075": [660, 662, 678], "plot_hydrometeor_class_x_band": [660, 662, 678], "2682": 661, "5470354519784": 661, "447328651323915": 661, "5273": 661, "055615736172": 661, "7533807586878538": 661, "7815": 661, "51210340485": 661, "341798234730959": 661, "10403": 661, "798749463633": 661, "977668723091483": 661, "14259": 661, "735154148191": 661, "905980195850134": 661, "18533": 661, "70608163625": 661, "262251073494554": 661, "22800": [661, 671], "97541932203": 661, "613871516659856": 661, "27060": [661, 671], "25919727981": 661, "959520922973752": 661, "31310": 661, "269606200978": 661, "29787217825651": 661, "35549": 661, "73140401952": 661, "62760841473937": 661, "39777": 661, "36820153147": 661, "94740904122591": 661, "43991": 661, "90973467566": 661, "25595719181001": 661, "50263": 661, "42219179496": 661, "671291364356875": 661, "58621": 661, "52730140835": 661, "22838316485286": 661, "71003": 661, "14627731778": 661, "68": 661, "92013945430517": 661, "87118": 661, "5253265705": 661, "4666496720165": 661, "106741": 661, "22752280161": 661, "65626102685928": 661, "125477": 661, "00644101389": 661, "124": 661, "97631322406232": 661, "143293": 661, "15816160105": 661, "38701202347875": 661, "160000": 661, "28993562795": 661, "68618156574667": 661, "mla2119412050u": 661, "zlevel": 661, "5000": [661, 675], "u_allsweep": 661, "v_allsweep": 661, "idx": 661, "radar_1sweep": 661, "vad_brown": 661, "u_avg": 661, "nanmean": 661, "v_avg": 661, "sharei": 661, "plot_vad": [661, 662, 678], "067": 662, "000": 663, "xd": [665, 666, 667], "open_cfradial1_datatre": [665, 666, 667], "to_radar": [665, 666, 667], "sweep_0": 665, "vel_textur": [665, 673], "velocity_textur": [665, 673, 676], "At": [665, 673], "velocity_dealias": [665, 673], "788": [665, 668, 678], "plot_dealias_xradar": [665, 668, 678], "101": 666, "10_000": 666, "50_000": 666, "plot_grid_xradar": [666, 668, 678], "plot_xradar": [667, 668, 678], "384": 668, "conceptu": 669, "projectpythia": 669, "understand": 669, "maik": 669, "heistermann": 669, "bam": 669, "kellei": 669, "peura": 669, "pfaff": 669, "wolff": 669, "emerg": 669, "bull": 669, "amer": 669, "soc": 669, "117": 669, "128": 669, "00240": 669, "sophist": 669, "tutori": 669, "materi": 669, "erad": 669, "asr": 669, "asm": 669, "Or": 669, "pyart_env": [669, 672, 675, 682], "wish": 669, "unreleas": 669, "charg": 669, "resourc": [669, 679], "lassen": 669, "radtec": 669, "rsl_path": [669, 679], "usr": 669, "wrapper": 669, "fastest": 669, "cbc": 669, "glpk": 669, "coincbc": [669, 679, 682], "coin_install_dir": [669, 679, 682], "ask": [669, 682], "hypothet": 671, "dict_kei": [671, 676], "rain_rate_a": [671, 676], "volume_numb": 671, "platform_typ": 671, "instrument_typ": 671, "primary_axi": 671, "make_empty_ppi_radar": 671, "59416667": 671, "isn": 671, "240": 671, "660": 671, "720": 671, "780": 671, "960": 671, "1260": 671, "1560": 671, "1620": 671, "1680": 671, "1740": 671, "1860": 671, "1920": 671, "1980": 671, "2040": 671, "2100": 671, "2160": 671, "2220": 671, "2280": 671, "2340": 671, "2400": 671, "2460": 671, "2520": 671, "2580": 671, "2640": 671, "2700": 671, "2760": 671, "2820": 671, "2880": 671, "2940": 671, "3060": 671, "3120": 671, "3180": 671, "3240": 671, "3300": 671, "3360": 671, "3420": 671, "3480": 671, "3540": 671, "3600": 671, "3660": 671, "3720": 671, "3780": 671, "3840": 671, "3900": 671, "3960": 671, "4020": 671, "4080": 671, "4140": 671, "4200": 671, "4260": 671, "4320": 671, "4380": 671, "4440": 671, "4500": 671, "4560": 671, "4620": 671, "4680": 671, "4740": 671, "4800": 671, "4860": 671, "4920": 671, "4980": 671, "5040": 671, "5100": 671, "5160": 671, "5220": 671, "5280": 671, "5340": 671, "5400": 671, "5460": 671, "5520": 671, "5580": 671, "5640": 671, "5700": 671, "5760": 671, "5820": 671, "5880": 671, "5940": 671, "6000": [671, 675], "6060": 671, "6120": 671, "6180": 671, "6240": 671, "6300": 671, "6360": 671, "6420": 671, "6480": 671, "6540": 671, "6600": 671, "6660": 671, "6720": 671, "6780": 671, "6840": 671, "6900": 671, "6960": 671, "7020": 671, "7080": 671, "7140": 671, "7200": [671, 677], "7260": 671, "7320": 671, "7380": 671, "7440": 671, "7560": 671, "7620": 671, "7680": 671, "7740": 671, "7800": 671, "7860": 671, "7920": 671, "7980": 671, "8040": 671, "8100": 671, "8160": 671, "8220": 671, "8280": 671, "8340": 671, "8400": 671, "8460": 671, "8520": 671, "8580": 671, "8640": 671, "8700": 671, "8760": 671, "8820": 671, "8880": 671, "8940": 671, "9000": [671, 675], "9060": 671, "9120": 671, "9180": 671, "9240": 671, "9300": 671, "9360": 671, "9420": 671, "9480": 671, "9540": 671, "9600": 671, "9660": 671, "9720": 671, "9780": 671, "9840": 671, "9900": 671, "9960": 671, "10020": 671, "10080": 671, "10140": 671, "10200": 671, "10260": 671, "10320": 671, "10380": 671, "10440": 671, "10500": 671, "10560": 671, "10620": 671, "10680": 671, "10740": 671, "10800": 671, "10860": 671, "10920": 671, "10980": 671, "11040": 671, "11100": 671, "11160": 671, "11220": 671, "11280": 671, "11340": 671, "11400": 671, "11460": 671, "11520": 671, "11580": 671, "11640": 671, "11700": 671, "11760": 671, "11820": 671, "11880": 671, "11940": 671, "12060": 671, "12120": 671, "12180": 671, "12240": 671, "12300": 671, "12360": 671, "12420": 671, "12480": 671, "12540": 671, "12600": 671, "12660": 671, "12720": 671, "12780": 671, "12840": 671, "12900": 671, "12960": 671, "13020": 671, "13080": 671, "13140": 671, "13200": 671, "13260": 671, "13320": 671, "13380": 671, "13440": 671, "13500": 671, "13560": 671, "13620": 671, "13680": 671, "13740": 671, "13800": 671, "13860": 671, "13920": 671, "13980": 671, "14040": 671, "14100": 671, "14160": 671, "14220": 671, "14280": 671, "14340": 671, "14400": 671, "14460": 671, "14520": 671, "14580": 671, "14640": 671, "14700": 671, "14760": 671, "14820": 671, "14880": 671, "14940": 671, "15060": 671, "15120": 671, "15180": 671, "15240": 671, "15300": 671, "15360": 671, "15420": 671, "15480": 671, "15540": 671, "15600": 671, "15660": 671, "15720": 671, "15780": 671, "15840": 671, "15900": 671, "15960": 671, "16020": 671, "16080": 671, "16140": 671, "16200": 671, "16260": 671, "16320": 671, "16380": 671, "16440": 671, "16500": 671, "16560": 671, "16620": 671, "16680": 671, "16740": 671, "16800": 671, "16860": 671, "16920": 671, "16980": 671, "17040": 671, "17100": 671, "17160": 671, "17220": 671, "17280": 671, "17340": 671, "17400": 671, "17460": 671, "17520": 671, "17580": 671, "17640": 671, "17700": 671, "17760": 671, "17820": 671, "17880": 671, "17940": 671, "18000": [671, 675], "18060": 671, "18120": 671, "18180": 671, "18240": 671, "18300": 671, "18360": 671, "18420": 671, "18480": 671, "18540": 671, "18600": 671, "18660": 671, "18720": 671, "18780": 671, "18840": 671, "18900": 671, "18960": 671, "19020": 671, "19080": 671, "19140": 671, "19200": 671, "19260": 671, "19320": 671, "19380": 671, "19440": 671, "19500": 671, "19560": 671, "19620": 671, "19680": 671, "19740": 671, "19800": 671, "19860": 671, "19920": 671, "19980": 671, "20040": 671, "20100": 671, "20160": 671, "20220": 671, "20280": 671, "20340": 671, "20400": 671, "20460": 671, "20520": 671, "20580": 671, "20640": 671, "20700": 671, "20760": 671, "20820": 671, "20880": 671, "20940": 671, "21000": [671, 675], "21060": 671, "21120": 671, "21180": 671, "21240": 671, "21300": 671, "21360": 671, "21420": 671, "21480": 671, "21540": 671, "21600": 671, "21660": 671, "21720": 671, "21780": 671, "21840": 671, "21900": 671, "21960": 671, "22020": 671, "22080": 671, "22140": 671, "22200": 671, "22260": 671, "22320": 671, "22380": 671, "22440": 671, "22500": 671, "22560": 671, "22620": 671, "22680": 671, "22740": 671, "22860": 671, "22920": 671, "22980": 671, "23040": 671, "23100": 671, "23160": 671, "23220": 671, "23280": 671, "23340": 671, "23400": 671, "23460": 671, "23520": 671, "23580": 671, "23640": 671, "23700": 671, "23760": 671, "23820": 671, "23880": 671, "23940": 671, "24000": [671, 675], "24060": 671, "24120": 671, "24180": 671, "24240": 671, "24300": 671, "24360": 671, "24420": 671, "24480": 671, "24540": 671, "24600": 671, "24660": 671, "24720": 671, "24780": 671, "24840": 671, "24900": 671, "24960": 671, "25020": 671, "25080": 671, "25140": 671, "25200": 671, "25260": 671, "25320": 671, "25380": 671, "25440": 671, "25500": 671, "25560": 671, "25620": 671, "25680": 671, "25740": 671, "25800": 671, "25860": 671, "25920": 671, "25980": 671, "26040": 671, "26100": 671, "26160": 671, "26220": 671, "26280": 671, "26340": 671, "26400": 671, "26460": 671, "26520": 671, "26580": 671, "26640": 671, "26700": 671, "26760": 671, "26820": 671, "26880": 671, "26940": 671, "27000": [671, 675], "27120": 671, "27180": 671, "27240": 671, "27300": 671, "27360": 671, "27420": 671, "27480": 671, "27540": 671, "27600": 671, "27660": 671, "27720": 671, "27780": 671, "27840": 671, "27900": 671, "27960": 671, "28020": 671, "28080": 671, "28140": 671, "28200": 671, "28260": 671, "28320": 671, "28380": 671, "28440": 671, "28500": 671, "28560": 671, "28620": 671, "28680": 671, "28740": 671, "28800": 671, "28860": 671, "28920": 671, "28980": 671, "29040": 671, "29100": 671, "29160": 671, "29220": 671, "29280": 671, "29340": 671, "29400": 671, "29460": 671, "29520": 671, "29580": 671, "29640": 671, "29700": 671, "29760": 671, "29820": 671, "29880": 671, "29940": 671, "30000": [671, 675], "30060": 671, "30120": 671, "30180": 671, "30240": 671, "30300": 671, "30360": 671, "30420": 671, "30480": 671, "30540": 671, "30600": 671, "30660": 671, "30720": 671, "30780": 671, "30840": 671, "30900": 671, "30960": 671, "31020": 671, "31080": 671, "31140": 671, "31200": 671, "31260": 671, "31320": 671, "31380": 671, "31440": 671, "31500": 671, "31560": 671, "31620": 671, "31680": 671, "31740": 671, "31800": 671, "31860": 671, "31920": 671, "31980": 671, "32040": 671, "32100": 671, "32160": 671, "32220": 671, "32280": 671, "32340": 671, "32400": 671, "32460": 671, "32520": 671, "32580": 671, "32640": 671, "32700": 671, "32760": 671, "32820": 671, "32880": 671, "32940": 671, "33000": [671, 675], "33060": 671, "33120": 671, "33180": 671, "33240": 671, "33300": 671, "33360": 671, "33420": 671, "33480": 671, "33540": 671, "33600": 671, "33660": 671, "33720": 671, "33780": 671, "33840": 671, "33900": 671, "33960": 671, "34020": 671, "34080": 671, "34140": 671, "34200": 671, "34260": 671, "34320": 671, "34380": 671, "34440": 671, "34500": 671, "34560": 671, "34620": 671, "34680": 671, "34740": 671, "34800": 671, "34860": 671, "34920": 671, "34980": 671, "35040": 671, "35100": 671, "35160": 671, "35220": 671, "35280": 671, "35340": 671, "35400": 671, "35460": 671, "35520": 671, "35580": 671, "35640": 671, "35700": 671, "35760": 671, "35820": 671, "35880": 671, "35940": 671, "36000": [671, 675], "36060": 671, "36120": 671, "36180": 671, "36240": 671, "36300": 671, "36360": 671, "36420": 671, "36480": 671, "36540": 671, "36600": 671, "36660": 671, "36720": 671, "36780": 671, "36840": 671, "36900": 671, "36960": 671, "37020": 671, "37080": 671, "37140": 671, "37200": 671, "37260": 671, "37320": 671, "37380": 671, "37440": 671, "37500": 671, "37560": 671, "37620": 671, "37680": 671, "37740": 671, "37800": 671, "37860": 671, "37920": 671, "37980": 671, "38040": 671, "38100": 671, "38160": 671, "38220": 671, "38280": 671, "38340": 671, "38400": 671, "38460": 671, "38520": 671, "38580": 671, "38640": 671, "38700": 671, "38760": 671, "38820": 671, "38880": 671, "38940": 671, "39000": [671, 675], "39060": 671, "39120": 671, "39180": 671, "39240": 671, "39300": 671, "39360": 671, "39420": 671, "39480": 671, "39540": 671, "39600": 671, "39660": 671, "39720": 671, "39780": 671, "39840": 671, "39900": 671, "39960": 671, "59416776": 671, "59416886": 671, "59489769": 671, "59489879": 671, "5948999": 671, "59415662": 671, "59414657": 671, "5874659": 671, "58745576": 671, "58744563": 671, "59414621": 671, "59412575": 671, "5805231": 671, "58050246": 671, "58048182": 671, "59419881": 671, "59423095": 671, "61560159": 671, "61563401": 671, "61566644": 671, "59418877": 671, "59421087": 671, "6089062": 671, "6089285": 671, "60895079": 671, "59417836": 671, "59419005": 671, "60196382": 671, "60197561": 671, "60198741": 671, "get_metadata": 671, "ref_dict": 671, "reflecitivity_horizont": 671, "21875": 671, "34375": 671, "0078125": 671, "2109375": 671, "1171875": 671, "59375": 671, "421875": 671, "5625": 671, "7109375": 671, "609375": 671, "5078125": 671, "3828125": 671, "6875": 671, "328125": 671, "3203125": 671, "859375": 671, "6484375": 671, "8515625": 671, "9375": [671, 677], "0234375": 671, "6328125": 671, "2890625": 671, "546875": 671, "578125": 671, "6796875": 671, "ref_gt_0": 672, "mask_dict": 672, "reflectivity_mask": 672, "coolwarm": 672, "sherm": [672, 675], "782": [672, 675], "matplotlibdeprecationwarn": [672, 675], "position": [672, 675], "829": [672, 675], "write_cfradi": 672, "new_radar": 672, "2pi": 673, "wave": 673, "3pi": 673, "erron": 673, "phenomena": [673, 677], "maximium": 673, "unambi": 673, "preprocess": 673, "thankfulli": [673, 675], "surround": [673, 675], "presenc": 673, "524973": 673, "vleociti": 673, "realist": 673, "characterist": 675, "100000": 675, "gates_to_grid": 675, "99000": 675, "98000": 675, "97000": 675, "96000": 675, "95000": 675, "94000": 675, "93000": 675, "92000": 675, "91000": 675, "90000": 675, "89000": 675, "88000": 675, "87000": 675, "86000": 675, "85000": 675, "84000": 675, "83000": 675, "82000": 675, "81000": 675, "80000": 675, "79000": 675, "78000": 675, "77000": 675, "76000": 675, "75000": 675, "74000": 675, "73000": 675, "72000": 675, "71000": 675, "70000": 675, "69000": 675, "68000": 675, "67000": 675, "66000": 675, "65000": 675, "64000": 675, "63000": 675, "62000": 675, "61000": 675, "59000": 675, "58000": 675, "57000": 675, "56000": 675, "55000": 675, "54000": 675, "53000": 675, "52000": 675, "51000": 675, "49000": 675, "48000": 675, "47000": 675, "46000": 675, "45000": 675, "44000": 675, "43000": 675, "42000": 675, "41000": 675, "38000": 675, "37000": 675, "35000": 675, "34000": 675, "32000": 675, "31000": 675, "29000": 675, "28000": 675, "26000": 675, "23000": 675, "22000": 675, "19000": 675, "16000": 675, "14000": 675, "13000": 675, "8000": 675, "longitudn": 675, "latitudn": 675, "suffer": 675, "artifici": 675, "feather": 675, "grid_bett": 675, "1750": 675, "sgpxsaprcmacsuri5": 676, "20171004": 676, "203018": 676, "total_pow": 676, "xsapr_clutt": 676, "signal_to_noise_ratio": 676, "unfolded_differential_phas": 676, "corrected_differential_phas": 676, "filtered_corrected_differential_phas": 676, "path_integrated_attenu": 676, "specific_differential_attenu": 676, "path_integrated_differential_attenu": 676, "nonhydrometeor": 676, "exclude_equ": 676, "refl_arrai": 676, "reflectivity_w_mask": 676, "iter_slic": [676, 677], "9344453454202706": 676, "620691732853737": 676, "3756584054113996": 676, "597935968662154": 676, "696735014111216": 676, "061894569912447": 676, "721673265240488": 676, "086695918593689": 676, "33930700509078": 676, "599363169483158": 676, "836875745223637": 676, "051601529570966": 676, "22435547210836": 676, "378109469982695": 676, "553820234067336": 676, "648943841665002": 676, "837593740986444": 676, "049614721040282": 676, "331202567459613": 676, "585432697375357": 676, "87002341270722": 676, "993012637722325": 676, "061966001642219": 676, "122799449619672": 676, "861035552720102": 676, "74608994279257": 676, "148801770281325": 676, "70860719727862": 676, "989513966551444": 676, "188644935344827": 676, "89301878240611": 676, "172644371021923": 676, "79879842243138": 676, "912806090219976": 676, "766281467013889": 676, "920522471877334": 676, "898600907318164": 676, "971026055481874": 676, "110503947133682": 676, "094456418731509": 676, "0822160050675675": 676, "036430544969512": 676, "259332430219459": 676, "2438254054588604": 676, "473482666015625": 676, "574283685503023": 676, "866719139946832": 676, "771468742643597": 676, "beam_azimuth_angl": 677, "azimuth_angle_from_true_north": 677, "radial_azimuth_coordin": 677, "beam_elevation_angl": 677, "elevation_angle_from_horizontal_plan": 677, "radial_elevation_coordin": 677, "1832": 677, "log_differential_reflectivity_hv": 677, "875": 677, "differential_phase_hv": 677, "equivalent_reflectivity_factor": 677, "cross_correlation_ratio_hv": 677, "correlation_ratio": 677, "meters_per_second": 677, "doppler_spectrum_width": 677, "radial_velocity_of_scatterers_away_from_instru": 677, "target_fixed_angl": 677, "degrees_north": 677, "degrees_east": 677, "projection_range_coordin": 677, "range_to_measurement_volum": 677, "radial_range_coordin": 677, "spacing_is_const": 677, "meters_to_center_of_first_g": 677, "2125": 677, "meters_between_g": 677, "s20": 677, "unitless": 677, "coplan": 677, "vertical_point": 677, "idl": 677, "azimuth_surveil": 677, "elevation_surveil": 677, "sunscan": 677, "manual_ppi": 677, "manual_rhi": 677, "17t19": 677, "21z": 677, "time_in_seconds_since_volume_start": 677, "calendar": 677, "gregorian": 677, "katx": 677, "original_contain": 677, "vcp_pattern": 677, "7470703": 677, "7196045": 677, "6893921": 677, "511719": 677, "get_slic": 677, "sweep_1": 677, "52734375": 677, "indici": 677, "slice_indic": 677, "9066728410400056": 677, "478547577741713": 677, "587792083929423": 677, "871031288639269": 677, "971692217963673": 677, "830616390843327": 677, "108188248095756": 677, "483419908190385": 677, "88976917057903": 677, "852766685681688": 677, "410455582269897": 677, "66444787446138": 677, "997862391449566": 677, "172098402018502": 677, "489752513534416": 677, "712565619531706": 677, "commonli": 677, "9x": 679, "10x": 679, "11x": 679, "But": 679, "bash": 679, "pythonpath": 679, "pth": 679, "build_ext": 679, "segfault": 679, "Theres": 679, "proper": 679, "reinstal": 679, "remedi": 679, "fno": 679, "protector": 679, "d_fortify_sourc": 679, "cflag": 679, "makefil": 679, "troubl": 679, "define_macro": 679, "macro": 679, "extra_compile_arg": 679, "m32": 679, "extra_link_arg": 679, "m64": 679, "proj_lib": 679, "plai": 679, "xx": 679, "xxx": 679, "mpl_toolkit": 679, "conflict": 682, "exit": 682, "led": 682, "manag": 682, "deactiv": 682, "enviro": 682, "scratch": 682, "spyder": 682, "though": 682, "yourusernam": 682, "youranacondadir": 682, "gitter": 682, "im": 682}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [127, 1, 0, "-", "correct"], [171, 1, 0, "-", "exceptions"], [172, 1, 0, "-", "filters"], [207, 1, 0, "-", "graph"], [364, 1, 0, "-", "io"], [385, 1, 0, "-", "lazydict"], [409, 1, 0, "-", "map"], [422, 1, 0, "-", "retrieve"], [464, 1, 0, "-", "testing"], [567, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_antenna"], [122, 0, 1, "", "cartesian_to_geographic"], [123, 0, 1, "", "cartesian_to_geographic_aeqd"], [124, 0, 1, "", "cartesian_vectors_to_geographic"], [125, 0, 1, "", "geographic_to_cartesian"], [126, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[128, 2, 1, "", "GateFilter"], [158, 0, 1, "", "calculate_attenuation"], [159, 0, 1, "", "calculate_attenuation_philinear"], [160, 0, 1, "", "calculate_attenuation_zphi"], [161, 0, 1, "", "correct_bias"], [162, 0, 1, "", "correct_noise_rhohv"], [163, 0, 1, "", "dealias_fourdd"], [164, 0, 1, "", "dealias_region_based"], [165, 0, 1, "", "dealias_unwrap_phase"], [166, 0, 1, "", "despeckle_field"], [167, 0, 1, "", "find_objects"], [168, 0, 1, "", "moment_based_gate_filter"], [169, 0, 1, "", "phase_proc_lp"], [170, 0, 1, "", "phase_proc_lp_gf"]], "pyart.correct.GateFilter": [[129, 3, 1, "", "copy"], [130, 3, 1, "", "exclude_above"], [131, 3, 1, "", "exclude_above_toa"], [132, 3, 1, "", "exclude_all"], [133, 3, 1, "", "exclude_below"], [134, 3, 1, "", "exclude_equal"], [135, 3, 1, "", "exclude_gates"], [136, 3, 1, "", "exclude_inside"], [137, 3, 1, "", "exclude_invalid"], [138, 3, 1, "", "exclude_last_gates"], [139, 3, 1, "", "exclude_masked"], [140, 3, 1, "", "exclude_none"], [141, 3, 1, "", "exclude_not_equal"], [142, 3, 1, "", "exclude_outside"], [143, 3, 1, "", "exclude_transition"], [144, 4, 1, "", "gate_excluded"], [145, 4, 1, "", "gate_included"], [146, 3, 1, "", "include_above"], [147, 3, 1, "", "include_all"], [148, 3, 1, "", "include_below"], [149, 3, 1, "", "include_equal"], [150, 3, 1, "", "include_gates"], [151, 3, 1, "", "include_inside"], [152, 3, 1, "", "include_none"], [153, 3, 1, "", "include_not_equal"], [154, 3, 1, "", "include_not_masked"], [155, 3, 1, "", "include_not_transition"], [156, 3, 1, "", "include_outside"], [157, 3, 1, "", "include_valid"]], "pyart.filters": [[173, 2, 1, "", "GateFilter"], [203, 0, 1, "", "iso0_based_gate_filter"], [204, 0, 1, "", "moment_and_texture_based_gate_filter"], [205, 0, 1, "", "moment_based_gate_filter"], [206, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[174, 3, 1, "", "copy"], [175, 3, 1, "", "exclude_above"], [176, 3, 1, "", "exclude_above_toa"], [177, 3, 1, "", "exclude_all"], [178, 3, 1, "", "exclude_below"], [179, 3, 1, "", "exclude_equal"], [180, 3, 1, "", "exclude_gates"], [181, 3, 1, "", "exclude_inside"], [182, 3, 1, "", "exclude_invalid"], [183, 3, 1, "", "exclude_last_gates"], [184, 3, 1, "", "exclude_masked"], [185, 3, 1, "", "exclude_none"], [186, 3, 1, "", "exclude_not_equal"], [187, 3, 1, "", "exclude_outside"], [188, 3, 1, "", "exclude_transition"], [189, 4, 1, "", "gate_excluded"], [190, 4, 1, "", "gate_included"], [191, 3, 1, "", "include_above"], [192, 3, 1, "", "include_all"], [193, 3, 1, "", "include_below"], [194, 3, 1, "", "include_equal"], [195, 3, 1, "", "include_gates"], [196, 3, 1, "", "include_inside"], [197, 3, 1, "", "include_none"], [198, 3, 1, "", "include_not_equal"], [199, 3, 1, "", "include_not_masked"], [200, 3, 1, "", "include_not_transition"], [201, 3, 1, "", "include_outside"], [202, 3, 1, "", "include_valid"]], "pyart.graph": [[208, 2, 1, "", "AirborneRadarDisplay"], [238, 2, 1, "", "GridMapDisplay"], [254, 2, 1, "", "GridMapDisplayBasemap"], [268, 2, 1, "", "RadarDisplay"], [297, 2, 1, "", "RadarMapDisplay"], [330, 2, 1, "", "RadarMapDisplayBasemap"], [363, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[209, 3, 1, "", "generate_az_rhi_title"], [210, 3, 1, "", "generate_filename"], [211, 3, 1, "", "generate_ray_title"], [212, 3, 1, "", "generate_title"], [213, 3, 1, "", "generate_vpt_title"], [214, 3, 1, "", "label_xaxis_r"], [215, 3, 1, "", "label_xaxis_rays"], [216, 3, 1, "", "label_xaxis_time"], [217, 3, 1, "", "label_xaxis_x"], [218, 3, 1, "", "label_yaxis_field"], [219, 3, 1, "", "label_yaxis_y"], [220, 3, 1, "", "label_yaxis_z"], [221, 3, 1, "", "plot"], [222, 3, 1, "", "plot_azimuth_to_rhi"], [223, 3, 1, "", "plot_colorbar"], [224, 3, 1, "", "plot_cr_raster"], [225, 3, 1, "", "plot_cross_hair"], [226, 3, 1, "", "plot_grid_lines"], [227, 3, 1, "", "plot_label"], [228, 3, 1, "", "plot_labels"], [229, 3, 1, "", "plot_ppi"], [230, 3, 1, "", "plot_range_ring"], [231, 3, 1, "", "plot_range_rings"], [232, 3, 1, "", "plot_ray"], [233, 3, 1, "", "plot_rhi"], [234, 3, 1, "", "plot_sweep_grid"], [235, 3, 1, "", "plot_vpt"], [236, 3, 1, "", "set_aspect_ratio"], [237, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[239, 3, 1, "", "cartopy_coastlines"], [240, 3, 1, "", "cartopy_political_boundaries"], [241, 3, 1, "", "cartopy_states"], [242, 3, 1, "", "generate_filename"], [243, 3, 1, "", "generate_grid_title"], [244, 3, 1, "", "generate_latitudinal_level_title"], [245, 3, 1, "", "generate_longitudinal_level_title"], [246, 3, 1, "", "plot_colorbar"], [247, 3, 1, "", "plot_cross_section"], [248, 3, 1, "", "plot_crosshairs"], [249, 3, 1, "", "plot_grid"], [250, 3, 1, "", "plot_latitude_slice"], [251, 3, 1, "", "plot_latitudinal_level"], [252, 3, 1, "", "plot_longitude_slice"], [253, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[255, 3, 1, "", "generate_filename"], [256, 3, 1, "", "generate_grid_title"], [257, 3, 1, "", "generate_latitudinal_level_title"], [258, 3, 1, "", "generate_longitudinal_level_title"], [259, 3, 1, "", "get_basemap"], [260, 3, 1, "", "plot_basemap"], [261, 3, 1, "", "plot_colorbar"], [262, 3, 1, "", "plot_crosshairs"], [263, 3, 1, "", "plot_grid"], [264, 3, 1, "", "plot_latitude_slice"], [265, 3, 1, "", "plot_latitudinal_level"], [266, 3, 1, "", "plot_longitude_slice"], [267, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[269, 3, 1, "", "generate_az_rhi_title"], [270, 3, 1, "", "generate_filename"], [271, 3, 1, "", "generate_ray_title"], [272, 3, 1, "", "generate_title"], [273, 3, 1, "", "generate_vpt_title"], [274, 3, 1, "", "label_xaxis_r"], [275, 3, 1, "", "label_xaxis_rays"], [276, 3, 1, "", "label_xaxis_time"], [277, 3, 1, "", "label_xaxis_x"], [278, 3, 1, "", "label_yaxis_field"], [279, 3, 1, "", "label_yaxis_y"], [280, 3, 1, "", "label_yaxis_z"], [281, 3, 1, "", "plot"], [282, 3, 1, "", "plot_azimuth_to_rhi"], [283, 3, 1, "", "plot_colorbar"], [284, 3, 1, "", "plot_cr_raster"], [285, 3, 1, "", "plot_cross_hair"], [286, 3, 1, "", "plot_grid_lines"], [287, 3, 1, "", "plot_label"], [288, 3, 1, "", "plot_labels"], [289, 3, 1, "", "plot_ppi"], [290, 3, 1, "", "plot_range_ring"], [291, 3, 1, "", "plot_range_rings"], [292, 3, 1, "", "plot_ray"], [293, 3, 1, "", "plot_rhi"], [294, 3, 1, "", "plot_vpt"], [295, 3, 1, "", "set_aspect_ratio"], [296, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[298, 3, 1, "", "generate_az_rhi_title"], [299, 3, 1, "", "generate_filename"], [300, 3, 1, "", "generate_ray_title"], [301, 3, 1, "", "generate_title"], [302, 3, 1, "", "generate_vpt_title"], [303, 3, 1, "", "label_xaxis_r"], [304, 3, 1, "", "label_xaxis_rays"], [305, 3, 1, "", "label_xaxis_time"], [306, 3, 1, "", "label_xaxis_x"], [307, 3, 1, "", "label_yaxis_field"], [308, 3, 1, "", "label_yaxis_y"], [309, 3, 1, "", "label_yaxis_z"], [310, 3, 1, "", "plot"], [311, 3, 1, "", "plot_azimuth_to_rhi"], [312, 3, 1, "", "plot_colorbar"], [313, 3, 1, "", "plot_cr_raster"], [314, 3, 1, "", "plot_cross_hair"], [315, 3, 1, "", "plot_grid_lines"], [316, 3, 1, "", "plot_label"], [317, 3, 1, "", "plot_labels"], [318, 3, 1, "", "plot_line_geo"], [319, 3, 1, "", "plot_line_xy"], [320, 3, 1, "", "plot_point"], [321, 3, 1, "", "plot_ppi"], [322, 3, 1, "", "plot_ppi_map"], [323, 3, 1, "", "plot_range_ring"], [324, 3, 1, "", "plot_range_rings"], [325, 3, 1, "", "plot_ray"], [326, 3, 1, "", "plot_rhi"], [327, 3, 1, "", "plot_vpt"], [328, 3, 1, "", "set_aspect_ratio"], [329, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[331, 3, 1, "", "generate_az_rhi_title"], [332, 3, 1, "", "generate_filename"], [333, 3, 1, "", "generate_ray_title"], [334, 3, 1, "", "generate_title"], [335, 3, 1, "", "generate_vpt_title"], [336, 3, 1, "", "label_xaxis_r"], [337, 3, 1, "", "label_xaxis_rays"], [338, 3, 1, "", "label_xaxis_time"], [339, 3, 1, "", "label_xaxis_x"], [340, 3, 1, "", "label_yaxis_field"], [341, 3, 1, "", "label_yaxis_y"], [342, 3, 1, "", "label_yaxis_z"], [343, 3, 1, "", "plot"], [344, 3, 1, "", "plot_azimuth_to_rhi"], [345, 3, 1, "", "plot_colorbar"], [346, 3, 1, "", "plot_cr_raster"], [347, 3, 1, "", "plot_cross_hair"], [348, 3, 1, "", "plot_grid_lines"], [349, 3, 1, "", "plot_label"], [350, 3, 1, "", "plot_labels"], [351, 3, 1, "", "plot_line_geo"], [352, 3, 1, "", "plot_line_xy"], [353, 3, 1, "", "plot_point"], [354, 3, 1, "", "plot_ppi"], [355, 3, 1, "", "plot_ppi_map"], [356, 3, 1, "", "plot_range_ring"], [357, 3, 1, "", "plot_range_rings"], [358, 3, 1, "", "plot_ray"], [359, 3, 1, "", "plot_rhi"], [360, 3, 1, "", "plot_vpt"], [361, 3, 1, "", "set_aspect_ratio"], [362, 3, 1, "", "set_limits"]], "pyart.io": [[365, 0, 1, "", "prepare_for_read"], [366, 0, 1, "", "read"], [367, 0, 1, "", "read_arm_sonde"], [368, 0, 1, "", "read_arm_sonde_vap"], [369, 0, 1, "", "read_cfradial"], [370, 0, 1, "", "read_chl"], [371, 0, 1, "", "read_grid"], [372, 0, 1, "", "read_grid_mdv"], [373, 0, 1, "", "read_mdv"], [374, 0, 1, "", "read_nexrad_archive"], [375, 0, 1, "", "read_nexrad_cdm"], [376, 0, 1, "", "read_nexrad_level3"], [377, 0, 1, "", "read_rsl"], [378, 0, 1, "", "read_sigmet"], [379, 0, 1, "", "read_uf"], [380, 0, 1, "", "write_cfradial"], [381, 0, 1, "", "write_grid"], [382, 0, 1, "", "write_grid_geotiff"], [383, 0, 1, "", "write_grid_mdv"], [384, 0, 1, "", "write_uf"]], "pyart.lazydict": [[386, 2, 1, "", "LazyLoadDict"], [399, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[387, 3, 1, "", "clear"], [388, 3, 1, "", "copy"], [389, 3, 1, "", "get"], [390, 3, 1, "", "has_key"], [391, 3, 1, "", "items"], [392, 3, 1, "", "keys"], [393, 3, 1, "", "pop"], [394, 3, 1, "", "popitem"], [395, 3, 1, "", "set_lazy"], [396, 3, 1, "", "setdefault"], [397, 3, 1, "", "update"], [398, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[400, 3, 1, "", "clear"], [401, 3, 1, "", "get"], [402, 3, 1, "", "items"], [403, 3, 1, "", "keys"], [404, 3, 1, "", "pop"], [405, 3, 1, "", "popitem"], [406, 3, 1, "", "setdefault"], [407, 3, 1, "", "update"], [408, 3, 1, "", "values"]], "pyart.map": [[410, 2, 1, "", "GateMapper"], [414, 0, 1, "", "example_roi_func_constant"], [415, 0, 1, "", "example_roi_func_dist"], [416, 0, 1, "", "example_roi_func_dist_beam"], [417, 0, 1, "", "grid_from_radars"], [418, 0, 1, "", "grid_ppi_sweeps"], [419, 0, 1, "", "grid_rhi_sweeps"], [420, 0, 1, "", "map_gates_to_grid"], [421, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[411, 4, 1, "", "distance_tolerance"], [412, 3, 1, "", "mapped_radar"], [413, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[423, 0, 1, "", "ZtoR"], [424, 0, 1, "", "calculate_snr_from_reflectivity"], [425, 0, 1, "", "calculate_velocity_texture"], [426, 0, 1, "", "composite_reflectivity"], [427, 0, 1, "", "compute_cdr"], [428, 0, 1, "", "compute_evp"], [429, 0, 1, "", "compute_l"], [430, 0, 1, "", "compute_noisedBZ"], [431, 0, 1, "", "compute_qvp"], [432, 0, 1, "", "compute_rqvp"], [433, 0, 1, "", "compute_snr"], [434, 0, 1, "", "compute_svp"], [435, 0, 1, "", "compute_ts_along_coord"], [436, 0, 1, "", "compute_vp"], [437, 0, 1, "", "conv_strat_raut"], [438, 0, 1, "", "conv_strat_yuter"], [439, 0, 1, "", "create_cfad"], [440, 0, 1, "", "dealias_spectra"], [441, 0, 1, "", "est_rain_rate_a"], [442, 0, 1, "", "est_rain_rate_hydro"], [443, 0, 1, "", "est_rain_rate_kdp"], [444, 0, 1, "", "est_rain_rate_z"], [445, 0, 1, "", "est_rain_rate_za"], [446, 0, 1, "", "est_rain_rate_zkdp"], [447, 0, 1, "", "est_rain_rate_zpoly"], [448, 0, 1, "", "feature_detection"], [449, 0, 1, "", "fetch_radar_time_profile"], [450, 0, 1, "", "get_freq_band"], [451, 0, 1, "", "grid_displacement_pc"], [452, 0, 1, "", "grid_shift"], [453, 0, 1, "", "hydroclass_semisupervised"], [454, 0, 1, "", "kdp_maesaka"], [455, 0, 1, "", "kdp_schneebeli"], [456, 0, 1, "", "kdp_vulpiani"], [457, 0, 1, "", "map_profile_to_gates"], [458, 0, 1, "", "quasi_vertical_profile"], [459, 0, 1, "", "spectra_moments"], [460, 0, 1, "", "steiner_conv_strat"], [461, 0, 1, "", "texture_of_complex_phase"], [462, 0, 1, "", "vad_browning"], [463, 0, 1, "", "vad_michelson"]], "pyart.testing": [[465, 2, 1, "", "Grid"], [475, 2, 1, "", "InTemporaryDirectory"], [477, 2, 1, "", "Radar"], [506, 2, 1, "", "RadarSpectra"], [551, 0, 1, "", "get_metadata"], [552, 0, 1, "", "get_test_data"], [553, 0, 1, "", "make_empty_grid"], [554, 0, 1, "", "make_empty_ppi_radar"], [555, 0, 1, "", "make_empty_rhi_radar"], [556, 0, 1, "", "make_empty_spectra_radar"], [557, 0, 1, "", "make_gaussian_storm_grid"], [558, 0, 1, "", "make_normal_storm"], [559, 0, 1, "", "make_single_ray_radar"], [560, 0, 1, "", "make_storm_grid"], [561, 0, 1, "", "make_target_grid"], [562, 0, 1, "", "make_target_radar"], [563, 0, 1, "", "make_target_rhi_radar"], [564, 0, 1, "", "make_target_spectra_radar"], [565, 0, 1, "", "make_velocity_aliased_radar"], [566, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[466, 3, 1, "", "add_field"], [467, 3, 1, "", "get_point_longitude_latitude"], [468, 3, 1, "", "get_projparams"], [469, 3, 1, "", "init_point_altitude"], [470, 3, 1, "", "init_point_longitude_latitude"], [471, 3, 1, "", "init_point_x_y_z"], [472, 4, 1, "", "projection_proj"], [473, 3, 1, "", "to_xarray"], [474, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[476, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[478, 3, 1, "", "add_field"], [479, 3, 1, "", "add_field_like"], [480, 3, 1, "", "add_filter"], [481, 3, 1, "", "check_field_exists"], [482, 3, 1, "", "extract_sweeps"], [483, 3, 1, "", "get_azimuth"], [484, 3, 1, "", "get_elevation"], [485, 3, 1, "", "get_end"], [486, 3, 1, "", "get_field"], [487, 3, 1, "", "get_gate_area"], [488, 3, 1, "", "get_gate_lat_lon_alt"], [489, 3, 1, "", "get_gate_x_y_z"], [490, 3, 1, "", "get_nyquist_vel"], [491, 3, 1, "", "get_slice"], [492, 3, 1, "", "get_start"], [493, 3, 1, "", "get_start_end"], [494, 3, 1, "", "info"], [495, 3, 1, "", "init_gate_altitude"], [496, 3, 1, "", "init_gate_longitude_latitude"], [497, 3, 1, "", "init_gate_x_y_z"], [498, 3, 1, "", "init_rays_per_sweep"], [499, 3, 1, "", "iter_azimuth"], [500, 3, 1, "", "iter_elevation"], [501, 3, 1, "", "iter_end"], [502, 3, 1, "", "iter_field"], [503, 3, 1, "", "iter_slice"], [504, 3, 1, "", "iter_start"], [505, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[507, 4, 1, "", "altitude"], [508, 4, 1, "", "azimuth"], [509, 3, 1, "", "check_field_exists"], [510, 4, 1, "", "elevation"], [511, 4, 1, "", "fields"], [512, 4, 1, "", "fixed_angle"], [513, 4, 1, "", "gate_altitude"], [514, 4, 1, "", "gate_latitude"], [515, 4, 1, "", "gate_longitude"], [516, 4, 1, "", "gate_x"], [517, 4, 1, "", "gate_y"], [518, 4, 1, "", "gate_z"], [519, 3, 1, "", "get_end"], [520, 3, 1, "", "get_slice"], [521, 3, 1, "", "get_start"], [522, 3, 1, "", "get_start_end"], [523, 3, 1, "", "init_gate_altitude"], [524, 3, 1, "", "init_gate_longitude_latitude"], [525, 3, 1, "", "init_gate_x_y_z"], [526, 3, 1, "", "init_rays_per_sweep"], [527, 3, 1, "", "iter_azimuth"], [528, 3, 1, "", "iter_elevation"], [529, 3, 1, "", "iter_end"], [530, 3, 1, "", "iter_field"], [531, 3, 1, "", "iter_slice"], [532, 3, 1, "", "iter_start"], [533, 3, 1, "", "iter_start_end"], [534, 4, 1, "", "latitude"], [535, 4, 1, "", "longitude"], [536, 4, 1, "", "ngates"], [537, 4, 1, "", "npulses_max"], [538, 4, 1, "", "nrays"], [539, 4, 1, "", "nsweeps"], [540, 4, 1, "", "projection"], [541, 4, 1, "", "range"], [542, 4, 1, "", "rays_per_sweep"], [543, 4, 1, "", "scan_type"], [544, 4, 1, "", "sweep_end_ray_index"], [545, 4, 1, "", "sweep_mode"], [546, 4, 1, "", "sweep_number"], [547, 4, 1, "", "sweep_start_ray_index"], [548, 4, 1, "", "time"], [549, 3, 1, "", "to_vpt"], [550, 4, 1, "", "velocity_bins"]], "pyart.util": [[568, 0, 1, "", "angular_mean"], [569, 0, 1, "", "angular_mean_deg"], [570, 0, 1, "", "angular_std"], [571, 0, 1, "", "angular_std_deg"], [572, 0, 1, "", "angular_texture_2d"], [573, 0, 1, "", "column_vertical_profile"], [574, 0, 1, "", "compute_directional_stats"], [575, 0, 1, "", "cross_section_ppi"], [576, 0, 1, "", "cross_section_rhi"], [577, 0, 1, "", "datetime_from_dataset"], [578, 0, 1, "", "datetime_from_grid"], [579, 0, 1, "", "datetime_from_radar"], [580, 0, 1, "", "datetimes_from_dataset"], [581, 0, 1, "", "datetimes_from_radar"], [582, 0, 1, "", "determine_sweeps"], [583, 0, 1, "", "estimate_noise_hs74"], [584, 0, 1, "", "for_azimuth"], [585, 0, 1, "", "get_column_rays"], [586, 0, 1, "", "get_field_location"], [587, 0, 1, "", "image_mute_radar"], [588, 0, 1, "", "interval_mean"], [589, 0, 1, "", "interval_std"], [590, 0, 1, "", "is_vpt"], [591, 0, 1, "", "join_radar"], [592, 0, 1, "", "ma_broadcast_to"], [593, 0, 1, "", "mean_of_two_angles"], [594, 0, 1, "", "mean_of_two_angles_deg"], [595, 0, 1, "", "rolling_window"], [596, 0, 1, "", "simulated_vel_from_profile"], [597, 0, 1, "", "sphere_distance"], [598, 0, 1, "", "subset_radar"], [599, 0, 1, "", "texture"], [600, 0, 1, "", "texture_along_ray"], [601, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 605, 607, 608, 611, 614], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 461], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 551], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 630, 631, 632, 636, 666, 675], "add_field": [32, 46, 466, 478], "get_point_longitude_latitud": [33, 467], "get_projparam": [34, 468], "init_point_altitud": [35, 469], "init_point_longitude_latitud": [36, 470], "init_point_x_y_z": [37, 471], "projection_proj": [38, 472], "to_xarrai": [39, 473], "write": [40, 474], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 606, 607, 611, 612, 615, 617, 629, 631, 632, 655, 669, 672, 677, 680], "add_field_lik": [47, 479], "add_filt": [48, 480], "check_field_exist": [49, 77, 481, 509], "extract_sweep": [50, 482], "get_azimuth": [51, 483], "get_elev": [52, 484], "get_end": [53, 87, 485, 519], "get_field": [54, 486], "get_gate_area": [55, 487], "get_gate_lat_lon_alt": [56, 488], "get_gate_x_y_z": [57, 489], "get_nyquist_vel": [58, 490], "get_slic": [59, 88, 491, 520], "get_start": [60, 89, 492, 521], "get_start_end": [61, 90, 493, 522], "info": [62, 494], "init_gate_altitud": [63, 91, 495, 523], "init_gate_longitude_latitud": [64, 92, 496, 524], "init_gate_x_y_z": [65, 93, 497, 525], "init_rays_per_sweep": [66, 94, 498, 526], "iter_azimuth": [67, 95, 499, 527], "iter_elev": [68, 96, 500, 528], "iter_end": [69, 97, 501, 529], "iter_field": [70, 98, 502, 530], "iter_slic": [71, 99, 503, 531], "iter_start": [72, 100, 504, 532], "iter_start_end": [73, 101, 505, 533], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550], "altitud": [75, 507], "azimuth": [76, 508], "elev": [78, 510], "field": [79, 511, 672], "fixed_angl": [80, 512], "gate_altitud": [81, 513], "gate_latitud": [82, 514], "gate_longitud": [83, 515], "gate_x": [84, 516], "gate_i": [85, 517], "gate_z": [86, 518], "latitud": [102, 534, 626], "longitud": [103, 535, 626], "ngate": [104, 536], "npulses_max": [105, 537], "nrai": [106, 538], "nsweep": [107, 539], "project": [108, 540], "rang": [109, 541, 611], "rays_per_sweep": [110, 542], "scan_typ": [111, 543], "sweep_end_ray_index": [112, 544], "sweep_mod": [113, 545], "sweep_numb": [114, 546], "sweep_start_ray_index": [115, 547], "time": [116, 548, 607, 611, 622, 627, 633, 652, 662, 663, 668, 678], "to_vpt": [117, 549, 601], "velocity_bin": [118, 550], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_antenna": 121, "cartesian_to_geograph": 122, "cartesian_to_geographic_aeqd": 123, "cartesian_vectors_to_geograph": 124, "geographic_to_cartesian": 125, "geographic_to_cartesian_aeqd": 126, "correct": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 612, 619, 620, 623], "gatefilt": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 676], "copi": [129, 174, 388], "exclude_abov": [130, 175], "exclude_above_toa": [131, 176], "exclude_al": [132, 177], "exclude_below": [133, 178], "exclude_equ": [134, 179], "exclude_g": [135, 180], "exclude_insid": [136, 181], "exclude_invalid": [137, 182], "exclude_last_g": [138, 183], "exclude_mask": [139, 184], "exclude_non": [140, 185], "exclude_not_equ": [141, 186], "exclude_outsid": [142, 187], "exclude_transit": [143, 188], "gate_exclud": [144, 189], "gate_includ": [145, 190], "include_abov": [146, 191], "include_al": [147, 192], "include_below": [148, 193], "include_equ": [149, 194], "include_g": [150, 195], "include_insid": [151, 196], "include_non": [152, 197], "include_not_equ": [153, 198], "include_not_mask": [154, 199], "include_not_transit": [155, 200], "include_outsid": [156, 201], "include_valid": [157, 202], "calculate_attenu": 158, "calculate_attenuation_philinear": 159, "calculate_attenuation_zphi": 160, "correct_bia": 161, "correct_noise_rhohv": 162, "dealias_fourdd": 163, "dealias_region_bas": 164, "dealias_unwrap_phas": 165, "despeckle_field": 166, "find_object": 167, "moment_based_gate_filt": [168, 205], "phase_proc_lp": 169, "phase_proc_lp_gf": 170, "except": 171, "filter": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "iso0_based_gate_filt": 203, "moment_and_texture_based_gate_filt": 204, "temp_based_gate_filt": 206, "graph": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363], "airborneradardisplai": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "generate_az_rhi_titl": [209, 269, 298, 331], "generate_filenam": [210, 242, 255, 270, 299, 332], "generate_ray_titl": [211, 271, 300, 333], "generate_titl": [212, 272, 301, 334], "generate_vpt_titl": [213, 273, 302, 335], "label_xaxis_r": [214, 274, 303, 336], "label_xaxis_rai": [215, 275, 304, 337], "label_xaxis_tim": [216, 276, 305, 338], "label_xaxis_x": [217, 277, 306, 339], "label_yaxis_field": [218, 278, 307, 340], "label_yaxis_i": [219, 279, 308, 341], "label_yaxis_z": [220, 280, 309, 342], "plot": [221, 281, 310, 343, 606, 607, 608, 610, 611, 612, 623, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 656, 659, 661, 667], "plot_azimuth_to_rhi": [222, 282, 311, 344], "plot_colorbar": [223, 246, 261, 283, 312, 345], "plot_cr_rast": [224, 284, 313, 346], "plot_cross_hair": [225, 285, 314, 347], "plot_grid_lin": [226, 286, 315, 348], "plot_label": [227, 228, 287, 288, 316, 317, 349, 350], "plot_ppi": [229, 289, 321, 354], "plot_range_r": [230, 231, 290, 291, 323, 324, 356, 357], "plot_rai": [232, 292, 325, 358], "plot_rhi": [233, 293, 326, 359], "plot_sweep_grid": 234, "plot_vpt": [235, 294, 327, 360], "set_aspect_ratio": [236, 295, 328, 361], "set_limit": [237, 296, 329, 362], "gridmapdisplai": [238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 650], "cartopy_coastlin": 239, "cartopy_political_boundari": 240, "cartopy_st": 241, "generate_grid_titl": [243, 256], "generate_latitudinal_level_titl": [244, 257], "generate_longitudinal_level_titl": [245, 258], "plot_cross_sect": 247, "plot_crosshair": [248, 262], "plot_grid": [249, 263], "plot_latitude_slic": [250, 264], "plot_latitudinal_level": [251, 265], "plot_longitude_slic": [252, 266], "plot_longitudinal_level": [253, 267], "gridmapdisplaybasemap": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], "get_basemap": 259, "plot_basemap": 260, "radardisplai": [268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296], "radarmapdisplai": [297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 608], "plot_line_geo": [318, 351], "plot_line_xi": [319, 352], "plot_point": [320, 353], "plot_ppi_map": [322, 355, 608], "radarmapdisplaybasemap": [330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "plot_convstrat_schem": 363, "io": [364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "prepare_for_read": 365, "read": [366, 606, 607, 608, 611, 612, 625, 626], "read_arm_sond": 367, "read_arm_sonde_vap": 368, "read_cfradi": 369, "read_chl": 370, "read_grid": 371, "read_grid_mdv": 372, "read_mdv": 373, "read_nexrad_arch": 374, "read_nexrad_cdm": 375, "read_nexrad_level3": 376, "read_rsl": 377, "read_sigmet": 378, "read_uf": 379, "write_cfradi": 380, "write_grid": 381, "write_grid_geotiff": 382, "write_grid_mdv": 383, "write_uf": 384, "lazydict": [385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408], "lazyloaddict": [386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "clear": [387, 400], "get": [389, 401, 669], "has_kei": 390, "item": [391, 402], "kei": [392, 403, 607], "pop": [393, 404], "popitem": [394, 405], "set_lazi": 395, "setdefault": [396, 406], "updat": [397, 407, 617], "valu": [398, 408], "mutablemap": [399, 400, 401, 402, 403, 404, 405, 406, 407, 408], "map": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 611, 623, 628, 630, 631, 632, 643, 675], "gatemapp": [410, 411, 412, 413, 629], "distance_toler": 411, "mapped_radar": 412, "time_toler": 413, "example_roi_func_const": 414, "example_roi_func_dist": 415, "example_roi_func_dist_beam": 416, "grid_from_radar": 417, "grid_ppi_sweep": 418, "grid_rhi_sweep": 419, "map_gates_to_grid": 420, "map_to_grid": 421, "retriev": [422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 612, 623, 653], "ztor": 423, "calculate_snr_from_reflect": 424, "calculate_velocity_textur": 425, "composite_reflect": 426, "compute_cdr": 427, "compute_evp": 428, "compute_l": 429, "compute_noisedbz": 430, "compute_qvp": 431, "compute_rqvp": 432, "compute_snr": 433, "compute_svp": 434, "compute_ts_along_coord": 435, "compute_vp": 436, "conv_strat_raut": 437, "conv_strat_yut": 438, "create_cfad": 439, "dealias_spectra": 440, "est_rain_rate_a": 441, "est_rain_rate_hydro": 442, "est_rain_rate_kdp": 443, "est_rain_rate_z": 444, "est_rain_rate_za": 445, "est_rain_rate_zkdp": 446, "est_rain_rate_zpoli": 447, "feature_detect": 448, "fetch_radar_time_profil": 449, "get_freq_band": 450, "grid_displacement_pc": 451, "grid_shift": 452, "hydroclass_semisupervis": 453, "usag": 453, "kdp_maesaka": 454, "kdp_schneeb": 455, "kdp_vulpiani": 456, "map_profile_to_g": 457, "quasi_vertical_profil": 458, "spectra_mo": 459, "paramet": [459, 608], "steiner_conv_strat": 460, "vad_brown": 462, "vad_michelson": 463, "test": [464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 615, 680], "intemporarydirectori": [475, 476], "cleanup": 476, "get_test_data": 552, "make_empty_grid": 553, "make_empty_ppi_radar": 554, "make_empty_rhi_radar": 555, "make_empty_spectra_radar": 556, "make_gaussian_storm_grid": 557, "make_normal_storm": 558, "make_single_ray_radar": 559, "make_storm_grid": 560, "make_target_grid": 561, "make_target_radar": 562, "make_target_rhi_radar": 563, "make_target_spectra_radar": 564, "make_velocity_aliased_radar": 565, "make_velocity_aliased_rhi_radar": 566, "util": [567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601], "angular_mean": 568, "angular_mean_deg": 569, "angular_std": 570, "angular_std_deg": 571, "angular_texture_2d": 572, "column_vertical_profil": 573, "compute_directional_stat": 574, "cross_section_ppi": 575, "cross_section_rhi": 576, "datetime_from_dataset": 577, "datetime_from_grid": 578, "datetime_from_radar": 579, "datetimes_from_dataset": 580, "datetimes_from_radar": 581, "determine_sweep": 582, "estimate_noise_hs74": 583, "for_azimuth": 584, "assumpt": [584, 597], "get_column_rai": 585, "get_field_loc": 586, "image_mute_radar": 587, "interval_mean": 588, "interval_std": 589, "is_vpt": 590, "join_radar": 591, "ma_broadcast_to": 592, "mean_of_two_angl": 593, "mean_of_two_angles_deg": 594, "rolling_window": 595, "simulated_vel_from_profil": 596, "sphere_dist": 597, "subset_radar": 598, "textur": 599, "texture_along_rai": 600, "api": [602, 612], "refer": [602, 612, 657, 658], "manual": 602, "blog": [603, 611, 613], "blend": 604, "observ": 604, "from": [604, 606, 611, 612, 625, 636, 639, 641, 642, 644, 645, 646, 647, 648, 651, 679], "tracer": 604, "us": [604, 606, 607, 608, 611, 612, 621, 629, 630, 650, 665, 666, 667], "py": [604, 605, 606, 611, 612, 614, 615, 616, 617, 665, 666, 667, 669, 676, 677, 679, 680], "art": [604, 605, 606, 611, 612, 614, 615, 616, 617, 665, 666, 667, 669, 676, 677, 679, 680], "import": [604, 606, 607, 608, 610, 615, 680], "goe": 604, "data": [604, 606, 607, 608, 610, 611, 612, 625, 626, 666, 675, 676], "access": [604, 606, 608, 610, 611], "csapr": 604, "load": [604, 607], "lma": 604, "flash": 604, "june": 604, "17th": 604, "case": 604, "17": [604, 614], "rhi": [604, 612, 644, 645, 646, 647, 648, 649], "activ": 605, "develop": [605, 618], "submit": 605, "pull": 605, "request": 605, "pr": [605, 614], "first": 605, "you": [605, 612], "have": 605, "done": 605, "so": 605, "alreadi": 605, "need": 605, "fork": 605, "github": [605, 615, 617, 680], "repositori": 605, "second": 605, "termin": 605, "clone": 605, "your": [605, 611, 612, 635, 637], "remot": 605, "git": [605, 617], "command": 605, "third": 605, "creat": [605, 606, 607, 611, 617, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 654, 671, 682], "doc": [605, 609], "conda": [605, 617], "environ": [605, 682], "fourth": 605, "we": [605, 611], "instal": [605, 615, 669, 679, 680], "trmm": 605, "rsl": 605, "librari": 605, "lastli": 605, "python": [605, 615, 669, 680], "script": 605, "within": [605, 611], "okai": 605, "should": 605, "now": 605, "readi": 605, "make": [605, 617], "chang": 605, "sourc": [605, 679], "code": [605, 611, 615, 680], "1": [605, 611, 614, 658], "new": [605, 609], "branch": 605, "our": [605, 607, 608, 610, 612], "2": [605, 611, 614, 625, 626, 658], "push": 605, "To": 605, "let": 605, "commit": 605, "after": 605, "thi": [605, 611, 614], "i": [605, 612, 669], "what": [605, 669], "look": 605, "like": 605, "hope": 605, "help": [605, 669], "hail": 606, "storm": 606, "visual": [606, 607, 610], "panda": 606, "motiv": [606, 610, 612, 613], "nexrad": [606, 608, 610, 611, 625, 626, 639, 640], "fsspec": 606, "setup": [606, 610, 615, 616, 680], "filesystem": 606, "bucket": 606, "file": [606, 611, 615, 639, 641, 642, 644, 645, 646, 647, 648, 671, 672, 680], "dataset": 606, "nexradaw": 606, "configur": 606, "search": [606, 612], "download": [606, 610], "spc": 606, "report": 606, "function": [606, 610], "loop": [606, 611], "through": [606, 611, 612], "helper": 606, "scale": 606, "bar": 606, "an": [606, 638, 646, 647, 682], "anim": [606, 611], "imag": [606, 610, 638], "view": [606, 607], "final": [606, 607], "conclus": [606, 608, 610, 612, 613], "work": [607, 657, 658], "vertic": 607, "point": [607, 611, 655], "xarrai": 607, "hvplot": 607, "overview": [607, 611], "ka": 607, "band": 607, "arm": [607, 612, 615, 669, 680], "zenith": 607, "kazr": 607, "instrument": 607, "clean": [607, 612], "up": [607, 608, 611, 682], "bit": 607, "analysi": 607, "subset": 607, "reflect": [607, 620, 638, 640, 646, 647, 656], "veloc": [607, 612, 621, 654, 665, 673], "quick": 607, "extract": [607, 655], "date": [607, 610, 611], "inform": [607, 682], "label": 607, "holoview": 607, "try": [607, 608], "raster": 607, "takeawai": 607, "fix": [608, 614, 626], "weird": 608, "pattern": 608, "when": 608, "level": [608, 611, 625, 626], "3": [608, 611, 614, 625, 650], "The": [608, 610, 612, 613, 615, 669, 677, 680], "recreat": 608, "issu": [608, 626], "set": [608, 611, 660, 682], "matplotlib": 608, "style": [608, 615, 680], "without": 608, "alpha": 608, "add": [608, 610], "argument": 608, "dig": 608, "investig": [608, 610, 612], "pcolormesh": 608, "edgecolor": 608, "modifi": [608, 637], "default": 608, "solut": [608, 612, 613], "sever": 610, "weather": 610, "wisconsin": 610, "outbreak": 610, "focus": 610, "southern": 610, "reproduc": 610, "event": 610, "road": 610, "interst": 610, "featur": [610, 611, 614, 658], "avail": 610, "run": 610, "gif": 611, "post": [611, 613], "cover": 611, "aw": [611, 625], "how": [611, 617, 657, 658], "acquir": 611, "prerequisit": 611, "s3": 611, "filysystem": 611, "select": 611, "station": 611, "period": 611, "option": [611, 669, 679, 682], "individu": 611, "locat": 611, "gener": 611, "list": 611, "check": 611, "plottabl": 611, "product": 611, "ad": [611, 682], "custom": [611, 660], "counti": 611, "zoom": 611, "colorbar": [611, 637], "note": [611, 617], "full": 611, "block": 611, "construct": 611, "properli": 611, "creation": 611, "whole": 611, "summari": [611, 657, 658], "scan": 612, "cloud": [612, 625], "epcap": 612, "problem": [612, 613], "dq": 612, "browser": 612, "act": 612, "token": 612, "live": 612, "pass": 612, "credenti": 612, "take": 612, "peak": 612, "strategi": 612, "sort": 612, "all": 612, "ppi": [612, 630, 641, 642, 643, 651, 667], "appli": 612, "explor": 612, "threshold": 612, "snr": 612, "revis": 612, "where": 612, "slice": 612, "frame": 612, "templat": 613, "changelog": 614, "18": 614, "enhanc": 614, "made": 614, "bug": 614, "other": 614, "merg": 614, "contributor": [614, 615, 680], "releas": [614, 617], "0": 614, "document": [614, 617], "improv": 614, "16": 614, "mainten": 614, "upkeep": 614, "15": 614, "v1": 614, "14": 614, "6": 614, "5": 614, "4": 614, "13": 614, "12": 614, "7": 614, "11": 614, "8": 614, "deprec": 614, "10": 614, "9": 614, "picasso": 614, "": [615, 618, 680], "guid": [615, 618, 680, 681], "toolkit": [615, 669, 680], "link": [615, 680], "cite": [615, 669, 680], "resourc": [615, 680], "continu": 616, "integr": 616, "tag": 617, "prepar": 617, "trigger": 617, "pypi": 617, "upload": 617, "packag": 617, "forg": 617, "announc": 617, "open": 617, "forum": 617, "version": 618, "moment": [619, 623, 639], "exampl": [619, 623, 624, 628, 634, 653, 654, 657, 664], "attenu": 620, "dealia": [621, 665], "doppler": 621, "region": 621, "base": 621, "algorithm": [621, 657, 658], "comput": [622, 627, 633, 652, 662, 663, 668, 678], "galleri": [623, 670], "input": [623, 624], "output": [623, 624], "xradar": [623, 664, 665, 666, 667], "older": 626, "compar": 629, "two": [629, 632, 649], "singl": [630, 631], "sweep": 630, "cartesian": [630, 631, 632, 675], "2d": 630, "weight": 630, "choos": 635, "colormap": 635, "cross": [636, 651], "section": [636, 651], "mute": 638, "multipl": [639, 644, 645], "cfradial": 641, "mdv": [642, 646, 647, 648], "cartopi": 643, "panel": [644, 645, 649, 650], "cf": [644, 645], "radial": [644, 645, 665], "contour": [646, 647], "line": [646, 647], "volum": 651, "cfad": 654, "diagram": 654, "valid": 654, "column": 655, "abov": 655, "calcul": [656, 659, 661], "composit": 656, "convect": [657, 658], "stratiform": [657, 658], "classif": [657, 658, 659, 660], "recommend": [657, 658], "best": [657, 658], "practic": [657, 658], "detect": 658, "part": 658, "warm": 658, "season": 658, "cool": 658, "hydrometeor": [659, 660], "frequenc": 660, "vad": 661, "profil": 661, "can": 669, "do": 669, "short": 669, "cours": 669, "depend": [669, 679, 682], "contribut": 669, "notebook": 670, "basic": 671, "ingest": 671, "netcdf": 671, "manipul": 672, "save": 672, "object": [672, 677], "dealias": 673, "mask": 676, "With": 676, "index": 677, "build": 679, "requir": 679, "obtain": 679, "latest": 679, "frequent": 679, "ask": 679, "question": 679, "user": 681, "anaconda": 682, "channel": 682, "path": 682, "more": 682}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[121, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[122, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[123, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[124, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[125, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[126, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[127, "pyart-correct"]], "pyart.correct.GateFilter": [[128, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[129, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[130, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_above_toa": [[131, "pyart-correct-gatefilter-exclude-above-toa"]], "pyart.correct.GateFilter.exclude_all": [[132, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[133, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[134, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[135, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[136, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[137, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_last_gates": [[138, "pyart-correct-gatefilter-exclude-last-gates"]], "pyart.correct.GateFilter.exclude_masked": [[139, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[140, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[141, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[142, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[143, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[144, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[145, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[146, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[147, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[148, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[149, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[150, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[151, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[152, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[153, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[154, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[155, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[156, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[157, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[158, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[159, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[160, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[161, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[162, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[163, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[164, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[165, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[166, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[167, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[168, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[169, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[170, "pyart-correct-phase-proc-lp-gf"]], "pyart.exceptions": [[171, "pyart-exceptions"]], "pyart.filters": [[172, "pyart-filters"]], "pyart.filters.GateFilter": [[173, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[174, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[175, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_above_toa": [[176, "pyart-filters-gatefilter-exclude-above-toa"]], "pyart.filters.GateFilter.exclude_all": [[177, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[178, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[179, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[180, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[181, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[182, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_last_gates": [[183, "pyart-filters-gatefilter-exclude-last-gates"]], "pyart.filters.GateFilter.exclude_masked": [[184, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[185, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[186, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[187, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[188, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[189, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[190, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[191, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[192, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[193, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[194, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[195, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[196, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[197, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[198, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[199, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[200, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[201, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[202, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[203, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[204, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[205, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[206, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[207, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[208, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[209, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[210, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[211, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[212, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[213, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[214, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[215, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[216, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[217, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[218, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[219, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[220, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[221, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[222, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[223, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[224, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[225, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[226, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[227, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[228, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[229, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[230, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[231, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[232, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[233, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[234, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[235, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[236, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[237, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[238, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[239, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[240, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[241, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[242, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[243, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[244, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[245, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[246, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[247, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[248, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[249, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[250, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[251, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[252, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[253, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[254, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[255, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[256, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[257, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[258, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[259, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[260, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[261, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[262, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[263, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[264, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[265, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[266, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[267, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[268, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[269, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[270, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[271, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[272, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[273, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[274, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[275, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[276, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[277, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[278, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[279, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[280, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[281, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[282, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[283, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[284, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[285, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[286, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[287, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[288, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[289, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[290, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[291, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[292, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[293, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[294, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[295, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[296, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[297, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[298, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[299, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[300, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[301, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[302, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[303, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[304, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[305, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[306, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[307, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[308, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[309, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[310, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[311, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[312, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[313, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[314, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[315, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[316, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[317, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[318, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[319, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[320, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[321, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[322, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[323, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[324, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[325, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[326, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[327, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[328, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[329, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[330, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[331, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[332, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[333, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[334, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[335, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[336, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[337, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[338, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[339, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[340, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[341, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[342, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[343, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[344, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[345, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[346, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[347, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[348, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[349, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[350, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[351, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[352, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[353, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[354, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[355, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[356, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[357, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[358, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[359, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[360, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[361, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[362, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[363, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[364, "pyart-io"]], "pyart.io.prepare_for_read": [[365, "pyart-io-prepare-for-read"]], "pyart.io.read": [[366, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[367, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[368, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[369, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[370, "pyart-io-read-chl"]], "pyart.io.read_grid": [[371, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[372, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[373, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[374, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[375, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[376, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[377, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[378, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[379, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[380, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[381, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[382, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[383, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[384, "pyart-io-write-uf"]], "pyart.lazydict": [[385, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[386, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[387, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[388, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[389, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[390, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[391, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[392, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[393, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[394, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[395, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[396, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[397, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[398, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[399, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[400, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[401, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[402, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[403, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[404, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[405, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[406, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[407, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[408, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[409, "pyart-map"]], "pyart.map.GateMapper": [[410, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[411, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[412, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[413, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[414, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[415, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[416, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[417, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[418, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[419, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[420, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[421, "pyart-map-map-to-grid"]], "pyart.retrieve": [[422, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[423, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[424, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[425, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[426, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[427, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_evp": [[428, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_l": [[429, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[430, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_qvp": [[431, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_rqvp": [[432, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_snr": [[433, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_svp": [[434, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[435, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vp": [[436, "pyart-retrieve-compute-vp"]], "pyart.retrieve.conv_strat_raut": [[437, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[438, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.create_cfad": [[439, "pyart-retrieve-create-cfad"]], "pyart.retrieve.dealias_spectra": [[440, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[441, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[442, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[443, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[444, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[445, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[446, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[447, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[448, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[449, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[450, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[451, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[452, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[453, "pyart-retrieve-hydroclass-semisupervised"]], "Usage": [[453, "usage"]], "pyart.retrieve.kdp_maesaka": [[454, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[455, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[456, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[457, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[458, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[459, "pyart-retrieve-spectra-moments"]], "Parameter": [[459, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[460, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[461, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[462, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[463, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[464, "pyart-testing"]], "pyart.testing.Grid": [[465, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[466, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[467, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[468, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[469, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[470, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[471, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[472, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[473, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[474, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[475, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[476, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[477, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[478, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[479, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[480, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[481, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[482, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[483, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[484, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[485, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[486, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[487, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[488, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[489, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[490, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[491, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[492, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[493, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[494, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[495, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[496, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[497, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[498, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[499, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[500, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[501, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[502, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[503, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[504, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[505, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[506, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[507, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[508, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[509, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[510, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[511, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[512, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[513, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[514, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[515, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[516, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[517, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[518, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[519, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[520, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[521, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[522, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[523, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[524, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[525, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[526, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[527, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[528, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[529, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[530, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[531, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[532, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[533, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[534, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[535, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[536, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[537, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[538, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[539, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[540, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[541, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[542, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[543, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[544, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[545, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[546, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[547, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[548, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[549, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[550, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[551, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[552, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[553, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[554, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[555, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[556, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[557, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[558, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[559, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[560, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[561, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[562, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_rhi_radar": [[563, "pyart-testing-make-target-rhi-radar"]], "pyart.testing.make_target_spectra_radar": [[564, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[565, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[566, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[567, "pyart-util"]], "pyart.util.angular_mean": [[568, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[569, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[570, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[571, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[572, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[573, "pyart-util-column-vertical-profile"]], "pyart.util.compute_directional_stats": [[574, "pyart-util-compute-directional-stats"]], "pyart.util.cross_section_ppi": [[575, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[576, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[577, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[578, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[579, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[580, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[581, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[582, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[583, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[584, "pyart-util-for-azimuth"]], "Assumptions": [[584, "assumptions"], [597, "assumptions"]], "pyart.util.get_column_rays": [[585, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[586, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[587, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[588, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[589, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[590, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[591, "pyart-util-join-radar"]], "pyart.util.ma_broadcast_to": [[592, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[593, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[594, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[595, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[596, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[597, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[598, "pyart-util-subset-radar"]], "pyart.util.texture": [[599, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[600, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[601, "pyart-util-to-vpt"]], "API Reference Manual": [[602, "api-reference-manual"]], "Blog": [[603, "blog"]], "Blending Observations from TRACER using Py-ART": [[604, "blending-observations-from-tracer-using-py-art"]], "Imports": [[604, "imports"], [606, "imports"], [607, "imports"], [608, "imports"], [610, "imports"]], "GOES data access": [[604, "goes-data-access"]], "CSAPR data access": [[604, "csapr-data-access"]], "Load LMA Flash data": [[604, "load-lma-flash-data"]], "June 17th case": [[604, "june-17th-case"]], "June 17 RHI": [[604, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[605, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[605, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[605, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[605, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[605, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[605, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[605, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[605, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[605, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[605, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[605, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[605, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[606, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[606, "motivation"], [610, "motivation"], [612, "motivation"], [613, "motivation"]], "NEXRAD Data Access - fsspec": [[606, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[606, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[606, "read-in-a-file"]], "Visualize the Dataset": [[606, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[606, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[606, "configure-the-search"]], "Search and Download the Data": [[606, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[606, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[606, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[606, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[606, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[606, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[606, "create-an-animation-of-the-images"]], "View the Final Animation": [[606, "view-the-final-animation"]], "Conclusion": [[606, "conclusion"], [608, "conclusion"], [610, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[607, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[607, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[607, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[607, "plot-using-pyart"]], "Load in the data using pyart": [[607, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[607, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[607, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[607, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[607, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[607, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[607, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[607, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[607, "create-our-holoviews-plots"]], "View the Final Visualization": [[607, "view-the-final-visualization"]], "Try Using Rasterize": [[607, "try-using-rasterize"]], "Key Takeaways": [[607, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[608, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[608, "the-data"]], "Data Access": [[608, "data-access"]], "Recreate the Issue Using PyART": [[608, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[608, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[608, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[608, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[608, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[608, "add-in-the-alpha-argument"]], "Dig into the Issue": [[608, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[608, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[608, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[608, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[608, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[608, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[608, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[608, "fixing-the-issue-in-pyart"]], "New Docs": [[609, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[610, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[610, "the-outbreak"]], "Focusing on Southern Wisconsin": [[610, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[610, "reproducing-event-images"]], "Visualizing the Event": [[610, "visualizing-the-event"]], "Access the Data": [[610, "access-the-data"]], "Download the Road Data": [[610, "download-the-road-data"]], "Add the Interstate Date as a feature": [[610, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[610, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[610, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[610, "run-our-plotting-functions"]], "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART": [[611, "creating-animated-gifs-with-nexrad-level-2-radar-data-using-py-art"]], "Overview": [[611, "overview"]], "Within this blog post, we will cover:": [[611, "within-this-blog-post-we-will-cover"]], "1: Accessing NEXRAD data from AWS": [[611, "accessing-nexrad-data-from-aws"]], "2: How to read the data into Py-ART and create plots": [[611, "how-to-read-the-data-into-py-art-and-create-plots"]], "3: How to create animated gifs with acquired radar data from Py-ART": [[611, "how-to-create-animated-gifs-with-acquired-radar-data-from-py-art"]], "Prerequisites": [[611, "prerequisites"]], "Set up the AWS S3 filysystem": [[611, "set-up-the-aws-s3-filysystem"]], "Selecting your date, station, and time period": [[611, "selecting-your-date-station-and-time-period"]], "OPTIONAL* setting up individual locations to be plotted on your map": [[611, "optional-setting-up-individual-locations-to-be-plotted-on-your-map"]], "Generating your file list": [[611, "generating-your-file-list"]], "Checking your plottable radar products": [[611, "checking-your-plottable-radar-products"]], "Reading the data into PyART": [[611, "reading-the-data-into-pyart"]], "Looping through the radar data": [[611, "looping-through-the-radar-data"]], "Plotting code with added features and plotted points": [[611, "plotting-code-with-added-features-and-plotted-points"]], "Customizing the range of plotted data": [[611, "customizing-the-range-of-plotted-data"]], "Counties": [[611, "counties"]], "Location plotting": [[611, "location-plotting"]], "Zooming": [[611, "zooming"]], "Colorbar": [[611, "colorbar"]], "NOTE": [[611, "note"]], "Full code block constructed properly within the for loop.": [[611, "full-code-block-constructed-properly-within-the-for-loop"]], "GIF creation": [[611, "gif-creation"]], "Code in whole": [[611, "code-in-whole"]], "Summary": [[611, "summary"]], "Investigating ARM Scanning Cloud Radar Data from EPCAPE": [[612, "investigating-arm-scanning-cloud-radar-data-from-epcape"]], "The Problem": [[612, "the-problem"], [613, "the-problem"]], "The Solution": [[612, "the-solution"], [613, "the-solution"]], "Searching for data through the DQ Plot Browser": [[612, "searching-for-data-through-the-dq-plot-browser"]], "Use ACT to retrieve data from EPCAPE": [[612, "use-act-to-retrieve-data-from-epcape"]], "Retrieve you API token from ARM Live": [[612, "retrieve-you-api-token-from-arm-live"]], "Pass your Credentials into the Search": [[612, "pass-your-credentials-into-the-search"]], "Read the Data into Py-ART": [[612, "read-the-data-into-py-art"]], "Take a Peak at the Scan Strategy": [[612, "take-a-peak-at-the-scan-strategy"]], "Sort the Scans by Scan Strategy": [[612, "sort-the-scans-by-scan-strategy"]], "Plot all of the PPI Scans": [[612, "plot-all-of-the-ppi-scans"]], "Plot all the RHI Scans": [[612, "plot-all-the-rhi-scans"]], "Apply Corrections to the Velocity Data": [[612, "apply-corrections-to-the-velocity-data"]], "Explore a Threshold for SNR": [[612, "explore-a-threshold-for-snr"]], "Plot our Revised, Cleaned Data": [[612, "plot-our-revised-cleaned-data"]], "Plot where the RHI scan is slicing through using the PPI for a frame of reference": [[612, "plot-where-the-rhi-scan-is-slicing-through-using-the-ppi-for-a-frame-of-reference"]], "Conclusions": [[612, "conclusions"], [613, "conclusions"]], "Blog Post Template": [[613, "blog-post-template"]], "Changelog": [[614, "changelog"]], "Py-ART 1.18.1": [[614, "py-art-1-18-1"]], "Enhancements made": [[614, "enhancements-made"], [614, "id1"], [614, "id5"], [614, "id9"], [614, "id14"], [614, "id29"], [614, "id35"], [614, "id46"], [614, "id49"], [614, "id54"], [614, "id59"], [614, "id62"], [614, "id66"], [614, "id79"], [614, "id89"], [614, "id99"], [614, "id105"], [614, "id111"], [614, "id119"], [614, "id132"], [614, "id136"], [614, "id140"], [614, "id146"], [614, "id152"], [614, "id161"], [614, "id168"], [614, "id175"], [614, "id181"], [614, "id188"], [614, "id194"], [614, "id200"]], "Bugs fixed": [[614, "bugs-fixed"], [614, "id2"], [614, "id6"], [614, "id10"], [614, "id15"], [614, "id22"], [614, "id26"], [614, "id30"], [614, "id36"], [614, "id41"], [614, "id50"], [614, "id55"], [614, "id60"], [614, "id67"], [614, "id72"], [614, "id76"], [614, "id80"], [614, "id85"], [614, "id90"], [614, "id95"], [614, "id100"], [614, "id106"], [614, "id112"], [614, "id116"], [614, "id120"], [614, "id124"], [614, "id129"], [614, "id133"], [614, "id137"], [614, "id141"], [614, "id147"], [614, "id153"], [614, "id157"], [614, "id162"], [614, "id169"], [614, "id176"], [614, "id182"], [614, "id189"], [614, "id195"]], "Other merged PRs": [[614, "other-merged-prs"], [614, "id3"], [614, "id7"], [614, "id12"], [614, "id17"], [614, "id20"], [614, "id24"], [614, "id27"], [614, "id32"], [614, "id37"], [614, "id44"], [614, "id47"], [614, "id52"], [614, "id57"], [614, "id64"], [614, "id70"], [614, "id74"], [614, "id77"], [614, "id83"], [614, "id87"], [614, "id93"], [614, "id97"], [614, "id103"], [614, "id109"], [614, "id114"], [614, "id122"], [614, "id127"], [614, "id134"], [614, "id144"], [614, "id150"], [614, "id155"], [614, "id159"], [614, "id166"], [614, "id173"], [614, "id179"], [614, "id186"], [614, "id192"], [614, "id198"]], "Contributors to this release": [[614, "contributors-to-this-release"], [614, "id4"], [614, "id8"], [614, "id13"], [614, "id18"], [614, "id21"], [614, "id25"], [614, "id28"], [614, "id33"], [614, "id34"], [614, "id38"], [614, "id40"], [614, "id45"], [614, "id48"], [614, "id53"], [614, "id58"], [614, "id61"], [614, "id65"], [614, "id71"], [614, "id75"], [614, "id78"], [614, "id84"], [614, "id88"], [614, "id94"], [614, "id98"], [614, "id104"], [614, "id110"], [614, "id115"], [614, "id118"], [614, "id123"], [614, "id128"], [614, "id131"], [614, "id135"], [614, "id139"], [614, "id145"], [614, "id151"], [614, "id156"], [614, "id160"], [614, "id167"], [614, "id174"], [614, "id180"], [614, "id187"], [614, "id193"], [614, "id199"], [614, "id202"]], "Py-ART 1.18.0": [[614, "py-art-1-18-0"]], "Py-ART 1.17.0": [[614, "py-art-1-17-0"]], "Documentation improvements": [[614, "documentation-improvements"], [614, "id11"], [614, "id16"], [614, "id43"], [614, "id51"], [614, "id56"], [614, "id69"], [614, "id82"], [614, "id92"], [614, "id102"], [614, "id108"], [614, "id126"], [614, "id138"], [614, "id143"], [614, "id149"], [614, "id154"], [614, "id158"], [614, "id164"], [614, "id171"], [614, "id178"], [614, "id184"], [614, "id191"], [614, "id197"]], "Py-ART 1.16.1": [[614, "py-art-1-16-1"]], "Py-ART 1.16.0": [[614, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[614, "maintenance-and-upkeep-improvements"], [614, "id19"], [614, "id23"], [614, "id31"], [614, "id39"], [614, "id42"], [614, "id63"], [614, "id68"], [614, "id73"], [614, "id81"], [614, "id86"], [614, "id91"], [614, "id96"], [614, "id101"], [614, "id107"], [614, "id113"], [614, "id117"], [614, "id121"], [614, "id125"], [614, "id130"], [614, "id142"], [614, "id148"], [614, "id163"], [614, "id170"], [614, "id177"], [614, "id183"], [614, "id190"], [614, "id196"], [614, "id201"]], "Py-ART 1.15.2": [[614, "py-art-1-15-2"]], "Py-ART 1.15.1": [[614, "py-art-1-15-1"]], "Py-ART v1.15.0": [[614, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[614, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[614, "py-art-v1-14-5"]], "Merged PRs": [[614, "merged-prs"]], "Py-ART v1.14.4": [[614, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[614, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[614, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[614, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[614, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[614, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[614, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[614, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[614, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[614, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[614, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[614, "py-art-v1-12-5"]], "PyART v1.12.4": [[614, "pyart-v1-12-4"]], "PyART v1.12.2": [[614, "pyart-v1-12-2"]], "PyART v1.12.0": [[614, "pyart-v1-12-0"]], "PyART v1.11.8": [[614, "pyart-v1-11-8"]], "Deprecated features": [[614, "deprecated-features"], [614, "id165"], [614, "id172"], [614, "id185"]], "PyART v1.11.6": [[614, "pyart-v1-11-6"]], "PyART v1.11.5": [[614, "pyart-v1-11-5"]], "PyART v1.11.3": [[614, "pyart-v1-11-3"]], "PyART v1.11.2": [[614, "pyart-v1-11-2"]], "PyART v1.11.1": [[614, "pyart-v1-11-1"]], "PyART v1.11.0": [[614, "pyart-v1-11-0"]], "PyART v1.10.4": [[614, "pyart-v1-10-4"]], "PyART v1.10.3": [[614, "pyart-v1-10-3"]], "PyART v1.10.2": [[614, "pyart-v1-10-2"]], "PyART v1.10.1": [[614, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[614, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[614, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[614, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[614, "pyart-v1-8-0"]], "PyART v1.7.0": [[614, "pyart-v1-7-0"]], "PyART v1.6.0": [[614, "pyart-v1-6-0"]], "PyART v1.5.0": [[614, "pyart-v1-5-0"]], "PyART v1.4.0": [[614, "pyart-v1-4-0"]], "PyART v1.3.0": [[614, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[615, "contributor-s-guide"], [680, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[615, "the-python-arm-radar-toolkit-py-art"], [680, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[615, "important-links"], [680, "important-links"]], "Citing": [[615, "citing"], [680, "citing"]], "Install": [[615, "install"], [669, "install"], [680, "install"]], "Resources": [[615, "resources"], [680, "resources"]], "Code Style": [[615, "code-style"], [680, "code-style"]], "Python File Setup": [[615, "python-file-setup"], [680, "python-file-setup"]], "Testing": [[615, "testing"], [680, "testing"]], "GitHub": [[615, "github"], [680, "github"]], "Py-ART Continuous Integration Setup": [[616, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[617, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[617, "make-the-tagged-git-release"]], "Prepare the release notes": [[617, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[617, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[617, "documentation"]], "Create conda packages on conda-forge": [[617, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[617, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[618, "developer-s-guide"]], "Versions": [[618, "versions"]], "Moment correction examples": [[619, "moment-correction-examples"], [623, "moment-correction-examples"]], "Correct reflectivity attenuation": [[620, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[621, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[622, "computation-times"], [627, "computation-times"], [633, "computation-times"], [652, "computation-times"], [662, "computation-times"], [663, "computation-times"], [668, "computation-times"], [678, "computation-times"]], "Example Gallery": [[623, "example-gallery"]], "Input/Output Examples": [[623, "input-output-examples"], [624, "input-output-examples"]], "Mapping examples": [[623, "mapping-examples"], [628, "mapping-examples"]], "Plotting examples": [[623, "plotting-examples"], [634, "plotting-examples"]], "Retrieval Examples": [[623, "retrieval-examples"], [653, "retrieval-examples"]], "Xradar Examples": [[623, "xradar-examples"], [664, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[625, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[625, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[625, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[626, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[626, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[629, "compare-two-radars-using-gatemapper"]], "Map a single PPI sweep to a Cartesian grid using 2D weighting": [[630, "map-a-single-ppi-sweep-to-a-cartesian-grid-using-2d-weighting"]], "Map a single radar to a Cartesian grid": [[631, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[632, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[635, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[636, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[637, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[638, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[639, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[640, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[641, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[642, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[643, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[644, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [645, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[646, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [647, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[648, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[649, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[650, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[651, "plot-a-cross-section-from-a-ppi-volume"]], "Creating a CFAD diagram": [[654, "creating-a-cfad-diagram"]], "Velocity example": [[654, "velocity-example"]], "Validation": [[654, "validation"]], "Extract a radar column above a point": [[655, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[656, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[657, "convective-stratiform-classification"]], "How the algorithm works": [[657, "how-the-algorithm-works"], [658, "how-the-algorithm-works"]], "Examples": [[657, "examples"]], "Summary of recommendations and best practices": [[657, "summary-of-recommendations-and-best-practices"], [658, "summary-of-recommendations-and-best-practices"]], "References": [[657, "references"], [658, "references"]], "Feature Detection classification": [[658, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[658, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[658, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[659, "calculate-and-plot-hydrometeor-classification"]], "Hydrometeor Classification with Custom Frequency Settings": [[660, "hydrometeor-classification-with-custom-frequency-settings"]], "Calculate and Plot VAD profile": [[661, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[665, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[666, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[667, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[669, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[669, "what-is-py-art"]], "Citing Py-ART": [[669, "citing-py-art"]], "What can Py-ART do?": [[669, "what-can-py-art-do"]], "Short Courses": [[669, "short-courses"]], "Dependencies": [[669, "dependencies"]], "Optional Dependences": [[669, "optional-dependences"]], "Getting help": [[669, "getting-help"]], "Contributing": [[669, "contributing"]], "Notebook Gallery": [[670, "notebook-gallery"]], "Notebooks": [[670, null]], "Creating a basic ingest of a NetCDF file": [[671, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[672, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[673, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[675, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[676, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[677, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[679, "building-and-installing-py-art"]], "Required Dependencies": [[679, "required-dependencies"]], "Optional Dependencies": [[679, "optional-dependencies"]], "Obtaining the latest source": [[679, "obtaining-the-latest-source"]], "Installing from Source": [[679, "installing-from-source"]], "Frequently asked questions": [[679, "frequently-asked-questions"]], "User Guide": [[681, "user-guide"]], "Setting up an Environment": [[682, "setting-up-an-environment"]], "Anaconda": [[682, "anaconda"]], "Setting a Channel": [[682, "setting-a-channel"]], "Creating an Environment": [[682, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[682, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[682, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [127, "module-pyart.correct"], [171, "module-pyart.exceptions"], [172, "module-pyart.filters"], [207, "module-pyart.graph"], [364, "module-pyart.io"], [385, "module-pyart.lazydict"], [409, "module-pyart.map"], [422, "module-pyart.retrieve"], [464, "module-pyart.testing"], [567, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[121, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[123, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[124, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[126, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[127, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[128, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[141, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[142, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[144, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[145, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[155, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[156, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[157, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[158, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[159, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[160, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[161, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[162, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[163, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[164, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[165, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[166, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[167, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[168, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[169, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[170, "pyart.correct.phase_proc_lp_gf"]], "pyart.exceptions": [[171, "module-pyart.exceptions"]], "pyart.filters": [[172, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[173, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.filters.gatefilter method)": [[184, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[189, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[190, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[198, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[199, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[200, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[201, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[202, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[203, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[204, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[205, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[206, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[207, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[208, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[210, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[215, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[216, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[220, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[221, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[233, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[234, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[235, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[236, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[237, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[238, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[254, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[255, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[256, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[257, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[258, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[268, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[270, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[271, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[275, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[276, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[281, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[285, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[286, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[290, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[291, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[292, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[293, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[294, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[295, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[296, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[297, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[299, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[300, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[301, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[304, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[305, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[314, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[315, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[325, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[326, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[327, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[328, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[329, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[330, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[332, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[333, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[334, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[338, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[342, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[361, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[362, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[363, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[364, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[365, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[366, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[367, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[368, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[369, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[370, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[371, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[372, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[373, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[374, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[375, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[376, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[377, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[378, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[379, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[380, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[381, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[382, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[383, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[384, "pyart.io.write_uf"]], "pyart.lazydict": [[385, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[386, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[394, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[395, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[396, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[397, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[398, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[399, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[400, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[401, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[402, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[403, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[404, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[405, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[406, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[407, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[408, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[409, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[410, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[411, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[412, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[413, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[414, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[415, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[416, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[417, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[418, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[419, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[420, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[421, "pyart.map.map_to_grid"]], "pyart.retrieve": [[422, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[423, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[424, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[425, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[426, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[427, "pyart.retrieve.compute_cdr"]], "compute_evp() (in module pyart.retrieve)": [[428, "pyart.retrieve.compute_evp"]], "compute_l() (in module pyart.retrieve)": [[429, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[430, "pyart.retrieve.compute_noisedBZ"]], "compute_qvp() (in module pyart.retrieve)": [[431, "pyart.retrieve.compute_qvp"]], "compute_rqvp() (in module pyart.retrieve)": [[432, "pyart.retrieve.compute_rqvp"]], "compute_snr() (in module pyart.retrieve)": [[433, "pyart.retrieve.compute_snr"]], "compute_svp() (in module pyart.retrieve)": [[434, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[435, "pyart.retrieve.compute_ts_along_coord"]], "compute_vp() (in module pyart.retrieve)": [[436, "pyart.retrieve.compute_vp"]], "conv_strat_raut() (in module pyart.retrieve)": [[437, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[438, "pyart.retrieve.conv_strat_yuter"]], "create_cfad() (in module pyart.retrieve)": [[439, "pyart.retrieve.create_cfad"]], "dealias_spectra() (in module pyart.retrieve)": [[440, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[441, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[442, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[443, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[444, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[445, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[446, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[447, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[448, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[449, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[450, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[451, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[452, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[453, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[454, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[455, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[456, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[457, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[458, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[459, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[460, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[461, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[462, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[463, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[464, "module-pyart.testing"]], "grid (class in pyart.testing)": [[465, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[466, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[467, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[468, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[469, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[470, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[471, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[472, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[473, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[474, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[475, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[476, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[477, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[478, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[479, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[480, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[481, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[482, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[483, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[484, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[491, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[492, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[493, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[494, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[495, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[496, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[497, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[498, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[499, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[500, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[501, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[502, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[503, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[504, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[505, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[506, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[507, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[508, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[509, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[510, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[511, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[512, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[513, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[514, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[515, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[516, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[517, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[518, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[519, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[520, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[521, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[522, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[523, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[524, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[525, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[526, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[527, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[528, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[529, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[530, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[531, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[532, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[533, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[534, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[535, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[536, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[537, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[538, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[539, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[540, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[541, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[542, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[543, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[544, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[545, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[546, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[547, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[548, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[549, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[550, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[551, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[552, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[553, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[554, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[555, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[556, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[557, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[558, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[559, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[560, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[561, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[562, "pyart.testing.make_target_radar"]], "make_target_rhi_radar() (in module pyart.testing)": [[563, "pyart.testing.make_target_rhi_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[564, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[565, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[566, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[567, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[568, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[569, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[570, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[571, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[572, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[573, "pyart.util.column_vertical_profile"]], "compute_directional_stats() (in module pyart.util)": [[574, "pyart.util.compute_directional_stats"]], "cross_section_ppi() (in module pyart.util)": [[575, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[576, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[577, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[578, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[579, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[580, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[581, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[582, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[583, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[584, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[585, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[586, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[587, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[588, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[589, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[590, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[591, "pyart.util.join_radar"]], "ma_broadcast_to() (in module pyart.util)": [[592, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[593, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[594, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[595, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[596, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[597, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[598, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[599, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[600, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[601, "pyart.util.to_vpt"]]}})