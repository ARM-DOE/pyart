Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_last_gates", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_last_gates", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.create_cfad", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_rhi_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/2024/epcape-blog-post", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_grid_single_sweep_ppi", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_cfad", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_last_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_last_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.create_cfad.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_rhi_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/2024/epcape-blog-post.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_grid_single_sweep_ppi.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_cfad.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_last_gates", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_last_gates", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_snr", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.create_cfad", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_rhi_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Investigating ARM Scanning Cloud Radar Data from EPCAPE", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single PPI sweep to a Cartesian grid using 2D weighting", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Creating a CFAD diagram", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"stream": [0, 62, 366, 485], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 200, 201, 202, 203, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 386, 394, 397, 398, 404, 407, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 466, 468, 471, 479, 480, 497, 565, 566, 577, 585, 587, 595, 597, 599, 600, 602, 603, 625, 634, 645, 646, 664, 667], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 214, 216, 217, 218, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 315, 316, 317, 319, 320, 327, 348, 349, 350, 352, 353, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 387, 392, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 595, 596, 597, 599, 602, 603, 605, 608, 609, 611, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656, 658, 659, 660, 662, 663, 664, 667, 669], "print": [0, 62, 156, 167, 168, 235, 251, 375, 444, 445, 449, 485, 593, 595, 596, 600, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 645, 646, 659, 663, 664], "out": [0, 62, 164, 168, 200, 203, 377, 378, 379, 380, 381, 423, 440, 485, 595, 596, 597, 599, 600, 602, 603, 619, 620, 624, 635, 644, 647, 656, 662, 666, 667, 668], "version": [0, 12, 31, 204, 409, 456, 558, 593, 594, 601, 602, 603, 605, 656, 664, 666, 667, 669], "statu": [0, 594, 603, 667], "inform": [0, 24, 31, 45, 62, 74, 141, 153, 156, 161, 167, 168, 185, 197, 219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 366, 367, 375, 378, 444, 445, 451, 456, 468, 485, 497, 593, 597, 600, 601, 602, 603, 606, 614, 635, 656, 667], "debug": [0, 156, 161, 167, 168, 235, 251, 375, 445, 602], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 121, 123, 124, 131, 136, 141, 142, 143, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 175, 180, 185, 186, 187, 200, 201, 202, 203, 218, 244, 278, 294, 307, 319, 327, 340, 352, 360, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 394, 396, 404, 407, 409, 415, 416, 417, 418, 422, 423, 428, 429, 430, 439, 440, 445, 446, 447, 451, 453, 456, 458, 468, 470, 471, 474, 475, 477, 479, 480, 481, 497, 550, 563, 564, 572, 573, 577, 580, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 613, 614, 617, 618, 619, 623, 624, 625, 626, 629, 635, 642, 643, 645, 646, 652, 656, 658, 659, 660, 662, 663, 664, 666, 667, 669], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 156, 157, 158, 161, 162, 163, 166, 167, 168, 200, 201, 202, 203, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 421, 429, 439, 444, 445, 446, 447, 448, 451, 452, 455, 465, 468, 485, 497, 543, 585, 593, 594, 596, 597, 599, 600, 602, 605, 608, 610, 611, 613, 614, 615, 618, 619, 621, 622, 623, 626, 628, 631, 637, 638, 639, 640, 644, 645, 646, 647, 648, 649, 650, 653, 654, 655, 656, 657, 663, 664, 665, 666, 669], "can": [0, 12, 16, 29, 45, 54, 57, 74, 121, 123, 124, 127, 141, 153, 157, 158, 161, 164, 166, 171, 185, 197, 200, 201, 202, 203, 218, 278, 307, 340, 362, 369, 370, 372, 375, 379, 380, 381, 417, 418, 430, 439, 444, 445, 446, 447, 449, 454, 468, 477, 480, 497, 593, 594, 595, 596, 597, 599, 600, 602, 603, 605, 613, 614, 617, 623, 642, 643, 645, 646, 652, 658, 659, 660, 662, 663, 664, 666, 667, 669], "run": [0, 231, 429, 439, 455, 572, 594, 596, 602, 603, 604, 605, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656, 666, 667, 669], "script": [0, 29, 600, 602, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 122, 125, 127, 131, 133, 141, 142, 148, 153, 156, 157, 158, 160, 161, 162, 163, 166, 167, 168, 170, 171, 175, 177, 185, 186, 192, 197, 200, 201, 202, 203, 205, 219, 220, 221, 226, 229, 230, 231, 232, 235, 243, 244, 246, 248, 250, 251, 257, 258, 260, 262, 264, 265, 279, 280, 281, 286, 289, 290, 291, 294, 308, 309, 310, 316, 318, 319, 322, 323, 324, 327, 341, 342, 343, 349, 351, 352, 355, 356, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 392, 394, 397, 404, 406, 409, 411, 412, 413, 417, 418, 421, 422, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 456, 459, 464, 468, 470, 473, 477, 478, 479, 480, 497, 550, 563, 564, 565, 566, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585, 594, 596, 597, 599, 602, 603, 605, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 628, 631, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 658, 662, 663, 664, 665, 667, 669], "directori": [0, 29, 466, 591, 593, 594, 600, 601, 602, 603, 613, 666, 667], "report": [0, 1, 294, 327, 374, 454, 599, 602, 656], "dependeci": 0, "befor": [0, 31, 56, 161, 165, 168, 407, 429, 439, 453, 456, 479, 595, 596, 597, 603, 617, 645, 656, 660, 664, 667], "build": [0, 121, 123, 124, 127, 131, 133, 141, 148, 153, 171, 175, 177, 185, 192, 197, 381, 595, 599, 602, 603, 605, 656, 667, 668], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 121, 122, 123, 124, 125, 127, 136, 141, 153, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 171, 180, 185, 197, 200, 201, 202, 203, 205, 207, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 298, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 321, 322, 323, 324, 326, 327, 329, 331, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 407, 414, 415, 416, 417, 418, 420, 421, 423, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 468, 470, 477, 479, 480, 497, 550, 558, 563, 564, 565, 566, 572, 573, 580, 585, 587, 588, 589, 590, 594, 598, 599, 601, 602, 603, 604, 605, 607, 608, 610, 611, 612, 613, 614, 616, 621, 622, 623, 624, 626, 629, 630, 632, 633, 634, 635, 636, 640, 642, 643, 645, 646, 651, 655, 656, 658, 659, 660, 662, 663, 664, 665, 666, 667, 669], "python": [0, 29, 379, 444, 593, 595, 596, 597, 599, 600, 601, 602, 605, 608, 609, 611, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 658, 659, 660, 662, 663, 664, 666, 669], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 200, 201, 202, 203, 219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 294, 308, 310, 318, 319, 323, 324, 327, 341, 343, 351, 352, 356, 357, 367, 368, 369, 370, 374, 376, 379, 406, 421, 422, 428, 429, 439, 442, 443, 444, 445, 446, 447, 448, 451, 452, 456, 468, 497, 548, 558, 564, 575, 576, 585, 591, 596, 597, 599, 601, 606, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 651, 655, 657, 658, 659, 660, 662, 665, 668, 669], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 141, 148, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 175, 177, 185, 192, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 465, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 485, 497, 500, 542, 543, 544, 545, 546, 547, 548, 559, 560, 561, 562, 563, 564, 565, 566, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 589, 590, 593, 595, 596, 600, 602, 603, 638, 645, 646, 659, 660, 662, 664, 666, 667], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 121, 122, 124, 125, 162, 163, 362, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 388, 389, 399, 400, 423, 485, 553, 554, 555, 556, 557, 559, 560, 561, 562, 573, 578, 595, 596, 597, 600, 601, 602, 603, 613, 614, 617, 642, 656, 658, 660, 662, 667], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 127, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 200, 201, 202, 203, 205, 220, 235, 243, 246, 251, 258, 265, 280, 294, 309, 319, 327, 342, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 388, 389, 392, 395, 399, 400, 405, 407, 414, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 449, 450, 452, 453, 454, 455, 456, 457, 464, 465, 469, 470, 471, 473, 474, 475, 477, 485, 494, 522, 540, 544, 545, 546, 547, 550, 564, 572, 573, 575, 576, 577, 580, 581, 584, 587, 589, 590, 593, 594, 596, 597, 599, 602, 603, 613, 617, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 638, 643, 645, 646, 647, 656, 657, 658, 662, 663, 667], "sy": 0, "stdout": [0, 62, 485], "descript": [1, 16, 18, 30, 126, 169, 170, 204, 361, 382, 406, 419, 455, 558, 585, 597, 603, 605, 642, 656, 667], "addit": [1, 2, 7, 8, 12, 14, 19, 161, 162, 163, 165, 218, 219, 226, 230, 231, 232, 244, 246, 247, 248, 249, 250, 260, 261, 262, 263, 264, 278, 279, 286, 290, 291, 307, 308, 315, 316, 317, 318, 319, 320, 323, 324, 340, 341, 348, 349, 350, 351, 352, 353, 356, 357, 360, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 407, 414, 415, 416, 418, 429, 439, 577, 593, 595, 596, 602, 605, 611, 613, 641, 645, 646, 656], "class": [1, 18, 19, 30, 31, 41, 45, 74, 126, 127, 170, 171, 204, 205, 235, 246, 251, 265, 294, 319, 327, 382, 383, 396, 406, 407, 408, 410, 417, 444, 455, 456, 466, 468, 497, 591, 595, 596, 597, 602, 603, 656, 662, 663, 667], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 126, 158, 165, 166, 170, 200, 201, 202, 203, 204, 218, 219, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 278, 279, 286, 290, 291, 294, 307, 308, 318, 323, 324, 327, 340, 341, 351, 356, 357, 360, 361, 363, 366, 369, 370, 376, 379, 406, 407, 411, 412, 413, 415, 416, 417, 418, 419, 423, 428, 429, 430, 439, 445, 447, 453, 455, 479, 558, 564, 576, 577, 580, 584, 585, 590, 591, 596, 597, 600, 602, 603, 623, 642, 643, 645, 646, 652, 656, 660, 662, 664, 666, 667], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 127, 142, 143, 171, 186, 187, 219, 230, 279, 290, 308, 323, 341, 356, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 593, 599, 602, 608, 609, 611, 612, 615, 617, 618, 619, 620, 623, 624, 625, 626, 629, 631, 634, 635, 637, 638, 639, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656, 658, 659, 660, 662, 663, 664, 665], "write": [1, 15, 361, 377, 378, 379, 380, 381, 455, 466, 601, 602, 611, 612, 659], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 131, 141, 153, 159, 160, 161, 162, 163, 175, 185, 197, 205, 219, 221, 226, 229, 230, 231, 232, 235, 244, 246, 248, 250, 251, 260, 262, 264, 265, 279, 281, 286, 289, 290, 291, 294, 308, 310, 318, 319, 322, 323, 324, 327, 341, 343, 351, 352, 355, 356, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 406, 407, 414, 415, 416, 418, 420, 423, 428, 430, 431, 434, 439, 440, 444, 445, 446, 447, 449, 450, 451, 454, 456, 457, 468, 469, 470, 473, 474, 475, 477, 478, 479, 480, 481, 490, 491, 493, 497, 518, 519, 521, 543, 548, 550, 572, 577, 587, 590, 602, 603, 608, 609, 611, 612, 615, 617, 618, 619, 620, 622, 623, 624, 625, 626, 628, 629, 631, 632, 633, 634, 635, 637, 639, 641, 642, 643, 645, 646, 648, 651, 652, 654, 655, 656, 657, 658, 659, 660, 664, 665, 667], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 136, 156, 157, 158, 161, 162, 164, 165, 167, 168, 180, 218, 222, 226, 227, 229, 230, 231, 232, 244, 278, 282, 286, 287, 289, 290, 291, 307, 311, 318, 319, 320, 322, 323, 324, 340, 344, 351, 352, 353, 355, 356, 357, 361, 366, 373, 379, 380, 414, 417, 418, 426, 430, 443, 445, 447, 456, 468, 474, 475, 477, 478, 479, 480, 481, 497, 544, 545, 546, 547, 548, 564, 572, 573, 590, 593, 596, 597, 599, 603, 605, 606, 623, 625, 642, 656, 664, 667], "format": [1, 12, 13, 39, 40, 45, 74, 207, 209, 219, 221, 226, 229, 230, 231, 232, 267, 269, 279, 281, 286, 289, 290, 291, 296, 298, 308, 310, 318, 319, 322, 323, 324, 329, 331, 341, 343, 351, 352, 355, 356, 357, 361, 363, 372, 374, 376, 377, 378, 380, 464, 465, 468, 497, 593, 595, 596, 597, 600, 602, 603, 605, 635, 656, 658, 667], "These": [1, 29, 127, 161, 171, 257, 379, 418, 595, 600, 603, 613, 623, 645, 656, 663, 666, 667], "auxiliari": 1, "input": [1, 167, 168, 379, 415, 416, 439, 443, 444, 447, 572, 577, 593, 595, 602, 645, 646, 663], "output": [1, 13, 62, 160, 379, 415, 423, 428, 444, 485, 574, 594, 596, 599, 600, 602, 656], "routin": [1, 12, 170, 377, 417, 602, 656], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 122, 125, 141, 153, 156, 157, 158, 161, 162, 163, 165, 166, 168, 170, 185, 197, 200, 201, 202, 203, 204, 219, 225, 226, 230, 231, 232, 244, 246, 248, 250, 257, 260, 262, 264, 279, 285, 286, 290, 291, 308, 314, 315, 316, 317, 318, 319, 320, 323, 324, 341, 347, 348, 349, 350, 351, 352, 353, 356, 357, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 385, 413, 414, 417, 418, 420, 422, 423, 428, 429, 430, 432, 433, 434, 436, 437, 439, 445, 447, 451, 456, 468, 479, 481, 497, 545, 546, 547, 565, 566, 573, 574, 578, 579, 586, 590, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 605, 609, 611, 613, 614, 617, 618, 623, 625, 626, 634, 637, 642, 643, 645, 646, 656, 658, 659, 660, 662, 663, 664, 666, 667, 669], "well": [1, 164, 166, 200, 201, 202, 203, 352, 371, 373, 418, 593, 595, 600, 602, 603, 614, 624, 646, 656, 662, 663, 667], "polish": 1, "those": [1, 48, 55, 142, 143, 162, 163, 186, 187, 375, 417, 418, 471, 478, 591, 597, 599, 642, 669], "io": [1, 127, 171, 414, 593, 594, 595, 596, 597, 599, 600, 602, 603, 608, 609, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656, 659, 660, 662, 663, 664, 665, 666, 667, 669], "thei": [1, 4, 58, 131, 133, 141, 161, 162, 163, 165, 175, 177, 185, 352, 367, 375, 381, 428, 445, 481, 597, 599, 603, 645, 667], "mai": [1, 29, 131, 133, 141, 148, 153, 161, 162, 175, 177, 185, 192, 197, 294, 327, 371, 373, 379, 383, 418, 428, 447, 558, 597, 599, 605, 645, 656], "requir": [1, 31, 45, 74, 121, 123, 124, 161, 164, 165, 375, 379, 415, 416, 418, 453, 456, 468, 497, 573, 593, 594, 602, 603, 614, 656, 667, 669], "depend": [1, 157, 158, 415, 418, 433, 593, 597, 602, 603, 605, 667], "beyond": [1, 666], "standard": [1, 40, 45, 62, 74, 119, 120, 161, 366, 377, 378, 379, 423, 446, 465, 468, 485, 497, 548, 561, 562, 579, 593, 597, 602, 603, 658, 659, 660, 667], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 200, 201, 202, 203, 219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 294, 308, 310, 318, 319, 323, 324, 327, 341, 343, 351, 352, 356, 357, 367, 368, 369, 370, 374, 376, 379, 406, 421, 422, 428, 429, 439, 442, 443, 444, 445, 446, 447, 448, 451, 452, 456, 468, 497, 548, 558, 564, 575, 576, 585, 591, 597, 599, 606, 608, 609, 611, 612, 613, 614, 622, 623, 625, 643, 646, 651, 655, 657, 658, 659, 660, 662, 665, 668, 669], "instal": [1, 10, 121, 123, 124, 164, 165, 379, 596, 599, 602, 605, 668, 669], "non": [1, 121, 123, 124, 163, 375, 377, 428, 429, 439, 445, 447, 597, 602, 645], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 131, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 200, 201, 202, 203, 204, 219, 221, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 289, 290, 291, 308, 310, 318, 319, 322, 323, 324, 341, 343, 351, 352, 355, 356, 357, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 444, 445, 446, 447, 448, 451, 452, 456, 457, 468, 469, 470, 472, 477, 485, 497, 500, 543, 558, 577, 585, 589, 593, 596, 597, 599, 600, 601, 602, 613, 646, 659, 664], "support": [1, 246, 319, 352, 363, 370, 371, 372, 373, 374, 382, 383, 407, 445, 595, 597, 599, 602, 603, 634, 656, 658, 659, 660, 662, 663, 664, 666, 667], "fulli": [1, 369, 599, 666], "test": [1, 12, 161, 366, 371, 373, 383, 594, 597, 602, 604, 605, 608, 609, 617, 619, 620, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 652, 653, 654, 656, 658], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 127, 130, 138, 141, 145, 150, 153, 161, 162, 163, 165, 166, 167, 168, 171, 174, 182, 185, 189, 194, 197, 202, 219, 225, 226, 229, 230, 231, 232, 246, 279, 285, 286, 289, 290, 291, 308, 314, 318, 319, 322, 323, 324, 341, 347, 351, 352, 355, 356, 357, 360, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 384, 396, 397, 414, 415, 416, 417, 418, 422, 428, 429, 439, 440, 443, 445, 447, 456, 458, 468, 471, 479, 480, 497, 573, 591, 593, 594, 595, 596, 597, 598, 602, 603, 605, 611, 623, 642, 643, 644, 645, 648, 656, 664, 665, 667, 669], "pleas": [1, 56, 294, 327, 479, 593, 594, 597, 599, 600, 603, 656, 658, 659, 660, 662, 663, 664, 667], "your": [1, 219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 595, 596, 597, 601, 603, 605, 611, 622, 624, 640, 645, 646, 656, 665, 666, 667, 669], "own": [1, 12, 596, 600, 605, 623, 656, 666], "risk": [1, 595], "bug": [1, 596, 603, 606, 656, 666, 667], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 127, 131, 142, 143, 160, 161, 162, 163, 168, 171, 175, 186, 187, 205, 245, 259, 319, 352, 360, 361, 362, 375, 378, 380, 381, 415, 416, 417, 418, 429, 439, 445, 446, 447, 449, 451, 453, 454, 456, 468, 470, 477, 497, 572, 573, 597, 601, 602, 603, 605, 623, 645, 656, 666, 667, 669], "fix": [1, 593, 596, 603, 604, 606, 611, 612, 615, 637, 658, 665, 666, 667, 669], "them": [1, 4, 5, 6, 56, 161, 162, 163, 164, 235, 251, 319, 352, 366, 375, 418, 479, 596, 600, 603, 605, 623, 656, 667, 669], "prioriti": [1, 669], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 207, 239, 252, 267, 296, 319, 329, 352, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 465, 593, 594, 595, 597, 602, 603, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 667], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 159, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 457, 469, 470, 472, 477, 493, 500, 521, 587, 617, 662], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 129, 131, 133, 140, 141, 142, 143, 144, 146, 148, 153, 154, 156, 161, 162, 163, 167, 168, 171, 173, 175, 177, 184, 185, 186, 187, 188, 190, 192, 197, 198, 207, 219, 221, 226, 229, 230, 231, 232, 235, 244, 246, 248, 250, 251, 257, 260, 262, 264, 267, 279, 281, 286, 289, 290, 291, 296, 308, 310, 318, 319, 322, 323, 324, 329, 341, 343, 351, 352, 355, 356, 357, 360, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 387, 417, 418, 422, 428, 429, 433, 436, 439, 445, 446, 447, 449, 457, 458, 465, 466, 469, 470, 471, 474, 475, 477, 479, 480, 481, 556, 557, 567, 568, 569, 570, 571, 572, 580, 590, 593, 595, 596, 597, 599, 602, 603, 625, 632, 634, 635, 637, 645, 646, 658, 659, 663, 664, 667], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 471, 602], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 161, 162, 163, 218, 219, 220, 226, 230, 231, 232, 244, 246, 247, 248, 249, 250, 257, 260, 261, 262, 263, 264, 278, 279, 280, 286, 290, 291, 307, 308, 309, 315, 316, 317, 318, 319, 320, 323, 324, 340, 341, 342, 348, 349, 350, 351, 352, 353, 356, 357, 363, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 414, 415, 416, 417, 418, 445, 567, 568, 569, 570, 571, 596, 597, 600, 602], "d3r": [2, 602], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 364, 365, 366, 368, 372, 377, 378, 440, 465, 567, 570, 593, 600, 602, 656, 657], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 34, 40, 45, 46, 47, 49, 54, 74, 77, 121, 123, 124, 131, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 409, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 451, 452, 456, 457, 459, 465, 468, 469, 470, 472, 477, 497, 500, 543, 577, 585, 587, 589, 595, 597, 599, 600, 602], "odim_h5": [2, 8, 602], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 121, 123, 124, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 205, 265, 294, 319, 327, 362, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 383, 417, 418, 422, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 445, 446, 447, 448, 450, 451, 452, 456, 457, 459, 464, 468, 469, 497, 585, 593, 597, 658], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 122, 123, 125, 127, 131, 133, 141, 148, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 171, 175, 177, 185, 192, 197, 219, 226, 230, 231, 232, 234, 244, 246, 248, 250, 257, 260, 262, 264, 279, 286, 290, 291, 293, 308, 316, 317, 318, 319, 320, 323, 324, 326, 341, 349, 350, 351, 352, 356, 357, 359, 360, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 418, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 454, 456, 457, 458, 465, 468, 469, 470, 471, 474, 475, 477, 479, 480, 485, 497, 565, 566, 573, 580, 585, 589, 590, 596, 597, 602, 645, 664], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 121, 123, 124, 156, 157, 158, 161, 162, 163, 164, 165, 167, 168, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 385, 387, 414, 417, 418, 421, 422, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 448, 450, 451, 452, 456, 457, 468, 469, 470, 472, 497, 500, 542, 585, 614, 646, 659, 664], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 122, 125, 224, 246, 257, 284, 294, 313, 315, 316, 317, 319, 320, 327, 346, 348, 349, 350, 352, 353, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 394, 404, 423, 448, 456, 468, 497, 593, 595, 596, 597, 599, 602, 603, 617, 621, 622, 624, 625, 640, 643, 645, 646, 653, 656, 657, 665, 667], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 144, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 218, 219, 220, 221, 226, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 278, 279, 280, 281, 286, 289, 290, 291, 294, 295, 296, 297, 298, 299, 304, 307, 308, 309, 310, 318, 319, 322, 323, 324, 327, 328, 329, 330, 331, 332, 337, 340, 341, 342, 343, 351, 352, 355, 356, 357, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 409, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 464, 468, 469, 470, 471, 472, 477, 480, 493, 497, 500, 521, 544, 545, 546, 547, 548, 550, 553, 554, 555, 556, 557, 563, 564, 576, 577, 585, 587, 588, 589, 593, 595, 596, 597, 599, 600, 602, 603, 608, 611, 613, 617, 618, 619, 620, 623, 624, 626, 637, 641, 642, 643, 644, 645, 646, 647, 652, 654, 656, 657, 658, 660, 662, 663, 664, 667], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 126, 127, 141, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 185, 197, 200, 201, 202, 203, 204, 205, 218, 219, 224, 226, 230, 231, 232, 248, 250, 260, 262, 264, 265, 278, 279, 284, 286, 290, 291, 294, 307, 308, 313, 316, 318, 319, 323, 324, 327, 340, 341, 346, 349, 351, 352, 356, 357, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 406, 407, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 464, 497, 540, 545, 546, 547, 550, 553, 554, 555, 556, 557, 564, 565, 566, 569, 571, 572, 574, 575, 576, 577, 580, 581, 585, 586, 587, 588, 589, 590, 593, 594, 597, 599, 602, 607, 608, 609, 611, 612, 613, 614, 616, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 652, 653, 654, 657, 658, 660, 662, 663, 665, 668], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 121, 123, 124, 141, 153, 159, 161, 164, 165, 166, 185, 197, 201, 202, 207, 209, 219, 220, 225, 226, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 257, 258, 259, 260, 261, 262, 263, 264, 267, 269, 279, 280, 285, 286, 290, 291, 296, 298, 308, 309, 314, 317, 318, 319, 323, 324, 329, 331, 341, 342, 347, 350, 351, 352, 356, 357, 360, 363, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 390, 394, 401, 404, 418, 422, 428, 429, 430, 432, 433, 434, 436, 437, 439, 440, 444, 445, 446, 447, 448, 451, 456, 457, 468, 470, 471, 472, 479, 497, 500, 563, 565, 566, 573, 587, 594, 596, 597, 598, 599, 600, 603, 605, 645, 656, 658, 659, 660, 662, 663, 664, 666, 667, 669], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 162, 163, 205, 265, 294, 327, 363, 367, 369, 370, 371, 372, 374, 375, 376, 380, 381, 428, 433, 445, 468, 497, 540, 572, 594, 597, 600, 602, 603, 646, 656, 664, 667], "found": [2, 7, 8, 12, 14, 29, 158, 164, 363, 367, 369, 370, 371, 372, 374, 375, 376, 390, 401, 414, 417, 418, 423, 440, 593, 595, 597, 599, 600, 602, 603, 605, 614, 656, 666, 667, 669], "doe": [2, 7, 8, 12, 14, 49, 77, 121, 123, 124, 161, 162, 163, 219, 221, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 289, 290, 291, 308, 310, 318, 319, 322, 323, 324, 341, 343, 351, 352, 355, 356, 357, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 394, 404, 472, 500, 590, 595, 597, 602, 603, 605, 635, 658, 666, 667, 669], "appear": [2, 7, 8, 12, 14, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 580, 597, 600], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 160, 161, 207, 239, 251, 252, 267, 296, 327, 329, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 380, 387, 394, 404, 406, 430, 433, 436, 437, 468, 497, 550, 573, 589, 594, 596, 597, 599, 600, 603, 605, 613, 623, 645, 656, 662, 664, 666, 667, 669], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 121, 122, 123, 124, 125, 127, 129, 131, 132, 133, 135, 139, 141, 144, 146, 147, 148, 151, 153, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 175, 176, 177, 179, 183, 185, 188, 190, 191, 192, 195, 197, 199, 200, 201, 202, 203, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 243, 244, 246, 248, 250, 257, 258, 260, 262, 264, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 308, 309, 310, 312, 315, 316, 317, 318, 319, 321, 322, 323, 324, 341, 342, 343, 345, 348, 349, 350, 351, 352, 354, 355, 356, 357, 360, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 390, 391, 396, 401, 402, 417, 418, 420, 422, 423, 426, 428, 429, 430, 433, 436, 437, 439, 442, 444, 445, 446, 447, 451, 453, 456, 468, 471, 497, 545, 546, 547, 548, 563, 572, 573, 577, 578, 579, 593, 595, 596, 597, 600, 602, 603, 614, 617, 623, 626, 642, 643, 644, 645, 646, 652, 659, 660, 663, 667], "place": [2, 7, 8, 12, 14, 220, 224, 225, 243, 245, 258, 259, 280, 284, 285, 309, 313, 314, 342, 346, 347, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 590, 600, 602, 662, 666], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 122, 125, 127, 156, 157, 158, 161, 162, 163, 166, 167, 168, 171, 200, 201, 202, 203, 205, 235, 244, 251, 265, 294, 317, 327, 350, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 382, 383, 396, 414, 415, 416, 417, 418, 422, 423, 428, 429, 430, 432, 439, 444, 445, 446, 447, 449, 451, 452, 453, 454, 456, 468, 470, 497, 548, 564, 577, 593, 597, 600, 602, 603, 626, 642, 645, 646, 650, 656, 667], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 121, 122, 123, 124, 125, 127, 131, 133, 141, 148, 153, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 171, 175, 177, 185, 192, 197, 200, 201, 202, 203, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 226, 229, 230, 231, 232, 234, 243, 244, 246, 248, 250, 257, 258, 260, 262, 264, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 286, 289, 290, 291, 293, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 318, 319, 322, 323, 324, 326, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 351, 352, 355, 356, 357, 359, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 386, 398, 418, 420, 421, 423, 428, 429, 430, 433, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 456, 468, 474, 475, 477, 479, 480, 485, 497, 545, 546, 547, 572, 573, 585, 594, 595, 602, 603, 634, 635, 642, 645, 646, 656, 666, 667, 669], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 121, 123, 124, 156, 157, 158, 161, 164, 166, 167, 168, 200, 201, 202, 203, 224, 225, 229, 284, 285, 289, 313, 314, 322, 346, 347, 355, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 381, 417, 418, 422, 444, 445, 451, 456, 468, 497, 563, 564, 593, 596, 597, 600, 601, 602, 624, 625, 642, 643, 645], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 156, 157, 158, 161, 162, 163, 166, 167, 168, 200, 201, 202, 203, 219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 421, 429, 439, 444, 445, 446, 447, 448, 451, 452, 585, 593, 594, 597, 599, 602, 613, 617, 644, 652], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 456, 474, 475, 477, 478, 479, 480, 481, 564, 602, 603, 642, 644, 645, 646, 647, 648, 649, 652, 660, 665, 667], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 156, 157, 158, 161, 162, 163, 167, 168, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 380, 421, 423, 428, 445, 446, 447, 448, 452, 456, 457, 468, 469, 470, 497, 542, 544, 550, 585, 600, 601, 602, 614, 632, 633, 637, 664], "dure": [2, 7, 8, 12, 14, 19, 141, 153, 160, 161, 162, 163, 185, 197, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 429, 438, 445, 451, 593, 646, 666, 669], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 121, 122, 123, 124, 125, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 173, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 197, 198, 201, 202, 207, 209, 219, 220, 221, 224, 225, 226, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 257, 258, 259, 260, 261, 262, 263, 264, 267, 269, 279, 280, 281, 284, 285, 286, 289, 290, 291, 294, 296, 298, 308, 309, 310, 313, 314, 318, 319, 322, 323, 324, 327, 329, 331, 341, 342, 343, 346, 347, 351, 352, 355, 356, 357, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 390, 391, 394, 396, 401, 402, 404, 407, 414, 415, 416, 417, 418, 420, 422, 423, 428, 429, 430, 432, 433, 436, 437, 439, 440, 444, 445, 446, 447, 451, 453, 456, 457, 458, 468, 470, 471, 478, 479, 480, 481, 485, 497, 550, 563, 565, 566, 572, 573, 574, 577, 580, 586, 587, 589, 590, 591, 593, 595, 596, 597, 598, 599, 601, 602, 603, 605, 608, 613, 614, 617, 618, 623, 624, 625, 626, 629, 634, 635, 642, 643, 645, 646, 658, 659, 660, 662, 663, 664, 666, 667, 669], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 131, 133, 141, 142, 143, 148, 153, 156, 157, 158, 161, 162, 163, 164, 166, 167, 168, 175, 177, 185, 186, 187, 192, 197, 201, 202, 294, 327, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 415, 416, 418, 423, 430, 444, 469, 470, 544, 590, 594, 598, 600, 606, 642, 658], "success": [2, 7, 8, 12, 14, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 605], "unless": [2, 7, 8, 12, 14, 58, 121, 123, 124, 163, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 380, 481, 597], "explicitli": [2, 7, 8, 12, 14, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 415, 416], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 127, 131, 133, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 170, 171, 175, 177, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 219, 226, 230, 231, 232, 244, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 415, 416, 417, 418, 443, 453, 468, 473, 479, 480, 497, 564, 594, 596, 597, 599, 600, 601, 602, 603, 605, 613, 617, 637, 642, 656, 663, 666, 667], "introduct": [2, 7, 8, 12, 14, 363, 367, 369, 370, 371, 372, 373, 374, 375, 603, 667], "specif": [2, 7, 8, 12, 14, 141, 153, 156, 157, 158, 185, 197, 327, 352, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 418, 432, 433, 434, 436, 437, 440, 444, 445, 446, 447, 577, 595, 597, 600, 602, 603, 608, 623, 645, 646, 656, 667, 669], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 121, 123, 124, 131, 133, 148, 161, 162, 163, 170, 175, 177, 192, 219, 221, 226, 230, 231, 232, 244, 246, 247, 248, 249, 250, 257, 260, 261, 262, 263, 264, 279, 281, 286, 290, 291, 308, 310, 315, 316, 317, 318, 319, 320, 323, 324, 341, 343, 348, 349, 350, 351, 352, 353, 356, 357, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 390, 401, 407, 417, 418, 445, 446, 447, 456, 468, 471, 479, 480, 497, 585, 589, 595, 596, 597, 602, 609, 613, 662, 663, 666], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 131, 133, 141, 148, 153, 156, 161, 162, 163, 167, 168, 171, 175, 177, 185, 192, 197, 207, 209, 219, 221, 226, 229, 230, 231, 232, 235, 244, 246, 248, 250, 251, 257, 260, 262, 264, 267, 269, 279, 281, 286, 289, 290, 291, 296, 298, 308, 310, 318, 319, 322, 323, 324, 329, 331, 341, 343, 351, 352, 355, 356, 357, 360, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 414, 415, 418, 422, 428, 429, 433, 436, 437, 439, 445, 446, 447, 449, 451, 457, 458, 465, 469, 470, 471, 474, 475, 477, 479, 480, 481, 572, 580, 590, 597], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 123, 127, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 161, 162, 163, 167, 168, 171, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 207, 209, 219, 221, 226, 229, 230, 231, 232, 235, 244, 246, 248, 250, 251, 257, 260, 262, 264, 267, 269, 279, 281, 286, 289, 290, 291, 296, 298, 308, 310, 318, 319, 322, 323, 324, 329, 331, 341, 343, 351, 352, 355, 356, 357, 360, 362, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 387, 414, 415, 417, 418, 422, 428, 429, 433, 436, 437, 439, 445, 446, 447, 451, 456, 457, 458, 465, 466, 468, 469, 470, 471, 474, 475, 477, 479, 480, 481, 497, 556, 557, 572, 580, 590, 593, 594, 595, 596, 597, 599, 602, 603, 618, 625, 632, 633, 634, 635, 642, 645, 646, 648, 652, 659, 660, 664, 667], "mdv": [2, 8, 12, 14, 369, 370, 380, 594, 602, 609, 611, 619, 622, 640, 656, 660, 662, 665], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 121, 123, 124, 141, 153, 161, 163, 185, 197, 361, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 394, 404, 595, 596, 597, 599, 600, 602, 603, 613, 614, 617, 618, 635, 667], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 161, 162, 163, 219, 221, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 289, 290, 291, 308, 310, 318, 319, 322, 323, 324, 341, 343, 351, 352, 355, 356, 357, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 415, 416, 422, 593, 594, 595, 596, 597, 599, 600, 602, 608, 617], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 122, 125, 156, 157, 158, 159, 161, 162, 163, 164, 200, 203, 224, 244, 284, 313, 346, 352, 362, 363, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 407, 408, 409, 410, 414, 417, 418, 420, 422, 423, 426, 427, 428, 429, 439, 442, 444, 445, 446, 447, 451, 453, 456, 468, 497, 543, 558, 559, 560, 563, 572, 573, 578, 579, 585, 587, 589, 593, 594, 595, 596, 602, 605, 611, 614, 618, 626, 637, 642, 645, 646, 657, 660, 663, 666], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 142, 143, 156, 157, 158, 160, 161, 163, 167, 168, 186, 187, 219, 230, 246, 279, 290, 308, 319, 323, 341, 352, 356, 363, 367, 369, 370, 371, 372, 373, 374, 375, 415, 416, 418, 445, 453, 473, 479, 480, 565, 566, 580, 587, 593, 594, 595, 597, 599, 602, 603, 606, 617, 618, 625, 635, 645, 646, 659, 660, 662, 667], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 131, 133, 141, 148, 153, 156, 157, 158, 161, 175, 177, 185, 192, 197, 219, 230, 251, 279, 290, 308, 319, 323, 341, 356, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 429, 439, 442, 458, 468, 471, 479, 497, 548, 572, 593, 595, 596, 597, 598, 599, 600, 602, 603, 613, 614, 642, 643, 645, 646, 656, 662, 666, 667, 668, 669], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 121, 123, 124, 161, 162, 163, 319, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 385, 387, 390, 391, 392, 394, 396, 401, 402, 404, 417, 418, 440, 456, 457, 468, 469, 470, 497, 550, 595, 597, 600, 642, 658, 659, 663], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 205, 221, 225, 228, 251, 265, 281, 285, 288, 294, 310, 314, 321, 327, 343, 347, 354, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 409, 415, 416, 418, 430, 440, 443, 471, 564, 565, 566, 575, 596, 597, 599, 600, 601, 602, 603, 605, 613, 656, 667, 668], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 153, 156, 157, 158, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 194, 197, 200, 201, 202, 203, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 428, 445, 446, 447, 449, 453, 454, 471, 609, 619, 663], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 159, 162, 163, 165, 166, 167, 168, 201, 202, 219, 220, 226, 229, 230, 231, 232, 243, 258, 279, 280, 286, 289, 290, 291, 308, 309, 318, 319, 322, 323, 324, 341, 342, 351, 352, 355, 356, 357, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 407, 414, 418, 423, 429, 433, 439, 468, 471, 497, 573, 595, 596, 597, 599, 602, 603, 613, 623, 634, 645, 646, 652, 660, 667], "after": [2, 4, 5, 6, 7, 8, 12, 14, 161, 162, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 445, 593, 595, 597, 602, 603, 605, 614, 645, 666, 667, 669], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 121, 122, 123, 124, 125, 127, 131, 133, 141, 148, 153, 156, 157, 158, 161, 162, 163, 166, 167, 168, 171, 175, 177, 185, 192, 197, 200, 201, 202, 203, 219, 221, 226, 229, 230, 231, 232, 233, 234, 244, 246, 279, 281, 286, 289, 290, 291, 292, 293, 308, 310, 318, 319, 322, 323, 324, 325, 326, 341, 343, 351, 352, 355, 356, 357, 358, 359, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 388, 389, 392, 393, 399, 400, 403, 418, 428, 432, 433, 434, 436, 437, 445, 446, 447, 456, 468, 479, 480, 481, 497, 545, 546, 547, 556, 557, 563, 572, 582, 583, 594, 595, 600, 602, 603, 614, 617, 618, 624, 631, 634, 635, 638, 639, 642, 645, 646, 652, 656, 660, 666, 667, 668], "you": [2, 219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 444, 593, 596, 597, 598, 599, 601, 603, 605, 613, 645, 646, 656, 658, 659, 660, 662, 663, 664, 666, 667, 669], "want": [2, 594, 596, 597, 599, 614, 642, 656, 663, 664, 669], "altitud": [2, 31, 45, 56, 74, 167, 168, 205, 415, 418, 423, 430, 451, 456, 468, 479, 497, 574, 586, 593, 596, 602, 635, 642, 648, 658, 662, 664], "provid": [2, 6, 45, 48, 74, 161, 204, 225, 285, 314, 319, 347, 365, 366, 367, 372, 375, 379, 380, 381, 383, 388, 389, 395, 396, 399, 400, 405, 407, 468, 471, 497, 577, 585, 591, 593, 596, 597, 599, 600, 601, 603, 614, 643, 645, 656, 663, 666, 667], "np": [2, 407, 426, 454, 584, 593, 595, 596, 597, 599, 600, 602, 603, 617, 619, 623, 626, 631, 634, 635, 637, 642, 643, 645, 646, 647, 648, 658, 659, 660, 662, 663, 664, 667], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 141, 142, 143, 148, 153, 161, 162, 163, 165, 171, 175, 177, 185, 186, 187, 192, 197, 205, 219, 220, 221, 226, 230, 231, 232, 243, 244, 246, 248, 250, 257, 258, 260, 262, 264, 265, 279, 280, 281, 286, 290, 291, 294, 308, 309, 310, 315, 316, 318, 319, 323, 324, 327, 341, 342, 343, 348, 349, 351, 352, 356, 357, 407, 417, 418, 426, 429, 430, 431, 439, 444, 446, 447, 448, 453, 454, 456, 458, 464, 470, 474, 475, 477, 478, 479, 480, 481, 559, 560, 561, 562, 563, 570, 571, 573, 578, 579, 582, 583, 584, 593, 597, 602, 603, 617, 631, 642, 645, 646, 648, 658, 659, 660, 662, 663, 664, 667], "295": [2, 602], "dtype": [2, 414, 418, 593, 596, 597, 602, 658, 660, 664], "float64": [2, 417, 418, 593, 596, 643, 664], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 128, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 200, 201, 202, 203, 206, 207, 208, 209, 210, 239, 240, 241, 242, 252, 253, 254, 255, 266, 267, 268, 269, 270, 295, 296, 297, 298, 299, 328, 329, 330, 331, 332, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 385, 390, 391, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 459, 466, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 490, 491, 492, 493, 494, 495, 496, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 540, 542, 543, 544, 545, 546, 547, 548, 550, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 585, 586, 587, 589, 593, 595, 596, 597, 600, 602, 603, 643, 645, 646, 659, 662, 664, 667], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 200, 201, 202, 203, 219, 226, 229, 230, 231, 232, 234, 279, 286, 289, 290, 291, 293, 308, 318, 319, 322, 323, 324, 326, 341, 351, 352, 355, 356, 357, 359, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 396, 414, 415, 416, 417, 418, 420, 421, 422, 423, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 468, 469, 473, 474, 475, 477, 478, 479, 480, 481, 497, 563, 564, 565, 566, 572, 576, 585, 587, 590, 593, 594, 597, 602, 603, 614, 627, 628, 646, 656, 658, 659, 662, 664, 666, 667, 669], "edg": [3, 33, 57, 120, 123, 161, 162, 163, 164, 165, 219, 226, 230, 231, 232, 248, 250, 260, 262, 264, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 430, 443, 447, 458, 480, 548, 595, 596, 597, 634, 635, 645], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 381, 596, 602], "gamic": [4, 602], "hdf5": [4, 8, 602, 656], "unlik": [4, 5, 6, 366], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 161, 162, 163, 164, 165, 166, 202, 219, 221, 226, 229, 230, 231, 232, 246, 279, 281, 286, 289, 290, 291, 308, 310, 318, 319, 322, 323, 324, 341, 343, 351, 352, 355, 356, 357, 363, 366, 368, 371, 373, 375, 379, 407, 418, 429, 439, 449, 453, 456, 464, 468, 497, 545, 546, 547, 595, 596, 597, 600, 603, 642, 645, 646, 656, 658, 666, 667, 669], "still": [4, 5, 6, 161, 294, 327, 366, 381, 418, 580, 599, 600, 602, 603, 613, 667], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 127, 131, 133, 141, 148, 153, 161, 162, 163, 164, 166, 167, 168, 171, 175, 177, 185, 192, 197, 200, 201, 202, 203, 219, 220, 224, 225, 226, 229, 230, 231, 232, 235, 243, 246, 248, 250, 251, 257, 258, 260, 262, 264, 279, 280, 284, 285, 286, 289, 290, 291, 308, 309, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 362, 363, 365, 366, 371, 372, 375, 376, 378, 379, 380, 381, 383, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 440, 444, 445, 446, 447, 451, 452, 453, 456, 458, 468, 473, 477, 490, 491, 493, 494, 497, 518, 519, 521, 522, 563, 564, 565, 566, 573, 575, 576, 577, 578, 579, 585, 589, 593, 594, 595, 596, 597, 599, 600, 602, 603, 605, 609, 613, 614, 617, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 642, 643, 646, 652, 653, 654, 656, 660, 662, 664, 666, 667], "renam": [4, 5, 6, 29, 366, 376, 602], "uniform": [4, 5, 6, 58, 162, 163, 366, 374, 422, 428, 481, 602, 623, 626, 656, 658], "forc": [4, 5, 6, 366, 376, 422, 597, 602], "extract": [4, 219, 279, 308, 341, 375, 428, 440, 564, 565, 566, 576, 599, 602, 611, 617, 639, 641, 642, 645, 646, 649, 656, 665], "valid": [4, 31, 45, 74, 155, 156, 161, 199, 220, 243, 258, 280, 309, 342, 371, 380, 381, 415, 416, 418, 444, 456, 468, 497, 564, 565, 566, 573, 600, 602, 603, 618, 667], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 158, 205, 219, 221, 226, 227, 228, 230, 231, 232, 244, 246, 248, 250, 257, 260, 262, 264, 265, 279, 281, 286, 287, 288, 290, 291, 294, 308, 310, 318, 319, 320, 321, 323, 324, 327, 341, 343, 351, 352, 353, 354, 356, 357, 374, 415, 416, 418, 426, 428, 445, 447, 468, 478, 480, 497, 564, 572, 587, 593, 595, 596, 597, 602, 618, 623, 628, 631, 637, 648, 658, 664], "valid_min": [4, 161, 162, 163, 367, 602, 645, 646, 664], "valid_max": [4, 161, 162, 163, 367, 645, 646, 664], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 131, 133, 136, 141, 142, 143, 148, 153, 161, 162, 163, 167, 168, 175, 177, 180, 185, 186, 187, 192, 197, 219, 226, 230, 231, 232, 246, 251, 279, 286, 290, 291, 308, 318, 319, 323, 324, 327, 341, 351, 352, 356, 357, 371, 372, 374, 375, 377, 381, 383, 407, 418, 422, 433, 436, 437, 445, 446, 447, 453, 455, 456, 468, 469, 470, 474, 475, 477, 479, 480, 497, 573, 594, 595, 596, 599, 602, 603, 604, 605, 606, 623, 642, 645, 646, 656, 659, 660, 663, 666, 667, 669], "present": [4, 29, 31, 45, 74, 219, 226, 230, 231, 232, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 380, 381, 394, 404, 418, 444, 456, 468, 497, 597, 658, 663], "unit": [4, 55, 121, 122, 123, 124, 125, 162, 163, 211, 214, 215, 216, 217, 224, 244, 271, 274, 275, 276, 277, 284, 300, 303, 304, 305, 306, 313, 333, 336, 337, 338, 339, 346, 367, 369, 420, 439, 442, 444, 455, 478, 550, 573, 593, 597, 599, 602, 603, 604, 632, 637, 645, 646, 656, 659, 664, 667], "avail": [4, 16, 45, 56, 57, 58, 74, 141, 153, 156, 157, 158, 165, 185, 197, 204, 244, 246, 248, 250, 260, 262, 264, 369, 379, 468, 479, 480, 481, 497, 593, 595, 596, 597, 602, 605, 611, 613, 623, 642, 656], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 122, 125, 444, 453, 454, 593, 595, 596, 597, 598, 599, 600, 602, 603, 614, 648, 658, 659, 660, 662, 663, 664, 667], "k": [5, 125, 223, 224, 225, 227, 228, 229, 283, 284, 285, 287, 288, 289, 312, 313, 314, 320, 321, 322, 345, 346, 347, 353, 354, 355, 386, 390, 391, 393, 394, 398, 401, 402, 403, 404, 428, 445, 453, 595, 599, 600, 603, 624, 631, 634, 635, 667], "band": [5, 9, 156, 158, 160, 379, 432, 434, 441, 444, 445, 446, 447, 451, 593, 600, 602, 646], "arm": [5, 6, 40, 364, 365, 366, 377, 378, 418, 440, 465, 544, 550, 593, 595, 597, 599, 602, 605, 620, 635, 658, 659, 660, 662, 663, 664, 666, 669], "zenith": 5, "kazr": [5, 6, 602], "ingest": [5, 596, 602, 656, 657], "spectra": [6, 74, 117, 431, 450, 497, 540, 547, 555, 573, 602], "radar_spectra": 6, "delay_field_load": [6, 363, 366, 369, 370, 371, 374, 376], "delai": [6, 363, 366, 369, 370, 371, 374, 602], "load": [6, 29, 363, 366, 369, 370, 371, 374, 382, 383, 392, 602, 618, 664], "until": [6, 29, 162, 363, 366, 369, 370, 371, 374, 605], "particular": [6, 363, 366, 369, 370, 371, 374, 418, 596, 605, 642, 656], "access": [6, 19, 31, 45, 56, 57, 74, 142, 143, 186, 187, 363, 366, 369, 370, 371, 374, 383, 456, 468, 479, 480, 497, 543, 596, 600, 613, 614, 662, 664], "In": [6, 121, 123, 124, 163, 165, 361, 363, 366, 369, 370, 371, 373, 374, 394, 404, 407, 420, 423, 430, 445, 454, 563, 564, 593, 595, 596, 597, 599, 603, 608, 609, 614, 642, 645, 646, 656, 659, 660, 662, 663, 666, 667], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 141, 142, 143, 153, 161, 185, 186, 187, 197, 219, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 363, 366, 367, 369, 370, 371, 374, 377, 378, 381, 456, 459, 460, 461, 462, 468, 479, 480, 486, 487, 488, 489, 497, 514, 515, 516, 517, 593, 596, 597, 599, 600, 643, 658, 664], "radarspectra": [6, 450, 547], "lazyloaddict": [6, 31, 45, 74, 363, 366, 369, 370, 371, 374, 456, 468, 497], "speedup": [6, 246, 319, 352, 366, 597, 602], "where": [6, 15, 56, 57, 119, 122, 125, 129, 131, 132, 133, 134, 135, 137, 139, 140, 141, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163, 166, 168, 173, 175, 176, 177, 178, 179, 181, 183, 184, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 219, 226, 229, 230, 231, 232, 245, 259, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 360, 366, 423, 429, 430, 439, 448, 454, 479, 480, 565, 566, 574, 577, 589, 593, 594, 597, 599, 602, 613, 614, 617, 623, 626, 642, 643, 645, 656, 659, 663, 669], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 219, 226, 230, 231, 232, 248, 250, 260, 262, 264, 265, 279, 286, 290, 291, 294, 308, 318, 319, 323, 324, 327, 341, 351, 352, 356, 357, 366, 371, 372, 373, 374, 407, 414, 417, 418, 445, 446, 447, 448, 449, 453, 454, 468, 478, 479, 480, 497, 545, 546, 547, 563, 564, 575, 576, 593, 597, 602, 609, 614, 617, 619, 620, 624, 658, 660, 662, 663, 664], "vari": [6, 366, 369, 428, 645, 646], "between": [6, 33, 45, 56, 57, 74, 120, 122, 123, 141, 153, 161, 162, 164, 165, 166, 185, 197, 201, 202, 219, 226, 230, 231, 232, 244, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 360, 366, 371, 374, 380, 381, 407, 428, 429, 433, 439, 458, 468, 479, 480, 497, 558, 572, 586, 593, 595, 596, 597, 603, 605, 617, 624, 634, 642, 645, 660, 662, 667, 669], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 136, 141, 153, 156, 157, 158, 161, 162, 163, 165, 168, 180, 185, 197, 201, 206, 208, 212, 213, 219, 226, 229, 230, 231, 232, 248, 250, 260, 262, 264, 266, 268, 272, 273, 279, 286, 289, 290, 291, 295, 297, 301, 302, 308, 318, 319, 322, 323, 324, 328, 330, 334, 335, 341, 351, 352, 355, 356, 357, 365, 366, 371, 374, 375, 407, 422, 426, 453, 468, 476, 479, 480, 481, 482, 483, 484, 497, 510, 511, 512, 513, 545, 546, 547, 550, 564, 569, 571, 575, 589, 590, 596, 597, 603, 619, 658, 664, 667], "ngates_vari": [6, 366], "recommend": [6, 29, 45, 74, 161, 163, 352, 366, 375, 418, 428, 429, 439, 445, 468, 497, 563, 603, 605, 623, 642, 656, 666, 667, 668, 669], "noxp": [7, 602], "iphex": [7, 602], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 136, 180, 319, 352, 371, 373, 415, 416, 440, 564, 567, 570, 576, 593, 596, 597, 602, 613, 618, 642, 643, 646, 647, 648, 656, 658], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 129, 131, 132, 133, 134, 137, 139, 140, 144, 146, 147, 148, 149, 151, 152, 154, 161, 166, 173, 175, 176, 177, 178, 181, 183, 184, 188, 190, 191, 192, 193, 195, 196, 198, 201, 202, 219, 224, 225, 244, 245, 247, 248, 249, 250, 259, 261, 262, 263, 264, 279, 284, 285, 308, 313, 314, 315, 316, 341, 346, 347, 348, 349, 390, 401, 407, 415, 416, 417, 418, 444, 448, 456, 458, 468, 474, 475, 476, 477, 480, 481, 482, 483, 484, 497, 510, 511, 512, 513, 542, 564, 572, 575, 576, 578, 579, 585, 593, 597, 600, 642, 643, 645, 656], "dataset1": 8, "dataset2": 8, "pattern": [9, 548, 634, 642], "project": [9, 16, 31, 34, 45, 74, 121, 122, 123, 124, 125, 224, 235, 246, 257, 284, 294, 313, 319, 346, 352, 369, 378, 379, 418, 456, 459, 468, 497, 593, 595, 597, 599, 600, 602, 613, 614, 617, 618, 624, 625, 631, 638, 643, 645, 646, 652, 656, 659, 660, 662, 663, 666], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 205, 214, 219, 221, 224, 226, 229, 230, 231, 232, 234, 244, 246, 248, 250, 260, 262, 264, 265, 274, 279, 281, 284, 286, 289, 290, 291, 293, 294, 303, 308, 310, 313, 316, 318, 322, 323, 324, 326, 327, 336, 341, 343, 346, 349, 351, 355, 356, 357, 359, 407, 411, 412, 413, 414, 415, 417, 418, 422, 429, 430, 432, 439, 441, 442, 443, 444, 445, 446, 447, 451, 456, 462, 464, 480, 488, 516, 544, 548, 563, 593, 596, 597, 601, 602, 606, 617, 624, 625, 634, 635, 642, 645, 646, 662, 663, 664], "radx_dir": 10, "first": [10, 45, 58, 74, 161, 163, 244, 364, 365, 374, 377, 407, 418, 429, 439, 445, 446, 447, 451, 468, 481, 497, 567, 569, 572, 582, 583, 593, 595, 596, 597, 599, 603, 605, 609, 613, 614, 628, 637, 642, 643, 645, 646, 652, 660, 662, 663, 664, 667], "convert": [10, 13, 39, 420, 429, 439, 464, 580, 590, 593, 595, 597, 602, 645, 646], "cf": [10, 13, 45, 74, 366, 377, 378, 440, 468, 497, 593, 594, 595, 596, 611, 622, 640, 656, 664, 665], "radial": [10, 13, 45, 74, 161, 162, 366, 377, 422, 445, 468, 497, 563, 585, 594, 596, 597, 599, 602, 607, 611, 613, 622, 640, 651, 655, 656, 660, 664, 665], "radxconvert": 10, "path": [10, 15, 157, 158, 163, 466, 543, 594, 595, 597, 599, 602, 603, 613, 614, 656, 666, 667], "radx": [10, 602], "grid": [11, 24, 45, 74, 204, 221, 223, 231, 235, 239, 245, 246, 247, 249, 251, 252, 257, 259, 260, 261, 263, 281, 283, 310, 312, 343, 345, 361, 368, 369, 378, 379, 380, 411, 412, 413, 414, 415, 416, 417, 418, 428, 429, 430, 439, 442, 443, 451, 468, 497, 544, 548, 549, 551, 552, 568, 587, 593, 597, 602, 611, 616, 621, 622, 625, 635, 638, 640, 642, 645, 646, 651, 655, 656, 657, 665], "produc": [11, 164, 368, 377, 379, 383, 449, 454, 597, 599, 603, 646, 656, 667], "radx2grid": 11, "within": [11, 29, 47, 48, 127, 161, 162, 163, 164, 168, 171, 204, 414, 417, 418, 422, 444, 470, 471, 558, 564, 565, 566, 574, 576, 578, 579, 591, 595, 597, 598, 599, 600, 602, 603, 613, 614, 625, 626, 656, 660, 662, 667, 669], "lrose": 11, "must": [11, 156, 157, 158, 161, 319, 365, 368, 369, 374, 380, 428, 442, 445, 446, 447, 585, 597, 603, 645, 656, 666, 667], "been": [11, 12, 131, 133, 141, 148, 153, 160, 161, 175, 177, 185, 192, 197, 251, 327, 366, 368, 371, 372, 373, 375, 573, 594, 599, 603, 613, 645, 656, 662, 666, 667], "write_grid": [11, 368], "ident": [11, 162, 163, 368, 417, 646], "layout": [11, 33, 368, 458, 602], "rainbow": 12, "rainbow5": [12, 602], "5": [12, 31, 156, 158, 161, 164, 165, 166, 167, 202, 219, 226, 229, 230, 231, 232, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 378, 428, 429, 433, 439, 444, 456, 548, 572, 580, 593, 594, 595, 596, 597, 599, 600, 601, 603, 608, 609, 614, 623, 626, 628, 629, 630, 633, 634, 635, 636, 637, 638, 642, 643, 645, 646, 647, 648, 652, 658, 660, 663, 664, 667], "22": [12, 593, 595, 599, 602, 613, 623, 643, 645, 649, 665], "3": [12, 45, 74, 119, 120, 161, 162, 200, 201, 203, 231, 369, 373, 379, 414, 415, 416, 418, 422, 428, 429, 439, 468, 497, 544, 548, 564, 591, 593, 594, 595, 596, 599, 601, 603, 608, 609, 611, 614, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 665, 666, 667, 669], "34": [12, 439, 451, 593, 645, 646], "16": [12, 428, 432, 453, 593, 594, 595, 597, 600, 603, 608, 609, 617, 630, 636, 642, 644, 660, 664, 667], "35": [12, 163, 167, 168, 593, 595, 596, 617, 621, 623, 632, 634, 635, 642, 663, 665], "1": [12, 31, 45, 55, 74, 119, 122, 125, 141, 161, 163, 167, 168, 185, 265, 366, 371, 372, 373, 378, 417, 418, 420, 425, 428, 429, 430, 433, 439, 444, 445, 447, 456, 468, 478, 497, 548, 564, 572, 573, 584, 591, 593, 595, 596, 597, 599, 600, 603, 605, 606, 608, 609, 613, 617, 618, 619, 620, 623, 624, 625, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 645, 647, 648, 653, 656, 658, 659, 660, 662, 664, 667], "sinc": [12, 423, 445, 593, 595, 596, 597, 618, 645, 646, 659, 662, 664], "evolv": [12, 593], "constantli": 12, "guaranti": 12, "work": [12, 122, 125, 246, 294, 319, 327, 352, 371, 373, 451, 594, 595, 597, 599, 600, 602, 603, 605, 606, 614, 642, 656, 658, 659, 660, 662, 663, 664, 666, 667, 669], "necessari": [12, 593], "user": [12, 29, 48, 157, 158, 164, 352, 379, 428, 471, 564, 589, 593, 596, 597, 599, 600, 602, 603, 656, 658, 659, 660, 662, 663, 664, 666, 667, 669], "adapt": [12, 119, 593, 669], "code": [12, 29, 161, 442, 444, 453, 593, 595, 599, 600, 602, 606, 608, 609, 611, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656, 666, 669], "accord": [12, 160, 375, 418, 425, 432, 433, 434, 436, 437], "its": [12, 445, 595, 596, 599, 602, 603, 605, 606, 656, 666, 667, 669], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 363, 374, 390, 391, 401, 402, 456, 457, 469, 470, 472, 481, 500, 596, 597, 602], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 135, 161, 162, 163, 164, 166, 167, 168, 179, 200, 201, 202, 203, 205, 224, 284, 313, 346, 352, 375, 378, 379, 395, 405, 407, 414, 415, 417, 418, 422, 430, 440, 456, 464, 468, 470, 471, 474, 475, 481, 490, 491, 492, 493, 494, 495, 496, 497, 518, 519, 520, 521, 522, 523, 524, 542, 544, 545, 546, 547, 554, 563, 566, 570, 571, 578, 579, 588, 590, 593, 594, 596, 597, 599, 600, 602, 603, 605, 606, 611, 614, 617, 618, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 642, 643, 645, 646, 652, 653, 654, 656, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668], "issu": [12, 29, 294, 327, 375, 378, 596, 600, 601, 602, 603, 611, 612, 615, 656, 665, 666, 667, 669], "upstream": [12, 594, 603, 605, 667], "reflect": [12, 47, 117, 127, 142, 143, 156, 157, 158, 159, 164, 166, 167, 168, 171, 186, 187, 201, 202, 221, 281, 310, 343, 360, 407, 418, 420, 421, 423, 426, 427, 428, 429, 430, 433, 435, 436, 437, 438, 439, 444, 445, 451, 470, 540, 553, 554, 556, 557, 577, 593, 594, 595, 599, 600, 602, 607, 609, 610, 611, 613, 614, 617, 618, 619, 620, 622, 623, 624, 625, 627, 630, 633, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 652, 654, 656, 658, 659, 660, 662, 663, 664, 665], "dbz": [12, 156, 160, 167, 168, 420, 426, 427, 428, 429, 439, 451, 594, 596, 599, 613, 617, 625, 632, 633, 639, 642, 645, 646, 664], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 161, 162, 163, 422, 430, 431, 442, 453, 454, 481, 540, 563, 585, 597, 599, 602, 603, 607, 610, 611, 613, 623, 627, 635, 637, 651, 655, 656, 657, 663, 664, 665, 667], "v": [12, 41, 42, 44, 390, 391, 394, 401, 402, 404, 428, 453, 454, 595, 600, 603, 634, 635, 646, 648, 667], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 573, 664], "width": [12, 245, 259, 319, 352, 418, 595, 596, 597, 599, 602, 664], "w": [12, 62, 163, 428, 485, 593, 647], "wu": [12, 414, 662], "wv": 12, "wvu": 12, "differenti": [12, 17, 156, 157, 158, 167, 168, 201, 430, 434, 437, 444, 445, 446, 447, 449, 452, 602, 627, 642, 656], "zdr": [12, 157, 158, 160, 201, 424], "zdru": 12, "co": [12, 119, 122, 125, 429, 430, 439, 593, 595, 618, 642, 645, 646], "polar": [12, 369, 370, 447, 596, 618], "correl": [12, 166, 201, 202, 442, 444, 577, 599, 626, 627, 644, 645, 646], "coeffici": [12, 156, 157, 158, 167, 168, 420, 428, 444, 577, 593, 602, 626, 627, 644], "rhohv": [12, 160, 166, 201, 202, 424, 425, 602, 626, 664], "rhohvu": 12, "phase": [12, 17, 156, 157, 158, 163, 167, 168, 201, 434, 437, 442, 444, 445, 446, 447, 449, 452, 602, 627, 656, 660], "phidp": [12, 157, 158, 167, 168, 201, 445, 602, 656], "uphidp": 12, "uphidpu": 12, "kdp": [12, 167, 168, 434, 437, 445, 446, 447, 602, 647, 656], "ukdp": 12, "ukdpu": 12, "signal": [12, 160, 166, 202, 421, 573, 596, 600], "qualiti": [12, 160, 166, 202, 434, 446, 447, 593, 599, 600, 613], "sqi": [12, 602], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 157, 158, 203, 444, 593, 647], "temp": [12, 602], "posit": [12, 45, 74, 122, 125, 157, 158, 161, 423, 445, 468, 497, 596, 602, 617, 623, 625, 664], "bin": [12, 45, 74, 119, 120, 158, 374, 430, 431, 468, 497, 572, 573, 593, 602, 617, 642, 660, 664], "respect": [12, 45, 74, 429, 439, 451, 468, 497, 597], "iso0": [12, 157, 200], "cfradial_outfil": 13, "head": [13, 45, 74, 205, 468, 497], "ridgelin": 13, "instrument": [13, 45, 74, 141, 153, 166, 185, 197, 201, 202, 381, 468, 497, 600, 602, 660, 664], "rxm": [13, 602], "25": [13, 415, 416, 428, 593, 595, 599, 602, 613, 617, 634, 635, 638, 643, 658, 663], "rli": 13, "here": [13, 131, 133, 141, 148, 153, 175, 177, 185, 192, 197, 257, 593, 594, 595, 596, 597, 599, 600, 601, 605, 617, 642, 645, 646, 652, 656, 658, 663, 666, 669], "float": [13, 24, 58, 122, 125, 131, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 175, 200, 201, 202, 203, 205, 206, 219, 221, 222, 226, 227, 229, 230, 231, 232, 244, 245, 246, 247, 248, 249, 250, 257, 259, 260, 261, 262, 263, 264, 265, 266, 279, 281, 282, 286, 287, 289, 290, 291, 294, 295, 308, 310, 311, 317, 318, 319, 320, 322, 323, 324, 327, 328, 341, 343, 344, 350, 351, 352, 353, 355, 356, 357, 360, 379, 407, 408, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 445, 446, 447, 448, 449, 451, 481, 544, 548, 559, 560, 561, 562, 563, 564, 565, 566, 572, 573, 574, 575, 576, 577, 578, 579, 580, 586, 587, 597, 600], "offset": [13, 156, 167, 168, 205, 265, 294, 317, 327, 350, 429, 439, 572, 580, 593, 596, 597, 646], "exist": [13, 28, 32, 46, 47, 49, 77, 131, 133, 141, 148, 153, 165, 166, 175, 177, 185, 192, 197, 201, 202, 375, 445, 457, 466, 469, 470, 472, 500, 542, 590, 595, 596, 597, 602, 605, 608, 656, 658], "enter": [13, 594, 597, 603, 667], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 167, 168, 203, 205, 219, 224, 225, 244, 245, 247, 249, 257, 259, 261, 263, 265, 279, 284, 285, 294, 308, 313, 314, 317, 319, 327, 341, 346, 347, 350, 352, 453, 458, 478, 479, 560, 562, 564, 565, 566, 574, 575, 576, 580, 583, 586, 595, 597, 600, 602, 603, 639, 643, 664, 667], "sinarame_h5": [14, 15, 602], "take": [15, 47, 162, 417, 418, 421, 445, 470, 595, 596, 597, 603, 613, 614, 617, 625, 645, 646, 667], "everi": [15, 446, 447, 603, 604, 656, 667], "one": [15, 25, 31, 39, 40, 45, 47, 74, 131, 133, 141, 148, 153, 165, 166, 175, 177, 185, 192, 197, 202, 377, 378, 380, 407, 414, 417, 418, 423, 445, 446, 447, 453, 456, 464, 465, 468, 470, 497, 565, 566, 572, 577, 581, 585, 594, 596, 597, 599, 601, 602, 603, 605, 611, 616, 617, 618, 623, 642, 656, 659, 664, 667, 669], "volum": [15, 45, 74, 161, 163, 164, 319, 352, 371, 372, 373, 381, 407, 415, 416, 440, 468, 497, 565, 566, 568, 587, 590, 593, 596, 597, 599, 600, 602, 611, 618, 622, 640, 665], "folder": [15, 593, 600, 603, 667], "cfradial": [15, 366, 594, 602, 611, 622, 623, 637, 639, 640, 654, 658, 665], "each": [15, 31, 39, 41, 45, 55, 74, 136, 156, 157, 158, 162, 163, 164, 180, 219, 226, 230, 231, 232, 248, 250, 260, 262, 264, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 375, 379, 381, 407, 414, 417, 418, 430, 444, 453, 456, 464, 468, 478, 497, 545, 546, 547, 593, 596, 597, 600, 602, 603, 613, 619, 634, 637, 642, 645, 646, 663, 664, 667], "act": [16, 433, 436, 437, 593, 602, 642, 645, 658], "commun": [16, 593, 600, 603, 656, 667, 669], "softwar": [16, 231, 372, 379, 597, 599, 603, 656, 658, 659, 660, 662, 663, 664, 666, 667], "namespac": [16, 602], "current": [16, 27, 33, 131, 133, 141, 148, 153, 161, 175, 177, 185, 192, 197, 207, 209, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 243, 244, 245, 246, 248, 250, 257, 258, 259, 260, 262, 264, 267, 269, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 296, 298, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 326, 329, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 370, 408, 410, 445, 458, 572, 593, 594, 596, 597, 599, 600, 603, 667], "extens": [16, 207, 239, 252, 267, 296, 329, 379, 596, 605, 666], "wradlib": [16, 602, 656], "http": [16, 371, 372, 373, 420, 423, 429, 430, 434, 435, 439, 442, 564, 577, 593, 595, 597, 599, 600, 603, 614, 626, 635, 642, 645, 646, 656, 666, 667, 669], "org": [16, 420, 423, 429, 430, 434, 435, 439, 442, 564, 577, 600, 602, 603, 626, 642, 645, 646, 656, 667], "phidp_field": [17, 156, 157, 158, 167, 168, 445, 446, 447, 452, 608, 647], "phidp_texture_field": [17, 452], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 123, 127, 142, 143, 156, 157, 158, 166, 167, 168, 171, 186, 187, 200, 201, 202, 203, 205, 265, 294, 327, 417, 418, 421, 422, 428, 429, 439, 442, 449, 450, 452, 453, 454, 456, 458, 468, 479, 480, 497, 563, 564, 572, 573, 574, 575, 576, 586, 593, 602, 603, 608, 611, 617, 618, 634, 635, 641, 645, 649, 652, 656, 660, 663, 665, 667], "textur": [17, 201, 422, 452, 563, 589, 602, 652, 656, 660], "real": [17, 161, 452, 611, 622, 645, 646, 669], "part": [17, 430, 432, 452, 572, 596, 597, 599, 602, 613, 642, 656, 658, 659, 660, 662, 663, 664], "complex": [17, 452], "shift": [17, 167, 168, 205, 265, 294, 327, 443, 446, 452, 572, 602, 660], "texture_field": [17, 452], "refer": [17, 31, 45, 47, 74, 119, 122, 125, 156, 157, 158, 160, 161, 162, 163, 167, 168, 371, 372, 373, 414, 420, 423, 426, 428, 429, 430, 432, 434, 435, 438, 439, 444, 445, 446, 447, 449, 451, 452, 453, 454, 456, 468, 470, 497, 564, 573, 577, 594, 599, 602, 603, 642, 656, 664, 667], "gourlei": [17, 160, 452], "j": [17, 122, 125, 163, 167, 168, 423, 428, 429, 439, 444, 446, 447, 449, 451, 452, 453, 454, 564, 594, 597, 600, 603, 608, 609, 619, 620, 627, 628, 630, 632, 636, 639, 645, 646, 656, 667], "p": [17, 20, 22, 28, 119, 122, 125, 414, 428, 432, 449, 452, 542, 564, 573, 596, 603, 656, 667], "tabari": [17, 452], "parent": [17, 452], "du": [17, 452], "chatelet": [17, 452], "fuzzi": [17, 452], "logic": [17, 131, 133, 141, 148, 153, 175, 177, 185, 192, 197, 452], "algorithm": [17, 127, 161, 162, 163, 171, 414, 418, 428, 429, 439, 444, 445, 451, 452, 593, 602, 603, 607, 610, 611, 652, 656, 665, 667], "separ": [17, 415, 416, 428, 442, 451, 452, 573, 577, 613, 618, 626, 646, 669], "precipit": [17, 418, 420, 428, 434, 438, 444, 452, 577, 593, 595, 597, 602, 603, 617, 626, 645, 646, 656, 667], "nonprecipit": [17, 452], "echo": [17, 428, 429, 439, 444, 452, 602, 642, 645, 646, 663], "polarimetr": [17, 156, 157, 158, 160, 167, 168, 433, 434, 444, 449, 452, 564, 602, 608], "observ": [17, 119, 429, 439, 445, 452, 642, 645, 646], "journal": [17, 161, 163, 414, 432, 434, 452, 573, 603, 656, 667], "atmospher": [17, 45, 74, 119, 120, 161, 162, 418, 432, 448, 452, 468, 497, 593, 596, 597, 599, 600, 603, 613, 656, 658, 659, 660, 662, 663, 664, 667], "ocean": [17, 161, 167, 168, 429, 432, 438, 439, 449, 452, 564, 593, 597, 600, 613, 645, 646], "technologi": [17, 161, 432, 452], "24": [17, 452, 593, 595, 602, 614], "8": [17, 62, 156, 161, 167, 201, 244, 246, 248, 250, 260, 262, 264, 428, 452, 485, 593, 595, 596, 597, 599, 605, 614, 617, 624, 634, 638, 642, 643, 646, 652, 658, 659, 660, 662, 663, 664], "1439": [17, 452], "1451": [17, 452], "filetyp": [19, 25, 597], "need": [19, 45, 54, 56, 57, 74, 379, 429, 439, 468, 477, 479, 480, 497, 574, 586, 595, 596, 597, 600, 601, 602, 603, 605, 613, 617, 623, 645, 646, 656, 658, 659, 660, 662, 663, 664, 666, 667, 669], "being": [19, 21, 161, 219, 221, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 289, 290, 291, 308, 310, 318, 319, 322, 323, 324, 341, 343, 351, 352, 355, 356, 357, 418, 423, 447, 578, 579, 595, 597, 599, 602, 635, 666], "keep": [19, 161, 375, 587, 597, 603, 617, 645, 646, 667, 669], "string": [19, 31, 45, 74, 221, 224, 225, 229, 232, 245, 259, 281, 284, 285, 289, 291, 310, 313, 314, 315, 316, 317, 320, 322, 324, 343, 346, 347, 348, 349, 350, 353, 355, 357, 417, 418, 440, 442, 446, 447, 449, 453, 454, 456, 468, 497, 595, 596, 597, 602, 603, 623, 667], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 127, 161, 162, 171, 205, 265, 294, 327, 383, 460, 461, 462, 486, 487, 488, 489, 514, 515, 516, 517, 597, 600, 602, 625], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 131, 141, 142, 143, 153, 168, 175, 185, 186, 187, 197, 375, 445, 446, 447, 449, 453, 454, 456, 468, 492, 495, 496, 497, 520, 523, 524, 575, 593, 595, 597, 602, 613, 631], "dic": [22, 31, 45, 46, 74, 383, 456, 468, 469, 497], "colormap": [23, 204, 219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 379, 596, 597, 602, 611, 622, 626, 640, 646, 647, 665], "select": [24, 50, 59, 88, 163, 473, 482, 511, 593, 596, 599, 602, 605], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 122, 125, 127, 153, 156, 157, 159, 161, 162, 164, 165, 166, 167, 168, 171, 197, 200, 201, 202, 203, 205, 218, 219, 226, 229, 230, 231, 232, 233, 246, 260, 265, 278, 279, 286, 289, 290, 291, 292, 294, 307, 308, 317, 318, 319, 322, 323, 324, 325, 327, 340, 341, 350, 351, 352, 355, 356, 357, 358, 375, 379, 407, 415, 416, 417, 418, 421, 423, 428, 429, 430, 433, 435, 436, 437, 439, 443, 444, 445, 446, 449, 451, 453, 454, 458, 468, 473, 474, 475, 477, 478, 479, 480, 481, 497, 548, 572, 580, 593, 594, 595, 596, 597, 599, 600, 603, 605, 606, 608, 609, 610, 613, 614, 615, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 658, 659, 660, 662, 663, 664, 665, 666, 667], "limit": [24, 161, 162, 166, 167, 168, 200, 201, 202, 203, 221, 234, 257, 281, 293, 310, 326, 343, 359, 369, 380, 415, 416, 445, 587, 596, 597, 602, 618, 619, 620, 624, 642, 662], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 141, 153, 161, 162, 163, 165, 166, 185, 197, 201, 202, 207, 209, 218, 219, 221, 226, 230, 231, 232, 267, 269, 278, 279, 281, 286, 290, 291, 296, 298, 307, 308, 310, 318, 319, 323, 324, 329, 331, 340, 341, 343, 351, 352, 356, 357, 371, 372, 373, 375, 407, 415, 416, 422, 453, 468, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 490, 491, 492, 493, 494, 495, 496, 497, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 545, 546, 565, 566, 572, 593, 594, 596, 597, 599, 600, 602, 609, 611, 613, 616, 617, 621, 634, 635, 637, 642, 643, 645, 646, 648, 652, 660, 663, 664, 665], "get": [24, 236, 237, 238, 256, 366, 383, 393, 403, 407, 593, 594, 596, 597, 599, 602, 614, 634, 635, 642, 645, 646, 658, 660, 663, 664, 666, 668, 669], "relat": [24, 158, 204, 380, 420, 429, 433, 436, 437, 438, 439, 446, 451, 564, 596, 602, 603, 645, 646, 656, 666, 667], "instac": 24, "nyquist": [24, 58, 161, 162, 163, 422, 481, 563, 602, 652, 660, 664], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 141, 153, 158, 161, 162, 164, 165, 167, 168, 185, 197, 201, 207, 208, 209, 218, 222, 226, 227, 229, 230, 231, 239, 240, 241, 242, 244, 246, 252, 253, 254, 255, 257, 260, 267, 268, 269, 278, 282, 286, 287, 289, 290, 296, 297, 298, 307, 311, 318, 319, 320, 322, 323, 329, 330, 331, 340, 344, 351, 352, 353, 355, 356, 379, 415, 416, 418, 422, 426, 429, 439, 445, 447, 453, 456, 458, 468, 474, 475, 477, 478, 479, 480, 481, 497, 545, 546, 547, 548, 563, 564, 573, 575, 589, 595, 597, 602, 603, 667], "consid": [24, 156, 164, 165, 360, 415, 416, 428, 429, 439, 565, 566, 572, 573, 580, 618, 645], "vmin": [24, 219, 221, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 289, 290, 291, 308, 310, 318, 319, 322, 323, 324, 341, 343, 351, 352, 355, 356, 357, 379, 593, 594, 595, 596, 597, 599, 600, 602, 608, 609, 613, 614, 617, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 652, 653, 654, 659, 660, 662, 663], "vmax": [24, 219, 221, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 289, 290, 291, 308, 310, 318, 319, 322, 323, 324, 341, 343, 351, 352, 355, 356, 357, 379, 593, 594, 595, 596, 597, 599, 600, 602, 608, 609, 613, 614, 617, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 652, 653, 654, 659, 660, 662, 663], "2": [24, 119, 122, 163, 164, 165, 201, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 244, 245, 246, 248, 250, 259, 260, 262, 264, 279, 281, 284, 285, 286, 287, 288, 289, 290, 291, 293, 308, 310, 313, 314, 318, 321, 322, 323, 324, 326, 341, 343, 346, 347, 351, 352, 354, 355, 356, 357, 359, 371, 372, 373, 375, 391, 402, 407, 414, 415, 416, 418, 422, 428, 429, 430, 439, 445, 453, 544, 548, 563, 577, 593, 595, 596, 597, 599, 600, 603, 606, 610, 615, 617, 618, 624, 625, 628, 630, 631, 634, 635, 638, 642, 643, 645, 647, 648, 652, 656, 658, 659, 660, 662, 663, 664, 667], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 383, 418, 456, 470, 471, 473, 474, 475, 477, 590, 596, 601, 602, 646, 659], "field_map": 25, "anoth": [25, 407, 577, 596, 597, 602, 617, 658, 663, 666, 669], "fill": [27, 156, 157, 158, 451, 597, 600, 602, 646, 658, 659], "empti": [28, 391, 402, 446, 447, 542, 544, 547, 594, 602, 658], "control": [29, 161, 375, 377, 378, 418, 445, 599, 600, 642, 662], "singl": [29, 162, 163, 164, 165, 224, 225, 227, 229, 284, 285, 287, 289, 313, 314, 320, 322, 346, 347, 353, 355, 379, 418, 550, 572, 590, 593, 596, 597, 599, 602, 603, 611, 613, 616, 617, 621, 643, 665, 667], "self": [29, 167, 168, 596, 597, 603, 659, 662, 667], "descrip": 29, "exampl": [29, 47, 127, 171, 219, 226, 229, 230, 231, 232, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 383, 407, 411, 412, 413, 417, 418, 453, 466, 470, 572, 593, 594, 595, 596, 597, 598, 600, 602, 603, 608, 609, 610, 613, 614, 615, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 643, 644, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 658, 660, 663, 664, 665, 667, 669], "default_config": 29, "modifi": [29, 45, 74, 164, 468, 497, 594, 602, 603, 611, 622, 640, 665, 667], "environment": [29, 593, 594, 656, 666], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 205, 235, 251, 265, 294, 327, 377, 378, 407, 415, 433, 440, 444, 445, 448, 449, 456, 464, 465, 468, 478, 497, 573, 593, 595, 596, 602, 613, 617, 642, 643, 645, 646, 656, 658, 659, 664, 666], "pyart_config": 29, "point": [29, 31, 33, 47, 123, 156, 157, 158, 168, 222, 227, 244, 245, 259, 282, 287, 294, 311, 316, 317, 320, 344, 349, 350, 353, 369, 370, 373, 375, 379, 414, 417, 418, 429, 430, 439, 451, 456, 458, 470, 544, 573, 576, 580, 590, 593, 595, 597, 599, 602, 605, 611, 624, 631, 641, 642, 645, 649, 652, 656, 660, 662, 664, 665], "new": [29, 47, 48, 50, 131, 133, 141, 148, 153, 164, 175, 177, 185, 192, 197, 431, 443, 449, 453, 470, 471, 473, 577, 587, 599, 602, 603, 605, 606, 617, 643, 646, 647, 652, 656, 659, 660, 667, 669], "execut": [29, 602, 610, 615, 621, 640, 649, 650, 655, 665], "full": [29, 62, 164, 165, 375, 485, 599, 600, 602, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654], "permiss": 29, "secur": 29, "do": [29, 45, 74, 161, 166, 201, 202, 379, 380, 468, 497, 597, 599, 600, 602, 603, 614, 645, 646, 658, 659, 660, 662, 663, 666, 667, 669], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 127, 131, 133, 141, 148, 153, 156, 158, 167, 168, 171, 175, 177, 185, 192, 197, 231, 244, 380, 381, 383, 394, 396, 404, 415, 416, 417, 428, 440, 445, 446, 447, 453, 456, 470, 477, 479, 480, 572, 573, 591, 596, 597, 602, 603, 605, 608, 629, 642, 652, 653, 654, 656, 663, 667], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 142, 143, 161, 186, 187, 374, 383, 456, 466, 468, 470, 474, 475, 477, 479, 497, 558, 593, 595, 597, 602, 603, 604, 605, 606, 642, 645, 646, 659, 662, 664, 666, 667], "home": [29, 599, 600, 603, 608, 614, 667, 669], "make": [29, 31, 456, 544, 548, 549, 551, 552, 595, 596, 597, 599, 600, 601, 602, 603, 604, 606, 617, 625, 634, 642, 645, 652, 656, 658, 659, 666, 667, 669], "adjust": [29, 122, 234, 293, 326, 359, 428, 597, 602, 623, 626, 634, 646], "login": [29, 600], "": [29, 31, 45, 58, 62, 74, 119, 120, 122, 125, 162, 163, 167, 168, 207, 209, 219, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 267, 269, 279, 286, 290, 291, 296, 298, 308, 318, 323, 324, 329, 331, 341, 351, 356, 357, 388, 389, 395, 399, 400, 405, 407, 409, 414, 429, 430, 432, 433, 439, 441, 442, 445, 446, 447, 449, 451, 454, 456, 468, 481, 485, 497, 573, 577, 593, 594, 595, 596, 597, 599, 600, 602, 604, 605, 613, 614, 617, 623, 625, 626, 635, 642, 643, 645, 646, 648, 652, 656, 658, 659, 660, 662, 663, 664, 668], "also": [29, 45, 74, 131, 175, 204, 220, 243, 258, 280, 309, 342, 372, 373, 377, 379, 381, 393, 403, 407, 415, 429, 439, 468, 497, 593, 594, 595, 596, 597, 599, 600, 602, 603, 613, 617, 642, 645, 646, 656, 658, 662, 664, 666, 667, 668, 669], "shell": 29, "session": 29, "modif": [29, 47, 470, 602], "last": [29, 45, 74, 161, 219, 220, 226, 230, 231, 232, 243, 248, 250, 251, 258, 260, 262, 264, 279, 280, 286, 290, 291, 308, 309, 318, 319, 323, 324, 327, 341, 342, 351, 352, 356, 357, 468, 497, 572, 596, 597, 599, 601, 602, 619, 646, 664], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 136, 156, 157, 158, 162, 163, 168, 180, 244, 476, 484, 492, 496, 510, 513, 520, 524, 593, 595, 596, 597, 599, 600, 602, 603, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656, 667], "interact": [30, 593, 596], "weather": [30, 119, 161, 414, 445, 595, 597, 602, 603, 613, 623, 656, 658, 659, 660, 662, 663, 664, 667], "time": [31, 39, 40, 45, 74, 161, 207, 209, 219, 221, 226, 230, 231, 232, 267, 269, 279, 281, 286, 290, 291, 296, 298, 308, 310, 318, 319, 323, 324, 329, 331, 341, 343, 351, 352, 356, 357, 364, 365, 375, 377, 378, 407, 410, 418, 428, 440, 442, 456, 464, 465, 468, 497, 567, 570, 593, 594, 595, 597, 599, 600, 602, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 658, 664, 669], "origin_latitud": [31, 456], "origin_longitud": [31, 456], "origin_altitud": [31, 456], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 205, 207, 216, 219, 221, 224, 226, 229, 230, 231, 232, 234, 244, 246, 248, 250, 260, 262, 264, 265, 267, 276, 279, 281, 284, 286, 289, 290, 291, 293, 294, 296, 305, 308, 310, 313, 316, 318, 322, 323, 324, 326, 327, 329, 338, 341, 343, 346, 349, 351, 355, 356, 357, 359, 407, 411, 412, 413, 414, 415, 416, 417, 418, 429, 439, 442, 443, 451, 456, 462, 464, 480, 488, 516, 544, 593, 595, 596, 597, 600, 606, 617, 624, 625, 634, 635, 642, 643, 645, 646], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 156, 158, 167, 168, 217, 277, 306, 339, 369, 379, 380, 411, 412, 413, 414, 416, 417, 418, 420, 423, 428, 429, 433, 436, 437, 438, 439, 442, 456, 462, 464, 468, 480, 488, 497, 516, 544, 608, 618, 632, 634, 635, 645, 646, 659], "radar_latitud": [31, 456, 574, 586], "radar_longitud": [31, 456, 574, 586], "radar_altitud": [31, 456], "radar_tim": [31, 456], "radar_nam": [31, 456], "store": [31, 45, 74, 161, 162, 163, 383, 418, 423, 456, 468, 497, 593, 595, 597, 600, 602, 613, 643, 656, 659, 662, 664, 669], "rectilinear": [31, 456], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 369, 406, 407, 414, 417, 418, 456, 458, 464, 468, 497, 611, 616, 621, 624, 656, 657, 665], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 219, 226, 230, 231, 232, 248, 250, 260, 262, 264, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 378, 406, 407, 409, 414, 418, 430, 456, 458, 464, 468, 479, 497, 544, 563, 593, 595, 596, 597, 602, 607, 611, 614, 616, 617, 618, 619, 620, 643, 656, 662, 664], "section": [31, 45, 47, 74, 219, 244, 279, 308, 341, 416, 418, 456, 468, 470, 497, 565, 566, 593, 597, 598, 601, 602, 603, 611, 622, 640, 642, 645, 646, 656, 665, 667], "To": [31, 47, 166, 200, 201, 202, 203, 377, 378, 380, 456, 470, 590, 595, 600, 603, 605, 646, 656, 659, 662, 666, 667, 669], "creat": [31, 42, 45, 47, 50, 74, 161, 162, 163, 164, 166, 200, 201, 202, 203, 204, 205, 218, 232, 235, 251, 265, 278, 291, 294, 307, 319, 324, 327, 340, 352, 357, 372, 377, 378, 379, 380, 381, 417, 418, 449, 454, 456, 466, 468, 470, 473, 497, 584, 585, 587, 593, 597, 599, 602, 603, 608, 609, 611, 614, 617, 619, 620, 622, 623, 625, 639, 640, 641, 645, 646, 649, 654, 656, 657, 659, 662, 665, 667], "legaci": [31, 423, 456], "from_legacy_paramet": [31, 456], "ax": [31, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 244, 245, 246, 248, 250, 257, 258, 259, 260, 262, 264, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 351, 352, 354, 355, 356, 357, 358, 359, 411, 412, 413, 429, 439, 443, 451, 456, 593, 594, 595, 596, 597, 599, 600, 602, 608, 609, 613, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 638, 642, 643, 644, 645, 646, 647, 648, 652, 660], "moment": [31, 39, 45, 74, 117, 160, 161, 162, 163, 166, 201, 202, 371, 372, 373, 418, 450, 456, 464, 468, 497, 540, 573, 596, 602, 614, 622, 640, 656, 663, 665], "describ": [31, 45, 74, 166, 200, 201, 202, 203, 245, 259, 439, 456, 468, 497, 599, 645, 646], "geograph": [31, 45, 56, 74, 121, 122, 123, 124, 125, 294, 319, 327, 352, 378, 418, 456, 468, 479, 497, 597, 656], "origin": [31, 39, 161, 162, 163, 205, 265, 294, 327, 375, 377, 378, 383, 385, 414, 418, 439, 456, 464, 565, 566, 593, 594, 595, 597, 602, 603, 617, 618, 619, 620, 642, 644, 645, 646, 667], "distanc": [31, 39, 57, 119, 120, 219, 230, 279, 290, 308, 323, 341, 356, 407, 408, 411, 412, 413, 415, 416, 417, 418, 426, 442, 447, 456, 464, 480, 564, 565, 566, 574, 575, 576, 586, 593, 594, 595, 617, 627, 632, 633, 634], "axi": [31, 39, 45, 74, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 243, 244, 245, 246, 248, 250, 257, 258, 259, 260, 262, 264, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 308, 309, 310, 311, 312, 313, 314, 318, 319, 321, 322, 323, 324, 326, 341, 342, 343, 344, 345, 346, 347, 351, 352, 354, 355, 356, 357, 359, 369, 379, 456, 464, 468, 497, 593, 596, 597, 600, 608, 624, 635, 642, 645, 648, 664], "dimension": [31, 39, 161, 163, 414, 430, 439, 451, 456, 464, 617, 642, 645, 646], "space": [31, 45, 74, 123, 221, 281, 310, 343, 380, 418, 428, 429, 439, 442, 456, 468, 497, 593, 596, 614, 645, 658], "along": [31, 162, 165, 244, 247, 248, 249, 250, 261, 262, 263, 264, 456, 564, 565, 566, 575, 576, 587, 589, 595, 596, 597, 602, 645, 652], "three": [31, 163, 166, 202, 379, 430, 439, 451, 456, 596, 605, 642, 645, 646], "repeat": [31, 456], "throughout": [31, 456, 642], "nz": [31, 456], "nx": [31, 456], "ny": [31, 456], "dimens": [31, 161, 369, 415, 416, 418, 422, 423, 429, 439, 440, 442, 445, 447, 451, 456, 563, 587, 593, 596, 597, 602, 618, 643, 645, 646, 658, 662, 664], "transform": [31, 45, 74, 121, 122, 123, 124, 125, 224, 231, 284, 294, 313, 327, 346, 352, 378, 418, 428, 456, 468, 497, 595, 597, 602, 623, 645, 646], "proj": [31, 45, 74, 121, 123, 124, 257, 327, 456, 468, 497, 602], "pyart_aeqd": [31, 45, 74, 121, 123, 124, 456, 468, 497], "nativ": [31, 45, 74, 121, 123, 124, 363, 418, 423, 456, 468, 497, 602], "azimuth": [31, 45, 51, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 205, 206, 219, 221, 224, 226, 230, 231, 232, 248, 250, 260, 262, 264, 265, 266, 279, 281, 284, 286, 290, 291, 294, 295, 308, 310, 313, 318, 319, 323, 324, 327, 328, 341, 343, 346, 351, 352, 356, 357, 375, 379, 416, 423, 447, 453, 454, 456, 468, 474, 478, 480, 490, 497, 518, 564, 565, 566, 572, 574, 575, 590, 596, 597, 602, 603, 637, 639, 643, 658, 664, 667], "equidist": [31, 45, 74, 121, 122, 123, 124, 125, 224, 284, 313, 346, 352, 379, 418, 456, 468, 497, 597], "pyproj": [31, 45, 74, 121, 123, 124, 456, 468, 497, 602, 666], "projparam": [31, 34, 45, 74, 121, 123, 124, 456, 459, 468, 497], "special": [31, 45, 74, 456, 468, 497, 597], "_include_lon_0_lat_0": [31, 45, 74, 456, 468, 497], "remov": [31, 45, 56, 57, 74, 156, 157, 158, 161, 166, 200, 201, 202, 203, 219, 226, 230, 231, 232, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 384, 390, 391, 397, 401, 402, 429, 430, 439, 456, 468, 479, 480, 497, 595, 597, 600, 602, 603, 608, 619, 625, 634, 642, 645, 660, 663, 667], "interpret": [31, 45, 74, 162, 163, 378, 456, 468, 497, 578, 579, 597, 642], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 205, 224, 225, 244, 245, 246, 247, 249, 250, 257, 259, 261, 263, 264, 265, 284, 285, 294, 313, 314, 315, 317, 319, 327, 346, 347, 348, 350, 352, 418, 456, 458, 461, 464, 468, 479, 497, 564, 574, 575, 576, 586, 593, 595, 596, 597, 600, 611, 612, 615, 624, 631, 638, 643, 645, 646, 658, 659, 664, 665], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 205, 224, 225, 244, 245, 246, 247, 248, 249, 257, 259, 261, 262, 263, 265, 284, 285, 294, 313, 314, 315, 317, 319, 327, 346, 347, 348, 350, 352, 418, 456, 458, 461, 464, 468, 479, 497, 564, 574, 575, 576, 586, 593, 595, 596, 597, 600, 611, 612, 615, 624, 631, 638, 643, 645, 646, 658, 659, 664, 665], "ad": [31, 45, 47, 74, 165, 167, 168, 251, 317, 350, 415, 417, 428, 429, 439, 456, 468, 470, 497, 548, 594, 596, 599, 600, 602, 603, 634, 635, 658, 659, 666, 667], "lon_0": [31, 45, 74, 122, 125, 319, 352, 456, 468, 497, 631], "lat_0": [31, 45, 74, 122, 125, 319, 352, 456, 468, 497, 631], "get_projparam": [31, 456], "evalu": [31, 383, 385, 434, 456, 599, 602], "locat": [31, 33, 45, 55, 56, 57, 74, 205, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 243, 244, 246, 248, 250, 257, 258, 260, 262, 264, 265, 279, 280, 281, 284, 285, 286, 287, 288, 290, 291, 294, 308, 309, 310, 313, 314, 316, 318, 319, 320, 321, 323, 324, 327, 341, 342, 343, 346, 347, 349, 351, 352, 353, 354, 356, 357, 371, 372, 374, 380, 407, 414, 417, 418, 456, 458, 468, 478, 479, 480, 497, 544, 558, 564, 574, 575, 576, 593, 594, 595, 597, 599, 602, 603, 629, 631, 643, 652, 653, 654, 656, 662, 666, 667], "up": [31, 45, 74, 131, 133, 141, 148, 153, 157, 158, 175, 177, 185, 192, 197, 415, 416, 420, 423, 430, 433, 436, 437, 448, 456, 468, 497, 563, 594, 595, 599, 600, 601, 602, 605, 642, 645, 660, 664, 668], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 244, 375, 381, 440, 456, 468, 483, 484, 495, 496, 497, 512, 513, 523, 524, 568, 593, 594, 595, 596, 597, 599, 600, 603, 613, 623, 624, 634, 635, 656, 658, 667, 668], "collect": [31, 141, 153, 185, 197, 365, 371, 372, 373, 375, 406, 417, 418, 456, 596, 597, 603, 613, 628, 643, 656, 667, 668, 669], "nradar": [31, 456], "whose": [31, 374, 413, 456, 593], "wa": [31, 56, 57, 141, 162, 163, 185, 219, 226, 230, 231, 232, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 456, 479, 480, 577, 593, 595, 597, 599, 600, 602, 656, 669], "projection_proj": [31, 456], "instanc": [31, 42, 48, 161, 162, 163, 219, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 380, 381, 423, 456, 471, 577, 581, 585, 595, 597, 602], "valueerror": [31, 32, 46, 47, 456, 457, 469, 470, 597], "point_z": [31, 378, 456, 642], "point_x": [31, 378, 456], "point_i": [31, 378, 456], "func": [31, 456, 596, 602], "init_point_x_y_z": [31, 456], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 456, 461, 462, 468, 479, 487, 488, 489, 497, 515, 516, 517, 663], "point_latitud": [31, 378, 456], "point_longitud": [31, 378, 456], "perform": [31, 45, 56, 57, 58, 74, 131, 133, 141, 148, 153, 160, 161, 162, 163, 165, 175, 177, 185, 192, 197, 219, 224, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 284, 286, 289, 290, 291, 308, 313, 318, 319, 322, 323, 324, 327, 341, 346, 351, 352, 355, 356, 357, 371, 374, 379, 415, 416, 439, 445, 456, 468, 479, 480, 481, 497, 590, 596, 597, 607, 608, 609, 611, 619, 620, 624, 656], "invers": [31, 45, 74, 453, 456, 468, 497, 593], "rel": [31, 45, 74, 157, 200, 231, 317, 350, 418, 456, 468, 497, 593, 602, 603, 646, 664, 667], "init_point_longitude_latitud": [31, 456], "point_altitud": [31, 35, 378, 456, 460], "init_point_altitud": [31, 456], "init": [31, 235, 251, 383, 456, 574, 600, 602], "field_dict": [32, 457], "replace_exist": [32, 46, 47, 48, 457, 469, 470, 471, 599, 602, 603, 645, 646, 652, 659, 660, 667], "add": [32, 46, 47, 164, 168, 219, 221, 226, 229, 230, 231, 232, 244, 245, 246, 248, 250, 257, 259, 260, 262, 264, 279, 281, 286, 289, 290, 291, 308, 310, 318, 319, 322, 323, 324, 341, 343, 351, 352, 355, 356, 357, 444, 457, 469, 470, 594, 595, 596, 602, 603, 617, 623, 624, 625, 634, 635, 637, 643, 645, 646, 647, 652, 660, 666, 667, 669], "replac": [32, 46, 47, 48, 131, 133, 141, 148, 153, 162, 163, 175, 177, 185, 192, 197, 457, 469, 470, 471, 592, 600, 602], "overwrit": [32, 457, 572], "alreadi": [32, 46, 47, 457, 469, 470], "level": [33, 39, 41, 42, 45, 62, 74, 157, 158, 239, 240, 241, 242, 246, 248, 250, 252, 253, 254, 255, 260, 262, 264, 371, 372, 373, 379, 380, 442, 451, 453, 458, 464, 468, 485, 497, 573, 593, 595, 596, 602, 603, 634, 635, 638, 642, 644, 653, 656, 662, 664, 667], "height": [33, 39, 41, 42, 157, 158, 200, 246, 260, 319, 352, 415, 416, 418, 421, 429, 430, 439, 440, 448, 451, 453, 454, 458, 464, 585, 593, 596, 597, 599, 602, 603, 623, 632, 642, 643, 648, 663, 667], "determin": [33, 45, 74, 161, 162, 163, 244, 246, 248, 250, 257, 260, 262, 264, 319, 352, 360, 363, 371, 372, 375, 380, 381, 422, 429, 432, 433, 434, 436, 437, 439, 451, 453, 458, 468, 497, 572, 573, 580, 585, 588, 596, 597, 602, 603, 645, 652, 667], "same": [33, 45, 47, 55, 56, 57, 74, 122, 125, 133, 148, 161, 177, 192, 231, 319, 352, 369, 375, 379, 380, 381, 418, 429, 430, 439, 442, 448, 458, 468, 470, 478, 479, 480, 497, 548, 572, 574, 586, 590, 593, 597, 600, 603, 613, 634, 635, 642, 645, 646, 658, 663, 667, 669], "interpol": [33, 57, 120, 123, 219, 226, 230, 231, 232, 244, 248, 250, 260, 262, 264, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 365, 371, 417, 418, 440, 447, 448, 453, 458, 480, 585, 597, 602, 603, 614, 645, 646, 662, 667], "extrapol": [33, 120, 123, 219, 226, 230, 231, 232, 248, 250, 260, 262, 264, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 458, 597], "boundari": [33, 120, 123, 165, 237, 238, 257, 352, 447, 458, 548, 597, 647], "center": [33, 45, 57, 74, 119, 120, 122, 123, 125, 162, 219, 224, 226, 230, 231, 232, 245, 247, 248, 249, 250, 259, 260, 261, 262, 263, 264, 279, 284, 286, 290, 291, 294, 308, 313, 318, 319, 323, 324, 341, 346, 351, 352, 356, 357, 371, 373, 411, 412, 413, 458, 468, 480, 497, 544, 548, 563, 593, 595, 596, 597, 599, 623, 652, 660, 664], "2d": [33, 55, 56, 57, 120, 369, 379, 444, 447, 458, 478, 479, 480, 563, 593, 597, 611, 616, 617, 621, 642, 664, 665], "point_": [36, 37, 461, 462], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 142, 143, 186, 187, 408, 410, 453, 463, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 593, 597, 603, 667], "xarrai": [39, 235, 244, 246, 415, 416, 464, 564, 576, 593, 602, 638, 643, 652, 656, 666], "netcdf4": [40, 372, 377, 378, 465, 593, 594, 602, 632, 656, 658, 666, 669], "arm_time_vari": [40, 377, 378, 465], "arm_alt_lat_lon_vari": [40, 378, 465], "save": [40, 207, 219, 221, 226, 230, 231, 232, 239, 252, 267, 279, 281, 286, 290, 291, 296, 308, 310, 318, 319, 323, 324, 329, 341, 343, 351, 352, 356, 357, 378, 380, 465, 597, 599, 656, 657], "netcdf4_class": [40, 377, 378, 465], "netcdf3_class": [40, 377, 378, 465], "netcdf3_64bit": [40, 377, 378, 465], "base_tim": [40, 377, 378, 465, 596, 643], "time_offset": [40, 377, 378, 465, 596, 643], "alt": [40, 56, 378, 465, 479, 596, 597, 600, 602], "lat": [40, 56, 121, 122, 123, 124, 125, 244, 245, 246, 247, 248, 249, 250, 259, 261, 262, 263, 264, 315, 317, 319, 348, 350, 378, 379, 465, 479, 593, 596, 597, 600, 602, 624, 625, 638, 662], "lon": [40, 56, 121, 122, 123, 124, 125, 244, 245, 246, 247, 248, 249, 250, 259, 261, 262, 263, 264, 315, 317, 319, 348, 350, 378, 379, 465, 479, 593, 596, 597, 600, 602, 625, 638], "speed": [41, 42, 418, 453, 454, 563, 596, 597, 599, 602, 603, 648, 667], "direct": [41, 62, 375, 445, 453, 454, 485, 602, 603, 648, 667], "horizont": [41, 42, 43, 44, 45, 74, 156, 159, 160, 161, 219, 220, 221, 226, 230, 231, 232, 243, 244, 246, 248, 250, 258, 260, 262, 264, 279, 280, 281, 286, 290, 291, 308, 309, 310, 318, 319, 323, 324, 341, 342, 343, 351, 352, 356, 357, 364, 365, 415, 416, 453, 468, 497, 585, 595, 596, 599, 602, 603, 625, 635, 653, 664, 667], "wind": [41, 42, 43, 44, 161, 162, 364, 365, 453, 454, 585, 595, 596, 597, 599, 602, 603, 648, 667], "profil": [41, 161, 364, 365, 440, 446, 447, 448, 449, 564, 585, 602, 603, 609, 611, 641, 642, 649, 665, 667], "1d": [41, 42, 120, 123, 444, 593, 602, 664], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 205, 265, 294, 316, 319, 327, 349, 352, 407, 408, 410, 411, 412, 413, 414, 417, 418, 421, 429, 439, 442, 445, 448, 451, 453, 479, 480, 481, 544, 574, 586, 596, 597, 602, 603, 617, 648, 662, 664, 667], "abov": [41, 42, 45, 47, 74, 129, 144, 156, 157, 158, 161, 164, 165, 166, 167, 168, 173, 188, 200, 201, 202, 203, 224, 225, 284, 285, 313, 314, 346, 347, 360, 418, 421, 428, 429, 439, 453, 468, 470, 497, 564, 572, 573, 575, 576, 593, 594, 595, 596, 602, 603, 605, 611, 617, 633, 635, 641, 642, 648, 649, 652, 656, 658, 660, 665, 667, 669], "sea": [41, 42, 45, 74, 453, 468, 497, 596, 602, 603, 667], "were": [41, 42, 131, 133, 141, 175, 177, 185, 453, 595, 597, 599, 603, 667], "sampl": [41, 42, 453, 454, 455, 549, 551, 552, 573, 593, 595, 596, 600, 602, 603, 613, 614, 623, 644, 647, 648, 656, 667], "per": [41, 42, 43, 44, 58, 161, 418, 453, 481, 545, 546, 547, 603, 667], "second": [41, 42, 43, 44, 47, 58, 119, 161, 375, 383, 407, 447, 453, 470, 481, 572, 582, 583, 593, 596, 599, 603, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 663, 664, 667], "north": [41, 45, 74, 244, 246, 257, 319, 352, 468, 497, 564, 576, 593, 596, 597, 627, 664], "east": [41, 219, 230, 244, 279, 290, 308, 323, 341, 356, 564, 576, 593, 596, 597, 627], "u_wind": [41, 42, 453, 454, 603, 648, 667], "compon": [41, 42, 43, 44, 428, 596, 603, 618, 667], "v_wind": [41, 42, 453, 454, 603, 648, 667], "classmethod": 42, "_rang": [45, 74, 426, 468, 497], "scan_typ": [45, 74, 205, 218, 265, 278, 294, 307, 327, 340, 468, 497, 600, 664], "sweep_numb": [45, 74, 468, 497, 596, 602, 632, 658, 664], "sweep_mod": [45, 74, 366, 468, 497, 596, 602, 658, 664], "fixed_angl": [45, 74, 205, 265, 294, 327, 468, 497, 596, 600, 602, 632, 633, 637, 658, 664], "sweep_start_ray_index": [45, 74, 468, 497, 596, 658, 664], "sweep_end_ray_index": [45, 74, 468, 497, 596, 658, 664], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 205, 219, 221, 226, 230, 231, 232, 248, 250, 260, 262, 264, 265, 279, 281, 286, 290, 291, 294, 308, 310, 318, 319, 323, 324, 327, 341, 343, 351, 352, 356, 357, 375, 415, 447, 468, 475, 480, 491, 497, 519, 566, 572, 580, 593, 596, 597, 599, 602, 617, 618, 644, 658, 664], "altitude_agl": [45, 74, 468, 497, 596, 664], "target_scan_r": [45, 74, 468, 497, 602, 664], "rays_are_index": [45, 74, 468, 497], "ray_angle_r": [45, 74, 468, 497], "scan_rat": [45, 74, 381, 468, 497, 602, 664], "antenna_transit": [45, 56, 57, 74, 141, 153, 185, 197, 219, 226, 230, 231, 232, 265, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 468, 479, 480, 497, 597, 664], "instrument_paramet": [45, 74, 161, 381, 444, 468, 497, 596, 599, 660, 664], "radar_calibr": [45, 74, 468, 497, 664], "rotat": [45, 74, 205, 468, 497], "tilt": [45, 74, 205, 231, 319, 352, 449, 468, 497, 597, 602, 614, 631, 638], "roll": [45, 74, 205, 375, 468, 497, 584, 589], "drift": [45, 74, 205, 468, 497], "pitch": [45, 74, 205, 468, 497], "georefs_appli": [45, 74, 468, 497], "antenna": [45, 56, 57, 74, 119, 120, 141, 153, 185, 197, 200, 203, 219, 226, 230, 231, 232, 265, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 423, 468, 479, 480, 497, 597, 602, 607, 611, 616, 617, 618, 619, 620, 656, 662, 664], "structur": [45, 74, 381, 428, 439, 451, 468, 497, 600, 613, 645, 646, 663], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 127, 158, 162, 163, 166, 171, 200, 201, 202, 203, 232, 291, 324, 357, 379, 413, 417, 418, 428, 429, 439, 445, 468, 473, 474, 475, 477, 478, 479, 480, 481, 497, 577, 595, 596, 597, 602, 603, 607, 610, 611, 613, 652, 656, 660, 663, 664, 665, 667], "global": [45, 74, 468, 497, 593, 618, 664, 666], "4": [45, 74, 119, 120, 366, 369, 414, 420, 428, 448, 468, 497, 593, 594, 595, 596, 601, 603, 609, 613, 614, 618, 621, 623, 626, 627, 632, 633, 634, 635, 637, 638, 642, 645, 646, 648, 652, 653, 656, 663, 667], "repres": [45, 74, 161, 415, 416, 444, 468, 497, 545, 546, 590, 602, 642, 646], "under": [45, 74, 161, 162, 163, 418, 468, 497, 602, 603, 645, 646, 656, 666, 667], "sub": [45, 74, 468, 497, 593, 602], "convent": [45, 74, 161, 468, 497, 593, 596, 597, 613, 656, 664], "meta_group": [45, 74, 468, 497, 664], "scan": [45, 74, 117, 161, 162, 163, 164, 205, 218, 219, 221, 232, 265, 278, 279, 281, 291, 294, 307, 308, 310, 324, 327, 340, 341, 343, 357, 371, 415, 423, 468, 497, 540, 545, 546, 572, 574, 580, 585, 590, 593, 594, 595, 596, 602, 614, 617, 628, 629, 639, 642], "ppi": [45, 74, 162, 163, 164, 165, 218, 222, 226, 278, 282, 286, 307, 311, 318, 319, 340, 344, 351, 352, 415, 416, 447, 468, 497, 545, 546, 550, 553, 556, 565, 566, 572, 593, 594, 597, 602, 611, 616, 621, 622, 625, 626, 638, 640, 651, 653, 655, 656, 664, 665], "rhi": [45, 74, 218, 219, 230, 278, 279, 290, 307, 308, 323, 340, 341, 356, 416, 447, 468, 497, 546, 554, 557, 565, 566, 572, 594, 602, 611, 622, 640, 642, 656, 664, 665], "sector": [45, 74, 468, 497, 593, 602, 664], "multipl": [45, 74, 428, 468, 497, 594, 595, 602, 603, 611, 616, 622, 634, 640, 663, 665, 667, 669], "mode": [45, 62, 74, 362, 468, 485, 497, 593, 596, 602, 603, 642, 664, 666, 667], "ground": [45, 74, 423, 468, 497, 596, 597, 600, 613], "target": [45, 74, 379, 468, 497, 549, 551, 552, 553, 554, 555, 556, 557, 564, 574, 575, 576, 586, 596, 664], "angl": [45, 51, 52, 74, 119, 120, 205, 219, 231, 265, 279, 294, 308, 327, 341, 447, 449, 468, 474, 475, 497, 559, 560, 561, 562, 564, 565, 566, 572, 574, 575, 582, 583, 590, 593, 596, 602, 618, 637, 639, 648, 658, 664], "thr": [45, 74, 468, 497], "index": [45, 60, 74, 89, 166, 202, 232, 246, 248, 250, 260, 262, 264, 291, 324, 357, 379, 407, 423, 449, 468, 483, 497, 512, 593, 595, 596, 597, 599, 602, 657], "rays_per_sweep": [45, 66, 74, 94, 468, 489, 497, 517, 545, 546], "upon": [45, 74, 166, 200, 201, 202, 203, 468, 497, 595, 599, 602], "prior": [45, 47, 74, 165, 167, 168, 219, 226, 229, 230, 231, 232, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 375, 468, 470, 497, 597, 605, 614, 656], "init_rays_per_sweep": [45, 74, 468, 497], "intend": [45, 74, 468, 497], "rate": [45, 74, 420, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 468, 497, 602, 645, 646], "whether": [45, 74, 131, 175, 366, 414, 468, 497, 596, 597, 663], "regular": [45, 74, 380, 468, 497, 597, 600, 623, 642], "angular": [45, 74, 468, 497, 563, 582, 583], "resolut": [45, 74, 219, 221, 222, 226, 227, 230, 231, 232, 257, 279, 281, 282, 286, 287, 290, 291, 308, 310, 311, 318, 319, 320, 323, 324, 341, 343, 344, 351, 352, 353, 356, 357, 371, 418, 428, 429, 439, 445, 451, 468, 497, 548, 595, 596, 597, 600, 614, 628, 631, 652, 653, 660, 662, 663], "express": [45, 74, 468, 497], "360": [45, 74, 164, 165, 320, 353, 468, 497, 572, 602, 648, 658, 664], "represent": [45, 74, 468, 497], "forbidden": [45, 74, 468, 497], "plane": [45, 74, 379, 415, 416, 468, 497, 593, 664], "180": [45, 74, 122, 468, 497, 572, 593, 595, 596, 603, 646, 658, 667], "gate_z": [45, 57, 74, 468, 480, 497], "gate_x": [45, 57, 74, 468, 480, 497], "gate_i": [45, 57, 74, 468, 480, 497], "system": [45, 74, 121, 122, 123, 167, 168, 362, 371, 379, 409, 414, 468, 497, 602, 603, 666, 667], "assum": [45, 74, 119, 120, 161, 164, 442, 445, 447, 448, 468, 497, 572, 595, 599], "earth": [45, 74, 119, 120, 122, 125, 468, 497, 574, 586, 593, 597], "radiu": [45, 74, 119, 120, 122, 125, 411, 412, 413, 414, 417, 418, 429, 439, 451, 468, 497, 574, 586, 645, 662], "model": [45, 74, 119, 120, 162, 372, 378, 428, 468, 497, 596, 647], "init_gate_x_y_z": [45, 74, 468, 497], "gate_latitud": [45, 56, 64, 74, 92, 468, 479, 487, 497, 515, 593], "gate_longitud": [45, 56, 64, 74, 92, 468, 479, 487, 497, 515, 593, 658], "init_gate_longitude_latitud": [45, 74, 468, 497, 658], "gate_altitud": [45, 56, 63, 74, 91, 468, 479, 486, 497, 514, 593], "init_gate_altitud": [45, 74, 468, 497, 658], "actual": [45, 74, 375, 379, 414, 428, 468, 497, 669], "flag": [45, 74, 161, 265, 375, 446, 447, 449, 451, 468, 497, 580, 593, 600, 602, 669], "transit": [45, 56, 57, 74, 141, 153, 166, 185, 197, 201, 202, 219, 226, 230, 231, 232, 265, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 446, 468, 479, 480, 497, 597, 602], "ye": [45, 74, 161, 468, 497], "about": [45, 74, 468, 497, 593, 595, 600, 601, 602], "aircraft": [45, 74, 231, 375, 468, 497, 564], "longitudin": [45, 74, 231, 242, 250, 254, 255, 264, 468, 497], "vertic": [45, 74, 160, 161, 219, 220, 221, 226, 230, 231, 232, 240, 243, 244, 246, 248, 250, 258, 260, 262, 264, 279, 280, 281, 286, 290, 291, 308, 309, 310, 318, 319, 323, 324, 341, 342, 343, 351, 352, 356, 357, 379, 415, 416, 430, 442, 449, 468, 497, 564, 580, 590, 593, 595, 602, 635, 642, 647, 648, 653], "orthogon": [45, 74, 468, 497], "platform": [45, 74, 468, 497, 593, 605], "right": [45, 74, 468, 497, 595, 598, 599, 600, 602, 623, 624, 642, 656], "wing": [45, 74, 468, 497], "down": [45, 74, 468, 497, 591, 595], "track": [45, 74, 468, 497, 593, 597, 602], "compass": [45, 74, 468, 497], "clockwis": [45, 74, 468, 497], "nose": [45, 74, 468, 497, 602], "had": [45, 74, 380, 468, 497, 600, 602, 613, 669], "georefer": [45, 74, 468, 497], "lead": [45, 74, 468, 497, 597, 617], "centric": [45, 74, 468, 497], "avaiabl": [45, 74, 468, 497], "radar_paramet": [45, 74, 468, 497, 596], "subconvent": [45, 74, 468, 497], "calibr": [45, 74, 432, 468, 497, 596], "ngate": [45, 55, 74, 468, 478, 497, 545, 546, 547, 593, 602, 658, 664], "nrai": [45, 55, 74, 426, 468, 478, 497, 547, 575, 602, 658, 664], "nsweep": [45, 74, 468, 497, 545, 546, 618, 632, 633, 648, 664], "loos": [46, 47, 469, 470], "existing_field_nam": [47, 470], "note": [47, 119, 131, 133, 141, 148, 153, 158, 161, 165, 175, 177, 185, 192, 197, 246, 319, 366, 369, 370, 380, 415, 416, 418, 428, 442, 444, 445, 453, 470, 572, 594, 597, 600, 602, 603, 613, 614, 618, 625, 645, 646, 666, 667], "made": [47, 377, 422, 470, 590, 594, 596, 597, 603, 604, 667], "done": [47, 161, 165, 451, 470, 603, 605, 658, 666, 667, 669], "both": [47, 161, 166, 202, 363, 442, 443, 470, 593, 597, 602, 603, 614, 617, 618, 620, 624, 639, 646, 656, 662, 663, 666, 667], "numpi": [47, 133, 148, 177, 192, 470, 593, 595, 596, 597, 599, 600, 602, 603, 605, 608, 617, 619, 623, 626, 631, 634, 635, 637, 642, 643, 645, 646, 647, 648, 656, 658, 659, 660, 662, 663, 664, 666, 667, 669], "see": [47, 120, 127, 161, 171, 218, 232, 244, 247, 249, 257, 261, 263, 278, 291, 307, 319, 324, 340, 352, 357, 369, 377, 378, 418, 428, 429, 439, 442, 451, 470, 593, 595, 597, 599, 600, 602, 603, 613, 614, 623, 642, 645, 646, 656, 658, 660, 662, 663, 667], "how": [47, 375, 377, 378, 470, 593, 594, 595, 596, 597, 599, 600, 602, 604, 613, 614, 623, 624, 625, 642, 656, 659, 662, 663, 669], "reflectivity_copi": [47, 470], "gatefilt": [48, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 200, 201, 202, 203, 219, 226, 229, 230, 231, 232, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 407, 417, 418, 423, 445, 446, 447, 449, 453, 454, 471, 593, 595, 597, 599, 600, 602, 603, 609, 617, 619, 620, 624, 642, 644, 652, 657, 660, 667], "updat": [48, 471, 572, 594, 598, 599, 602, 603, 625, 645, 656, 667], "mask": [48, 131, 133, 137, 141, 148, 152, 153, 161, 162, 163, 164, 166, 175, 177, 181, 185, 192, 196, 197, 200, 201, 202, 203, 219, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 371, 372, 373, 418, 423, 430, 448, 471, 548, 577, 597, 600, 602, 608, 617, 619, 642, 645, 646, 652, 657, 658, 659, 664], "filter": [48, 127, 131, 133, 141, 148, 153, 161, 162, 163, 164, 165, 166, 219, 226, 230, 231, 232, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 407, 417, 418, 422, 445, 446, 447, 471, 593, 595, 597, 599, 600, 602, 609, 617, 619, 620, 624, 642, 644, 652, 660, 663], "equal": [48, 121, 123, 124, 132, 133, 139, 147, 148, 151, 162, 176, 177, 183, 191, 192, 195, 352, 369, 380, 428, 451, 453, 471, 572, 597, 626, 642, 645, 646, 647, 663], "condit": [48, 127, 131, 133, 141, 148, 153, 161, 171, 175, 177, 185, 192, 197, 380, 434, 471, 593, 609, 659, 663], "append": [48, 471, 599, 600, 602, 648], "filtered_": [48, 471], "prefix": [48, 466, 471], "check": [49, 58, 77, 162, 163, 164, 165, 374, 422, 428, 448, 472, 481, 500, 574, 586, 590, 595, 596, 599, 600, 602, 603, 605, 656, 666, 667, 668], "keyerror": [49, 77, 390, 391, 401, 402, 472, 500, 666], "array_lik": [50, 473, 579], "view": [51, 52, 54, 383, 388, 389, 395, 399, 400, 405, 474, 475, 477, 593, 600, 624, 660, 662, 664], "possibl": [51, 52, 54, 375, 474, 475, 477, 573, 597, 599, 600, 602, 606, 623, 642, 645, 646, 660, 662], "underli": [51, 52, 54, 219, 226, 230, 231, 232, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 363, 474, 475, 477, 597, 656], "get_gate_x_y_z": [54, 477, 634, 635], "obtain": [54, 57, 477, 480, 600, 603, 648, 658, 667], "plot": [54, 57, 204, 205, 206, 207, 208, 209, 210, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 449, 454, 477, 480, 593, 594, 602, 608, 609, 613, 614, 617, 618, 619, 620, 640, 641, 642, 643, 645, 646, 649, 651, 652, 655, 656, 658, 659, 660, 662, 663, 665], "correct": [54, 57, 171, 200, 201, 202, 203, 369, 440, 445, 477, 480, 550, 593, 595, 599, 602, 603, 606, 609, 610, 614, 625, 642, 647, 652, 656, 660, 665, 667], "spatial": [54, 57, 161, 477, 480, 593, 662], "context": [54, 57, 477, 480, 595, 643], "request": [54, 123, 371, 417, 418, 443, 477, 597, 602, 603, 604, 605, 656, 667], "area": [55, 219, 221, 226, 230, 231, 232, 233, 279, 281, 286, 290, 291, 292, 308, 310, 318, 319, 323, 324, 325, 341, 343, 351, 352, 356, 357, 358, 428, 447, 451, 478, 577, 593, 595, 597, 599], "squar": [55, 422, 442, 445, 453, 478], "assumpt": [55, 445, 478], "size": [55, 158, 161, 162, 164, 165, 201, 222, 282, 311, 344, 413, 415, 416, 417, 418, 422, 429, 430, 438, 439, 445, 447, 478, 548, 563, 589, 596, 625, 638, 643, 645, 646], "m": [55, 58, 163, 200, 203, 207, 267, 296, 329, 414, 418, 422, 426, 428, 432, 439, 442, 444, 445, 446, 449, 451, 478, 481, 563, 564, 577, 587, 593, 595, 596, 597, 599, 600, 602, 603, 605, 613, 626, 635, 642, 645, 646, 648, 652, 656, 666, 667], "reset_gate_coord": [56, 479], "filter_transit": [56, 57, 219, 226, 230, 231, 232, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 479, 480, 597], "With": [56, 57, 479, 480, 656, 657, 658], "therefor": [56, 57, 445, 479, 480, 593, 660, 664], "more": [56, 57, 62, 162, 165, 379, 414, 417, 418, 423, 428, 429, 439, 451, 479, 480, 485, 565, 566, 593, 594, 595, 596, 597, 598, 600, 602, 603, 617, 623, 634, 635, 642, 656, 660, 664, 667], "effici": [56, 57, 417, 428, 479, 480, 656, 660], "than": [56, 57, 162, 168, 219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 428, 429, 430, 439, 445, 479, 480, 572, 577, 595, 596, 597, 600, 642, 645, 669], "through": [56, 57, 244, 444, 479, 480, 596, 597, 599, 601, 603, 617, 623, 667], "No": [56, 57, 163, 219, 226, 230, 231, 232, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 379, 418, 479, 480, 597], "get_field": [57, 480, 634, 635], "check_uniform": [58, 481], "lookuperror": [58, 481], "except": [58, 379, 396, 481, 597, 602, 662], "skip": [58, 162, 163, 374, 422, 481, 595, 602, 603, 667], "nyquist_veloc": [58, 162, 163, 381, 481, 596, 599, 660, 664], "slice": [59, 71, 88, 99, 247, 248, 249, 250, 261, 262, 263, 264, 482, 494, 511, 522, 638, 662, 664], "_io": [62, 485], "textiowrapp": [62, 485], "encod": [62, 380, 485, 602], "utf": [62, 485], "compact": [62, 485], "c": [62, 119, 122, 125, 156, 158, 160, 161, 163, 257, 352, 428, 432, 434, 441, 444, 445, 446, 447, 449, 454, 485, 550, 593, 597, 599, 600, 602, 603, 617, 646, 656, 659, 662, 666, 667, 669], "f": [62, 257, 352, 394, 404, 485, 593, 594, 595, 596, 597, 599, 600, 614, 618, 623, 632, 633, 637, 642, 645, 646, 656, 669], "minim": [62, 445, 451, 485], "everyth": [62, 485, 597, 603, 614, 667], "screen": [62, 485], "gate_": [65, 93, 488, 516], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 394, 404, 445, 447, 490, 491, 492, 493, 494, 495, 496, 518, 519, 520, 521, 522, 523, 524, 599, 664], "over": [69, 72, 73, 97, 100, 101, 161, 162, 200, 219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 428, 429, 439, 492, 495, 496, 520, 523, 524, 573, 593, 597, 599, 602, 617, 645, 646, 648, 656, 659, 664], "npulses_max": [74, 497, 547], "velocity_bin": [74, 497], "simpl": [117, 407, 540, 602, 659, 660], "vpt": [117, 210, 218, 232, 270, 278, 291, 299, 307, 324, 332, 340, 357, 540, 580, 596, 602], "mean": [117, 119, 453, 540, 548, 559, 560, 573, 578, 582, 583, 593, 596, 602, 603, 606, 613, 614, 642, 663, 664, 667], "kilomet": [119, 415, 429, 439], "equat": [119, 445, 573, 593, 602], "28": [119, 593, 595, 597, 602, 645, 646, 648], "b": [119, 360, 420, 428, 429, 439, 446, 454, 593, 594, 595, 596, 600, 602, 603, 646, 656, 667], "doviak": 119, "zrnic": 119, "sqrt": [119, 122, 593, 634, 635, 648], "r": [119, 121, 122, 123, 124, 125, 161, 163, 167, 168, 211, 224, 225, 245, 259, 271, 284, 285, 300, 313, 314, 315, 316, 333, 346, 347, 348, 349, 420, 428, 429, 430, 433, 436, 437, 438, 439, 451, 453, 573, 577, 593, 603, 613, 626, 634, 635, 642, 645, 646, 667], "sin": [119, 122, 125, 593, 595], "theta_": 119, "arcsin": [119, 122, 595], "frac": 119, "theta_a": 119, "arc": [119, 574], "length": [119, 167, 168, 445, 595, 597, 602], "effect": [119, 131, 133, 141, 148, 153, 175, 177, 185, 192, 197, 231, 417, 418, 595, 618, 634, 642], "taken": [119, 167, 168, 219, 279, 308, 341, 550, 565, 566, 573, 578, 579, 627], "6371": [119, 122, 125, 574, 586, 595], "km": [119, 122, 125, 205, 222, 227, 228, 234, 265, 282, 287, 288, 293, 294, 311, 320, 321, 326, 327, 344, 352, 353, 354, 359, 416, 426, 428, 429, 439, 445, 548, 574, 586, 594, 595, 596, 597, 600, 618, 627, 632, 633, 635, 642, 643, 653, 662], "doppler": [119, 161, 162, 163, 453, 573, 596, 603, 607, 610, 611, 627, 637, 642, 656, 664, 665, 667], "edit": [119, 601, 602, 603, 667], "1993": 119, "21": [119, 438, 593, 595, 599], "vector": [120, 123, 219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 426, 442, 593, 595, 597, 602], "util": [120, 158, 161, 162, 231, 432, 455, 596, 600, 602, 603, 614, 626, 639, 643, 645, 646, 656, 667], "antenna_to_cartesian": [120, 602], "detail": [120, 127, 161, 171, 244, 257, 319, 352, 377, 378, 414, 418, 429, 439, 593, 595, 597, 599, 604, 605, 642, 645, 646, 656, 664], "cartograph": [121, 122, 123, 124, 125, 327], "differ": [121, 123, 124, 161, 360, 407, 415, 416, 428, 429, 433, 439, 445, 594, 595, 596, 597, 600, 602, 603, 611, 613, 617, 642, 645, 646, 651, 662, 666, 667], "pass": [121, 123, 124, 161, 162, 163, 218, 219, 226, 230, 231, 232, 244, 246, 248, 250, 257, 260, 262, 264, 278, 279, 286, 290, 291, 307, 308, 315, 316, 317, 318, 319, 320, 323, 324, 340, 341, 348, 349, 350, 351, 352, 353, 356, 357, 362, 363, 371, 373, 414, 418, 445, 595, 597, 602, 605, 613, 614, 659, 662], "desir": [121, 123, 124, 131, 133, 141, 148, 153, 175, 177, 185, 192, 197, 383, 429, 439, 453, 543, 587, 595, 596, 643, 663], "6370997": [122, 125], "rho": 122, "arctan2": [122, 648], "correspond": [122, 125, 142, 143, 186, 187, 218, 246, 260, 278, 307, 340, 364, 390, 401, 415, 418, 564, 573, 575, 595, 597, 603, 613, 626, 660, 664, 667], "typic": [122, 125, 127, 131, 133, 141, 148, 153, 162, 171, 175, 177, 185, 192, 197, 379, 414, 417, 618, 669], "snyder": [122, 125], "manual": [122, 125, 600, 602, 605, 656], "geolog": [122, 125], "survei": [122, 125], "profession": [122, 125], "paper": [122, 125, 656], "1395": [122, 125, 602], "1987": [122, 125], "pp": [122, 125], "191": [122, 125], "202": [122, 125], "find": [123, 162, 165, 407, 414, 417, 418, 439, 440, 593, 597, 599, 600, 602, 614, 646, 656, 669], "arcco": 125, "exclude_bas": [127, 171], "boolean": [127, 133, 142, 143, 148, 171, 177, 186, 187, 192, 360, 429, 439, 449, 602, 663], "variou": [127, 164, 166, 171, 200, 201, 202, 203, 564, 576, 595, 602, 611, 641, 656], "exclude_below": [127, 171, 593, 595, 599, 600, 617, 644, 652, 663], "suggest": [127, 171, 594, 602], "begin": [127, 161, 162, 163, 167, 168, 171, 207, 209, 226, 230, 267, 269, 286, 290, 296, 298, 318, 323, 329, 331, 351, 356, 369, 370, 373, 375, 602], "import": [127, 171, 449, 453, 454, 466, 594, 600, 602, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 658, 659, 660, 662, 663, 664, 666], "radar_fil": [127, 171, 609, 623, 625], "nc": [127, 171, 593, 594, 596, 600, 602, 608, 617, 618, 620, 623, 624, 625, 629, 631, 632, 633, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 658, 659, 663], "10": [127, 136, 158, 164, 167, 168, 171, 180, 414, 418, 429, 430, 434, 435, 439, 444, 446, 447, 564, 577, 593, 595, 596, 597, 599, 600, 603, 608, 609, 610, 614, 617, 618, 619, 623, 626, 627, 629, 631, 634, 635, 638, 642, 645, 646, 648, 652, 656, 658, 659, 660, 662, 663, 664, 665, 667], "normalized_coherent_pow": [127, 171, 593, 663], "75": [127, 171, 233, 292, 325, 358, 379, 429, 439, 444, 593, 599, 617, 634, 642, 645, 658, 662, 663], "exclude_mask": [129, 131, 132, 133, 134, 135, 136, 139, 140, 141, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 173, 175, 176, 177, 178, 179, 180, 183, 184, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 619], "op": [129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 596], "inclus": [129, 131, 134, 140, 144, 146, 149, 154, 173, 175, 178, 184, 188, 190, 193, 198, 414, 418, 544, 602, 623], "below": [131, 146, 161, 164, 166, 167, 168, 175, 190, 200, 201, 202, 203, 219, 226, 229, 230, 231, 232, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 417, 418, 428, 429, 433, 436, 437, 439, 445, 572, 573, 593, 594, 595, 596, 597, 623, 642, 645, 658, 660, 663, 668], "compar": [131, 161, 175, 423, 563, 603, 611, 616, 621, 623, 642, 645, 646, 665, 667], "against": [131, 161, 175, 604, 605, 634], "mark": [131, 141, 142, 143, 153, 161, 175, 185, 186, 187, 197, 594], "exclus": [131, 175, 618], "oper": [131, 133, 141, 148, 153, 175, 177, 185, 192, 197, 375, 414, 418, 434, 438, 439, 447, 451, 593, 596, 597, 603, 645, 646, 666, 667], "merg": [131, 133, 141, 148, 153, 162, 175, 177, 185, 192, 197, 365, 572, 603, 605, 667], "AND": [131, 133, 141, 148, 153, 175, 177, 185, 192, 197], "OR": [131, 133, 141, 148, 153, 175, 177, 185, 192, 197, 593], "gener": [131, 133, 141, 148, 153, 175, 177, 185, 192, 197, 206, 207, 208, 209, 210, 219, 221, 226, 229, 230, 231, 232, 239, 240, 241, 242, 244, 246, 248, 250, 252, 253, 254, 255, 260, 262, 264, 266, 267, 268, 269, 270, 279, 281, 286, 289, 290, 291, 295, 296, 297, 298, 299, 308, 310, 318, 319, 322, 323, 324, 328, 329, 330, 331, 332, 341, 343, 351, 352, 355, 356, 357, 378, 381, 396, 407, 417, 418, 440, 445, 595, 597, 598, 600, 602, 605, 608, 609, 611, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656], "meet": [131, 133, 141, 148, 153, 175, 177, 185, 192, 197, 377, 656], "result": [131, 133, 141, 148, 153, 161, 162, 163, 175, 177, 185, 192, 197, 219, 226, 229, 230, 231, 232, 248, 250, 260, 262, 264, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 362, 378, 383, 415, 416, 418, 423, 449, 454, 584, 595, 596, 597, 603, 614, 618, 642, 646, 647, 656, 662, 667], "previous": [131, 133, 141, 148, 153, 175, 177, 185, 192, 197, 613, 642, 645], "becaus": [131, 133, 141, 175, 177, 185, 445, 645, 669], "invalid": [131, 133, 135, 141, 166, 175, 177, 179, 185, 200, 201, 202, 203, 593, 600], "shape": [133, 148, 177, 192, 369, 448, 593, 596, 597, 599, 600, 602, 603, 645, 658, 662, 663, 664, 667], "v1": [134, 140, 149, 154, 178, 184, 193, 198, 593, 594, 605, 666], "v2": [134, 140, 149, 154, 178, 184, 193, 198, 603, 667], "insid": [134, 149, 178, 193, 659], "interv": [134, 140, 149, 154, 162, 166, 178, 184, 193, 198, 202, 563, 578, 579, 593, 600, 602], "occur": [135, 155, 165, 179, 199, 371, 372, 593, 660, 664], "nan": [135, 155, 161, 166, 179, 199, 202, 447, 593, 596, 602, 643], "inf": [135, 155, 166, 179, 199, 202, 602], "n_gate": [136, 180], "try": [136, 180, 422, 445, 595, 600, 601, 662, 663], "ring": [136, 180, 227, 228, 287, 288, 320, 321, 353, 354, 595, 618, 619, 631], "artifact": [136, 162, 180, 602, 660, 662], "some": [136, 180, 294, 327, 391, 402, 447, 466, 594, 595, 596, 597, 599, 600, 601, 602, 614, 623, 624, 642, 643, 645, 656, 660, 662, 666], "outsid": [140, 154, 166, 184, 198, 202, 226, 229, 231, 232, 244, 246, 248, 250, 260, 262, 264, 286, 289, 291, 318, 319, 322, 324, 351, 352, 355, 357, 428, 597, 602, 603, 642, 667], "trans_valu": [141, 153, 185, 197], "construct": [141, 153, 185, 197, 418, 596], "element": [142, 143, 161, 162, 163, 164, 165, 186, 187, 381, 415, 416, 417, 418, 422, 448, 563, 578, 579, 582, 583, 595, 596, 597], "NOT": [142, 143, 186, 187], "gate_includ": [142, 186, 663], "lost": [142, 143, 186, 187, 447, 590, 593, 662], "again": [142, 143, 186, 187, 597, 605, 614, 625, 646, 666], "gate_exclud": [143, 187, 663], "z_offset": 156, "doc": [156, 157, 158, 168, 593, 597, 602, 603, 605, 608, 614, 656, 666, 667, 669], "15": [156, 445, 577, 593, 594, 595, 596, 600, 608, 609, 610, 613, 614, 615, 623, 626, 632, 633, 634, 635, 638, 639, 640, 642, 643, 646, 648, 660, 664, 665], "fzl": [156, 157, 158, 167, 168], "4000": [156, 167, 168, 662], "rhv_min": 156, "ncp_min": 156, "a_coef": [156, 158], "06": [156, 593, 595, 599, 621, 665], "beta": [156, 158, 432, 433, 434, 435, 436, 437], "refl_field": [156, 157, 158, 166, 167, 168, 201, 202, 418, 421, 427, 428, 429, 433, 435, 436, 437, 438, 444, 451, 608, 645, 647], "ncp_field": [156, 166, 167, 168, 202, 608], "rhv_field": [156, 166, 167, 168, 201, 202, 444, 608, 647], "spec_at_field": [156, 157, 158], "corr_refl_field": [156, 157, 158], "attenu": [156, 157, 158, 432, 433, 436, 602, 607, 610, 611, 647, 656, 665], "phi": [156, 158, 167, 602, 608], "copol_coeff": [156, 550, 608, 643, 644, 658], "norm_coherent_pow": [156, 550, 608, 658], "proc_dp_phase_shift": [156, 608, 643, 658], "reflectivity_horizont": [156, 161, 550, 594, 608, 617, 623, 625, 629, 631, 632, 633, 637, 639, 642, 643, 644, 645, 646, 653, 658, 659], "supress": [156, 235, 246, 251, 319, 352, 597, 602], "freez": [156, 157, 158], "layer": [156, 157, 158, 200, 203, 379, 433, 445, 449, 548], "combin": [156, 157, 158, 581, 593, 595, 596, 603, 605, 667], "minimum": [156, 166, 167, 168, 201, 202, 203, 219, 221, 226, 229, 230, 231, 232, 279, 281, 286, 289, 290, 291, 308, 310, 318, 319, 322, 323, 324, 341, 343, 351, 352, 355, 356, 357, 379, 414, 418, 428, 429, 430, 439, 544, 548, 573, 593, 595, 597, 600, 602, 642, 645, 662], "normal": [156, 166, 167, 168, 202, 219, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 430, 597, 634, 642], "coher": [156, 166, 167, 168, 202], "power": [156, 158, 166, 167, 168, 202, 432, 433, 434, 435, 436, 437, 593, 596], "zdr_field": [156, 157, 158, 160, 201, 424, 444, 647], "spec_at": [156, 157, 158, 608, 647], "cor_z": [156, 157, 158, 608, 647], "gu": [156, 158], "et": [156, 158, 160, 428, 429, 430, 434, 438, 439, 444, 445, 451, 645, 646], "al": [156, 158, 160, 428, 429, 430, 434, 438, 439, 444, 445, 446, 451, 645, 646], "heavi": [156, 158, 577, 595, 626, 634, 646], "rain": [156, 158, 428, 432, 433, 434, 435, 438, 439, 451, 602, 626, 634, 645, 646, 647], "jamc": [156, 158, 447, 564], "2011": [156, 158, 643], "50": [156, 158, 563, 593, 594, 595, 596, 599, 620, 638, 642, 643, 647, 662, 664], "39": [156, 158, 593, 595, 643], "58": [156, 158, 428, 596, 642, 643], "pia_coef": 157, "pida_coef": 157, "temp_field": [157, 158, 203, 444, 647], "iso0_field": [157, 158, 200], "pia_field": [157, 158], "spec_diff_at_field": [157, 158], "pida_field": [157, 158], "corr_zdr_field": [157, 158], "temp_ref": [157, 158, 647], "linear": [157, 167, 168, 244, 371, 429, 439, 447, 573, 585, 596, 597, 602, 645, 646, 656], "dependec": 157, "comput": [157, 158, 160, 201, 424, 425, 426, 427, 429, 439, 445, 446, 447, 559, 560, 561, 562, 563, 578, 579, 582, 583, 589, 593, 596, 602, 642, 647, 648, 656], "either": [157, 158, 161, 162, 163, 219, 220, 221, 226, 229, 230, 231, 232, 243, 244, 246, 248, 250, 258, 260, 262, 264, 279, 280, 281, 286, 289, 290, 291, 308, 309, 310, 318, 322, 323, 324, 341, 342, 343, 351, 355, 356, 357, 365, 394, 404, 433, 436, 437, 603, 642, 645, 666, 667], "frequenc": [157, 158, 381, 430, 432, 433, 434, 436, 437, 441, 444, 445, 446, 447, 596, 642], "refl": [157, 158, 632], "integr": [157, 158, 593, 596], "pida_coeff": 157, "0c": [157, 158], "isotherm": [157, 158], "height_over_iso0": [157, 158, 663], "fixed_fzl": [157, 158], "pia_dict": [157, 158], "spec_diff_at": [157, 158, 647], "pida_dict": [157, 158], "cor_zdr": [157, 158, 647], "smooth_window_len": 158, "d": [158, 163, 207, 267, 296, 329, 383, 384, 386, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 428, 447, 454, 564, 593, 595, 596, 597, 600, 603, 643, 656, 667], "forumul": 158, "smooth": [158, 165, 445, 574, 586, 597, 634, 635, 662], "window": [158, 161, 167, 168, 201, 422, 447, 453, 563, 572, 584, 589, 602, 603, 656, 667], "expon": [158, 167, 168, 420, 432, 433, 434, 435, 436, 437], "law": [158, 432, 433, 434, 435, 436, 437], "ryzhkov": [158, 432, 449, 564], "potenti": [158, 432, 593, 600], "rainfal": [158, 428, 432, 433, 434, 435, 436, 437, 438, 445, 447], "estim": [158, 200, 203, 221, 281, 310, 343, 415, 426, 432, 433, 434, 435, 436, 437, 438, 445, 446, 447, 449, 564, 573, 596, 602, 645, 646], "mitig": [158, 432], "partial": [158, 432, 602], "beam": [158, 413, 417, 418, 432, 596], "blockag": [158, 432], "network": [158, 162, 373, 432, 595], "jaot": [158, 160], "2014": [158, 432, 446, 449, 656], "31": [158, 371, 432, 593, 595, 596, 599, 614, 643], "599": [158, 432], "619": [158, 432, 602], "bia": [159, 602], "magnitud": [159, 445, 648, 664], "corrected_field": 159, "urhohv_field": 160, "snr_field": [160, 421, 427], "nh_field": 160, "nv_field": 160, "rhohv_field": [160, 424, 425], "nois": [160, 421, 426, 427, 573, 596, 600, 602, 642, 660], "eq": [160, 632], "6": [160, 201, 428, 433, 593, 595, 596, 600, 614, 617, 618, 623, 624, 628, 631, 642, 643, 644, 647, 648, 658, 660, 663, 664], "2006": [160, 614], "subtract": [160, 429, 439], "uncorrect": [160, 593, 652], "snr": [160, 421, 427, 602], "channel": [160, 379, 593, 596, 602, 605], "meteo": 160, "franc": 160, "23": [160, 593, 595, 596, 615, 648], "1340": 160, "1356": [160, 602], "last_radar": 161, "sonde_profil": 161, "filt": 161, "rsl_badval": 161, "131072": 161, "keep_origin": [161, 162, 163], "set_limit": [161, 162, 163, 594, 626, 627, 628, 630, 632, 633, 634, 635, 637, 642], "vel_field": [161, 162, 163, 422, 454, 642, 652, 660], "corr_vel_field": [161, 162, 163], "last_vel_field": 161, "max_shear": 161, "05": [161, 417, 418, 593, 595, 621, 638, 640, 642, 643, 665], "sign": [161, 602, 634, 635, 642], "dealia": [161, 162, 163, 431, 599, 602, 607, 610, 611, 642, 651, 655, 660, 665], "4dd": [161, 602], "univers": [161, 376, 438, 593, 602, 656], "washington": 161, "previou": [161, 319, 352, 597, 600, 602, 605], "sound": [161, 602], "For": [161, 247, 249, 261, 263, 369, 379, 417, 444, 445, 593, 594, 596, 597, 602, 603, 606, 613, 617, 642, 647, 656, 663, 664, 667, 669], "best": [161, 595, 642], "argument": [161, 162, 163, 219, 226, 230, 231, 232, 244, 246, 247, 248, 249, 250, 260, 261, 262, 263, 264, 279, 286, 290, 291, 308, 315, 316, 317, 318, 319, 320, 323, 324, 341, 348, 349, 350, 351, 352, 353, 356, 357, 371, 373, 381, 383, 414, 418, 446, 447, 602, 603, 667], "_fourdd_interfac": 161, "fourdd_dealia": 161, "fine": 161, "tune": [161, 645, 646], "behavior": [161, 319, 352, 369, 383, 597, 602, 606], "fourdd": 161, "document": [161, 247, 249, 257, 261, 263, 319, 352, 372, 377, 378, 585, 591, 594, 596, 597, 598, 600, 603, 604, 656, 662, 667], "dealias": [161, 162, 163, 431, 602, 603, 609, 613, 652, 656, 657, 667], "mean_doppler_veloc": [161, 596, 600, 637, 642, 643, 652, 658], "successfulli": 161, "greatli": 161, "improv": [161, 446, 447, 577, 597, 605, 626, 646], "final": [161, 446, 447, 593, 594, 600, 601, 605, 618, 642, 645], "horizontalwindprofil": [161, 364, 365, 454, 585, 602, 603, 667], "sond": [161, 162, 364, 365, 440, 602, 609], "moment_based_gate_filt": [161, 162, 163, 418, 595], "bergen": 161, "alber": 161, "bad": [161, 445, 446, 447, 451], "rsl": [161, 363, 374, 375, 602, 656, 666], "procedur": [161, 162, 163], "fail": [161, 162, 163, 369, 379, 602, 603, 667], "otherwis": [161, 390, 401, 433, 436, 437, 442, 605], "maxshear": 161, "maximum": [161, 162, 166, 167, 168, 200, 201, 202, 219, 221, 226, 229, 230, 231, 232, 279, 281, 286, 289, 290, 291, 308, 310, 318, 319, 322, 323, 324, 341, 343, 351, 352, 355, 356, 357, 360, 379, 414, 415, 416, 418, 423, 429, 433, 436, 437, 439, 445, 544, 548, 563, 572, 580, 593, 595, 597, 642, 644, 645, 652, 664], "shear": 161, "incorpor": [161, 439, 645], "match": [161, 164, 165, 205, 265, 294, 327, 375, 407, 600, 602, 617, 625, 646], "toward": 161, "neg": [161, 219, 230, 279, 290, 308, 323, 341, 356, 445, 572, 593, 602, 623], "compthresh": 161, "fraction": [161, 415, 416, 430, 595, 642, 645, 664], "threshold": [161, 164, 165, 166, 200, 201, 202, 203, 360, 428, 429, 433, 436, 437, 439, 573, 577, 593, 595, 599, 642, 645, 652, 660, 663], "continu": [161, 163, 596, 602, 603, 667], "unfold": [161, 162, 167, 168, 445], "compthresh2": 161, "thresh": [161, 433, 436, 437], "adjac": [161, 597], "count": [161, 430, 617, 660, 664], "assign": [161, 595, 602, 645], "question": [161, 361, 418, 597, 656], "ckval": 161, "absolut": [161, 563, 646], "stdthresh": 161, "deviat": [161, 548, 561, 562, 579, 593, 660], "portion": [161, 599, 662], "epsilon": 161, "miss": [161, 444, 445, 446, 447, 451, 593, 602, 614], "maxcount": 161, "allow": [161, 164, 165, 218, 278, 307, 340, 407, 428, 564, 572, 594, 597, 600, 602, 606, 617, 664, 669], "fold": [161, 162, 613], "pass2": 161, "retain": [161, 162, 163, 166, 200, 201, 202, 203, 590], "rm": 161, "what": [161, 170, 418, 593, 596, 597, 599, 600, 601, 602, 603, 613, 623, 652, 658, 660, 663, 667, 669], "left": [161, 317, 350, 595, 597, 599, 600, 623, 625, 642], "proxim": 161, "side": [161, 600, 642], "doubl": [161, 379, 645], "captur": [161, 428, 652], "suffici": [161, 642], "good": [161, 162, 593, 594, 605], "mingood": 161, "ba_mincount": 161, "neighbor": [161, 371, 418, 593, 602, 618, 662], "ba_edgecount": 161, "usuccess": 161, "radialvelvolum": 161, "lastvelvolum": 161, "unfoldedvolum": 161, "sondvolum": 161, "vr_corr": 161, "due": [161, 423, 428, 593, 595, 597, 602, 617, 660, 666, 669], "call": [161, 164, 218, 219, 221, 226, 230, 231, 232, 246, 278, 279, 281, 286, 290, 291, 307, 308, 310, 318, 319, 323, 324, 340, 341, 343, 351, 352, 356, 357, 374, 379, 383, 564, 576, 594, 596, 597, 603, 605, 660, 664, 667, 669], "999": [161, 383, 593, 602], "long": [161, 434, 602, 646, 659, 664], "n": [161, 422, 428, 444, 563, 593, 595, 596, 597, 599, 600, 613, 617, 618, 626, 637, 639, 643, 645, 646, 650, 656, 669], "jame": 161, "houz": [161, 360, 429, 430, 439, 451, 642, 645, 646], "jr": [161, 429, 439, 451, 645, 646], "four": [161, 371, 372, 374], "dealis": 161, "scheme": [161, 360, 414, 429, 439, 445, 594, 645], "2001": 161, "18": [161, 591, 593, 595, 624, 635, 642], "1674": 161, "ref_vel_field": 162, "interval_split": 162, "interval_limit": 162, "skip_between_rai": 162, "100": [162, 164, 166, 202, 222, 227, 244, 282, 287, 311, 344, 381, 418, 454, 593, 595, 596, 597, 599, 620, 624, 634, 635, 642, 648], "skip_along_rai": 162, "nyquist_vel": [162, 163, 599, 642, 652, 660], "check_nyquist_uniform": [162, 163, 422], "rays_wrap_around": [162, 163], "region": [162, 168, 257, 319, 352, 423, 428, 577, 593, 595, 596, 597, 599, 600, 602, 603, 607, 610, 611, 613, 626, 645, 646, 652, 663, 665, 667], "similar": [162, 596, 597, 617, 662], "pair": [162, 244, 371, 383, 391, 396, 402, 595, 658], "accomplish": [162, 375, 611, 651], "problem": [162, 167, 168, 294, 327, 418, 614], "dynam": [162, 593], "reduct": 162, "anchor": 162, "onc": [162, 597, 603, 605, 645, 666, 667, 669], "complet": [162, 602], "simul": [162, 585, 602], "simulated_vel_from_profil": [162, 603, 667], "segment": [162, 315, 316, 348, 349, 602], "split": [162, 577, 593], "larger": [162, 597, 645], "longer": [162, 572, 595, 602, 603, 656, 666, 667], "process": [162, 167, 168, 593, 596, 599, 600, 602, 603, 605, 613, 646, 656, 667], "better": [162, 222, 227, 282, 287, 311, 320, 344, 353, 600, 602, 646, 656, 660], "seem": 162, "compromis": 162, "free": [162, 598, 599, 656], "cover": [162, 593], "entir": [162, 163, 219, 226, 230, 231, 232, 248, 250, 260, 262, 264, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 418, 587, 593, 596, 597, 600, 642], "join": [162, 466, 602], "gap": [162, 164, 165, 662], "connect": [162, 163], "disabl": [162, 163, 166, 200, 201, 202, 203], "across": [162, 595, 602, 642, 644], "so": [162, 219, 230, 279, 290, 308, 323, 341, 356, 375, 418, 593, 596, 597, 599, 600, 602, 603, 613, 614, 642, 645, 656, 667, 669], "averag": [162, 360, 429, 439, 573, 578, 599, 645, 646, 648], "individu": [162, 163, 418, 600], "attempt": [162, 163, 377, 378, 602], "de": [162, 163, 350, 556, 557], "alias": [162, 163, 556, 557, 599, 602, 660, 664], "corr_vel": [162, 163], "unwrap_unit": 163, "skip_check": [163, 602], "multi": [163, 602], "unwrap": [163, 167, 168, 602], "independ": 163, "often": [163, 423], "give": [163, 379, 597, 600, 604, 605, 652, 653, 654, 656, 660, 663], "superior": 163, "lower": [163, 244, 246, 248, 250, 260, 262, 264, 428, 596, 600, 618, 619, 620], "contamin": [163, 451], "clutter": [163, 600, 660, 663], "poor": 163, "verif": [163, 564, 602], "appropi": [163, 218, 278, 307, 340], "offer": [163, 594], "extrem": [163, 642], "miguel": 163, "arevallilo": 163, "herraez": 163, "david": [163, 597], "burton": 163, "michael": [163, 597, 600], "lalor": 163, "munther": 163, "gdeisat": 163, "fast": 163, "two": [163, 381, 414, 429, 439, 442, 443, 451, 548, 581, 582, 583, 595, 596, 597, 599, 600, 602, 605, 611, 616, 621, 622, 624, 639, 640, 659, 662, 665], "sort": [163, 595, 599, 601, 602], "reliabl": 163, "follow": [163, 166, 201, 202, 377, 378, 380, 381, 394, 404, 417, 418, 428, 444, 445, 593, 595, 596, 597, 599, 600, 603, 605, 606, 613, 643, 656, 666, 667], "noncontinu": 163, "optic": 163, "vol": 163, "41": [163, 595, 643, 648, 662], "2002": 163, "7437": 163, "abdul": 163, "rahman": 163, "h": [163, 207, 257, 267, 296, 329, 352, 449, 573, 593, 595, 596, 617, 625, 642], "osten": 163, "gorecki": 163, "e": [163, 165, 167, 168, 219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 364, 379, 394, 404, 428, 429, 430, 439, 445, 451, 577, 593, 594, 596, 597, 603, 613, 626, 642, 645, 646, 666, 667], "l": [163, 167, 168, 223, 227, 228, 257, 283, 287, 288, 312, 321, 345, 352, 354, 425, 439, 577, 593, 597, 626, 642, 646], "novak": 163, "ed": 163, "metrologi": 163, "2005": [163, 429, 439, 645, 646], "32": [163, 428, 548, 593, 602, 623, 627, 628, 629, 639, 643, 646, 648, 664], "40": [163, 257, 428, 593, 596, 600, 609, 618, 620, 625, 629, 631, 634, 642, 645, 646, 652], "intern": [163, 597], "societi": [163, 420, 423, 434], "photon": 163, "label_dict": [164, 165], "delta": [164, 165, 446], "despeckl": [164, 602, 642], "identifi": [164, 165, 360, 429, 439, 573, 593, 597, 599, 626, 645, 646, 663], "small": [164, 165, 428, 429, 439, 451, 602, 617, 618, 634], "investig": [164, 165, 449, 613], "scipi": [164, 165, 445, 585, 593, 602, 603, 634, 635, 656, 666, 667, 669], "core": [164, 165, 360, 379, 407, 418, 428, 429, 439, 446, 447, 564, 576, 596, 600, 602, 603, 645, 667], "queri": [164, 165, 418, 593, 597, 600], "speckl": [164, 645], "find_object": 164, "tupl": [164, 165, 219, 221, 224, 225, 226, 229, 230, 231, 232, 234, 244, 246, 248, 250, 260, 262, 264, 279, 281, 284, 285, 286, 289, 290, 291, 293, 308, 310, 313, 314, 318, 319, 322, 323, 324, 326, 341, 343, 346, 347, 351, 352, 355, 356, 357, 359, 391, 402, 414, 415, 416, 418, 422, 442, 443, 544, 563, 597, 602], "contigu": [164, 165], "perman": 164, "deg": [164, 165, 200, 203, 445, 587, 593, 648], "label": [165, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 229, 230, 231, 232, 243, 244, 246, 248, 250, 258, 260, 262, 264, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 284, 285, 286, 289, 290, 291, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 313, 314, 317, 318, 319, 322, 323, 324, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 346, 347, 350, 351, 352, 355, 356, 357, 590, 593, 595, 597, 599, 600, 602, 617, 624, 625, 634, 635, 639, 647], "period": [165, 572, 593, 596, 600, 660], "account": [165, 602], "g": [165, 379, 414, 439, 445, 447, 454], "examin": [165, 362, 375, 378, 596, 599, 603, 656, 667], "box": [165, 379, 647], "alwai": [165, 363, 375, 428, 429, 439, 445, 597, 602, 606, 656], "readi": 165, "min_ncp": [166, 167, 202], "min_rhv": [166, 167, 201, 202], "min_refl": [166, 202], "20": [166, 201, 202, 449, 564, 591, 593, 594, 595, 596, 597, 599, 600, 613, 614, 617, 618, 624, 625, 626, 629, 631, 632, 633, 634, 635, 637, 642, 644, 645, 646, 653, 654, 658, 662, 664], "max_refl": [166, 202], "undesir": [166, 200, 201, 202, 203, 418], "cross": [166, 201, 202, 219, 222, 244, 279, 282, 308, 311, 341, 344, 416, 565, 566, 593, 596, 599, 602, 611, 622, 631, 640, 642, 645, 664, 665], "ratio": [166, 201, 202, 233, 292, 325, 358, 421, 424, 593, 596, 599, 600, 664], "min_rhi": [166, 202], "criteria": [166, 200, 201, 202, 203, 418, 445, 451, 600], "built": [166, 200, 201, 202, 203, 417, 418], "lowest": [166, 200, 201, 202, 203, 423, 448, 599, 613, 617, 643, 645, 646], "greatest": [166, 202], "self_const": [167, 168], "60000": [167, 168, 620, 624, 662], "low_z": [167, 168], "high_z": [167, 168], "53": [167, 168, 593, 595, 599, 648], "min_phidp": [167, 168], "01": [167, 168, 317, 350, 445, 593, 595, 596, 599, 600, 610, 621, 623, 640, 649, 665], "sys_phas": 167, "overide_sys_phas": 167, "nowrap": [167, 168], "really_verbos": [167, 168], "lp_solver": [167, 168], "pyglpk": [167, 168, 602, 656, 666], "kdp_field": [167, 168, 433, 434, 436, 437, 444, 445, 446, 447, 647], "unf_field": [167, 168], "window_len": [167, 168], "proc": [167, 168, 445, 602], "coef": [167, 168, 602], "914": [167, 168, 602], "lp": [167, 168, 602, 656], "consist": [167, 168, 602, 642, 662], "factor": [167, 168, 381, 423, 432, 433, 434, 435, 436, 437, 563, 593, 594, 596, 602, 625, 633, 639, 662], "low": [167, 168, 371, 445, 618, 626], "high": [167, 168, 219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 428, 445, 596, 597, 599, 618, 647], "copolar": [167, 168, 444, 644], "automat": [167, 375, 380, 381, 418, 422, 451, 595, 597, 600, 602, 603, 605, 629, 656, 667], "lpx": [167, 168], "messag": [167, 168, 235, 251, 371, 594, 602, 605, 614], "suppress": [167, 168, 445], "cvxopt": [167, 168, 602, 656, 666], "cylp": [167, 168, 602, 656, 666, 669], "cylp_mp": [167, 168], "modul": [167, 168, 550, 591, 597, 602, 603, 613, 614, 656, 659, 660, 662, 663, 664, 666, 667], "solv": [167, 168, 601, 602], "horizon": [167, 168, 444], "sobel": [167, 168], "worker": [167, 168], "link": [167, 168, 595, 596, 599, 600, 602], "1z": [167, 168], "reproc_phas": [167, 168], "sob_kdp": [167, 168], "recalcul": [167, 168, 658], "giangrand": [167, 168, 656], "mcgraw": [167, 168], "lei": [167, 168], "applic": [167, 168, 219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 379, 429, 439, 584, 597, 599, 603, 667], "program": [167, 168, 602, 603, 656, 667], "atmo": [167, 168, 428, 438, 444, 449, 564, 577, 603, 626, 646, 667], "tech": [167, 168, 444, 577, 626, 646], "2013": [167, 168, 446, 449, 664], "30": [167, 168, 428, 429, 439, 593, 595, 596, 597, 600, 617, 618, 625, 629, 631, 642, 645, 646, 660], "1716": [167, 168], "system_phas": 168, "ncpt": 168, "first_gate_sysp": 168, "carri": 168, "smaller": [168, 352, 418, 593, 596, 597, 603, 645, 667], "off": [168, 219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 443, 449, 593, 597, 623, 645, 646], "custom": [169, 218, 219, 220, 221, 226, 230, 231, 232, 243, 244, 246, 248, 250, 258, 260, 262, 264, 278, 279, 280, 281, 286, 290, 291, 307, 308, 309, 310, 318, 319, 323, 324, 340, 341, 342, 343, 351, 352, 356, 357, 417, 428, 597, 662], "max_h_iso0": 200, "thick": [200, 203], "400": [200, 203, 602, 658], "beamwidth": [200, 203], "primarili": [200, 203], "melt": [200, 203, 433, 445, 449, 577, 626, 645, 646, 647], "db": [200, 203, 421, 600, 634, 664], "phi_field": 201, "textzdr_field": 201, "textrhv_field": 201, "textphi_field": 201, "textrefl_field": 201, "wind_siz": [201, 422, 589, 660], "7": [201, 369, 453, 589, 593, 595, 596, 597, 599, 603, 605, 614, 624, 626, 638, 642, 649, 663, 664, 667], "max_textphi": 201, "max_textrhv": 201, "max_textzdr": 201, "85": [201, 593, 597, 648], "max_textrefl": 201, "move": [201, 573, 595, 599, 602, 617], "highest": 201, "min_temp": 203, "There": [204, 595, 597, 599, 605, 623, 666, 669], "colorblind": [204, 594, 599, 623], "friendli": [204, 594, 599, 602, 623], "revers": [204, 219, 230, 279, 290, 308, 323, 341, 356, 375, 445, 602], "_r": 204, "matplotlib": [204, 219, 221, 224, 225, 226, 230, 231, 232, 244, 245, 246, 248, 250, 259, 260, 262, 264, 279, 281, 284, 285, 286, 290, 291, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 379, 593, 594, 595, 596, 599, 600, 602, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 656, 658, 659, 660, 662, 663, 666, 669], "pyart_colormap": 204, "bluebrown10": [204, 623], "bluebrown11": [204, 623], "brbu10": [204, 623], "brbu12": [204, 623], "bu10": [204, 623], "bu7": [204, 623], "budor12": [204, 623], "budor18": [204, 623], "budrd12": [204, 623], "budrd18": [204, 623], "bugr14": [204, 623], "bugy8": [204, 623], "buor10": [204, 623], "buor12": [204, 623], "buor8": [204, 623], "buorr14": [204, 623], "carbone11": [204, 623], "carbone17": [204, 623], "carbone42": [204, 623], "cat12": [204, 623], "ewilson17": [204, 623], "grmg16": [204, 623], "gray5": [204, 623], "gray9": [204, 623], "nwsref": [204, 623], "nwsvel": [204, 623], "nws_spw": [204, 623], "pd17": [204, 623], "rrate11": [204, 623], "rdylbu11b": [204, 623], "refdiff": [204, 623], "scook18": [204, 623], "stepseq25": [204, 623], "symgray12": [204, 623], "theodore16": [204, 623], "wild25": [204, 623], "langrainbow12": [204, 623], "homeyerrainbow": [204, 602, 623], "balanc": [204, 602, 623], "chasespectr": [204, 623], "spectralextend": [204, 623], "displai": [205, 219, 221, 226, 230, 231, 232, 234, 265, 279, 281, 286, 290, 291, 293, 294, 308, 310, 318, 319, 323, 324, 326, 327, 341, 343, 351, 352, 356, 357, 359, 379, 423, 453, 454, 594, 595, 596, 597, 599, 600, 602, 603, 608, 609, 613, 614, 618, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 658, 659, 660, 662, 663, 667], "airborn": [205, 602], "plot_var": [205, 265, 294, 327], "order": [205, 265, 294, 327, 360, 375, 380, 381, 407, 429, 439, 445, 563, 593, 600, 602, 603, 608, 645, 646, 656, 667], "cb": [205, 265, 294, 327, 625, 646], "colorbar": [205, 219, 220, 221, 226, 229, 230, 231, 232, 243, 244, 246, 248, 250, 251, 258, 260, 262, 264, 265, 279, 280, 281, 286, 289, 290, 291, 294, 308, 309, 310, 318, 319, 322, 323, 324, 327, 341, 342, 343, 351, 352, 355, 356, 357, 593, 595, 596, 597, 602, 611, 617, 622, 623, 639, 640, 642, 646, 665], "loc": [205, 265, 294, 327, 593, 595, 599, 600, 624], "titl": [206, 208, 209, 210, 219, 221, 226, 229, 230, 231, 232, 240, 241, 242, 244, 246, 248, 250, 253, 254, 255, 260, 262, 264, 266, 268, 269, 270, 279, 281, 286, 289, 290, 291, 295, 297, 298, 299, 308, 310, 318, 319, 322, 323, 324, 328, 330, 331, 332, 341, 343, 351, 352, 355, 356, 357, 594, 595, 596, 597, 599, 601, 602, 608, 609, 617, 625, 627, 628, 630, 632, 633, 637, 664], "ext": [207, 239, 252, 267, 296, 329], "png": [207, 239, 252, 267, 296, 329, 594, 595, 597, 599], "datetime_format": [207, 209, 267, 269, 296, 298, 329, 331], "use_sweep_tim": [207, 209, 267, 269, 296, 298, 329, 331], "form": [207, 221, 239, 252, 267, 281, 296, 310, 329, 343, 593, 597, 602], "radar_name_field_sweep_tim": [207, 267, 296, 329], "datetim": [207, 209, 226, 230, 232, 267, 269, 286, 290, 291, 296, 298, 318, 323, 324, 329, 331, 351, 356, 357, 364, 365, 381, 567, 568, 569, 570, 571, 595, 599, 602], "strftime": [207, 209, 226, 230, 267, 269, 286, 290, 296, 298, 318, 323, 329, 331, 351, 356, 595, 596], "suitabl": [207, 239, 252, 267, 296, 329, 428, 597], "xaxi": [211, 214, 271, 274, 300, 303, 333, 336, 625], "static": [212, 213, 222, 223, 227, 233, 234, 272, 273, 282, 283, 287, 292, 293, 301, 302, 311, 312, 325, 326, 334, 335, 344, 345, 358, 359, 594], "yaxi": [212, 213, 215, 216, 217, 272, 273, 275, 276, 277, 301, 302, 304, 305, 306, 334, 335, 337, 338, 339], "keyword": [218, 278, 307, 319, 340, 352, 371, 373, 593, 597, 602, 659, 662], "plot_ppi": [218, 278, 307, 340, 602, 609, 647, 652, 654, 658], "plot_sweep_grid": [218, 602], "target_azimuth": [219, 279, 308, 341, 565], "mask_tupl": [219, 226, 229, 230, 231, 232, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 597], "norm": [219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 445, 597, 602, 625, 647], "cmap": [219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 379, 593, 594, 595, 596, 597, 599, 600, 617, 623, 624, 625, 626, 630, 633, 635, 637, 638, 642, 644, 645, 646, 652, 653, 654, 659, 660], "mask_outsid": [219, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 594, 597, 602, 632, 633, 642], "title_flag": [219, 221, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 289, 290, 291, 308, 310, 318, 319, 322, 323, 324, 341, 343, 351, 352, 355, 356, 357, 597, 637], "axislabel": [219, 221, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 289, 290, 291, 308, 310, 318, 322, 323, 324, 341, 343, 351, 355, 356, 357, 594, 627, 632, 633], "axislabels_flag": [219, 221, 226, 229, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 289, 290, 291, 308, 310, 318, 322, 323, 324, 341, 343, 351, 355, 356, 357, 602, 645, 646], "colorbar_flag": [219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 595, 597], "colorbar_label": [219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 594, 597, 599, 608, 609, 613, 627, 628, 632, 633, 634, 635, 639, 652], "colorbar_ori": [219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 599, 602], "reverse_xaxi": [219, 230, 279, 290, 308, 323, 341, 356], "fig": [219, 220, 221, 226, 229, 230, 231, 232, 243, 244, 246, 248, 250, 258, 260, 262, 264, 279, 280, 281, 286, 289, 290, 291, 308, 309, 310, 318, 319, 322, 323, 324, 341, 342, 343, 351, 352, 355, 356, 357, 593, 594, 595, 596, 597, 599, 600, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 642, 644, 646, 647, 648, 652, 660, 662, 663], "tick": [219, 220, 221, 226, 230, 231, 232, 243, 244, 246, 248, 250, 258, 260, 262, 264, 279, 280, 281, 286, 290, 291, 308, 309, 310, 318, 319, 323, 324, 341, 342, 343, 351, 352, 356, 357, 597, 602, 623, 625, 645, 646, 647], "ticklab": [219, 220, 221, 226, 230, 231, 232, 243, 244, 246, 248, 250, 258, 260, 262, 264, 279, 280, 281, 286, 290, 291, 308, 309, 310, 318, 319, 323, 324, 341, 342, 343, 351, 352, 356, 357, 597, 602, 645, 646, 647], "raster": [219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 379, 597, 602], "pseudo": [219, 279, 308, 341, 602], "associ": [219, 279, 308, 341, 396, 428, 593, 605, 642], "pcolormesh": [219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 593, 602, 617, 634, 642, 645, 646], "integ": [219, 279, 308, 341, 381, 422, 442, 443], "ncp": [219, 226, 229, 230, 231, 232, 279, 286, 289, 290, 291, 308, 318, 319, 322, 323, 324, 341, 351, 352, 355, 356, 357, 597], "lumin": [219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 597], "scale": [219, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 380, 381, 417, 418, 425, 428, 445, 446, 593, 596, 597, 626], "west": [219, 230, 279, 290, 308, 323, 341, 356, 593, 597, 627], "leav": [219, 221, 226, 230, 231, 232, 244, 246, 248, 250, 260, 262, 264, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 595, 597], "orient": [219, 220, 221, 226, 230, 231, 232, 243, 244, 246, 248, 250, 258, 260, 262, 264, 279, 280, 281, 286, 290, 291, 308, 309, 310, 318, 319, 323, 324, 341, 342, 343, 351, 352, 356, 357, 595, 597, 598, 647, 648], "treat": [219, 226, 230, 231, 232, 248, 250, 260, 262, 264, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 597], "themselv": [219, 226, 230, 231, 232, 248, 250, 260, 262, 264, 279, 286, 290, 291, 308, 318, 319, 323, 324, 341, 351, 352, 356, 357, 597], "figur": [219, 220, 221, 226, 229, 230, 231, 232, 243, 244, 246, 248, 250, 258, 260, 262, 264, 279, 280, 281, 286, 289, 290, 291, 308, 309, 310, 318, 319, 322, 323, 324, 341, 342, 343, 351, 352, 355, 356, 357, 594, 595, 596, 597, 599, 600, 601, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 644, 645, 646, 652, 659, 660, 662, 663], "render": [219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 596, 597], "rather": [219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 597], "larg": [219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 445, 451, 597, 599, 602], "Be": [219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 597, 605], "sure": [219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 596, 597, 601, 602, 605, 617, 625, 645, 666, 669], "dpi": [219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 595, 597, 599], "pdf": [219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 597], "ep": [219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 597], "svg": [219, 221, 226, 230, 231, 232, 279, 281, 286, 290, 291, 308, 310, 318, 319, 323, 324, 341, 343, 351, 352, 356, 357, 597], "mappabl": [220, 243, 251, 258, 280, 309, 342], "cax": [220, 243, 258, 280, 309, 342, 647], "imag": [220, 243, 258, 280, 309, 342, 428, 443, 563, 577, 593, 594, 596, 597, 602, 611, 622, 640, 643, 645, 646, 665], "contourset": [220, 243, 251, 258, 280, 309, 342], "etc": [220, 243, 246, 251, 258, 280, 309, 319, 342, 352, 378, 439, 595, 597, 602, 642], "onto": [220, 243, 258, 260, 280, 309, 319, 342, 352, 407, 414, 418, 448, 597, 600], "drawn": [220, 243, 258, 280, 309, 342, 597], "target_rang": [221, 281, 310, 343], "delta_x": [221, 281, 310, 343], "delta_i": [221, 281, 310, 343], "az_limit": [221, 281, 310, 343], "el_limit": [221, 281, 310, 343], "corner": [221, 281, 310, 317, 343, 350, 597, 598, 602], "reflector": [221, 281, 310, 343, 602], "griddata": [221, 281, 310, 343], "min": [221, 281, 310, 343, 593, 597, 648], "max": [221, 281, 310, 343, 379, 593, 597, 602, 613, 617, 618, 623, 624, 629, 637, 648, 652, 653, 654], "npt": [222, 227, 282, 287, 311, 320, 344, 353], "hair": [222, 282, 311, 344, 631], "higher": [222, 227, 282, 287, 311, 320, 344, 353, 418, 596, 600, 642, 660, 662], "col": [223, 227, 228, 283, 287, 288, 312, 321, 345, 354, 596, 618], "line": [223, 229, 245, 246, 257, 259, 283, 289, 312, 315, 316, 319, 320, 322, 345, 348, 349, 352, 353, 355, 379, 445, 594, 595, 596, 597, 602, 603, 605, 611, 622, 624, 640, 642, 643, 665, 666, 667, 669], "color": [223, 224, 225, 227, 228, 245, 283, 284, 285, 287, 288, 312, 313, 314, 316, 319, 320, 321, 345, 346, 347, 352, 354, 379, 594, 595, 596, 597, 599, 600, 624, 625, 626, 634, 635, 642, 643, 645, 646, 647], "linestyl": [223, 227, 228, 245, 283, 287, 288, 312, 321, 345, 354, 595, 597, 599, 624, 625, 635], "symbol": [224, 225, 284, 285, 313, 314, 317, 346, 347, 350], "text_color": [224, 225, 284, 285, 313, 314, 346, 347], "text": [224, 225, 284, 285, 313, 314, 317, 346, 347, 350, 466, 595, 601, 602, 605, 623, 632, 648, 656, 660], "just": [224, 225, 284, 285, 313, 314, 346, 347, 369, 572, 600, 602, 603, 623, 626, 658, 664, 667, 669], "marker": [224, 225, 229, 245, 259, 284, 285, 289, 313, 314, 322, 346, 347, 355, 593, 595], "title_datetime_format": [226, 230, 286, 290, 318, 323, 351, 356], "title_use_sweep_tim": [226, 230, 286, 290, 318, 323, 351, 356], "range_ring_location_km": [227, 287, 320, 353], "lw": [227, 228, 287, 288, 321, 354, 597, 599, 642], "range_r": [228, 288, 321, 354], "seri": [228, 288, 321, 354, 593, 596], "draw": [228, 246, 257, 288, 319, 321, 352, 354, 595, 597], "format_str": [229, 289, 322, 355], "ray_min": [229, 289, 322, 355], "ray_max": [229, 289, 322, 355], "style": [229, 245, 259, 289, 315, 316, 320, 322, 348, 349, 353, 355, 379, 602], "ignoretilt": 231, "antenna_to_cartesian_track_rel": 231, "slant": [231, 415], "ncar": 231, "soloii": 231, "time_axis_flag": [232, 291, 324, 357, 596], "date_time_form": [232, 291, 324, 357], "tz": [232, 291, 324, 357, 595], "zone": [232, 291, 324, 357], "info": [232, 291, 319, 324, 352, 357, 597, 602, 647, 664], "aspect_ratio": [233, 292, 325, 358], "aspect": [233, 292, 325, 358, 623], "xlim": [234, 293, 326, 359, 593, 594, 597, 599, 600, 628, 630, 634, 635, 662], "ylim": [234, 293, 326, 359, 593, 594, 596, 597, 599, 600, 628, 630, 632, 633, 634, 635, 637, 639, 642], "cartopi": [235, 236, 237, 238, 246, 294, 319, 593, 595, 597, 599, 600, 602, 603, 611, 613, 614, 617, 618, 622, 624, 625, 638, 640, 643, 645, 646, 652, 656, 659, 660, 662, 663, 665, 666, 667, 669], "coastlin": [236, 246, 319, 352, 593, 597], "polit": 237, "state": [238, 446, 595, 597, 599, 602], "grid_name_field_level_tim": [239, 252], "latitudin": [241, 248, 262], "step": [244, 379, 594, 596, 600, 605, 613, 634, 635, 645, 669], "interp_typ": 244, "x_axi": [244, 624], "metpi": [244, 595, 597, 599, 602], "design": [244, 577, 593, 603, 634, 645, 646, 656, 667], "geodes": 244, "nearest": [244, 371, 415, 418, 440, 565, 566, 585, 593, 597, 602, 662], "dataarrai": 244, "interp": [244, 447], "ex": [244, 447, 595, 599, 600, 601, 623], "upper": [244, 246, 248, 250, 260, 262, 264, 595, 599, 600, 624], "colormesh": [244, 246, 248, 250, 260, 262, 264], "64": [244, 246, 248, 250, 260, 262, 264, 594, 623, 628, 629, 630, 634, 636, 638, 639, 643, 663, 666], "linewidth": [245, 259, 595, 597, 599, 625, 634, 635], "crosshair": [245, 259, 597], "lat_lin": [246, 257, 319, 352, 595, 597, 617, 631, 643], "lon_lin": [246, 257, 319, 352, 595, 597, 617, 631, 643], "embellish": [246, 319, 352, 595, 625], "add_grid_lin": [246, 319, 595], "reason": [246, 257, 597], "america": [246, 257, 319, 352, 597], "cr": [246, 294, 319, 593, 595, 597, 599, 600, 613, 614, 617, 618, 624, 625, 631, 638, 643, 645, 646, 647, 652, 659, 660, 663], "subsequ": [246, 319, 597], "geoax": [246, 319, 597, 659, 662], "platecarre": [246, 319, 593, 595, 597, 599, 600, 613, 617, 624, 625, 638, 643, 645, 646, 652, 660, 663], "shapefil": [246, 319, 352, 597], "certain": [246, 319, 361, 443, 577, 597, 602, 645, 646, 663], "plot_latitudinal_level": [247, 261], "y_index": [248, 262], "basemap": [248, 250, 251, 256, 257, 260, 262, 264, 327, 348, 349, 350, 352, 353, 602, 656, 666], "plot_longitudinal_level": [249, 263], "x_index": [250, 264], "top": [251, 418, 448, 593, 595, 598, 602, 603, 623, 642, 643, 662, 667], "veric": 253, "area_thresh": [257, 352], "10000": [257, 352, 454, 618, 624, 645, 646, 662], "auto_rang": 257, "min_lon": [257, 319, 352, 595, 597, 617, 631, 663], "92": [257, 632, 643], "max_lon": [257, 319, 352, 595, 597, 617, 631, 663], "86": [257, 597], "min_lat": [257, 319, 352, 595, 597, 617, 631, 663], "max_lat": [257, 319, 352, 595, 597, 617, 631, 663], "44": [257, 429, 439, 593, 595, 645, 646, 666], "databas": [257, 352, 599], "merc": [257, 352], "mercat": [257, 618], "line_styl": [259, 315, 316, 320, 348, 349, 353, 631], "plot_rhi": [278, 307, 340, 593], "plot_vpt": [278, 307, 340, 596], "grid_project": [294, 417, 418, 597], "progress": [294, 327], "correctli": [294, 327, 602], "github": [294, 327, 595, 598, 602, 635, 656, 666, 669], "tracker": [294, 327, 603, 656, 667], "azimuthalequidist": 294, "line_lon": [315, 348], "line_lat": [315, 348], "compat": [315, 316, 317, 320, 348, 349, 350, 353, 376, 595, 602, 606, 669], "line_x": [316, 349], "line_i": [316, 349], "ro": [317, 350], "label_text": [317, 350], "label_offset": [317, 350], "bottom": [317, 350, 595, 597, 623, 625], "110m": [319, 597], "shapefile_kwarg": [319, 597], "alpha": [319, 352, 432, 433, 434, 435, 436, 437, 595, 599, 625, 634, 642], "edgecolor": [319, 352, 595, 599, 634], "face": [319, 352, 597], "reson": [319, 352, 597], "lambertconform": [319, 597, 614, 631, 659], "domain": [319, 352, 593, 597, 617], "neither": [319, 352, 383, 597], "extend": [319, 352, 375, 597], "word": [319, 597], "10m": [319, 595, 597, 600, 614, 631], "50m": [319, 597, 652, 660, 663], "naturalearthfeatur": [319, 597], "tranpar": [319, 352, 597], "overplot": [319, 352, 597], "pixel": [319, 352, 442, 443, 548, 593, 597], "lcc": 352, "cylindr": 352, "mill": 352, "exhibit": 352, "distort": 352, "aea": 352, "laea": 352, "conform": [352, 597, 656, 658], "tmerc": 352, "stere": 352, "aeqd": 352, "cass": 352, "even": [352, 428, 447, 599, 602, 634, 642, 656, 662, 669], "cyl": [352, 602], "cannot": [352, 363, 595, 597], "lake": [352, 599], "esri": 352, "background": [352, 360, 429, 439, 451, 597, 601, 631, 638, 645, 646], "untest": 352, "always_core_thr": [360, 429, 439, 645, 646], "use_cosin": [360, 429, 439, 645, 646], "max_diff": [360, 429, 439, 645, 646], "zero_diff_cos_v": [360, 429, 439, 645, 646], "use_addit": [360, 429, 439, 645, 646], "scalar_diff": [360, 429, 439, 645, 646], "convect": [360, 428, 429, 439, 451, 593, 602, 611, 641, 649, 665], "stratiform": [360, 428, 429, 439, 451, 602, 611, 641, 649, 665], "classif": [360, 428, 429, 433, 439, 444, 451, 602, 611, 641, 649, 665], "cosin": [360, 429, 439, 645, 646], "scalar": [360, 429, 439, 595, 597, 602, 645], "classifi": [360, 428, 429, 439, 444, 602, 645, 646, 647], "eqn": [360, 429, 439], "b1": [360, 429, 439, 600], "yuter": [360, 429, 430, 439, 451, 577, 626, 642, 645, 646], "1997": [360, 429, 439, 645, 646], "zero": [360, 377, 429, 439, 443, 445, 585, 602, 642, 645, 646, 659, 663], "multipli": [360, 429, 439, 596, 645, 658], "most": [361, 369, 595, 596, 597, 602, 623, 642, 646, 660, 662, 669], "storage_opt": [362, 371, 373], "anon": [362, 371, 373, 593, 595, 599], "open": [362, 371, 373, 466, 593, 596, 597, 599, 601, 602, 603, 628, 656, 658, 659, 660, 662, 663, 664, 667, 669], "binari": [362, 439, 593, 605], "transpar": [362, 595, 597, 602, 634], "decompress": [362, 602], "gzip": [362, 369, 370], "bzip2": [362, 602], "close": [362, 439, 445, 594, 595, 599, 600, 602], "compress": [362, 369, 370, 597, 602], "backend": [362, 371], "googl": [362, 371, 602, 603, 667], "cloud": [362, 371, 428, 445, 595, 596, 603, 605, 611, 612, 615, 656, 665, 667, 669], "storag": [362, 371, 543], "amazon": [362, 371, 593, 595, 597, 599, 613, 614], "web": [362, 371, 379, 593, 597, 599, 600, 613, 614], "servic": [362, 371, 593, 595, 597, 599, 600, 605, 613, 614, 623], "s3": [362, 371, 595, 599, 613, 614, 626, 645, 646], "file_lik": 362, "use_rsl": 363, "read_": 363, "trmm": [363, 375, 602, 656, 666], "librari": [363, 372, 375, 378, 379, 593, 595, 596, 597, 599, 602, 603, 604, 656, 658, 659, 660, 662, 663, 664, 666, 667], "choos": [363, 597, 611, 622, 640, 645, 646, 665, 669], "Not": [363, 370], "typeerror": [363, 602], "launch_datetim": 364, "date": [364, 365, 591, 595, 597, 600, 601, 602, 613, 614], "radiosond": 364, "launch": 364, "record": [364, 599, 600, 664], "target_datetim": 365, "closest": [365, 407], "profile_datetim": 365, "use_arm_scan_nam": 366, "scan_nam": [366, 593, 596, 602], "use_file_field_attribut": 367, "csu": [367, 602], "chill": 367, "chl": [367, 602], "field_file_nam": 367, "long_nam": [367, 444, 593, 596, 645, 646, 659, 664], "zlib": [369, 370], "read_mdv": [369, 594, 609, 619, 630, 634, 635, 636], "interchang": 369, "vlevel": 369, "proj_polar_radar": 369, "9": [369, 435, 444, 573, 593, 595, 596, 597, 599, 601, 614, 619, 624, 626, 631, 635, 643, 644, 645, 646, 652, 656, 658, 663, 664], "proj_rhi_radar": 369, "13": [369, 573, 593, 596, 599, 614, 637, 642, 656, 663, 664], "vlevel_typ": 369, "vert_type_z": 369, "vert_type_elev": 369, "vert_type_az": 369, "17": [369, 595, 596, 632, 637, 640, 655], "vert_type_pressur": 369, "vert_type_theta": 369, "unknown": [369, 602], "station": [371, 372, 597, 614], "linear_interp": 371, "nexrad": [371, 372, 373, 374, 593, 602, 611, 612, 615, 622, 626, 640, 645, 646, 656, 664, 665], "archiv": [371, 595, 597, 599, 600, 627, 656], "host": [371, 373, 595, 605], "noaa": [371, 373, 375, 593, 595, 597, 599, 613, 614, 626, 645, 646], "nation": [371, 373, 593, 595, 597, 599, 613, 623], "climat": [371, 373, 596, 597, 599, 602, 603, 656, 658, 659, 660, 662, 663, 664, 667], "ucar": [371, 372, 593], "thredd": [371, 372, 378], "server": [371, 372], "letter": [371, 372, 374], "icao": [371, 372, 602], "older": [371, 372, 602, 603, 611, 612, 615, 656, 665, 667], "mix": [371, 428, 577, 626, 645, 646], "constant": [371, 411, 417, 418, 442, 445, 593, 596, 602, 614], "fsspec": [371, 373, 599, 602], "cut": [371, 372, 373, 443], "www": [371, 372, 373, 442, 595, 599, 603, 667], "ncdc": [371, 373], "gov": [371, 373, 593, 594, 595, 599, 600, 608, 609, 613, 614, 617, 619, 620, 623, 624, 625, 627, 628, 629, 630, 632, 634, 635, 636, 637, 639, 643, 644, 652, 653, 654], "edu": [371, 372, 442, 593, 626, 642, 645, 646], "catalog": [371, 372, 593], "html": [371, 372, 442, 595, 599, 602, 603, 656, 666, 667], "common": [372, 596, 602, 618, 656, 666], "cdm": [372, 378], "url": [372, 595, 597, 600, 614], "java": [372, 378], "tool": [372, 378, 593, 596, 600, 656, 666], "opendap": 372, "accept": [372, 446, 447, 597, 600, 602, 603, 667], "compil": [372, 446, 602, 656, 666], "unidata": [372, 593, 613], "htm": 372, "product": [373, 375, 423, 454, 593, 597, 602], "nw": [373, 599], "wsr": 373, "88d": 373, "iii": 373, "distribut": [373, 429, 430, 438, 439, 453, 548, 559, 560, 561, 562, 578, 579, 602, 603, 642, 645, 646, 656, 667], "roc": 373, "wsr88d": [373, 374], "level_iii": 373, "level3info": 373, "asp": 373, "radar_format": 374, "callid": 374, "skip_range_check": 374, "rsl_radar": 374, "id": [374, 379, 593, 600, 602], "verifi": [374, 580, 590], "ioerror": 374, "time_ord": [375, 602], "full_xhdr": 375, "noaa_hh_hdr": 375, "ignore_xhdr": 375, "ignore_sweep_start_m": 375, "sigmet": [375, 602, 656], "iri": [375, 602, 656, 666], "sequenti": [375, 623], "re": [375, 428, 595, 603, 667], "manner": 375, "determind": 375, "maintain": [375, 414, 602], "yet": [375, 613, 618], "warn": [375, 378, 444, 593, 595, 596, 597, 599, 600, 602, 608, 614, 617, 662], "reverse_and_rol": 375, "strictli": 375, "increas": [375, 418, 445, 448, 593, 597, 603, 623, 642, 662, 667], "becom": [375, 645, 659, 662], "thisopt": 375, "strict": 375, "header": [375, 602], "decod": [375, 602], "hurrican": [375, 597, 645, 646], "hunter": 375, "millisecond": 375, "precis": [375, 428], "explic": 375, "read_rsl": [375, 666], "error": [375, 379, 446, 447, 593, 595, 597, 601, 602, 618, 666], "uf": [376, 381, 602, 656], "introduc": [376, 447], "implement": [376, 383, 396, 417, 434, 442, 596, 597, 602, 603, 608, 646, 667], "time_refer": [377, 658], "compliant": 377, "mani": [377, 602, 603, 656, 662, 667, 669], "outlin": [377, 445, 573], "_zlib": [377, 378], "_deflatelevel": [377, 378], "_shuffl": [377, 378], "_fletcher32": [377, 378], "_contingu": [377, 378], "_chunksiz": [377, 378], "_endian": [377, 378], "_least_significant_digit": [377, 378], "_fillvalu": [377, 378, 602, 659, 664], "write_proj_coord_si": 378, "proj_coord_si": 378, "write_point_x_y_z": 378, "write_point_lon_lat_alt": 378, "projectioncoordinatesystem": 378, "toolsui": 378, "written": [378, 380, 381, 602, 605, 656], "appropri": [378, 573, 597, 606], "understood": 378, "rgb": 379, "viridi": [379, 645, 646], "color_level": 379, "warp": 379, "sld": 379, "use_doublequot": 379, "geotiff": [379, 602, 656], "wgs84": 379, "sphere": [379, 574, 586], "latter": [379, 597], "usabl": [379, 593], "byte": [379, 602], "former": 379, "gi": 379, "while": [379, 597, 600, 618, 656, 660, 669], "show": [379, 593, 594, 595, 597, 599, 600, 601, 602, 603, 608, 609, 613, 614, 617, 618, 619, 620, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 645, 646, 652, 658, 660, 662, 663, 664, 667], "lack": [379, 394, 404], "composit": [379, 423, 593, 596, 602, 611, 641, 649, 665], "gdal": [379, 602, 656], "via": [379, 415, 416, 595, 597, 605], "conda": [379, 599, 602, 603, 656, 666, 667, 669], "rbg": 379, "tabl": [379, 593], "column": [379, 564, 575, 576, 593, 595, 596, 597, 602, 611, 641, 649, 665], "categor": [379, 595, 647], "255": [379, 602, 646], "hydrometeor": [379, 433, 444, 602, 611, 641, 649, 660, 665], "gdalwarp": 379, "command": [379, 602, 603, 605, 656, 659, 667, 669], "o": [379, 466, 595, 597, 603, 625, 656, 666, 667], "az": [379, 595, 602, 632, 633], "descriptor": 379, "tiff": 379, "don": [379, 596, 597, 602, 617], "t": [379, 428, 429, 439, 445, 446, 449, 454, 593, 596, 597, 600, 602, 617, 642, 645, 646, 656, 658], "quot": 379, "help": [379, 455, 595, 596, 597, 599, 600, 603, 605, 617, 623, 645, 667, 669], "translat": 379, "sr": [379, 593], "instead": [379, 593, 595, 597, 600, 602, 603, 614, 642, 645, 662, 666, 667, 669], "mdv_field_nam": [380, 602], "field_write_ord": [380, 381], "sentinel": [380, 381], "float32": [380, 593, 596, 597, 602, 643, 658, 660, 664], "_write_as_dtyp": 380, "writabl": 380, "satisfi": 380, "xy": [380, 418], "irregular": 380, "exce": [380, 645, 646], "122": [380, 600, 613, 617, 624, 644, 652], "uint8": 380, "uint16": 380, "scale_factor": [380, 596], "add_offset": [380, 596], "uncompress": 380, "sai": [380, 603, 667], "uf_field_nam": 381, "radar_field_nam": 381, "volume_start": 381, "templates_extra": 381, "radar_beam_width_h": [381, 596], "radar_beam_width_v": [381, 596], "radar_receiver_bandwidth": 381, "prt": [381, 596], "polarization_mod": 381, "round": [381, 415, 416, 597, 600, 602], "_uf_scale_factor": 381, "charact": 381, "advanc": [381, 593], "usag": 381, "templat": [381, 602, 605], "mandatory_head": 381, "optional_head": 381, "field_head": 381, "lazi": [382, 383, 385, 392, 602], "set_lazi": 383, "callabl": [383, 392, 596, 597], "cach": 383, "tradit": 383, "supplement": 383, "syntax": [383, 602], "prevent": [383, 418, 595, 602, 603, 667], "comparison": [383, 602, 617, 646], "__cmp__": 383, "__ge__": 383, "__gt__": 383, "__le__": 383, "__lt__": 383, "__ne__": 383, "nor": 383, "viewitem": 383, "viewkei": 383, "viewvalu": 383, "fromkei": 383, "tradition": 383, "referenc": 383, "lazyloaddictionari": 383, "henc": 383, "key1": 383, "value1": 383, "key2": 383, "value2": 383, "lazy_func": 383, "lambda": 383, "lazykey1": 383, "item": [384, 394, 397, 404, 602], "els": [386, 387, 398, 596, 600], "value_cal": 392, "concret": 396, "__getitem__": [396, 596], "__setitem__": 396, "__delitem__": 396, "__iter__": 396, "__len__": 396, "robust": [406, 428, 602], "src_radar": 407, "dest_radar": 407, "distance_toler": [407, 617], "500": [407, 595, 599, 617, 624, 628], "gatefilter_src": [407, 617], "time_toler": [407, 617], "60": [407, 593, 608, 613, 617, 620, 625, 653, 658, 660, 662], "kd": 407, "tree": [407, 418, 652, 653, 654], "physic": [407, 423, 429, 439, 645, 646], "easi": [407, 423, 656], "equival": [407, 594, 596, 602, 613, 625, 633, 639], "src_radar_i": 407, "src_radar_x": 407, "destin": [407, 409, 595, 599, 602, 617], "toler": [407, 408, 410, 565, 566, 602], "src_radar_tim": 407, "dest_radar_tim": 407, "gate_mapp": 407, "src": [407, 599], "dest": 407, "dest_index": 407, "radar_map": 407, "mapped_radar": [407, 617], "adequ": [407, 617], "getter": [408, 410], "field_list": [409, 443], "zg": [411, 412, 413], "yg": [411, 412, 413], "xg": [411, 412, 413], "roi": [411, 412, 413, 415, 416, 418, 602, 618], "influenc": [411, 414, 417, 418, 662], "grow": [412, 413, 417, 418, 603, 667], "virtual": [413, 417, 418], "grid_shap": [414, 415, 416, 417, 418, 544, 618, 619, 620, 624, 645, 646, 653, 662], "grid_limit": [414, 415, 416, 417, 418, 544, 618, 619, 620, 624, 645, 646, 653, 662], "gridding_algo": 414, "map_gates_to_grid": [414, 602], "copy_field_dtyp": [414, 602], "map_to_grid": [414, 417, 602], "significantli": [414, 418], "faster": [414, 418, 597, 602], "barn": [414, 418, 602, 662], "1964": 414, "techniqu": [414, 428, 646], "maxim": 414, "numer": [414, 602], "analysi": [414, 428, 576, 597, 600, 602], "meteorologi": [414, 420, 423, 445, 454, 573], "climatologi": [414, 454], "396": [414, 596], "409": [414, 602], "cressman": [414, 418, 662], "1959": 414, "monthli": 414, "review": [414, 594, 602], "87": [414, 593, 595], "367": 414, "374": [414, 602], "paulei": [414, 662], "1990": [414, 662], "theoret": 414, "discret": 414, "respons": 414, "118": [414, 618, 621, 665], "1145": [414, 602], "1164": [414, 602], "target_sweep": [415, 416], "grid_siz": [415, 416, 417, 418], "801": [415, 416, 602], "auto": [415, 416, 597, 599, 623], "max_z": [415, 416], "12000": [415, 416, 658, 662], "el_rounding_frac": 415, "add_grid_altitud": 415, "weight": [415, 416, 417, 418, 444, 445, 453, 593, 602, 611, 616, 621, 662, 665], "grid_from_radar": [415, 416, 417, 418, 618, 619, 620, 624, 645, 646, 653, 662], "receiv": [415, 416, 596, 599, 602, 660], "h_factor": [415, 416, 417, 418, 618], "dist_factor": [415, 416, 417, 618], "radar_d": [415, 416], "third": [415, 416, 603, 667], "az_rounding_frac": 416, "12": [416, 593, 595, 596, 600, 601, 608, 613, 614, 618, 625, 632, 642, 643, 646, 656, 659, 663, 664], "grid_origin": [417, 418, 620, 624], "grid_origin_alt": [417, 418], "map_roi": [417, 418], "weighting_funct": [417, 418, 662], "barnes2": [417, 418, 602], "toa": [417, 418, 421, 448], "17000": [417, 418, 662], "roi_func": [417, 418, 602, 662], "dist_beam": [417, 418, 662], "constant_roi": [417, 418, 602], "z_factor": [417, 418], "xy_factor": [417, 418], "02": [417, 418, 593, 596, 626, 640, 645, 646, 649, 665], "min_radiu": [417, 418, 602, 662], "250": [417, 418, 664], "nb": [417, 418], "bsp": [417, 418], "linearli": 417, "roifunct": 417, "dist": [417, 418, 578, 579, 593, 595], "get_roi": 417, "cython": [417, 602], "around": [417, 429, 439, 548, 563, 599, 600, 619, 634, 637, 642, 645, 658, 660], "copy_field_data": 418, "kd_tree": 418, "leafsiz": 418, "nearbi": [418, 620], "coodin": 418, "azimut": 418, "similarili": 418, "example_roi_func_const": 418, "example_roi_func_dist": 418, "example_roi_func_dist_beam": 418, "altern": [418, 423, 597, 645], "foreach": 418, "metet": 418, "sacr": 418, "sapr": [418, 550], "dist_mean": 418, "preserv": [418, 600, 660], "less": [418, 428, 429, 430, 439, 447, 577, 600, 642, 645], "memori": [418, 602], "slower": [418, 445], "It": [418, 447, 563, 573, 595, 597, 600, 603, 606, 617, 667, 669], "leaf": 418, "lookup": 418, "affect": 418, "optim": [418, 445, 602], "natur": [418, 428, 597], "ref_field": [420, 646, 659], "300": [420, 593, 595, 596, 597, 599, 626, 627, 658], "save_nam": [420, 646], "nws_primary_pr": 420, "mm": [420, 600, 601, 645, 646], "hr": [420, 645, 646], "author": [420, 423, 439, 577, 594, 600, 601, 605, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654], "laura": [420, 439, 577, 626, 642, 645, 646], "tomkin": [420, 439, 577, 626, 642, 645, 646], "look": [420, 423, 430, 449, 593, 595, 596, 597, 599, 600, 601, 602, 613, 614, 617, 618, 625, 656, 658, 660, 662, 664], "expect": [420, 447, 603, 667], "relationship": [420, 428, 438], "american": [420, 423], "meteorolog": [420, 423, 434, 454, 597], "2022": [420, 423, 577, 593, 596, 601, 613, 626, 645, 646, 656], "glossari": [420, 423], "ametsoc": [420, 423], "wiki": [420, 423, 442], "r_relat": 420, "25000": [421, 662], "floor": 421, "measur": [421, 429, 432, 438, 439, 444, 445, 446, 447, 564, 596, 597, 599, 600, 603, 645, 646, 656, 658, 659, 660, 662, 663, 664, 667], "nyq": [422, 599, 652, 660], "check_nyq_uniform": 422, "deriv": [422, 445, 447], "vel_dict": 422, "entri": [422, 664], "am": [423, 599, 603, 656, 667], "dry": [423, 647], "world": [423, 611, 622], "aloft": 423, "oppos": [423, 626], "nwp": [423, 647], "why": [423, 597, 601, 603, 667], "would": [423, 593, 594, 595, 596, 599, 600, 602, 603, 613, 614, 660, 662, 667], "think": 423, "turn": [423, 449, 623, 645, 646, 656], "spin": [423, 600], "randi": [423, 599], "chase": [423, 599], "dopplerchas": [423, 602], "cdr_field": 424, "circular": [424, 578, 579, 602, 645], "depolar": [424, 596], "cdr": 424, "l_field": 425, "logarithm": 425, "log10": [425, 617], "l_field_out": 425, "noisedbz_v": 426, "ref_dist": 426, "noise_field": [426, 427], "noisedbz": 426, "cappi_level": 428, "zr_a": 428, "200": [428, 603, 667], "zr_b": 428, "core_wt_threshold": 428, "conv_wt_threshold": 428, "conv_scale_km": 428, "min_reflect": 428, "conv_min_refl": 428, "conv_core_threshold": 428, "42": [428, 429, 439, 451, 593, 595, 596, 599, 643, 645, 646], "override_check": 428, "computation": 428, "\u00e0": 428, "trou": 428, "wavelet": 428, "atwt": 428, "multiresolut": 428, "focus": [428, 593, 595, 596], "raut": 428, "2008": [428, 614], "2020": [428, 564, 597, 600, 602, 603, 626, 656, 666, 667], "convers": [428, 563, 596], "sensit": 428, "howev": [428, 445, 597, 660], "intermedi": 428, "signific": 428, "approxim": [428, 593, 596, 602], "break": [428, 600, 604, 605], "season": 428, "2018": [428, 597], "discuss": [428, 597, 606], "insensit": 428, "variat": [428, 438, 445, 602], "dyadic": 428, "scale_break_us": 428, "greater": [428, 451, 597, 645], "bypass": 428, "saniti": 428, "fall": 428, "categori": [428, 595, 600], "strong": [428, 439, 595, 646], "updraft": 428, "activ": [428, 669], "collis": 428, "coalesc": 428, "wide": [428, 642], "remain": 428, "intens": [428, 451, 548], "unclassifi": [428, 593], "karekar": 428, "puranik": 428, "infrar": [428, 593], "satellit": [428, 593], "ieee": [428, 446], "geosci": [428, 446], "remot": [428, 446, 595, 596, 597, 602, 603, 613, 667], "sen": [428, 446], "lett": 428, "328": 428, "330": [428, 602], "seed": 428, "reeder": 428, "jakob": 428, "cascad": 428, "downscal": 428, "geophi": 428, "123": [428, 430, 642], "2050": 428, "2067": 428, "louf": 428, "gayatri": 428, "murugavel": 428, "konwar": 428, "prabhakaran": 428, "tran": 428, "5409": 428, "5415": 428, "dx": [429, 439, 451, 645, 646], "dy": [429, 439, 451, 595, 645, 646], "level_m": [429, 439, 646], "bkg_rad_km": [429, 439, 645, 646], "11": [429, 439, 584, 593, 595, 600, 614, 643, 646, 653, 656, 663, 664, 665], "55": [429, 439, 593, 595, 638, 645, 646], "calc_thr": [429, 439, 645, 646], "weak_echo_thr": [429, 439, 645, 646], "min_dbz_us": [429, 645], "db_averag": [429, 439, 645, 646], "remove_small_object": [429, 439, 645, 646], "min_km2_siz": [429, 439, 645, 646], "val_for_max_conv_rad": [429, 645], "max_conv_rad_km": [429, 645], "cs_core": 429, "nosfcecho": [429, 439, 645, 646], "weakecho": [429, 439, 645, 646], "sf": [429, 645], "conv": [429, 645], "estimate_flag": [429, 439, 645, 646], "estimate_offset": [429, 439, 645, 646], "partit": [429, 439, 451, 600, 608], "pars": [429, 439, 596, 597, 602], "least": [429, 439, 645], "simpler": [429, 439, 645], "percentag": [429, 439], "weak": [429, 439, 645, 646], "surfac": [429, 439, 596, 645, 646], "snow": [429, 433, 439, 564, 577, 596, 626, 645, 646, 647], "underestim": [429, 439, 645, 646], "wih": [429, 439], "convsf_dict": [429, 645, 646], "raindrop": [429, 439, 645, 646], "pacif": [429, 439, 645, 646], "warm": [429, 439, 445, 645], "pool": [429, 439, 645, 646], "implic": [429, 439, 645, 646], "appl": [429, 439, 447, 449, 451, 453, 564, 603, 645, 646, 667], "meteor": [429, 439, 447, 449, 451, 453, 564, 603, 645, 646, 656, 667], "36": [429, 439, 593, 614, 617, 620, 624, 638, 643, 645, 646, 648, 662], "847": [429, 439, 602, 645, 646], "867": [429, 439, 602, 645, 646], "doi": [429, 430, 434, 435, 439, 444, 446, 447, 564, 577, 593, 596, 597, 599, 600, 603, 626, 642, 645, 646, 656, 658, 659, 660, 662, 663, 664, 667], "1175": [429, 430, 439, 447, 564, 602, 642, 645, 646, 656], "1520": [429, 430, 439, 602, 642, 645, 646], "0450": [429, 439, 645, 646], "036": [429, 439, 645, 646], "3c0847": [429, 439, 645, 646], "morsdo": [429, 439, 645, 646], "3e2": [429, 430, 439, 642, 645, 646], "smith": [429, 439, 645, 646], "wilheit": [429, 439, 645, 646], "zipser": [429, 439, 645, 646], "character": [429, 439, 451, 645, 646], "tropic": [429, 439, 645, 646], "kwajex": [429, 439, 645, 646], "385": [429, 439, 602, 645, 646], "415": [429, 439, 631, 640, 645, 646, 665], "jam2206": [429, 439, 645, 646], "field_bin": [430, 642], "altitude_bin": [430, 642], "field_mask": [430, 642], "min_frac_thr": [430, 642], "contour": [430, 602, 611, 622, 640, 642, 665], "diagram": [430, 611, 641, 649, 665], "cfad": [430, 602, 611, 641, 649, 665], "1995": [430, 439, 451, 642, 645, 646], "histogram": [430, 617, 642, 660], "largest": 430, "row": [430, 593, 595, 597, 642], "creation": [430, 602], "total": [430, 445, 446, 447, 596, 599, 608, 609, 610, 613, 614, 615, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 665], "freq_norm": [430, 642], "height_edg": [430, 642], "field_edg": [430, 642], "kinemat": [430, 453, 603, 642, 667], "microphys": [430, 593, 642], "evolut": [430, 642], "florida": [430, 597, 642], "cumulonimbu": [430, 642], "ii": [430, 642, 656, 664], "mon": [430, 642], "wea": [430, 642], "rev": [430, 642], "1941": [430, 642], "1963": [430, 642], "0493": [430, 642], "3c1941": [430, 642], "tdkame": [430, 642], "the_spectra": 431, "vel_bin": 431, "wavelength": [431, 593, 596], "left_limit": 431, "right_limit": 431, "new_spectra": 431, "new_bin": 431, "a_field": [432, 433, 436], "rr_field": [432, 433, 434, 435, 436, 437, 438], "go": [432, 433, 434, 436, 437, 587, 594, 595, 600, 602, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 659], "diederich": 432, "simmer": [432, 449], "zhang": [432, 449, 564], "tromel": [432, 449], "2015": [432, 435, 449, 656], "wavelenght": 432, "hydrometeorologi": 432, "487": [432, 593], "502": [432, 602], "alphazr": 433, "0376": [433, 435, 436, 437], "betazr": 433, "6112": [433, 435, 436, 437], "alphaz": [433, 436, 437], "betaz": [433, 436, 437], "alphaa": [433, 436], "betaa": [433, 436], "mp_factor": 433, "hydro_field": [433, 444], "main_field": [433, 436, 437], "thresh_max": [433, 436, 437], "main": [433, 436, 437, 593, 595, 596, 597, 602, 603, 629, 667], "secondari": [433, 436, 437, 602], "figuera": [434, 444], "term": [434, 602], "monitor": 434, "french": 434, "sever": [434, 595, 602, 646], "quantit": 434, "ideal": [434, 596], "quarterli": 434, "royal": 434, "2012": [434, 445, 447], "1002": [434, 602], "qj": 434, "1934": 434, "fabri": 435, "fr\u00e9d\u00e9ric": 435, "meterologi": 435, "ch": [435, 647, 648], "pg": 435, "148": 435, "165": 435, "1017": 435, "cbo9781107707405": 435, "blend": [436, 437, 597, 634], "rain_main": [436, 437], "alphakdp": 437, "betakdp": 437, "polynomi": 438, "develop": [438, 439, 593, 597, 602, 646, 656, 666], "mcgill": [438, 656], "doell": 438, "systemat": 438, "drop": [438, 596, 597, 602], "northern": [438, 595], "germani": 438, "seven": 438, "year": [438, 593, 595, 599, 601, 613, 614], "1998": 438, "technol": [438, 449, 564], "1545": [438, 602], "1556": 438, "joss": 438, "switzerland": 438, "vdf": 438, "hochschulverlag": 438, "ag": [438, 647], "eth": 438, "zurich": 438, "134": [438, 593], "min_val_us": [439, 646], "binary_clos": 439, "val_for_max_rad": [439, 646], "max_rad_km": [439, 646], "core_v": [439, 646], "bkgd_val": [439, 646], "feat_val": [439, 646], "overest_field": [439, 646], "underest_field": [439, 646], "detect": [439, 597, 602, 611, 629, 641, 645, 649, 660, 665], "featur": [439, 594, 595, 597, 600, 606, 611, 626, 641, 642, 645, 649, 656, 665], "2023": [439, 599, 656], "steiner": [439, 451, 602, 645, 646], "lauratomkin": [439, 577, 602], "overestim": [439, 645, 646], "feature_dict": [439, 646], "climatolog": [439, 451, 645, 646], "storm": [439, 451, 548, 549, 551, 593, 596, 597, 599, 626, 645, 646, 662], "gaug": [439, 451, 645, 646], "1978": [439, 451, 645, 646], "2007": [439, 451, 645, 646], "miller": [439, 577, 626, 646], "2024": [439, 591, 600, 646], "identif": [439, 577, 626, 646], "faint": [439, 646], "winter": [439, 626, 645, 646], "prep": [439, 646], "sonde_dset": 440, "time_kei": 440, "height_kei": 440, "nvar": 440, "vap": 440, "startard": 440, "ncvar": 440, "return_d": 440, "freq": 441, "hz": [441, 444, 632], "freq_band": 441, "grid1": 442, "grid2": 442, "return_valu": 442, "displac": 442, "en": [442, 599, 602, 603, 656, 666, 667], "wikipedia": 442, "phase_correl": 442, "inspir": 442, "christoph": 442, "gohlk": 442, "lfd": 442, "uci": 442, "imreg": 442, "advect": [442, 443, 602], "trim_edg": 443, "shifted_grid": 443, "subset": [443, 587, 593, 595, 599, 602, 611, 641, 643], "mass_cent": 444, "approach": [444, 593, 596, 618], "besic": 444, "2016": [444, 593, 596, 597, 599, 603, 656, 658, 659, 660, 662, 663, 664, 667], "ndarrai": [444, 664], "centroid": 444, "nclass": 444, "nvariabl": 444, "hydro": [444, 647], "ventura": 444, "grazioli": [444, 446], "gabella": 444, "germann": 444, "bern": [444, 446], "statist": [444, 602, 603, 667], "cluster": 444, "semi": 444, "supervis": 444, "mea": [444, 577, 626, 646], "4425": 444, "4445": 444, "5194": [444, 577, 626, 646], "amt": [444, 577, 626, 646], "block": [444, 593, 600, 602], "2e9": 444, "cg": 445, "backscatt": [445, 449], "clpf": 445, "length_scal": 445, "first_guess": 445, "finite_ord": 445, "fill_valu": [445, 446, 447, 451, 597, 658, 659, 664], "psidp_field": [445, 446, 447, 647], "verbos": [445, 449, 602, 603, 667], "maesaka": 445, "monoton": [445, 448, 623], "propag": [445, 446, 447], "notat": 445, "primari": [445, 596], "proport": 445, "dr": 445, "analys": [445, 446, 447], "cost": [445, 602], "nonlinear": 445, "conjug": 445, "gradient": [445, 602, 623], "broyden": 445, "fletcher": 445, "goldfarb": 445, "shanno": 445, "bfg": 445, "100k": 445, "consider": [445, 599, 645, 646], "parameter": 445, "attentu": 445, "constraint": 445, "bring": [445, 593], "guess": 445, "root": [445, 666, 669], "signifi": [445, 451], "everywher": 445, "exactli": [445, 600, 617], "avoid": [445, 602, 605, 669], "converg": 445, "fact": [445, 447], "closer": 445, "finit": 445, "accuraci": 445, "maxit": 445, "met": 445, "achiev": 445, "somewhat": 445, "arbitrari": 445, "parallel": [445, 446, 447], "thread": [445, 597], "cpu": 445, "multiprocess": 445, "capabl": [445, 596, 660, 664], "relev": [445, 600, 606], "kdp_dict": [445, 446, 447], "phidpf_dict": 445, "phidpr_dict": [445, 446, 447], "forward": [445, 574, 575], "iwanami": 445, "maki": 445, "seventh": 445, "european": 445, "confer": 445, "hydrologi": 445, "rcov": 446, "pcov": 446, "prefilter_psidp": [446, 447], "filter_opt": [446, 447], "kalman": 446, "schneeb": 446, "psidp": [446, 447], "char": [446, 447], "capit": [446, 447], "intercept": 446, "slope": 446, "3x3": 446, "covari": 446, "matrix": [446, 597, 602], "4x4": 446, "filter_psidp": [446, 447, 602], "enabl": [446, 447, 596, 599, 602], "kdp_std_dict": 446, "dev": [446, 596, 599, 600, 603, 662, 667], "ensembl": 446, "52": [446, 449, 593, 596, 643], "5137": 446, "5149": 446, "1109": [446, 602], "tgr": 446, "2287017": 446, "windsiz": 447, "n_iter": 447, "vulpiani": [447, 602], "pre": [447, 602, 603, 667], "advantag": 447, "eat": 447, "gianfranco": 447, "mario": 447, "montopoli": 447, "luca": 447, "delli": 447, "passeri": 447, "antonio": 447, "gioia": 447, "pietro": 447, "giordano": 447, "frank": 447, "marzano": 447, "On": [447, 594, 595], "dual": [447, 602], "mountain": 447, "climatol": [447, 564, 645, 646], "51": [447, 593, 643], "405": [447, 602], "425": [447, 602], "05024": 447, "profile_field": 448, "height_field": 448, "3re": 448, "whole": [448, 602], "height_dict": 448, "profile_dict": 448, "desired_angl": [449, 602], "quasi": 449, "qvp": [449, 602], "wanted_angl": 449, "dictonari": 449, "quasai": 449, "troemel": 449, "kumjian": 449, "clim": [449, 596, 597], "2529": 449, "2548": 449, "meteorol": [449, 645, 646], "54": [449, 593, 595, 596, 614], "2344": 449, "2359": 449, "reev": 449, "tschallen": 449, "wai": [449, 596, 603, 605, 617, 658, 667, 669], "submit": [449, 597, 656], "work_level": 451, "3000": [451, 658, 662], "peak_rel": 451, "area_rel": 451, "medium": 451, "bkg_rad": 451, "11000": [451, 662], "use_intens": 451, "bright": [451, 593], "sgp": [451, 544], "peaked": 451, "eclass": 451, "z_want": [453, 454, 603, 648, 667], "valid_ray_min": [453, 603, 667], "velocity_azimuth_displai": [453, 603, 667], "one_sweep_radar": 453, "extract_sweep": [453, 599, 618, 642, 645, 646, 648], "vad": [453, 454, 602, 603, 611, 641, 649, 665, 667], "amount": [453, 596, 599, 603, 646, 662, 667], "_averag1d": [453, 603, 667], "idw": 453, "brown": [453, 602, 603, 667], "wexler": [453, 603, 667], "1968": [453, 603, 667], "105": [453, 603, 648, 667], "113": [453, 603, 620, 621, 643, 665, 667], "linespac": 454, "michelson": [454, 602, 656], "andersson": 454, "koistinen": [454, 656], "collier": 454, "riedl": 454, "szturc": 454, "gjertsen": 454, "nielsen": 454, "overgaard": 454, "2000": [454, 593, 619, 662], "baltex": 454, "centr": 454, "methodologi": [454, 564, 660], "smhi": 454, "swedish": 454, "hydrolog": 454, "institut": [454, 593, 664], "norrkop": 454, "suffix": 466, "tmp": 466, "dir": 466, "temporari": [466, 602], "my_cwd": 466, "getcwd": 466, "tmpdir": 466, "_": [466, 595, 599, 600, 613, 614, 647], "txt": [466, 602, 666], "wt": 466, "assert": [466, 602, 603, 667], "isfil": 466, "path_to_fil": 543, "local": [543, 594, 595, 599, 602, 603, 656, 666, 667], "without": [544, 558, 593, 596, 602, 666], "site": [544, 593, 595, 596, 597, 598, 599, 600, 608, 614, 643, 659, 662, 666], "oklahoma": [544, 599], "puls": [547, 596, 602, 660], "min_valu": 548, "max_valu": 548, "45": [548, 595, 603, 626, 635, 645, 646, 667], "grid_len": 548, "sigma": [548, 549, 634, 635], "mu": [548, 549], "masked_boundari": 548, "gaussian": [548, 549, 602, 634], "dp_phase_shift": [550, 643, 658], "diff_phas": [550, 658], "differential_reflect": [550, 613, 627, 634, 663, 664], "rectangular": [551, 552, 597, 602], "alia": [556, 557, 597, 602], "miscellan": 558, "depreci": [558, 602], "caution": [558, 642], "radian": [559, 561, 582, 593], "std": [561, 562, 579, 584], "convolut": 563, "ndimag": [563, 602, 634, 635], "generic_filt": 563, "pi": [563, 593, 660], "std_dev": 563, "azimuth_spread": 564, "spatial_spread": 564, "spatial_rang": 564, "sphere_dist": [564, 576], "for_azimuth": [564, 576], "get_sweep_rai": 564, "subset_field": 564, "assemble_column": 564, "murphi": 564, "columnar": 564, "cvp": [564, 602], "ic": [564, 634, 647], "situ": 564, "37": [564, 593, 596, 617, 643, 646, 663], "1623": 564, "1642": 564, "jtech": 564, "0011": 564, "bukov\u010di\u0107": 564, "zrni\u0107": 564, "59": [564, 593, 596], "991": [564, 602], "1009": [564, 602], "19": [564, 593, 595, 596, 602, 648, 664], "0140": 564, "az_tol": 565, "radar_rhi": 565, "target_elev": 566, "el_tol": 566, "radar_ppi": 566, "epoch": [567, 568, 569, 570, 571, 593], "max_offset": 572, "running_win_dt": 572, "deg_rng": 572, "consider_2pi_jump": 572, "is_ppi": 572, "wise": 572, "could": [572, 597, 600, 603, 614, 667], "strategi": [572, 593], "might": [572, 594, 658, 669], "goe": [572, 597], "shot": 572, "navg": 573, "nnoise_min": 573, "hildebrand": [573, 602], "sehkon": 573, "1974": 573, "spectral": [573, 593, 596, 602], "articl": 573, "peak": [573, 596, 660], "var": [573, 588, 589, 593], "varianc": [573, 618], "nnois": 573, "sekhon": [573, 602], "808": 573, "811": [573, 602], "target_latitud": [574, 586], "target_longitud": [574, 586], "bear": [574, 595], "alongitudeg": 574, "great": [574, 586], "circl": [574, 586, 645], "known": [574, 602, 603, 664, 667], "6371000": [574, 586], "calculatitude": 574, "degress": [574, 586], "further": [576, 594, 596, 600], "get_column_rai": 576, "mute_field": [577, 626], "mute_threshold": [577, 626], "field_threshold": [577, 626], "discern": 577, "mute": [577, 602, 611, 622, 640, 645, 646, 665], "allen": [577, 626, 646], "5515": [577, 626, 646], "5525": [577, 626, 646], "interval_min": [578, 579], "interval_max": [578, 579], "endpoint": [578, 579], "to_vpt": 580, "90": [580, 593, 595, 596, 603, 667], "verticl": 580, "radar1": 581, "radar2": 581, "angles1": 582, "angles2": 582, "angle1": 583, "angle2": 583, "eg": 584, "ma": [584, 603, 617, 619, 642, 645, 646, 659, 663, 667], "interp_kind": 585, "sim_vel_field": 585, "kind": [585, 593, 600, 608], "slinear": 585, "quadrat": 585, "cubic": 585, "interp1d": [585, 603, 667], "sim_vel": [585, 603, 667], "rng_min": 587, "rng_max": 587, "ele_min": 587, "ele_max": 587, "azi_min": 587, "azi_max": 587, "coverag": [587, 593, 602, 603, 667], "11pt": 588, "stdev": 588, "texarrai": 588, "pyradarobj": 588, "tex": 589, "single_scan": 590, "is_vpt": 590, "mislabel": 590, "properli": [590, 603, 614, 667], "releas": [591, 598, 603, 606, 656, 659, 662, 666, 667], "post17": 591, "jun": 591, "guid": [591, 593, 594, 602, 656], "public": [591, 593, 597, 599, 600, 602, 603, 658, 659, 660, 662, 663, 664, 667], "broken": [591, 602], "aerosol": 593, "experi": 593, "depart": [593, 596, 597, 599, 658, 659, 660, 662, 663, 664], "energi": [593, 596, 597, 599, 658, 659, 660, 662, 663, 664], "iop": 593, "goal": 593, "studi": 593, "lifecycl": 593, "houston": [593, 613], "impact": [593, 599, 634], "uniqu": 593, "suit": [593, 602, 662], "seabreez": 593, "coast": [593, 597], "cleaner": [593, 663], "air": [593, 597, 600], "pollut": 593, "click": [593, 594, 600, 605], "post": [593, 595, 596, 597, 599, 600, 602, 605, 656], "overlai": 593, "texa": [593, 613], "lightn": 593, "csapr2": 593, "wildfir": 593, "smoke": 593, "entrain": 593, "juli": [593, 614], "we": [593, 595, 596, 597, 599, 600, 603, 606, 613, 614, 617, 623, 642, 643, 645, 646, 652, 658, 659, 660, 662, 663, 664, 666, 667, 668, 669], "highlight": [593, 594, 597], "minut": [593, 595, 596, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654], "pyart": [593, 595, 599, 600, 603, 605, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656, 658, 659, 660, 662, 663, 664, 666, 667, 669], "pyplot": [593, 594, 595, 596, 597, 599, 600, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 658, 659, 660, 662, 663], "plt": [593, 594, 595, 596, 597, 599, 600, 602, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 658, 659, 660, 662, 663], "xr": [593, 596], "s3f": 593, "ccr": [593, 595, 597, 599, 600, 613, 614, 617, 618, 624, 625, 631, 638, 643, 645, 646, 652, 659, 660, 663], "panda": [593, 596, 599, 602, 669], "pd": [593, 595, 596, 599], "kdtree": 593, "inlin": [593, 634, 635], "download": [593, 594, 596, 597, 600, 602, 603, 608, 609, 611, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656, 667, 669], "longwav": 593, "ensur": [593, 595, 602, 646], "c13": 593, "denot": [593, 618], "anonym": [593, 595], "credenti": 593, "s3filesystem": 593, "day_no": 593, "168": 593, "dai": [593, 599], "16th": 593, "leap": 593, "hour": [593, 597, 599, 613, 614], "goes16": 593, "abi": 593, "l1b": 593, "radc": 593, "02d": 593, "fi": 593, "or_abi": 593, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 593, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 593, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 593, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 593, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 593, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 593, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 593, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 593, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 593, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 593, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 593, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 593, "goes_d": 593, "open_dataset": [593, 596], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 593, "lt": [593, 596], "gt": [593, 596], "1500": [593, 658], "2500": 593, "number_of_time_bound": 593, "number_of_image_bound": 593, "num_star_look": 593, "datetime64": [593, 596, 643], "07": [593, 595, 596, 614, 626, 645, 646, 664], "1282": 593, "1013": 593, "y_imag": 593, "08624": 593, "x_imag": 593, "03136": 593, "band_id": 593, "int8": 593, "band_wavelength": 593, "33": [593, 596, 597, 646, 664], "t_star_look": 593, "band_wavelength_star_look": 593, "rad": [593, 596], "dqf": 593, "time_bound": 593, "goes_imager_project": 593, "int32": [593, 664], "2147483647": 593, "y_image_bound": 593, "x_image_bound": 593, "algorithm_dynamic_input_data_contain": 593, "processing_parm_version_contain": 593, "algorithm_product_version_contain": 593, "star_id": 593, "channel_integration_tim": 593, "336": [593, 602], "channel_gain_field": 593, "naming_author": 593, "nesdi": 593, "standard_name_vocabulari": 593, "v35": 593, "commerc": 593, "production_sit": 593, "wcda": 593, "timeline_id": 593, "date_cr": 593, "12t20": 593, "09": [593, 595, 600, 621, 640, 645, 646, 655, 665], "3z": 593, "time_coverage_start": [593, 658, 664], "time_coverage_end": [593, 658], "08": [593, 615, 665], "7z": 593, "lut_filenam": 593, "spacelookparam": 593, "fm1a_cdrl79revp_pr_09_00_02": 593, "f45b564c": 593, "dcb9": 593, "498a": 593, "ac56": 593, "da80a1d735a5xarrai": 593, "datasetdimens": [593, 596], "1500x": 593, "2500number_of_time_bound": 593, "2number_of_image_bound": 593, "2band": 593, "1num_star_look": 593, "24coordin": 593, "j2000": 593, "mid": 593, "secondsstandard_nam": 593, "timeaxi": 593, "tbound": 593, "time_boundsarrai": 593, "x27": [593, 596], "537394048": 593, "float640": 593, "04432": 593, "04427unit": 593, "radaxi": 593, "ylong_nam": 593, "coordinatestandard_nam": 593, "projection_y_coordinatearrai": 593, "128212": 593, "128156": 593, "1281": 593, "04438": 593, "044324": 593, "044268": 593, "03856": 593, "03861unit": 593, "xlong_nam": 593, "projection_x_coordinatearrai": 593, "101332": 593, "101276": 593, "10122": 593, "0385": 593, "038556": 593, "038612": 593, "imagestandard_nam": 593, "projection_y_coordinateunit": 593, "yarrai": 593, "projection_x_coordinateunit": 593, "numberstandard_nam": 593, "sensor_band_identifierunit": 593, "1arrai": [593, 596], "central": [593, 595, 599], "wavelengthstandard_nam": 593, "sensor_band_central_radiation_wavelengthunit": 593, "umarrai": 593, "star": 593, "tarrai": 593, "01t11": 593, "43": [593, 596, 599], "000000000": [593, 596], "starstandard_nam": 593, "radiancesstandard_nam": 593, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 593, "12valid_rang": 593, "4094": 593, "mw": 593, "cm": [593, 635], "1resolut": 593, "000056": 593, "radgrid_map": 593, "goes_imager_projectioncell_method": 593, "pointancillary_vari": 593, "3750000": 593, "radianc": 593, "flagsstandard_nam": 593, "status_flagvalid_rang": 593, "1grid_map": 593, "pointflag_valu": 593, "flag_mean": 593, "good_pixel_qf": 593, "conditionally_usable_pixel_qf": 593, "out_of_range_pixel_qf": 593, "no_value_pixel_qf": 593, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 593, "5percent_good_pixel_qf": 593, "0percent_conditionally_usable_pixel_qf": 593, "0percent_out_of_range_pixel_qf": 593, "0percent_no_value_pixel_qf": 593, "0percent_focal_plane_temperature_threshold_exceeded_qf": 593, "00": [593, 595, 596, 599, 600, 602, 610, 615, 621, 640, 649, 650, 655, 665], "326423040": 593, "748365056": 593, "projectiongrid_mapping_nam": 593, "geostationaryperspective_point_height": 593, "35786023": 593, "0semi_major_axi": 593, "6378137": 593, "0semi_minor_axi": 593, "6356752": 593, "31414inverse_flatten": 593, "298": 593, "2572221latitude_of_projection_origin": 593, "0longitude_of_projection_origin": 593, "0sweep_angle_axi": 593, "south": [593, 597, 627], "extent": [593, 595, 596, 599, 618, 620], "imageunit": 593, "radarrai": 593, "12824": 593, "04424": 593, "10136": 593, "03864": 593, "nominal_satellite_subpoint_lat": 593, "nomin": 593, "subpoint": 593, "standard_nam": [593, 645, 646, 659, 664], "latitudeunit": [593, 596], "degrees_northarrai": 593, "nominal_satellite_subpoint_lon": 593, "longitudeunit": [593, 596], "degrees_eastarrai": 593, "199997": 593, "nominal_satellite_height": 593, "gr": 593, "80": [593, 595, 609, 638, 644], "ellipsoid": 593, "height_above_reference_ellipsoidunit": 593, "kmarrai": 593, "35786": 593, "023438": 593, "geospatial_lat_lon_ext": 593, "geospati": 593, "referencesgeospatial_westbound_longitud": 593, "152": [593, 646], "10928geospatial_northbound_latitud": 593, "56": [593, 596, 648], "76145geospatial_eastbound_longitud": 593, "94688geospatial_southbound_latitud": 593, "14": [593, 596, 597, 599, 600, 614, 620, 621, 623, 625, 652, 664, 665], "57134geospatial_lat_cent": 593, "083002geospatial_lon_cent": 593, "096954geospatial_lat_nadir": 593, "0geospatial_lon_nadir": 593, "0geospatial_lat_unit": 593, "degrees_northgeospatial_lon_unit": 593, "96921e": 593, "yaw_flip_flag": 593, "spacecraft": 593, "yaw": 593, "flip": 593, "configurationvalid_rang": 593, "1flag_valu": 593, "truearrai": 593, "esun": 593, "bandpass": 593, "solar": 593, "irradi": 593, "sun": 593, "distancestandard_nam": 593, "toa_shortwave_irradiance_per_unit_wavelengthunit": 593, "um": 593, "1cell_method": 593, "meanarrai": 593, "kappa0": 593, "incom": 593, "d2": 593, "instantan": [593, 602], "divid": 593, "reflectanceunit": 593, "planck_fk1": 593, "wavenumb": 593, "c2": 593, "nu3": 593, "emiss": 593, "monochromat": 593, "nu": 593, "constantsunit": 593, "10803": 593, "299805": 593, "planck_fk2": 593, "karrai": 593, "1392": [593, 602], "73999": 593, "planck_bc1": 593, "bc_1": 593, "bc_2": 593, "planck_funct": 593, "wavenumberunit": 593, "0755": 593, "planck_bc2": 593, "99975": 593, "valid_pixel_count": 593, "condition": 593, "pixelsunit": 593, "countgrid_map": 593, "sum": [593, 601, 642], "comment": [593, 594, 635, 664], "3702838": 593, "missing_pixel_count": 593, "saturated_pixel_count": 593, "satur": 593, "radiometr": 593, "geoloc": 593, "undersaturated_pixel_count": 593, "undersatur": 593, "focal_plane_temperature_threshold_exceeded_count": 593, "exceed": 593, "thresholdunit": 593, "min_radiance_value_of_valid_pixel": 593, "pixelsstandard_nam": 593, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 593, "6443": 593, "185": 593, "5699": 593, "849287": 593, "max_radiance_value_of_valid_pixel": 593, "154": [593, 631], "23053": 593, "mean_radiance_value_of_valid_pixel": 593, "197975": 593, "std_dev_radiance_value_of_valid_pixel": 593, "toa_outgoing_radiance_per_unit_wavenumberunit": 593, "standard_devi": 593, "985853": 593, "maximum_focal_plane_temperatur": 593, "focal": 593, "valuevalid_rang": 593, "951939": 593, "focal_plane_temperature_threshold_increas": 593, "bound": [593, 596, 646], "81": [593, 595, 664], "focal_plane_temperature_threshold_decreas": 593, "decreas": [593, 642], "percent_uncorrectable_l0_error": 593, "percent": 593, "l0": 593, "errorsvalid_rang": 593, "percentgrid_map": 593, "earth_sun_distance_anomaly_in_au": 593, "anomali": [593, 646], "astronom": 593, "unitsunit": 593, "uacell_method": 593, "016543": 593, "datainput_abi_l0_data": 593, "m6_g16_s20221932006173_e20221932008557_c": 593, "ncarrai": 593, "filenamesl1b_processing_parm_vers": 593, "parm": 593, "rad_g16_v01r00": 593, "ziparrai": 593, "packag": [593, 594, 595, 596, 597, 599, 600, 602, 603, 608, 614, 656, 659, 662, 666, 667, 669], "versionalgorithm_vers": 593, "alg": 593, "rad_v01r00": 593, "zipproduct_vers": 593, "v01r00arrai": 593, "stararrai": 593, "vnir": 593, "ir": 593, "telemetryunit": 593, "countarrai": 593, "gain": [593, 596], "noaaconvent": 593, "7standard_name_vocabulari": 593, "administr": [593, 597, 613], "servicesproject": 593, "goesproduction_sit": 593, "wcdasproduction_environ": 593, "oespatial_resolut": 593, "2km": 593, "nadirmetadata_convent": 593, "discoveri": [593, 600], "0orbital_slot": 593, "eastplatform_id": 593, "g16instrument_typ": 593, "baselin": 593, "scene_id": 593, "conusinstrument_id": 593, "fm1titl": 593, "radiancessummari": 593, "digit": 593, "outgo": 593, "engin": 593, "radiancekeywords_vocabulari": 593, "nasa": 593, "master": [593, 602, 605, 635], "gcmd": 593, "scienc": [593, 597, 599, 658, 659, 660, 662, 663, 664], "0iso_series_metadata_id": 593, "a70be540": 593, "c38b": 593, "11e0": 593, "962b": 593, "0800200c9a66licens": 593, "restrict": 593, "approv": 593, "processing_level": 593, "aeronaut": 593, "l1bcdm_data_typ": 593, "imagedataset_nam": 593, "ncproduction_data_sourc": 593, "realtimetimeline_id": 593, "6date_cr": 593, "3ztime_coverage_start": 593, "3ztime_coverage_end": 593, "7zlut_filenam": 593, "637827000": 593, "h5": [593, 602], "qtableband13": 593, "fm1a_cdrl79revh_do_08_00_00": 593, "582860861": 593, "caltargettimeinterv": 593, "fm1a_cdrl79revp_do_08_00_01": 593, "611906620": 593, "bandsaturationlimit": 593, "600000000": 593, "solarspacelookparam": 593, "fm1a_adr1233_pr_09_08_25": 593, "709281036": 593, "deadrowlistparam": 593, "mirror_record": 593, "fm1a_cdrl79revg_do_07_00_00": 593, "kalmanastroconst": 593, "xml": [593, 599], "kalmanfiltercontrol": 593, "fm1a_pr_09_08_02": 593, "677650371": 593, "kalmanmeasmaxsens": 593, "fmaa_int_only_do_09_01_00": 593, "652936814": 593, "kalmanpreprocessorcontrol": 593, "fm1a_cdrl79revj_pr_09_06_02": 593, "657795700": 593, "kalmanreferencedata": 593, "888": 593, "kalmanstarcatalog": 593, "abi_navigationrdp_band13": 593, "fm1a_cdrl79revj_do_07_00_00": 593, "abi_navigationparameters_band13": 593, "fm1a_cdrl79revh_do_07_00_00": 593, "abi_resamplingimplementation_band13": 593, "fm1a_cdrl79revh_do_07_02_00": 593, "602129336": 593, "abi_resamplingparameters_band13": 593, "starlookparam": 593, "stardetectionparam": 593, "resamplingscaledconvers": 593, "fmaa_int_only_do_08_00_00": 593, "1111": [593, 596, 602], "blockreleaseregion": 593, "2222": 593, "csv": [593, 595], "ir_retrievalparamet": 593, "fm1a_cdrl79revh_do_09_01_00": 593, "652936750": 593, "radiancelut_band13": 593, "fm1a_cdrl79reve_do_08_00_00": 593, "ict_record": 593, "fm1a_tmabi_18_159_pr_09_00_02": 593, "icm_conversionconst": 593, "fm1a_cdrl43": 593, "18_do_09_01_00": 593, "icm_sensorcoeffici": 593, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 593, "676949608": 593, "h5id": 593, "da80a1d735a5": 593, "team": 593, "bobbi": [593, 617], "jackson": [593, 617], "pug": 593, "l2": [593, 602], "file_id": 593, "def": [593, 595, 599, 602, 603, 623, 646, 667], "calculate_degre": 593, "x_coordinate_1d": 593, "y_coordinate_1d": 593, "projection_info": 593, "lon_origin": 593, "attr": 593, "longitude_of_projection_origin": 593, "perspective_point_height": 593, "semi_major_axi": 593, "r_eq": 593, "r_pol": 593, "semi_minor_axi": 593, "matric": 593, "x_coordinate_2d": 593, "y_coordinate_2d": 593, "meshgrid": [593, 617, 642], "lambda_0": 593, "a_var": 593, "b_var": 593, "c_var": 593, "r_": 593, "s_x": 593, "s_y": 593, "s_z": 593, "conu": 593, "seterr": 593, "abi_lat": 593, "arctan": 593, "abi_lon": 593, "crop": 593, "our": [593, 595, 598, 613, 614, 617, 623, 624, 643, 645, 646, 652, 656], "interest": [593, 595, 596, 597, 599, 600, 617, 645], "circ": 593, "95": [593, 595, 643, 664], "nan_to_num": 593, "9999": [593, 664], "lat_rang": 593, "lon_rang": 593, "lat_min": 593, "lat_max": 593, "lat_min_bound": 593, "argmin": 593, "ab": 593, "lat_max_bound": 593, "lon_min": 593, "lon_max": 593, "lon_min_bound": 593, "lon_max_bound": 593, "a1": [593, 596, 600, 631], "disoveri": 593, "toolkit": [593, 596, 597, 599, 600, 658, 659, 660, 662, 663, 664], "5439": [593, 596, 600], "1467901": 593, "page": [593, 598, 602, 605], "autom": [593, 599, 600], "catalogu": 593, "adam": [593, 602], "theisen": 593, "geometri": [593, 599, 602], "cell_track_info": 593, "read_csv": [593, 595], "raw": [593, 608, 609, 618], "githubusercont": 593, "com": [593, 603, 614, 635, 666, 667, 669], "adamtheisen": [593, 602], "cell": [593, 600, 602, 634, 653], "stat": [593, 602], "houcsapr": 593, "20220617": 593, "index_col": 593, "parse_d": 593, "unnam": 593, "scan_mod": [593, 596, 602], "template_nam": 593, "azimuth_min": 593, "azimuth_max": 593, "elevation_min": 593, "elevation_max": 593, "range_min": 593, "range_max": 593, "cell_azimuth": 593, "cell_rang": 593, "cell_zh": 593, "ngates_gt_0": 593, "ngates_gt_10": 593, "ngates_gt_30": 593, "ngates_gt_50": 593, "ngates_gt_10_5km": 593, "ngates_gt40_5km": 593, "03": [593, 596, 613, 640, 649, 655, 665], "hou": 593, "303": [593, 602], "74450": 593, "637207": 593, "383545": 593, "109900": 593, "297": 593, "59216": 593, "307": [593, 602], "63367": 593, "021240": 593, "988037": 593, "910767": 593, "700": [593, 596, 599, 602], "930866": 593, "78": 593, "302": 593, "64587": 593, "645874": 593, "1800": [593, 595, 658], "776333": 593, "55798": 593, "59094": 593, "97546": 593, "99744": 593, "975464": 593, "900": [593, 658], "972101": 593, "46": [593, 643], "2826": 593, "301": [593, 602], "48132": 593, "50330": 593, "648193": 593, "382324": 593, "503296": 593, "62400": 593, "327583": 593, "990": 593, "989": [593, 602], "210": [593, 646], "995": [593, 602], "2827": 593, "305": [593, 602], "70007": 593, "404297": 593, "700073": 593, "13600": 593, "29": [593, 596], "037998": 593, "2828": 593, "23510": 593, "26807": 593, "235107": 593, "459156": 593, "2829": 593, "296": [593, 602], "08704": 593, "306": [593, 602], "16150": 593, "999268": 593, "998291": 593, "646362": 593, "59100": 593, "882927": 593, "807": 593, "783": [593, 602], "27": [593, 597, 643, 646, 649, 665], "63": [593, 664], "830": [593, 615], "2830": 593, "05835": 593, "08032": 593, "058350": 593, "62800": 593, "198204": 593, "767": [593, 602], "76": 593, "773": [593, 602], "2831": 593, "notebook": [593, 595, 596, 601, 602, 608, 609, 611, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 659, 662, 663, 669], "much": [593, 595, 596, 597, 599, 600, 602, 642, 660, 662, 663], "frequent": 593, "start_hour": 593, "end_hour": 593, "utc": [593, 595, 596, 597, 600, 613, 614, 637], "48": [593, 595, 620], "04": [593, 596, 599, 610, 640, 643, 655, 665], "26": 593, "38": [593, 596, 614], "57": [593, 645, 646], "rjackson": [593, 617], "paw": 593, "houcsapr2cfrs2": 593, "20220712": 593, "200714": 593, "easili": [593, 599], "eol": 593, "cgi": 593, "codiac": 593, "fgr_form": 593, "016": 593, "densiti": [593, 647], "lma_d": 593, "lylout_220712_000000_86400_map500m": 593, "afternoon": 593, "203229": 593, "lylout_220617_000000_86400_map500m": 593, "radarmapdisplai": [593, 595, 599, 600, 602, 613, 614, 617, 625, 631, 643, 652, 654, 658, 659, 660, 662, 663], "subplot": [593, 595, 596, 597, 599, 600, 602, 613, 617, 623, 624, 625, 637, 642, 643, 644, 645, 646, 647, 648, 652, 660], "subplot_kw": 593, "disp": 593, "graph": [593, 594, 595, 596, 597, 599, 600, 602, 608, 609, 613, 614, 617, 618, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 652, 653, 654, 658, 659, 660, 662, 663], "150": [593, 594, 630, 660], "plot_ppi_map": [593, 595, 599, 600, 602, 613, 614, 617, 625, 631, 643, 652, 659, 660, 663], "flash_tim": 593, "squeez": [593, 658], "argwher": [593, 617], "logical_and": [593, 617], "flash_time_start": 593, "17t20": 593, "scatter": [593, 595, 599, 600, 624, 643], "flash_center_longitud": 593, "flash_center_latitud": 593, "set_xlim": [593, 638, 642, 647], "96": [593, 595, 596, 617, 656, 663], "94": [593, 664], "set_ylim": [593, 638, 642, 647], "deprecationwarn": [593, 662], "escap": 593, "sequenc": [593, 597], "xf": 593, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 593, "ipykernel_41252": 593, "2371313213": 593, "opt": [593, 594, 596, 597, 602], "anaconda3": [593, 596, 597, 656, 659, 662, 666, 669], "env": [593, 594, 596, 597, 599, 600, 602, 608, 614, 656, 659, 662, 669], "pyart_env2": 593, "lib": [593, 596, 597, 599, 600, 608, 614, 659, 662, 666], "python3": [593, 596, 597, 599, 600, 601, 608, 614], "mpl": [593, 602, 647, 659, 662], "gridlin": [593, 597, 599, 625], "451": [593, 596], "userwarn": [593, 600, 608, 614], "xlabels_top": [593, 597], "deprec": [593, 597, 605, 659, 662], "top_label": [593, 599, 625], "toggl": [593, 602], "visibl": [593, 597, 602], "ylabels_right": [593, 597], "right_label": [593, 599, 625], "strike": 593, "overlaid": 593, "csapr_rhi": 593, "203012": 593, "flash_alt": 593, "flash_init_altitud": 593, "flash_lon": 593, "flash_init_longitud": 593, "flash_lat": 593, "flash_init_latitud": 593, "rhi_lon": 593, "flatten": [593, 617], "rhi_lat": 593, "rhi_alt": 593, "kdtree_data": 593, "stack": [593, 596, 599, 603, 666, 667], "inp_data": 593, "where_in_rhi": 593, "flash_rang": 593, "1e3": 593, "motiv": [594, 597], "blog": [594, 599, 602, 603, 667], "come": [594, 597, 645], "colorschem": 594, "vision": 594, "defici": 594, "illustr": 594, "collabor": 594, "contributor": [594, 605, 656, 668], "guidenc": 594, "ve": 594, "trip": [594, 663], "me": 594, "assist": 594, "https_link_to_your_fork": 594, "unfamiliar": 594, "yml": [594, 602, 656, 669], "slightli": [594, 597, 625], "latest": [594, 602, 603, 656, 667], "button": [594, 598, 605], "kshrc": 594, "export": [594, 666, 669], "pip": [594, 603, 666, 667, 669], "checkout": [594, 603, 605, 667], "newblog_post": 594, "plot_ppi_mdv": [594, 630, 640, 665], "radardisplai": [594, 595, 596, 600, 602, 608, 609, 618, 623, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 639, 642, 644, 647], "jonathan": [594, 608, 609, 619, 620, 627, 628, 630, 632, 636, 639, 669], "helmu": [594, 597, 599, 603, 608, 609, 619, 620, 627, 628, 630, 632, 636, 639, 656, 658, 659, 660, 662, 663, 664, 667, 669], "jhelmu": [594, 602, 608, 609, 619, 620, 627, 628, 630, 632, 636, 639], "anl": [594, 608, 609, 613, 614, 617, 619, 620, 623, 624, 625, 627, 628, 629, 630, 632, 634, 635, 636, 637, 639, 643, 644, 652, 653, 654], "licens": [594, 603, 608, 609, 613, 614, 617, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656, 667], "bsd": [594, 603, 608, 609, 613, 614, 617, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656, 667], "claus": [594, 603, 608, 609, 613, 614, 617, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 667], "get_test_data": [594, 608, 609, 617, 619, 620, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 652, 653, 654], "110635": [594, 619, 630, 662], "figsiz": [594, 595, 596, 597, 599, 600, 608, 609, 613, 614, 617, 618, 623, 624, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 642, 644, 645, 646, 647, 652, 659, 660, 662, 663], "add_subplot": [594, 608, 609, 618, 619, 620, 627, 628, 629, 630, 632, 633, 634, 635, 636, 639], "111": [594, 595, 597, 600, 617, 619, 620, 625, 628, 629, 630, 634, 635, 636, 643], "get_cmap": [594, 626, 645, 646], "jet": 594, "colorbind": 594, "pyart_homeyerrainbow": [594, 596, 617, 623, 624, 625, 630, 633, 637, 638, 644], "plot_rhi_cfradial_singlescan": [594, 633, 640, 665], "panel": [594, 600, 611, 622, 640, 642, 665], "sgpxsaprrhicmaci5": [594, 632, 633, 637, 642], "c0": [594, 608, 632, 633, 637, 642, 659], "20110524": [594, 632, 633, 637, 642], "015604_nc4": [594, 632, 633, 637, 642], "read_cfradi": [594, 608, 617, 620, 624, 632, 633, 637, 642, 647, 648], "subplots_adjust": [594, 596, 623, 632, 633], "hspace": [594, 596, 632, 633], "xlabel": [594, 596, 617, 632, 633, 660], "ylabel": [594, 596, 617, 632, 633, 660], "stage": 594, "my": [594, 666], "untrack": [594, 603, 667], "blog_pr": 594, "restor": 594, "discard": 594, "_static": 594, "As": [594, 596, 603, 658, 660, 662, 663, 667], "statement": [594, 602, 603, 667], "hint": [594, 597, 604], "wait": [594, 597], "editor": [594, 601, 603, 667, 669], "enh": [594, 602], "abort": 594, "person": 594, "addition": [594, 597], "anyon": 594, "respond": 594, "walk": [595, 596, 599, 600, 601], "septemb": 595, "2021": [595, 645, 646], "thunderstorm": 595, "southern": 595, "wisconsin": [595, 602], "illinoi": 595, "trail": 595, "damag": [595, 599], "milwauke": [595, 599], "madison": 595, "imageri": [595, 599], "russ": 595, "schumach": 595, "colorado": 595, "unvers": 595, "put": 595, "togeth": [595, 596, 597, 602], "hi": [595, 646], "glob": [595, 596, 599, 600, 603, 667], "math": 595, "atan2": 595, "tempfil": 595, "cfeatur": [595, 597, 599, 600], "mcolor": [595, 597, 626, 645, 646], "mdate": 595, "uscounti": [595, 599], "imageio": 595, "pytz": [595, 602], "temploc": 595, "mkdtemp": 595, "filterwarn": [595, 596, 597, 599, 617], "let": [595, 596, 597, 598, 600, 602, 603, 613, 614, 617, 623, 625, 642, 643, 645, 646, 652, 658, 660, 662, 663, 664, 667, 669], "machin": [595, 596, 599, 600, 669], "kmkx": [595, 599], "nexrad_path": 595, "level2": [595, 599, 602, 613, 614, 626, 645, 646], "d_": 595, "kmkx20210907_170101_v06": 595, "kmkx20210907_170739_v06": 595, "kmkx20210907_171431_v06": 595, "kmkx20210907_172123_v06": 595, "kmkx20210907_172814_v06": 595, "kmkx20210907_173452_v06": 595, "kmkx20210907_174130_v06": 595, "kmkx20210907_174807_v06": 595, "kmkx20210907_175459_v06": 595, "kmkx20210907_175459_v06_mdm": 595, "read_nexrad_arch": [595, 599, 613, 614, 626, 627, 628, 645, 646], "possibli": 595, "add_featur": [595, 597, 599, 600], "pyart_chasespectr": [595, 599, 600, 653, 654], "70": [595, 596, 599, 613, 617, 624, 654], "set_ext": 595, "easier": [595, 596, 597], "scroll": 595, "radar_id": 595, "timestamp": [595, 596], "tz_local": 595, "later": [595, 597, 659, 662], "interfac": [595, 600, 602], "conn": 595, "nexradawsinterfac": 595, "get_avail_scans_in_rang": 595, "len": [595, 623, 637, 647, 658], "kmkx20210907_151132_v06": 595, "kmkx20210907_152621_v06": 595, "kmkx20210907_150152_v06": 595, "kmkx20210907_151622_v06": 595, "kmkx20210907_152121_v06": 595, "kmkx20210907_150642_v06": 595, "kmkx20210907_155424_v06_mdm": 595, "kmkx20210907_153610_v06": 595, "kmkx20210907_154814_v06": 595, "kmkx20210907_155424_v06": 595, "kmkx20210907_154205_v06": 595, "kmkx20210907_160034_v06": 595, "kmkx20210907_160607_v06": 595, "kmkx20210907_161141_v06": 595, "kmkx20210907_163532_v06": 595, "kmkx20210907_161714_v06": 595, "kmkx20210907_162924_v06": 595, "kmkx20210907_164816_v06": 595, "kmkx20210907_165433_v06": 595, "kmkx20210907_165433_v06_mdm": 595, "kmkx20210907_162247_v06": 595, "kmkx20210907_153134_v06": 595, "kmkx20210907_164149_v06": 595, "kmkx20210907_182057_v06": 595, "kmkx20210907_182749_v06": 595, "kmkx20210907_184048_v06": 595, "kmkx20210907_180841_v06": 595, "kmkx20210907_183440_v06": 595, "kmkx20210907_185431_v06_mdm": 595, "kmkx20210907_181448_v06": 595, "kmkx20210907_180150_v06": 595, "kmkx20210907_185431_v06": 595, "kmkx20210907_190109_v06": 595, "kmkx20210907_190703_v06": 595, "kmkx20210907_193238_v06": 595, "kmkx20210907_191951_v06": 595, "kmkx20210907_191327_v06": 595, "kmkx20210907_195642_v06": 595, "kmkx20210907_194459_v06": 595, "kmkx20210907_195642_v06_mdm": 595, "kmkx20210907_193849_v06": 595, "kmkx20210907_184739_v06": 595, "kmkx20210907_192614_v06": 595, "kmkx20210907_195056_v06": 595, "now": [595, 596, 597, 599, 600, 602, 614, 617, 618, 623, 625, 643, 645, 646, 652, 658, 660, 666], "predict": 595, "tornado": [595, 599], "offic": [595, 597, 599, 658, 659, 660, 662, 663, 664], "acces": 595, "internet": 595, "wcm": 595, "2021_wind": 595, "read_spc_report": 595, "start_tim": 595, "end_tim": 595, "hazard": 595, "timezon": 595, "gmt": 595, "torn": 595, "df": 595, "datafram": 595, "conver": 595, "to_datetim": [595, 596, 599], "set_index": 595, "inplac": 595, "ambigu": 595, "nat": 595, "nonexist": 595, "shift_forward": 595, "tz_convert": 595, "timedelta": [595, 599], "wind_report": 595, "tornado_report": 595, "hail_report": 595, "om": 595, "yr": 595, "mo": 595, "st": 595, "stf": 595, "stn": 595, "elon": 595, "wid": 595, "sn": 595, "sg": 595, "f1": 595, "f2": 595, "f3": 595, "f4": 595, "657521": 595, "tx": 595, "7500": [595, 658], "331": [595, 602], "657522": 595, "4300": 595, "657523": 595, "0500": 595, "167": 595, "657524": 595, "0200": 595, "657525": 595, "1595": 595, "663777": 595, "sc": 595, "0100": [595, 600], "663778": 595, "663779": 595, "2200": 595, "663780": 595, "1900": 595, "49": [595, 596], "663781": 595, "1100": [595, 602], "6261": 595, "gc_latlon_bear_dist": 595, "lat1": 595, "lon1": 595, "decim": 595, "lat2": 595, "lon2": 595, "lat1r": 595, "deg2rad": 595, "lon1r": 595, "bearr": 595, "lat2r": 595, "lon2r": 595, "rad2deg": [595, 648], "add_scale_lin": 595, "fontsiz": [595, 596, 597, 600, 608, 609, 623, 625, 634, 635], "fontweight": 595, "zoom": [595, 596], "black": [595, 602, 624, 642, 643], "frac_lat": 595, "frac_lon": 595, "e1": 595, "get_ext": 595, "center_lon": 595, "center_lat": 595, "shorten": 595, "hash": [595, 605], "lat1a": 595, "lon1a": 595, "lat1b": 595, "lon1b": 595, "lat2a": 595, "lon2a": 595, "lat2b": 595, "lon2b": 595, "horizontalalign": 595, "verticalalign": 595, "enumer": 595, "iter_success": 595, "mdm": 595, "this_tim": 595, "open_pyart": 595, "map_panel_ax": [595, 638], "x_cut_panel_ax": [595, 638], "y_cut_panel_ax": [595, 638], "masking_data_with_gatefilt": [595, 602], "ax1": [595, 596, 600, 608, 609, 624, 638, 639, 642, 645, 646, 652], "add_ax": [595, 638], "recogniz": 595, "with_scal": 595, "500k": 595, "grai": [595, 597, 599, 625, 626, 642], "plot_colorbar": 595, "pad": 595, "plot_range_r": [595, 602, 618, 628, 629, 631], "dash": [595, 597, 635], "set_xtick": [595, 642, 659, 662], "arang": [595, 600, 603, 617, 631, 634, 635, 642, 643, 647, 648, 667], "set_ytick": [595, 642, 659, 662], "wind_reports_now": 595, "slon": 595, "tolist": 595, "slat": 595, "facecolor": [595, 597, 599], "deepskyblu": 595, "tornado_reports_now": 595, "tab": [595, 605, 624], "red": [595, 634, 635], "hail_reports_now": 595, "lawngreen": 595, "legend": [595, 599, 600, 624], "savefig": [595, 597, 599], "_dz_rpt": 595, "bbox_inch": 595, "tight": 595, "white": [595, 597, 634], "mp4": 595, "map_imag": 595, "gif_titl": 595, "delet": [595, 602, 603, 625, 667], "gif": 595, "get_writ": 595, "fp": 595, "writer": [595, 602], "imread": 595, "append_data": 595, "ffmpeg_writ": 595, "divis": [595, 602], "macro_block_s": 595, "resiz": 595, "1930": 595, "1766": 595, "1936": 595, "1776": 595, "video": 595, "codec": 595, "player": 595, "incompat": [595, 602, 606], "ipython": [595, 599, 601, 669], "browser": 595, "event": [595, 600, 645, 646], "overview": [595, 598, 605], "retrospect": 595, "ecosystem": 596, "By": [596, 597, 600, 606], "learn": [596, 656], "portal": [596, 597], "march": [596, 599, 613], "shown": [596, 623], "offici": [596, 603, 667], "probe": 596, "millimet": 596, "ghz": 596, "purpos": [596, 597, 645, 646], "nearli": [596, 634], "bokeh": 596, "formatt": 596, "datetimetickformatt": 596, "hv": 596, "guckazrcfrgem1": 596, "20220314": 596, "000003": 596, "0x7f7dbd517400": 596, "linear_depolarization_ratio": 596, "mean_doppler_velocity_crosspolar_v": 596, "reflectivity_crosspolar_v": 596, "signal_to_noise_ratio_copolar_h": [596, 600], "signal_to_noise_ratio_crosspolar_v": 596, "spectral_width": 596, "spectral_width_crosspolar_v": 596, "vertical": 596, "awai": [596, 597], "pyart_bal": [596, 597, 600, 617, 637, 652, 660], "substanti": 596, "211": [596, 639], "ax2": [596, 600, 608, 609, 617, 624, 638, 639, 642, 644, 645, 646, 652, 660], "212": [596, 639], "pangeo": 596, "1736": 596, "600": [596, 658], "r_calib": 596, "14t00": 596, "489e": 596, "806e": 596, "107": 596, "886e": 596, "command_lin": 596, "kazrcfr_ingest": 596, "guc": 596, "m1": 596, "process_vers": 596, "kazrcfr": 596, "el7": 596, "dod_vers": 596, "kazrcfrg": 596, "input_sourc": 596, "guckazrm1": 596, "kazr_moments_": 596, "site_id": 596, "software_vers": 596, "wed": 596, "mar": 596, "leachman": 596, "1498936": 596, "histori": [596, 664], "dsmgr": 596, "procnode2": 596, "1736rang": 596, "600frequenc": 596, "1sweep": 596, "1r_calib": 596, "1coordin": 596, "453818": 596, "startstandard_nam": 596, "timearrai": 596, "453818000": 596, "527426000": 596, "601027000": 596, "002026000": 596, "075634000": 596, "149219000": 596, "float323": 596, "10long_nam": 596, "transmit": [596, 660], "frequencyunit": 596, "hzstandard_nam": 596, "radiation_frequencymeta_group": 596, "instrument_parametersarrai": 596, "float32100": 596, "130": 596, "803e": 596, "04long_nam": 596, "volumeunit": 596, "mmeters_between_g": 596, "979246meters_to_center_of_first_g": 596, "679245spacing_is_const": 596, "truestandard_nam": 596, "projection_range_coordinateaxi": 596, "radial_range_coordinatearrai": 596, "679245": 596, "6585": 596, "160": [596, 648, 662], "63774": 596, "17998": 596, "18028": 596, "268": 596, "18058": 596, "248": 596, "northunit": 596, "degreestandard_nam": 596, "sensor_to_target_azimuth_angleaxi": 596, "radial_azimuth_coordinatearrai": 596, "planeunit": 596, "sensor_to_target_elevation_angleaxi": 596, "radial_elevation_coordinatearrai": 596, "00long_nam": 596, "epochancillary_vari": 596, "time_offsetarrai": 596, "base_timeancillary_vari": 596, "base_timearrai": 596, "unspecifiedunit": 596, "dbstandard_nam": 596, "radar_linear_depolarization_ratiounpacking_detail": 596, "unpack": 596, "pack": [596, 602], "1041600": 596, "motion": 596, "instrumentunit": 596, "sstandard_nam": 596, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 596, "crosspolar": 596, "channelunit": 596, "factorunit": 596, "dbzstandard_nam": 596, "equivalent_reflectivity_factorunpacking_detail": 596, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 596, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 596, "widthunit": 596, "radar_doppler_spectrum_widthunpacking_detail": 596, "angleunit": 596, "degreearrai": 596, "n_sampl": 596, "momentsunit": 596, "1meta_group": 596, "instrument_parametersstandard_nam": 596, "number_of_samples_used_to_compute_momentsarrai": 596, "noise_figur": 596, "methodunit": 596, "dbarrai": 596, "67": [596, 645, 646], "8043": 596, "unambigu": [596, 664], "velocityunit": 596, "smeta_group": 596, "968252": 596, "repetit": 596, "timeunit": 596, "sarrai": 596, "00027": 596, "transmitt": 596, "r_calib_radar_constant_copol": 596, "copolarunit": 596, "dbmeta_group": 596, "radar_calibrationstandard_nam": 596, "calibrated_radar_constant_h_channelarrai": 596, "996191": 596, "r_calib_radar_constant_crosspol": 596, "crosspolarunit": 596, "405288": 596, "r_calib_two_way_radome_loss_h": 596, "radom": 596, "loss": 596, "radar_calibration_two_way_radome_loss_h_channelarrai": 596, "half": 596, "radar_measured_sky_noise_h": 596, "sky": 596, "dbmarrai": 596, "69": [596, 631], "03703": 596, "035995": 596, "0373": 596, "03814": 596, "05106": 596, "05984": 596, "radar_measured_sky_noise_v": 596, "radar_measured_transmit_pow": 596, "powerunit": 596, "dbmmeta_group": 596, "radar_transmit_powerarrai": 596, "143": [596, 648], "receiver_gain_copol": 596, "copolunit": 596, "sweepunit": 596, "1735": 596, "s22": 596, "basedunit": 596, "unambiguous_rang": [596, 664], "rangeunit": 596, "mmeta_group": 596, "unambiguous_rangearrai": 596, "40479": 596, "477": [596, 602], "degree_nstandard_nam": 596, "latitudevalid_min": 596, "0valid_max": 596, "0arrai": 596, "956158": 596, "degree_estandard_nam": 596, "longitudevalid_min": 596, "106": 596, "987854": 596, "altitudeunit": 596, "mstandard_nam": 596, "altitudearrai": 596, "2886": 596, "levelunit": 596, "heightarrai": 596, "m1convent": 596, "radar_calibrationprocess_vers": 596, "el7dod_vers": 596, "1input_sourc": 596, "kazr_moments_20220314": 596, "000005": 596, "datsite_id": 596, "gucplatform_id": 596, "kazrcfrgefacility_id": 596, "m1data_level": 596, "a1location_descript": 596, "laboratori": 596, "sail": 596, "mt": 596, "crest": 596, "butt": [596, 597], "coloradodatastream": 596, "a1antenna_altitud": 596, "mantenna_diamet": 596, "mcomment": 596, "digital_rx_dec": 596, "24dualpol": 596, "0fft_len": 596, "512filter_length": 596, "67institut": 596, "radiat": [596, 597, 599, 600, 603, 656, 658, 659, 660, 662, 663, 664, 667], "research": [596, 597, 599, 603, 656, 658, 659, 660, 662, 663, 664, 667], "facilityn_g": 596, "1024num_spectral_averag": 596, "15pulse_compression_ratio": 596, "3range_gate_spacing_m": 596, "979246range_offset_ch1": 596, "mrange_offset_ch2": 596, "mscan_mod": 596, "pointingscan_nam": 596, "vptsoftware_vers": 596, "leachmantitl": 596, "momentsdoi": 596, "1498936histori": 596, "isel": 596, "coupl": [596, 600], "extra": [596, 599, 602], "won": 596, "600rang": 596, "600coordin": 596, "395940000": 596, "469427000": 596, "542946000": 596, "360000": 596, "quadmesh": [596, 597], "0x7f7dad654f10": 596, "meant": [596, 598], "popular": [596, 599], "jump": 596, "bar": 596, "hover": 596, "inspect": 596, "clabel": [596, 634, 635], "xformatt": 596, "ref_plot": 596, "7000": [596, 662], "platform_id": 596, "location_descript": 596, "xtick": [596, 659, 662], "ytick": [596, 659, 662], "vel_plot": 596, "prepar": [596, 597, 599, 600, 603, 658, 659, 660, 662, 663, 664, 667], "plot1": 596, "plot2": 596, "datashad": 596, "lazili": 596, "coars": 596, "intial": 596, "unfortun": 596, "ref_plot_rast": 596, "param": [596, 602], "dynamic_oper": 596, "outofboundsdatetim": 596, "nanosecond": 596, "54168": 596, "invok": 596, "x_rang": 596, "13t23": 596, "417014000": 596, "579705000": 596, "y_rang": 596, "traceback": 596, "recent": [596, 602, 669], "mgrover": [596, 599, 600, 613, 617, 623, 624, 629, 637, 643, 644, 652, 653, 654], "277": [596, 602], "get_plot_fram": 596, "map_obj": 596, "1344": 596, "val": 596, "_execute_callback": 596, "tuple_kei": 596, "retval": 596, "callback": 596, "arg": 596, "708": 596, "__call__": 596, "ret": 596, "__init__": [596, 603, 614, 667], "1043": [596, 602], "obj": 596, "resolv": [596, 602], "1032": [596, 602], "1044": 596, "1036": 596, "_process": 596, "1018": [596, 602], "process_el": 596, "194": 596, "_appli": 596, "141": 596, "1514": 596, "predic": [596, 600], "207": 596, "pipelined_fn": 596, "method_fn": 596, "1223": 596, "super": [596, 628, 659, 662], "710": [596, 602], "map_fn": 596, "214": 596, "1133": [596, 602], "astyp": 596, "int64": 596, "1497": [596, 602], "apply_ufunc": 596, "1159": 596, "apply_dataarray_vfunc": 596, "286": [596, 602], "result_var": 596, "data_var": 596, "750": [596, 602], "apply_variable_ufunc": 596, "as_compatible_data": 596, "234": 596, "_possibly_convert_object": 596, "178": 596, "asarrai": 596, "ravel": 596, "reshap": 596, "sanitize_arrai": 596, "567": [596, 602], "subarr": 596, "_try_cast": 596, "raise_cast_failur": 596, "726": [596, 602], "sanitize_to_nanosecond": 596, "arr": 596, "cast": 596, "1717": 596, "ensure_datetime64n": 596, "_lib": 596, "tslib": 596, "pyx": [596, 602], "257": 596, "np_datetim": 596, "120": [596, 658], "check_dts_bound": 596, "saw": 596, "few": [596, 602, 605, 669], "pro": 596, "con": 596, "thing": [596, 603, 667], "clear": [596, 600], "push": [596, 602, 603, 605, 667], "share": 596, "ran": [596, 603, 667], "shareabl": 596, "workflow": [596, 599, 602], "mb": [596, 610, 615, 621, 640, 649, 650, 655, 665], "difficult": [596, 617], "jupyterbook": 596, "jupyt": [596, 599, 602, 608, 609, 611, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 669], "campaign": [596, 600, 646], "twitter": 597, "nou": 597, "dryglick": 597, "notic": [597, 600, 602, 617, 625], "odd": 597, "directli": [597, 623], "grei": 597, "darker": 597, "moir\u00e9": 597, "ryan": 597, "dopplershift": [597, 602], "turbul": 597, "forecast": 597, "ncei": 597, "search": [597, 656, 666], "aw": [597, 599, 602, 611, 612, 614, 615, 665], "mention": [597, 602, 603, 656, 667, 669], "he": 597, "n0u": [597, 613], "elgin": 597, "panhandl": 597, "kevx": 597, "1458": 597, "octob": 597, "landfal": 597, "gulf": 597, "lookl": 597, "webpag": 597, "cart": 597, "sent": 597, "email": [597, 600, 602], "websit": 597, "ftp": 597, "unzip": [597, 599], "kmob_sdus54_n0uevx_201810101458": 597, "partli": [597, 599, 658, 659, 660, 662, 663, 664], "facil": [597, 599, 600, 603, 656, 658, 659, 660, 662, 663, 664, 667], "cite": [597, 599, 600, 602, 658, 659, 660, 662, 663, 664], "jj": [597, 599, 658, 659, 660, 662, 663, 664], "sm": [597, 599, 658, 659, 660, 662, 663, 664], "colli": [597, 599, 603, 656, 658, 659, 660, 662, 663, 664, 667], "jor": [597, 599, 603, 656, 658, 659, 660, 662, 663, 664, 667], "5334": [597, 599, 603, 656, 658, 659, 660, 662, 663, 664, 667], "119": [597, 599, 603, 614, 656, 658, 659, 660, 662, 663, 664, 667], "read_level3": 597, "dark": 597, "dark_background": 597, "okai": 597, "88": [597, 599, 643], "83": 597, "31msignatur": [597, 600], "0m": [597, 599, 600], "0mdisplai": 597, "34m": [597, 600], "0mplot_ppi_map": 597, "0mfield": 597, "0msweep": 597, "36m0": 597, "0mmask_tupl": 597, "32mnone": [597, 600], "0mvmin": 597, "0mvmax": 597, "0mcmap": 597, "0mnorm": 597, "0mmask_outsid": 597, "32mfals": 597, "0mtitl": 597, "0mtitle_flag": 597, "32mtrue": 597, "0mcolorbar_flag": 597, "0mcolorbar_label": 597, "0max": 597, "0mfig": 597, "0mlat_lin": 597, "0mlon_lin": 597, "0mproject": 597, "0mmin_lon": 597, "0mmax_lon": 597, "0mmin_lat": 597, "0mmax_lat": 597, "0mwidth": 597, "0mheight": 597, "0mlon_0": 597, "0mlat_0": 597, "0mresolut": 597, "0mshapefil": 597, "0mshapefile_kwarg": 597, "0medg": 597, "0mgatefilt": 597, "0mfilter_transit": 597, "0membelish": 597, "0mraster": 597, "0mtick": 597, "0mticklab": 597, "0malpha": 597, "31msourc": 597, "32mdef": 597, "0mself": 597, "embelish": [597, 602], "31m": 597, "0mparse_vmin_vmax": 597, "0m_radar": 597, "0mparse_cmap": 597, "32mif": 597, "32mi": 597, "0mnp": 597, "0marang": 597, "36m30": 597, "36m46": 597, "36m1": 597, "36m110": 597, "36m75": 597, "0mloc": 597, "0mdata": 597, "0m_get_data": 597, "0mx": 597, "0my": 597, "0m_get_x_i": 597, "0mma": 597, "0mmasked_outsid": 597, "0mplt": 597, "0mgcf": 597, "32mnot": 597, "0mhasattr": 597, "32mels": 597, "0mcartopi": 597, "0mcr": 597, "0mlambertconform": 597, "0mcentral_longitud": 597, "0mcentral_latitud": 597, "0mwarn": 597, "overrid": [597, 635], "lambert": [597, 602], "0muserwarn": 597, "0mset_ext": 597, "0mplatecarre": 597, "32melif": 597, "36m2": 597, "0mgrid_project": 597, "0mpm": 597, "0mpcolormesh": 597, "36m1000": 597, "0mtransform": 597, "graphic": 597, "0mset_raster": 597, "admin": [597, 603, 667], "0mstates_provinc": 597, "0mfeatur": 597, "0mnaturalearthfeatur": 597, "0mcategori": 597, "cultur": 597, "0mname": 597, "admin_1_states_provinces_lin": 597, "0mscale": 597, "0mfacecolor": 597, "0mcoastlin": 597, "0madd_featur": 597, "0medgecolor": 597, "pose": 597, "difficulti": 597, "spectif": 597, "32min": 597, "0mmercat": 597, "0mgl": 597, "0mgridlin": 597, "0mxloc": 597, "0myloc": 597, "0mdraw_label": 597, "0mxlabels_top": 597, "0mylabels_right": 597, "0misinst": 597, "0mfigur": 597, "0mcanva": 597, "0mdraw": 597, "maker": 597, "0mxaxi": 597, "0mset_major_formatt": 597, "0mmpl": 597, "0mlongitude_formatt": 597, "0myaxi": 597, "0mlatitude_formatt": 597, "0m_lambert_gridlin": 597, "0mlambert_xtick": 597, "0mlambert_ytick": 597, "32mfrom": 597, "0mio": 597, "0mshaperead": 597, "32mimport": 597, "0mreader": 597, "0madd_geometri": 597, "0mgeometri": 597, "0m_set_titl": 597, "0mplot": 597, "0mappend": 597, "0mplot_var": 597, "0mplot_colorbar": 597, "0mmappabl": 597, "0mlabel": 597, "32mreturn": 597, "31mfile": [597, 600], "git_repo": 597, "31mtype": [597, 600], "fashion": 597, "0marg": 597, "0mshade": 597, "0mantialias": 597, "0mkwarg": 597, "31mdocstr": [597, 600], "pseudocolor": 597, "signatur": [597, 599], "quadrilater": 597, "pcolor": 597, "prefer": [597, 602, 666], "ref": [597, 614, 638, 646], "shade": [597, 602], "flat": [597, 613], "gouraud": 597, "cari": 597, "expand": 597, "rc": 597, "regist": [597, 600], "canon": 597, "chosen": 597, "patch": [597, 634], "force_edgecolor": 597, "singular": 597, "opaqu": 597, "solid": [597, 635], "quad": 597, "halfwai": 597, "galleri": [597, 602, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 656, 665], "images_contours_and_field": 597, "pcolormesh_grid": 597, "snap": 597, "mesh": 597, "misc": [597, 602], "rasterization_demo": 597, "constructor": 597, "agg_filt": 597, "anim": 597, "antialias": [597, 634, 635], "aa": 597, "capstyl": 597, "clip_box": 597, "bbox": 597, "clip_on": 597, "clip_path": 597, "rgba": 597, "ec": 597, "fc": 597, "gid": 597, "hatch": 597, "in_layout": 597, "joinstyl": 597, "miter": 597, "bevel": 597, "thereof": 597, "offset_transform": 597, "path_effect": 597, "abstractpatheffect": 597, "picker": 597, "pickradiu": 597, "sketch_param": 597, "random": [597, 600], "zorder": 597, "imshow": [597, 602, 618, 619, 620, 623], "_ax": 597, "nrow": [597, 623], "ncolumn": 597, "_differ": 597, "li": 597, "handl": [597, 602], "polycollect": 597, "thu": [597, 605], "almost": 597, "slight": 597, "polygon": 597, "irrespect": 597, "One": [597, 603, 658, 664, 667, 669], "masked_arrai": [597, 658, 664], "1e": [597, 658, 664], "next": [597, 599, 605, 613, 642], "get_gate_lat_lon_alt": [597, 600, 602], "565": [597, 602], "562763": 597, "560526": 597, "888458": 597, "886227": 597, "883991": 597, "562765": 597, "560532": 597, "892834": 597, "890606": 597, "888374": 597, "562769": 597, "56054": 597, "898003": 597, "89578": 597, "893553": 597, "562756": 597, "560509": 597, "880096": 597, "877857": 597, "875618": 597, "560513": 597, "881853": 597, "879616": 597, "877377": 597, "56276": 597, "560518": 597, "884874": 597, "88264": 597, "880404": 597, "92199": 597, "92222": 597, "92245": 597, "186806": 597, "18703": 597, "18723": 597, "922264": 597, "92254": 597, "2396": 597, "23986": 597, "24012": 597, "92231": 597, "92263": 597, "29231": 597, "29262": 597, "29292": 597, "92208": 597, "92218": 597, "02802": 597, "02811": 597, "0282": 597, "92212": 597, "92226": 597, "07571": 597, "07583": 597, "07595": 597, "922356": 597, "133934": 597, "1341": [597, 602], "13428": 597, "setup": [597, 600, 602, 613, 617, 623, 624, 629, 643, 656, 666], "geoaxi": 597, "border": [597, 634], "cbar": [597, 625], "tick_param": 597, "labels": 597, "set_label": [597, 625], "gl": [597, 599, 625], "draw_label": [597, 599, 625], "xlabel_styl": [597, 625], "ylabel_styl": [597, 625], "kevz_velocity_2018_10_10_1458": 597, "specifici": 597, "pull": [597, 602, 603, 604, 605, 614, 667], "pr": [597, 605], "importantli": 597, "api": [597, 602, 656], "abil": [597, 602, 656, 669], "arguement": 597, "explor": [597, 599], "appreci": [597, 656], "hello": 598, "welcom": 598, "narr": 598, "feedback": 598, "feel": 598, "know": [598, 600, 669], "fridai": 599, "midwest": 599, "142": 599, "368": [599, 602], "excess": 599, "65": [599, 642], "knot": 599, "mph": 599, "184": 599, "hail": [599, 602, 647], "bing": 599, "inch": 599, "diamet": 599, "ifram": 599, "spc": [599, 602], "climo": 599, "gmf": 599, "php": 599, "rpt": 599, "230331_rpts_filter": 599, "walworth": 599, "counti": 599, "southeastern": [599, 617], "geneva": 599, "tourist": 599, "especi": [599, 600, 618], "live": 599, "chicagoland": 599, "confirm": [599, 613, 658], "assembl": 599, "summari": [599, 613], "grlevel": 599, "encourag": 599, "peopl": 599, "cookbook": [599, 602, 656, 668], "moor": 599, "focu": 599, "varieti": [599, 600, 603, 611, 612, 646, 667], "forg": [599, 602, 603, 656, 666, 667, 669], "arm_pyart": [599, 603, 605, 656, 666, 667, 669], "shaperead": 599, "shpreader": 599, "shapelyfeatur": 599, "miniforge3": 599, "tqdm": 599, "tqdmwarn": 599, "iprogress": 599, "ipywidget": 599, "readthedoc": 599, "stabl": 599, "user_instal": 599, "autonotebook": 599, "notebook_tqdm": 599, "credit": 599, "censu": 599, "mac": [599, 602, 656], "curl": 599, "linux": [599, 602, 603, 656, 667, 669], "wget": 599, "www2": 599, "geo": [599, 602], "tiger": 599, "tiger2016": 599, "primaryroad": 599, "tl_2016_us_primaryroad": 599, "zip": [599, 611, 614, 618, 623, 656], "xferd": 599, "dload": 599, "upload": [599, 602], "spent": 599, "7m": 599, "cpg": 599, "inflat": 599, "dbf": 599, "prj": 599, "shp": 599, "ea": 599, "iso": 599, "shx": 599, "reader": [599, 601, 602, 614], "geom": 599, "loop": [599, 602, 648], "rec": 599, "fullnam": 599, "interstate_featur": 599, "darkblu": 599, "clean": [599, 602, 642, 652], "filesystem": 599, "month": [599, 613, 614], "kmkx20230401_010517_v06": 599, "kmkx20230401_011057_v06": 599, "kmkx20230401_011638_v06": 599, "kmkx20230401_012219_v06": 599, "kmkx20230401_012759_v06": 599, "kmkx20230401_013341_v06": 599, "kmkx20230401_013922_v06": 599, "kmkx20230401_014502_v06": 599, "kmkx20230401_015042_v06": 599, "kmkx20230401_015623_v06": 599, "kmkx20230401_015928_v06": 599, "plot_configur": 599, "twilight_shift": [599, 652], "cross_correlation_ratio": [599, 613, 626, 627, 645, 646, 663, 664], "plot_radar_ppi": 599, "left_field": 599, "right_field": 599, "plot_config": 599, "precip": 599, "vel_dealia": 599, "dealias_region_bas": [599, 602, 609, 642, 652, 660], "add_field": [599, 603, 608, 609, 642, 645, 646, 647, 652, 659, 660, 667], "corrected_veloc": [599, 609, 642, 648, 652, 660, 663], "plot_numb": 599, "config": [599, 602, 658, 669], "121": [599, 600, 613, 617, 624, 644, 652], "generate_titl": 599, "time_step": 599, "get_start_end": 599, "central_tim": 599, "astimezon": 599, "new_titl": 599, "cdt": 599, "sharon": 599, "Near": 599, "delavan": 599, "6105": 599, "60666": 599, "lightgrei": 599, "lavenderblush": 599, "ppi_velocity_reflectivity_": 599, "flexibl": [599, 602], "hope": 599, "visual": [600, 602, 623, 626, 634, 643, 646, 652], "notabl": [600, 601], "insight": [600, 601], "analyz": [600, 603, 656, 663, 667], "decid": 600, "quicklook": 600, "januari": [600, 603, 656, 667], "wettest": 600, "la": 600, "jolla": 600, "california": 600, "tarfil": 600, "download_arm_data": 600, "0mact": 600, "0mdiscoveri": 600, "0mdownload_arm_data": 600, "0musernam": 600, "0mtoken": 600, "0mdatastream": 600, "0mstartdat": 600, "0menddat": 600, "0mtime": 600, "0moutput": 600, "webservic": 600, "usernam": [600, 666], "log": [600, 602, 605], "adc": [600, 602], "datastream": 600, "acquir": 600, "startdat": 600, "yyyi": [600, 601], "dd": [600, 601], "yyyymmdd": 600, "thh": 600, "ss": 600, "15t12": 600, "enddat": 600, "15t13": 600, "hhmmss": 600, "programmat": 600, "rest": 600, "savedata": 600, "cron": 600, "job": 600, "workspac": 600, "elimin": [600, 660, 662], "disk": 600, "hpss": 600, "armliv": 600, "livedata": 600, "giansiracusa": 600, "giansiracumt": 600, "ornl": 600, "sgpmete13": 600, "jan": 600, "2017": 600, "xxxxxxxxxxxxxxxx": 600, "download_data": 600, "mambaforg": 600, "epckasacrcfrs2": 600, "21t01": 600, "20240121": 600, "010020": 600, "010436": 600, "011116": 600, "012914": 600, "012503": 600, "011845": 600, "012257": 600, "010757": 600, "010118": 600, "011434": 600, "012708": 600, "011640": 600, "012051": 600, "bharadwaj": 600, "hardin": 600, "isom": 600, "johnson": 600, "lindenmai": 600, "matthew": 600, "nelson": 600, "feng": 600, "deng": 600, "rocqu": 600, "castro": 600, "wendler": 600, "ka": 600, "kasacrcfr": 600, "1469302": 600, "trick": 600, "ones": [600, 623], "798": 600, "runtimewarn": 600, "encount": 600, "intersect": 600, "whic": 600, "ppi_fil": 600, "rhi_fil": 600, "elif": 600, "mainli": 600, "threshold_valu": 600, "suptitl": [600, 608, 609, 618, 637, 648], "tight_layout": [600, 618, 639, 642], "too": [600, 602], "And": [600, 602], "remaind": 600, "fromnumer": [600, 608], "784": [600, 602], "maskedarrai": [600, 602, 608], "kth": [600, 608], "idea": [600, 658, 660], "0115": 600, "rhi_radar": 600, "ppi_radar": 600, "achiv": 600, "past": [601, 603, 667], "tag": [601, 602], "kernelspec": 601, "display_nam": 601, "ipykernel": 601, "languag": [601, 603, 656, 667], "language_info": 601, "codemirror_mod": 601, "file_extens": 601, "mimetyp": 601, "nbconvert_export": 601, "pygments_lex": 601, "ipython3": 601, "insert": 601, "nbformat": 601, "nbformat_minor": 601, "care": 601, "isilb": 602, "sinaram": 602, "1532": 602, "zssherman": 602, "get_azimuth": 602, "xradar": [602, 655, 665], "1547": 602, "mgrover1": 602, "1544": 602, "1542": 602, "1541": 602, "bridg": 602, "1537": 602, "columnsect": [602, 643], "1529": 602, "failur": 602, "wheel": 602, "1526": 602, "dep": 602, "bump": 602, "action": [602, 603, 605, 667], "group": [602, 603, 667], "1539": 602, "dependabot": 602, "epcap": 602, "1534": 602, "1530": 602, "1528": 602, "zdist_factor": 602, "1509": 602, "1524": 602, "1519": 602, "codeql": 602, "1515": 602, "pin": [602, 605], "ci": [602, 604, 605], "1507": 602, "xdrlib": 602, "1525": 602, "1518": 602, "1492": 602, "kmuehlbauer": 602, "rtanamachi": 602, "1504": 602, "1487": 602, "1478": 602, "jrobrien91": 602, "1503": 602, "1501": 602, "outdat": 602, "ipynb": [602, 608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654], "1490": 602, "1484": 602, "1482": 602, "1474": 602, "commit": [602, 603, 605, 667], "1506": 602, "1475": 602, "rainbow_wrl": 602, "happyxiaoanan": 602, "reclass": 602, "1495": 602, "rbhupi": 602, "1493": 602, "minor": [602, 618, 659, 662], "get_elev": 602, "1489": 602, "rescal": [602, 645, 646], "1486": 602, "1479": 602, "rcjackson": 602, "app": 602, "cmweather": 602, "1452": 602, "accessor": 602, "1457": 602, "syedhamidali": 602, "1456": 602, "typo": 602, "1471": 602, "isinst": 602, "1448": 602, "1472": 602, "1470": 602, "1469": 602, "instruct": [602, 656, 668], "1462": 602, "1473": 602, "1468": 602, "1450": 602, "scolli": 602, "dim": 602, "load_kazr": 602, "1446": 602, "1447": 602, "arm_vpt": 602, "1445": 602, "lint": [602, 603, 667], "1444": 602, "mnt": 602, "1440": [602, 658], "dedic": 602, "1442": 602, "1443": 602, "1437": 602, "algorith": 602, "1434": 602, "wolfidan": 602, "1430": 602, "1433": 602, "1428": 602, "neutrinocero": 602, "odim": 602, "1425": 602, "gatemapp": [602, 611, 616, 621, 665], "1418": 602, "hook": [602, 603, 667], "1419": 602, "sphinx": [602, 608, 609, 611, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654], "theme": 602, "1427": 602, "feet": 602, "1423": 602, "leak": 602, "mapper": 602, "1421": 602, "vforcel": 602, "1417": 602, "steepatticstair": 602, "1407": 602, "readm": [602, 666], "1397": 602, "1416": 602, "1413": 602, "1411": 602, "1409": 602, "1401": 602, "joshua": 602, "hampton": 602, "del": [602, 625], "old": 602, "conda_recip": 602, "1399": 602, "ruff": 602, "1388": 602, "wrong": 602, "1390": 602, "1385": 602, "1383": 602, "pkg_resourc": 602, "runtim": 602, "1394": 602, "mail": [602, 603, 656, 667], "1393": 602, "codeown": 602, "1391": 602, "1384": 602, "1382": 602, "1379": 602, "mismatch": 602, "1381": 602, "wrap": 602, "get_gate_area": 602, "1375": 602, "1380": [602, 658], "1372": 602, "exec_modul": 602, "load_modul": 602, "1369": 602, "badg": 602, "1363": 602, "read_sigmet": 602, "1351": 602, "zouihao": 602, "unus": 602, "1343": 602, "1342": 602, "range_step": 602, "1338": 602, "max_num_g": 602, "1337": 602, "1327": 602, "revert": 602, "setuptool": 602, "unwant": 602, "cleanup": 602, "1357": 602, "1355": 602, "1339": 602, "1361": 602, "1335": 602, "manipul": [602, 625, 657], "1300": 602, "kylejgillett": 602, "melovato": 602, "tsbiscaro": 602, "1324": 602, "1319": 602, "1314": 602, "add_filt": 602, "1326": 602, "1320": [602, 658], "1325": 602, "jthielen": 602, "1303": 602, "jjhelmu": [602, 669], "wx4stg": 602, "antiviru": 602, "similiar": 602, "1307": 602, "1299": 602, "throw": 602, "convolve1d": 602, "1313": 602, "1306": 602, "1317": 602, "1311": 602, "jfigui": 602, "citat": [602, 603, 626, 656, 667], "1304": 602, "gamaanderson": 602, "hhuangwx": 602, "josephhardine": 602, "meteoswiss": [602, 647, 648], "mdr": 602, "ngui": 602, "tjlang": 602, "1294": 602, "1290": 602, "1285": 602, "1279": 602, "backward": [602, 606], "1278": 602, "1284": 602, "tracer": 602, "1296": 602, "1292": 602, "1287": 602, "cibuildwheel": 602, "1267": 602, "ocefpaf": 602, "1275": 602, "1276": 602, "1265": 602, "dcedgren": 602, "jilling": 602, "zhaobudaola": 602, "1263": 602, "1235": 602, "1215": 602, "1261": 602, "1241": 602, "1240": 602, "gatefi": 602, "1226": 602, "join_radar": 602, "repititon": 602, "iparam": 602, "1218": 602, "1216": 602, "trmm_rsl": 602, "1239": 602, "cftime": 602, "1211": 602, "incorrect": [602, 606, 660], "1231": 602, "ci_setup": 602, "1213": 602, "1264": 602, "basic": [602, 656, 657, 659], "1251": 602, "1234": 602, "1228": 602, "subset_radar": 602, "radar_util": 602, "1227": 602, "pyrad": 602, "1220": 602, "tst": 602, "median": 602, "1214": 602, "srbrodzik": 602, "1208": 602, "1204": 602, "1201": [602, 613], "1198": 602, "1196": 602, "catch": 602, "1191": 602, "1207": 602, "pypi": 602, "1206": 602, "unitest": 602, "1200": [602, 658], "1199": 602, "echoclass": 602, "1197": 602, "convv": 602, "awhil": 602, "back": 602, "1195": 602, "1190": 602, "dp": 602, "1184": 602, "solver": [602, 656], "1183": 602, "1176": 602, "1187": 602, "revis": 602, "270": [602, 603, 639, 667], "1185": 602, "1181": 602, "1178": 602, "1171": 602, "1180": 602, "1177": 602, "1173": 602, "sobitp59": 602, "rogu": 602, "1170": 602, "1160": 602, "1152": 602, "1151": 602, "mispel": 602, "1158": 602, "1148": 602, "1167": 602, "1154": 602, "unittest": 602, "1153": 602, "scm": [602, 603, 667], "1136": 602, "trigger": 602, "1126": 602, "1118": 602, "1115": 602, "maco": 602, "1147": 602, "prune": 602, "1143": 602, "1141": 602, "1140": [602, 658], "1139": 602, "1137": 602, "1131": 602, "1130": 602, "1129": 602, "1128": 602, "1127": 602, "1125": 602, "1124": 602, "1123": 602, "1120": 602, "1119": 602, "dpr": 602, "1116": 602, "postcard": 602, "1104": 602, "1103": 602, "1122": 602, "gridmapdisplai": [602, 611, 622, 624, 640, 645, 646, 653, 662, 665], "1099": 602, "quick": [602, 613], "1146": 602, "contribut": [602, 603, 667, 668], "1106": 602, "1117": 602, "1113": 602, "submodul": [602, 662], "1110": 602, "forgotten": 602, "1108": 602, "test_echo_class": 602, "1107": 602, "1101": 602, "1098": 602, "1097": 602, "1094": 602, "1080": [602, 658], "registri": 602, "1087": 602, "1096": 602, "1093": 602, "1090": 602, "1089": 602, "1088": 602, "1085": 602, "1084": 602, "analyt": 602, "1081": 602, "1079": 602, "1077": 602, "pmi": 602, "csp": 602, "ritvj": 602, "doesn": [602, 658], "mandat": 602, "1014": 602, "reallynicegui": 602, "hasattr": 602, "1034": 602, "overlap": [602, 625, 634], "mapdisplai": 602, "1029": 602, "azimuth_rhi_plot": 602, "1025": 602, "1019": 602, "rxm25": 602, "1075": 602, "1064": 602, "mute_radar": 602, "1033": 602, "1030": 602, "radxgrid": 602, "1027": 602, "1026": 602, "roadmap": 602, "repo": [602, 603, 667], "1059": 602, "sidebar": 602, "1074": 602, "datetime_util": 602, "1072": 602, "1071": 602, "pydata": 602, "1069": 602, "1068": 602, "1067": 602, "1066": 602, "1063": 602, "codecov": 602, "1061": 602, "1060": 602, "1058": 602, "1056": 602, "1055": 602, "1053": 602, "1051": 602, "1050": 602, "1048": 602, "branch": [602, 603, 605, 667, 669], "1040": 602, "1039": 602, "1038": 602, "1031": 602, "1024": 602, "1020": [602, 658], "humphreyscart": 602, "tkralph": 602, "1003": 602, "997": 602, "1007": 602, "1001": 602, "1010": 602, "travi": 602, "sty": [602, 603, 667], "pep8": [602, 603, 667], "1005": 602, "988": [602, 623, 640, 665], "quba1": 602, "984": 602, "tdwr": 602, "969": 602, "956": 602, "994": 602, "979": 602, "h5py": [602, 656], "978": 602, "june1st": 602, "switch": [602, 603, 667], "973": 602, "maint": [602, 603, 667], "966": 602, "983": 602, "amarouan": 602, "abdelhak": 602, "bmgxyz": 602, "address": 602, "962": 602, "mwilson14": 602, "963": 602, "nonetyp": 602, "regard": 602, "959": 602, "964": 602, "176": 602, "919": 602, "rda": 602, "903": 602, "add_gate_area": 602, "950": 602, "blotchi": 602, "947": 602, "946": 602, "944": 602, "694": 602, "938": [602, 655], "vlouf": 602, "934": 602, "925": 602, "924": 602, "917": 602, "appveyor": 602, "937": 602, "927": 602, "liter": 602, "said": 602, "949": 602, "948": 602, "929": 602, "926": 602, "920": 602, "915": 602, "911": 602, "grwise1": 602, "jsignel": 602, "rumpki": 602, "broke": 602, "913": 602, "msg29": 602, "909": 602, "907": 602, "framework": 602, "910": 602, "912": 602, "napoleon": 602, "902": 602, "rtd": 602, "893": 602, "892": 602, "odimh5": 602, "898": 602, "895": 602, "896": 602, "864": 602, "louiswick": 602, "hilderbrand": 602, "877": 602, "886": 602, "crash": 602, "878": 602, "891": 602, "zflamig": 602, "futur": [602, 603, 606, 667], "890": 602, "889": 602, "885": 602, "dstex": 602, "880": 602, "soon": 602, "879": 602, "plot_grid": [602, 624, 638, 645, 646, 653, 662], "to_xarrai": 602, "873": 602, "876": 602, "elementwis": 602, "anaconda": [602, 603, 605, 656, 666, 667], "faq": 602, "868": 602, "mvanlierwalq": 602, "848": 602, "grid_io": 602, "846": 602, "jhemedin": 602, "841": 602, "nbin": 602, "865": 602, "856": 602, "840": [602, 658], "caus": 602, "852": 602, "849": 602, "get_dataset": 602, "845": 602, "docstr": 602, "838": 602, "836": 602, "cheatsheet": 602, "fortran": 602, "bit": [602, 666], "environ": [602, 656, 666, 668], "contr": 602, "843": 602, "spell": 602, "835": 602, "read_d3r_gcpex_nc": 602, "842": 602, "eccc": 602, "837": 602, "taylbm": 602, "kenkeho": 602, "swnesbitt": 602, "827": 602, "822": 602, "806": 602, "804": 602, "800": [602, 642], "778": 602, "688": [602, 643], "incomplet": 602, "msg5": 602, "832": [602, 632, 640, 665], "820": [602, 608], "812": 602, "deal": 602, "809": 602, "contiuum": 602, "gh": 602, "795": 602, "explicit": 602, "py2": 602, "790": 602, "sh": 602, "kai": 602, "muehlbauer": 602, "789": 602, "777": 602, "indexerror": 602, "check_outli": 602, "776": 602, "juhi24": 602, "770": 602, "imp": 602, "newer": [602, 666], "675": 602, "824": 602, "minu": 602, "803": 602, "738": 602, "799": 602, "792": 602, "favor": 602, "791": 602, "786": 602, "itself": [602, 664], "inc": 602, "794": 602, "rst": 602, "preformat": 602, "779": 602, "eaxmpl": 602, "834": 602, "833": 602, "elsewher": 602, "831": 602, "828": 602, "821": 602, "pytest": [602, 603, 656, 666, 667], "818": 602, "atteun": 602, "817": 602, "simulated_veloc": [602, 663], "802": 602, "grab": [602, 637], "796": 602, "793": 602, "787": 602, "781": 602, "cvd": 602, "775": 602, "774": 602, "769": 602, "nl2": 602, "765": 602, "miaoneng": 602, "gewitterblitz": 602, "liliaow567": 602, "764": 602, "coveral": 602, "messsag": 602, "761": 602, "757": 602, "set_raster": 602, "748": 602, "754": 602, "755": 602, "recompil": 602, "758": 602, "ngoldbaum": 602, "reciev": 602, "752": 602, "gate_id": [602, 663], "749": 602, "746": 602, "744": [602, 609, 610, 665], "zxdawn": 602, "netcdftim": 602, "736": 602, "731": 602, "dot_product": 602, "729": 602, "test_rhi_elev": 602, "twice": [602, 646], "724": 602, "728": [602, 652, 655, 665], "727": 602, "nosetest": 602, "715": 602, "vradh": 602, "vradv": 602, "quantiti": 602, "739": 602, "es5nhc": 602, "735": 602, "wave100": 602, "734": 602, "733": 602, "730": 602, "723": 602, "comp": 602, "721": 602, "cameron": 602, "homey": 602, "716": 602, "cameronhomey": 602, "jamessong": 602, "winash12": 602, "687": 602, "csnardi": 602, "645": 602, "docbuild": 602, "709": 602, "mhpicel": 602, "705": 602, "fromstr": 602, "704": 602, "692": 602, "651": 602, "711": 602, "calculate_velocity_textur": [602, 652, 660], "retreiv": 602, "672": 602, "bucket": [602, 613], "673": 602, "653": 602, "638": 602, "635": 602, "frombuff": 602, "702": 602, "grid_mapp": 602, "707": 602, "706": 602, "goharkai": 602, "infinit": 602, "693": 602, "freemansw1": 602, "683": 602, "674": 602, "668": 602, "contact": 602, "land": 602, "667": [602, 626, 640, 658, 665], "665": 602, "662": 602, "661": 602, "attributeerror": 602, "656": 602, "oserror": 602, "650": 602, "overflowerror": 602, "648": 602, "happier": 602, "647": 602, "640": 602, "639": [602, 649], "634": 602, "620": 602, "itsjm": 602, "kirknorth": 602, "617": 602, "616": 602, "631": 602, "swap": 602, "el": 602, "plot_rai": 602, "618": 602, "_get_angl": 602, "613": [602, 610, 635, 640, 665], "607": 602, "linspac": [602, 603, 623, 626, 642, 645, 646, 658, 667], "603": 602, "627": 602, "623": 602, "596": 602, "595": 602, "632": 602, "630": 602, "625": 602, "tulipasilva": 602, "622": 602, "normbw": 602, "q": 602, "quit": [602, 656], "614": 602, "git": [602, 603, 656, 666, 667, 669], "611": 602, "608": 602, "mrugna": 602, "605": [602, 653, 654, 655, 665], "bld": 602, "kludg": 602, "604": 602, "acknowledg": [602, 656], "602": 602, "qpe": [602, 646], "598": 602, "mustafaalicelik": 602, "580": 602, "577": 602, "576": 602, "575": 602, "562": 602, "azim": 602, "546": 602, "pickl": 602, "unpickl": 602, "543": 602, "vcp": 602, "541": 602, "noaaport": 602, "seper": 602, "540": [602, 658], "521": 602, "459": 602, "590": 602, "bugfix": 602, "l3": 602, "135": 602, "eet": 602, "585": 602, "582": 602, "574": 602, "570": 602, "558": 602, "ctm": 602, "553": 602, "542": [602, 627, 640, 665], "aux_io": 602, "read_gam": 602, "535": 602, "midnight": 602, "523": 602, "importerror": 602, "522": 602, "519": 602, "512": 602, "510": 602, "phase_proc": 602, "zerodivis": 602, "494": 602, "485": 602, "unsupport": 602, "481": 602, "579": 602, "578": 602, "568": 602, "563": 602, "559": 602, "549": 602, "547": 602, "gamicfil": 602, "gamic_hdf5": 602, "536": 602, "524": 602, "513": 602, "balltre": 602, "504": 602, "501": 602, "482": 602, "479": 602, "594": 602, "561": 602, "despeckle_field": 602, "544": 602, "axislabel_flag": 602, "539": [602, 638, 640, 665], "529": 602, "_get_x_z": 602, "491": 602, "486": 602, "586": 602, "583": 602, "572": 602, "fixup": 602, "569": 602, "560": 602, "555": [602, 643], "recip": [602, 605], "554": 602, "nose_arg": 602, "548": 602, "538": 602, "532": 602, "531": 602, "528": [602, 646, 649, 665], "output_to_geotiff": 602, "514": 602, "511": 602, "507": 602, "506": 602, "498": 602, "libgfortran": 602, "497": 602, "495": 602, "493": 602, "489": 602, "488": 602, "argentinean": 602, "480": [602, 658], "bdolan44": 602, "dara74k": 602, "gavi": 602, "jacaicedob": 602, "wx": 602, "pfhein": 602, "tamisalex": 602, "469": 602, "468": 602, "467": 602, "luminos": 602, "464": 602, "455": 602, "hclass": 602, "447": 602, "439": 602, "434": 602, "433": 602, "427": 602, "411": 602, "404": 602, "388": 602, "cross_section_ppi": [602, 639], "380": 602, "472": 602, "471": 602, "470": 602, "prf": 602, "460": 602, "get_field_colormap": 602, "446": 602, "444": 602, "example_cfradial_rhi": 602, "441": 602, "417": 602, "struct": 602, "410": 602, "383": 602, "unicod": 602, "382": [602, 665], "gatefit": 602, "372": 602, "465": 602, "refactor": 602, "463": 602, "decor": 602, "416": 602, "392": 602, "radxcovert": 602, "clarifi": 602, "475": 602, "406": 602, "add_field_lik": [602, 617], "397": 602, "391": 602, "376": 602, "370": [602, 624, 640, 665], "corner_to_point": 602, "473": 602, "466": 602, "456": 602, "outstand": 602, "412": 602, "413": 602, "454": 602, "453": 602, "449": 602, "438": 602, "437": [602, 614, 615, 665], "430": 602, "426": 602, "miniconda": [602, 603, 656, 667], "reactiv": 602, "422": 602, "plot_map_one_radar_to_grid": [602, 619, 621, 665], "420": [602, 658], "419": 602, "408": 602, "resilli": 602, "403": 602, "write_mdv_grid": 602, "402": 602, "401": 602, "399": 602, "395": 602, "documen": 602, "add_2d_latlon_axi": 602, "394": 602, "378": 602, "acess": 602, "377": 602, "373": 602, "deeplycloudi": 602, "358": [602, 603, 667], "edge_netcdf": 602, "read_edge_netcdf": 602, "357": [602, 603, 667], "dealias_fourdd": 602, "348": 602, "346": 602, "326": 602, "308": 602, "361": 602, "refl_filter_flag": 602, "map_gate_to_grid": 602, "334": 602, "region_dealia": 602, "327": 602, "libm": 602, "posix": 602, "319": 602, "unnecessari": 602, "inmemoryfil": 602, "365": [602, 629, 640, 665], "359": [602, 603, 667], "354": 602, "_rsl_interfac": 602, "342": 602, "binstar": 602, "337": 602, "320": 602, "317": 602, "362": 602, "plot_grid_three_panel": 602, "353": 602, "confus": 602, "363": 602, "340": 602, "externalis": 602, "339": 602, "333": 602, "332": 602, "47": [602, 648], "324": 602, "323": 602, "271": 602, "binar": 602, "266": 602, "313": 602, "312": 602, "290": 602, "280": 602, "273": 602, "272": 602, "261": 602, "256": [602, 623, 647], "dealias_phase_unwrap": 602, "radarmapdispl": 602, "249": 602, "discontin": 602, "315": 602, "314": 602, "288": 602, "fault": 602, "276": 602, "dealias_unwrap_phas": 602, "275": 602, "corrupt": 602, "269": 602, "283": 602, "inconsist": 602, "274": 602, "254": [602, 646], "fallback": 602, "245": 602, "316": 602, "ngates_vart": 602, "310": 602, "py3": [602, 669], "nexrad_level2": 602, "nexrad_level3": 602, "309": 602, "1byte": 602, "datatyp": 602, "weathergod": 602, "293": 602, "292": 602, "289": 602, "291": 602, "138": 602, "284": 602, "alter": 602, "267": 602, "latlon": 602, "264": 602, "262": 602, "260": 602, "259": 602, "258": 602, "241": [602, 614, 619], "rebuild": 602, "237": 602, "scientif": [603, 656, 667], "repositori": [603, 604, 605, 656, 666, 667, 669], "e25": [603, 656, 667], "publish": [603, 667], "easiest": [603, 656, 667], "1st": [603, 656, 667], "Then": [603, 605, 656, 666, 667], "termin": [603, 656, 667, 669], "prompt": [603, 656, 667], "mamba": [603, 667], "openradar": [603, 667], "short": [603, 605, 667], "cours": [603, 617, 667], "ev": [603, 667], "pyart_short_cours": [603, 667], "youtub": [603, 667], "watch": [603, 667], "diip": [603, 667], "q3bkzw": [603, 667], "book": [603, 667], "rule": [603, 667], "pep": [603, 667], "0008": [603, 667], "afterward": [603, 667], "neccessari": [603, 667], "brief": [603, 604, 667], "parti": [603, 667], "explain": [603, 667], "_inverse_dist_squar": [603, 667], "_average1d": [603, 667], "seen": [603, 667], "explan": [603, 604, 667], "privat": [603, 667], "rerun": [603, 667], "test_vad": [603, 667], "test_radar": [603, 658, 667], "make_target_radar": [603, 667], "1000": [603, 620, 628, 634, 635, 642, 646, 662, 667], "ones_lik": [603, 667], "z_start": [603, 667], "z_end": [603, 667], "z_count": [603, 667], "vad_height": [603, 667], "vad_spe": [603, 667], "98665725": [603, 667], "94020686": [603, 667], "88107152": [603, 667], "81939374": [603, 667], "75851962": [603, 667], "vad_direct": [603, 667], "84659496": [603, 667], "30240553": [603, 667], "58658589": [603, 667], "81073051": [603, 667], "01353486": [603, 667], "01335138": [603, 667], "06014712": [603, 667], "12039762": [603, 667], "18410404": [603, 667], "24791911": [603, 667], "98663937": [603, 667], "9398407": [603, 667], "87958641": [603, 667], "81587601": [603, 667], "75205693": [603, 667], "assert_almost_equ": [603, 667], "pyarg": [603, 667], "test_cfradi": [603, 667], "cd": [603, 667], "fork": [603, 605, 667], "cartopy_map": [603, 667], "branch_nam": [603, 667], "task": [603, 611, 651, 667], "mind": [603, 617, 667], "simpli": [603, 645, 652, 660, 662, 666, 667, 669], "acronym": [603, 667], "finish": [603, 667, 669], "quotat": [603, 667], "hit": [603, 667], "depth": [603, 656, 664, 667], "acronymn": [603, 667], "gitwash": [603, 667], "development_workflow": [603, 667], "whitespac": [603, 667], "usual": [603, 614, 667], "vim": [603, 667], "fetch": [603, 618, 642, 646, 647, 648, 667], "ff": [603, 667], "sit": [603, 667], "guidanc": [603, 667], "anyth": 605, "creator": 605, "draft": 605, "shortlog": 605, "uplod": 605, "feedstock": 605, "clone": [605, 656, 666], "meta": 605, "yaml": 605, "sha256": 605, "rerend": 605, "smithi": 605, "bot": 605, "sometim": [605, 658], "awar": 605, "semant": 606, "earlier": 606, "ceas": 606, "Such": 606, "proceed": 606, "futurewarn": 606, "runner": [608, 614], "micromamba": [608, 614], "_core": 608, "__doc__": [608, 609, 613, 614, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 645, 646], "sgpcsaprsurcmaci7": [608, 659], "20110520": [608, 659], "095101": [608, 659], "pop": 608, "specific_attenu": [608, 643, 647, 658, 663], "corrected_reflectivity_horizont": [608, 620, 624, 643, 652, 654, 658], "calculate_attenu": 608, "131": [608, 645, 646], "132": [608, 645, 646], "ax3": [608, 609, 638, 642, 645, 646], "133": [608, 643, 645, 646], "869": [608, 610, 665], "plot_attenu": [608, 610, 665], "ial": 609, "095636": [609, 660], "sonde_fil": 609, "sgpinterpolatedsondec1": 609, "c1": [609, 663], "20110510": 609, "000000": 609, "cdf": [609, 642, 646], "dt": 609, "read_arm_sonde_vap": 609, "exclude_transit": [609, 619, 620, 624, 644], "exclude_invalid": [609, 642], "exclude_outsid": [609, 642], "dealias_data": 609, "sixth": 609, "221": [609, 627], "222": [609, 627], "223": [609, 627], "ax4": 609, "224": [609, 627], "plot_dealia": [609, 610, 665], "mem": [610, 615, 621, 640, 649, 650, 655, 665], "examples_python": 611, "examples_jupyt": 611, "grover": [613, 617, 623, 624, 629, 637, 643, 644, 652, 653, 654], "filepath": [613, 614], "organ": 613, "radarsit": [613, 614], "_v06": 613, "khgx": 613, "aws_nexrad_level2_fil": [613, 614], "khgx20220322_120125_v06": 613, "clutter_filter_power_remov": 613, "spectrum_width": [613, 663, 664], "differential_phas": [613, 627, 663, 664], "relect": 613, "z_": [613, 617, 625], "v_": 613, "noq": 613, "level3": 613, "aws_nexrad_level3_velocity_fil": 613, "hgx_n0u_2022_03_22_12_01_25": 613, "aws_nexrad_level3_reflectivity_fil": 613, "hgx_n0q_2022_03_22_12_01_25": 613, "read_nexrad_level3": 613, "radar_level3_veloc": 613, "radar_level3_reflect": 613, "reflectivity_displai": 613, "velocity_displai": 613, "393": [613, 615, 665], "plot_nexrad_data_aw": [613, 615, 665], "zachari": 614, "sherman": 614, "zsherman": [614, 669], "tendenc": 614, "gz": 614, "handford": 614, "ca": 614, "khnx": 614, "0203": 614, "v06": 614, "khnx20060724_020338": 614, "nexrad_arch": 614, "231": [614, 646], "clearli": 614, "lucki": 614, "31417": 614, "63111": 614, "plote": [614, 631], "central_latitud": [614, 631, 645, 646, 659], "central_longitud": [614, 631, 645, 646, 659], "downloadwarn": 614, "naturalearth": 614, "amazonaw": 614, "10m_physic": 614, "ne_10m_coastlin": 614, "10m_cultur": 614, "ne_10m_admin_1_states_provinces_lin": 614, "plot_older_nexrad_data_aw": [614, 615, 665], "xsapr": [617, 620, 624], "xsapr_sw_fil": [617, 620, 624], "swx_20120520_0641": [617, 620, 623, 624, 625, 629, 639, 643, 644, 645, 646, 652, 653, 654], "xsapr_se_fil": [617, 620, 624], "sex_20120520_0641": [617, 620, 624], "radar_sw": [617, 620, 624], "radar_s": [617, 620, 624], "southwestern": 617, "gmapper": 617, "radar_sw_mapped_to_radar_s": 617, "disp1": 617, "98": [617, 643, 648, 663], "97": [617, 620, 624, 626, 638, 643, 645, 646, 658], "disp2": 617, "remap": 617, "eyebal": 617, "fortun": 617, "reflectivity_se_radar": 617, "reflectivity_sw_radar": 617, "reflectivity_differ": 617, "reflectivity_bia": 617, "southwest": 617, "xspar": 617, "southeast": 617, "neccessarili": 617, "incl_gat": 617, "refl_s": 617, "refl_sw": 617, "values_without_mask": 617, "hist": [617, 652, 660], "histogram2d": 617, "masked_wher": [617, 642, 646, 663], "log_": 617, "870": [617, 621, 665], "plot_compare_two_radars_gatemapp": [617, 621, 665], "solut": 618, "arguabl": 618, "overlook": 618, "neglig": 618, "ze": 618, "2nd": 618, "4th": 618, "purpl": 618, "truncat": 618, "ok": 618, "israel": 618, "silber": 618, "open_radar_data": [618, 642, 646, 647, 648], "file_nam": 618, "example_plot_ppi_single_sweep": 618, "processed_field": 618, "reflectivity_at_cor": 618, "radar_obj": 618, "nnow": 618, "ax_ind": 618, "sweep_obj": 618, "fig2": 618, "1601": 618, "40000": [618, 620, 624, 631, 662], "set_titl": [618, 623, 642, 645, 646], "nuse": 618, "plot_grid_single_sweep_ppi": [618, 621, 665], "123000": 619, "181": [619, 621, 624, 665], "xsarp": [620, 632, 633], "gatefilter_s": [620, 624], "exclude_abov": [620, 624, 652, 660], "gatefilter_sw": [620, 624], "201": [620, 645, 646, 662], "50000": [620, 624, 645, 646, 662], "57861": [620, 624], "363611": [620, 624], "plot_map_two_radars_to_grid": [620, 621, 665], "282": 621, "helper": 623, "vstack": 623, "plot_color_gradi": 623, "cmap_categori": 623, "cmap_list": 623, "figh": 623, "99": 623, "cmap_nam": 623, "pyart_": 623, "va": 623, "transax": 623, "spine": 623, "set_axis_off": 623, "perceptu": [623, 626], "light": [623, 647], "diverg": 623, "meaning": 623, "terrain": 623, "spectral_r": 623, "rememb": 623, "front": 623, "plot_choose_a_colormap": [623, 640, 665], "blue": [624, 634, 635], "plot_cross_sect": [624, 640, 665], "colobar": 625, "joe": 625, "brien": 625, "obrienj": 625, "perfect": 625, "coord": 625, "gca": 625, "set_major_loc": 625, "nullloc": 625, "axsb": 625, "ppi_map": 625, "set_tick": 625, "054": [625, 640, 665], "plot_modify_colorbar": [625, 640, 665], "reduc": [626, 646, 666], "promin": [626, 646], "deemphas": 626, "depict": [626, 642], "ultim": 626, "misinterpret": 626, "lmtomkin": [626, 642, 645, 646], "ncsu": [626, 642, 645, 646], "nexrad_fil": [626, 645, 646], "kbgm": 626, "kbgm20200207_132642_v06": 626, "image_mute_radar": [626, 645, 646], "magma_cmap": 626, "magma_r": [626, 642, 645, 646], "grays_cmap": [626, 646], "gray_r": [626, 646], "nonmuted_cmap": 626, "linearsegmentedcolormap": [626, 645, 646], "from_list": [626, 645, 646], "muted_cmap": [626, 646], "nonmuted_reflect": [626, 645], "muted_reflect": [626, 646], "set_aspect": [626, 642, 645, 646, 647], "plot_nexrad_image_muted_reflect": [626, 640, 665], "katx20130717_195021_v06": [627, 664], "plot_nexrad_multiple_mo": [627, 640, 665], "level2_katx_20130717_1950": 628, "ar2v": 628, "084": [628, 640, 665], "plot_nexrad_reflect": [628, 640, 665], "plot_cross_hair": 629, "plot_ppi_cfradi": [629, 640, 665], "126": [630, 640, 665], "jason": [631, 638], "hemeding": [631, 638], "nsaxsaprppic1": 631, "20140201": 631, "184802": 631, "157": 631, "156": 631, "71": 631, "158": [631, 644, 649, 665], "72": 631, "40km": 631, "plot_line_xi": 631, "20000": [631, 662], "200000": [631, 645, 646], "plot_point": 631, "plot_ppi_with_r": [631, 640, 665], "instrument_nam": [632, 633, 664], "agl": 632, "fac": 632, "nplot": [632, 633, 637], "snum": 632, "hsrhi": [632, 633], "3f": [632, 633], "time_start": 632, "num2dat": 632, "only_use_cftime_datetim": 632, "only_use_python_datetim": 632, "figure_titl": 632, "isoformat": 632, "plot_rhi_cfradi": [632, 640, 665], "854": [633, 640, 665], "differnenti": 634, "cori": [634, 635], "weber": [634, 635], "cweber": [634, 635], "220629": 634, "matplolib": 634, "visabl": 634, "flow": 634, "paramt": 634, "compens": 634, "00015": 634, "veri": [634, 642, 645, 646], "moir": 634, "001": 634, "get_start": [634, 635], "get_end": [634, 635], "blur": 634, "nice": [634, 666], "arbirarli": 634, "gaussian_filt": [634, 635], "ang": [634, 635], "levels_rain": 634, "levels_ic": 634, "contours_ic": 634, "contours_rain": 634, "fmt": [634, 635], "0000": [634, 635], "023": [634, 640, 665], "plot_rhi_contours_differential_reflect": [634, 640, 665], "spyi": 635, "034142": 635, "ramp": 635, "blob": 635, "pyart_budrd18": 635, "coutour": 635, "dot": 635, "major": 635, "axhlin": [635, 642], "axvlin": 635, "00b4ff": 635, "ff6800": 635, "set_ylabel": [635, 642, 648], "cp": 635, "plot_rhi_data_overlai": [635, 640, 665], "110041": 636, "384": [636, 639, 640, 665], "plot_rhi_mdv": [636, 640, 665], "fields_to_plot": 637, "plot_num": 637, "u00b0": 637, "839": [637, 640, 665], "plot_rhi_two_panel": [637, 640, 665], "20110520100000_nexrad_grid": 638, "read_grid": [638, 642, 646], "plot_crosshair": 638, "plot_longitude_slic": 638, "plot_latitude_slic": [638, 662], "plot_three_panel_gridmapdisplai": [638, 640, 665], "225": 639, "xsect": 639, "plot_xsect": [639, 640, 665], "080": 640, "essenti": 642, "distinguish": 642, "insuffici": 642, "tenth": 642, "aggress": 642, "noisi": 642, "ref_data": 642, "ref_data_mask": 642, "masked_outsid": 642, "create_cfad": 642, "15000": [642, 658, 662], "freq_norm_mask": 642, "masked_less_equ": [642, 646], "cfad_pm": 642, "plasma": 642, "set_xlabel": [642, 648], "8km": 642, "widen": 642, "freq_norm2": 642, "freq_norm0": 642, "freq_norm2_mask": 642, "freq_norm0_mask": 642, "chart": 642, "14km": 642, "12km": 642, "swath": 642, "velocity_dealia": 642, "rdbu_r": 642, "bimod": 642, "reproduc": 642, "2c": 642, "demonstr": [642, 656], "ddop": 642, "910815": 642, "213931": 642, "altitude_data": 642, "field_data": 642, "maxdz": [642, 646], "vvel_data": 642, "w_wind": 642, "vvel_mask": 642, "masked_invalid": [642, 645], "field_data_mask": 642, "cont": 642, "654": [642, 649, 665], "plot_cfad": [642, 649, 665], "maxwel": [643, 644], "site_lon": 643, "73": 643, "site_lat": 643, "latitdu": 643, "pathcollect": 643, "0x7f272f317cb0": 643, "get_field_loc": 643, "2kb": 643, "176b": 643, "350": [643, 648, 649, 665], "818e": 643, "recalculated_diff_phas": [643, 658], "2778": 643, "unf_dp_phase_shift": [643, 658], "88b": 643, "145": [643, 646], "144": [643, 646], "diff_reflect": [643, 658], "8b": 643, "20t06": 643, "distance_from_radar": 643, "233": 643, "545": 643, "latitude_of_loc": 643, "longitude_of_loc": 643, "line2d": 643, "0x7f272f2b1a00": 643, "162": [643, 649, 665], "plot_column_subset": [643, 649, 665], "compz": 644, "composite_reflect": 644, "composite_displai": 644, "plot_composite_reflect": [644, 649, 665], "classifc": 645, "summer": [645, 646], "ian": [645, 646], "footprint": 645, "yield": 645, "smoother": 645, "curv": 645, "plot_convstrat_schem": 645, "pick": 645, "radii": 645, "dilat": 645, "conv_strat_yut": 645, "convsf_mask": 645, "masked_equ": [645, 646], "feature_detect": [645, 646], "convsf": [645, 646], "magma_r_cmap": [645, 646], "ref_cmap": [645, 646], "albersequalarea": [645, 646], "convsf_und": 645, "convsf_ov": 645, "uncertainti": [645, 646], "underest": [645, 646], "feature_und": [645, 646], "overest": [645, 646], "feature_ov": [645, 646], "ktbw": [645, 646], "ktbw20220928_190142_v06": [645, 646], "rasumussen": [645, 646], "2003": [645, 646], "reflecit": 645, "kokx": [645, 646], "kokx20210207_161413_v06": [645, 646], "nonmuted_ref": 645, "nonmuted_ref_linear": 645, "mm6": 645, "m3": 645, "snow_rat": [645, 646], "snow_rate_dict": 645, "40500": 645, "034": [645, 646], "ccotd": [645, 646], "rasmussen": [645, 646], "dixon": [645, 646, 656], "vasiloff": [645, 646], "hage": [645, 646], "knight": [645, 646], "vivekanandan": [645, 646], "xu": [645, 646], "nowcast": [645, 646], "accumul": [645, 646], "042": [645, 646], "3c0020": [645, 646], "snuart": [645, 646], "187": [645, 649, 665], "plot_convective_stratiform": [645, 649, 665], "heavili": 646, "customiz": 646, "manuscript": 646, "feature_mask": 646, "19990811": 646, "221202": 646, "convsf_cmap": 646, "140": 646, "253": 646, "csb": 646, "csb_mask": 646, "csl": 646, "convsf_lo": 646, "csl_mask": 646, "csh": 646, "convsf_hi": 646, "csh_mask": 646, "rpm": 646, "csbpm": 646, "set_yticklabel": 646, "lo": 646, "cslpm": 646, "cshpm": 646, "csb_lt": 646, "csb_lt_mask": 646, "csu_lt": 646, "csu_lt_mask": 646, "cso_lt": 646, "cso_lt_mask": 646, "csupm": 646, "csopm": 646, "ztor": 646, "ref_field_ov": 646, "ref_field_und": 646, "2db": 646, "_overest": 646, "_underest": 646, "reflectivity_ov": 646, "reflectivity_und": 646, "snow_rate_ov": 646, "snow_rate_und": 646, "feature_estimate_dict": 646, "bpm": 646, "upm": 646, "opm": 646, "distinct": 646, "scalar_features_mask": 646, "cosine_features_mask": 646, "isol": 646, "faint_featur": 646, "faint_features_mask": 646, "features_faint_strong": 646, "features_faint_strong_mask": 646, "new_dict": 646, "comment_1": 646, "faint_strong_cmap": 646, "faint_strong": 646, "238": 646, "93": 646, "66": 646, "quickli": 646, "quick_image_mut": 646, "muted_ref": 646, "nonmuted_field": 646, "muted_field": 646, "snow_rate_nonmut": 646, "snow_rate_mut": 646, "features_nonmut": 646, "features_mut": 646, "srpm": 646, "srpmm": 646, "csbpmm": 646, "plot_feature_detect": [646, 649, 665], "daniel": [647, 648], "wolfensberg": [647, 648], "mll2217907250u": 647, "003": 647, "preinterpol": 647, "20220628072500_savevol_cosmo_lookup_temp": 647, "nwp_temp": 647, "calculate_attenuation_zphi": 647, "uncorrected_differential_phas": 647, "pia": 647, "pida": 647, "corrected_reflect": [647, 663], "corrected_differential_reflect": [647, 663], "kdp_maesaka": 647, "specific_differential_phas": [647, 663], "hydroclass_semisupervis": 647, "uncorrected_cross_correlation_ratio": 647, "radar_echo_classif": 647, "lr": 647, "rp": 647, "rn": 647, "vi": 647, "mh": 647, "ih": 647, "hdg": 647, "boundarynorm": 647, "aggreg": 647, "crystal": 647, "rime": 647, "particl": 647, "wet": 647, "graupel": 647, "601": [647, 649, 665], "plot_hydrometeor": [647, 649, 665], "2682": 648, "5470354519784": 648, "447328651323915": 648, "5273": 648, "055615736172": 648, "7533807586878538": 648, "7815": 648, "51210340485": 648, "341798234730959": 648, "10403": 648, "798749463633": 648, "977668723091483": 648, "14259": 648, "735154148191": 648, "905980195850134": 648, "18533": 648, "70608163625": 648, "262251073494554": 648, "22800": [648, 658], "97541932203": 648, "613871516659856": 648, "27060": [648, 658], "25919727981": 648, "959520922973752": 648, "31310": 648, "269606200978": 648, "29787217825651": 648, "35549": 648, "73140401952": 648, "62760841473937": 648, "39777": 648, "36820153147": 648, "94740904122591": 648, "43991": 648, "90973467566": 648, "25595719181001": 648, "50263": 648, "42219179496": 648, "671291364356875": 648, "58621": 648, "52730140835": 648, "22838316485286": 648, "71003": 648, "14627731778": 648, "68": 648, "92013945430517": 648, "87118": 648, "5253265705": 648, "4666496720165": 648, "106741": 648, "22752280161": 648, "65626102685928": 648, "125477": 648, "00644101389": 648, "124": 648, "97631322406232": 648, "143293": 648, "15816160105": 648, "38701202347875": 648, "160000": 648, "28993562795": 648, "68618156574667": 648, "mla2119412050u": 648, "zlevel": 648, "5000": [648, 662], "u_allsweep": 648, "v_allsweep": 648, "idx": 648, "radar_1sweep": 648, "vad_brown": 648, "u_avg": 648, "nanmean": 648, "v_avg": 648, "sharei": 648, "plot_vad": [648, 649, 665], "000": 650, "xd": [652, 653, 654], "open_cfradial1_datatre": [652, 653, 654], "sweep_0": 652, "vel_textur": [652, 660], "velocity_textur": [652, 660, 663], "At": [652, 660], "velocity_dealias": [652, 660], "plot_dealias_xradar": [652, 655, 665], "101": 653, "10_000": 653, "50_000": 653, "plot_grid_xradar": [653, 655, 665], "plot_xradar": [654, 655, 665], "conceptu": 656, "projectpythia": 656, "understand": 656, "someth": 656, "maik": 656, "heistermann": 656, "bam": 656, "kellei": 656, "peura": 656, "pfaff": 656, "wolff": 656, "emerg": 656, "bull": 656, "amer": 656, "soc": 656, "117": 656, "128": 656, "00240": 656, "abl": [656, 666], "sophist": 656, "tutori": 656, "materi": 656, "erad": 656, "asr": 656, "asm": 656, "Or": 656, "pyart_env": [656, 659, 662, 669], "wish": 656, "unreleas": 656, "charg": 656, "resourc": [656, 666], "lassen": 656, "radtec": 656, "rsl_path": [656, 666], "usr": 656, "wrapper": 656, "fastest": 656, "cbc": 656, "glpk": 656, "coincbc": [656, 666, 669], "coin_install_dir": [656, 666, 669], "ask": [656, 669], "hypothet": 658, "dict_kei": [658, 663], "rain_rate_a": [658, 663], "volume_numb": 658, "platform_typ": 658, "instrument_typ": 658, "primary_axi": 658, "make_empty_ppi_radar": 658, "59416667": 658, "isn": 658, "240": 658, "660": 658, "720": 658, "780": 658, "960": 658, "1260": 658, "1560": 658, "1620": 658, "1680": 658, "1740": 658, "1860": 658, "1920": 658, "1980": 658, "2040": 658, "2100": 658, "2160": 658, "2220": 658, "2280": 658, "2340": 658, "2400": 658, "2460": 658, "2520": 658, "2580": 658, "2640": 658, "2700": 658, "2760": 658, "2820": 658, "2880": 658, "2940": 658, "3060": 658, "3120": 658, "3180": 658, "3240": 658, "3300": 658, "3360": 658, "3420": 658, "3480": 658, "3540": 658, "3600": 658, "3660": 658, "3720": 658, "3780": 658, "3840": 658, "3900": 658, "3960": 658, "4020": 658, "4080": 658, "4140": 658, "4200": 658, "4260": 658, "4320": 658, "4380": 658, "4440": 658, "4500": 658, "4560": 658, "4620": 658, "4680": 658, "4740": 658, "4800": 658, "4860": 658, "4920": 658, "4980": 658, "5040": 658, "5100": 658, "5160": 658, "5220": 658, "5280": 658, "5340": 658, "5400": 658, "5460": 658, "5520": 658, "5580": 658, "5640": 658, "5700": 658, "5760": 658, "5820": 658, "5880": 658, "5940": 658, "6000": [658, 662], "6060": 658, "6120": 658, "6180": 658, "6240": 658, "6300": 658, "6360": 658, "6420": 658, "6480": 658, "6540": 658, "6600": 658, "6660": 658, "6720": 658, "6780": 658, "6840": 658, "6900": 658, "6960": 658, "7020": 658, "7080": 658, "7140": 658, "7200": [658, 664], "7260": 658, "7320": 658, "7380": 658, "7440": 658, "7560": 658, "7620": 658, "7680": 658, "7740": 658, "7800": 658, "7860": 658, "7920": 658, "7980": 658, "8040": 658, "8100": 658, "8160": 658, "8220": 658, "8280": 658, "8340": 658, "8400": 658, "8460": 658, "8520": 658, "8580": 658, "8640": 658, "8700": 658, "8760": 658, "8820": 658, "8880": 658, "8940": 658, "9000": [658, 662], "9060": 658, "9120": 658, "9180": 658, "9240": 658, "9300": 658, "9360": 658, "9420": 658, "9480": 658, "9540": 658, "9600": 658, "9660": 658, "9720": 658, "9780": 658, "9840": 658, "9900": 658, "9960": 658, "10020": 658, "10080": 658, "10140": 658, "10200": 658, "10260": 658, "10320": 658, "10380": 658, "10440": 658, "10500": 658, "10560": 658, "10620": 658, "10680": 658, "10740": 658, "10800": 658, "10860": 658, "10920": 658, "10980": 658, "11040": 658, "11100": 658, "11160": 658, "11220": 658, "11280": 658, "11340": 658, "11400": 658, "11460": 658, "11520": 658, "11580": 658, "11640": 658, "11700": 658, "11760": 658, "11820": 658, "11880": 658, "11940": 658, "12060": 658, "12120": 658, "12180": 658, "12240": 658, "12300": 658, "12360": 658, "12420": 658, "12480": 658, "12540": 658, "12600": 658, "12660": 658, "12720": 658, "12780": 658, "12840": 658, "12900": 658, "12960": 658, "13020": 658, "13080": 658, "13140": 658, "13200": 658, "13260": 658, "13320": 658, "13380": 658, "13440": 658, "13500": 658, "13560": 658, "13620": 658, "13680": 658, "13740": 658, "13800": 658, "13860": 658, "13920": 658, "13980": 658, "14040": 658, "14100": 658, "14160": 658, "14220": 658, "14280": 658, "14340": 658, "14400": 658, "14460": 658, "14520": 658, "14580": 658, "14640": 658, "14700": 658, "14760": 658, "14820": 658, "14880": 658, "14940": 658, "15060": 658, "15120": 658, "15180": 658, "15240": 658, "15300": 658, "15360": 658, "15420": 658, "15480": 658, "15540": 658, "15600": 658, "15660": 658, "15720": 658, "15780": 658, "15840": 658, "15900": 658, "15960": 658, "16020": 658, "16080": 658, "16140": 658, "16200": 658, "16260": 658, "16320": 658, "16380": 658, "16440": 658, "16500": 658, "16560": 658, "16620": 658, "16680": 658, "16740": 658, "16800": 658, "16860": 658, "16920": 658, "16980": 658, "17040": 658, "17100": 658, "17160": 658, "17220": 658, "17280": 658, "17340": 658, "17400": 658, "17460": 658, "17520": 658, "17580": 658, "17640": 658, "17700": 658, "17760": 658, "17820": 658, "17880": 658, "17940": 658, "18000": [658, 662], "18060": 658, "18120": 658, "18180": 658, "18240": 658, "18300": 658, "18360": 658, "18420": 658, "18480": 658, "18540": 658, "18600": 658, "18660": 658, "18720": 658, "18780": 658, "18840": 658, "18900": 658, "18960": 658, "19020": 658, "19080": 658, "19140": 658, "19200": 658, "19260": 658, "19320": 658, "19380": 658, "19440": 658, "19500": 658, "19560": 658, "19620": 658, "19680": 658, "19740": 658, "19800": 658, "19860": 658, "19920": 658, "19980": 658, "20040": 658, "20100": 658, "20160": 658, "20220": 658, "20280": 658, "20340": 658, "20400": 658, "20460": 658, "20520": 658, "20580": 658, "20640": 658, "20700": 658, "20760": 658, "20820": 658, "20880": 658, "20940": 658, "21000": [658, 662], "21060": 658, "21120": 658, "21180": 658, "21240": 658, "21300": 658, "21360": 658, "21420": 658, "21480": 658, "21540": 658, "21600": 658, "21660": 658, "21720": 658, "21780": 658, "21840": 658, "21900": 658, "21960": 658, "22020": 658, "22080": 658, "22140": 658, "22200": 658, "22260": 658, "22320": 658, "22380": 658, "22440": 658, "22500": 658, "22560": 658, "22620": 658, "22680": 658, "22740": 658, "22860": 658, "22920": 658, "22980": 658, "23040": 658, "23100": 658, "23160": 658, "23220": 658, "23280": 658, "23340": 658, "23400": 658, "23460": 658, "23520": 658, "23580": 658, "23640": 658, "23700": 658, "23760": 658, "23820": 658, "23880": 658, "23940": 658, "24000": [658, 662], "24060": 658, "24120": 658, "24180": 658, "24240": 658, "24300": 658, "24360": 658, "24420": 658, "24480": 658, "24540": 658, "24600": 658, "24660": 658, "24720": 658, "24780": 658, "24840": 658, "24900": 658, "24960": 658, "25020": 658, "25080": 658, "25140": 658, "25200": 658, "25260": 658, "25320": 658, "25380": 658, "25440": 658, "25500": 658, "25560": 658, "25620": 658, "25680": 658, "25740": 658, "25800": 658, "25860": 658, "25920": 658, "25980": 658, "26040": 658, "26100": 658, "26160": 658, "26220": 658, "26280": 658, "26340": 658, "26400": 658, "26460": 658, "26520": 658, "26580": 658, "26640": 658, "26700": 658, "26760": 658, "26820": 658, "26880": 658, "26940": 658, "27000": [658, 662], "27120": 658, "27180": 658, "27240": 658, "27300": 658, "27360": 658, "27420": 658, "27480": 658, "27540": 658, "27600": 658, "27660": 658, "27720": 658, "27780": 658, "27840": 658, "27900": 658, "27960": 658, "28020": 658, "28080": 658, "28140": 658, "28200": 658, "28260": 658, "28320": 658, "28380": 658, "28440": 658, "28500": 658, "28560": 658, "28620": 658, "28680": 658, "28740": 658, "28800": 658, "28860": 658, "28920": 658, "28980": 658, "29040": 658, "29100": 658, "29160": 658, "29220": 658, "29280": 658, "29340": 658, "29400": 658, "29460": 658, "29520": 658, "29580": 658, "29640": 658, "29700": 658, "29760": 658, "29820": 658, "29880": 658, "29940": 658, "30000": [658, 662], "30060": 658, "30120": 658, "30180": 658, "30240": 658, "30300": 658, "30360": 658, "30420": 658, "30480": 658, "30540": 658, "30600": 658, "30660": 658, "30720": 658, "30780": 658, "30840": 658, "30900": 658, "30960": 658, "31020": 658, "31080": 658, "31140": 658, "31200": 658, "31260": 658, "31320": 658, "31380": 658, "31440": 658, "31500": 658, "31560": 658, "31620": 658, "31680": 658, "31740": 658, "31800": 658, "31860": 658, "31920": 658, "31980": 658, "32040": 658, "32100": 658, "32160": 658, "32220": 658, "32280": 658, "32340": 658, "32400": 658, "32460": 658, "32520": 658, "32580": 658, "32640": 658, "32700": 658, "32760": 658, "32820": 658, "32880": 658, "32940": 658, "33000": [658, 662], "33060": 658, "33120": 658, "33180": 658, "33240": 658, "33300": 658, "33360": 658, "33420": 658, "33480": 658, "33540": 658, "33600": 658, "33660": 658, "33720": 658, "33780": 658, "33840": 658, "33900": 658, "33960": 658, "34020": 658, "34080": 658, "34140": 658, "34200": 658, "34260": 658, "34320": 658, "34380": 658, "34440": 658, "34500": 658, "34560": 658, "34620": 658, "34680": 658, "34740": 658, "34800": 658, "34860": 658, "34920": 658, "34980": 658, "35040": 658, "35100": 658, "35160": 658, "35220": 658, "35280": 658, "35340": 658, "35400": 658, "35460": 658, "35520": 658, "35580": 658, "35640": 658, "35700": 658, "35760": 658, "35820": 658, "35880": 658, "35940": 658, "36000": [658, 662], "36060": 658, "36120": 658, "36180": 658, "36240": 658, "36300": 658, "36360": 658, "36420": 658, "36480": 658, "36540": 658, "36600": 658, "36660": 658, "36720": 658, "36780": 658, "36840": 658, "36900": 658, "36960": 658, "37020": 658, "37080": 658, "37140": 658, "37200": 658, "37260": 658, "37320": 658, "37380": 658, "37440": 658, "37500": 658, "37560": 658, "37620": 658, "37680": 658, "37740": 658, "37800": 658, "37860": 658, "37920": 658, "37980": 658, "38040": 658, "38100": 658, "38160": 658, "38220": 658, "38280": 658, "38340": 658, "38400": 658, "38460": 658, "38520": 658, "38580": 658, "38640": 658, "38700": 658, "38760": 658, "38820": 658, "38880": 658, "38940": 658, "39000": [658, 662], "39060": 658, "39120": 658, "39180": 658, "39240": 658, "39300": 658, "39360": 658, "39420": 658, "39480": 658, "39540": 658, "39600": 658, "39660": 658, "39720": 658, "39780": 658, "39840": 658, "39900": 658, "39960": 658, "59416776": 658, "59416886": 658, "59489769": 658, "59489879": 658, "5948999": 658, "59415662": 658, "59414657": 658, "5874659": 658, "58745576": 658, "58744563": 658, "59414621": 658, "59412575": 658, "5805231": 658, "58050246": 658, "58048182": 658, "59419881": 658, "59423095": 658, "61560159": 658, "61563401": 658, "61566644": 658, "59418877": 658, "59421087": 658, "6089062": 658, "6089285": 658, "60895079": 658, "59417836": 658, "59419005": 658, "60196382": 658, "60197561": 658, "60198741": 658, "get_metadata": 658, "ref_dict": 658, "reflecitivity_horizont": 658, "21875": 658, "34375": 658, "0078125": 658, "2109375": 658, "1171875": 658, "59375": 658, "421875": 658, "5625": 658, "7109375": 658, "609375": 658, "5078125": 658, "3828125": 658, "6875": 658, "328125": 658, "3203125": 658, "859375": 658, "6484375": 658, "8515625": 658, "9375": [658, 664], "0234375": 658, "6328125": 658, "2890625": 658, "546875": 658, "578125": 658, "6796875": 658, "ref_gt_0": 659, "mask_dict": 659, "reflectivity_mask": 659, "coolwarm": 659, "sherm": [659, 662], "782": [659, 662], "matplotlibdeprecationwarn": [659, 662], "position": [659, 662], "829": [659, 662], "write_cfradi": 659, "new_radar": 659, "2pi": 660, "wave": 660, "3pi": 660, "erron": 660, "phenomena": [660, 664], "maximium": 660, "unambi": 660, "preprocess": 660, "thankfulli": [660, 662], "surround": [660, 662], "presenc": 660, "524973": 660, "vleociti": 660, "realist": 660, "characterist": 662, "100000": 662, "gates_to_grid": 662, "99000": 662, "98000": 662, "97000": 662, "96000": 662, "95000": 662, "94000": 662, "93000": 662, "92000": 662, "91000": 662, "90000": 662, "89000": 662, "88000": 662, "87000": 662, "86000": 662, "85000": 662, "84000": 662, "83000": 662, "82000": 662, "81000": 662, "80000": 662, "79000": 662, "78000": 662, "77000": 662, "76000": 662, "75000": 662, "74000": 662, "73000": 662, "72000": 662, "71000": 662, "70000": 662, "69000": 662, "68000": 662, "67000": 662, "66000": 662, "65000": 662, "64000": 662, "63000": 662, "62000": 662, "61000": 662, "59000": 662, "58000": 662, "57000": 662, "56000": 662, "55000": 662, "54000": 662, "53000": 662, "52000": 662, "51000": 662, "49000": 662, "48000": 662, "47000": 662, "46000": 662, "45000": 662, "44000": 662, "43000": 662, "42000": 662, "41000": 662, "38000": 662, "37000": 662, "35000": 662, "34000": 662, "32000": 662, "31000": 662, "29000": 662, "28000": 662, "26000": 662, "23000": 662, "22000": 662, "19000": 662, "16000": 662, "14000": 662, "13000": 662, "8000": 662, "longitudn": 662, "latitudn": 662, "suffer": 662, "artifici": 662, "feather": 662, "grid_bett": 662, "1750": 662, "sgpxsaprcmacsuri5": 663, "20171004": 663, "203018": 663, "total_pow": 663, "xsapr_clutt": 663, "sounding_temperatur": 663, "signal_to_noise_ratio": 663, "unfolded_differential_phas": 663, "corrected_differential_phas": 663, "filtered_corrected_differential_phas": 663, "corrected_specific_diff_phas": 663, "filtered_corrected_specific_diff_phas": 663, "path_integrated_attenu": 663, "specific_differential_attenu": 663, "path_integrated_differential_attenu": 663, "nonhydrometeor": 663, "exclude_equ": 663, "tell": 663, "refl_arrai": 663, "reflectivity_w_mask": 663, "iter_slic": [663, 664], "9344453454202706": 663, "620691732853737": 663, "3756584054113996": 663, "597935968662154": 663, "696735014111216": 663, "061894569912447": 663, "721673265240488": 663, "086695918593689": 663, "33930700509078": 663, "599363169483158": 663, "836875745223637": 663, "051601529570966": 663, "22435547210836": 663, "378109469982695": 663, "553820234067336": 663, "648943841665002": 663, "837593740986444": 663, "049614721040282": 663, "331202567459613": 663, "585432697375357": 663, "87002341270722": 663, "993012637722325": 663, "061966001642219": 663, "122799449619672": 663, "861035552720102": 663, "74608994279257": 663, "148801770281325": 663, "70860719727862": 663, "989513966551444": 663, "188644935344827": 663, "89301878240611": 663, "172644371021923": 663, "79879842243138": 663, "912806090219976": 663, "766281467013889": 663, "920522471877334": 663, "898600907318164": 663, "971026055481874": 663, "110503947133682": 663, "094456418731509": 663, "0822160050675675": 663, "036430544969512": 663, "259332430219459": 663, "2438254054588604": 663, "473482666015625": 663, "574283685503023": 663, "866719139946832": 663, "771468742643597": 663, "beam_azimuth_angl": 664, "azimuth_angle_from_true_north": 664, "radial_azimuth_coordin": 664, "beam_elevation_angl": 664, "elevation_angle_from_horizontal_plan": 664, "radial_elevation_coordin": 664, "1832": 664, "log_differential_reflectivity_hv": 664, "875": 664, "differential_phase_hv": 664, "equivalent_reflectivity_factor": 664, "cross_correlation_ratio_hv": 664, "correlation_ratio": 664, "meters_per_second": 664, "doppler_spectrum_width": 664, "radial_velocity_of_scatterers_away_from_instru": 664, "target_fixed_angl": 664, "degrees_north": 664, "degrees_east": 664, "projection_range_coordin": 664, "range_to_measurement_volum": 664, "radial_range_coordin": 664, "spacing_is_const": 664, "meters_to_center_of_first_g": 664, "2125": 664, "meters_between_g": 664, "s20": 664, "unitless": 664, "coplan": 664, "vertical_point": 664, "idl": 664, "azimuth_surveil": 664, "elevation_surveil": 664, "sunscan": 664, "manual_ppi": 664, "manual_rhi": 664, "17t19": 664, "21z": 664, "time_in_seconds_since_volume_start": 664, "calendar": 664, "gregorian": 664, "katx": 664, "original_contain": 664, "vcp_pattern": 664, "7470703": 664, "7196045": 664, "6893921": 664, "511719": 664, "get_slic": 664, "sweep_1": 664, "52734375": 664, "indici": 664, "slice_indic": 664, "9066728410400056": 664, "478547577741713": 664, "587792083929423": 664, "871031288639269": 664, "971692217963673": 664, "830616390843327": 664, "108188248095756": 664, "483419908190385": 664, "88976917057903": 664, "852766685681688": 664, "410455582269897": 664, "66444787446138": 664, "997862391449566": 664, "172098402018502": 664, "489752513534416": 664, "712565619531706": 664, "commonli": 664, "9x": 666, "10x": 666, "11x": 666, "But": 666, "bash": 666, "pythonpath": 666, "pth": 666, "build_ext": 666, "segfault": 666, "Theres": 666, "proper": 666, "reinstal": 666, "remedi": 666, "fno": 666, "protector": 666, "d_fortify_sourc": 666, "cflag": 666, "makefil": 666, "troubl": 666, "define_macro": 666, "macro": 666, "extra_compile_arg": 666, "m32": 666, "extra_link_arg": 666, "m64": 666, "proj_lib": 666, "plai": 666, "xx": 666, "xxx": 666, "mpl_toolkit": 666, "conflict": 669, "exit": 669, "led": 669, "manag": 669, "deactiv": 669, "enviro": 669, "scratch": 669, "spyder": 669, "enhanc": 669, "though": 669, "yourusernam": 669, "youranacondadir": 669, "gitter": 669, "im": 669}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [126, 1, 0, "-", "correct"], [169, 1, 0, "-", "exceptions"], [170, 1, 0, "-", "filters"], [204, 1, 0, "-", "graph"], [361, 1, 0, "-", "io"], [382, 1, 0, "-", "lazydict"], [406, 1, 0, "-", "map"], [419, 1, 0, "-", "retrieve"], [455, 1, 0, "-", "testing"], [558, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_geographic"], [122, 0, 1, "", "cartesian_to_geographic_aeqd"], [123, 0, 1, "", "cartesian_vectors_to_geographic"], [124, 0, 1, "", "geographic_to_cartesian"], [125, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[127, 2, 1, "", "GateFilter"], [156, 0, 1, "", "calculate_attenuation"], [157, 0, 1, "", "calculate_attenuation_philinear"], [158, 0, 1, "", "calculate_attenuation_zphi"], [159, 0, 1, "", "correct_bias"], [160, 0, 1, "", "correct_noise_rhohv"], [161, 0, 1, "", "dealias_fourdd"], [162, 0, 1, "", "dealias_region_based"], [163, 0, 1, "", "dealias_unwrap_phase"], [164, 0, 1, "", "despeckle_field"], [165, 0, 1, "", "find_objects"], [166, 0, 1, "", "moment_based_gate_filter"], [167, 0, 1, "", "phase_proc_lp"], [168, 0, 1, "", "phase_proc_lp_gf"]], "pyart.correct.GateFilter": [[128, 3, 1, "", "copy"], [129, 3, 1, "", "exclude_above"], [130, 3, 1, "", "exclude_all"], [131, 3, 1, "", "exclude_below"], [132, 3, 1, "", "exclude_equal"], [133, 3, 1, "", "exclude_gates"], [134, 3, 1, "", "exclude_inside"], [135, 3, 1, "", "exclude_invalid"], [136, 3, 1, "", "exclude_last_gates"], [137, 3, 1, "", "exclude_masked"], [138, 3, 1, "", "exclude_none"], [139, 3, 1, "", "exclude_not_equal"], [140, 3, 1, "", "exclude_outside"], [141, 3, 1, "", "exclude_transition"], [142, 4, 1, "", "gate_excluded"], [143, 4, 1, "", "gate_included"], [144, 3, 1, "", "include_above"], [145, 3, 1, "", "include_all"], [146, 3, 1, "", "include_below"], [147, 3, 1, "", "include_equal"], [148, 3, 1, "", "include_gates"], [149, 3, 1, "", "include_inside"], [150, 3, 1, "", "include_none"], [151, 3, 1, "", "include_not_equal"], [152, 3, 1, "", "include_not_masked"], [153, 3, 1, "", "include_not_transition"], [154, 3, 1, "", "include_outside"], [155, 3, 1, "", "include_valid"]], "pyart.filters": [[171, 2, 1, "", "GateFilter"], [200, 0, 1, "", "iso0_based_gate_filter"], [201, 0, 1, "", "moment_and_texture_based_gate_filter"], [202, 0, 1, "", "moment_based_gate_filter"], [203, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[172, 3, 1, "", "copy"], [173, 3, 1, "", "exclude_above"], [174, 3, 1, "", "exclude_all"], [175, 3, 1, "", "exclude_below"], [176, 3, 1, "", "exclude_equal"], [177, 3, 1, "", "exclude_gates"], [178, 3, 1, "", "exclude_inside"], [179, 3, 1, "", "exclude_invalid"], [180, 3, 1, "", "exclude_last_gates"], [181, 3, 1, "", "exclude_masked"], [182, 3, 1, "", "exclude_none"], [183, 3, 1, "", "exclude_not_equal"], [184, 3, 1, "", "exclude_outside"], [185, 3, 1, "", "exclude_transition"], [186, 4, 1, "", "gate_excluded"], [187, 4, 1, "", "gate_included"], [188, 3, 1, "", "include_above"], [189, 3, 1, "", "include_all"], [190, 3, 1, "", "include_below"], [191, 3, 1, "", "include_equal"], [192, 3, 1, "", "include_gates"], [193, 3, 1, "", "include_inside"], [194, 3, 1, "", "include_none"], [195, 3, 1, "", "include_not_equal"], [196, 3, 1, "", "include_not_masked"], [197, 3, 1, "", "include_not_transition"], [198, 3, 1, "", "include_outside"], [199, 3, 1, "", "include_valid"]], "pyart.graph": [[205, 2, 1, "", "AirborneRadarDisplay"], [235, 2, 1, "", "GridMapDisplay"], [251, 2, 1, "", "GridMapDisplayBasemap"], [265, 2, 1, "", "RadarDisplay"], [294, 2, 1, "", "RadarMapDisplay"], [327, 2, 1, "", "RadarMapDisplayBasemap"], [360, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[206, 3, 1, "", "generate_az_rhi_title"], [207, 3, 1, "", "generate_filename"], [208, 3, 1, "", "generate_ray_title"], [209, 3, 1, "", "generate_title"], [210, 3, 1, "", "generate_vpt_title"], [211, 3, 1, "", "label_xaxis_r"], [212, 3, 1, "", "label_xaxis_rays"], [213, 3, 1, "", "label_xaxis_time"], [214, 3, 1, "", "label_xaxis_x"], [215, 3, 1, "", "label_yaxis_field"], [216, 3, 1, "", "label_yaxis_y"], [217, 3, 1, "", "label_yaxis_z"], [218, 3, 1, "", "plot"], [219, 3, 1, "", "plot_azimuth_to_rhi"], [220, 3, 1, "", "plot_colorbar"], [221, 3, 1, "", "plot_cr_raster"], [222, 3, 1, "", "plot_cross_hair"], [223, 3, 1, "", "plot_grid_lines"], [224, 3, 1, "", "plot_label"], [225, 3, 1, "", "plot_labels"], [226, 3, 1, "", "plot_ppi"], [227, 3, 1, "", "plot_range_ring"], [228, 3, 1, "", "plot_range_rings"], [229, 3, 1, "", "plot_ray"], [230, 3, 1, "", "plot_rhi"], [231, 3, 1, "", "plot_sweep_grid"], [232, 3, 1, "", "plot_vpt"], [233, 3, 1, "", "set_aspect_ratio"], [234, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[236, 3, 1, "", "cartopy_coastlines"], [237, 3, 1, "", "cartopy_political_boundaries"], [238, 3, 1, "", "cartopy_states"], [239, 3, 1, "", "generate_filename"], [240, 3, 1, "", "generate_grid_title"], [241, 3, 1, "", "generate_latitudinal_level_title"], [242, 3, 1, "", "generate_longitudinal_level_title"], [243, 3, 1, "", "plot_colorbar"], [244, 3, 1, "", "plot_cross_section"], [245, 3, 1, "", "plot_crosshairs"], [246, 3, 1, "", "plot_grid"], [247, 3, 1, "", "plot_latitude_slice"], [248, 3, 1, "", "plot_latitudinal_level"], [249, 3, 1, "", "plot_longitude_slice"], [250, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[252, 3, 1, "", "generate_filename"], [253, 3, 1, "", "generate_grid_title"], [254, 3, 1, "", "generate_latitudinal_level_title"], [255, 3, 1, "", "generate_longitudinal_level_title"], [256, 3, 1, "", "get_basemap"], [257, 3, 1, "", "plot_basemap"], [258, 3, 1, "", "plot_colorbar"], [259, 3, 1, "", "plot_crosshairs"], [260, 3, 1, "", "plot_grid"], [261, 3, 1, "", "plot_latitude_slice"], [262, 3, 1, "", "plot_latitudinal_level"], [263, 3, 1, "", "plot_longitude_slice"], [264, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[266, 3, 1, "", "generate_az_rhi_title"], [267, 3, 1, "", "generate_filename"], [268, 3, 1, "", "generate_ray_title"], [269, 3, 1, "", "generate_title"], [270, 3, 1, "", "generate_vpt_title"], [271, 3, 1, "", "label_xaxis_r"], [272, 3, 1, "", "label_xaxis_rays"], [273, 3, 1, "", "label_xaxis_time"], [274, 3, 1, "", "label_xaxis_x"], [275, 3, 1, "", "label_yaxis_field"], [276, 3, 1, "", "label_yaxis_y"], [277, 3, 1, "", "label_yaxis_z"], [278, 3, 1, "", "plot"], [279, 3, 1, "", "plot_azimuth_to_rhi"], [280, 3, 1, "", "plot_colorbar"], [281, 3, 1, "", "plot_cr_raster"], [282, 3, 1, "", "plot_cross_hair"], [283, 3, 1, "", "plot_grid_lines"], [284, 3, 1, "", "plot_label"], [285, 3, 1, "", "plot_labels"], [286, 3, 1, "", "plot_ppi"], [287, 3, 1, "", "plot_range_ring"], [288, 3, 1, "", "plot_range_rings"], [289, 3, 1, "", "plot_ray"], [290, 3, 1, "", "plot_rhi"], [291, 3, 1, "", "plot_vpt"], [292, 3, 1, "", "set_aspect_ratio"], [293, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[295, 3, 1, "", "generate_az_rhi_title"], [296, 3, 1, "", "generate_filename"], [297, 3, 1, "", "generate_ray_title"], [298, 3, 1, "", "generate_title"], [299, 3, 1, "", "generate_vpt_title"], [300, 3, 1, "", "label_xaxis_r"], [301, 3, 1, "", "label_xaxis_rays"], [302, 3, 1, "", "label_xaxis_time"], [303, 3, 1, "", "label_xaxis_x"], [304, 3, 1, "", "label_yaxis_field"], [305, 3, 1, "", "label_yaxis_y"], [306, 3, 1, "", "label_yaxis_z"], [307, 3, 1, "", "plot"], [308, 3, 1, "", "plot_azimuth_to_rhi"], [309, 3, 1, "", "plot_colorbar"], [310, 3, 1, "", "plot_cr_raster"], [311, 3, 1, "", "plot_cross_hair"], [312, 3, 1, "", "plot_grid_lines"], [313, 3, 1, "", "plot_label"], [314, 3, 1, "", "plot_labels"], [315, 3, 1, "", "plot_line_geo"], [316, 3, 1, "", "plot_line_xy"], [317, 3, 1, "", "plot_point"], [318, 3, 1, "", "plot_ppi"], [319, 3, 1, "", "plot_ppi_map"], [320, 3, 1, "", "plot_range_ring"], [321, 3, 1, "", "plot_range_rings"], [322, 3, 1, "", "plot_ray"], [323, 3, 1, "", "plot_rhi"], [324, 3, 1, "", "plot_vpt"], [325, 3, 1, "", "set_aspect_ratio"], [326, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[328, 3, 1, "", "generate_az_rhi_title"], [329, 3, 1, "", "generate_filename"], [330, 3, 1, "", "generate_ray_title"], [331, 3, 1, "", "generate_title"], [332, 3, 1, "", "generate_vpt_title"], [333, 3, 1, "", "label_xaxis_r"], [334, 3, 1, "", "label_xaxis_rays"], [335, 3, 1, "", "label_xaxis_time"], [336, 3, 1, "", "label_xaxis_x"], [337, 3, 1, "", "label_yaxis_field"], [338, 3, 1, "", "label_yaxis_y"], [339, 3, 1, "", "label_yaxis_z"], [340, 3, 1, "", "plot"], [341, 3, 1, "", "plot_azimuth_to_rhi"], [342, 3, 1, "", "plot_colorbar"], [343, 3, 1, "", "plot_cr_raster"], [344, 3, 1, "", "plot_cross_hair"], [345, 3, 1, "", "plot_grid_lines"], [346, 3, 1, "", "plot_label"], [347, 3, 1, "", "plot_labels"], [348, 3, 1, "", "plot_line_geo"], [349, 3, 1, "", "plot_line_xy"], [350, 3, 1, "", "plot_point"], [351, 3, 1, "", "plot_ppi"], [352, 3, 1, "", "plot_ppi_map"], [353, 3, 1, "", "plot_range_ring"], [354, 3, 1, "", "plot_range_rings"], [355, 3, 1, "", "plot_ray"], [356, 3, 1, "", "plot_rhi"], [357, 3, 1, "", "plot_vpt"], [358, 3, 1, "", "set_aspect_ratio"], [359, 3, 1, "", "set_limits"]], "pyart.io": [[362, 0, 1, "", "prepare_for_read"], [363, 0, 1, "", "read"], [364, 0, 1, "", "read_arm_sonde"], [365, 0, 1, "", "read_arm_sonde_vap"], [366, 0, 1, "", "read_cfradial"], [367, 0, 1, "", "read_chl"], [368, 0, 1, "", "read_grid"], [369, 0, 1, "", "read_grid_mdv"], [370, 0, 1, "", "read_mdv"], [371, 0, 1, "", "read_nexrad_archive"], [372, 0, 1, "", "read_nexrad_cdm"], [373, 0, 1, "", "read_nexrad_level3"], [374, 0, 1, "", "read_rsl"], [375, 0, 1, "", "read_sigmet"], [376, 0, 1, "", "read_uf"], [377, 0, 1, "", "write_cfradial"], [378, 0, 1, "", "write_grid"], [379, 0, 1, "", "write_grid_geotiff"], [380, 0, 1, "", "write_grid_mdv"], [381, 0, 1, "", "write_uf"]], "pyart.lazydict": [[383, 2, 1, "", "LazyLoadDict"], [396, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[384, 3, 1, "", "clear"], [385, 3, 1, "", "copy"], [386, 3, 1, "", "get"], [387, 3, 1, "", "has_key"], [388, 3, 1, "", "items"], [389, 3, 1, "", "keys"], [390, 3, 1, "", "pop"], [391, 3, 1, "", "popitem"], [392, 3, 1, "", "set_lazy"], [393, 3, 1, "", "setdefault"], [394, 3, 1, "", "update"], [395, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[397, 3, 1, "", "clear"], [398, 3, 1, "", "get"], [399, 3, 1, "", "items"], [400, 3, 1, "", "keys"], [401, 3, 1, "", "pop"], [402, 3, 1, "", "popitem"], [403, 3, 1, "", "setdefault"], [404, 3, 1, "", "update"], [405, 3, 1, "", "values"]], "pyart.map": [[407, 2, 1, "", "GateMapper"], [411, 0, 1, "", "example_roi_func_constant"], [412, 0, 1, "", "example_roi_func_dist"], [413, 0, 1, "", "example_roi_func_dist_beam"], [414, 0, 1, "", "grid_from_radars"], [415, 0, 1, "", "grid_ppi_sweeps"], [416, 0, 1, "", "grid_rhi_sweeps"], [417, 0, 1, "", "map_gates_to_grid"], [418, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[408, 4, 1, "", "distance_tolerance"], [409, 3, 1, "", "mapped_radar"], [410, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[420, 0, 1, "", "ZtoR"], [421, 0, 1, "", "calculate_snr_from_reflectivity"], [422, 0, 1, "", "calculate_velocity_texture"], [423, 0, 1, "", "composite_reflectivity"], [424, 0, 1, "", "compute_cdr"], [425, 0, 1, "", "compute_l"], [426, 0, 1, "", "compute_noisedBZ"], [427, 0, 1, "", "compute_snr"], [428, 0, 1, "", "conv_strat_raut"], [429, 0, 1, "", "conv_strat_yuter"], [430, 0, 1, "", "create_cfad"], [431, 0, 1, "", "dealias_spectra"], [432, 0, 1, "", "est_rain_rate_a"], [433, 0, 1, "", "est_rain_rate_hydro"], [434, 0, 1, "", "est_rain_rate_kdp"], [435, 0, 1, "", "est_rain_rate_z"], [436, 0, 1, "", "est_rain_rate_za"], [437, 0, 1, "", "est_rain_rate_zkdp"], [438, 0, 1, "", "est_rain_rate_zpoly"], [439, 0, 1, "", "feature_detection"], [440, 0, 1, "", "fetch_radar_time_profile"], [441, 0, 1, "", "get_freq_band"], [442, 0, 1, "", "grid_displacement_pc"], [443, 0, 1, "", "grid_shift"], [444, 0, 1, "", "hydroclass_semisupervised"], [445, 0, 1, "", "kdp_maesaka"], [446, 0, 1, "", "kdp_schneebeli"], [447, 0, 1, "", "kdp_vulpiani"], [448, 0, 1, "", "map_profile_to_gates"], [449, 0, 1, "", "quasi_vertical_profile"], [450, 0, 1, "", "spectra_moments"], [451, 0, 1, "", "steiner_conv_strat"], [452, 0, 1, "", "texture_of_complex_phase"], [453, 0, 1, "", "vad_browning"], [454, 0, 1, "", "vad_michelson"]], "pyart.testing": [[456, 2, 1, "", "Grid"], [466, 2, 1, "", "InTemporaryDirectory"], [468, 2, 1, "", "Radar"], [497, 2, 1, "", "RadarSpectra"], [542, 0, 1, "", "get_metadata"], [543, 0, 1, "", "get_test_data"], [544, 0, 1, "", "make_empty_grid"], [545, 0, 1, "", "make_empty_ppi_radar"], [546, 0, 1, "", "make_empty_rhi_radar"], [547, 0, 1, "", "make_empty_spectra_radar"], [548, 0, 1, "", "make_gaussian_storm_grid"], [549, 0, 1, "", "make_normal_storm"], [550, 0, 1, "", "make_single_ray_radar"], [551, 0, 1, "", "make_storm_grid"], [552, 0, 1, "", "make_target_grid"], [553, 0, 1, "", "make_target_radar"], [554, 0, 1, "", "make_target_rhi_radar"], [555, 0, 1, "", "make_target_spectra_radar"], [556, 0, 1, "", "make_velocity_aliased_radar"], [557, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[457, 3, 1, "", "add_field"], [458, 3, 1, "", "get_point_longitude_latitude"], [459, 3, 1, "", "get_projparams"], [460, 3, 1, "", "init_point_altitude"], [461, 3, 1, "", "init_point_longitude_latitude"], [462, 3, 1, "", "init_point_x_y_z"], [463, 4, 1, "", "projection_proj"], [464, 3, 1, "", "to_xarray"], [465, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[467, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[469, 3, 1, "", "add_field"], [470, 3, 1, "", "add_field_like"], [471, 3, 1, "", "add_filter"], [472, 3, 1, "", "check_field_exists"], [473, 3, 1, "", "extract_sweeps"], [474, 3, 1, "", "get_azimuth"], [475, 3, 1, "", "get_elevation"], [476, 3, 1, "", "get_end"], [477, 3, 1, "", "get_field"], [478, 3, 1, "", "get_gate_area"], [479, 3, 1, "", "get_gate_lat_lon_alt"], [480, 3, 1, "", "get_gate_x_y_z"], [481, 3, 1, "", "get_nyquist_vel"], [482, 3, 1, "", "get_slice"], [483, 3, 1, "", "get_start"], [484, 3, 1, "", "get_start_end"], [485, 3, 1, "", "info"], [486, 3, 1, "", "init_gate_altitude"], [487, 3, 1, "", "init_gate_longitude_latitude"], [488, 3, 1, "", "init_gate_x_y_z"], [489, 3, 1, "", "init_rays_per_sweep"], [490, 3, 1, "", "iter_azimuth"], [491, 3, 1, "", "iter_elevation"], [492, 3, 1, "", "iter_end"], [493, 3, 1, "", "iter_field"], [494, 3, 1, "", "iter_slice"], [495, 3, 1, "", "iter_start"], [496, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[498, 4, 1, "", "altitude"], [499, 4, 1, "", "azimuth"], [500, 3, 1, "", "check_field_exists"], [501, 4, 1, "", "elevation"], [502, 4, 1, "", "fields"], [503, 4, 1, "", "fixed_angle"], [504, 4, 1, "", "gate_altitude"], [505, 4, 1, "", "gate_latitude"], [506, 4, 1, "", "gate_longitude"], [507, 4, 1, "", "gate_x"], [508, 4, 1, "", "gate_y"], [509, 4, 1, "", "gate_z"], [510, 3, 1, "", "get_end"], [511, 3, 1, "", "get_slice"], [512, 3, 1, "", "get_start"], [513, 3, 1, "", "get_start_end"], [514, 3, 1, "", "init_gate_altitude"], [515, 3, 1, "", "init_gate_longitude_latitude"], [516, 3, 1, "", "init_gate_x_y_z"], [517, 3, 1, "", "init_rays_per_sweep"], [518, 3, 1, "", "iter_azimuth"], [519, 3, 1, "", "iter_elevation"], [520, 3, 1, "", "iter_end"], [521, 3, 1, "", "iter_field"], [522, 3, 1, "", "iter_slice"], [523, 3, 1, "", "iter_start"], [524, 3, 1, "", "iter_start_end"], [525, 4, 1, "", "latitude"], [526, 4, 1, "", "longitude"], [527, 4, 1, "", "ngates"], [528, 4, 1, "", "npulses_max"], [529, 4, 1, "", "nrays"], [530, 4, 1, "", "nsweeps"], [531, 4, 1, "", "projection"], [532, 4, 1, "", "range"], [533, 4, 1, "", "rays_per_sweep"], [534, 4, 1, "", "scan_type"], [535, 4, 1, "", "sweep_end_ray_index"], [536, 4, 1, "", "sweep_mode"], [537, 4, 1, "", "sweep_number"], [538, 4, 1, "", "sweep_start_ray_index"], [539, 4, 1, "", "time"], [540, 3, 1, "", "to_vpt"], [541, 4, 1, "", "velocity_bins"]], "pyart.util": [[559, 0, 1, "", "angular_mean"], [560, 0, 1, "", "angular_mean_deg"], [561, 0, 1, "", "angular_std"], [562, 0, 1, "", "angular_std_deg"], [563, 0, 1, "", "angular_texture_2d"], [564, 0, 1, "", "column_vertical_profile"], [565, 0, 1, "", "cross_section_ppi"], [566, 0, 1, "", "cross_section_rhi"], [567, 0, 1, "", "datetime_from_dataset"], [568, 0, 1, "", "datetime_from_grid"], [569, 0, 1, "", "datetime_from_radar"], [570, 0, 1, "", "datetimes_from_dataset"], [571, 0, 1, "", "datetimes_from_radar"], [572, 0, 1, "", "determine_sweeps"], [573, 0, 1, "", "estimate_noise_hs74"], [574, 0, 1, "", "for_azimuth"], [575, 0, 1, "", "get_column_rays"], [576, 0, 1, "", "get_field_location"], [577, 0, 1, "", "image_mute_radar"], [578, 0, 1, "", "interval_mean"], [579, 0, 1, "", "interval_std"], [580, 0, 1, "", "is_vpt"], [581, 0, 1, "", "join_radar"], [582, 0, 1, "", "mean_of_two_angles"], [583, 0, 1, "", "mean_of_two_angles_deg"], [584, 0, 1, "", "rolling_window"], [585, 0, 1, "", "simulated_vel_from_profile"], [586, 0, 1, "", "sphere_distance"], [587, 0, 1, "", "subset_radar"], [588, 0, 1, "", "texture"], [589, 0, 1, "", "texture_along_ray"], [590, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 594, 596, 597, 602], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 452], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 542], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 618, 619, 620, 624, 653, 662], "add_field": [32, 46, 457, 469], "get_point_longitude_latitud": [33, 458], "get_projparam": [34, 459], "init_point_altitud": [35, 460], "init_point_longitude_latitud": [36, 461], "init_point_x_y_z": [37, 462], "projection_proj": [38, 463], "to_xarrai": [39, 464], "write": [40, 465], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 595, 596, 600, 603, 605, 617, 619, 620, 643, 656, 659, 664, 667], "add_field_lik": [47, 470], "add_filt": [48, 471], "check_field_exist": [49, 77, 472, 500], "extract_sweep": [50, 473], "get_azimuth": [51, 474], "get_elev": [52, 475], "get_end": [53, 87, 476, 510], "get_field": [54, 477], "get_gate_area": [55, 478], "get_gate_lat_lon_alt": [56, 479], "get_gate_x_y_z": [57, 480], "get_nyquist_vel": [58, 481], "get_slic": [59, 88, 482, 511], "get_start": [60, 89, 483, 512], "get_start_end": [61, 90, 484, 513], "info": [62, 485], "init_gate_altitud": [63, 91, 486, 514], "init_gate_longitude_latitud": [64, 92, 487, 515], "init_gate_x_y_z": [65, 93, 488, 516], "init_rays_per_sweep": [66, 94, 489, 517], "iter_azimuth": [67, 95, 490, 518], "iter_elev": [68, 96, 491, 519], "iter_end": [69, 97, 492, 520], "iter_field": [70, 98, 493, 521], "iter_slic": [71, 99, 494, 522], "iter_start": [72, 100, 495, 523], "iter_start_end": [73, 101, 496, 524], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541], "altitud": [75, 498], "azimuth": [76, 499], "elev": [78, 501], "field": [79, 502, 659], "fixed_angl": [80, 503], "gate_altitud": [81, 504], "gate_latitud": [82, 505], "gate_longitud": [83, 506], "gate_x": [84, 507], "gate_i": [85, 508], "gate_z": [86, 509], "latitud": [102, 525, 614], "longitud": [103, 526, 614], "ngate": [104, 527], "npulses_max": [105, 528], "nrai": [106, 529], "nsweep": [107, 530], "project": [108, 531], "rang": [109, 532], "rays_per_sweep": [110, 533], "scan_typ": [111, 534], "sweep_end_ray_index": [112, 535], "sweep_mod": [113, 536], "sweep_numb": [114, 537], "sweep_start_ray_index": [115, 538], "time": [116, 539, 596, 610, 615, 621, 640, 649, 650, 655, 665], "to_vpt": [117, 540, 590], "velocity_bin": [118, 541], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_geograph": 121, "cartesian_to_geographic_aeqd": 122, "cartesian_vectors_to_geograph": 123, "geographic_to_cartesian": 124, "geographic_to_cartesian_aeqd": 125, "correct": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 600, 607, 608, 611], "gatefilt": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 663], "copi": [128, 172, 385], "exclude_abov": [129, 173], "exclude_al": [130, 174], "exclude_below": [131, 175], "exclude_equ": [132, 176], "exclude_g": [133, 177], "exclude_insid": [134, 178], "exclude_invalid": [135, 179], "exclude_last_g": [136, 180], "exclude_mask": [137, 181], "exclude_non": [138, 182], "exclude_not_equ": [139, 183], "exclude_outsid": [140, 184], "exclude_transit": [141, 185], "gate_exclud": [142, 186], "gate_includ": [143, 187], "include_abov": [144, 188], "include_al": [145, 189], "include_below": [146, 190], "include_equ": [147, 191], "include_g": [148, 192], "include_insid": [149, 193], "include_non": [150, 194], "include_not_equ": [151, 195], "include_not_mask": [152, 196], "include_not_transit": [153, 197], "include_outsid": [154, 198], "include_valid": [155, 199], "calculate_attenu": 156, "calculate_attenuation_philinear": 157, "calculate_attenuation_zphi": 158, "correct_bia": 159, "correct_noise_rhohv": 160, "dealias_fourdd": 161, "dealias_region_bas": 162, "dealias_unwrap_phas": 163, "despeckle_field": 164, "find_object": 165, "moment_based_gate_filt": [166, 202], "phase_proc_lp": 167, "phase_proc_lp_gf": 168, "except": 169, "filter": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "iso0_based_gate_filt": 200, "moment_and_texture_based_gate_filt": 201, "temp_based_gate_filt": 203, "graph": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360], "airborneradardisplai": [205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "generate_az_rhi_titl": [206, 266, 295, 328], "generate_filenam": [207, 239, 252, 267, 296, 329], "generate_ray_titl": [208, 268, 297, 330], "generate_titl": [209, 269, 298, 331], "generate_vpt_titl": [210, 270, 299, 332], "label_xaxis_r": [211, 271, 300, 333], "label_xaxis_rai": [212, 272, 301, 334], "label_xaxis_tim": [213, 273, 302, 335], "label_xaxis_x": [214, 274, 303, 336], "label_yaxis_field": [215, 275, 304, 337], "label_yaxis_i": [216, 276, 305, 338], "label_yaxis_z": [217, 277, 306, 339], "plot": [218, 278, 307, 340, 595, 596, 597, 599, 600, 611, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 644, 647, 648, 654], "plot_azimuth_to_rhi": [219, 279, 308, 341], "plot_colorbar": [220, 243, 258, 280, 309, 342], "plot_cr_rast": [221, 281, 310, 343], "plot_cross_hair": [222, 282, 311, 344], "plot_grid_lin": [223, 283, 312, 345], "plot_label": [224, 225, 284, 285, 313, 314, 346, 347], "plot_ppi": [226, 286, 318, 351], "plot_range_r": [227, 228, 287, 288, 320, 321, 353, 354], "plot_rai": [229, 289, 322, 355], "plot_rhi": [230, 290, 323, 356], "plot_sweep_grid": 231, "plot_vpt": [232, 291, 324, 357], "set_aspect_ratio": [233, 292, 325, 358], "set_limit": [234, 293, 326, 359], "gridmapdisplai": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 638], "cartopy_coastlin": 236, "cartopy_political_boundari": 237, "cartopy_st": 238, "generate_grid_titl": [240, 253], "generate_latitudinal_level_titl": [241, 254], "generate_longitudinal_level_titl": [242, 255], "plot_cross_sect": 244, "plot_crosshair": [245, 259], "plot_grid": [246, 260], "plot_latitude_slic": [247, 261], "plot_latitudinal_level": [248, 262], "plot_longitude_slic": [249, 263], "plot_longitudinal_level": [250, 264], "gridmapdisplaybasemap": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "get_basemap": 256, "plot_basemap": 257, "radardisplai": [265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "radarmapdisplai": [294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 597], "plot_line_geo": [315, 348], "plot_line_xi": [316, 349], "plot_point": [317, 350], "plot_ppi_map": [319, 352, 597], "radarmapdisplaybasemap": [327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359], "plot_convstrat_schem": 360, "io": [361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381], "prepare_for_read": 362, "read": [363, 595, 596, 597, 600, 613, 614], "read_arm_sond": 364, "read_arm_sonde_vap": 365, "read_cfradi": 366, "read_chl": 367, "read_grid": 368, "read_grid_mdv": 369, "read_mdv": 370, "read_nexrad_arch": 371, "read_nexrad_cdm": 372, "read_nexrad_level3": 373, "read_rsl": 374, "read_sigmet": 375, "read_uf": 376, "write_cfradi": 377, "write_grid": 378, "write_grid_geotiff": 379, "write_grid_mdv": 380, "write_uf": 381, "lazydict": [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "lazyloaddict": [383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395], "clear": [384, 397], "get": [386, 398, 656], "has_kei": 387, "item": [388, 399], "kei": [389, 400, 596], "pop": [390, 401], "popitem": [391, 402], "set_lazi": 392, "setdefault": [393, 403], "updat": [394, 404, 605], "valu": [395, 405], "mutablemap": [396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "map": [406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 611, 616, 618, 619, 620, 631, 662], "gatemapp": [407, 408, 409, 410, 617], "distance_toler": 408, "mapped_radar": 409, "time_toler": 410, "example_roi_func_const": 411, "example_roi_func_dist": 412, "example_roi_func_dist_beam": 413, "grid_from_radar": 414, "grid_ppi_sweep": 415, "grid_rhi_sweep": 416, "map_gates_to_grid": 417, "map_to_grid": 418, "retriev": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 600, 611, 641], "ztor": 420, "calculate_snr_from_reflect": 421, "calculate_velocity_textur": 422, "composite_reflect": 423, "compute_cdr": 424, "compute_l": 425, "compute_noisedbz": 426, "compute_snr": 427, "conv_strat_raut": 428, "conv_strat_yut": 429, "create_cfad": 430, "dealias_spectra": 431, "est_rain_rate_a": 432, "est_rain_rate_hydro": 433, "est_rain_rate_kdp": 434, "est_rain_rate_z": 435, "est_rain_rate_za": 436, "est_rain_rate_zkdp": 437, "est_rain_rate_zpoli": 438, "feature_detect": 439, "fetch_radar_time_profil": 440, "get_freq_band": 441, "grid_displacement_pc": 442, "grid_shift": 443, "hydroclass_semisupervis": 444, "kdp_maesaka": 445, "kdp_schneeb": 446, "kdp_vulpiani": 447, "map_profile_to_g": 448, "quasi_vertical_profil": 449, "spectra_mo": 450, "paramet": [450, 597], "steiner_conv_strat": 451, "vad_brown": 453, "vad_michelson": 454, "test": [455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 603, 667], "intemporarydirectori": [466, 467], "cleanup": 467, "get_test_data": 543, "make_empty_grid": 544, "make_empty_ppi_radar": 545, "make_empty_rhi_radar": 546, "make_empty_spectra_radar": 547, "make_gaussian_storm_grid": 548, "make_normal_storm": 549, "make_single_ray_radar": 550, "make_storm_grid": 551, "make_target_grid": 552, "make_target_radar": 553, "make_target_rhi_radar": 554, "make_target_spectra_radar": 555, "make_velocity_aliased_radar": 556, "make_velocity_aliased_rhi_radar": 557, "util": [558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590], "angular_mean": 559, "angular_mean_deg": 560, "angular_std": 561, "angular_std_deg": 562, "angular_texture_2d": 563, "column_vertical_profil": 564, "cross_section_ppi": 565, "cross_section_rhi": 566, "datetime_from_dataset": 567, "datetime_from_grid": 568, "datetime_from_radar": 569, "datetimes_from_dataset": 570, "datetimes_from_radar": 571, "determine_sweep": 572, "estimate_noise_hs74": 573, "for_azimuth": 574, "assumpt": [574, 586], "get_column_rai": 575, "get_field_loc": 576, "image_mute_radar": 577, "interval_mean": 578, "interval_std": 579, "is_vpt": 580, "join_radar": 581, "mean_of_two_angl": 582, "mean_of_two_angles_deg": 583, "rolling_window": 584, "simulated_vel_from_profil": 585, "sphere_dist": 586, "subset_radar": 587, "textur": 588, "texture_along_rai": 589, "api": [591, 600], "refer": [591, 600, 645, 646], "manual": 591, "blog": [592, 601], "blend": 593, "observ": 593, "from": [593, 595, 600, 613, 624, 627, 629, 630, 632, 633, 634, 635, 636, 639, 666], "tracer": 593, "us": [593, 595, 596, 597, 600, 609, 617, 618, 638, 652, 653, 654], "py": [593, 594, 595, 600, 602, 603, 604, 605, 652, 653, 654, 656, 663, 664, 666, 667], "art": [593, 594, 595, 600, 602, 603, 604, 605, 652, 653, 654, 656, 663, 664, 666, 667], "import": [593, 595, 596, 597, 599, 603, 667], "goe": 593, "data": [593, 595, 596, 597, 599, 600, 613, 614, 653, 662, 663], "access": [593, 595, 597, 599], "csapr": 593, "load": [593, 596], "lma": 593, "flash": 593, "june": 593, "17th": 593, "case": 593, "17": [593, 602], "rhi": [593, 600, 632, 633, 634, 635, 636, 637], "activ": 594, "develop": [594, 606], "submit": 594, "pull": 594, "request": 594, "pr": [594, 602], "first": 594, "you": [594, 600], "have": 594, "done": 594, "so": 594, "alreadi": 594, "need": 594, "fork": 594, "github": [594, 603, 605, 667], "repositori": 594, "second": 594, "termin": 594, "clone": 594, "your": [594, 600, 623, 625], "remot": 594, "git": [594, 605], "command": 594, "third": 594, "creat": [594, 595, 596, 605, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 642, 658, 669], "doc": [594, 598], "conda": [594, 605], "environ": [594, 669], "fourth": 594, "we": 594, "instal": [594, 603, 656, 666, 667], "trmm": 594, "rsl": 594, "librari": 594, "lastli": 594, "python": [594, 603, 656, 667], "script": 594, "within": 594, "okai": 594, "should": 594, "now": 594, "readi": 594, "make": [594, 605], "chang": 594, "sourc": [594, 666], "code": [594, 603, 667], "1": [594, 602, 646], "new": [594, 598], "branch": 594, "our": [594, 596, 597, 599, 600], "2": [594, 602, 613, 614, 646], "push": 594, "To": 594, "let": 594, "commit": 594, "after": 594, "thi": [594, 602], "i": [594, 600, 656], "what": [594, 656], "look": 594, "like": 594, "hope": 594, "help": [594, 656], "hail": 595, "storm": 595, "visual": [595, 596, 599], "panda": 595, "motiv": [595, 599, 600, 601], "nexrad": [595, 597, 599, 613, 614, 627, 628], "fsspec": 595, "setup": [595, 599, 603, 604, 667], "filesystem": 595, "bucket": 595, "file": [595, 603, 627, 629, 630, 632, 633, 634, 635, 636, 658, 659, 667], "dataset": 595, "nexradaw": 595, "configur": 595, "search": [595, 600], "download": [595, 599], "spc": 595, "report": 595, "function": [595, 599], "loop": 595, "through": [595, 600], "helper": 595, "scale": 595, "bar": 595, "an": [595, 626, 634, 635, 669], "anim": 595, "imag": [595, 599, 626], "view": [595, 596], "final": [595, 596], "conclus": [595, 597, 599, 600, 601], "work": [596, 645, 646], "vertic": 596, "point": [596, 643], "xarrai": 596, "hvplot": 596, "overview": 596, "ka": 596, "band": 596, "arm": [596, 600, 603, 656, 667], "zenith": 596, "kazr": 596, "instrument": 596, "clean": [596, 600], "up": [596, 597, 669], "bit": 596, "analysi": 596, "subset": 596, "reflect": [596, 608, 626, 628, 634, 635, 644], "veloc": [596, 600, 609, 642, 652, 660], "quick": 596, "extract": [596, 643], "date": [596, 599], "inform": [596, 669], "label": 596, "holoview": 596, "try": [596, 597], "raster": 596, "takeawai": 596, "fix": [597, 602, 614], "weird": 597, "pattern": 597, "when": 597, "level": [597, 613, 614], "3": [597, 602, 613, 638], "The": [597, 599, 600, 601, 603, 656, 664, 667], "recreat": 597, "issu": [597, 614], "set": [597, 669], "matplotlib": 597, "style": [597, 603, 667], "without": 597, "alpha": 597, "add": [597, 599], "argument": 597, "dig": 597, "investig": [597, 599, 600], "pcolormesh": 597, "edgecolor": 597, "modifi": [597, 625], "default": 597, "solut": [597, 600, 601], "sever": 599, "weather": 599, "wisconsin": 599, "outbreak": 599, "focus": 599, "southern": 599, "reproduc": 599, "event": 599, "road": 599, "interst": 599, "featur": [599, 602, 646], "avail": 599, "run": 599, "scan": 600, "cloud": [600, 613], "epcap": 600, "problem": [600, 601], "dq": 600, "browser": 600, "act": 600, "token": 600, "live": 600, "pass": 600, "credenti": 600, "take": 600, "peak": 600, "strategi": 600, "sort": 600, "all": 600, "ppi": [600, 618, 629, 630, 631, 639, 654], "appli": 600, "explor": 600, "threshold": 600, "snr": 600, "revis": 600, "where": 600, "slice": 600, "frame": 600, "post": 601, "templat": 601, "changelog": 602, "18": 602, "enhanc": 602, "made": 602, "bug": 602, "other": 602, "merg": 602, "contributor": [602, 603, 667], "releas": [602, 605], "0": 602, "document": [602, 605], "improv": 602, "16": 602, "mainten": 602, "upkeep": 602, "15": 602, "v1": 602, "14": 602, "6": 602, "5": 602, "4": 602, "13": 602, "12": 602, "7": 602, "11": 602, "8": 602, "deprec": 602, "10": 602, "9": 602, "picasso": 602, "": [603, 606, 667], "guid": [603, 606, 667, 668], "toolkit": [603, 656, 667], "link": [603, 667], "cite": [603, 656, 667], "resourc": [603, 667], "continu": 604, "integr": 604, "how": [605, 645, 646], "tag": 605, "prepar": 605, "note": 605, "trigger": 605, "pypi": 605, "upload": 605, "packag": 605, "forg": 605, "announc": 605, "open": 605, "forum": 605, "version": 606, "moment": [607, 611, 627], "exampl": [607, 611, 612, 616, 622, 641, 642, 645, 651], "attenu": 608, "dealia": [609, 652], "doppler": 609, "region": 609, "base": 609, "algorithm": [609, 645, 646], "comput": [610, 615, 621, 640, 649, 650, 655, 665], "galleri": [611, 657], "input": [611, 612], "output": [611, 612], "xradar": [611, 651, 652, 653, 654], "aw": 613, "older": 614, "compar": 617, "two": [617, 620, 637], "singl": [618, 619], "sweep": 618, "cartesian": [618, 619, 620, 662], "2d": 618, "weight": 618, "choos": 623, "colormap": 623, "cross": [624, 639], "section": [624, 639], "colorbar": 625, "mute": 626, "multipl": [627, 632, 633], "cfradial": 629, "mdv": [630, 634, 635, 636], "cartopi": 631, "panel": [632, 633, 637, 638], "cf": [632, 633], "radial": [632, 633, 652], "contour": [634, 635], "line": [634, 635], "volum": 639, "cfad": 642, "diagram": 642, "valid": 642, "column": 643, "abov": 643, "calcul": [644, 647, 648], "composit": 644, "convect": [645, 646], "stratiform": [645, 646], "classif": [645, 646, 647], "summari": [645, 646], "recommend": [645, 646], "best": [645, 646], "practic": [645, 646], "detect": 646, "part": 646, "warm": 646, "season": 646, "cool": 646, "hydrometeor": 647, "vad": 648, "profil": 648, "can": 656, "do": 656, "short": 656, "cours": 656, "depend": [656, 666, 669], "option": [656, 666, 669], "contribut": 656, "notebook": 657, "basic": 658, "ingest": 658, "netcdf": 658, "manipul": 659, "save": 659, "object": [659, 664], "dealias": 660, "mask": 663, "With": 663, "index": 664, "build": 666, "requir": 666, "obtain": 666, "latest": 666, "frequent": 666, "ask": 666, "question": 666, "user": 668, "anaconda": 669, "channel": 669, "ad": 669, "path": 669, "more": 669}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[126, "pyart-correct"]], "pyart.correct.GateFilter": [[127, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[128, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[129, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[130, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[131, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[132, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[133, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[134, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[135, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_last_gates": [[136, "pyart-correct-gatefilter-exclude-last-gates"]], "pyart.correct.GateFilter.exclude_masked": [[137, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[138, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[139, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[140, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[141, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[142, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[143, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[144, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[145, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[146, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[147, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[148, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[149, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[150, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[151, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[152, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[153, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[154, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[155, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[156, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[157, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[158, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[159, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[160, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[161, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[162, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[163, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[164, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[165, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[166, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[167, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[168, "pyart-correct-phase-proc-lp-gf"]], "pyart.exceptions": [[169, "pyart-exceptions"]], "pyart.filters": [[170, "pyart-filters"]], "pyart.filters.GateFilter": [[171, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[172, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[173, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[174, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[175, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[176, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[177, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[178, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[179, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_last_gates": [[180, "pyart-filters-gatefilter-exclude-last-gates"]], "pyart.filters.GateFilter.exclude_masked": [[181, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[182, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[183, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[184, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[185, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[186, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[187, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[188, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[189, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[190, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[191, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[192, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[193, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[194, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[195, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[196, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[197, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[198, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[199, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[200, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[201, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[202, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[203, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[204, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[205, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[206, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[207, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[208, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[209, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[210, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[211, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[212, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[213, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[214, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[215, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[216, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[217, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[218, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[219, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[220, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[221, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[222, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[223, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[224, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[225, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[226, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[227, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[228, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[229, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[230, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[231, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[232, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[233, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[234, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[235, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[236, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[237, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[238, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[239, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[240, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[241, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[242, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[243, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[244, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[245, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[246, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[247, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[248, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[249, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[250, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[251, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[252, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[253, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[254, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[255, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[256, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[257, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[258, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[259, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[260, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[261, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[262, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[263, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[264, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[265, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[266, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[267, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[268, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[269, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[270, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[271, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[272, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[273, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[274, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[275, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[276, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[277, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[278, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[279, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[280, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[281, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[282, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[283, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[284, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[285, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[286, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[287, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[288, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[289, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[290, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[291, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[292, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[293, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[294, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[295, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[296, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[297, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[298, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[299, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[300, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[301, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[302, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[303, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[304, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[305, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[306, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[307, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[308, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[309, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[310, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[311, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[312, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[313, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[314, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[315, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[316, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[317, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[318, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[319, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[320, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[321, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[322, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[323, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[324, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[325, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[326, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[327, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[328, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[329, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[330, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[331, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[332, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[333, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[334, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[335, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[336, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[337, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[338, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[339, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[340, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[341, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[342, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[343, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[344, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[345, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[346, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[347, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[348, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[349, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[350, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[351, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[352, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[353, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[354, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[355, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[356, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[357, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[358, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[359, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[360, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[361, "pyart-io"]], "pyart.io.prepare_for_read": [[362, "pyart-io-prepare-for-read"]], "pyart.io.read": [[363, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[364, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[365, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[366, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[367, "pyart-io-read-chl"]], "pyart.io.read_grid": [[368, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[369, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[370, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[371, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[372, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[373, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[374, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[375, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[376, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[377, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[378, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[379, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[380, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[381, "pyart-io-write-uf"]], "pyart.lazydict": [[382, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[383, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[384, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[385, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[386, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[387, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[388, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[389, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[390, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[391, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[392, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[393, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[394, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[395, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[396, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[397, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[398, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[399, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[400, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[401, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[402, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[403, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[404, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[405, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[406, "pyart-map"]], "pyart.map.GateMapper": [[407, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[408, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[409, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[410, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[411, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[412, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[413, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[414, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[415, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[416, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[417, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[418, "pyart-map-map-to-grid"]], "pyart.retrieve": [[419, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[420, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[421, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[422, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[423, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[424, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_l": [[425, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[426, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_snr": [[427, "pyart-retrieve-compute-snr"]], "pyart.retrieve.conv_strat_raut": [[428, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[429, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.create_cfad": [[430, "pyart-retrieve-create-cfad"]], "pyart.retrieve.dealias_spectra": [[431, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[432, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[433, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[434, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[435, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[436, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[437, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[438, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[439, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[440, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[441, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[442, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[443, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[444, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_maesaka": [[445, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[446, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[447, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[448, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[449, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[450, "pyart-retrieve-spectra-moments"]], "Parameter": [[450, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[451, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[452, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[453, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[454, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[455, "pyart-testing"]], "pyart.testing.Grid": [[456, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[457, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[458, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[459, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[460, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[461, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[462, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[463, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[464, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[465, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[466, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[467, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[468, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[469, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[470, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[471, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[472, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[473, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[474, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[475, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[476, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[477, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[478, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[479, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[480, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[481, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[482, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[483, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[484, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[485, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[486, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[487, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[488, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[489, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[490, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[491, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[492, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[493, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[494, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[495, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[496, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[497, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[498, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[499, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[500, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[501, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[502, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[503, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[504, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[505, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[506, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[507, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[508, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[509, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[510, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[511, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[512, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[513, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[514, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[515, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[516, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[517, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[518, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[519, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[520, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[521, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[522, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[523, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[524, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[525, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[526, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[527, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[528, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[529, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[530, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[531, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[532, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[533, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[534, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[535, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[536, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[537, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[538, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[539, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[540, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[541, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[542, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[543, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[544, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[545, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[546, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[547, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[548, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[549, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[550, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[551, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[552, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[553, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_rhi_radar": [[554, "pyart-testing-make-target-rhi-radar"]], "pyart.testing.make_target_spectra_radar": [[555, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[556, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[557, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[558, "pyart-util"]], "pyart.util.angular_mean": [[559, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[560, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[561, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[562, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[563, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[564, "pyart-util-column-vertical-profile"]], "pyart.util.cross_section_ppi": [[565, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[566, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[567, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[568, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[569, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[570, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[571, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[572, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[573, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[574, "pyart-util-for-azimuth"]], "Assumptions": [[574, "assumptions"], [586, "assumptions"]], "pyart.util.get_column_rays": [[575, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[576, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[577, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[578, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[579, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[580, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[581, "pyart-util-join-radar"]], "pyart.util.mean_of_two_angles": [[582, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[583, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[584, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[585, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[586, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[587, "pyart-util-subset-radar"]], "pyart.util.texture": [[588, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[589, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[590, "pyart-util-to-vpt"]], "API Reference Manual": [[591, "api-reference-manual"]], "Blog": [[592, "blog"]], "Blending Observations from TRACER using Py-ART": [[593, "blending-observations-from-tracer-using-py-art"]], "Imports": [[593, "imports"], [595, "imports"], [596, "imports"], [597, "imports"], [599, "imports"]], "GOES data access": [[593, "goes-data-access"]], "CSAPR data access": [[593, "csapr-data-access"]], "Load LMA Flash data": [[593, "load-lma-flash-data"]], "June 17th case": [[593, "june-17th-case"]], "June 17 RHI": [[593, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[594, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[594, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[594, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[594, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[594, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[594, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[594, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[594, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[594, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[594, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[594, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[594, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[595, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[595, "motivation"], [599, "motivation"], [600, "motivation"], [601, "motivation"]], "NEXRAD Data Access - fsspec": [[595, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[595, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[595, "read-in-a-file"]], "Visualize the Dataset": [[595, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[595, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[595, "configure-the-search"]], "Search and Download the Data": [[595, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[595, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[595, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[595, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[595, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[595, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[595, "create-an-animation-of-the-images"]], "View the Final Animation": [[595, "view-the-final-animation"]], "Conclusion": [[595, "conclusion"], [597, "conclusion"], [599, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[596, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[596, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[596, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[596, "plot-using-pyart"]], "Load in the data using pyart": [[596, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[596, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[596, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[596, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[596, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[596, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[596, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[596, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[596, "create-our-holoviews-plots"]], "View the Final Visualization": [[596, "view-the-final-visualization"]], "Try Using Rasterize": [[596, "try-using-rasterize"]], "Key Takeaways": [[596, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[597, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[597, "the-data"]], "Data Access": [[597, "data-access"]], "Recreate the Issue Using PyART": [[597, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[597, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[597, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[597, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[597, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[597, "add-in-the-alpha-argument"]], "Dig into the Issue": [[597, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[597, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[597, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[597, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[597, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[597, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[597, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[597, "fixing-the-issue-in-pyart"]], "New Docs": [[598, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[599, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[599, "the-outbreak"]], "Focusing on Southern Wisconsin": [[599, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[599, "reproducing-event-images"]], "Visualizing the Event": [[599, "visualizing-the-event"]], "Access the Data": [[599, "access-the-data"]], "Download the Road Data": [[599, "download-the-road-data"]], "Add the Interstate Date as a feature": [[599, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[599, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[599, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[599, "run-our-plotting-functions"]], "Investigating ARM Scanning Cloud Radar Data from EPCAPE": [[600, "investigating-arm-scanning-cloud-radar-data-from-epcape"]], "The Problem": [[600, "the-problem"], [601, "the-problem"]], "The Solution": [[600, "the-solution"], [601, "the-solution"]], "Searching for data through the DQ Plot Browser": [[600, "searching-for-data-through-the-dq-plot-browser"]], "Use ACT to retrieve data from EPCAPE": [[600, "use-act-to-retrieve-data-from-epcape"]], "Retrieve you API token from ARM Live": [[600, "retrieve-you-api-token-from-arm-live"]], "Pass your Credentials into the Search": [[600, "pass-your-credentials-into-the-search"]], "Read the Data into Py-ART": [[600, "read-the-data-into-py-art"]], "Take a Peak at the Scan Strategy": [[600, "take-a-peak-at-the-scan-strategy"]], "Sort the Scans by Scan Strategy": [[600, "sort-the-scans-by-scan-strategy"]], "Plot all of the PPI Scans": [[600, "plot-all-of-the-ppi-scans"]], "Plot all the RHI Scans": [[600, "plot-all-the-rhi-scans"]], "Apply Corrections to the Velocity Data": [[600, "apply-corrections-to-the-velocity-data"]], "Explore a Threshold for SNR": [[600, "explore-a-threshold-for-snr"]], "Plot our Revised, Cleaned Data": [[600, "plot-our-revised-cleaned-data"]], "Plot where the RHI scan is slicing through using the PPI for a frame of reference": [[600, "plot-where-the-rhi-scan-is-slicing-through-using-the-ppi-for-a-frame-of-reference"]], "Conclusions": [[600, "conclusions"], [601, "conclusions"]], "Blog Post Template": [[601, "blog-post-template"]], "Changelog": [[602, "changelog"]], "Py-ART 1.18.1": [[602, "py-art-1-18-1"]], "Enhancements made": [[602, "enhancements-made"], [602, "id1"], [602, "id5"], [602, "id9"], [602, "id14"], [602, "id29"], [602, "id35"], [602, "id46"], [602, "id49"], [602, "id54"], [602, "id59"], [602, "id62"], [602, "id66"], [602, "id79"], [602, "id89"], [602, "id99"], [602, "id105"], [602, "id111"], [602, "id119"], [602, "id132"], [602, "id136"], [602, "id140"], [602, "id146"], [602, "id152"], [602, "id161"], [602, "id168"], [602, "id175"], [602, "id181"], [602, "id188"], [602, "id194"], [602, "id200"]], "Bugs fixed": [[602, "bugs-fixed"], [602, "id2"], [602, "id6"], [602, "id10"], [602, "id15"], [602, "id22"], [602, "id26"], [602, "id30"], [602, "id36"], [602, "id41"], [602, "id50"], [602, "id55"], [602, "id60"], [602, "id67"], [602, "id72"], [602, "id76"], [602, "id80"], [602, "id85"], [602, "id90"], [602, "id95"], [602, "id100"], [602, "id106"], [602, "id112"], [602, "id116"], [602, "id120"], [602, "id124"], [602, "id129"], [602, "id133"], [602, "id137"], [602, "id141"], [602, "id147"], [602, "id153"], [602, "id157"], [602, "id162"], [602, "id169"], [602, "id176"], [602, "id182"], [602, "id189"], [602, "id195"]], "Other merged PRs": [[602, "other-merged-prs"], [602, "id3"], [602, "id7"], [602, "id12"], [602, "id17"], [602, "id20"], [602, "id24"], [602, "id27"], [602, "id32"], [602, "id37"], [602, "id44"], [602, "id47"], [602, "id52"], [602, "id57"], [602, "id64"], [602, "id70"], [602, "id74"], [602, "id77"], [602, "id83"], [602, "id87"], [602, "id93"], [602, "id97"], [602, "id103"], [602, "id109"], [602, "id114"], [602, "id122"], [602, "id127"], [602, "id134"], [602, "id144"], [602, "id150"], [602, "id155"], [602, "id159"], [602, "id166"], [602, "id173"], [602, "id179"], [602, "id186"], [602, "id192"], [602, "id198"]], "Contributors to this release": [[602, "contributors-to-this-release"], [602, "id4"], [602, "id8"], [602, "id13"], [602, "id18"], [602, "id21"], [602, "id25"], [602, "id28"], [602, "id33"], [602, "id34"], [602, "id38"], [602, "id40"], [602, "id45"], [602, "id48"], [602, "id53"], [602, "id58"], [602, "id61"], [602, "id65"], [602, "id71"], [602, "id75"], [602, "id78"], [602, "id84"], [602, "id88"], [602, "id94"], [602, "id98"], [602, "id104"], [602, "id110"], [602, "id115"], [602, "id118"], [602, "id123"], [602, "id128"], [602, "id131"], [602, "id135"], [602, "id139"], [602, "id145"], [602, "id151"], [602, "id156"], [602, "id160"], [602, "id167"], [602, "id174"], [602, "id180"], [602, "id187"], [602, "id193"], [602, "id199"], [602, "id202"]], "Py-ART 1.18.0": [[602, "py-art-1-18-0"]], "Py-ART 1.17.0": [[602, "py-art-1-17-0"]], "Documentation improvements": [[602, "documentation-improvements"], [602, "id11"], [602, "id16"], [602, "id43"], [602, "id51"], [602, "id56"], [602, "id69"], [602, "id82"], [602, "id92"], [602, "id102"], [602, "id108"], [602, "id126"], [602, "id138"], [602, "id143"], [602, "id149"], [602, "id154"], [602, "id158"], [602, "id164"], [602, "id171"], [602, "id178"], [602, "id184"], [602, "id191"], [602, "id197"]], "Py-ART 1.16.1": [[602, "py-art-1-16-1"]], "Py-ART 1.16.0": [[602, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[602, "maintenance-and-upkeep-improvements"], [602, "id19"], [602, "id23"], [602, "id31"], [602, "id39"], [602, "id42"], [602, "id63"], [602, "id68"], [602, "id73"], [602, "id81"], [602, "id86"], [602, "id91"], [602, "id96"], [602, "id101"], [602, "id107"], [602, "id113"], [602, "id117"], [602, "id121"], [602, "id125"], [602, "id130"], [602, "id142"], [602, "id148"], [602, "id163"], [602, "id170"], [602, "id177"], [602, "id183"], [602, "id190"], [602, "id196"], [602, "id201"]], "Py-ART 1.15.2": [[602, "py-art-1-15-2"]], "Py-ART 1.15.1": [[602, "py-art-1-15-1"]], "Py-ART v1.15.0": [[602, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[602, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[602, "py-art-v1-14-5"]], "Merged PRs": [[602, "merged-prs"]], "Py-ART v1.14.4": [[602, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[602, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[602, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[602, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[602, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[602, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[602, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[602, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[602, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[602, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[602, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[602, "py-art-v1-12-5"]], "PyART v1.12.4": [[602, "pyart-v1-12-4"]], "PyART v1.12.2": [[602, "pyart-v1-12-2"]], "PyART v1.12.0": [[602, "pyart-v1-12-0"]], "PyART v1.11.8": [[602, "pyart-v1-11-8"]], "Deprecated features": [[602, "deprecated-features"], [602, "id165"], [602, "id172"], [602, "id185"]], "PyART v1.11.6": [[602, "pyart-v1-11-6"]], "PyART v1.11.5": [[602, "pyart-v1-11-5"]], "PyART v1.11.3": [[602, "pyart-v1-11-3"]], "PyART v1.11.2": [[602, "pyart-v1-11-2"]], "PyART v1.11.1": [[602, "pyart-v1-11-1"]], "PyART v1.11.0": [[602, "pyart-v1-11-0"]], "PyART v1.10.4": [[602, "pyart-v1-10-4"]], "PyART v1.10.3": [[602, "pyart-v1-10-3"]], "PyART v1.10.2": [[602, "pyart-v1-10-2"]], "PyART v1.10.1": [[602, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[602, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[602, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[602, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[602, "pyart-v1-8-0"]], "PyART v1.7.0": [[602, "pyart-v1-7-0"]], "PyART v1.6.0": [[602, "pyart-v1-6-0"]], "PyART v1.5.0": [[602, "pyart-v1-5-0"]], "PyART v1.4.0": [[602, "pyart-v1-4-0"]], "PyART v1.3.0": [[602, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[603, "contributor-s-guide"], [667, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[603, "the-python-arm-radar-toolkit-py-art"], [667, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[603, "important-links"], [667, "important-links"]], "Citing": [[603, "citing"], [667, "citing"]], "Install": [[603, "install"], [656, "install"], [667, "install"]], "Resources": [[603, "resources"], [667, "resources"]], "Code Style": [[603, "code-style"], [667, "code-style"]], "Python File Setup": [[603, "python-file-setup"], [667, "python-file-setup"]], "Testing": [[603, "testing"], [667, "testing"]], "GitHub": [[603, "github"], [667, "github"]], "Py-ART Continuous Integration Setup": [[604, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[605, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[605, "make-the-tagged-git-release"]], "Prepare the release notes": [[605, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[605, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[605, "documentation"]], "Create conda packages on conda-forge": [[605, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[605, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[606, "developer-s-guide"]], "Versions": [[606, "versions"]], "Moment correction examples": [[607, "moment-correction-examples"], [611, "moment-correction-examples"]], "Correct reflectivity attenuation": [[608, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[609, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[610, "computation-times"], [615, "computation-times"], [621, "computation-times"], [640, "computation-times"], [649, "computation-times"], [650, "computation-times"], [655, "computation-times"], [665, "computation-times"]], "Example Gallery": [[611, "example-gallery"]], "Input/Output Examples": [[611, "input-output-examples"], [612, "input-output-examples"]], "Mapping examples": [[611, "mapping-examples"], [616, "mapping-examples"]], "Plotting examples": [[611, "plotting-examples"], [622, "plotting-examples"]], "Retrieval Examples": [[611, "retrieval-examples"], [641, "retrieval-examples"]], "Xradar Examples": [[611, "xradar-examples"], [651, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[613, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[613, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[613, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[614, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[614, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[617, "compare-two-radars-using-gatemapper"]], "Map a single PPI sweep to a Cartesian grid using 2D weighting": [[618, "map-a-single-ppi-sweep-to-a-cartesian-grid-using-2d-weighting"]], "Map a single radar to a Cartesian grid": [[619, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[620, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[623, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[624, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[625, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[626, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[627, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[628, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[629, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[630, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[631, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[632, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [633, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[634, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [635, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[636, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[637, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[638, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[639, "plot-a-cross-section-from-a-ppi-volume"]], "Creating a CFAD diagram": [[642, "creating-a-cfad-diagram"]], "Velocity example": [[642, "velocity-example"]], "Validation": [[642, "validation"]], "Extract a radar column above a point": [[643, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[644, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[645, "convective-stratiform-classification"]], "How the algorithm works": [[645, "how-the-algorithm-works"], [646, "how-the-algorithm-works"]], "Examples": [[645, "examples"]], "Summary of recommendations and best practices": [[645, "summary-of-recommendations-and-best-practices"], [646, "summary-of-recommendations-and-best-practices"]], "References": [[645, "references"], [646, "references"]], "Feature Detection classification": [[646, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[646, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[646, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[647, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[648, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[652, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[653, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[654, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[656, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[656, "what-is-py-art"]], "Citing Py-ART": [[656, "citing-py-art"]], "What can Py-ART do?": [[656, "what-can-py-art-do"]], "Short Courses": [[656, "short-courses"]], "Dependencies": [[656, "dependencies"]], "Optional Dependences": [[656, "optional-dependences"]], "Getting help": [[656, "getting-help"]], "Contributing": [[656, "contributing"]], "Notebook Gallery": [[657, "notebook-gallery"]], "Notebooks": [[657, null]], "Creating a basic ingest of a NetCDF file": [[658, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[659, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[660, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[662, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[663, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[664, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[666, "building-and-installing-py-art"]], "Required Dependencies": [[666, "required-dependencies"]], "Optional Dependencies": [[666, "optional-dependencies"]], "Obtaining the latest source": [[666, "obtaining-the-latest-source"]], "Installing from Source": [[666, "installing-from-source"]], "Frequently asked questions": [[666, "frequently-asked-questions"]], "User Guide": [[668, "user-guide"]], "Setting up an Environment": [[669, "setting-up-an-environment"]], "Anaconda": [[669, "anaconda"]], "Setting a Channel": [[669, "setting-a-channel"]], "Creating an Environment": [[669, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[669, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[669, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [126, "module-pyart.correct"], [169, "module-pyart.exceptions"], [170, "module-pyart.filters"], [204, "module-pyart.graph"], [361, "module-pyart.io"], [382, "module-pyart.lazydict"], [406, "module-pyart.map"], [419, "module-pyart.retrieve"], [455, "module-pyart.testing"], [558, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[126, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[127, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[128, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[141, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[142, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[143, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[144, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[145, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[155, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[156, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[157, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[158, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[159, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[160, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[161, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[162, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[163, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[164, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[165, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[166, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[167, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[168, "pyart.correct.phase_proc_lp_gf"]], "pyart.exceptions": [[169, "module-pyart.exceptions"]], "pyart.filters": [[170, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[171, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[184, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[186, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[187, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[198, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[199, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[201, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[202, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[203, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[204, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[205, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[210, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[213, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[220, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[221, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[233, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[234, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[235, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[251, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[252, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[253, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[254, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[255, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[256, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[257, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[258, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[265, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[266, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[267, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[268, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[270, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[271, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[272, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[273, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[281, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[282, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[283, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[287, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[290, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[291, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[292, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[293, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[294, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[295, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[296, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[297, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[299, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[300, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[301, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[302, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[311, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[312, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[325, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[326, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[327, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[328, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[329, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[330, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[332, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[333, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[334, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[335, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[342, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[358, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[359, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[360, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[361, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[362, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[363, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[364, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[365, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[366, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[367, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[368, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[369, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[370, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[371, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[372, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[373, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[374, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[375, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[376, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[377, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[378, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[379, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[380, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[381, "pyart.io.write_uf"]], "pyart.lazydict": [[382, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[383, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[384, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[385, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[386, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[394, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[395, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[396, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[397, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[398, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[399, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[400, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[401, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[402, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[403, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[404, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[405, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[406, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[407, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[408, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[409, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[410, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[411, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[412, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[413, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[414, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[415, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[416, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[417, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[418, "pyart.map.map_to_grid"]], "pyart.retrieve": [[419, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[420, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[421, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[422, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[423, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[424, "pyart.retrieve.compute_cdr"]], "compute_l() (in module pyart.retrieve)": [[425, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[426, "pyart.retrieve.compute_noisedBZ"]], "compute_snr() (in module pyart.retrieve)": [[427, "pyart.retrieve.compute_snr"]], "conv_strat_raut() (in module pyart.retrieve)": [[428, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[429, "pyart.retrieve.conv_strat_yuter"]], "create_cfad() (in module pyart.retrieve)": [[430, "pyart.retrieve.create_cfad"]], "dealias_spectra() (in module pyart.retrieve)": [[431, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[432, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[433, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[434, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[435, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[436, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[437, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[438, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[439, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[440, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[441, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[442, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[443, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[444, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[445, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[446, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[447, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[448, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[449, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[450, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[451, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[452, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[453, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[454, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[455, "module-pyart.testing"]], "grid (class in pyart.testing)": [[456, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[457, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[458, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[459, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[460, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[461, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[462, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[463, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[464, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[465, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[466, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[467, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[468, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[469, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[470, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[471, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[472, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[473, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[474, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[475, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[476, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[477, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[478, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[479, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[480, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[481, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[482, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[483, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[484, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[491, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[492, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[493, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[494, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[495, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[496, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[497, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[498, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[499, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[500, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[501, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[502, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[503, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[504, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[505, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[506, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[507, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[508, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[509, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[510, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[511, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[512, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[513, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[514, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[515, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[516, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[517, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[518, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[519, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[520, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[521, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[522, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[523, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[524, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[525, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[526, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[527, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[528, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[529, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[530, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[531, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[532, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[533, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[534, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[535, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[536, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[537, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[538, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[539, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[540, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[541, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[542, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[543, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[544, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[545, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[546, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[547, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[548, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[549, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[550, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[551, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[552, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[553, "pyart.testing.make_target_radar"]], "make_target_rhi_radar() (in module pyart.testing)": [[554, "pyart.testing.make_target_rhi_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[555, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[556, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[557, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[558, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[559, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[560, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[561, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[562, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[563, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[564, "pyart.util.column_vertical_profile"]], "cross_section_ppi() (in module pyart.util)": [[565, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[566, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[567, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[568, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[569, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[570, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[571, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[572, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[573, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[574, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[575, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[576, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[577, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[578, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[579, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[580, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[581, "pyart.util.join_radar"]], "mean_of_two_angles() (in module pyart.util)": [[582, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[583, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[584, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[585, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[586, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[587, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[588, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[589, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[590, "pyart.util.to_vpt"]]}})