Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_grid_single_sweep_ppi", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_grid_single_sweep_ppi.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_snr", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single PPI sweep to a Cartesian grid using 2D weighting", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"stream": [0, 62, 364, 480], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 198, 199, 200, 201, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 384, 392, 395, 396, 402, 405, 413, 414, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 461, 463, 466, 474, 475, 492, 559, 560, 571, 579, 581, 589, 591, 593, 595, 596, 618, 627, 637, 638, 656, 659], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 212, 214, 215, 216, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 313, 314, 315, 317, 318, 325, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 390, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 589, 590, 591, 593, 595, 596, 598, 601, 602, 604, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648, 650, 651, 652, 654, 655, 656, 659, 661], "print": [0, 62, 155, 166, 167, 233, 249, 373, 440, 444, 480, 587, 589, 590, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 637, 638, 651, 655, 656], "out": [0, 62, 163, 167, 198, 201, 375, 376, 377, 378, 379, 419, 435, 480, 589, 590, 591, 593, 595, 596, 612, 613, 617, 628, 636, 639, 648, 654, 658, 659, 660], "version": [0, 12, 31, 202, 407, 451, 552, 587, 588, 594, 595, 596, 598, 648, 656, 658, 659, 661], "statu": [0, 588, 596, 659], "inform": [0, 24, 31, 45, 62, 74, 140, 152, 155, 160, 166, 167, 183, 195, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 365, 373, 376, 440, 446, 451, 463, 480, 492, 587, 591, 594, 595, 596, 599, 607, 628, 648, 659], "debug": [0, 155, 160, 166, 167, 233, 249, 373, 440, 595], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 121, 123, 124, 131, 140, 141, 142, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 174, 183, 184, 185, 198, 199, 200, 201, 216, 242, 276, 292, 305, 317, 325, 338, 350, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 392, 394, 402, 405, 407, 413, 414, 418, 419, 424, 425, 434, 435, 440, 441, 442, 446, 448, 451, 453, 463, 465, 466, 469, 470, 472, 474, 475, 476, 492, 545, 557, 558, 566, 567, 571, 574, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 606, 607, 610, 611, 612, 616, 617, 618, 619, 622, 628, 635, 637, 638, 644, 648, 650, 651, 652, 654, 655, 656, 658, 659, 661], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 417, 425, 434, 439, 440, 441, 442, 443, 446, 447, 450, 460, 463, 480, 492, 538, 579, 587, 588, 590, 591, 593, 595, 598, 601, 603, 604, 606, 607, 608, 611, 612, 614, 615, 616, 619, 621, 624, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 642, 645, 646, 647, 648, 649, 655, 656, 657, 658, 661], "can": [0, 12, 16, 29, 45, 54, 57, 74, 121, 123, 124, 127, 140, 152, 156, 157, 160, 163, 165, 170, 183, 195, 198, 199, 200, 201, 216, 276, 305, 338, 360, 367, 368, 370, 373, 377, 378, 379, 413, 414, 434, 440, 441, 442, 444, 449, 463, 472, 475, 492, 587, 588, 589, 590, 591, 593, 595, 596, 598, 606, 607, 610, 616, 635, 637, 638, 644, 650, 651, 652, 654, 655, 656, 658, 659, 661], "run": [0, 229, 425, 434, 450, 566, 588, 590, 595, 596, 597, 598, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648, 658, 659, 661], "script": [0, 29, 595, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 122, 125, 127, 131, 133, 140, 141, 147, 152, 155, 156, 157, 159, 160, 161, 162, 165, 166, 167, 169, 170, 174, 176, 183, 184, 190, 195, 198, 199, 200, 201, 203, 217, 218, 219, 224, 227, 228, 229, 230, 233, 241, 242, 244, 246, 248, 249, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 314, 316, 317, 320, 321, 322, 325, 339, 340, 341, 347, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 390, 392, 395, 402, 404, 407, 409, 410, 411, 413, 414, 417, 418, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 442, 443, 444, 446, 447, 448, 449, 451, 454, 459, 463, 465, 468, 472, 473, 474, 475, 492, 545, 557, 558, 559, 560, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579, 588, 590, 591, 593, 595, 596, 598, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 624, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 654, 655, 656, 657, 659, 661], "directori": [0, 29, 461, 585, 587, 588, 594, 595, 596, 606, 658, 659], "report": [0, 1, 292, 325, 372, 449, 593, 595, 648], "dependeci": 0, "befor": [0, 31, 56, 160, 164, 167, 405, 425, 434, 448, 451, 474, 589, 590, 591, 596, 610, 637, 648, 652, 656, 659], "build": [0, 121, 123, 124, 127, 131, 133, 140, 147, 152, 170, 174, 176, 183, 190, 195, 379, 589, 593, 595, 596, 598, 648, 659, 660], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 121, 122, 123, 124, 125, 127, 140, 152, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 203, 205, 207, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 296, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 329, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 405, 412, 413, 414, 416, 417, 419, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 453, 463, 465, 472, 474, 475, 492, 545, 552, 557, 558, 559, 560, 566, 567, 574, 579, 581, 582, 583, 584, 588, 592, 593, 594, 595, 596, 597, 598, 600, 601, 603, 604, 605, 606, 607, 609, 614, 615, 616, 617, 619, 622, 623, 625, 626, 627, 628, 629, 633, 635, 637, 638, 643, 647, 648, 650, 651, 652, 654, 655, 656, 657, 658, 659, 661], "python": [0, 29, 377, 587, 589, 590, 591, 593, 594, 595, 598, 601, 602, 604, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 650, 651, 652, 654, 655, 656, 658, 661], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 417, 418, 424, 425, 434, 437, 438, 439, 440, 441, 442, 443, 446, 447, 451, 463, 492, 543, 552, 558, 569, 570, 579, 585, 590, 591, 593, 594, 599, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 643, 647, 649, 650, 651, 652, 654, 657, 660, 661], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 460, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 480, 492, 495, 537, 538, 539, 540, 541, 542, 543, 553, 554, 555, 556, 557, 558, 559, 560, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 587, 589, 590, 595, 596, 631, 637, 638, 651, 652, 654, 656, 658, 659], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 121, 122, 124, 125, 161, 162, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 386, 387, 397, 398, 419, 480, 548, 549, 550, 551, 553, 554, 555, 556, 567, 572, 589, 590, 591, 594, 595, 596, 606, 607, 610, 648, 650, 652, 654, 659], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 127, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 198, 199, 200, 201, 203, 218, 233, 241, 244, 249, 256, 263, 278, 292, 307, 317, 325, 340, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 386, 387, 390, 393, 397, 398, 403, 405, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 444, 445, 447, 448, 449, 450, 451, 452, 459, 460, 464, 465, 466, 468, 469, 470, 472, 480, 489, 517, 535, 539, 540, 541, 542, 545, 558, 566, 567, 569, 570, 571, 574, 575, 578, 581, 583, 584, 587, 588, 590, 591, 593, 595, 596, 606, 610, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 631, 635, 637, 638, 639, 648, 649, 650, 654, 655, 659], "sy": 0, "stdout": [0, 62, 480], "descript": [1, 16, 18, 30, 126, 168, 169, 202, 359, 380, 404, 415, 450, 552, 579, 591, 596, 598, 648, 659], "addit": [1, 2, 7, 8, 12, 14, 19, 160, 161, 162, 164, 216, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 358, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 405, 412, 414, 425, 434, 571, 587, 589, 590, 595, 598, 604, 606, 634, 637, 638, 648], "class": [1, 18, 19, 30, 31, 41, 45, 74, 126, 127, 169, 170, 202, 203, 233, 244, 249, 263, 292, 317, 325, 380, 381, 394, 404, 405, 406, 408, 413, 439, 450, 451, 461, 463, 492, 585, 589, 590, 591, 595, 596, 648, 654, 655, 659], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 126, 164, 165, 169, 198, 199, 200, 201, 202, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 276, 277, 284, 288, 289, 292, 305, 306, 316, 321, 322, 325, 338, 339, 349, 354, 355, 358, 359, 361, 364, 367, 368, 374, 377, 404, 405, 409, 410, 411, 413, 414, 415, 419, 424, 425, 434, 440, 442, 448, 450, 474, 552, 558, 570, 571, 574, 578, 579, 584, 585, 590, 591, 595, 596, 616, 635, 637, 638, 644, 648, 652, 654, 656, 658, 659], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 127, 141, 142, 170, 184, 185, 217, 228, 277, 288, 306, 321, 339, 354, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 587, 593, 595, 601, 602, 604, 605, 608, 610, 611, 612, 613, 616, 617, 618, 619, 622, 624, 627, 628, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648, 650, 651, 652, 654, 655, 656, 657], "write": [1, 15, 359, 375, 376, 377, 378, 379, 450, 461, 594, 595, 604, 605, 651], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 131, 140, 152, 158, 159, 160, 161, 162, 174, 183, 195, 203, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 258, 260, 262, 263, 277, 279, 284, 287, 288, 289, 292, 306, 308, 316, 317, 320, 321, 322, 325, 339, 341, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 404, 405, 412, 414, 416, 419, 424, 426, 429, 434, 435, 440, 441, 442, 444, 445, 446, 449, 451, 452, 463, 464, 465, 468, 469, 470, 472, 473, 474, 475, 476, 485, 486, 488, 492, 513, 514, 516, 538, 543, 545, 566, 571, 581, 584, 595, 596, 601, 602, 604, 605, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 621, 622, 624, 625, 626, 627, 628, 630, 632, 634, 635, 637, 638, 640, 643, 644, 646, 647, 648, 649, 650, 651, 652, 656, 657, 659], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 163, 164, 166, 167, 216, 220, 224, 225, 227, 228, 229, 230, 242, 276, 280, 284, 285, 287, 288, 289, 305, 309, 316, 317, 318, 320, 321, 322, 338, 342, 349, 350, 351, 353, 354, 355, 359, 364, 371, 377, 378, 412, 413, 414, 422, 438, 440, 442, 451, 463, 469, 470, 472, 473, 474, 475, 476, 492, 539, 540, 541, 542, 543, 558, 566, 567, 584, 587, 590, 591, 593, 596, 598, 599, 616, 618, 648, 656, 659], "format": [1, 12, 13, 39, 40, 45, 74, 205, 207, 217, 219, 224, 227, 228, 229, 230, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 359, 361, 370, 372, 374, 375, 376, 378, 459, 460, 463, 492, 587, 589, 590, 591, 595, 596, 598, 628, 648, 650, 659], "These": [1, 29, 127, 160, 170, 255, 377, 414, 589, 596, 606, 616, 637, 648, 655, 658, 659], "auxiliari": 1, "input": [1, 166, 167, 377, 434, 438, 439, 442, 566, 571, 587, 589, 637, 638, 655], "output": [1, 13, 62, 159, 377, 419, 424, 439, 480, 568, 588, 590, 593, 595, 648], "routin": [1, 12, 169, 375, 413, 595, 648], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 122, 125, 140, 152, 155, 156, 157, 160, 161, 162, 164, 165, 167, 169, 183, 195, 198, 199, 200, 201, 202, 217, 223, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 277, 283, 284, 288, 289, 306, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 345, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 383, 411, 412, 413, 414, 416, 418, 419, 424, 425, 427, 428, 429, 431, 432, 434, 440, 442, 446, 451, 463, 474, 476, 492, 540, 541, 542, 559, 560, 567, 568, 572, 573, 580, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 598, 602, 604, 606, 607, 610, 611, 616, 618, 619, 627, 630, 635, 637, 638, 648, 650, 651, 652, 654, 655, 656, 658, 659, 661], "well": [1, 163, 165, 198, 199, 200, 201, 350, 369, 371, 414, 587, 589, 595, 596, 607, 617, 638, 648, 654, 655, 659], "polish": 1, "those": [1, 48, 55, 141, 142, 161, 162, 184, 185, 373, 413, 466, 473, 585, 591, 593, 661], "io": [1, 127, 170, 412, 587, 588, 589, 590, 591, 593, 595, 596, 601, 602, 606, 607, 608, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648, 651, 652, 654, 655, 656, 657, 658, 659, 661], "thei": [1, 4, 58, 131, 133, 140, 160, 161, 162, 164, 174, 176, 183, 350, 365, 373, 379, 424, 440, 476, 591, 593, 596, 637, 659], "mai": [1, 29, 131, 133, 140, 147, 152, 160, 161, 174, 176, 183, 190, 195, 292, 325, 369, 371, 377, 381, 414, 424, 442, 552, 591, 593, 598, 637, 648], "requir": [1, 31, 45, 74, 121, 123, 124, 160, 163, 164, 373, 377, 414, 448, 451, 463, 492, 567, 587, 588, 595, 596, 607, 648, 659, 661], "depend": [1, 156, 157, 414, 428, 587, 591, 595, 596, 598, 659], "beyond": [1, 658], "standard": [1, 40, 45, 62, 74, 119, 120, 160, 375, 376, 377, 419, 441, 460, 463, 480, 492, 543, 555, 556, 573, 587, 591, 595, 596, 650, 651, 652, 659], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 417, 418, 424, 425, 434, 437, 438, 439, 440, 441, 442, 443, 446, 447, 451, 463, 492, 543, 552, 558, 569, 570, 579, 585, 591, 593, 599, 601, 602, 604, 605, 606, 607, 615, 616, 618, 635, 638, 643, 647, 649, 650, 651, 652, 654, 657, 660, 661], "instal": [1, 10, 121, 123, 124, 163, 164, 377, 590, 593, 595, 598, 660, 661], "non": [1, 121, 123, 124, 162, 373, 375, 424, 425, 434, 440, 442, 591, 595, 637], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 202, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 439, 440, 441, 442, 443, 446, 447, 451, 452, 463, 464, 465, 467, 472, 480, 492, 495, 538, 552, 571, 579, 583, 587, 590, 591, 593, 594, 595, 606, 638, 651, 656], "support": [1, 244, 317, 350, 361, 368, 369, 370, 371, 372, 380, 381, 405, 440, 589, 591, 593, 595, 596, 627, 648, 650, 651, 652, 654, 655, 656, 658, 659], "fulli": [1, 367, 593, 658], "test": [1, 12, 160, 364, 369, 371, 381, 588, 591, 595, 597, 598, 601, 602, 610, 612, 613, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 644, 645, 646, 648, 650], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 127, 130, 137, 140, 144, 149, 152, 160, 161, 162, 164, 165, 166, 167, 170, 173, 180, 183, 187, 192, 195, 200, 217, 223, 224, 227, 228, 229, 230, 244, 277, 283, 284, 287, 288, 289, 306, 312, 316, 317, 320, 321, 322, 339, 345, 349, 350, 353, 354, 355, 358, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 382, 394, 395, 412, 413, 414, 418, 424, 425, 434, 435, 438, 440, 442, 451, 453, 463, 466, 474, 475, 492, 567, 585, 587, 588, 589, 590, 591, 592, 595, 596, 598, 604, 616, 635, 636, 637, 640, 648, 656, 657, 659, 661], "pleas": [1, 56, 292, 325, 474, 587, 588, 591, 593, 596, 648, 650, 651, 652, 654, 655, 656, 659], "your": [1, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589, 590, 591, 594, 596, 598, 604, 615, 617, 633, 637, 638, 648, 657, 658, 659, 661], "own": [1, 12, 590, 598, 616, 648, 658], "risk": [1, 589], "bug": [1, 590, 596, 599, 648, 658, 659], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 127, 131, 141, 142, 159, 160, 161, 162, 167, 170, 174, 184, 185, 203, 243, 257, 317, 350, 358, 359, 360, 373, 376, 378, 379, 413, 414, 425, 434, 440, 441, 442, 444, 446, 448, 449, 451, 463, 465, 472, 492, 566, 567, 591, 594, 595, 596, 598, 616, 637, 648, 658, 659, 661], "fix": [1, 587, 590, 596, 597, 599, 604, 605, 608, 630, 650, 657, 658, 659, 661], "them": [1, 4, 5, 6, 56, 160, 161, 162, 163, 233, 249, 317, 350, 364, 373, 414, 474, 590, 596, 598, 616, 648, 659, 661], "prioriti": [1, 661], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 205, 237, 250, 265, 294, 317, 327, 350, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 460, 587, 588, 589, 591, 595, 596, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 659], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 158, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 452, 464, 465, 467, 472, 488, 495, 516, 581, 610, 654], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 129, 131, 133, 139, 140, 141, 142, 143, 145, 147, 152, 153, 155, 160, 161, 162, 166, 167, 170, 172, 174, 176, 182, 183, 184, 185, 186, 188, 190, 195, 196, 205, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 277, 279, 284, 287, 288, 289, 294, 306, 308, 316, 317, 320, 321, 322, 327, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 413, 414, 418, 424, 425, 428, 431, 434, 440, 441, 442, 444, 452, 453, 460, 461, 464, 465, 466, 469, 470, 472, 474, 475, 476, 550, 551, 561, 562, 563, 564, 565, 566, 574, 584, 587, 589, 590, 591, 593, 595, 596, 618, 625, 627, 628, 630, 637, 638, 650, 651, 655, 656, 659], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 466, 595], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 160, 161, 162, 216, 217, 218, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 276, 277, 278, 284, 288, 289, 305, 306, 307, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 340, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 412, 413, 414, 440, 561, 562, 563, 564, 565, 590, 591, 595], "d3r": [2, 595], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 362, 363, 364, 366, 370, 375, 376, 435, 460, 561, 564, 587, 595, 648, 649], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 40, 45, 46, 47, 49, 54, 74, 77, 121, 123, 124, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 446, 447, 451, 452, 460, 463, 464, 465, 467, 472, 492, 495, 538, 571, 579, 581, 583, 589, 591, 593, 595], "odim_h5": [2, 8, 595], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 121, 123, 124, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 203, 263, 292, 317, 325, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 381, 413, 414, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 443, 445, 446, 447, 451, 452, 454, 459, 463, 464, 492, 579, 587, 591, 650], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 122, 123, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 170, 174, 176, 183, 190, 195, 217, 224, 228, 229, 230, 232, 242, 244, 246, 248, 255, 258, 260, 262, 277, 284, 288, 289, 291, 306, 314, 315, 316, 317, 318, 321, 322, 324, 339, 347, 348, 349, 350, 354, 355, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 414, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 446, 447, 449, 451, 452, 453, 460, 463, 464, 465, 466, 469, 470, 472, 474, 475, 480, 492, 559, 560, 567, 574, 579, 583, 584, 590, 591, 595, 637, 656], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 121, 123, 124, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 385, 412, 413, 414, 417, 418, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 443, 445, 446, 447, 451, 452, 463, 464, 465, 467, 492, 495, 537, 579, 607, 638, 651, 656], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 122, 125, 222, 244, 255, 282, 292, 311, 313, 314, 315, 317, 318, 325, 344, 346, 347, 348, 350, 351, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 392, 402, 419, 443, 451, 463, 492, 587, 589, 590, 591, 593, 595, 596, 610, 614, 615, 617, 618, 633, 635, 637, 638, 645, 648, 649, 657, 659], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 217, 218, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 276, 277, 278, 279, 284, 287, 288, 289, 292, 293, 294, 295, 296, 297, 302, 305, 306, 307, 308, 316, 317, 320, 321, 322, 325, 326, 327, 328, 329, 330, 335, 338, 339, 340, 341, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 459, 463, 464, 465, 466, 467, 472, 475, 488, 492, 495, 516, 539, 540, 541, 542, 543, 545, 548, 549, 550, 551, 557, 558, 570, 571, 579, 581, 582, 583, 587, 589, 590, 591, 593, 595, 596, 601, 604, 606, 610, 611, 612, 613, 616, 617, 619, 630, 634, 635, 636, 637, 638, 639, 644, 646, 648, 649, 650, 652, 654, 655, 656, 659], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 126, 127, 140, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 202, 203, 216, 217, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 276, 277, 282, 284, 288, 289, 292, 305, 306, 311, 314, 316, 317, 321, 322, 325, 338, 339, 344, 347, 349, 350, 354, 355, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 404, 405, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 459, 492, 535, 540, 541, 542, 545, 548, 549, 550, 551, 558, 559, 560, 563, 565, 566, 568, 569, 570, 571, 574, 575, 579, 580, 581, 582, 583, 584, 587, 588, 591, 593, 595, 600, 601, 602, 604, 605, 606, 607, 609, 611, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 636, 637, 638, 639, 640, 641, 644, 645, 646, 649, 650, 652, 654, 655, 657, 660], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 121, 123, 124, 140, 152, 158, 160, 163, 164, 165, 183, 195, 199, 200, 205, 207, 217, 218, 223, 224, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 283, 284, 288, 289, 294, 296, 306, 307, 312, 315, 316, 317, 321, 322, 327, 329, 339, 340, 345, 348, 349, 350, 354, 355, 358, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 388, 392, 399, 402, 414, 418, 424, 425, 427, 428, 429, 431, 432, 434, 435, 440, 441, 442, 443, 446, 451, 452, 463, 465, 466, 467, 474, 492, 495, 557, 559, 560, 567, 581, 588, 590, 591, 592, 593, 596, 598, 637, 648, 650, 651, 652, 654, 655, 656, 658, 659, 661], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 161, 162, 203, 263, 292, 325, 361, 365, 367, 368, 369, 370, 372, 373, 374, 378, 379, 424, 428, 440, 463, 492, 535, 588, 591, 595, 596, 638, 648, 656, 659], "found": [2, 7, 8, 12, 14, 29, 163, 361, 365, 367, 368, 369, 370, 372, 373, 374, 388, 399, 412, 413, 414, 419, 435, 587, 589, 591, 593, 595, 596, 598, 607, 648, 658, 659, 661], "doe": [2, 7, 8, 12, 14, 49, 77, 121, 123, 124, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 467, 495, 584, 589, 591, 595, 596, 598, 628, 650, 658, 659, 661], "appear": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 574, 591], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 159, 160, 205, 237, 249, 250, 265, 294, 325, 327, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 385, 392, 402, 404, 428, 431, 432, 463, 492, 545, 567, 583, 588, 590, 591, 593, 596, 598, 606, 616, 637, 648, 654, 656, 658, 659, 661], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 121, 122, 123, 124, 125, 127, 129, 131, 132, 133, 135, 138, 140, 143, 145, 146, 147, 150, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 178, 181, 183, 186, 188, 189, 190, 193, 195, 197, 198, 199, 200, 201, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 306, 307, 308, 310, 313, 314, 315, 316, 317, 319, 320, 321, 322, 339, 340, 341, 343, 346, 347, 348, 349, 350, 352, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 394, 399, 400, 413, 414, 416, 418, 419, 422, 424, 425, 428, 431, 432, 434, 437, 439, 440, 441, 442, 446, 448, 451, 463, 466, 492, 540, 541, 542, 543, 557, 566, 567, 571, 572, 573, 587, 589, 590, 591, 595, 596, 607, 610, 616, 619, 635, 636, 637, 638, 644, 651, 652, 655, 659], "place": [2, 7, 8, 12, 14, 218, 222, 223, 241, 243, 256, 257, 278, 282, 283, 307, 311, 312, 340, 344, 345, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 584, 595, 654, 658], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 122, 125, 127, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 198, 199, 200, 201, 203, 233, 242, 249, 263, 292, 315, 325, 348, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 380, 381, 394, 412, 413, 414, 418, 419, 424, 425, 427, 434, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 463, 465, 492, 543, 558, 571, 587, 591, 595, 596, 619, 637, 638, 642, 648, 659], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 224, 227, 228, 229, 230, 232, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 284, 287, 288, 289, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 316, 317, 320, 321, 322, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 349, 350, 353, 354, 355, 357, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 384, 396, 414, 416, 417, 419, 424, 425, 428, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 451, 463, 469, 470, 472, 474, 475, 480, 492, 540, 541, 542, 566, 567, 579, 588, 589, 595, 596, 627, 628, 637, 638, 648, 658, 659, 661], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 121, 123, 124, 155, 156, 157, 160, 163, 165, 166, 167, 198, 199, 200, 201, 222, 223, 227, 282, 283, 287, 311, 312, 320, 344, 345, 353, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 379, 413, 414, 418, 439, 440, 446, 451, 463, 492, 557, 558, 587, 590, 591, 594, 595, 617, 618, 635, 637], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 417, 425, 434, 439, 440, 441, 442, 443, 446, 447, 579, 587, 588, 591, 593, 595, 606, 610, 636, 644], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 451, 469, 470, 472, 473, 474, 475, 476, 558, 595, 596, 636, 637, 638, 639, 640, 641, 644, 652, 657, 659], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 155, 156, 157, 160, 161, 162, 166, 167, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 417, 419, 424, 440, 441, 442, 443, 447, 451, 452, 463, 464, 465, 492, 537, 539, 545, 579, 594, 595, 607, 625, 626, 630, 656], "dure": [2, 7, 8, 12, 14, 19, 140, 152, 159, 160, 161, 162, 183, 195, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 425, 433, 440, 446, 587, 638, 658, 661], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 121, 122, 123, 124, 125, 129, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 172, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 199, 200, 205, 207, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 279, 282, 283, 284, 287, 288, 289, 292, 294, 296, 306, 307, 308, 311, 312, 316, 317, 320, 321, 322, 325, 327, 329, 339, 340, 341, 344, 345, 349, 350, 353, 354, 355, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 392, 394, 399, 400, 402, 405, 412, 413, 414, 416, 418, 419, 424, 425, 427, 428, 431, 432, 434, 435, 439, 440, 441, 442, 446, 448, 451, 452, 453, 463, 465, 466, 473, 474, 475, 476, 480, 492, 545, 557, 559, 560, 566, 567, 568, 571, 574, 580, 581, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 595, 596, 598, 601, 606, 607, 610, 611, 616, 617, 618, 619, 622, 627, 628, 635, 637, 638, 650, 651, 652, 654, 655, 656, 658, 659, 661], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 131, 133, 140, 141, 142, 147, 152, 155, 156, 157, 160, 161, 162, 163, 165, 166, 167, 174, 176, 183, 184, 185, 190, 195, 199, 200, 292, 325, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 414, 419, 439, 464, 465, 539, 584, 588, 592, 599, 650], "success": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 598], "unless": [2, 7, 8, 12, 14, 58, 121, 123, 124, 162, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 476, 591], "explicitli": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 127, 131, 133, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 169, 170, 174, 176, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 413, 414, 438, 448, 463, 468, 474, 475, 492, 558, 588, 590, 591, 593, 594, 595, 596, 598, 606, 610, 630, 648, 655, 658, 659], "introduct": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 596, 659], "specif": [2, 7, 8, 12, 14, 140, 152, 155, 156, 157, 183, 195, 325, 350, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 414, 427, 428, 429, 431, 432, 435, 439, 440, 441, 442, 571, 589, 591, 595, 596, 601, 616, 637, 638, 648, 659, 661], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 121, 123, 124, 131, 133, 147, 160, 161, 162, 169, 174, 176, 190, 217, 219, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 277, 279, 284, 288, 289, 306, 308, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 346, 347, 348, 349, 350, 351, 354, 355, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 388, 399, 405, 413, 414, 440, 441, 442, 451, 463, 466, 474, 475, 492, 579, 583, 589, 590, 591, 595, 602, 606, 654, 655, 658], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 131, 133, 140, 147, 152, 155, 160, 161, 162, 166, 167, 170, 174, 176, 183, 190, 195, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 412, 414, 418, 424, 425, 428, 431, 432, 434, 440, 441, 442, 444, 446, 452, 453, 460, 464, 465, 466, 469, 470, 472, 474, 475, 476, 574, 584, 591], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 123, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 412, 413, 414, 418, 424, 425, 428, 431, 432, 434, 440, 441, 442, 446, 451, 452, 453, 460, 461, 463, 464, 465, 466, 469, 470, 472, 474, 475, 476, 492, 550, 551, 566, 574, 584, 587, 588, 589, 590, 591, 593, 595, 596, 611, 618, 625, 626, 627, 628, 637, 638, 640, 644, 651, 652, 656, 659], "mdv": [2, 8, 12, 14, 367, 368, 378, 588, 595, 602, 604, 612, 615, 633, 648, 652, 654, 657], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 121, 123, 124, 140, 152, 160, 162, 183, 195, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 589, 590, 591, 593, 595, 596, 606, 607, 610, 611, 628, 659], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 418, 587, 588, 589, 590, 591, 593, 595, 601, 610], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 122, 125, 155, 156, 157, 158, 160, 161, 162, 163, 198, 201, 222, 242, 282, 311, 344, 350, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 405, 406, 407, 408, 412, 413, 414, 416, 418, 419, 422, 423, 424, 425, 434, 437, 439, 440, 441, 442, 446, 448, 451, 463, 492, 538, 552, 553, 554, 557, 566, 567, 572, 573, 579, 581, 583, 587, 588, 589, 590, 595, 598, 604, 607, 611, 619, 630, 637, 638, 649, 652, 655, 658], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 141, 142, 155, 156, 157, 159, 160, 162, 166, 167, 184, 185, 217, 228, 244, 277, 288, 306, 317, 321, 339, 350, 354, 361, 365, 367, 368, 369, 370, 371, 372, 373, 414, 440, 448, 468, 474, 475, 559, 560, 574, 581, 587, 588, 589, 591, 593, 595, 596, 599, 610, 611, 618, 628, 637, 638, 651, 652, 654, 659], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 131, 133, 140, 147, 152, 155, 156, 157, 160, 174, 176, 183, 190, 195, 217, 228, 249, 277, 288, 306, 317, 321, 339, 354, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 425, 434, 437, 453, 463, 466, 474, 492, 543, 587, 589, 590, 591, 592, 593, 595, 596, 606, 607, 635, 637, 638, 648, 654, 658, 659, 660, 661], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 121, 123, 124, 160, 161, 162, 317, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 383, 385, 388, 389, 390, 392, 394, 399, 400, 402, 413, 414, 435, 451, 452, 463, 464, 465, 492, 545, 589, 591, 650, 651, 655], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 203, 219, 223, 226, 249, 263, 279, 283, 286, 292, 308, 312, 319, 325, 341, 345, 352, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 407, 414, 435, 438, 466, 558, 559, 560, 569, 590, 591, 593, 594, 595, 596, 598, 606, 648, 659, 660], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 149, 152, 155, 156, 157, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 192, 195, 198, 199, 200, 201, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 424, 440, 441, 442, 444, 448, 449, 466, 602, 612, 655], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 158, 161, 162, 164, 165, 166, 167, 199, 200, 217, 218, 224, 227, 228, 229, 230, 241, 256, 277, 278, 284, 287, 288, 289, 306, 307, 316, 317, 320, 321, 322, 339, 340, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 405, 412, 414, 419, 425, 428, 434, 463, 466, 492, 567, 589, 590, 591, 593, 595, 596, 606, 616, 627, 637, 638, 644, 652, 659], "after": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 440, 587, 589, 591, 595, 596, 598, 607, 637, 658, 659, 661], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 231, 232, 242, 244, 277, 279, 284, 287, 288, 289, 290, 291, 306, 308, 316, 317, 320, 321, 322, 323, 324, 339, 341, 349, 350, 353, 354, 355, 356, 357, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 386, 387, 390, 391, 397, 398, 401, 414, 424, 427, 428, 429, 431, 432, 440, 441, 442, 451, 463, 474, 475, 476, 492, 540, 541, 542, 550, 551, 557, 566, 576, 577, 588, 589, 595, 596, 607, 610, 611, 617, 624, 627, 628, 631, 632, 637, 638, 644, 648, 652, 658, 659, 660], "you": [2, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587, 590, 591, 592, 593, 594, 596, 598, 606, 637, 638, 648, 650, 651, 652, 654, 655, 656, 658, 659, 661], "want": [2, 588, 590, 591, 593, 607, 648, 655, 656, 661], "altitud": [2, 31, 45, 56, 74, 166, 167, 203, 414, 419, 446, 451, 463, 474, 492, 568, 580, 587, 590, 595, 628, 640, 650, 654, 656], "provid": [2, 6, 45, 48, 74, 160, 202, 223, 283, 312, 317, 345, 363, 364, 365, 370, 373, 377, 378, 379, 381, 386, 387, 393, 394, 397, 398, 403, 405, 463, 466, 492, 571, 579, 585, 587, 590, 591, 593, 594, 596, 607, 635, 637, 648, 655, 658, 659], "np": [2, 405, 422, 449, 578, 587, 589, 590, 591, 593, 595, 596, 610, 612, 616, 619, 624, 627, 628, 630, 635, 637, 638, 639, 640, 650, 651, 652, 654, 655, 656, 659], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 164, 170, 174, 176, 183, 184, 185, 190, 195, 203, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 288, 289, 292, 306, 307, 308, 313, 314, 316, 317, 321, 322, 325, 339, 340, 341, 346, 347, 349, 350, 354, 355, 405, 413, 414, 422, 425, 426, 434, 439, 441, 442, 443, 448, 449, 451, 453, 459, 465, 469, 470, 472, 473, 474, 475, 476, 553, 554, 555, 556, 557, 564, 565, 567, 572, 573, 576, 577, 578, 587, 591, 595, 596, 610, 624, 637, 638, 640, 650, 651, 652, 654, 655, 656, 659], "295": [2, 595], "dtype": [2, 412, 414, 587, 590, 591, 595, 650, 652, 656], "float64": [2, 413, 414, 587, 590, 635, 656], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 128, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 198, 199, 200, 201, 204, 205, 206, 207, 208, 237, 238, 239, 240, 250, 251, 252, 253, 264, 265, 266, 267, 268, 293, 294, 295, 296, 297, 326, 327, 328, 329, 330, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 388, 389, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 453, 454, 461, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 485, 486, 487, 488, 489, 490, 491, 505, 506, 507, 508, 513, 514, 515, 516, 517, 518, 519, 535, 537, 538, 539, 540, 541, 542, 543, 545, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 583, 587, 589, 590, 591, 595, 596, 635, 637, 638, 651, 654, 656, 659], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 232, 277, 284, 287, 288, 289, 291, 306, 316, 317, 320, 321, 322, 324, 339, 349, 350, 353, 354, 355, 357, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 394, 412, 413, 414, 416, 417, 418, 419, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 463, 464, 468, 469, 470, 472, 473, 474, 475, 476, 492, 557, 558, 559, 560, 566, 570, 579, 581, 584, 587, 588, 591, 595, 596, 607, 620, 621, 638, 648, 650, 651, 654, 656, 658, 659, 661], "edg": [3, 33, 57, 120, 123, 160, 161, 162, 163, 164, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 438, 442, 453, 475, 543, 589, 590, 591, 627, 628, 637], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 379, 590, 595], "gamic": [4, 595], "hdf5": [4, 8, 595, 648], "unlik": [4, 5, 6, 364], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 160, 161, 162, 163, 164, 165, 200, 217, 219, 224, 227, 228, 229, 230, 244, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 366, 369, 371, 373, 377, 405, 414, 425, 434, 444, 448, 451, 459, 463, 492, 540, 541, 542, 589, 590, 591, 596, 637, 638, 648, 650, 658, 659, 661], "still": [4, 5, 6, 160, 292, 325, 364, 379, 414, 574, 593, 595, 596, 606, 659], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 218, 222, 223, 224, 227, 228, 229, 230, 233, 241, 244, 246, 248, 249, 255, 256, 258, 260, 262, 277, 278, 282, 283, 284, 287, 288, 289, 306, 307, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 360, 361, 363, 364, 369, 370, 373, 374, 376, 377, 378, 379, 381, 409, 410, 411, 412, 413, 414, 417, 418, 435, 439, 440, 441, 442, 446, 447, 448, 451, 453, 463, 468, 472, 485, 486, 488, 489, 492, 513, 514, 516, 517, 557, 558, 559, 560, 567, 569, 570, 571, 572, 573, 579, 583, 587, 588, 589, 590, 591, 593, 595, 596, 598, 602, 606, 607, 610, 616, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 635, 638, 644, 645, 646, 648, 652, 654, 656, 658, 659], "renam": [4, 5, 6, 29, 364, 374, 595], "uniform": [4, 5, 6, 58, 161, 162, 364, 372, 418, 424, 476, 595, 616, 619, 648, 650], "forc": [4, 5, 6, 364, 374, 418, 591, 595], "extract": [4, 217, 277, 306, 339, 373, 424, 435, 558, 559, 560, 570, 593, 595, 604, 610, 632, 634, 637, 638, 641, 648, 657], "valid": [4, 31, 45, 74, 154, 155, 160, 197, 218, 241, 256, 278, 307, 340, 369, 378, 379, 414, 451, 463, 492, 558, 559, 560, 567, 595, 596, 611, 659], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 157, 203, 217, 219, 224, 225, 226, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 263, 277, 279, 284, 285, 286, 288, 289, 292, 306, 308, 316, 317, 318, 319, 321, 322, 325, 339, 341, 349, 350, 351, 352, 354, 355, 372, 422, 424, 440, 442, 463, 473, 475, 492, 558, 566, 581, 587, 589, 590, 591, 595, 611, 616, 621, 624, 630, 640, 650, 656], "valid_min": [4, 160, 161, 162, 365, 595, 637, 638, 656], "valid_max": [4, 160, 161, 162, 365, 637, 638, 656], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 166, 167, 174, 176, 183, 184, 185, 190, 195, 217, 224, 228, 229, 230, 244, 249, 277, 284, 288, 289, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 369, 370, 372, 373, 375, 379, 381, 405, 414, 418, 428, 431, 432, 440, 441, 442, 448, 450, 451, 463, 464, 465, 469, 470, 472, 474, 475, 492, 567, 588, 589, 590, 593, 595, 596, 597, 598, 599, 616, 637, 638, 648, 651, 652, 655, 658, 659, 661], "present": [4, 29, 31, 45, 74, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 392, 402, 414, 451, 463, 492, 591, 650, 655], "unit": [4, 55, 121, 122, 123, 124, 125, 161, 162, 209, 212, 213, 214, 215, 222, 242, 269, 272, 273, 274, 275, 282, 298, 301, 302, 303, 304, 311, 331, 334, 335, 336, 337, 344, 365, 367, 416, 434, 437, 450, 473, 545, 567, 587, 591, 593, 595, 596, 597, 625, 630, 637, 638, 648, 651, 656, 659], "avail": [4, 16, 45, 56, 57, 58, 74, 140, 152, 155, 156, 157, 164, 183, 195, 202, 242, 244, 246, 248, 258, 260, 262, 367, 377, 463, 474, 475, 476, 492, 587, 589, 590, 591, 595, 598, 604, 606, 616, 648], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 122, 125, 439, 448, 449, 587, 589, 590, 591, 592, 593, 595, 596, 607, 640, 650, 651, 652, 654, 655, 656, 659], "k": [5, 125, 221, 222, 223, 225, 226, 227, 281, 282, 283, 285, 286, 287, 310, 311, 312, 318, 319, 320, 343, 344, 345, 351, 352, 353, 384, 388, 389, 391, 392, 396, 399, 400, 401, 402, 424, 440, 448, 589, 593, 596, 617, 624, 627, 628, 659], "band": [5, 9, 155, 157, 159, 377, 427, 429, 436, 440, 441, 442, 446, 587, 595, 638], "arm": [5, 6, 40, 362, 363, 375, 376, 435, 460, 539, 545, 587, 589, 591, 593, 595, 598, 613, 628, 650, 651, 652, 654, 655, 656, 658, 661], "zenith": 5, "kazr": [5, 6, 595], "ingest": [5, 590, 595, 648, 649], "spectra": [6, 74, 117, 426, 445, 492, 535, 542, 549, 567, 595], "radar_spectra": 6, "delay_field_load": [6, 361, 364, 367, 368, 369, 372, 374], "delai": [6, 361, 364, 367, 368, 369, 372, 595], "load": [6, 29, 361, 364, 367, 368, 369, 372, 380, 381, 390, 595, 611, 656], "until": [6, 29, 161, 361, 364, 367, 368, 369, 372, 598], "particular": [6, 361, 364, 367, 368, 369, 372, 414, 590, 598, 648], "access": [6, 19, 31, 45, 56, 57, 74, 141, 142, 184, 185, 361, 364, 367, 368, 369, 372, 381, 451, 463, 474, 475, 492, 538, 590, 606, 607, 654, 656], "In": [6, 121, 123, 124, 162, 164, 359, 361, 364, 367, 368, 369, 371, 372, 392, 402, 405, 416, 419, 440, 449, 557, 558, 587, 589, 590, 591, 593, 596, 601, 602, 607, 637, 638, 648, 651, 652, 654, 655, 658, 659], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 140, 141, 142, 152, 160, 183, 184, 185, 195, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 367, 368, 369, 372, 375, 376, 379, 451, 454, 455, 456, 457, 463, 474, 475, 481, 482, 483, 484, 492, 509, 510, 511, 512, 587, 590, 591, 593, 635, 650, 656], "radarspectra": [6, 445, 542], "lazyloaddict": [6, 31, 45, 74, 361, 364, 367, 368, 369, 372, 451, 463, 492], "speedup": [6, 244, 317, 350, 364, 591, 595], "where": [6, 15, 56, 57, 119, 122, 125, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 165, 167, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 217, 224, 227, 228, 229, 230, 243, 257, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 358, 364, 419, 425, 434, 443, 449, 474, 475, 559, 560, 568, 571, 583, 587, 588, 591, 593, 595, 606, 607, 610, 616, 619, 635, 637, 648, 651, 655, 661], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 284, 288, 289, 292, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 364, 369, 370, 371, 372, 405, 412, 413, 414, 440, 441, 442, 443, 444, 448, 449, 463, 473, 474, 475, 492, 540, 541, 542, 557, 558, 569, 570, 587, 591, 595, 602, 607, 610, 612, 613, 617, 650, 652, 654, 655, 656], "vari": [6, 364, 367, 424, 637, 638], "between": [6, 33, 45, 56, 57, 74, 120, 122, 123, 140, 152, 160, 161, 163, 164, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 358, 364, 369, 372, 378, 379, 405, 424, 425, 428, 434, 453, 463, 474, 475, 492, 552, 566, 580, 587, 589, 590, 591, 596, 598, 610, 617, 627, 637, 652, 654, 659, 661], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 140, 152, 155, 156, 157, 160, 161, 162, 164, 167, 183, 195, 199, 204, 206, 210, 211, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 264, 266, 270, 271, 277, 284, 287, 288, 289, 293, 295, 299, 300, 306, 316, 317, 320, 321, 322, 326, 328, 332, 333, 339, 349, 350, 353, 354, 355, 363, 364, 369, 372, 373, 405, 418, 422, 448, 463, 471, 474, 475, 476, 477, 478, 479, 492, 505, 506, 507, 508, 540, 541, 542, 545, 558, 563, 565, 569, 583, 584, 590, 591, 596, 612, 650, 656, 659], "ngates_vari": [6, 364], "recommend": [6, 29, 45, 74, 160, 162, 350, 364, 373, 414, 424, 425, 434, 440, 463, 492, 557, 596, 598, 616, 648, 658, 659, 660, 661], "noxp": [7, 595], "iphex": [7, 595], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 317, 350, 369, 371, 435, 558, 561, 564, 570, 587, 590, 591, 595, 606, 611, 635, 638, 639, 640, 648, 650], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 129, 131, 132, 133, 134, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 160, 165, 172, 174, 175, 176, 177, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 199, 200, 217, 222, 223, 242, 243, 245, 246, 247, 248, 257, 259, 260, 261, 262, 277, 282, 283, 306, 311, 312, 313, 314, 339, 344, 345, 346, 347, 388, 399, 405, 413, 414, 439, 443, 451, 453, 463, 469, 470, 471, 472, 475, 476, 477, 478, 479, 492, 505, 506, 507, 508, 537, 558, 566, 569, 570, 572, 573, 579, 587, 591, 635, 637, 648], "dataset1": 8, "dataset2": 8, "pattern": [9, 543, 627], "project": [9, 16, 31, 34, 45, 74, 121, 122, 123, 124, 125, 222, 233, 244, 255, 282, 292, 311, 317, 344, 350, 367, 376, 377, 414, 451, 454, 463, 492, 587, 589, 591, 593, 595, 606, 607, 610, 611, 617, 618, 624, 631, 635, 637, 638, 644, 648, 651, 652, 654, 655, 658], "xradx_dir": 10, "first": [10, 45, 58, 74, 160, 162, 242, 362, 363, 372, 375, 405, 414, 425, 434, 440, 441, 442, 446, 463, 476, 492, 561, 563, 576, 577, 587, 589, 590, 591, 593, 596, 598, 602, 606, 607, 621, 630, 635, 637, 638, 644, 652, 654, 655, 656, 659], "convert": [10, 13, 39, 416, 425, 434, 459, 574, 584, 587, 589, 591, 595, 637, 638], "cf": [10, 13, 45, 74, 364, 375, 376, 435, 463, 492, 587, 588, 589, 590, 604, 615, 633, 648, 656, 657], "radial": [10, 13, 45, 74, 160, 161, 364, 375, 418, 440, 463, 492, 557, 579, 588, 590, 591, 593, 595, 600, 604, 606, 615, 633, 643, 647, 648, 652, 656, 657], "radxconvert": 10, "path": [10, 15, 156, 157, 162, 461, 538, 588, 589, 591, 593, 595, 596, 606, 607, 648, 658, 659], "radx": [10, 595], "grid": [11, 24, 45, 74, 202, 219, 221, 229, 233, 237, 243, 244, 245, 247, 249, 250, 255, 257, 258, 259, 261, 279, 281, 308, 310, 341, 343, 359, 366, 367, 376, 377, 378, 409, 410, 411, 412, 413, 414, 424, 425, 434, 437, 438, 446, 463, 492, 539, 543, 544, 546, 547, 562, 581, 587, 591, 595, 604, 609, 614, 615, 618, 628, 631, 633, 637, 638, 643, 647, 648, 649, 657], "produc": [11, 163, 366, 375, 377, 381, 444, 449, 591, 593, 596, 638, 648, 659], "radx2grid": 11, "within": [11, 29, 47, 48, 127, 160, 161, 162, 163, 167, 170, 202, 412, 413, 414, 418, 439, 465, 466, 552, 558, 559, 560, 568, 570, 572, 573, 585, 589, 591, 592, 593, 595, 596, 606, 607, 618, 619, 648, 652, 654, 659, 661], "lrose": 11, "must": [11, 155, 156, 157, 160, 317, 363, 366, 367, 372, 378, 424, 437, 440, 441, 442, 579, 591, 596, 637, 648, 658, 659], "been": [11, 12, 131, 133, 140, 147, 152, 159, 160, 174, 176, 183, 190, 195, 249, 325, 364, 366, 369, 370, 371, 373, 567, 588, 593, 596, 606, 637, 648, 654, 658, 659], "write_grid": [11, 366], "ident": [11, 161, 162, 366, 413, 638], "layout": [11, 33, 366, 453, 595], "rainbow": 12, "rainbow5": [12, 595], "5": [12, 31, 155, 157, 160, 163, 164, 165, 166, 200, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 376, 413, 414, 424, 425, 428, 434, 439, 451, 543, 566, 574, 587, 588, 589, 590, 591, 593, 594, 596, 601, 602, 607, 616, 619, 621, 622, 623, 626, 627, 628, 629, 630, 631, 635, 637, 638, 639, 640, 644, 645, 650, 652, 655, 656, 659], "22": [12, 587, 589, 593, 595, 606, 616, 635], "3": [12, 45, 74, 119, 120, 160, 161, 198, 199, 201, 229, 367, 371, 377, 412, 414, 418, 424, 425, 434, 463, 492, 539, 543, 558, 587, 588, 589, 590, 593, 594, 596, 601, 602, 604, 607, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 640, 644, 645, 646, 647, 648, 650, 651, 652, 654, 655, 656, 657, 658, 659, 661], "34": [12, 434, 446, 587, 637, 638, 657], "16": [12, 424, 427, 448, 587, 588, 589, 591, 596, 601, 602, 610, 623, 629, 636, 652, 656, 659], "35": [12, 162, 166, 167, 587, 589, 590, 616, 625, 627, 628, 655], "1": [12, 31, 45, 55, 74, 119, 122, 125, 140, 160, 162, 166, 167, 183, 263, 364, 369, 370, 371, 376, 413, 414, 416, 421, 424, 425, 428, 434, 439, 440, 442, 451, 463, 473, 492, 543, 558, 566, 567, 578, 585, 587, 589, 590, 591, 593, 596, 598, 599, 601, 602, 606, 610, 611, 612, 613, 616, 617, 618, 620, 621, 622, 624, 625, 626, 627, 628, 630, 631, 632, 635, 637, 639, 640, 645, 648, 650, 651, 652, 654, 656, 659], "sinc": [12, 419, 440, 587, 589, 590, 591, 611, 637, 638, 651, 654, 656], "evolv": [12, 587], "constantli": 12, "guaranti": 12, "work": [12, 122, 125, 244, 292, 317, 325, 350, 369, 371, 446, 588, 589, 591, 593, 595, 596, 598, 599, 607, 648, 650, 651, 652, 654, 655, 656, 658, 659, 661], "necessari": [12, 587], "user": [12, 29, 48, 156, 157, 163, 350, 377, 424, 466, 558, 583, 587, 590, 591, 593, 595, 596, 648, 650, 651, 652, 654, 655, 656, 658, 659, 661], "adapt": [12, 119, 587, 661], "code": [12, 29, 160, 437, 448, 587, 589, 593, 595, 599, 601, 602, 604, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648, 658, 661], "accord": [12, 159, 373, 414, 421, 427, 428, 429, 431, 432], "its": [12, 440, 589, 590, 593, 595, 596, 598, 599, 648, 658, 659, 661], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 361, 372, 388, 389, 399, 400, 451, 452, 464, 465, 467, 476, 495, 590, 591, 595], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 135, 160, 161, 162, 163, 165, 166, 167, 178, 198, 199, 200, 201, 203, 222, 282, 311, 344, 350, 373, 376, 377, 393, 403, 405, 412, 413, 414, 418, 435, 451, 459, 463, 465, 466, 469, 470, 476, 485, 486, 487, 488, 489, 490, 491, 492, 513, 514, 515, 516, 517, 518, 519, 537, 539, 540, 541, 542, 557, 560, 564, 565, 572, 573, 582, 584, 587, 588, 590, 591, 593, 595, 596, 598, 599, 604, 607, 610, 611, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 629, 630, 631, 632, 633, 635, 637, 638, 644, 645, 646, 648, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660], "issu": [12, 29, 292, 325, 373, 376, 590, 594, 595, 596, 604, 605, 608, 648, 657, 658, 659, 661], "upstream": [12, 588, 596, 598, 659], "reflect": [12, 47, 117, 127, 141, 142, 155, 156, 157, 158, 163, 165, 166, 167, 170, 184, 185, 199, 200, 219, 279, 308, 341, 358, 405, 416, 417, 419, 422, 423, 424, 425, 428, 430, 431, 432, 433, 434, 439, 440, 446, 465, 535, 548, 550, 551, 571, 587, 588, 589, 593, 595, 600, 602, 603, 604, 606, 607, 610, 611, 612, 613, 615, 616, 617, 618, 620, 623, 626, 629, 630, 632, 633, 634, 635, 637, 638, 641, 644, 646, 648, 650, 651, 652, 654, 655, 656, 657], "dbz": [12, 155, 159, 166, 167, 416, 422, 423, 424, 425, 434, 446, 588, 590, 593, 606, 610, 618, 625, 626, 632, 637, 638, 656], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 160, 161, 162, 418, 426, 437, 448, 449, 476, 535, 557, 579, 591, 593, 595, 596, 600, 603, 604, 606, 616, 620, 628, 630, 643, 647, 648, 649, 655, 656, 657, 659], "v": [12, 41, 42, 44, 388, 389, 392, 399, 400, 402, 424, 448, 449, 589, 596, 627, 628, 638, 640, 659], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 567, 656], "width": [12, 243, 257, 317, 350, 414, 589, 590, 591, 593, 595, 656], "w": [12, 62, 162, 424, 480, 587, 639], "wu": [12, 412, 654], "wv": 12, "wvu": 12, "differenti": [12, 17, 155, 156, 157, 166, 167, 199, 429, 432, 439, 440, 441, 442, 444, 447, 595, 620, 648], "zdr": [12, 156, 157, 159, 199, 420], "zdru": 12, "co": [12, 119, 122, 125, 425, 434, 587, 589, 611, 637, 638], "polar": [12, 367, 368, 442, 590, 611], "correl": [12, 165, 199, 200, 437, 439, 571, 593, 619, 620, 636, 637, 638], "coeffici": [12, 155, 156, 157, 166, 167, 416, 424, 439, 571, 587, 595, 619, 620, 636], "rhohv": [12, 159, 165, 199, 200, 420, 421, 595, 619, 656], "rhohvu": 12, "phase": [12, 17, 155, 156, 157, 162, 166, 167, 199, 429, 432, 437, 439, 440, 441, 442, 444, 447, 595, 620, 648, 652], "phidp": [12, 156, 157, 166, 167, 199, 440, 595, 648], "uphidp": 12, "uphidpu": 12, "kdp": [12, 166, 167, 429, 432, 440, 441, 442, 595, 639, 648], "ukdp": 12, "ukdpu": 12, "signal": [12, 159, 165, 200, 417, 567, 590], "qualiti": [12, 159, 165, 200, 429, 441, 442, 587, 593, 606], "sqi": [12, 595], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 156, 157, 201, 439, 587, 639], "temp": [12, 595], "posit": [12, 45, 74, 122, 125, 156, 157, 160, 419, 440, 463, 492, 590, 595, 610, 616, 618, 656], "bin": [12, 45, 74, 119, 120, 157, 372, 426, 463, 492, 567, 587, 595, 610, 652, 656], "respect": [12, 45, 74, 425, 434, 446, 463, 492, 591], "iso0": [12, 156, 198], "cfradial_outfil": 13, "head": [13, 45, 74, 203, 463, 492], "ridgelin": 13, "instrument": [13, 45, 74, 140, 152, 165, 183, 195, 199, 200, 379, 463, 492, 595, 652, 656], "rxm": [13, 595], "25": [13, 424, 587, 589, 593, 595, 606, 610, 627, 628, 631, 635, 638, 641, 650, 655, 657], "rli": 13, "here": [13, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 255, 587, 588, 589, 590, 591, 593, 594, 598, 610, 637, 638, 644, 648, 650, 655, 658, 661], "float": [13, 24, 58, 122, 125, 131, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 217, 219, 220, 224, 225, 227, 228, 229, 230, 242, 243, 244, 245, 246, 247, 248, 255, 257, 258, 259, 260, 261, 262, 263, 264, 277, 279, 280, 284, 285, 287, 288, 289, 292, 293, 306, 308, 309, 315, 316, 317, 318, 320, 321, 322, 325, 326, 339, 341, 342, 348, 349, 350, 351, 353, 354, 355, 358, 377, 405, 406, 408, 409, 410, 411, 412, 414, 416, 417, 418, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 476, 539, 543, 553, 554, 555, 556, 557, 558, 559, 560, 566, 567, 568, 569, 570, 571, 572, 573, 574, 580, 581, 591], "offset": [13, 155, 166, 167, 203, 263, 292, 315, 325, 348, 425, 434, 566, 574, 587, 590, 591, 638], "exist": [13, 28, 32, 46, 47, 49, 77, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 199, 200, 373, 440, 452, 461, 464, 465, 467, 495, 537, 584, 589, 590, 591, 595, 598, 601, 648, 650], "enter": [13, 588, 591, 596, 659], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 166, 167, 201, 203, 217, 222, 223, 242, 243, 245, 247, 255, 257, 259, 261, 263, 277, 282, 283, 292, 306, 311, 312, 315, 317, 325, 339, 344, 345, 348, 350, 448, 453, 473, 474, 554, 556, 558, 559, 560, 568, 569, 570, 574, 577, 580, 589, 591, 595, 596, 632, 635, 656, 659], "sinarame_h5": [14, 15, 595], "take": [15, 47, 161, 413, 414, 417, 440, 465, 589, 590, 591, 596, 606, 607, 610, 618, 637, 638, 659], "everi": [15, 441, 442, 596, 597, 648, 659], "one": [15, 25, 31, 39, 40, 45, 47, 74, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 200, 375, 376, 378, 405, 412, 413, 414, 419, 440, 441, 442, 448, 451, 459, 460, 463, 465, 492, 559, 560, 566, 571, 575, 579, 588, 590, 591, 593, 594, 595, 596, 598, 604, 609, 610, 611, 616, 648, 651, 656, 659, 661], "volum": [15, 45, 74, 160, 162, 163, 317, 350, 369, 370, 371, 379, 405, 435, 463, 492, 559, 560, 562, 581, 584, 587, 590, 591, 593, 595, 604, 611, 615, 633, 657], "folder": [15, 587, 596, 659], "cfradial": [15, 364, 588, 595, 604, 615, 616, 630, 632, 633, 646, 650, 657], "each": [15, 31, 39, 41, 45, 55, 74, 155, 156, 157, 161, 162, 163, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 373, 377, 379, 405, 412, 413, 414, 439, 448, 451, 459, 463, 473, 492, 540, 541, 542, 587, 590, 591, 595, 596, 606, 612, 627, 630, 637, 638, 655, 656, 659], "act": [16, 428, 431, 432, 587, 595, 637, 650], "commun": [16, 587, 596, 648, 659, 661], "softwar": [16, 229, 370, 377, 591, 593, 596, 648, 650, 651, 652, 654, 655, 656, 658, 659], "namespac": [16, 595], "current": [16, 27, 33, 131, 133, 140, 147, 152, 160, 174, 176, 183, 190, 195, 205, 207, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 265, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 296, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 327, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 368, 406, 408, 440, 453, 566, 587, 588, 590, 591, 593, 596, 659], "extens": [16, 205, 237, 250, 265, 294, 327, 377, 590, 598, 658], "wradlib": [16, 595, 648], "http": [16, 369, 370, 371, 416, 419, 425, 429, 430, 434, 437, 558, 571, 587, 589, 591, 593, 596, 607, 619, 628, 637, 638, 648, 658, 659, 661], "org": [16, 416, 419, 425, 429, 430, 434, 437, 558, 571, 595, 596, 619, 637, 638, 648, 659], "phidp_field": [17, 155, 156, 157, 166, 167, 440, 441, 442, 447, 601, 639], "phidp_texture_field": [17, 447], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 123, 127, 141, 142, 155, 156, 157, 165, 166, 167, 170, 184, 185, 198, 199, 200, 201, 203, 263, 292, 325, 413, 414, 417, 418, 424, 425, 434, 437, 444, 445, 447, 448, 449, 451, 453, 463, 474, 475, 492, 557, 558, 566, 567, 568, 569, 570, 580, 587, 595, 596, 601, 604, 610, 611, 627, 628, 634, 637, 641, 644, 648, 652, 655, 657, 659], "textur": [17, 199, 418, 447, 557, 583, 595, 644, 648, 652], "real": [17, 160, 447, 604, 615, 637, 638, 661], "part": [17, 427, 447, 590, 591, 593, 595, 606, 648, 650, 651, 652, 654, 655, 656], "complex": [17, 447], "shift": [17, 166, 167, 203, 263, 292, 325, 438, 441, 447, 566, 595, 652], "texture_field": [17, 447], "refer": [17, 31, 45, 47, 74, 119, 122, 125, 155, 156, 157, 159, 160, 161, 162, 166, 167, 369, 370, 371, 412, 416, 419, 422, 424, 425, 427, 429, 430, 433, 434, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 463, 465, 492, 558, 567, 571, 588, 593, 595, 596, 648, 656, 659], "gourlei": [17, 159, 447], "j": [17, 122, 125, 162, 166, 167, 419, 424, 425, 434, 439, 441, 442, 444, 446, 447, 448, 449, 558, 588, 591, 596, 601, 602, 612, 613, 620, 621, 623, 625, 629, 632, 637, 638, 648, 659], "p": [17, 20, 22, 28, 119, 122, 125, 412, 424, 427, 444, 447, 537, 558, 567, 590, 596, 648, 659], "tabari": [17, 447], "parent": [17, 447], "du": [17, 447], "chatelet": [17, 447], "fuzzi": [17, 447], "logic": [17, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 447], "algorithm": [17, 127, 160, 161, 162, 170, 412, 414, 424, 425, 434, 440, 446, 447, 587, 595, 596, 600, 603, 604, 644, 648, 657, 659], "separ": [17, 424, 437, 446, 447, 567, 571, 606, 611, 619, 638, 661], "precipit": [17, 416, 424, 429, 433, 439, 447, 571, 587, 589, 591, 595, 596, 610, 619, 637, 638, 648, 659], "nonprecipit": [17, 447], "echo": [17, 424, 425, 434, 439, 447, 637, 638, 655], "polarimetr": [17, 155, 156, 157, 159, 166, 167, 428, 429, 439, 444, 447, 558, 595, 601], "observ": [17, 119, 425, 434, 440, 447, 637, 638], "journal": [17, 160, 162, 412, 427, 429, 447, 567, 596, 648, 659], "atmospher": [17, 45, 74, 119, 120, 160, 161, 414, 427, 443, 447, 463, 492, 587, 590, 591, 593, 596, 606, 648, 650, 651, 652, 654, 655, 656, 659], "ocean": [17, 160, 166, 167, 425, 427, 433, 434, 444, 447, 558, 587, 591, 606, 637, 638], "technologi": [17, 160, 427, 447], "24": [17, 447, 585, 587, 589, 595, 607, 608, 640], "8": [17, 62, 155, 160, 166, 199, 242, 244, 246, 248, 258, 260, 262, 424, 447, 480, 587, 589, 590, 591, 593, 598, 607, 610, 617, 627, 631, 635, 638, 644, 650, 651, 652, 654, 655, 656], "1439": [17, 447], "1451": [17, 447], "filetyp": [19, 25, 591], "need": [19, 45, 54, 56, 57, 74, 377, 425, 434, 463, 472, 474, 475, 492, 568, 580, 589, 590, 591, 594, 595, 596, 598, 606, 610, 616, 637, 638, 648, 650, 651, 652, 654, 655, 656, 658, 659, 661], "being": [19, 21, 160, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 414, 419, 442, 572, 573, 589, 591, 593, 595, 628, 658], "keep": [19, 160, 373, 581, 591, 596, 610, 637, 638, 659, 661], "string": [19, 31, 45, 74, 219, 222, 223, 227, 230, 243, 257, 279, 282, 283, 287, 289, 308, 311, 312, 313, 314, 315, 318, 320, 322, 341, 344, 345, 346, 347, 348, 351, 353, 355, 413, 414, 435, 437, 441, 442, 444, 448, 449, 451, 463, 492, 589, 590, 591, 595, 596, 616, 659], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 127, 160, 161, 170, 203, 263, 292, 325, 381, 455, 456, 457, 481, 482, 483, 484, 509, 510, 511, 512, 591, 595, 618], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 131, 140, 141, 142, 152, 167, 174, 183, 184, 185, 195, 373, 440, 441, 442, 444, 448, 449, 451, 463, 487, 490, 491, 492, 515, 518, 519, 569, 587, 589, 591, 595, 606, 624], "dic": [22, 31, 45, 46, 74, 381, 451, 463, 464, 492], "colormap": [23, 202, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 590, 591, 595, 604, 615, 619, 633, 638, 639, 657], "select": [24, 50, 59, 88, 162, 468, 477, 506, 587, 590, 593, 595, 598], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 122, 125, 127, 152, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 170, 195, 198, 199, 200, 201, 203, 216, 217, 224, 227, 228, 229, 230, 231, 244, 258, 263, 276, 277, 284, 287, 288, 289, 290, 292, 305, 306, 315, 316, 317, 320, 321, 322, 323, 325, 338, 339, 348, 349, 350, 353, 354, 355, 356, 373, 377, 405, 413, 414, 417, 419, 424, 425, 428, 430, 431, 432, 434, 438, 439, 440, 441, 444, 446, 448, 449, 453, 463, 468, 469, 470, 472, 473, 474, 475, 476, 492, 543, 566, 574, 585, 587, 588, 589, 590, 591, 593, 596, 598, 599, 601, 602, 603, 606, 607, 608, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 651, 652, 654, 655, 656, 657, 658, 659], "limit": [24, 160, 161, 165, 166, 167, 198, 199, 200, 201, 219, 232, 255, 279, 291, 308, 324, 341, 357, 367, 378, 440, 581, 590, 591, 595, 611, 612, 613, 617, 654], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 140, 152, 160, 161, 162, 164, 165, 183, 195, 199, 200, 205, 207, 216, 217, 219, 224, 228, 229, 230, 265, 267, 276, 277, 279, 284, 288, 289, 294, 296, 305, 306, 308, 316, 317, 321, 322, 327, 329, 338, 339, 341, 349, 350, 354, 355, 369, 370, 371, 373, 405, 418, 448, 463, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 485, 486, 487, 488, 489, 490, 491, 492, 505, 506, 507, 508, 513, 514, 515, 516, 517, 518, 519, 540, 541, 559, 560, 566, 587, 588, 590, 591, 593, 595, 602, 604, 606, 609, 610, 614, 627, 628, 630, 635, 637, 638, 640, 644, 652, 655, 656, 657], "get": [24, 234, 235, 236, 254, 381, 391, 401, 405, 587, 588, 590, 591, 593, 595, 607, 627, 628, 637, 638, 650, 652, 655, 656, 658, 660, 661], "relat": [24, 157, 202, 378, 416, 425, 428, 431, 432, 433, 434, 441, 446, 558, 590, 595, 596, 637, 638, 648, 658, 659], "instac": 24, "nyquist": [24, 58, 160, 161, 162, 418, 476, 557, 595, 644, 652, 656], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 140, 152, 157, 160, 161, 163, 164, 166, 167, 183, 195, 199, 205, 206, 207, 216, 220, 224, 225, 227, 228, 229, 237, 238, 239, 240, 242, 244, 250, 251, 252, 253, 255, 258, 265, 266, 267, 276, 280, 284, 285, 287, 288, 294, 295, 296, 305, 309, 316, 317, 318, 320, 321, 327, 328, 329, 338, 342, 349, 350, 351, 353, 354, 377, 414, 418, 422, 425, 434, 440, 442, 448, 451, 453, 463, 469, 470, 472, 473, 474, 475, 476, 492, 540, 541, 542, 543, 557, 558, 567, 569, 583, 589, 591, 595, 596, 659], "consid": [24, 155, 163, 164, 358, 424, 425, 434, 559, 560, 566, 567, 574, 611, 637], "vmin": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 587, 588, 589, 590, 591, 593, 595, 601, 602, 606, 607, 610, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 644, 645, 646, 651, 652, 654, 655], "vmax": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 587, 588, 589, 590, 591, 593, 595, 601, 602, 606, 607, 610, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 644, 645, 646, 651, 652, 654, 655], "2": [24, 119, 122, 162, 163, 164, 199, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 308, 311, 312, 316, 319, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 352, 353, 354, 355, 357, 369, 370, 371, 373, 389, 400, 405, 412, 414, 418, 424, 425, 434, 440, 448, 539, 543, 557, 571, 587, 589, 590, 591, 593, 596, 599, 603, 608, 610, 611, 617, 618, 623, 624, 627, 628, 631, 635, 637, 639, 640, 644, 648, 650, 651, 652, 654, 655, 656, 659], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 381, 414, 451, 465, 466, 468, 469, 470, 472, 584, 590, 594, 595, 638, 651], "field_map": 25, "anoth": [25, 405, 571, 590, 591, 595, 610, 650, 655, 658, 661], "fill": [27, 155, 156, 157, 446, 591, 595, 638, 650, 651], "empti": [28, 389, 400, 441, 442, 537, 539, 542, 588, 595, 650], "control": [29, 160, 373, 375, 376, 414, 440, 593, 654], "singl": [29, 161, 162, 163, 164, 222, 223, 225, 227, 282, 283, 285, 287, 311, 312, 318, 320, 344, 345, 351, 353, 377, 414, 545, 566, 584, 587, 590, 591, 593, 595, 596, 604, 606, 609, 610, 614, 635, 657, 659], "self": [29, 166, 167, 590, 591, 596, 651, 654, 659], "descrip": 29, "exampl": [29, 47, 127, 170, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 381, 405, 409, 410, 411, 413, 414, 448, 461, 465, 566, 587, 588, 589, 590, 591, 592, 595, 596, 601, 602, 603, 606, 607, 608, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 652, 655, 656, 657, 659, 661], "default_config": 29, "modifi": [29, 45, 74, 163, 463, 492, 588, 595, 596, 604, 615, 633, 657, 659], "environment": [29, 587, 588, 648, 658], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 203, 233, 249, 263, 292, 325, 375, 376, 405, 428, 435, 439, 440, 443, 444, 451, 459, 460, 463, 473, 492, 567, 587, 589, 590, 595, 606, 610, 635, 637, 638, 648, 650, 651, 656, 658], "pyart_config": 29, "point": [29, 31, 33, 47, 123, 155, 156, 157, 167, 220, 225, 242, 243, 257, 280, 285, 292, 309, 314, 315, 318, 342, 347, 348, 351, 367, 368, 371, 373, 377, 412, 413, 414, 425, 434, 446, 451, 453, 465, 539, 567, 570, 574, 584, 587, 589, 591, 593, 595, 598, 604, 617, 624, 634, 637, 641, 644, 648, 652, 654, 656, 657], "new": [29, 47, 48, 50, 131, 133, 140, 147, 152, 163, 174, 176, 183, 190, 195, 426, 438, 444, 448, 465, 466, 468, 571, 581, 593, 595, 596, 598, 599, 610, 635, 638, 639, 644, 648, 651, 652, 659, 661], "execut": [29, 595, 603, 608, 614, 633, 641, 642, 647, 657], "full": [29, 62, 163, 164, 373, 480, 593, 595, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646], "permiss": 29, "secur": 29, "do": [29, 45, 74, 160, 165, 199, 200, 377, 378, 463, 492, 591, 593, 595, 596, 607, 637, 638, 650, 651, 652, 654, 655, 658, 659, 661], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 127, 131, 133, 140, 147, 152, 155, 157, 166, 167, 170, 174, 176, 183, 190, 195, 229, 242, 378, 379, 381, 392, 394, 402, 413, 424, 435, 440, 441, 442, 448, 451, 465, 472, 474, 475, 566, 567, 585, 590, 591, 595, 596, 598, 601, 622, 644, 645, 646, 648, 655, 659], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 141, 142, 160, 184, 185, 372, 381, 451, 461, 463, 465, 469, 470, 472, 474, 492, 552, 587, 589, 591, 595, 596, 597, 598, 599, 637, 638, 651, 654, 656, 658, 659], "home": [29, 593, 596, 601, 607, 659, 661], "make": [29, 31, 451, 539, 543, 544, 546, 547, 589, 590, 591, 593, 594, 595, 596, 597, 599, 610, 618, 627, 637, 644, 648, 650, 651, 658, 659, 661], "adjust": [29, 122, 232, 291, 324, 357, 424, 591, 595, 616, 619, 627, 638], "login": 29, "": [29, 31, 45, 58, 62, 74, 119, 120, 122, 125, 161, 162, 166, 167, 205, 207, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 265, 267, 277, 284, 288, 289, 294, 296, 306, 316, 321, 322, 327, 329, 339, 349, 354, 355, 386, 387, 393, 397, 398, 403, 405, 407, 412, 425, 427, 428, 434, 436, 437, 440, 441, 442, 444, 446, 449, 451, 463, 476, 480, 492, 567, 571, 587, 588, 589, 590, 591, 593, 595, 597, 598, 606, 607, 610, 616, 618, 619, 628, 635, 637, 638, 640, 644, 648, 650, 651, 652, 654, 655, 656, 660], "also": [29, 45, 74, 131, 174, 202, 218, 241, 256, 278, 307, 340, 370, 371, 375, 377, 379, 391, 401, 405, 425, 434, 463, 492, 587, 588, 589, 590, 591, 593, 595, 596, 606, 610, 637, 638, 648, 650, 654, 656, 658, 659, 660, 661], "shell": 29, "session": 29, "modif": [29, 47, 465, 595], "last": [29, 45, 74, 160, 217, 218, 224, 228, 229, 230, 241, 246, 248, 249, 256, 258, 260, 262, 277, 278, 284, 288, 289, 306, 307, 316, 317, 321, 322, 325, 339, 340, 349, 350, 354, 355, 463, 492, 590, 591, 593, 594, 595, 612, 638, 656], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 155, 156, 157, 161, 162, 167, 242, 471, 479, 487, 491, 505, 508, 515, 519, 587, 589, 590, 591, 593, 595, 596, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648, 659], "interact": [30, 587, 590], "weather": [30, 119, 160, 412, 440, 589, 591, 595, 596, 606, 616, 648, 650, 651, 652, 654, 655, 656, 659], "time": [31, 39, 40, 45, 74, 160, 205, 207, 217, 219, 224, 228, 229, 230, 265, 267, 277, 279, 284, 288, 289, 294, 296, 306, 308, 316, 317, 321, 322, 327, 329, 339, 341, 349, 350, 354, 355, 362, 363, 373, 375, 376, 405, 408, 414, 424, 435, 437, 451, 459, 460, 463, 492, 561, 564, 587, 588, 589, 591, 593, 595, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 650, 656, 661], "origin_latitud": [31, 451], "origin_longitud": [31, 451], "origin_altitud": [31, 451], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 203, 205, 214, 217, 219, 222, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 263, 265, 274, 277, 279, 282, 284, 287, 288, 289, 291, 292, 294, 303, 306, 308, 311, 314, 316, 320, 321, 322, 324, 325, 327, 336, 339, 341, 344, 347, 349, 353, 354, 355, 357, 405, 409, 410, 411, 412, 413, 414, 425, 434, 437, 438, 446, 451, 457, 459, 475, 483, 511, 539, 587, 589, 590, 591, 599, 610, 617, 618, 627, 628, 635, 637, 638], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 155, 157, 166, 167, 215, 275, 304, 337, 367, 377, 378, 409, 410, 411, 412, 413, 414, 416, 419, 424, 425, 428, 431, 432, 433, 434, 437, 451, 457, 459, 463, 475, 483, 492, 511, 539, 601, 611, 625, 627, 628, 637, 638, 651], "radar_latitud": [31, 451, 568, 580], "radar_longitud": [31, 451, 568, 580], "radar_altitud": [31, 451], "radar_tim": [31, 451], "radar_nam": [31, 451], "store": [31, 45, 74, 160, 161, 162, 381, 414, 419, 451, 463, 492, 587, 589, 591, 595, 606, 635, 648, 651, 654, 656, 661], "rectilinear": [31, 451], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 367, 404, 405, 412, 413, 414, 451, 453, 459, 463, 492, 604, 609, 614, 617, 648, 649, 657], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 376, 404, 405, 407, 412, 414, 451, 453, 459, 463, 474, 492, 539, 557, 587, 589, 590, 591, 595, 600, 604, 607, 609, 610, 611, 612, 613, 635, 648, 654, 656], "section": [31, 45, 47, 74, 217, 242, 277, 306, 339, 414, 451, 463, 465, 492, 559, 560, 587, 591, 592, 594, 595, 596, 604, 615, 633, 637, 638, 648, 657, 659], "To": [31, 47, 165, 198, 199, 200, 201, 375, 376, 378, 451, 465, 584, 589, 596, 598, 638, 648, 651, 654, 658, 659, 661], "creat": [31, 42, 45, 47, 50, 74, 160, 161, 162, 163, 165, 198, 199, 200, 201, 202, 203, 216, 230, 233, 249, 263, 276, 289, 292, 305, 317, 322, 325, 338, 350, 355, 370, 375, 376, 377, 378, 379, 413, 414, 444, 449, 451, 461, 463, 465, 468, 492, 578, 579, 581, 587, 591, 593, 595, 596, 601, 602, 604, 607, 610, 612, 613, 615, 616, 618, 632, 633, 637, 638, 646, 648, 649, 651, 654, 657, 659], "legaci": [31, 419, 451], "from_legacy_paramet": [31, 451], "ax": [31, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 356, 357, 409, 410, 411, 425, 434, 438, 446, 451, 587, 588, 589, 590, 591, 593, 595, 601, 602, 606, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 631, 635, 636, 637, 638, 639, 640, 644, 652], "moment": [31, 39, 45, 74, 117, 159, 160, 161, 162, 165, 199, 200, 369, 370, 371, 414, 445, 451, 459, 463, 492, 535, 567, 590, 595, 607, 615, 633, 648, 655, 657], "describ": [31, 45, 74, 165, 198, 199, 200, 201, 243, 257, 434, 451, 463, 492, 593, 637, 638], "geograph": [31, 45, 56, 74, 121, 122, 123, 124, 125, 292, 317, 325, 350, 376, 414, 451, 463, 474, 492, 591, 648], "origin": [31, 39, 160, 161, 162, 203, 263, 292, 325, 373, 375, 376, 381, 383, 412, 414, 434, 451, 459, 559, 560, 587, 588, 589, 591, 595, 596, 610, 611, 612, 613, 636, 637, 638, 659], "distanc": [31, 39, 57, 119, 120, 217, 228, 277, 288, 306, 321, 339, 354, 405, 406, 409, 410, 411, 413, 414, 422, 437, 442, 451, 459, 475, 558, 559, 560, 568, 569, 570, 580, 587, 588, 589, 610, 620, 625, 626, 627], "axi": [31, 39, 45, 74, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 307, 308, 309, 310, 311, 312, 316, 317, 319, 320, 321, 322, 324, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 357, 367, 377, 451, 459, 463, 492, 587, 590, 591, 601, 617, 628, 637, 640, 656], "dimension": [31, 39, 160, 162, 412, 434, 446, 451, 459, 610, 637, 638], "space": [31, 45, 74, 123, 219, 279, 308, 341, 378, 414, 424, 425, 434, 437, 451, 463, 492, 587, 590, 607, 637, 650], "along": [31, 161, 164, 242, 245, 246, 247, 248, 259, 260, 261, 262, 451, 558, 559, 560, 569, 570, 581, 583, 589, 590, 591, 595, 637, 644], "three": [31, 162, 165, 200, 377, 434, 446, 451, 590, 598, 637, 638], "repeat": [31, 451], "throughout": [31, 451], "nz": [31, 451], "nx": [31, 451], "ny": [31, 451], "dimens": [31, 160, 367, 414, 418, 419, 425, 434, 435, 437, 440, 442, 446, 451, 557, 581, 587, 590, 591, 595, 611, 635, 637, 638, 650, 654, 656], "transform": [31, 45, 74, 121, 122, 123, 124, 125, 222, 229, 282, 292, 311, 325, 344, 350, 376, 414, 424, 451, 463, 492, 589, 591, 595, 616, 637, 638], "proj": [31, 45, 74, 121, 123, 124, 255, 325, 451, 463, 492, 595], "pyart_aeqd": [31, 45, 74, 121, 123, 124, 451, 463, 492], "nativ": [31, 45, 74, 121, 123, 124, 361, 414, 419, 451, 463, 492, 595], "azimuth": [31, 45, 51, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 203, 204, 217, 219, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 264, 277, 279, 282, 284, 288, 289, 292, 293, 306, 308, 311, 316, 317, 321, 322, 325, 326, 339, 341, 344, 349, 350, 354, 355, 373, 377, 419, 442, 448, 449, 451, 463, 469, 473, 475, 485, 492, 513, 558, 559, 560, 566, 568, 569, 584, 590, 591, 595, 596, 630, 632, 635, 650, 656, 659], "equidist": [31, 45, 74, 121, 122, 123, 124, 125, 222, 282, 311, 344, 350, 377, 414, 451, 463, 492, 591], "pyproj": [31, 45, 74, 121, 123, 124, 451, 463, 492, 595, 658], "projparam": [31, 34, 45, 74, 121, 123, 124, 451, 454, 463, 492], "special": [31, 45, 74, 451, 463, 492, 591], "_include_lon_0_lat_0": [31, 45, 74, 451, 463, 492], "remov": [31, 45, 56, 57, 74, 155, 156, 157, 160, 165, 198, 199, 200, 201, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 382, 388, 389, 395, 399, 400, 425, 434, 451, 463, 474, 475, 492, 589, 591, 595, 596, 601, 612, 618, 627, 637, 652, 655, 659], "interpret": [31, 45, 74, 161, 162, 376, 451, 463, 492, 572, 573, 591], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 247, 248, 255, 257, 259, 261, 262, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 414, 451, 453, 456, 459, 463, 474, 492, 558, 568, 569, 570, 580, 587, 589, 590, 591, 604, 605, 608, 617, 624, 631, 635, 637, 638, 650, 651, 656, 657], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 246, 247, 255, 257, 259, 260, 261, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 414, 451, 453, 456, 459, 463, 474, 492, 558, 568, 569, 570, 580, 587, 589, 590, 591, 604, 605, 608, 617, 624, 631, 635, 637, 638, 650, 651, 656, 657], "ad": [31, 45, 47, 74, 164, 166, 167, 249, 315, 348, 413, 424, 425, 434, 451, 463, 465, 492, 543, 588, 590, 593, 595, 596, 627, 628, 650, 651, 658, 659], "lon_0": [31, 45, 74, 122, 125, 317, 350, 451, 463, 492, 624], "lat_0": [31, 45, 74, 122, 125, 317, 350, 451, 463, 492, 624], "get_projparam": [31, 451], "evalu": [31, 381, 383, 429, 451, 593, 595], "locat": [31, 33, 45, 55, 56, 57, 74, 203, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 292, 306, 307, 308, 311, 312, 314, 316, 317, 318, 319, 321, 322, 325, 339, 340, 341, 344, 345, 347, 349, 350, 351, 352, 354, 355, 369, 370, 372, 378, 405, 412, 413, 414, 451, 453, 463, 473, 474, 475, 492, 539, 552, 558, 568, 569, 570, 587, 588, 589, 591, 593, 595, 596, 622, 624, 635, 644, 645, 646, 648, 654, 658, 659], "up": [31, 45, 74, 131, 133, 140, 147, 152, 156, 157, 174, 176, 183, 190, 195, 416, 419, 428, 431, 432, 443, 451, 463, 492, 557, 588, 589, 593, 594, 595, 598, 637, 652, 656, 660], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 242, 373, 379, 435, 451, 463, 478, 479, 490, 491, 492, 507, 508, 518, 519, 562, 587, 588, 589, 590, 591, 593, 596, 606, 616, 617, 627, 628, 648, 650, 659, 660], "collect": [31, 140, 152, 183, 195, 363, 369, 370, 371, 373, 404, 413, 414, 451, 590, 591, 596, 606, 621, 635, 648, 659, 660, 661], "nradar": [31, 451], "whose": [31, 372, 411, 451, 587], "wa": [31, 56, 57, 140, 161, 162, 183, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 451, 474, 475, 571, 587, 589, 591, 593, 595, 648, 661], "projection_proj": [31, 451], "instanc": [31, 42, 48, 160, 161, 162, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 378, 379, 419, 451, 466, 571, 575, 579, 589, 591, 595], "valueerror": [31, 32, 46, 47, 451, 452, 464, 465, 591], "point_z": [31, 376, 451], "point_x": [31, 376, 451], "point_i": [31, 376, 451], "func": [31, 451, 590, 595], "init_point_x_y_z": [31, 451], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 451, 456, 457, 463, 474, 482, 483, 484, 492, 510, 511, 512, 655], "point_latitud": [31, 376, 451], "point_longitud": [31, 376, 451], "perform": [31, 45, 56, 57, 58, 74, 131, 133, 140, 147, 152, 159, 160, 161, 162, 164, 174, 176, 183, 190, 195, 217, 222, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 282, 284, 287, 288, 289, 306, 311, 316, 317, 320, 321, 322, 325, 339, 344, 349, 350, 353, 354, 355, 369, 372, 377, 434, 440, 451, 463, 474, 475, 476, 492, 584, 590, 591, 600, 601, 602, 604, 612, 613, 617, 648], "invers": [31, 45, 74, 448, 451, 463, 492, 587], "rel": [31, 45, 74, 156, 198, 229, 315, 348, 451, 463, 492, 587, 595, 596, 638, 656, 659], "init_point_longitude_latitud": [31, 451], "point_altitud": [31, 35, 376, 451, 455], "init_point_altitud": [31, 451], "init": [31, 233, 249, 381, 451, 568, 595], "field_dict": [32, 452], "replace_exist": [32, 46, 47, 48, 452, 464, 465, 466, 593, 595, 596, 637, 638, 644, 651, 652, 659], "add": [32, 46, 47, 163, 167, 217, 219, 224, 227, 228, 229, 230, 242, 243, 244, 246, 248, 255, 257, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 452, 464, 465, 588, 589, 590, 595, 596, 610, 616, 617, 618, 627, 628, 630, 635, 637, 638, 639, 644, 652, 658, 659, 661], "replac": [32, 46, 47, 48, 131, 133, 140, 147, 152, 161, 162, 174, 176, 183, 190, 195, 452, 464, 465, 466, 586, 595], "overwrit": [32, 452], "alreadi": [32, 46, 47, 452, 464, 465], "level": [33, 39, 41, 42, 45, 62, 74, 156, 157, 237, 238, 239, 240, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 369, 370, 371, 377, 378, 437, 446, 448, 453, 459, 463, 480, 492, 567, 587, 589, 590, 595, 596, 627, 628, 631, 636, 645, 648, 654, 656, 659], "height": [33, 39, 41, 42, 156, 157, 198, 244, 258, 317, 350, 414, 417, 425, 434, 435, 443, 446, 448, 449, 453, 459, 579, 587, 590, 591, 593, 595, 596, 616, 625, 635, 640, 655, 659], "determin": [33, 45, 74, 160, 161, 162, 242, 244, 246, 248, 255, 258, 260, 262, 317, 350, 358, 361, 369, 370, 373, 378, 379, 418, 425, 427, 428, 429, 431, 432, 434, 446, 448, 453, 463, 492, 566, 567, 574, 579, 582, 590, 591, 596, 637, 644, 659], "same": [33, 45, 47, 55, 56, 57, 74, 122, 125, 133, 147, 160, 176, 190, 229, 317, 350, 367, 373, 377, 378, 379, 414, 425, 434, 437, 443, 453, 463, 465, 473, 474, 475, 492, 543, 568, 580, 584, 587, 591, 596, 606, 627, 628, 637, 638, 650, 655, 659, 661], "interpol": [33, 57, 120, 123, 217, 224, 228, 229, 230, 242, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 363, 369, 413, 414, 435, 442, 443, 448, 453, 475, 579, 591, 595, 596, 607, 637, 638, 654, 659], "extrapol": [33, 120, 123, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 453, 591], "boundari": [33, 120, 123, 164, 235, 236, 255, 350, 442, 453, 543, 591, 639], "center": [33, 45, 57, 74, 119, 120, 122, 123, 125, 161, 217, 222, 224, 228, 229, 230, 243, 245, 246, 247, 248, 257, 258, 259, 260, 261, 262, 277, 282, 284, 288, 289, 292, 306, 311, 316, 317, 321, 322, 339, 344, 349, 350, 354, 355, 369, 371, 409, 410, 411, 453, 463, 475, 492, 539, 543, 557, 587, 589, 590, 591, 593, 616, 644, 652, 656], "2d": [33, 55, 56, 57, 120, 367, 377, 439, 442, 453, 473, 474, 475, 557, 587, 591, 604, 609, 610, 614, 656, 657], "point_": [36, 37, 456, 457], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 141, 142, 184, 185, 406, 408, 448, 458, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 587, 591, 596, 659], "xarrai": [39, 233, 242, 244, 459, 558, 570, 587, 595, 631, 635, 644, 648, 658], "netcdf4": [40, 370, 375, 376, 460, 587, 588, 595, 625, 648, 650, 658, 661], "arm_time_vari": [40, 375, 376, 460], "arm_alt_lat_lon_vari": [40, 376, 460], "save": [40, 205, 217, 219, 224, 228, 229, 230, 237, 250, 265, 277, 279, 284, 288, 289, 294, 306, 308, 316, 317, 321, 322, 327, 339, 341, 349, 350, 354, 355, 376, 378, 460, 591, 593, 648, 649], "netcdf4_class": [40, 375, 376, 460], "netcdf3_class": [40, 375, 376, 460], "netcdf3_64bit": [40, 375, 376, 460], "base_tim": [40, 375, 376, 460, 590, 635], "time_offset": [40, 375, 376, 460, 590, 635], "alt": [40, 56, 376, 460, 474, 590, 591, 595], "lat": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 460, 474, 587, 590, 591, 595, 617, 618, 631, 654], "lon": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 460, 474, 587, 590, 591, 595, 618, 631], "speed": [41, 42, 414, 448, 449, 557, 590, 591, 593, 596, 640, 659], "direct": [41, 62, 373, 440, 448, 449, 480, 595, 596, 640, 659], "horizont": [41, 42, 43, 44, 45, 74, 155, 158, 159, 160, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 362, 363, 448, 463, 492, 579, 589, 590, 593, 595, 596, 618, 628, 645, 656, 659], "wind": [41, 42, 43, 44, 160, 161, 362, 363, 448, 449, 579, 589, 590, 591, 593, 595, 596, 640, 659], "profil": [41, 160, 362, 363, 435, 441, 442, 443, 444, 558, 579, 595, 596, 602, 604, 634, 641, 657, 659], "1d": [41, 42, 120, 123, 439, 587, 595, 656], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 203, 263, 292, 314, 317, 325, 347, 350, 405, 406, 408, 409, 410, 411, 412, 413, 414, 417, 425, 434, 437, 440, 443, 446, 448, 474, 475, 476, 539, 568, 580, 590, 591, 595, 596, 610, 640, 654, 656, 659], "abov": [41, 42, 45, 47, 74, 129, 143, 155, 156, 157, 160, 163, 164, 165, 166, 167, 172, 186, 198, 199, 200, 201, 222, 223, 282, 283, 311, 312, 344, 345, 358, 414, 417, 424, 425, 434, 448, 463, 465, 492, 558, 567, 569, 570, 587, 588, 589, 590, 595, 596, 598, 604, 610, 626, 628, 634, 640, 641, 644, 648, 650, 652, 657, 659, 661], "sea": [41, 42, 45, 74, 448, 463, 492, 590, 595, 596, 659], "were": [41, 42, 131, 133, 140, 174, 176, 183, 448, 589, 591, 593, 596, 659], "sampl": [41, 42, 448, 449, 450, 544, 546, 547, 567, 587, 589, 590, 595, 596, 606, 607, 616, 636, 639, 640, 648, 659], "per": [41, 42, 43, 44, 58, 160, 414, 448, 476, 540, 541, 542, 596, 659], "second": [41, 42, 43, 44, 47, 58, 119, 160, 373, 381, 405, 442, 448, 465, 476, 566, 576, 577, 587, 590, 593, 596, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 655, 656, 659], "north": [41, 45, 74, 242, 244, 255, 317, 350, 463, 492, 558, 570, 587, 590, 591, 620, 656], "east": [41, 217, 228, 242, 277, 288, 306, 321, 339, 354, 558, 570, 587, 590, 591, 620], "u_wind": [41, 42, 448, 449, 596, 640, 659], "compon": [41, 42, 43, 44, 424, 590, 596, 659], "v_wind": [41, 42, 448, 449, 596, 640, 659], "classmethod": 42, "_rang": [45, 74, 422, 463, 492], "scan_typ": [45, 74, 203, 216, 263, 276, 292, 305, 325, 338, 463, 492, 656], "sweep_numb": [45, 74, 463, 492, 590, 595, 625, 650, 656], "sweep_mod": [45, 74, 463, 492, 590, 595, 650, 656], "fixed_angl": [45, 74, 203, 263, 292, 325, 463, 492, 590, 595, 625, 626, 630, 650, 656], "sweep_start_ray_index": [45, 74, 463, 492, 590, 650, 656], "sweep_end_ray_index": [45, 74, 463, 492, 590, 650, 656], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 203, 217, 219, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 373, 442, 463, 470, 475, 486, 492, 514, 560, 566, 574, 587, 590, 591, 593, 595, 610, 611, 636, 650, 656], "altitude_agl": [45, 74, 463, 492, 590, 656], "target_scan_r": [45, 74, 463, 492, 595, 656], "rays_are_index": [45, 74, 463, 492], "ray_angle_r": [45, 74, 463, 492], "scan_rat": [45, 74, 379, 463, 492, 595, 656], "antenna_transit": [45, 56, 57, 74, 140, 152, 183, 195, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 463, 474, 475, 492, 591, 656], "instrument_paramet": [45, 74, 160, 379, 463, 492, 590, 593, 652, 656], "radar_calibr": [45, 74, 463, 492, 656], "rotat": [45, 74, 203, 463, 492], "tilt": [45, 74, 203, 229, 317, 350, 444, 463, 492, 591, 595, 607, 624, 631], "roll": [45, 74, 203, 373, 463, 492, 578, 583], "drift": [45, 74, 203, 463, 492], "pitch": [45, 74, 203, 463, 492], "georefs_appli": [45, 74, 463, 492], "antenna": [45, 56, 57, 74, 119, 120, 140, 152, 183, 195, 198, 201, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 419, 463, 474, 475, 492, 591, 595, 600, 604, 609, 610, 611, 612, 613, 648, 654, 656], "structur": [45, 74, 379, 424, 434, 446, 463, 492, 606, 637, 638, 655], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 127, 161, 162, 165, 170, 198, 199, 200, 201, 230, 289, 322, 355, 377, 411, 413, 414, 424, 425, 434, 440, 463, 468, 469, 470, 472, 473, 474, 475, 476, 492, 571, 589, 590, 591, 595, 596, 600, 603, 604, 606, 644, 648, 652, 655, 656, 657, 659], "global": [45, 74, 463, 492, 587, 611, 656, 658], "4": [45, 74, 119, 120, 364, 367, 412, 416, 424, 443, 463, 492, 587, 588, 589, 590, 594, 596, 606, 607, 611, 614, 616, 619, 625, 626, 627, 628, 630, 631, 637, 638, 640, 644, 648, 655, 659], "repres": [45, 74, 160, 439, 463, 492, 540, 541, 584, 595, 638], "under": [45, 74, 160, 161, 162, 414, 463, 492, 595, 596, 637, 638, 648, 658, 659], "sub": [45, 74, 463, 492, 587, 595], "convent": [45, 74, 160, 463, 492, 587, 590, 591, 606, 648, 656], "meta_group": [45, 74, 463, 492, 656], "scan": [45, 74, 117, 160, 161, 162, 163, 203, 216, 217, 219, 230, 263, 276, 277, 279, 289, 292, 305, 306, 308, 322, 325, 338, 339, 341, 355, 369, 419, 463, 492, 535, 540, 541, 566, 568, 574, 579, 584, 587, 588, 589, 590, 595, 607, 610, 621, 622, 632], "ppi": [45, 74, 161, 162, 163, 164, 216, 220, 224, 276, 280, 284, 305, 309, 316, 317, 338, 342, 349, 350, 442, 463, 492, 540, 541, 545, 548, 550, 559, 560, 566, 587, 588, 591, 595, 604, 609, 614, 615, 618, 619, 631, 633, 643, 645, 647, 648, 656, 657], "rhi": [45, 74, 216, 217, 228, 276, 277, 288, 305, 306, 321, 338, 339, 354, 442, 463, 492, 541, 551, 559, 560, 566, 588, 595, 604, 615, 633, 648, 656, 657], "sector": [45, 74, 463, 492, 587, 595, 656], "multipl": [45, 74, 424, 463, 492, 588, 589, 595, 596, 604, 609, 615, 627, 633, 655, 657, 659, 661], "mode": [45, 62, 74, 360, 463, 480, 492, 587, 590, 595, 596, 656, 658, 659], "ground": [45, 74, 419, 463, 492, 590, 591, 606], "target": [45, 74, 377, 463, 492, 544, 546, 547, 548, 549, 550, 551, 558, 568, 569, 570, 580, 590, 656], "angl": [45, 51, 52, 74, 119, 120, 203, 217, 229, 263, 277, 292, 306, 325, 339, 442, 444, 463, 469, 470, 492, 553, 554, 555, 556, 558, 559, 560, 566, 568, 569, 576, 577, 584, 587, 590, 595, 611, 630, 632, 640, 650, 656], "thr": [45, 74, 463, 492], "index": [45, 60, 74, 89, 165, 200, 230, 244, 246, 248, 258, 260, 262, 289, 322, 355, 377, 405, 419, 444, 463, 478, 492, 507, 587, 589, 590, 591, 593, 595, 649], "rays_per_sweep": [45, 66, 74, 94, 463, 484, 492, 512, 540, 541], "upon": [45, 74, 165, 198, 199, 200, 201, 463, 492, 589, 593, 595], "prior": [45, 47, 74, 164, 166, 167, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 373, 463, 465, 492, 591, 598, 607, 648], "init_rays_per_sweep": [45, 74, 463, 492], "intend": [45, 74, 463, 492], "rate": [45, 74, 416, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 463, 492, 595, 637, 638], "whether": [45, 74, 131, 174, 412, 463, 492, 590, 591, 655], "regular": [45, 74, 378, 463, 492, 591, 616], "angular": [45, 74, 463, 492, 557, 576, 577], "resolut": [45, 74, 217, 219, 220, 224, 225, 228, 229, 230, 255, 277, 279, 280, 284, 285, 288, 289, 306, 308, 309, 316, 317, 318, 321, 322, 339, 341, 342, 349, 350, 351, 354, 355, 369, 424, 425, 434, 440, 446, 463, 492, 543, 589, 590, 591, 607, 621, 624, 644, 645, 652, 654, 655], "express": [45, 74, 463, 492], "360": [45, 74, 163, 164, 318, 351, 463, 492, 566, 595, 640, 650, 656], "represent": [45, 74, 463, 492], "forbidden": [45, 74, 463, 492], "plane": [45, 74, 377, 463, 492, 587, 656], "180": [45, 74, 122, 463, 492, 566, 587, 589, 590, 596, 638, 650, 659], "gate_z": [45, 57, 74, 463, 475, 492], "gate_x": [45, 57, 74, 463, 475, 492], "gate_i": [45, 57, 74, 463, 475, 492], "system": [45, 74, 121, 122, 123, 166, 167, 360, 369, 377, 407, 412, 463, 492, 595, 596, 658, 659], "assum": [45, 74, 119, 120, 160, 163, 437, 440, 442, 443, 463, 492, 566, 589, 593], "earth": [45, 74, 119, 120, 122, 125, 463, 492, 568, 580, 587, 591], "radiu": [45, 74, 119, 120, 122, 125, 409, 410, 411, 412, 413, 414, 425, 434, 446, 463, 492, 568, 580, 637, 654], "model": [45, 74, 119, 120, 161, 370, 376, 424, 463, 492, 590, 639], "init_gate_x_y_z": [45, 74, 463, 492], "gate_latitud": [45, 56, 64, 74, 92, 463, 474, 482, 492, 510, 587], "gate_longitud": [45, 56, 64, 74, 92, 463, 474, 482, 492, 510, 587, 650], "init_gate_longitude_latitud": [45, 74, 463, 492, 650], "gate_altitud": [45, 56, 63, 74, 91, 463, 474, 481, 492, 509, 587], "init_gate_altitud": [45, 74, 463, 492, 650], "actual": [45, 74, 373, 377, 412, 424, 463, 492, 661], "flag": [45, 74, 160, 263, 373, 441, 442, 444, 446, 463, 492, 574, 587, 595, 661], "transit": [45, 56, 57, 74, 140, 152, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 441, 463, 474, 475, 492, 591, 595], "ye": [45, 74, 160, 463, 492], "about": [45, 74, 463, 492, 587, 589, 594, 595], "aircraft": [45, 74, 229, 373, 463, 492, 558], "longitudin": [45, 74, 229, 240, 248, 252, 253, 262, 463, 492], "vertic": [45, 74, 159, 160, 217, 218, 219, 224, 228, 229, 230, 238, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 377, 437, 444, 463, 492, 558, 574, 584, 587, 589, 595, 628, 639, 640, 645], "orthogon": [45, 74, 463, 492], "platform": [45, 74, 463, 492, 587, 598], "right": [45, 74, 463, 492, 589, 592, 593, 595, 616, 617, 648], "wing": [45, 74, 463, 492], "down": [45, 74, 463, 492, 585, 589], "track": [45, 74, 463, 492, 587, 591], "compass": [45, 74, 463, 492], "clockwis": [45, 74, 463, 492], "nose": [45, 74, 463, 492, 595], "had": [45, 74, 378, 463, 492, 595, 606, 661], "georefer": [45, 74, 463, 492], "lead": [45, 74, 463, 492, 591, 610], "centric": [45, 74, 463, 492], "avaiabl": [45, 74, 463, 492], "radar_paramet": [45, 74, 463, 492, 590], "subconvent": [45, 74, 463, 492], "calibr": [45, 74, 427, 463, 492, 590], "ngate": [45, 55, 74, 463, 473, 492, 540, 541, 542, 587, 595, 650, 656], "nrai": [45, 55, 74, 422, 463, 473, 492, 542, 569, 595, 650, 656], "nsweep": [45, 74, 463, 492, 540, 541, 611, 625, 626, 640, 656], "loos": [46, 47, 464, 465], "existing_field_nam": [47, 465], "note": [47, 119, 131, 133, 140, 147, 152, 160, 164, 174, 176, 183, 190, 195, 244, 317, 364, 367, 368, 378, 424, 437, 440, 448, 465, 566, 588, 591, 595, 596, 606, 607, 611, 618, 637, 638, 658, 659], "made": [47, 375, 418, 465, 584, 588, 590, 591, 596, 597, 659], "done": [47, 160, 164, 446, 465, 596, 598, 650, 658, 659, 661], "both": [47, 160, 165, 200, 361, 437, 438, 465, 587, 591, 595, 596, 607, 610, 611, 613, 617, 632, 638, 648, 654, 655, 658, 659], "numpi": [47, 133, 147, 176, 190, 465, 587, 589, 590, 591, 593, 595, 596, 598, 601, 610, 612, 616, 619, 624, 627, 628, 630, 635, 637, 638, 639, 640, 648, 650, 651, 652, 654, 655, 656, 658, 659, 661], "see": [47, 120, 127, 160, 170, 216, 230, 242, 245, 247, 255, 259, 261, 276, 289, 305, 317, 322, 338, 350, 355, 367, 375, 376, 414, 424, 425, 434, 437, 446, 465, 587, 589, 591, 593, 595, 596, 606, 607, 616, 637, 638, 648, 650, 652, 654, 655, 659], "how": [47, 373, 375, 376, 465, 587, 588, 589, 590, 591, 593, 595, 597, 606, 607, 616, 617, 618, 648, 651, 654, 655, 661], "reflectivity_copi": [47, 465], "gatefilt": [48, 155, 156, 157, 160, 161, 162, 163, 164, 165, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 405, 413, 414, 419, 440, 441, 442, 444, 448, 449, 466, 587, 589, 591, 593, 595, 596, 602, 610, 612, 613, 617, 636, 644, 649, 652, 659], "updat": [48, 466, 566, 588, 592, 593, 595, 596, 618, 637, 648, 659], "mask": [48, 131, 133, 136, 140, 147, 151, 152, 160, 161, 162, 163, 165, 174, 176, 179, 183, 190, 194, 195, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 369, 370, 371, 414, 419, 443, 466, 543, 571, 591, 595, 601, 610, 612, 637, 638, 644, 649, 650, 651, 656], "filter": [48, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 164, 165, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 405, 413, 414, 418, 440, 441, 442, 466, 587, 589, 591, 593, 595, 602, 610, 612, 613, 617, 636, 644, 652, 655], "equal": [48, 121, 123, 124, 132, 133, 138, 146, 147, 150, 161, 175, 176, 181, 189, 190, 193, 350, 367, 378, 424, 446, 448, 466, 566, 591, 619, 637, 638, 639, 655], "condit": [48, 127, 131, 133, 140, 147, 152, 160, 170, 174, 176, 183, 190, 195, 378, 429, 466, 587, 602, 651, 655], "append": [48, 466, 593, 595, 640], "filtered_": [48, 466], "prefix": [48, 461, 466], "check": [49, 58, 77, 161, 162, 163, 164, 372, 418, 424, 443, 467, 476, 495, 568, 580, 584, 589, 590, 593, 595, 596, 598, 648, 658, 659, 660], "keyerror": [49, 77, 388, 389, 399, 400, 467, 495, 658], "array_lik": [50, 468, 573], "view": [51, 52, 54, 381, 386, 387, 393, 397, 398, 403, 469, 470, 472, 587, 617, 652, 654, 656], "possibl": [51, 52, 54, 373, 469, 470, 472, 567, 591, 593, 595, 599, 616, 637, 638, 652, 654], "underli": [51, 52, 54, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 469, 470, 472, 591, 648], "get_gate_x_y_z": [54, 472, 627, 628], "obtain": [54, 57, 472, 475, 596, 640, 650, 659], "plot": [54, 57, 202, 203, 204, 205, 206, 207, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 444, 449, 472, 475, 587, 588, 595, 601, 602, 606, 607, 610, 611, 612, 613, 633, 634, 635, 637, 638, 641, 643, 644, 647, 648, 650, 651, 652, 654, 655, 657], "correct": [54, 57, 170, 198, 199, 200, 201, 367, 435, 440, 472, 475, 545, 587, 589, 593, 595, 596, 599, 602, 603, 607, 618, 639, 644, 648, 652, 657, 659], "spatial": [54, 57, 160, 472, 475, 587, 654], "context": [54, 57, 472, 475, 589, 635], "request": [54, 123, 369, 413, 414, 438, 472, 591, 595, 596, 597, 598, 648, 659], "area": [55, 217, 219, 224, 228, 229, 230, 231, 277, 279, 284, 288, 289, 290, 306, 308, 316, 317, 321, 322, 323, 339, 341, 349, 350, 354, 355, 356, 424, 442, 446, 473, 571, 587, 589, 591, 593], "squar": [55, 418, 437, 440, 448, 473], "assumpt": [55, 440, 473], "size": [55, 157, 160, 161, 163, 164, 199, 220, 280, 309, 342, 411, 413, 414, 418, 425, 433, 434, 440, 442, 473, 543, 557, 583, 590, 618, 631, 637, 638], "m": [55, 58, 162, 198, 201, 205, 265, 294, 327, 412, 418, 422, 424, 427, 434, 437, 439, 440, 441, 444, 446, 473, 476, 557, 558, 571, 581, 587, 589, 590, 591, 593, 595, 596, 598, 606, 619, 628, 637, 638, 640, 644, 648, 658, 659], "reset_gate_coord": [56, 474], "filter_transit": [56, 57, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 474, 475, 591], "With": [56, 57, 474, 475, 648, 649, 650], "therefor": [56, 57, 440, 474, 475, 587, 652, 656], "more": [56, 57, 62, 161, 164, 377, 412, 413, 414, 419, 424, 425, 434, 446, 474, 475, 480, 559, 560, 587, 588, 589, 590, 591, 592, 595, 596, 610, 616, 627, 628, 648, 652, 656, 659], "effici": [56, 57, 413, 424, 474, 475, 648, 652], "than": [56, 57, 161, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 424, 425, 434, 440, 474, 475, 566, 571, 589, 590, 591, 637, 661], "through": [56, 57, 242, 439, 474, 475, 590, 591, 593, 594, 596, 610, 616, 659], "No": [56, 57, 162, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 377, 414, 474, 475, 591], "get_field": [57, 475, 627, 628], "check_uniform": [58, 476], "lookuperror": [58, 476], "except": [58, 377, 394, 476, 591, 595, 654], "skip": [58, 161, 162, 372, 418, 476, 589, 595, 596, 659], "nyquist_veloc": [58, 161, 162, 379, 476, 590, 593, 652, 656], "slice": [59, 71, 88, 99, 245, 246, 247, 248, 259, 260, 261, 262, 477, 489, 506, 517, 631, 654, 656], "_io": [62, 480], "textiowrapp": [62, 480], "encod": [62, 378, 480, 595], "utf": [62, 480], "compact": [62, 480], "c": [62, 119, 122, 125, 155, 157, 159, 160, 162, 255, 350, 424, 427, 429, 436, 440, 441, 442, 444, 449, 480, 545, 587, 591, 593, 595, 596, 610, 638, 648, 651, 654, 658, 659, 661], "f": [62, 255, 350, 392, 402, 480, 587, 588, 589, 590, 591, 593, 607, 611, 616, 630, 637, 638, 648, 661], "minim": [62, 440, 446, 480], "everyth": [62, 480, 591, 596, 607, 659], "screen": [62, 480], "gate_": [65, 93, 483, 511], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 392, 402, 440, 442, 485, 486, 487, 488, 489, 490, 491, 513, 514, 515, 516, 517, 518, 519, 593, 656], "over": [69, 72, 73, 97, 100, 101, 160, 161, 198, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 424, 425, 434, 487, 490, 491, 515, 518, 519, 567, 587, 591, 593, 595, 610, 637, 638, 640, 648, 651, 656], "npulses_max": [74, 492, 542], "velocity_bin": [74, 492], "simpl": [117, 405, 535, 595, 651, 652], "vpt": [117, 208, 216, 230, 268, 276, 289, 297, 305, 322, 330, 338, 355, 535, 574, 590, 595], "mean": [117, 119, 448, 535, 543, 553, 554, 567, 572, 576, 577, 587, 590, 595, 596, 599, 606, 607, 655, 656, 659], "kilomet": [119, 425, 434], "equat": [119, 440, 567, 587, 595], "28": [119, 587, 589, 591, 595, 637, 638, 640], "b": [119, 358, 416, 424, 425, 434, 441, 449, 587, 588, 589, 590, 595, 596, 638, 648, 659], "doviak": 119, "zrnic": 119, "sqrt": [119, 122, 587, 627, 628, 640], "r": [119, 121, 122, 123, 124, 125, 160, 162, 166, 167, 209, 222, 223, 243, 257, 269, 282, 283, 298, 311, 312, 313, 314, 331, 344, 345, 346, 347, 416, 424, 425, 428, 431, 432, 433, 434, 446, 448, 567, 571, 587, 596, 606, 619, 627, 628, 637, 638, 659], "sin": [119, 122, 125, 587, 589], "theta_": 119, "arcsin": [119, 122, 589], "frac": 119, "theta_a": 119, "arc": [119, 568], "length": [119, 166, 167, 440, 589, 591, 595], "effect": [119, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 229, 413, 414, 589, 611, 627], "taken": [119, 166, 167, 217, 277, 306, 339, 545, 559, 560, 567, 572, 573, 620], "6371": [119, 122, 125, 568, 580, 589], "km": [119, 122, 125, 203, 220, 225, 226, 232, 263, 280, 285, 286, 291, 292, 309, 318, 319, 324, 325, 342, 350, 351, 352, 357, 422, 424, 425, 434, 440, 543, 568, 580, 588, 589, 590, 591, 611, 620, 625, 626, 628, 635, 645, 654], "doppler": [119, 160, 161, 162, 448, 567, 590, 596, 600, 603, 604, 620, 630, 648, 656, 657, 659], "edit": [119, 594, 595, 596, 659], "1993": 119, "21": [119, 433, 587, 589, 593], "vector": [120, 123, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 422, 437, 587, 589, 591, 595], "util": [120, 157, 160, 161, 229, 427, 450, 590, 595, 596, 607, 619, 632, 635, 637, 638, 648, 659], "antenna_to_cartesian": [120, 595], "detail": [120, 127, 160, 170, 242, 255, 317, 350, 375, 376, 412, 414, 425, 434, 587, 589, 591, 593, 597, 598, 637, 638, 648, 656], "cartograph": [121, 122, 123, 124, 125, 325], "differ": [121, 123, 124, 160, 358, 405, 424, 425, 428, 434, 440, 588, 589, 590, 591, 595, 596, 604, 606, 610, 637, 638, 643, 654, 658, 659], "pass": [121, 123, 124, 160, 161, 162, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 360, 361, 369, 371, 412, 414, 440, 589, 591, 595, 598, 606, 607, 651, 654], "desir": [121, 123, 124, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 381, 425, 434, 448, 538, 581, 589, 590, 635, 655], "6370997": [122, 125], "rho": 122, "arctan2": [122, 640], "correspond": [122, 125, 141, 142, 184, 185, 216, 244, 258, 276, 305, 338, 362, 388, 399, 414, 558, 567, 569, 589, 591, 596, 606, 619, 652, 656, 659], "typic": [122, 125, 127, 131, 133, 140, 147, 152, 161, 170, 174, 176, 183, 190, 195, 377, 412, 413, 611, 661], "snyder": [122, 125], "manual": [122, 125, 595, 598], "geolog": [122, 125], "survei": [122, 125], "profession": [122, 125], "paper": [122, 125, 648], "1395": [122, 125, 595], "1987": [122, 125], "pp": [122, 125], "191": [122, 125], "202": [122, 125], "find": [123, 161, 164, 405, 412, 413, 414, 434, 435, 587, 591, 593, 595, 607, 638, 648, 661], "arcco": 125, "exclude_bas": [127, 170], "boolean": [127, 133, 141, 142, 147, 170, 176, 184, 185, 190, 358, 425, 434, 444, 595, 655], "variou": [127, 163, 165, 170, 198, 199, 200, 201, 558, 570, 589, 595, 604, 634, 648], "exclude_below": [127, 170, 587, 589, 593, 610, 636, 644, 655], "suggest": [127, 170, 588, 595], "begin": [127, 160, 161, 162, 166, 167, 170, 205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 367, 368, 371, 373, 595], "import": [127, 170, 444, 448, 449, 461, 588, 595, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 650, 651, 652, 654, 655, 656, 658], "radar_fil": [127, 170, 602, 616, 618], "nc": [127, 170, 587, 588, 590, 595, 601, 610, 611, 613, 616, 617, 618, 622, 624, 625, 626, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 650, 651, 655], "10": [127, 163, 166, 167, 170, 412, 414, 425, 429, 430, 434, 439, 441, 442, 558, 571, 587, 589, 590, 591, 593, 596, 602, 603, 607, 610, 611, 612, 616, 619, 620, 622, 624, 627, 628, 631, 637, 638, 640, 644, 647, 648, 650, 651, 652, 654, 655, 656, 657, 659], "normalized_coherent_pow": [127, 170, 587, 655], "75": [127, 170, 231, 290, 323, 356, 377, 425, 434, 439, 587, 593, 610, 627, 637, 650, 654, 655], "exclude_mask": [129, 131, 132, 133, 134, 135, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 612], "op": [129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 590], "inclus": [129, 131, 134, 139, 143, 145, 148, 153, 172, 174, 177, 182, 186, 188, 191, 196, 412, 414, 539, 595, 616], "below": [131, 145, 160, 163, 165, 166, 167, 174, 188, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 413, 414, 424, 425, 428, 431, 432, 434, 440, 567, 587, 588, 589, 590, 591, 616, 637, 650, 652, 655, 660], "compar": [131, 160, 174, 419, 557, 596, 604, 609, 614, 616, 637, 638, 657, 659], "against": [131, 160, 174, 597, 598, 627], "mark": [131, 140, 141, 142, 152, 160, 174, 183, 184, 185, 195, 588], "exclus": [131, 174, 611], "oper": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 373, 412, 429, 433, 434, 442, 446, 587, 590, 591, 596, 637, 638, 658, 659], "merg": [131, 133, 140, 147, 152, 161, 174, 176, 183, 190, 195, 363, 596, 598, 659], "AND": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195], "OR": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 587], "gener": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 204, 205, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 242, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 264, 265, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 294, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 327, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 376, 379, 394, 405, 413, 414, 435, 440, 589, 591, 592, 595, 598, 601, 602, 604, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648], "meet": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 375, 648], "result": [131, 133, 140, 147, 152, 160, 161, 162, 174, 176, 183, 190, 195, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 360, 376, 381, 414, 419, 444, 449, 578, 589, 590, 591, 596, 607, 611, 638, 639, 648, 654, 659], "previous": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 606, 637], "becaus": [131, 133, 140, 174, 176, 183, 440, 637, 661], "invalid": [131, 133, 135, 140, 165, 174, 176, 178, 183, 198, 199, 200, 201, 587], "shape": [133, 147, 176, 190, 367, 443, 587, 590, 591, 593, 595, 596, 637, 650, 654, 655, 656, 659], "v1": [134, 139, 148, 153, 177, 182, 191, 196, 587, 588, 598, 658], "v2": [134, 139, 148, 153, 177, 182, 191, 196, 596, 659], "insid": [134, 148, 177, 191, 651], "interv": [134, 139, 148, 153, 161, 165, 177, 182, 191, 196, 200, 557, 572, 573, 587, 595], "occur": [135, 154, 164, 178, 197, 369, 370, 587, 652, 656], "nan": [135, 154, 160, 165, 178, 197, 200, 442, 587, 590, 595, 635], "inf": [135, 154, 165, 178, 197, 200, 595], "outsid": [139, 153, 165, 182, 196, 200, 224, 227, 229, 230, 242, 244, 246, 248, 258, 260, 262, 284, 287, 289, 316, 317, 320, 322, 349, 350, 353, 355, 424, 591, 595, 596, 659], "trans_valu": [140, 152, 183, 195], "construct": [140, 152, 183, 195, 414, 590], "element": [141, 142, 160, 161, 162, 163, 164, 184, 185, 379, 413, 414, 418, 443, 557, 572, 573, 576, 577, 589, 590, 591], "NOT": [141, 142, 184, 185], "gate_includ": [141, 184, 655], "lost": [141, 142, 184, 185, 442, 584, 587, 654], "again": [141, 142, 184, 185, 591, 598, 607, 618, 638, 658], "gate_exclud": [142, 185, 655], "z_offset": 155, "doc": [155, 156, 157, 167, 587, 591, 595, 596, 598, 601, 607, 648, 658, 659, 661], "15": [155, 440, 571, 587, 588, 589, 590, 601, 602, 607, 616, 619, 625, 626, 627, 628, 631, 632, 635, 638, 640, 652, 656], "fzl": [155, 156, 157, 166, 167], "4000": [155, 166, 167, 654], "rhv_min": 155, "ncp_min": 155, "a_coef": [155, 157], "06": [155, 587, 589, 593], "beta": [155, 157, 427, 428, 429, 430, 431, 432], "refl_field": [155, 156, 157, 165, 166, 167, 199, 200, 414, 417, 423, 424, 425, 428, 430, 431, 432, 433, 439, 446, 601, 637, 639], "ncp_field": [155, 165, 166, 167, 200, 601], "rhv_field": [155, 165, 166, 167, 199, 200, 439, 601, 639], "spec_at_field": [155, 156, 157], "corr_refl_field": [155, 156, 157], "attenu": [155, 156, 157, 427, 428, 431, 595, 600, 603, 604, 639, 648, 657], "phi": [155, 157, 166, 595, 601], "copol_coeff": [155, 545, 601, 635, 636, 650], "norm_coherent_pow": [155, 545, 601, 650], "proc_dp_phase_shift": [155, 601, 635, 650], "reflectivity_horizont": [155, 160, 545, 588, 601, 610, 616, 618, 622, 624, 625, 626, 630, 632, 635, 636, 637, 638, 645, 650, 651], "supress": [155, 233, 244, 249, 317, 350, 591, 595], "freez": [155, 156, 157], "layer": [155, 156, 157, 198, 201, 377, 428, 440, 444, 543], "combin": [155, 156, 157, 575, 587, 589, 590, 596, 598, 659], "minimum": [155, 165, 166, 167, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 412, 414, 424, 425, 434, 539, 543, 567, 587, 589, 591, 595, 637, 654], "normal": [155, 165, 166, 167, 200, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 591, 627], "coher": [155, 165, 166, 167, 200], "power": [155, 157, 165, 166, 167, 200, 427, 428, 429, 430, 431, 432, 587, 590], "zdr_field": [155, 156, 157, 159, 199, 420, 439, 639], "spec_at": [155, 156, 157, 601, 639], "cor_z": [155, 156, 157, 601, 639], "gu": [155, 157], "et": [155, 157, 159, 424, 425, 429, 433, 434, 439, 440, 446, 637, 638], "al": [155, 157, 159, 424, 425, 429, 433, 434, 439, 440, 441, 446, 637, 638], "heavi": [155, 157, 571, 589, 619, 627, 638], "rain": [155, 157, 424, 427, 428, 429, 430, 433, 434, 446, 595, 619, 627, 637, 638, 639], "jamc": [155, 157, 442, 558], "2011": [155, 157, 635], "50": [155, 157, 557, 587, 588, 589, 590, 593, 613, 631, 635, 639, 654, 656], "39": [155, 157, 587, 589, 635], "58": [155, 157, 424, 590, 635], "pia_coef": 156, "pida_coef": 156, "temp_field": [156, 157, 201, 439, 639], "iso0_field": [156, 157, 198], "pia_field": [156, 157], "spec_diff_at_field": [156, 157], "pida_field": [156, 157], "corr_zdr_field": [156, 157], "temp_ref": [156, 157, 639], "linear": [156, 166, 167, 242, 369, 425, 434, 442, 567, 579, 590, 591, 595, 637, 638, 648], "dependec": 156, "comput": [156, 157, 159, 199, 420, 421, 422, 423, 425, 434, 440, 441, 442, 553, 554, 555, 556, 557, 572, 573, 576, 577, 583, 587, 590, 595, 639, 640, 648], "either": [156, 157, 160, 161, 162, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 320, 321, 322, 339, 340, 341, 349, 353, 354, 355, 363, 392, 402, 428, 431, 432, 596, 637, 658, 659], "frequenc": [156, 157, 379, 427, 428, 429, 431, 432, 436, 440, 441, 442, 590], "refl": [156, 157, 625], "integr": [156, 157, 587, 590], "pida_coeff": 156, "0c": [156, 157], "isotherm": [156, 157], "height_over_iso0": [156, 157, 655], "fixed_fzl": [156, 157], "pia_dict": [156, 157], "spec_diff_at": [156, 157, 639], "pida_dict": [156, 157], "cor_zdr": [156, 157, 639], "smooth_window_len": 157, "d": [157, 162, 205, 265, 294, 327, 381, 382, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 424, 442, 449, 558, 587, 589, 590, 591, 596, 635, 648, 659], "smooth": [157, 164, 440, 568, 580, 591, 627, 628, 654], "window": [157, 160, 166, 167, 199, 418, 442, 448, 557, 566, 578, 583, 595, 596, 648, 659], "expon": [157, 166, 167, 416, 427, 428, 429, 430, 431, 432], "law": [157, 427, 428, 429, 430, 431, 432], "ryzhkov": [157, 427, 444, 558], "potenti": [157, 427, 587], "rainfal": [157, 424, 427, 428, 429, 430, 431, 432, 433, 440, 442], "estim": [157, 198, 201, 219, 279, 308, 341, 422, 427, 428, 429, 430, 431, 432, 433, 440, 441, 442, 444, 558, 567, 590, 595, 637, 638], "mitig": [157, 427], "partial": [157, 427, 595], "beam": [157, 411, 413, 414, 427, 590], "blockag": [157, 427], "network": [157, 161, 371, 427, 589], "jaot": [157, 159], "2014": [157, 427, 441, 444, 648], "31": [157, 369, 427, 587, 589, 590, 593, 607, 635], "599": [157, 427], "619": [157, 427, 595], "bia": [158, 595], "magnitud": [158, 440, 640, 656], "corrected_field": 158, "urhohv_field": 159, "snr_field": [159, 417, 423], "nh_field": 159, "nv_field": 159, "rhohv_field": [159, 420, 421], "nois": [159, 417, 422, 423, 567, 590, 595, 652], "eq": [159, 625], "6": [159, 199, 424, 428, 587, 589, 590, 607, 610, 611, 616, 617, 621, 624, 635, 636, 639, 640, 641, 650, 652, 655, 656], "2006": [159, 607], "subtract": [159, 425, 434], "uncorrect": [159, 587, 644], "snr": [159, 417, 423, 595], "channel": [159, 377, 587, 590, 595, 598], "meteo": 159, "franc": 159, "23": [159, 587, 589, 590], "1340": 159, "1356": [159, 595], "last_radar": 160, "sonde_profil": 160, "filt": 160, "rsl_badval": 160, "131072": 160, "keep_origin": [160, 161, 162], "set_limit": [160, 161, 162, 588, 619, 620, 621, 623, 625, 626, 627, 628, 630], "vel_field": [160, 161, 162, 418, 449, 644, 652], "corr_vel_field": [160, 161, 162], "last_vel_field": 160, "max_shear": 160, "05": [160, 413, 414, 587, 589, 631, 635, 647, 657], "sign": [160, 595, 627, 628], "dealia": [160, 161, 162, 426, 593, 595, 600, 603, 604, 643, 647, 652, 657], "4dd": [160, 595], "univers": [160, 374, 433, 587, 595, 648], "washington": 160, "previou": [160, 317, 350, 591, 595, 598], "sound": [160, 595], "For": [160, 245, 247, 259, 261, 367, 377, 413, 440, 587, 588, 590, 591, 595, 596, 599, 606, 610, 639, 648, 655, 656, 659, 661], "best": [160, 589], "argument": [160, 161, 162, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 277, 284, 288, 289, 306, 313, 314, 315, 316, 317, 318, 321, 322, 339, 346, 347, 348, 349, 350, 351, 354, 355, 369, 371, 379, 381, 412, 414, 441, 442, 595, 596, 659], "_fourdd_interfac": 160, "fourdd_dealia": 160, "fine": 160, "tune": [160, 637, 638], "behavior": [160, 317, 350, 367, 381, 591, 595, 599], "fourdd": 160, "document": [160, 245, 247, 255, 259, 261, 317, 350, 370, 375, 376, 579, 585, 588, 590, 591, 592, 596, 597, 648, 654, 659], "dealias": [160, 161, 162, 426, 595, 596, 602, 606, 644, 648, 649, 659], "mean_doppler_veloc": [160, 590, 630, 635, 644, 650], "successfulli": 160, "greatli": 160, "improv": [160, 441, 442, 571, 591, 598, 619, 638], "final": [160, 441, 442, 587, 588, 594, 598, 611, 637], "horizontalwindprofil": [160, 362, 363, 449, 579, 595, 596, 659], "sond": [160, 161, 362, 363, 435, 595, 602], "moment_based_gate_filt": [160, 161, 162, 414, 589], "bergen": 160, "alber": 160, "bad": [160, 440, 441, 442, 446], "rsl": [160, 361, 372, 373, 595, 648, 658], "procedur": [160, 161, 162], "fail": [160, 161, 162, 367, 377, 595, 596, 659], "otherwis": [160, 388, 399, 428, 431, 432, 437, 598], "maxshear": 160, "maximum": [160, 161, 165, 166, 167, 198, 199, 200, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 358, 377, 412, 414, 419, 425, 428, 431, 432, 434, 440, 539, 543, 557, 566, 574, 587, 589, 591, 636, 637, 644, 656], "shear": 160, "incorpor": [160, 434, 637], "match": [160, 163, 164, 203, 263, 292, 325, 373, 405, 595, 610, 618, 638], "toward": 160, "neg": [160, 217, 228, 277, 288, 306, 321, 339, 354, 440, 566, 587, 595, 616], "compthresh": 160, "fraction": [160, 589, 637, 656], "threshold": [160, 163, 164, 165, 198, 199, 200, 201, 358, 424, 425, 428, 431, 432, 434, 567, 571, 587, 589, 593, 637, 644, 652, 655], "continu": [160, 162, 590, 595, 596, 659], "unfold": [160, 161, 166, 167, 440], "compthresh2": 160, "thresh": [160, 428, 431, 432], "adjac": [160, 591], "count": [160, 610, 652, 656], "assign": [160, 589, 595, 637], "question": [160, 359, 414, 591, 648], "ckval": 160, "absolut": [160, 557, 638], "stdthresh": 160, "deviat": [160, 543, 555, 556, 573, 587, 652], "portion": [160, 593, 654], "epsilon": 160, "miss": [160, 440, 441, 442, 446, 587, 595, 607], "maxcount": 160, "allow": [160, 163, 164, 216, 276, 305, 338, 405, 424, 558, 566, 588, 591, 595, 599, 610, 656, 661], "fold": [160, 161, 606], "pass2": 160, "retain": [160, 161, 162, 165, 198, 199, 200, 201, 584], "rm": 160, "what": [160, 169, 414, 587, 590, 591, 593, 594, 595, 596, 606, 616, 644, 650, 652, 655, 659, 661], "left": [160, 315, 348, 589, 591, 593, 616, 618], "proxim": 160, "side": 160, "doubl": [160, 377, 637], "captur": [160, 424, 644], "suffici": 160, "good": [160, 161, 587, 588, 598], "mingood": 160, "ba_mincount": 160, "neighbor": [160, 369, 414, 587, 595, 611, 654], "ba_edgecount": 160, "usuccess": 160, "radialvelvolum": 160, "lastvelvolum": 160, "unfoldedvolum": 160, "sondvolum": 160, "vr_corr": 160, "due": [160, 419, 424, 587, 589, 591, 595, 610, 652, 658, 661], "call": [160, 163, 216, 217, 219, 224, 228, 229, 230, 244, 276, 277, 279, 284, 288, 289, 305, 306, 308, 316, 317, 321, 322, 338, 339, 341, 349, 350, 354, 355, 372, 377, 381, 558, 570, 588, 590, 591, 596, 598, 652, 656, 659, 661], "999": [160, 381, 587, 595], "long": [160, 429, 595, 638, 651, 656], "n": [160, 418, 424, 439, 557, 587, 589, 590, 591, 593, 606, 610, 611, 619, 630, 632, 635, 637, 638, 642, 648, 661], "jame": 160, "houz": [160, 358, 425, 434, 446, 637, 638], "jr": [160, 425, 434, 446, 637, 638], "four": [160, 369, 370, 372], "dealis": 160, "scheme": [160, 358, 412, 425, 434, 440, 588, 637], "2001": 160, "18": [160, 587, 589, 617, 628], "1674": 160, "ref_vel_field": 161, "interval_split": 161, "interval_limit": 161, "skip_between_rai": 161, "100": [161, 163, 165, 200, 220, 225, 242, 280, 285, 309, 342, 379, 449, 587, 589, 590, 591, 593, 613, 617, 627, 628, 640], "skip_along_rai": 161, "nyquist_vel": [161, 162, 593, 644, 652], "check_nyquist_uniform": [161, 162, 418], "rays_wrap_around": [161, 162], "region": [161, 167, 255, 317, 350, 419, 424, 571, 587, 589, 590, 591, 593, 595, 596, 600, 603, 604, 606, 619, 637, 638, 644, 655, 657, 659], "similar": [161, 590, 591, 610, 654], "pair": [161, 242, 369, 381, 389, 394, 400, 589, 650], "accomplish": [161, 373, 604, 643], "problem": [161, 166, 167, 292, 325, 414, 607], "dynam": [161, 587], "reduct": 161, "anchor": 161, "onc": [161, 591, 596, 598, 637, 658, 659, 661], "complet": [161, 595], "simul": [161, 579, 595], "simulated_vel_from_profil": [161, 596, 659], "segment": [161, 313, 314, 346, 347, 595], "split": [161, 571, 587], "larger": [161, 591, 637], "longer": [161, 566, 589, 595, 596, 648, 658, 659], "process": [161, 166, 167, 587, 590, 593, 595, 596, 598, 606, 638, 648, 659], "better": [161, 220, 225, 280, 285, 309, 318, 342, 351, 595, 638, 648, 652], "seem": 161, "compromis": 161, "artifact": [161, 652, 654], "free": [161, 592, 593, 648], "cover": [161, 587], "entir": [161, 162, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 414, 581, 587, 590, 591], "join": [161, 461, 595], "gap": [161, 163, 164, 654], "connect": [161, 162], "disabl": [161, 162, 165, 198, 199, 200, 201], "across": [161, 589, 595, 636], "so": [161, 217, 228, 277, 288, 306, 321, 339, 354, 373, 414, 587, 590, 591, 593, 595, 596, 606, 607, 637, 648, 659, 661], "averag": [161, 358, 425, 434, 567, 572, 593, 637, 638, 640], "individu": [161, 162, 414], "attempt": [161, 162, 375, 376, 595], "de": [161, 162, 348, 550, 551], "alias": [161, 162, 550, 551, 593, 595, 652, 656], "corr_vel": [161, 162], "unwrap_unit": 162, "skip_check": [162, 595], "multi": [162, 595], "unwrap": [162, 166, 167, 595], "independ": 162, "often": [162, 419], "give": [162, 377, 591, 597, 598, 644, 645, 646, 648, 652, 655], "superior": 162, "lower": [162, 242, 244, 246, 248, 258, 260, 262, 424, 590, 611, 612, 613], "contamin": [162, 446], "clutter": [162, 652, 655], "poor": 162, "verif": [162, 558, 595], "appropi": [162, 216, 276, 305, 338], "offer": [162, 588], "extrem": 162, "miguel": 162, "arevallilo": 162, "herraez": 162, "david": [162, 591], "burton": 162, "michael": [162, 591], "lalor": 162, "munther": 162, "gdeisat": 162, "fast": 162, "two": [162, 379, 412, 425, 434, 437, 438, 446, 543, 575, 576, 577, 589, 590, 591, 593, 595, 598, 604, 609, 614, 615, 617, 632, 633, 651, 654, 657], "sort": [162, 589, 593, 594, 595], "reliabl": 162, "follow": [162, 165, 199, 200, 375, 376, 378, 379, 392, 402, 413, 414, 424, 439, 440, 587, 589, 590, 591, 593, 596, 598, 599, 606, 635, 648, 658, 659], "noncontinu": 162, "optic": 162, "vol": 162, "41": [162, 589, 635, 640, 654], "2002": 162, "7437": 162, "abdul": 162, "rahman": 162, "h": [162, 205, 255, 265, 294, 327, 350, 444, 567, 587, 589, 590, 610, 618], "osten": 162, "gorecki": 162, "e": [162, 164, 166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 362, 377, 392, 402, 424, 425, 434, 440, 446, 571, 587, 588, 590, 591, 596, 606, 619, 637, 638, 658, 659], "l": [162, 166, 167, 221, 225, 226, 255, 281, 285, 286, 310, 319, 343, 350, 352, 421, 434, 571, 587, 591, 619, 638], "novak": 162, "ed": 162, "metrologi": 162, "2005": [162, 425, 434, 637, 638], "32": [162, 424, 543, 587, 595, 616, 620, 621, 622, 632, 635, 638, 640, 656], "40": [162, 255, 424, 587, 590, 602, 611, 613, 618, 622, 624, 627, 637, 638, 644], "intern": [162, 591], "societi": [162, 416, 419, 429], "photon": 162, "label_dict": [163, 164], "delta": [163, 164, 441], "despeckl": [163, 595], "identifi": [163, 164, 358, 425, 434, 567, 587, 591, 593, 619, 637, 638, 655], "small": [163, 164, 424, 425, 434, 446, 595, 610, 611, 627], "investig": [163, 164, 444, 606], "scipi": [163, 164, 440, 579, 587, 595, 596, 627, 628, 648, 658, 659, 661], "core": [163, 164, 358, 377, 405, 414, 424, 425, 434, 441, 442, 558, 570, 590, 595, 596, 601, 637, 659], "queri": [163, 164, 414, 587, 591], "speckl": [163, 637], "find_object": 163, "tupl": [163, 164, 217, 219, 222, 223, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 277, 279, 282, 283, 284, 287, 288, 289, 291, 306, 308, 311, 312, 316, 317, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 353, 354, 355, 357, 389, 400, 412, 414, 418, 437, 438, 539, 557, 591, 595], "contigu": [163, 164], "perman": 163, "deg": [163, 164, 198, 201, 440, 581, 587, 640], "label": [164, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 282, 283, 284, 287, 288, 289, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 312, 315, 316, 317, 320, 321, 322, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 344, 345, 348, 349, 350, 353, 354, 355, 584, 587, 589, 591, 593, 595, 610, 617, 618, 627, 628, 632, 639], "period": [164, 566, 587, 590, 652], "account": [164, 595], "g": [164, 377, 412, 434, 440, 442, 449], "examin": [164, 360, 373, 376, 590, 593, 596, 648, 659], "box": [164, 377, 639], "alwai": [164, 361, 373, 424, 425, 434, 440, 591, 595, 599, 648], "readi": 164, "min_ncp": [165, 166, 200], "min_rhv": [165, 166, 199, 200], "min_refl": [165, 200], "20": [165, 199, 200, 444, 558, 587, 588, 589, 590, 591, 593, 606, 607, 610, 611, 617, 618, 619, 622, 624, 625, 626, 627, 628, 630, 636, 637, 638, 641, 645, 646, 650, 654, 656, 657], "max_refl": [165, 200], "undesir": [165, 198, 199, 200, 201, 414], "cross": [165, 199, 200, 217, 220, 242, 277, 280, 306, 309, 339, 342, 559, 560, 587, 590, 593, 595, 604, 615, 624, 633, 637, 656, 657], "ratio": [165, 199, 200, 231, 290, 323, 356, 417, 420, 587, 590, 593, 656], "min_rhi": [165, 200], "criteria": [165, 198, 199, 200, 201, 414, 440, 446], "built": [165, 198, 199, 200, 201, 413, 414], "lowest": [165, 198, 199, 200, 201, 419, 443, 593, 606, 610, 635, 637, 638], "greatest": [165, 200], "self_const": [166, 167], "60000": [166, 167, 613, 617, 654], "low_z": [166, 167], "high_z": [166, 167], "53": [166, 167, 587, 589, 593], "min_phidp": [166, 167], "01": [166, 167, 315, 348, 440, 587, 589, 590, 593, 603, 614, 616, 633, 657], "sys_phas": 166, "overide_sys_phas": 166, "nowrap": [166, 167], "really_verbos": [166, 167], "lp_solver": [166, 167], "pyglpk": [166, 167, 595, 648, 658], "kdp_field": [166, 167, 428, 429, 431, 432, 439, 440, 441, 442, 639], "unf_field": [166, 167], "window_len": [166, 167], "proc": [166, 167, 440, 595], "coef": [166, 167, 595], "914": [166, 167, 595], "lp": [166, 167, 595, 648], "consist": [166, 167, 595, 654], "factor": [166, 167, 379, 419, 427, 428, 429, 430, 431, 432, 557, 587, 588, 590, 618, 626, 632, 654], "low": [166, 167, 369, 440, 611, 619], "high": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 424, 440, 590, 591, 593, 611, 639], "copolar": [166, 167, 439, 636], "automat": [166, 373, 378, 379, 414, 418, 446, 589, 591, 595, 596, 598, 622, 648, 659], "lpx": [166, 167], "messag": [166, 167, 233, 249, 369, 588, 595, 598, 607], "suppress": [166, 167, 440], "cvxopt": [166, 167, 595, 648, 658], "cylp": [166, 167, 595, 648, 658, 661], "cylp_mp": [166, 167], "modul": [166, 167, 545, 585, 591, 595, 596, 606, 607, 648, 651, 652, 654, 655, 656, 658, 659], "solv": [166, 167, 594, 595], "horizon": [166, 167, 439], "sobel": [166, 167], "worker": [166, 167], "link": [166, 167, 589, 590, 593, 595], "1z": [166, 167], "reproc_phas": [166, 167], "sob_kdp": [166, 167], "recalcul": [166, 167, 650], "giangrand": [166, 167, 648], "mcgraw": [166, 167], "lei": [166, 167], "applic": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 425, 434, 578, 591, 593, 596, 659], "program": [166, 167, 595, 596, 648, 659], "atmo": [166, 167, 424, 433, 439, 444, 558, 571, 596, 619, 638, 659], "tech": [166, 167, 439, 571, 619, 638], "2013": [166, 167, 441, 444, 656], "30": [166, 167, 424, 425, 434, 587, 589, 590, 591, 610, 611, 618, 622, 624, 637, 638, 652], "1716": [166, 167], "system_phas": 167, "ncpt": 167, "first_gate_sysp": 167, "carri": 167, "smaller": [167, 350, 587, 590, 591, 596, 637, 659], "off": [167, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 438, 444, 587, 591, 616, 637, 638], "custom": [168, 216, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 276, 277, 278, 279, 284, 288, 289, 305, 306, 307, 308, 316, 317, 321, 322, 338, 339, 340, 341, 349, 350, 354, 355, 413, 424, 591, 654], "max_h_iso0": 198, "thick": [198, 201], "400": [198, 201, 595, 650], "beamwidth": [198, 201], "primarili": [198, 201], "melt": [198, 201, 428, 440, 444, 571, 619, 637, 638, 639], "db": [198, 201, 417, 627, 656], "phi_field": 199, "textzdr_field": 199, "textrhv_field": 199, "textphi_field": 199, "textrefl_field": 199, "wind_siz": [199, 418, 583, 652], "7": [199, 367, 448, 583, 587, 589, 590, 591, 593, 596, 598, 607, 612, 617, 619, 624, 631, 655, 656, 659], "max_textphi": 199, "max_textrhv": 199, "max_textzdr": 199, "85": [199, 587, 591, 640], "max_textrefl": 199, "move": [199, 567, 589, 593, 595, 610], "highest": 199, "min_temp": 201, "There": [202, 589, 591, 593, 598, 616, 658, 661], "colorblind": [202, 588, 593, 616], "friendli": [202, 588, 593, 595, 616], "revers": [202, 217, 228, 277, 288, 306, 321, 339, 354, 373, 440, 595], "_r": 202, "matplotlib": [202, 217, 219, 222, 223, 224, 228, 229, 230, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 288, 289, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 377, 587, 588, 589, 590, 593, 595, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 648, 650, 651, 652, 654, 655, 658, 661], "pyart_colormap": 202, "bluebrown10": [202, 616], "bluebrown11": [202, 616], "brbu10": [202, 616], "brbu12": [202, 616], "bu10": [202, 616], "bu7": [202, 616], "budor12": [202, 616], "budor18": [202, 616], "budrd12": [202, 616], "budrd18": [202, 616], "bugr14": [202, 616], "bugy8": [202, 616], "buor10": [202, 616], "buor12": [202, 616], "buor8": [202, 616], "buorr14": [202, 616], "carbone11": [202, 616], "carbone17": [202, 616], "carbone42": [202, 616], "cat12": [202, 616], "ewilson17": [202, 616], "grmg16": [202, 616], "gray5": [202, 616], "gray9": [202, 616], "nwsref": [202, 616], "nwsvel": [202, 616], "nws_spw": [202, 616], "pd17": [202, 616], "rrate11": [202, 616], "rdylbu11b": [202, 616], "refdiff": [202, 616], "scook18": [202, 616], "stepseq25": [202, 616], "symgray12": [202, 616], "theodore16": [202, 616], "wild25": [202, 616], "langrainbow12": [202, 616], "homeyerrainbow": [202, 595, 616], "balanc": [202, 595, 616], "chasespectr": [202, 616], "spectralextend": [202, 616], "displai": [203, 217, 219, 224, 228, 229, 230, 232, 263, 277, 279, 284, 288, 289, 291, 292, 306, 308, 316, 317, 321, 322, 324, 325, 339, 341, 349, 350, 354, 355, 357, 377, 419, 448, 449, 588, 589, 590, 591, 593, 595, 596, 601, 602, 606, 607, 611, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 650, 651, 652, 654, 655, 659], "airborn": [203, 595], "plot_var": [203, 263, 292, 325], "order": [203, 263, 292, 325, 358, 373, 378, 379, 405, 425, 434, 440, 557, 587, 595, 596, 601, 637, 638, 648, 659], "cb": [203, 263, 292, 325, 618, 638], "colorbar": [203, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 249, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 316, 317, 320, 321, 322, 325, 339, 340, 341, 349, 350, 353, 354, 355, 587, 589, 590, 591, 595, 604, 610, 615, 616, 632, 633, 638, 657], "loc": [203, 263, 292, 325, 587, 589, 593, 617], "titl": [204, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 238, 239, 240, 242, 244, 246, 248, 251, 252, 253, 258, 260, 262, 264, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 588, 589, 590, 591, 593, 594, 595, 601, 602, 610, 618, 620, 621, 623, 625, 626, 630, 656], "ext": [205, 237, 250, 265, 294, 327], "png": [205, 237, 250, 265, 294, 327, 588, 589, 591, 593], "datetime_format": [205, 207, 265, 267, 294, 296, 327, 329], "use_sweep_tim": [205, 207, 265, 267, 294, 296, 327, 329], "form": [205, 219, 237, 250, 265, 279, 294, 308, 327, 341, 587, 591, 595], "radar_name_field_sweep_tim": [205, 265, 294, 327], "datetim": [205, 207, 224, 228, 230, 265, 267, 284, 288, 289, 294, 296, 316, 321, 322, 327, 329, 349, 354, 355, 362, 363, 379, 561, 562, 563, 564, 565, 589, 593, 595], "strftime": [205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 589, 590], "suitabl": [205, 237, 250, 265, 294, 327, 424, 591], "xaxi": [209, 212, 269, 272, 298, 301, 331, 334, 618], "static": [210, 211, 220, 221, 225, 231, 232, 270, 271, 280, 281, 285, 290, 291, 299, 300, 309, 310, 323, 324, 332, 333, 342, 343, 356, 357, 588], "yaxi": [210, 211, 213, 214, 215, 270, 271, 273, 274, 275, 299, 300, 302, 303, 304, 332, 333, 335, 336, 337], "keyword": [216, 276, 305, 317, 338, 350, 369, 371, 587, 591, 595, 651, 654], "plot_ppi": [216, 276, 305, 338, 595, 602, 639, 644, 646, 650], "plot_sweep_grid": [216, 595], "target_azimuth": [217, 277, 306, 339, 559], "mask_tupl": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 591], "norm": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 440, 591, 595, 618, 639], "cmap": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 587, 588, 589, 590, 591, 593, 610, 616, 617, 618, 619, 623, 626, 628, 630, 631, 636, 637, 638, 644, 645, 646, 651, 652], "mask_outsid": [217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 588, 591, 595, 625, 626], "title_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 591, 630], "axislabel": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 588, 620, 625, 626], "axislabels_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 595, 637, 638], "colorbar_flag": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589, 591], "colorbar_label": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 588, 591, 593, 601, 602, 606, 620, 621, 625, 626, 627, 628, 632, 644], "colorbar_ori": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 593, 595], "reverse_xaxi": [217, 228, 277, 288, 306, 321, 339, 354], "fig": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 587, 588, 589, 590, 591, 593, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 636, 638, 639, 640, 644, 652, 654, 655], "tick": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 591, 595, 616, 618, 637, 638, 639], "ticklab": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 591, 595, 637, 638, 639], "raster": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 591, 595], "pseudo": [217, 277, 306, 339, 595], "associ": [217, 277, 306, 339, 394, 424, 587, 598], "pcolormesh": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587, 595, 610, 627, 637, 638], "integ": [217, 277, 306, 339, 379, 418, 437, 438], "ncp": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 591], "lumin": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 591], "scale": [217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 413, 414, 421, 424, 440, 441, 587, 590, 591, 619], "west": [217, 228, 277, 288, 306, 321, 339, 354, 587, 591, 620], "leav": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589, 591], "orient": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 589, 591, 592, 639, 640], "treat": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 591], "themselv": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 591], "figur": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 588, 589, 590, 591, 593, 594, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 636, 637, 638, 644, 651, 652, 654, 655], "render": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 590, 591], "rather": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 591], "larg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 440, 446, 591, 593, 595], "Be": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 591, 598], "sure": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 590, 591, 594, 595, 598, 610, 618, 637, 658, 661], "dpi": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589, 591, 593], "pdf": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 591], "ep": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 591], "svg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 591], "mappabl": [218, 241, 249, 256, 278, 307, 340], "cax": [218, 241, 256, 278, 307, 340, 639], "imag": [218, 241, 256, 278, 307, 340, 424, 438, 557, 571, 587, 588, 590, 591, 595, 604, 615, 633, 635, 637, 638, 657], "contourset": [218, 241, 249, 256, 278, 307, 340], "etc": [218, 241, 244, 249, 256, 278, 307, 317, 340, 350, 376, 434, 589, 591, 595], "onto": [218, 241, 256, 258, 278, 307, 317, 340, 350, 405, 412, 414, 443, 591], "drawn": [218, 241, 256, 278, 307, 340, 591], "target_rang": [219, 279, 308, 341], "delta_x": [219, 279, 308, 341], "delta_i": [219, 279, 308, 341], "az_limit": [219, 279, 308, 341], "el_limit": [219, 279, 308, 341], "corner": [219, 279, 308, 315, 341, 348, 591, 592, 595], "reflector": [219, 279, 308, 341, 595], "griddata": [219, 279, 308, 341], "min": [219, 279, 308, 341, 587, 591, 640], "max": [219, 279, 308, 341, 377, 587, 591, 595, 606, 610, 611, 616, 617, 622, 630, 640, 644, 645, 646], "npt": [220, 225, 280, 285, 309, 318, 342, 351], "hair": [220, 280, 309, 342, 624], "higher": [220, 225, 280, 285, 309, 318, 342, 351, 590, 652, 654], "col": [221, 225, 226, 281, 285, 286, 310, 319, 343, 352, 590, 611], "line": [221, 227, 243, 244, 255, 257, 281, 287, 310, 313, 314, 317, 318, 320, 343, 346, 347, 350, 351, 353, 377, 440, 588, 589, 590, 591, 595, 596, 598, 604, 615, 617, 633, 635, 657, 658, 659, 661], "color": [221, 222, 223, 225, 226, 243, 281, 282, 283, 285, 286, 310, 311, 312, 314, 317, 318, 319, 343, 344, 345, 350, 352, 377, 588, 589, 590, 591, 593, 617, 618, 619, 627, 628, 635, 637, 638, 639], "linestyl": [221, 225, 226, 243, 281, 285, 286, 310, 319, 343, 352, 589, 591, 593, 617, 618, 628], "symbol": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348], "text_color": [222, 223, 282, 283, 311, 312, 344, 345], "text": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348, 461, 589, 594, 595, 598, 616, 625, 640, 648, 652], "just": [222, 223, 282, 283, 311, 312, 344, 345, 367, 595, 596, 616, 619, 650, 656, 659, 661], "marker": [222, 223, 227, 243, 257, 282, 283, 287, 311, 312, 320, 344, 345, 353, 587, 589], "title_datetime_format": [224, 228, 284, 288, 316, 321, 349, 354], "title_use_sweep_tim": [224, 228, 284, 288, 316, 321, 349, 354], "range_ring_location_km": [225, 285, 318, 351], "lw": [225, 226, 285, 286, 319, 352, 591, 593], "ring": [225, 226, 285, 286, 318, 319, 351, 352, 589, 611, 612, 624], "range_r": [226, 286, 319, 352], "seri": [226, 286, 319, 352, 587, 590], "draw": [226, 244, 255, 286, 317, 319, 350, 352, 589, 591], "format_str": [227, 287, 320, 353], "ray_min": [227, 287, 320, 353], "ray_max": [227, 287, 320, 353], "style": [227, 243, 257, 287, 313, 314, 318, 320, 346, 347, 351, 353, 377, 595], "ignoretilt": 229, "antenna_to_cartesian_track_rel": 229, "slant": 229, "ncar": 229, "soloii": 229, "time_axis_flag": [230, 289, 322, 355, 590], "date_time_form": [230, 289, 322, 355], "tz": [230, 289, 322, 355, 589], "zone": [230, 289, 322, 355], "info": [230, 289, 317, 322, 350, 355, 591, 595, 639, 656], "aspect_ratio": [231, 290, 323, 356], "aspect": [231, 290, 323, 356, 616], "xlim": [232, 291, 324, 357, 587, 588, 591, 593, 621, 623, 627, 628, 654], "ylim": [232, 291, 324, 357, 587, 588, 590, 591, 593, 621, 623, 625, 626, 627, 628, 630, 632], "cartopi": [233, 234, 235, 236, 244, 292, 317, 587, 589, 591, 593, 595, 596, 604, 606, 607, 610, 611, 615, 617, 618, 631, 633, 635, 637, 638, 644, 648, 651, 652, 654, 655, 657, 658, 659, 661], "coastlin": [234, 244, 317, 350, 587, 591], "polit": 235, "state": [236, 441, 589, 591, 593, 595], "grid_name_field_level_tim": [237, 250], "latitudin": [239, 246, 260], "step": [242, 377, 588, 590, 598, 606, 627, 628, 637, 661], "interp_typ": 242, "x_axi": [242, 617], "metpi": [242, 589, 591, 593], "design": [242, 571, 587, 596, 627, 637, 638, 648, 659], "geodes": 242, "nearest": [242, 369, 414, 435, 559, 560, 579, 587, 591, 595, 654], "dataarrai": 242, "interp": [242, 442], "ex": [242, 442, 589, 593, 594, 616], "upper": [242, 244, 246, 248, 258, 260, 262, 589, 593, 617], "colormesh": [242, 244, 246, 248, 258, 260, 262], "64": [242, 244, 246, 248, 258, 260, 262, 588, 616, 621, 622, 623, 627, 629, 631, 632, 635, 655, 658], "linewidth": [243, 257, 589, 591, 593, 618, 627, 628], "crosshair": [243, 257, 591], "lat_lin": [244, 255, 317, 350, 589, 591, 610, 624, 635], "lon_lin": [244, 255, 317, 350, 589, 591, 610, 624, 635], "embellish": [244, 317, 350, 589, 618], "add_grid_lin": [244, 317, 589], "reason": [244, 255, 591], "america": [244, 255, 317, 350, 591], "cr": [244, 292, 317, 587, 589, 591, 593, 606, 607, 610, 611, 617, 618, 624, 631, 635, 637, 638, 639, 644, 651, 652, 655], "subsequ": [244, 317, 591], "geoax": [244, 317, 591, 651, 654], "platecarre": [244, 317, 587, 589, 591, 593, 606, 610, 617, 618, 631, 635, 637, 638, 644, 652, 655], "shapefil": [244, 317, 350, 591], "certain": [244, 317, 359, 438, 571, 591, 595, 637, 638, 655], "plot_latitudinal_level": [245, 259], "y_index": [246, 260], "basemap": [246, 248, 249, 254, 255, 258, 260, 262, 325, 346, 347, 348, 350, 351, 595, 648, 658], "plot_longitudinal_level": [247, 261], "x_index": [248, 262], "top": [249, 414, 443, 587, 589, 592, 595, 596, 616, 635, 654, 659], "veric": 251, "area_thresh": [255, 350], "10000": [255, 350, 449, 611, 617, 637, 638, 654], "auto_rang": 255, "min_lon": [255, 317, 350, 589, 591, 610, 624, 655], "92": [255, 625, 635], "max_lon": [255, 317, 350, 589, 591, 610, 624, 655], "86": [255, 591], "min_lat": [255, 317, 350, 589, 591, 610, 624, 655], "max_lat": [255, 317, 350, 589, 591, 610, 624, 655], "44": [255, 425, 434, 587, 589, 637, 638, 658], "databas": [255, 350, 593], "merc": [255, 350], "mercat": [255, 611], "line_styl": [257, 313, 314, 318, 346, 347, 351, 624], "plot_rhi": [276, 305, 338, 587], "plot_vpt": [276, 305, 338, 590], "grid_project": [292, 413, 414, 591], "progress": [292, 325], "some": [292, 325, 389, 400, 442, 461, 588, 589, 590, 591, 593, 594, 595, 607, 616, 617, 635, 637, 648, 652, 654, 658], "correctli": [292, 325, 595], "github": [292, 325, 589, 592, 595, 628, 648, 658, 661], "tracker": [292, 325, 596, 648, 659], "azimuthalequidist": 292, "line_lon": [313, 346], "line_lat": [313, 346], "compat": [313, 314, 315, 318, 346, 347, 348, 351, 374, 589, 595, 599, 661], "line_x": [314, 347], "line_i": [314, 347], "ro": [315, 348], "label_text": [315, 348], "label_offset": [315, 348], "bottom": [315, 348, 589, 591, 616, 618], "110m": [317, 591], "shapefile_kwarg": [317, 591], "alpha": [317, 350, 427, 428, 429, 430, 431, 432, 589, 593, 618, 627], "edgecolor": [317, 350, 589, 593, 627], "face": [317, 350, 591], "reson": [317, 350, 591], "lambertconform": [317, 591, 607, 624, 651], "domain": [317, 350, 587, 591, 610], "neither": [317, 350, 381, 591], "extend": [317, 350, 373, 591], "word": [317, 591], "10m": [317, 589, 591, 607, 624], "50m": [317, 591, 644, 652, 655], "naturalearthfeatur": [317, 591], "tranpar": [317, 350, 591], "overplot": [317, 350, 591], "pixel": [317, 350, 437, 438, 543, 587, 591], "lcc": 350, "cylindr": 350, "mill": 350, "exhibit": 350, "distort": 350, "aea": 350, "laea": 350, "conform": [350, 591, 648, 650], "tmerc": 350, "stere": 350, "aeqd": 350, "cass": 350, "even": [350, 424, 442, 593, 595, 627, 648, 654, 661], "cyl": [350, 595], "cannot": [350, 361, 589, 591], "lake": [350, 593], "esri": 350, "background": [350, 358, 425, 434, 446, 591, 594, 624, 631, 637, 638], "untest": 350, "always_core_thr": [358, 425, 434, 637, 638], "use_cosin": [358, 425, 434, 637, 638], "max_diff": [358, 425, 434, 637, 638], "zero_diff_cos_v": [358, 425, 434, 637, 638], "use_addit": [358, 425, 434, 637, 638], "scalar_diff": [358, 425, 434, 637, 638], "convect": [358, 424, 425, 434, 446, 587, 595, 604, 634, 641, 657], "stratiform": [358, 424, 425, 434, 446, 595, 604, 634, 641, 657], "classif": [358, 424, 425, 428, 434, 439, 446, 595, 604, 634, 641, 657], "cosin": [358, 425, 434, 637, 638], "scalar": [358, 425, 434, 589, 591, 595, 637], "classifi": [358, 424, 425, 434, 439, 595, 637, 638, 639], "eqn": [358, 425, 434], "b1": [358, 425, 434], "yuter": [358, 425, 434, 446, 571, 619, 637, 638], "1997": [358, 425, 434, 637, 638], "zero": [358, 375, 425, 434, 438, 440, 579, 595, 637, 638, 651, 655], "multipli": [358, 425, 434, 590, 637, 650], "most": [359, 367, 589, 590, 591, 595, 616, 638, 652, 654, 661], "storage_opt": [360, 369, 371], "anon": [360, 369, 371, 587, 589, 593], "open": [360, 369, 371, 461, 587, 590, 591, 593, 594, 595, 596, 621, 648, 650, 651, 652, 654, 655, 656, 659, 661], "binari": [360, 434, 587, 598], "transpar": [360, 589, 591, 595, 627], "decompress": [360, 595], "gzip": [360, 367, 368], "bzip2": [360, 595], "close": [360, 434, 440, 588, 589, 593, 595], "compress": [360, 367, 368, 591, 595], "backend": [360, 369], "googl": [360, 369, 595, 596, 659], "cloud": [360, 369, 424, 440, 589, 590, 596, 598, 604, 605, 608, 648, 657, 659, 661], "storag": [360, 369, 538], "amazon": [360, 369, 587, 589, 591, 593, 606, 607], "web": [360, 369, 377, 587, 591, 593, 606, 607], "servic": [360, 369, 587, 589, 591, 593, 598, 606, 607, 616], "s3": [360, 369, 589, 593, 606, 607, 619, 637, 638], "file_lik": 360, "use_rsl": 361, "read_": 361, "trmm": [361, 373, 595, 648, 658], "librari": [361, 370, 373, 376, 377, 587, 589, 590, 591, 593, 595, 596, 597, 648, 650, 651, 652, 654, 655, 656, 658, 659], "choos": [361, 591, 604, 615, 633, 637, 638, 657, 661], "Not": [361, 368], "typeerror": [361, 595], "launch_datetim": 362, "date": [362, 363, 585, 589, 591, 594, 595, 606, 607], "radiosond": 362, "launch": 362, "record": [362, 593, 656], "target_datetim": 363, "closest": [363, 405], "profile_datetim": 363, "use_file_field_attribut": 365, "csu": [365, 595], "chill": 365, "chl": [365, 595], "field_file_nam": 365, "long_nam": [365, 587, 590, 637, 638, 651, 656], "zlib": [367, 368], "read_mdv": [367, 588, 602, 612, 623, 627, 628, 629], "interchang": 367, "vlevel": 367, "proj_polar_radar": 367, "9": [367, 430, 439, 567, 587, 589, 590, 591, 593, 594, 601, 607, 619, 628, 631, 635, 636, 637, 638, 648, 650, 655, 656], "proj_rhi_radar": 367, "13": [367, 567, 587, 590, 593, 607, 630, 648, 655, 656], "vlevel_typ": 367, "vert_type_z": 367, "vert_type_elev": 367, "vert_type_az": 367, "17": [367, 585, 589, 590, 625, 630, 633], "vert_type_pressur": 367, "vert_type_theta": 367, "unknown": [367, 595], "station": [369, 370, 591, 607], "linear_interp": 369, "nexrad": [369, 370, 371, 372, 587, 595, 604, 605, 608, 615, 619, 633, 637, 638, 648, 656, 657], "archiv": [369, 589, 591, 593, 620, 648], "host": [369, 371, 589, 598], "noaa": [369, 371, 373, 587, 589, 591, 593, 606, 607, 619, 637, 638], "nation": [369, 371, 587, 589, 591, 593, 606, 616], "climat": [369, 371, 590, 591, 593, 595, 596, 648, 650, 651, 652, 654, 655, 656, 659], "ucar": [369, 370, 587], "thredd": [369, 370, 376], "server": [369, 370], "letter": [369, 370, 372], "icao": [369, 370, 595], "older": [369, 370, 595, 596, 604, 605, 608, 648, 657, 659], "mix": [369, 424, 571, 619, 637, 638], "constant": [369, 409, 413, 414, 437, 440, 587, 590, 595, 607], "fsspec": [369, 371, 593, 595], "cut": [369, 370, 371, 438], "www": [369, 370, 371, 437, 589, 593, 596, 659], "ncdc": [369, 371], "gov": [369, 371, 587, 588, 589, 593, 601, 602, 606, 607, 610, 612, 613, 616, 617, 618, 620, 621, 622, 623, 625, 627, 628, 629, 630, 632, 635, 636, 644, 645, 646], "edu": [369, 370, 437, 587, 619, 637, 638], "catalog": [369, 370, 587], "html": [369, 370, 437, 589, 593, 595, 596, 648, 658, 659], "common": [370, 590, 595, 611, 648, 658], "cdm": [370, 376], "url": [370, 589, 591, 607], "java": [370, 376], "tool": [370, 376, 587, 590, 648, 658], "opendap": 370, "accept": [370, 441, 442, 591, 595, 596, 659], "compil": [370, 441, 595, 648, 658], "unidata": [370, 587, 606], "htm": 370, "product": [371, 373, 419, 449, 587, 591, 595], "nw": [371, 593], "wsr": 371, "88d": 371, "iii": 371, "distribut": [371, 425, 433, 434, 448, 543, 553, 554, 555, 556, 572, 573, 595, 596, 637, 638, 648, 659], "roc": 371, "wsr88d": [371, 372], "level_iii": 371, "level3info": 371, "asp": 371, "radar_format": 372, "callid": 372, "skip_range_check": 372, "rsl_radar": 372, "id": [372, 377, 587, 595], "verifi": [372, 574, 584], "ioerror": 372, "time_ord": [373, 595], "full_xhdr": 373, "noaa_hh_hdr": 373, "ignore_xhdr": 373, "ignore_sweep_start_m": 373, "sigmet": [373, 595, 648], "iri": [373, 595, 648, 658], "sequenti": [373, 616], "re": [373, 424, 589, 596, 659], "manner": 373, "determind": 373, "maintain": [373, 412, 595], "yet": [373, 606, 611], "warn": [373, 376, 587, 589, 590, 591, 593, 595, 601, 607, 610, 654], "reverse_and_rol": 373, "strictli": 373, "increas": [373, 414, 440, 443, 587, 591, 596, 616, 654, 659], "becom": [373, 637, 651, 654], "thisopt": 373, "strict": 373, "header": [373, 595], "decod": [373, 595], "hurrican": [373, 591, 637, 638], "hunter": 373, "millisecond": 373, "precis": [373, 424], "explic": 373, "read_rsl": [373, 658], "error": [373, 377, 441, 442, 587, 589, 591, 594, 595, 611, 658], "uf": [374, 379, 595, 648], "introduc": [374, 442], "implement": [374, 381, 394, 413, 429, 437, 590, 591, 595, 596, 601, 638, 659], "time_refer": [375, 650], "compliant": 375, "mani": [375, 595, 596, 648, 654, 659, 661], "outlin": [375, 440, 567], "_zlib": [375, 376], "_deflatelevel": [375, 376], "_shuffl": [375, 376], "_fletcher32": [375, 376], "_contingu": [375, 376], "_chunksiz": [375, 376], "_endian": [375, 376], "_least_significant_digit": [375, 376], "_fillvalu": [375, 376, 595, 651, 656], "write_proj_coord_si": 376, "proj_coord_si": 376, "write_point_x_y_z": 376, "write_point_lon_lat_alt": 376, "projectioncoordinatesystem": 376, "toolsui": 376, "written": [376, 378, 379, 595, 598, 648], "appropri": [376, 567, 591, 599], "understood": 376, "rgb": 377, "viridi": [377, 637, 638], "color_level": 377, "warp": 377, "sld": 377, "use_doublequot": 377, "geotiff": [377, 595, 648], "wgs84": 377, "sphere": [377, 568, 580], "latter": [377, 591], "usabl": [377, 587], "byte": [377, 595], "former": 377, "gi": 377, "while": [377, 591, 611, 648, 652, 661], "show": [377, 587, 588, 589, 591, 593, 594, 595, 596, 601, 602, 606, 607, 610, 611, 612, 613, 616, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 637, 638, 644, 650, 652, 654, 655, 656, 659], "lack": [377, 392, 402], "composit": [377, 419, 587, 590, 595, 604, 634, 641, 657], "gdal": [377, 595, 648], "via": [377, 589, 591, 598], "conda": [377, 593, 595, 596, 648, 658, 659, 661], "rbg": 377, "tabl": [377, 587], "column": [377, 558, 569, 570, 587, 589, 590, 591, 595, 604, 634, 641, 657], "categor": [377, 589, 639], "255": [377, 595, 638], "hydrometeor": [377, 428, 439, 595, 604, 634, 641, 652, 657], "gdalwarp": 377, "command": [377, 595, 596, 598, 648, 651, 659, 661], "o": [377, 461, 589, 591, 596, 618, 648, 658, 659], "az": [377, 589, 595, 625, 626], "descriptor": 377, "tiff": 377, "don": [377, 590, 591, 595, 610], "t": [377, 424, 425, 434, 440, 441, 444, 449, 587, 590, 591, 595, 610, 637, 638, 648, 650], "quot": 377, "help": [377, 450, 589, 590, 591, 593, 596, 598, 610, 616, 637, 659, 661], "translat": 377, "sr": [377, 587], "instead": [377, 587, 589, 591, 595, 596, 607, 637, 654, 658, 659, 661], "mdv_field_nam": [378, 595], "field_write_ord": [378, 379], "sentinel": [378, 379], "float32": [378, 587, 590, 591, 595, 635, 650, 652, 656], "_write_as_dtyp": 378, "writabl": 378, "satisfi": 378, "xy": [378, 414], "irregular": 378, "exce": [378, 637, 638], "122": [378, 606, 610, 617, 636, 644], "uint8": 378, "uint16": 378, "scale_factor": [378, 590], "add_offset": [378, 590], "uncompress": 378, "sai": [378, 596, 659], "uf_field_nam": 379, "radar_field_nam": 379, "volume_start": 379, "templates_extra": 379, "radar_beam_width_h": [379, 590], "radar_beam_width_v": [379, 590], "radar_receiver_bandwidth": 379, "prt": [379, 590], "polarization_mod": 379, "round": [379, 591, 595], "_uf_scale_factor": 379, "charact": 379, "advanc": [379, 587], "usag": 379, "templat": [379, 595, 598], "mandatory_head": 379, "optional_head": 379, "field_head": 379, "lazi": [380, 381, 383, 390, 595], "set_lazi": 381, "callabl": [381, 390, 590, 591], "cach": 381, "tradit": 381, "supplement": 381, "syntax": [381, 595], "prevent": [381, 414, 589, 595, 596, 659], "comparison": [381, 595, 610, 638], "__cmp__": 381, "__ge__": 381, "__gt__": 381, "__le__": 381, "__lt__": 381, "__ne__": 381, "nor": 381, "viewitem": 381, "viewkei": 381, "viewvalu": 381, "fromkei": 381, "tradition": 381, "referenc": 381, "lazyloaddictionari": 381, "henc": 381, "key1": 381, "value1": 381, "key2": 381, "value2": 381, "lazy_func": 381, "lambda": 381, "lazykey1": 381, "item": [382, 392, 395, 402, 595], "els": [384, 385, 396, 590], "value_cal": 390, "concret": 394, "__getitem__": [394, 590], "__setitem__": 394, "__delitem__": 394, "__iter__": 394, "__len__": 394, "robust": [404, 424], "src_radar": 405, "dest_radar": 405, "distance_toler": [405, 610], "500": [405, 413, 414, 589, 593, 610, 617, 621], "gatefilter_src": [405, 610], "time_toler": [405, 610], "60": [405, 587, 601, 606, 610, 613, 618, 645, 650, 652, 654], "kd": 405, "tree": [405, 414, 644, 645, 646], "physic": [405, 419, 425, 434, 637, 638], "easi": [405, 419, 648], "equival": [405, 588, 590, 595, 606, 618, 626, 632], "src_radar_i": 405, "src_radar_x": 405, "destin": [405, 407, 589, 593, 595, 610], "toler": [405, 406, 408, 559, 560, 595], "src_radar_tim": 405, "dest_radar_tim": 405, "gate_mapp": 405, "src": [405, 593], "dest": 405, "dest_index": 405, "radar_map": 405, "mapped_radar": [405, 610], "adequ": [405, 610], "getter": [406, 408], "field_list": [407, 438], "zg": [409, 410, 411], "yg": [409, 410, 411], "xg": [409, 410, 411], "roi": [409, 410, 411, 414, 595, 611], "influenc": [409, 412, 413, 414, 654], "grow": [410, 411, 413, 414, 596, 659], "virtual": [411, 413, 414], "grid_shap": [412, 413, 414, 539, 611, 612, 613, 617, 637, 638, 645, 654], "grid_limit": [412, 413, 414, 539, 611, 612, 613, 617, 637, 638, 645, 654], "gridding_algo": 412, "map_gates_to_grid": [412, 595], "copy_field_dtyp": [412, 595], "map_to_grid": [412, 413, 595], "significantli": [412, 414], "faster": [412, 414, 591, 595], "barn": [412, 414, 595, 654], "1964": 412, "techniqu": [412, 424, 638], "maxim": 412, "numer": [412, 595], "analysi": [412, 424, 570, 591, 595], "meteorologi": [412, 416, 419, 440, 449, 567], "climatologi": [412, 449], "396": [412, 590], "409": [412, 595], "cressman": [412, 414, 654], "1959": 412, "monthli": 412, "review": [412, 588, 595], "87": [412, 587, 589], "367": 412, "374": [412, 595], "paulei": [412, 654], "1990": [412, 654], "theoret": 412, "discret": 412, "respons": 412, "118": 412, "1145": [412, 595], "1164": [412, 595], "grid_origin": [413, 414, 613, 617], "grid_origin_alt": [413, 414], "map_roi": [413, 414], "weighting_funct": [413, 414, 654], "barnes2": [413, 414, 595], "toa": [413, 414, 417, 443], "17000": [413, 414, 654], "roi_func": [413, 414, 595, 654], "dist_beam": [413, 414, 654], "constant_roi": [413, 414, 595], "z_factor": [413, 414], "xy_factor": [413, 414], "02": [413, 414, 587, 590, 619, 633, 637, 638, 641, 657], "min_radiu": [413, 414, 595, 654], "h_factor": [413, 414, 611], "nb": [413, 414], "bsp": [413, 414], "zdist_factor": [413, 611], "weight": [413, 414, 439, 440, 448, 587, 595, 604, 609, 614, 654, 657], "linearli": 413, "roifunct": 413, "dist": [413, 414, 572, 573, 587, 589], "get_roi": 413, "cython": [413, 595], "grid_siz": [413, 414], "grid_from_radar": [413, 414, 611, 612, 613, 617, 637, 638, 645, 654], "around": [413, 425, 434, 543, 557, 593, 612, 627, 630, 637, 650, 652], "copy_field_data": 414, "kd_tree": 414, "leafsiz": 414, "nearbi": [414, 613], "coodin": 414, "azimut": 414, "similarili": 414, "example_roi_func_const": 414, "example_roi_func_dist": 414, "example_roi_func_dist_beam": 414, "altern": [414, 419, 591, 637], "foreach": 414, "metet": 414, "dist_mean": 414, "preserv": [414, 652], "less": [414, 424, 425, 434, 442, 571, 637], "memori": [414, 595], "slower": [414, 440], "It": [414, 442, 557, 567, 589, 591, 596, 599, 610, 659, 661], "leaf": 414, "lookup": 414, "affect": 414, "optim": [414, 440, 595], "natur": [414, 424, 591], "ref_field": [416, 638, 651], "300": [416, 587, 589, 590, 591, 593, 619, 620, 650], "save_nam": [416, 638], "nws_primary_pr": 416, "mm": [416, 594, 637, 638], "hr": [416, 637, 638], "author": [416, 419, 434, 571, 588, 594, 598, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646], "laura": [416, 434, 571, 619, 637, 638], "tomkin": [416, 434, 571, 619, 637, 638], "look": [416, 419, 444, 587, 589, 590, 591, 593, 594, 595, 606, 607, 610, 611, 618, 648, 650, 652, 654, 656], "expect": [416, 442, 596, 659], "relationship": [416, 424, 433], "american": [416, 419], "meteorolog": [416, 419, 429, 449, 591], "2022": [416, 419, 571, 587, 590, 594, 606, 619, 637, 638, 648], "glossari": [416, 419], "ametsoc": [416, 419], "wiki": [416, 419, 437], "r_relat": 416, "25000": [417, 654], "floor": 417, "measur": [417, 425, 427, 433, 434, 439, 440, 441, 442, 558, 590, 591, 593, 596, 637, 638, 648, 650, 651, 652, 654, 655, 656, 659], "nyq": [418, 593, 644, 652], "check_nyq_uniform": 418, "deriv": [418, 440, 442], "try": [418, 440, 589, 594, 654, 655], "vel_dict": 418, "entri": [418, 656], "am": [419, 593, 596, 648, 659], "dry": [419, 639], "world": [419, 604, 615], "aloft": 419, "oppos": [419, 619], "nwp": [419, 639], "why": [419, 591, 594, 596, 659], "would": [419, 587, 588, 589, 590, 593, 595, 596, 606, 607, 652, 654, 659], "think": 419, "turn": [419, 444, 616, 637, 638, 648], "spin": 419, "randi": [419, 593], "chase": [419, 593], "dopplerchas": [419, 595], "cdr_field": 420, "circular": [420, 572, 573, 595, 637], "depolar": [420, 590], "cdr": 420, "l_field": 421, "logarithm": 421, "log10": [421, 610], "l_field_out": 421, "noisedbz_v": 422, "ref_dist": 422, "noise_field": [422, 423], "noisedbz": 422, "cappi_level": 424, "zr_a": 424, "200": [424, 596, 659], "zr_b": 424, "core_wt_threshold": 424, "conv_wt_threshold": 424, "conv_scale_km": 424, "min_reflect": 424, "conv_min_refl": 424, "conv_core_threshold": 424, "42": [424, 425, 434, 446, 587, 589, 590, 593, 635, 637, 638], "override_check": 424, "computation": 424, "\u00e0": 424, "trou": 424, "wavelet": 424, "atwt": 424, "multiresolut": 424, "focus": [424, 587, 589, 590], "raut": 424, "2008": [424, 607], "2020": [424, 558, 591, 595, 596, 619, 648, 658, 659], "convers": [424, 557, 590], "sensit": 424, "howev": [424, 440, 591, 652], "intermedi": 424, "signific": 424, "approxim": [424, 587, 590, 595], "break": [424, 597, 598], "season": 424, "2018": [424, 591], "discuss": [424, 591, 599], "insensit": 424, "variat": [424, 433, 440, 595], "dyadic": 424, "scale_break_us": 424, "greater": [424, 446, 591, 637], "bypass": 424, "saniti": 424, "fall": 424, "categori": [424, 589], "strong": [424, 434, 589, 638], "updraft": 424, "activ": [424, 661], "collis": 424, "coalesc": 424, "wide": 424, "remain": 424, "intens": [424, 446, 543], "unclassifi": [424, 587], "karekar": 424, "puranik": 424, "infrar": [424, 587], "satellit": [424, 587], "ieee": [424, 441], "geosci": [424, 441], "remot": [424, 441, 589, 590, 591, 595, 596, 606, 659], "sen": [424, 441], "lett": 424, "328": 424, "330": [424, 595], "seed": 424, "reeder": 424, "jakob": 424, "cascad": 424, "downscal": 424, "geophi": 424, "123": 424, "2050": 424, "2067": 424, "louf": 424, "gayatri": 424, "murugavel": 424, "konwar": 424, "prabhakaran": 424, "tran": 424, "5409": 424, "5415": 424, "dx": [425, 434, 446, 637, 638], "dy": [425, 434, 446, 589, 637, 638], "level_m": [425, 434, 638], "bkg_rad_km": [425, 434, 637, 638], "11": [425, 434, 578, 587, 589, 607, 611, 613, 614, 617, 633, 635, 638, 645, 648, 655, 656, 657], "55": [425, 434, 587, 589, 631, 635, 637, 638], "calc_thr": [425, 434, 637, 638], "weak_echo_thr": [425, 434, 637, 638], "min_dbz_us": [425, 637], "db_averag": [425, 434, 637, 638], "remove_small_object": [425, 434, 637, 638], "min_km2_siz": [425, 434, 637, 638], "val_for_max_conv_rad": [425, 637], "max_conv_rad_km": [425, 637], "cs_core": 425, "nosfcecho": [425, 434, 637, 638], "weakecho": [425, 434, 637, 638], "sf": [425, 637], "conv": [425, 637], "estimate_flag": [425, 434, 637, 638], "estimate_offset": [425, 434, 637, 638], "partit": [425, 434, 446, 601], "pars": [425, 434, 590, 591, 595], "least": [425, 434, 637], "simpler": [425, 434, 637], "percentag": [425, 434], "weak": [425, 434, 637, 638], "surfac": [425, 434, 590, 637, 638], "snow": [425, 428, 434, 558, 571, 590, 619, 637, 638, 639], "underestim": [425, 434, 637, 638], "wih": [425, 434], "convsf_dict": [425, 637, 638], "raindrop": [425, 434, 637, 638], "pacif": [425, 434, 637, 638], "warm": [425, 434, 440, 637], "pool": [425, 434, 637, 638], "implic": [425, 434, 637, 638], "appl": [425, 434, 442, 444, 446, 448, 558, 596, 637, 638, 659], "meteor": [425, 434, 442, 444, 446, 448, 558, 596, 637, 638, 648, 659], "36": [425, 434, 587, 607, 610, 613, 617, 631, 635, 637, 638, 654], "847": [425, 434, 595, 637, 638], "867": [425, 434, 595, 637, 638], "doi": [425, 429, 430, 434, 439, 441, 442, 558, 571, 587, 590, 591, 593, 596, 619, 637, 638, 648, 650, 651, 652, 654, 655, 656, 659], "1175": [425, 434, 442, 558, 595, 637, 638, 648], "1520": [425, 434, 637, 638], "0450": [425, 434, 637, 638], "036": [425, 434, 637, 638], "3c0847": [425, 434, 637, 638], "morsdo": [425, 434, 637, 638], "3e2": [425, 434, 637, 638], "smith": [425, 434, 637, 638], "wilheit": [425, 434, 637, 638], "zipser": [425, 434, 637, 638], "character": [425, 434, 446, 637, 638], "tropic": [425, 434, 637, 638], "kwajex": [425, 434, 637, 638], "385": [425, 434, 595, 637, 638], "415": [425, 434, 637, 638], "jam2206": [425, 434, 637, 638], "the_spectra": 426, "vel_bin": 426, "wavelength": [426, 587, 590], "left_limit": 426, "right_limit": 426, "new_spectra": 426, "new_bin": 426, "a_field": [427, 428, 431], "rr_field": [427, 428, 429, 430, 431, 432, 433], "go": [427, 428, 429, 431, 432, 581, 588, 589, 595, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 651], "diederich": 427, "simmer": [427, 444], "zhang": [427, 444, 558], "tromel": [427, 444], "2015": [427, 430, 444, 648], "wavelenght": 427, "hydrometeorologi": 427, "487": [427, 587], "502": [427, 595], "alphazr": 428, "0376": [428, 430, 431, 432], "betazr": 428, "6112": [428, 430, 431, 432], "alphaz": [428, 431, 432], "betaz": [428, 431, 432], "alphaa": [428, 431], "betaa": [428, 431], "mp_factor": 428, "hydro_field": [428, 439], "main_field": [428, 431, 432], "thresh_max": [428, 431, 432], "main": [428, 431, 432, 587, 589, 590, 591, 595, 596, 622, 659], "secondari": [428, 431, 432, 595], "figuera": [429, 439], "term": [429, 595], "monitor": 429, "french": 429, "sever": [429, 589, 595, 638], "quantit": 429, "ideal": [429, 590], "quarterli": 429, "royal": 429, "2012": [429, 440, 442], "1002": [429, 595], "qj": 429, "1934": 429, "fabri": 430, "fr\u00e9d\u00e9ric": 430, "meterologi": 430, "ch": [430, 639, 640], "pg": 430, "148": 430, "165": 430, "1017": 430, "cbo9781107707405": 430, "blend": [431, 432, 591, 627], "rain_main": [431, 432], "alphakdp": 432, "betakdp": 432, "polynomi": 433, "develop": [433, 434, 587, 591, 595, 638, 648, 658], "mcgill": [433, 648], "doell": 433, "systemat": 433, "drop": [433, 590, 591, 595], "northern": [433, 589], "germani": 433, "seven": 433, "year": [433, 587, 589, 593, 594, 606, 607], "1998": 433, "technol": [433, 444, 558], "1545": 433, "1556": 433, "joss": 433, "switzerland": 433, "vdf": 433, "hochschulverlag": 433, "ag": [433, 639], "eth": 433, "zurich": 433, "134": [433, 587], "min_val_us": [434, 638], "binary_clos": 434, "val_for_max_rad": [434, 638], "max_rad_km": [434, 638], "core_v": [434, 638], "bkgd_val": [434, 638], "feat_val": [434, 638], "overest_field": [434, 638], "underest_field": [434, 638], "detect": [434, 591, 595, 604, 622, 634, 637, 641, 652, 657], "featur": [434, 588, 589, 591, 599, 604, 619, 634, 637, 641, 648, 657], "2023": [434, 593, 648], "steiner": [434, 446, 595, 637, 638], "1995": [434, 446, 637, 638], "lauratomkin": [434, 571, 595], "overestim": [434, 637, 638], "feature_dict": [434, 638], "climatolog": [434, 446, 637, 638], "storm": [434, 446, 543, 544, 546, 587, 590, 591, 593, 619, 637, 638, 654], "gaug": [434, 446, 637, 638], "1978": [434, 446, 637, 638], "2007": [434, 446, 637, 638], "miller": [434, 571, 619, 638], "2024": [434, 585, 638], "identif": [434, 571, 619, 638], "faint": [434, 638], "winter": [434, 619, 637, 638], "prep": [434, 638], "sonde_dset": 435, "time_kei": 435, "height_kei": 435, "nvar": 435, "vap": 435, "startard": 435, "ncvar": 435, "return_d": 435, "freq": 436, "hz": [436, 625], "freq_band": 436, "grid1": 437, "grid2": 437, "return_valu": 437, "displac": 437, "en": [437, 593, 595, 596, 648, 658, 659], "wikipedia": 437, "phase_correl": 437, "inspir": 437, "christoph": 437, "gohlk": 437, "lfd": 437, "uci": 437, "imreg": 437, "advect": [437, 438, 595], "trim_edg": 438, "shifted_grid": 438, "subset": [438, 581, 587, 589, 593, 595, 604, 634, 635], "mass_cent": 439, "approach": [439, 587, 590, 611], "besic": 439, "2016": [439, 587, 590, 591, 593, 596, 648, 650, 651, 652, 654, 655, 656, 659], "ndarrai": [439, 656], "centroid": 439, "nclass": 439, "nvariabl": 439, "hydro": [439, 639], "ventura": 439, "grazioli": [439, 441], "gabella": 439, "germann": 439, "bern": [439, 441], "statist": [439, 595, 596, 659], "cluster": 439, "semi": 439, "supervis": 439, "mea": [439, 571, 619, 638], "4425": 439, "4445": 439, "5194": [439, 571, 619, 638], "amt": [439, 571, 619, 638], "cg": 440, "backscatt": [440, 444], "clpf": 440, "length_scal": 440, "first_guess": 440, "finite_ord": 440, "fill_valu": [440, 441, 442, 446, 591, 650, 651, 656], "psidp_field": [440, 441, 442, 639], "verbos": [440, 444, 595, 596, 659], "total": [440, 441, 442, 590, 593, 601, 602, 603, 606, 607, 608, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 657], "maesaka": 440, "monoton": [440, 443, 616], "propag": [440, 441, 442], "notat": 440, "primari": [440, 590], "proport": 440, "dr": 440, "analys": [440, 441, 442], "cost": [440, 595], "nonlinear": 440, "conjug": 440, "gradient": [440, 595, 616], "broyden": 440, "fletcher": 440, "goldfarb": 440, "shanno": 440, "bfg": 440, "100k": 440, "consider": [440, 593, 637, 638], "parameter": 440, "attentu": 440, "constraint": 440, "bring": [440, 587], "guess": 440, "root": [440, 658, 661], "signifi": [440, 446], "everywher": 440, "exactli": [440, 610], "avoid": [440, 595, 598, 661], "converg": 440, "fact": [440, 442], "closer": 440, "finit": 440, "accuraci": 440, "maxit": 440, "met": 440, "achiev": 440, "somewhat": 440, "arbitrari": 440, "parallel": [440, 441, 442], "thread": [440, 591], "cpu": 440, "multiprocess": 440, "capabl": [440, 590, 652, 656], "relev": [440, 599], "kdp_dict": [440, 441, 442], "phidpf_dict": 440, "phidpr_dict": [440, 441, 442], "forward": [440, 568, 569], "iwanami": 440, "maki": 440, "seventh": 440, "european": 440, "confer": 440, "hydrologi": 440, "rcov": 441, "pcov": 441, "prefilter_psidp": [441, 442], "filter_opt": [441, 442], "kalman": 441, "schneeb": 441, "psidp": [441, 442], "char": [441, 442], "capit": [441, 442], "intercept": 441, "slope": 441, "3x3": 441, "covari": 441, "matrix": [441, 591, 595], "4x4": 441, "filter_psidp": [441, 442, 595], "enabl": [441, 442, 590, 593, 595], "kdp_std_dict": 441, "dev": [441, 590, 593, 596, 654, 659], "ensembl": 441, "52": [441, 444, 587, 590, 635], "5137": 441, "5149": 441, "1109": [441, 595], "tgr": 441, "2287017": 441, "windsiz": 442, "n_iter": 442, "vulpiani": [442, 595], "pre": [442, 595, 596, 659], "advantag": 442, "eat": 442, "gianfranco": 442, "mario": 442, "montopoli": 442, "luca": 442, "delli": 442, "passeri": 442, "antonio": 442, "gioia": 442, "pietro": 442, "giordano": 442, "frank": 442, "marzano": 442, "On": [442, 588, 589], "dual": [442, 595], "mountain": 442, "climatol": [442, 558, 637, 638], "51": [442, 587, 635], "405": [442, 595], "425": [442, 595], "05024": 442, "profile_field": 443, "height_field": 443, "3re": 443, "whole": [443, 595], "height_dict": 443, "profile_dict": 443, "desired_angl": [444, 595], "quasi": 444, "qvp": [444, 595], "wanted_angl": 444, "dictonari": 444, "quasai": 444, "troemel": 444, "kumjian": 444, "clim": [444, 590, 591], "2529": 444, "2548": 444, "meteorol": [444, 637, 638], "54": [444, 587, 589, 590, 607, 640, 657], "2344": 444, "2359": 444, "reev": 444, "tschallen": 444, "wai": [444, 590, 596, 598, 610, 650, 659, 661], "submit": [444, 591, 648], "work_level": 446, "3000": [446, 650, 654], "peak_rel": 446, "area_rel": 446, "medium": 446, "bkg_rad": 446, "11000": [446, 654], "use_intens": 446, "bright": [446, 587], "sgp": [446, 539], "peaked": 446, "eclass": 446, "z_want": [448, 449, 596, 640, 659], "valid_ray_min": [448, 596, 659], "velocity_azimuth_displai": [448, 596, 659], "one_sweep_radar": 448, "extract_sweep": [448, 593, 611, 637, 638, 640], "vad": [448, 449, 595, 596, 604, 634, 641, 657, 659], "amount": [448, 590, 593, 596, 638, 654, 659], "_averag1d": [448, 596, 659], "idw": 448, "brown": [448, 595, 596, 659], "wexler": [448, 596, 659], "1968": [448, 596, 659], "kinemat": [448, 596, 659], "105": [448, 596, 640, 659], "113": [448, 596, 635, 659], "linespac": 449, "michelson": [449, 595, 648], "andersson": 449, "koistinen": [449, 648], "collier": 449, "riedl": 449, "szturc": 449, "gjertsen": 449, "nielsen": 449, "overgaard": 449, "2000": [449, 587, 612, 654], "baltex": 449, "centr": 449, "methodologi": [449, 558, 652], "smhi": 449, "swedish": 449, "hydrolog": 449, "institut": [449, 587, 656], "norrkop": 449, "suffix": 461, "tmp": 461, "dir": 461, "temporari": [461, 595], "my_cwd": 461, "getcwd": 461, "tmpdir": 461, "_": [461, 589, 593, 606, 607, 639], "txt": [461, 595, 658], "wt": 461, "assert": [461, 595, 596, 659], "isfil": 461, "path_to_fil": 538, "local": [538, 588, 589, 593, 595, 596, 648, 658, 659], "without": [539, 552, 587, 590, 595, 658], "site": [539, 587, 589, 590, 591, 592, 593, 601, 607, 635, 651, 654, 658], "oklahoma": [539, 593], "puls": [542, 590, 595, 652], "min_valu": 543, "max_valu": 543, "45": [543, 589, 596, 619, 628, 637, 638, 659], "grid_len": 543, "sigma": [543, 544, 627, 628], "mu": [543, 544], "masked_boundari": 543, "gaussian": [543, 544, 627], "sapr": 545, "dp_phase_shift": [545, 635, 650], "diff_phas": [545, 650], "differential_reflect": [545, 606, 620, 627, 655, 656], "rectangular": [546, 547, 591, 595], "alia": [550, 551, 591, 595], "miscellan": 552, "depreci": [552, 595], "caution": 552, "radian": [553, 555, 576, 587], "std": [555, 556, 573, 578], "convolut": 557, "ndimag": [557, 595, 627, 628], "generic_filt": 557, "pi": [557, 587, 652], "std_dev": 557, "azimuth_spread": 558, "spatial_spread": 558, "spatial_rang": 558, "sphere_dist": [558, 570], "for_azimuth": [558, 570], "get_sweep_rai": 558, "subset_field": 558, "assemble_column": 558, "murphi": 558, "columnar": 558, "cvp": 558, "ic": [558, 627, 639], "situ": 558, "37": [558, 587, 590, 610, 614, 635, 638, 640, 655, 657], "1623": 558, "1642": 558, "jtech": 558, "0011": 558, "bukov\u010di\u0107": 558, "zrni\u0107": 558, "59": [558, 587, 590], "991": [558, 595], "1009": [558, 595], "19": [558, 587, 589, 590, 595, 640, 647, 656], "0140": 558, "az_tol": 559, "radar_rhi": 559, "target_elev": 560, "el_tol": 560, "radar_ppi": 560, "epoch": [561, 562, 563, 564, 565, 587], "max_offset": 566, "running_win_dt": 566, "deg_rng": 566, "is_ppi": 566, "wise": 566, "could": [566, 591, 596, 607, 659], "strategi": [566, 587], "might": [566, 588, 650, 661], "goe": [566, 591], "navg": 567, "nnoise_min": 567, "hildebrand": [567, 595], "sehkon": 567, "1974": 567, "spectral": [567, 587, 590, 595], "articl": 567, "peak": [567, 590, 652], "var": [567, 582, 583, 587], "varianc": [567, 611], "nnois": 567, "sekhon": [567, 595], "808": 567, "811": [567, 595], "target_latitud": [568, 580], "target_longitud": [568, 580], "bear": [568, 589], "alongitudeg": 568, "great": [568, 580], "circl": [568, 580, 637], "known": [568, 595, 596, 656, 659], "6371000": [568, 580], "calculatitude": 568, "degress": [568, 580], "further": [570, 588, 590], "get_column_rai": 570, "mute_field": [571, 619], "mute_threshold": [571, 619], "field_threshold": [571, 619], "discern": 571, "mute": [571, 595, 604, 615, 633, 637, 638, 657], "allen": [571, 619, 638], "5515": [571, 619, 638], "5525": [571, 619, 638], "interval_min": [572, 573], "interval_max": [572, 573], "endpoint": [572, 573], "to_vpt": 574, "90": [574, 587, 589, 590, 596, 659], "verticl": 574, "radar1": 575, "radar2": 575, "angles1": 576, "angles2": 576, "angle1": 577, "angle2": 577, "eg": 578, "ma": [578, 596, 610, 612, 637, 638, 651, 655, 659], "interp_kind": 579, "sim_vel_field": 579, "kind": [579, 587, 601], "slinear": 579, "quadrat": 579, "cubic": 579, "interp1d": [579, 596, 659], "sim_vel": [579, 596, 659], "rng_min": 581, "rng_max": 581, "ele_min": 581, "ele_max": 581, "azi_min": 581, "azi_max": 581, "coverag": [581, 587, 595, 596, 659], "11pt": 582, "stdev": 582, "texarrai": 582, "pyradarobj": 582, "tex": 583, "single_scan": 584, "is_vpt": 584, "mislabel": 584, "properli": [584, 596, 607, 659], "releas": [585, 592, 596, 599, 648, 651, 654, 658, 659], "post1": 585, "jan": 585, "guid": [585, 587, 588, 595, 648], "public": [585, 587, 591, 593, 595, 596, 650, 651, 652, 654, 655, 656, 659], "broken": [585, 595], "aerosol": 587, "experi": 587, "depart": [587, 590, 591, 593, 650, 651, 652, 654, 655, 656], "energi": [587, 590, 591, 593, 650, 651, 652, 654, 655, 656], "iop": 587, "goal": 587, "studi": 587, "lifecycl": 587, "houston": [587, 606], "impact": [587, 593, 627], "uniqu": 587, "suit": [587, 595, 654], "seabreez": 587, "coast": [587, 591], "cleaner": [587, 655], "air": [587, 591], "pollut": 587, "click": [587, 588, 598], "post": [587, 589, 590, 591, 593, 595, 598, 648], "overlai": 587, "texa": [587, 606], "lightn": 587, "csapr2": 587, "wildfir": 587, "smoke": 587, "entrain": 587, "juli": [587, 607], "12": [587, 589, 590, 594, 601, 606, 607, 611, 618, 625, 635, 638, 648, 651, 655, 656], "we": [587, 589, 590, 591, 593, 596, 599, 606, 607, 610, 616, 635, 637, 638, 644, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661], "highlight": [587, 588, 591], "minut": [587, 589, 590, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646], "pyart": [587, 589, 593, 596, 598, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648, 650, 651, 652, 654, 655, 656, 658, 659, 661], "pyplot": [587, 588, 589, 590, 591, 593, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 650, 651, 652, 654, 655], "plt": [587, 588, 589, 590, 591, 593, 595, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 650, 651, 652, 654, 655], "xr": [587, 590], "s3f": 587, "ccr": [587, 589, 591, 593, 606, 607, 610, 611, 617, 618, 624, 631, 635, 637, 638, 644, 651, 652, 655], "panda": [587, 590, 593, 595, 661], "pd": [587, 589, 590, 593], "kdtree": 587, "inlin": [587, 627, 628], "download": [587, 588, 590, 591, 596, 601, 602, 604, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648, 659, 661], "longwav": 587, "ensur": [587, 589, 595, 638], "c13": 587, "denot": [587, 611], "anonym": [587, 589], "credenti": 587, "s3filesystem": 587, "day_no": 587, "168": 587, "dai": [587, 593], "16th": 587, "leap": 587, "hour": [587, 591, 593, 606, 607], "goes16": 587, "abi": 587, "l1b": 587, "radc": 587, "02d": 587, "fi": 587, "or_abi": 587, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 587, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 587, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 587, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 587, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 587, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 587, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 587, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 587, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 587, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 587, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 587, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 587, "goes_d": 587, "open_dataset": [587, 590], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 587, "lt": [587, 590], "gt": [587, 590], "1500": [587, 650], "2500": 587, "number_of_time_bound": 587, "number_of_image_bound": 587, "num_star_look": 587, "datetime64": [587, 590, 635], "07": [587, 589, 590, 607, 614, 619, 633, 637, 638, 656, 657], "1282": 587, "1013": 587, "y_imag": 587, "08624": 587, "x_imag": 587, "03136": 587, "band_id": 587, "int8": 587, "band_wavelength": 587, "33": [587, 590, 591, 638, 656], "t_star_look": 587, "band_wavelength_star_look": 587, "rad": [587, 590], "dqf": 587, "time_bound": 587, "goes_imager_project": 587, "int32": [587, 656], "2147483647": 587, "y_image_bound": 587, "x_image_bound": 587, "algorithm_dynamic_input_data_contain": 587, "processing_parm_version_contain": 587, "algorithm_product_version_contain": 587, "star_id": 587, "channel_integration_tim": 587, "336": [587, 595], "channel_gain_field": 587, "naming_author": 587, "nesdi": 587, "standard_name_vocabulari": 587, "v35": 587, "commerc": 587, "production_sit": 587, "wcda": 587, "timeline_id": 587, "date_cr": 587, "12t20": 587, "09": [587, 589, 603, 608, 633, 637, 638, 657], "3z": 587, "time_coverage_start": [587, 650, 656], "time_coverage_end": [587, 650], "08": [587, 614], "7z": 587, "lut_filenam": 587, "spacelookparam": 587, "fm1a_cdrl79revp_pr_09_00_02": 587, "f45b564c": 587, "dcb9": 587, "498a": 587, "ac56": 587, "da80a1d735a5xarrai": 587, "datasetdimens": [587, 590], "1500x": 587, "2500number_of_time_bound": 587, "2number_of_image_bound": 587, "2band": 587, "1num_star_look": 587, "24coordin": 587, "j2000": 587, "mid": 587, "secondsstandard_nam": 587, "timeaxi": 587, "tbound": 587, "time_boundsarrai": 587, "x27": [587, 590], "537394048": 587, "float640": 587, "04432": 587, "04427unit": 587, "radaxi": 587, "ylong_nam": 587, "coordinatestandard_nam": 587, "projection_y_coordinatearrai": 587, "128212": 587, "128156": 587, "1281": 587, "04438": 587, "044324": 587, "044268": 587, "03856": 587, "03861unit": 587, "xlong_nam": 587, "projection_x_coordinatearrai": 587, "101332": 587, "101276": 587, "10122": 587, "0385": 587, "038556": 587, "038612": 587, "imagestandard_nam": 587, "projection_y_coordinateunit": 587, "yarrai": 587, "projection_x_coordinateunit": 587, "numberstandard_nam": 587, "sensor_band_identifierunit": 587, "1arrai": [587, 590], "central": [587, 589, 593], "wavelengthstandard_nam": 587, "sensor_band_central_radiation_wavelengthunit": 587, "umarrai": 587, "star": 587, "tarrai": 587, "01t11": 587, "43": [587, 590, 593], "000000000": [587, 590], "starstandard_nam": 587, "radiancesstandard_nam": 587, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 587, "12valid_rang": 587, "4094": 587, "mw": 587, "cm": [587, 628], "1resolut": 587, "000056": 587, "radgrid_map": 587, "goes_imager_projectioncell_method": 587, "pointancillary_vari": 587, "3750000": 587, "radianc": 587, "flagsstandard_nam": 587, "status_flagvalid_rang": 587, "1grid_map": 587, "pointflag_valu": 587, "flag_mean": 587, "good_pixel_qf": 587, "conditionally_usable_pixel_qf": 587, "out_of_range_pixel_qf": 587, "no_value_pixel_qf": 587, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 587, "5percent_good_pixel_qf": 587, "0percent_conditionally_usable_pixel_qf": 587, "0percent_out_of_range_pixel_qf": 587, "0percent_no_value_pixel_qf": 587, "0percent_focal_plane_temperature_threshold_exceeded_qf": 587, "00": [587, 589, 590, 593, 595, 603, 608, 614, 633, 641, 642, 647, 657], "326423040": 587, "748365056": 587, "projectiongrid_mapping_nam": 587, "geostationaryperspective_point_height": 587, "35786023": 587, "0semi_major_axi": 587, "6378137": 587, "0semi_minor_axi": 587, "6356752": 587, "31414inverse_flatten": 587, "298": 587, "2572221latitude_of_projection_origin": 587, "0longitude_of_projection_origin": 587, "0sweep_angle_axi": 587, "south": [587, 591, 620], "extent": [587, 589, 590, 593, 611, 613], "imageunit": 587, "radarrai": 587, "12824": 587, "04424": 587, "10136": 587, "03864": 587, "nominal_satellite_subpoint_lat": 587, "nomin": 587, "subpoint": 587, "standard_nam": [587, 637, 638, 651, 656], "latitudeunit": [587, 590], "degrees_northarrai": 587, "nominal_satellite_subpoint_lon": 587, "longitudeunit": [587, 590], "degrees_eastarrai": 587, "199997": 587, "nominal_satellite_height": 587, "gr": 587, "80": [587, 589, 602, 631, 636], "ellipsoid": 587, "height_above_reference_ellipsoidunit": 587, "kmarrai": 587, "35786": 587, "023438": 587, "geospatial_lat_lon_ext": 587, "geospati": 587, "referencesgeospatial_westbound_longitud": 587, "152": [587, 635, 638, 641, 657], "10928geospatial_northbound_latitud": 587, "56": [587, 590, 633, 635, 640, 641], "76145geospatial_eastbound_longitud": 587, "94688geospatial_southbound_latitud": 587, "14": [587, 590, 591, 593, 606, 607, 608, 616, 618, 644, 656, 657], "57134geospatial_lat_cent": 587, "083002geospatial_lon_cent": 587, "096954geospatial_lat_nadir": 587, "0geospatial_lon_nadir": 587, "0geospatial_lat_unit": 587, "degrees_northgeospatial_lon_unit": 587, "96921e": 587, "yaw_flip_flag": 587, "spacecraft": 587, "yaw": 587, "flip": 587, "configurationvalid_rang": 587, "1flag_valu": 587, "truearrai": 587, "esun": 587, "bandpass": 587, "solar": 587, "irradi": 587, "sun": 587, "distancestandard_nam": 587, "toa_shortwave_irradiance_per_unit_wavelengthunit": 587, "um": 587, "1cell_method": 587, "meanarrai": 587, "kappa0": 587, "incom": 587, "d2": 587, "instantan": [587, 595], "divid": 587, "reflectanceunit": 587, "planck_fk1": 587, "wavenumb": 587, "c2": 587, "nu3": 587, "emiss": 587, "monochromat": 587, "nu": 587, "constantsunit": 587, "10803": 587, "299805": 587, "planck_fk2": 587, "karrai": 587, "1392": [587, 595], "73999": 587, "planck_bc1": 587, "bc_1": 587, "bc_2": 587, "planck_funct": 587, "wavenumberunit": 587, "0755": 587, "planck_bc2": 587, "99975": 587, "valid_pixel_count": 587, "condition": 587, "pixelsunit": 587, "countgrid_map": 587, "sum": [587, 594], "comment": [587, 588, 628, 656], "3702838": 587, "missing_pixel_count": 587, "saturated_pixel_count": 587, "satur": 587, "radiometr": 587, "geoloc": 587, "undersaturated_pixel_count": 587, "undersatur": 587, "focal_plane_temperature_threshold_exceeded_count": 587, "exceed": 587, "thresholdunit": 587, "min_radiance_value_of_valid_pixel": 587, "pixelsstandard_nam": 587, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 587, "6443": 587, "185": 587, "5699": 587, "849287": 587, "max_radiance_value_of_valid_pixel": 587, "154": [587, 624], "23053": 587, "mean_radiance_value_of_valid_pixel": 587, "197975": 587, "std_dev_radiance_value_of_valid_pixel": 587, "toa_outgoing_radiance_per_unit_wavenumberunit": 587, "standard_devi": 587, "985853": 587, "maximum_focal_plane_temperatur": 587, "focal": 587, "valuevalid_rang": 587, "951939": 587, "focal_plane_temperature_threshold_increas": 587, "bound": [587, 590, 638], "81": [587, 589, 656], "focal_plane_temperature_threshold_decreas": 587, "decreas": 587, "percent_uncorrectable_l0_error": 587, "percent": 587, "l0": 587, "errorsvalid_rang": 587, "percentgrid_map": 587, "earth_sun_distance_anomaly_in_au": 587, "anomali": [587, 638], "astronom": 587, "unitsunit": 587, "uacell_method": 587, "016543": 587, "datainput_abi_l0_data": 587, "m6_g16_s20221932006173_e20221932008557_c": 587, "ncarrai": 587, "filenamesl1b_processing_parm_vers": 587, "parm": 587, "rad_g16_v01r00": 587, "ziparrai": 587, "packag": [587, 588, 589, 590, 591, 593, 595, 596, 601, 607, 648, 651, 654, 658, 659, 661], "versionalgorithm_vers": 587, "alg": 587, "rad_v01r00": 587, "zipproduct_vers": 587, "v01r00arrai": 587, "stararrai": 587, "vnir": 587, "ir": 587, "telemetryunit": 587, "countarrai": 587, "gain": [587, 590], "noaaconvent": 587, "7standard_name_vocabulari": 587, "administr": [587, 591, 606], "servicesproject": 587, "goesproduction_sit": 587, "wcdasproduction_environ": 587, "oespatial_resolut": 587, "2km": 587, "nadirmetadata_convent": 587, "discoveri": 587, "0orbital_slot": 587, "eastplatform_id": 587, "g16instrument_typ": 587, "baselin": 587, "scene_id": 587, "conusinstrument_id": 587, "fm1titl": 587, "radiancessummari": 587, "digit": 587, "outgo": 587, "engin": 587, "radiancekeywords_vocabulari": 587, "nasa": 587, "master": [587, 595, 598, 628], "gcmd": 587, "scienc": [587, 591, 593, 650, 651, 652, 654, 655, 656], "0iso_series_metadata_id": 587, "a70be540": 587, "c38b": 587, "11e0": 587, "962b": 587, "0800200c9a66licens": 587, "restrict": 587, "approv": 587, "processing_level": 587, "aeronaut": 587, "l1bcdm_data_typ": 587, "imagedataset_nam": 587, "ncproduction_data_sourc": 587, "realtimetimeline_id": 587, "6date_cr": 587, "3ztime_coverage_start": 587, "3ztime_coverage_end": 587, "7zlut_filenam": 587, "637827000": 587, "h5": [587, 595], "qtableband13": 587, "fm1a_cdrl79revh_do_08_00_00": 587, "582860861": 587, "caltargettimeinterv": 587, "fm1a_cdrl79revp_do_08_00_01": 587, "611906620": 587, "bandsaturationlimit": 587, "600000000": 587, "solarspacelookparam": 587, "fm1a_adr1233_pr_09_08_25": 587, "709281036": 587, "deadrowlistparam": 587, "mirror_record": 587, "fm1a_cdrl79revg_do_07_00_00": 587, "kalmanastroconst": 587, "xml": [587, 593], "kalmanfiltercontrol": 587, "fm1a_pr_09_08_02": 587, "677650371": 587, "kalmanmeasmaxsens": 587, "fmaa_int_only_do_09_01_00": 587, "652936814": 587, "kalmanpreprocessorcontrol": 587, "fm1a_cdrl79revj_pr_09_06_02": 587, "657795700": 587, "kalmanreferencedata": 587, "888": 587, "kalmanstarcatalog": 587, "abi_navigationrdp_band13": 587, "fm1a_cdrl79revj_do_07_00_00": 587, "abi_navigationparameters_band13": 587, "fm1a_cdrl79revh_do_07_00_00": 587, "abi_resamplingimplementation_band13": 587, "fm1a_cdrl79revh_do_07_02_00": 587, "602129336": 587, "abi_resamplingparameters_band13": 587, "starlookparam": 587, "stardetectionparam": 587, "resamplingscaledconvers": 587, "fmaa_int_only_do_08_00_00": 587, "1111": [587, 590, 595], "blockreleaseregion": 587, "2222": 587, "csv": [587, 589], "ir_retrievalparamet": 587, "fm1a_cdrl79revh_do_09_01_00": 587, "652936750": 587, "radiancelut_band13": 587, "fm1a_cdrl79reve_do_08_00_00": 587, "ict_record": 587, "fm1a_tmabi_18_159_pr_09_00_02": 587, "icm_conversionconst": 587, "fm1a_cdrl43": 587, "18_do_09_01_00": 587, "icm_sensorcoeffici": 587, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 587, "676949608": 587, "h5id": 587, "da80a1d735a5": 587, "team": 587, "bobbi": [587, 610], "jackson": [587, 610], "pug": 587, "l2": [587, 595], "file_id": 587, "def": [587, 589, 593, 595, 596, 616, 638, 659], "calculate_degre": 587, "x_coordinate_1d": 587, "y_coordinate_1d": 587, "projection_info": 587, "lon_origin": 587, "attr": 587, "longitude_of_projection_origin": 587, "perspective_point_height": 587, "semi_major_axi": 587, "r_eq": 587, "r_pol": 587, "semi_minor_axi": 587, "matric": 587, "x_coordinate_2d": 587, "y_coordinate_2d": 587, "meshgrid": [587, 610], "lambda_0": 587, "a_var": 587, "b_var": 587, "c_var": 587, "r_": 587, "s_x": 587, "s_y": 587, "s_z": 587, "conu": 587, "seterr": 587, "abi_lat": 587, "arctan": 587, "abi_lon": 587, "crop": 587, "our": [587, 589, 592, 606, 607, 610, 616, 617, 635, 637, 638, 644, 648], "interest": [587, 589, 590, 591, 593, 610, 637], "circ": 587, "95": [587, 589, 635, 656], "nan_to_num": 587, "9999": [587, 656], "lat_rang": 587, "lon_rang": 587, "lat_min": 587, "lat_max": 587, "lat_min_bound": 587, "argmin": 587, "ab": 587, "lat_max_bound": 587, "lon_min": 587, "lon_max": 587, "lon_min_bound": 587, "lon_max_bound": 587, "a1": [587, 590, 624], "disoveri": 587, "toolkit": [587, 590, 591, 593, 650, 651, 652, 654, 655, 656], "5439": [587, 590], "1467901": 587, "page": [587, 592, 595, 598], "block": [587, 595], "autom": [587, 593], "catalogu": 587, "adam": [587, 595], "theisen": 587, "geometri": [587, 593, 595], "cell_track_info": 587, "read_csv": [587, 589], "raw": [587, 601, 602, 611], "githubusercont": 587, "com": [587, 596, 607, 628, 658, 659, 661], "adamtheisen": [587, 595], "cell": [587, 595, 627, 645], "stat": [587, 595], "houcsapr": 587, "20220617": 587, "index_col": 587, "parse_d": 587, "unnam": 587, "scan_mod": [587, 590], "scan_nam": [587, 590, 595], "template_nam": 587, "azimuth_min": 587, "azimuth_max": 587, "elevation_min": 587, "elevation_max": 587, "range_min": 587, "range_max": 587, "cell_azimuth": 587, "cell_rang": 587, "cell_zh": 587, "ngates_gt_0": 587, "ngates_gt_10": 587, "ngates_gt_30": 587, "ngates_gt_50": 587, "ngates_gt_10_5km": 587, "ngates_gt40_5km": 587, "03": [587, 590, 606, 633, 641, 647, 657], "hou": 587, "303": [587, 595], "74450": 587, "637207": 587, "383545": 587, "109900": 587, "297": 587, "59216": 587, "307": [587, 595], "63367": 587, "021240": 587, "988037": 587, "910767": 587, "700": [587, 590, 593, 595], "930866": 587, "78": 587, "302": 587, "64587": 587, "645874": 587, "1800": [587, 589, 650], "776333": 587, "55798": 587, "59094": 587, "97546": 587, "99744": 587, "975464": 587, "900": [587, 650], "972101": 587, "46": [587, 635], "2826": 587, "301": [587, 595], "48132": 587, "50330": 587, "648193": 587, "382324": 587, "503296": 587, "62400": 587, "327583": 587, "990": 587, "989": [587, 595, 616, 633, 657], "210": [587, 638], "995": [587, 595, 638, 641, 657], "2827": 587, "305": [587, 595, 602, 603, 657], "70007": 587, "404297": 587, "700073": 587, "13600": 587, "29": [587, 590], "037998": 587, "2828": 587, "23510": 587, "26807": 587, "235107": 587, "459156": 587, "2829": 587, "296": [587, 595], "08704": 587, "306": [587, 595], "16150": 587, "999268": 587, "998291": 587, "646362": 587, "59100": 587, "882927": 587, "807": 587, "783": [587, 595], "27": [587, 591, 635], "63": [587, 656], "830": 587, "2830": 587, "05835": 587, "08032": 587, "058350": 587, "62800": 587, "198204": 587, "767": [587, 595], "76": 587, "773": [587, 595], "2831": 587, "row": [587, 589, 591], "notebook": [587, 589, 590, 594, 595, 601, 602, 604, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 651, 654, 655, 661], "much": [587, 589, 590, 591, 593, 595, 652, 654, 655], "frequent": 587, "start_hour": 587, "end_hour": 587, "utc": [587, 589, 590, 591, 606, 607, 630], "48": [587, 589, 613], "04": [587, 590, 593, 633, 635, 657], "26": 587, "38": [587, 590, 607], "57": [587, 637, 638], "rjackson": [587, 610], "paw": 587, "houcsapr2cfrs2": 587, "20220712": 587, "200714": 587, "easili": [587, 593], "eol": 587, "cgi": 587, "codiac": 587, "fgr_form": 587, "016": 587, "densiti": [587, 639], "lma_d": 587, "lylout_220712_000000_86400_map500m": 587, "afternoon": 587, "203229": 587, "lylout_220617_000000_86400_map500m": 587, "radarmapdisplai": [587, 589, 593, 595, 606, 607, 610, 618, 624, 635, 644, 646, 650, 651, 652, 654, 655], "subplot": [587, 589, 590, 591, 593, 595, 606, 610, 616, 617, 618, 630, 635, 636, 637, 638, 639, 640, 644, 652], "subplot_kw": 587, "disp": 587, "graph": [587, 588, 589, 590, 591, 593, 595, 601, 602, 606, 607, 610, 611, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 644, 645, 646, 650, 651, 652, 654, 655], "150": [587, 588, 623, 652], "plot_ppi_map": [587, 589, 593, 595, 606, 607, 610, 618, 624, 635, 644, 651, 652, 655], "flash_tim": 587, "squeez": [587, 650], "argwher": [587, 610], "logical_and": [587, 610], "flash_time_start": 587, "17t20": 587, "scatter": [587, 589, 593, 617, 635], "flash_center_longitud": 587, "flash_center_latitud": 587, "set_xlim": [587, 631, 639], "96": [587, 589, 590, 610, 648, 655], "94": [587, 656], "set_ylim": [587, 631, 639], "deprecationwarn": [587, 654], "escap": 587, "sequenc": [587, 591], "xf": 587, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 587, "ipykernel_41252": 587, "2371313213": 587, "opt": [587, 588, 590, 591, 595], "anaconda3": [587, 590, 591, 648, 651, 654, 658, 661], "env": [587, 588, 590, 591, 593, 595, 601, 607, 648, 651, 654, 661], "pyart_env2": 587, "lib": [587, 590, 591, 593, 601, 607, 651, 654, 658], "python3": [587, 590, 591, 593, 594, 601, 607], "mpl": [587, 595, 639, 651, 654], "gridlin": [587, 591, 593, 618], "451": [587, 590], "userwarn": [587, 601, 607], "xlabels_top": [587, 591], "deprec": [587, 591, 598, 651, 654], "top_label": [587, 593, 618], "toggl": [587, 595], "visibl": [587, 591, 595], "ylabels_right": [587, 591], "right_label": [587, 593, 618], "microphys": 587, "strike": 587, "overlaid": 587, "csapr_rhi": 587, "203012": 587, "flash_alt": 587, "flash_init_altitud": 587, "flash_lon": 587, "flash_init_longitud": 587, "flash_lat": 587, "flash_init_latitud": 587, "rhi_lon": 587, "flatten": [587, 610], "rhi_lat": 587, "rhi_alt": 587, "kdtree_data": 587, "stack": [587, 590, 593, 596, 658, 659], "inp_data": 587, "where_in_rhi": 587, "flash_rang": 587, "1e3": 587, "motiv": [588, 591], "blog": [588, 593, 595, 596, 659], "come": [588, 591, 637], "colorschem": 588, "vision": 588, "defici": 588, "illustr": 588, "collabor": 588, "contributor": [588, 598, 648, 660], "guidenc": 588, "ve": 588, "trip": [588, 655], "me": 588, "assist": 588, "https_link_to_your_fork": 588, "unfamiliar": 588, "yml": [588, 595, 648, 661], "slightli": [588, 591, 618], "latest": [588, 595, 596, 648, 659], "button": [588, 592, 598], "kshrc": 588, "export": [588, 658, 661], "pip": [588, 596, 658, 659, 661], "checkout": [588, 596, 598, 659], "newblog_post": 588, "plot_ppi_mdv": [588, 623, 633, 657], "radardisplai": [588, 589, 590, 595, 601, 602, 611, 616, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 632, 636, 639], "jonathan": [588, 601, 602, 612, 613, 620, 621, 623, 625, 629, 632, 661], "helmu": [588, 591, 593, 596, 601, 602, 612, 613, 620, 621, 623, 625, 629, 632, 648, 650, 651, 652, 654, 655, 656, 659, 661], "jhelmu": [588, 595, 601, 602, 612, 613, 620, 621, 623, 625, 629, 632], "anl": [588, 601, 602, 606, 607, 610, 612, 613, 616, 617, 618, 620, 621, 622, 623, 625, 627, 628, 629, 630, 632, 635, 636, 644, 645, 646], "licens": [588, 596, 601, 602, 606, 607, 610, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648, 659], "bsd": [588, 596, 601, 602, 606, 607, 610, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648, 659], "claus": [588, 596, 601, 602, 606, 607, 610, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 659], "get_test_data": [588, 601, 602, 610, 612, 613, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 644, 645, 646], "110635": [588, 612, 623, 654], "figsiz": [588, 589, 590, 591, 593, 601, 602, 606, 607, 610, 611, 616, 617, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 636, 637, 638, 639, 644, 651, 652, 654, 655], "add_subplot": [588, 601, 602, 611, 612, 613, 620, 621, 622, 623, 625, 626, 627, 628, 629, 632], "111": [588, 589, 591, 610, 612, 613, 618, 621, 622, 623, 627, 628, 629, 635], "get_cmap": [588, 619, 637, 638], "jet": 588, "colorbind": 588, "pyart_homeyerrainbow": [588, 590, 610, 616, 617, 618, 623, 626, 630, 631, 636], "plot_rhi_cfradial_singlescan": [588, 626, 633, 657], "panel": [588, 604, 615, 633, 657], "sgpxsaprrhicmaci5": [588, 625, 626, 630], "c0": [588, 601, 625, 626, 630, 651], "20110524": [588, 625, 626, 630], "015604_nc4": [588, 625, 626, 630], "read_cfradi": [588, 601, 610, 613, 617, 625, 626, 630, 639, 640], "subplots_adjust": [588, 590, 616, 625, 626], "hspace": [588, 590, 625, 626], "xlabel": [588, 590, 610, 625, 626, 652], "ylabel": [588, 590, 610, 625, 626, 652], "stage": 588, "my": [588, 658], "untrack": [588, 596, 659], "blog_pr": 588, "restor": 588, "discard": 588, "_static": 588, "As": [588, 590, 596, 650, 652, 654, 655, 659], "statement": [588, 595, 596, 659], "hint": [588, 591, 597], "wait": [588, 591], "editor": [588, 594, 596, 659, 661], "enh": [588, 595], "abort": 588, "person": 588, "addition": [588, 591], "anyon": 588, "respond": 588, "walk": [589, 590, 593, 594], "septemb": 589, "2021": [589, 637, 638], "thunderstorm": 589, "southern": 589, "wisconsin": [589, 595], "illinoi": 589, "trail": 589, "damag": [589, 593], "milwauke": [589, 593], "madison": 589, "imageri": [589, 593], "russ": 589, "schumach": 589, "colorado": 589, "unvers": 589, "put": 589, "togeth": [589, 590, 591, 595], "hi": [589, 638], "glob": [589, 590, 593, 596, 659], "math": 589, "atan2": 589, "tempfil": 589, "cfeatur": [589, 591, 593], "mcolor": [589, 591, 619, 637, 638], "mdate": 589, "uscounti": [589, 593], "imageio": 589, "pytz": [589, 595], "temploc": 589, "mkdtemp": 589, "filterwarn": [589, 590, 591, 593, 610], "let": [589, 590, 591, 592, 595, 596, 606, 607, 610, 616, 618, 635, 637, 638, 644, 650, 652, 654, 655, 656, 659, 661], "machin": [589, 590, 593, 661], "kmkx": [589, 593], "nexrad_path": 589, "level2": [589, 593, 606, 607, 619, 637, 638], "d_": 589, "kmkx20210907_170101_v06": 589, "kmkx20210907_170739_v06": 589, "kmkx20210907_171431_v06": 589, "kmkx20210907_172123_v06": 589, "kmkx20210907_172814_v06": 589, "kmkx20210907_173452_v06": 589, "kmkx20210907_174130_v06": 589, "kmkx20210907_174807_v06": 589, "kmkx20210907_175459_v06": 589, "kmkx20210907_175459_v06_mdm": 589, "read_nexrad_arch": [589, 593, 606, 607, 619, 620, 621, 637, 638], "possibli": 589, "add_featur": [589, 591, 593], "pyart_chasespectr": [589, 593, 645, 646], "70": [589, 590, 593, 606, 610, 617, 646], "set_ext": 589, "easier": [589, 590, 591], "scroll": 589, "radar_id": 589, "timestamp": [589, 590], "tz_local": 589, "later": [589, 591, 651, 654], "interfac": [589, 595], "conn": 589, "nexradawsinterfac": 589, "get_avail_scans_in_rang": 589, "len": [589, 616, 630, 639, 650], "kmkx20210907_151132_v06": 589, "kmkx20210907_152621_v06": 589, "kmkx20210907_150152_v06": 589, "kmkx20210907_151622_v06": 589, "kmkx20210907_152121_v06": 589, "kmkx20210907_150642_v06": 589, "kmkx20210907_155424_v06_mdm": 589, "kmkx20210907_153610_v06": 589, "kmkx20210907_154814_v06": 589, "kmkx20210907_155424_v06": 589, "kmkx20210907_154205_v06": 589, "kmkx20210907_160034_v06": 589, "kmkx20210907_160607_v06": 589, "kmkx20210907_161141_v06": 589, "kmkx20210907_163532_v06": 589, "kmkx20210907_161714_v06": 589, "kmkx20210907_162924_v06": 589, "kmkx20210907_164816_v06": 589, "kmkx20210907_165433_v06": 589, "kmkx20210907_165433_v06_mdm": 589, "kmkx20210907_162247_v06": 589, "kmkx20210907_153134_v06": 589, "kmkx20210907_164149_v06": 589, "kmkx20210907_182057_v06": 589, "kmkx20210907_182749_v06": 589, "kmkx20210907_184048_v06": 589, "kmkx20210907_180841_v06": 589, "kmkx20210907_183440_v06": 589, "kmkx20210907_185431_v06_mdm": 589, "kmkx20210907_181448_v06": 589, "kmkx20210907_180150_v06": 589, "kmkx20210907_185431_v06": 589, "kmkx20210907_190109_v06": 589, "kmkx20210907_190703_v06": 589, "kmkx20210907_193238_v06": 589, "kmkx20210907_191951_v06": 589, "kmkx20210907_191327_v06": 589, "kmkx20210907_195642_v06": 589, "kmkx20210907_194459_v06": 589, "kmkx20210907_195642_v06_mdm": 589, "kmkx20210907_193849_v06": 589, "kmkx20210907_184739_v06": 589, "kmkx20210907_192614_v06": 589, "kmkx20210907_195056_v06": 589, "now": [589, 590, 591, 593, 595, 607, 610, 611, 616, 618, 635, 637, 638, 644, 650, 652, 658], "predict": 589, "tornado": [589, 593], "offic": [589, 591, 593, 650, 651, 652, 654, 655, 656], "acces": 589, "internet": 589, "wcm": 589, "2021_wind": 589, "read_spc_report": 589, "start_tim": 589, "end_tim": 589, "hazard": 589, "timezon": 589, "gmt": 589, "torn": 589, "df": 589, "datafram": 589, "conver": 589, "to_datetim": [589, 590, 593], "set_index": 589, "inplac": 589, "ambigu": 589, "nat": 589, "nonexist": 589, "shift_forward": 589, "tz_convert": 589, "timedelta": [589, 593], "wind_report": 589, "tornado_report": 589, "hail_report": 589, "om": 589, "yr": 589, "mo": 589, "st": 589, "stf": 589, "stn": 589, "elon": 589, "wid": 589, "sn": 589, "sg": 589, "f1": 589, "f2": 589, "f3": 589, "f4": 589, "657521": 589, "tx": 589, "7500": [589, 650], "331": [589, 595, 639, 641, 657], "657522": 589, "4300": 589, "657523": 589, "0500": 589, "167": 589, "657524": 589, "0200": 589, "657525": 589, "1595": 589, "663777": 589, "sc": 589, "0100": 589, "663778": 589, "663779": 589, "2200": 589, "663780": 589, "1900": 589, "49": [589, 590], "663781": 589, "1100": [589, 595], "6261": 589, "gc_latlon_bear_dist": 589, "lat1": 589, "lon1": 589, "decim": 589, "lat2": 589, "lon2": 589, "lat1r": 589, "deg2rad": 589, "lon1r": 589, "bearr": 589, "lat2r": 589, "lon2r": 589, "rad2deg": [589, 640], "add_scale_lin": 589, "fontsiz": [589, 590, 591, 601, 602, 616, 618, 627, 628], "fontweight": 589, "zoom": [589, 590], "black": [589, 595, 617, 635], "frac_lat": 589, "frac_lon": 589, "e1": 589, "get_ext": 589, "center_lon": 589, "center_lat": 589, "shorten": 589, "hash": [589, 598], "lat1a": 589, "lon1a": 589, "lat1b": 589, "lon1b": 589, "lat2a": 589, "lon2a": 589, "lat2b": 589, "lon2b": 589, "horizontalalign": 589, "verticalalign": 589, "enumer": 589, "iter_success": 589, "mdm": 589, "this_tim": 589, "open_pyart": 589, "map_panel_ax": [589, 631], "x_cut_panel_ax": [589, 631], "y_cut_panel_ax": [589, 631], "masking_data_with_gatefilt": 589, "ax1": [589, 590, 601, 602, 617, 631, 632, 637, 638, 644], "add_ax": [589, 631], "recogniz": 589, "with_scal": 589, "500k": 589, "grai": [589, 591, 593, 618, 619], "plot_colorbar": 589, "pad": 589, "plot_range_r": [589, 595, 611, 621, 622, 624], "dash": [589, 591, 628], "set_xtick": [589, 651, 654], "arang": [589, 596, 610, 624, 627, 628, 635, 639, 640, 659], "set_ytick": [589, 651, 654], "wind_reports_now": 589, "slon": 589, "tolist": 589, "slat": 589, "facecolor": [589, 591, 593], "deepskyblu": 589, "tornado_reports_now": 589, "tab": [589, 598, 617], "red": [589, 627, 628], "hail_reports_now": 589, "lawngreen": 589, "legend": [589, 593, 617], "savefig": [589, 591, 593], "_dz_rpt": 589, "bbox_inch": 589, "tight": 589, "white": [589, 591, 627], "mp4": 589, "map_imag": 589, "gif_titl": 589, "delet": [589, 595, 596, 618, 659], "gif": 589, "get_writ": 589, "fp": 589, "writer": [589, 595], "imread": 589, "append_data": 589, "ffmpeg_writ": 589, "divis": [589, 595], "macro_block_s": 589, "resiz": 589, "1930": 589, "1766": 589, "1936": 589, "1776": 589, "video": 589, "codec": 589, "player": 589, "incompat": [589, 595, 599], "ipython": [589, 593, 594, 661], "browser": 589, "event": [589, 637, 638], "overview": [589, 592, 598], "retrospect": 589, "ecosystem": 590, "By": [590, 591, 599], "learn": [590, 648], "portal": [590, 591], "march": [590, 593, 606], "shown": [590, 616], "offici": [590, 596, 659], "probe": 590, "millimet": 590, "ghz": 590, "purpos": [590, 591, 637, 638], "nearli": [590, 627], "bokeh": 590, "formatt": 590, "datetimetickformatt": 590, "hv": 590, "guckazrcfrgem1": 590, "20220314": 590, "000003": 590, "0x7f7dbd517400": 590, "linear_depolarization_ratio": 590, "mean_doppler_velocity_crosspolar_v": 590, "reflectivity_crosspolar_v": 590, "signal_to_noise_ratio_copolar_h": 590, "signal_to_noise_ratio_crosspolar_v": 590, "spectral_width": 590, "spectral_width_crosspolar_v": 590, "vertical": 590, "awai": [590, 591], "pyart_bal": [590, 591, 610, 630, 644, 652], "substanti": 590, "211": [590, 632], "ax2": [590, 601, 602, 610, 617, 631, 632, 636, 637, 638, 644, 652], "212": [590, 632], "pangeo": 590, "1736": 590, "600": [590, 650], "r_calib": 590, "14t00": 590, "489e": 590, "806e": 590, "107": 590, "886e": 590, "command_lin": 590, "kazrcfr_ingest": 590, "guc": 590, "m1": 590, "process_vers": 590, "kazrcfr": 590, "el7": 590, "dod_vers": 590, "kazrcfrg": 590, "input_sourc": 590, "guckazrm1": 590, "kazr_moments_": 590, "site_id": 590, "software_vers": 590, "wed": 590, "mar": 590, "leachman": 590, "1498936": 590, "histori": [590, 656], "dsmgr": 590, "procnode2": 590, "1736rang": 590, "600frequenc": 590, "1sweep": 590, "1r_calib": 590, "1coordin": 590, "453818": 590, "startstandard_nam": 590, "timearrai": 590, "453818000": 590, "527426000": 590, "601027000": 590, "002026000": 590, "075634000": 590, "149219000": 590, "float323": 590, "10long_nam": 590, "transmit": [590, 652], "frequencyunit": 590, "hzstandard_nam": 590, "radiation_frequencymeta_group": 590, "instrument_parametersarrai": 590, "float32100": 590, "130": 590, "803e": 590, "04long_nam": 590, "volumeunit": 590, "mmeters_between_g": 590, "979246meters_to_center_of_first_g": 590, "679245spacing_is_const": 590, "truestandard_nam": 590, "projection_range_coordinateaxi": 590, "radial_range_coordinatearrai": 590, "679245": 590, "6585": 590, "160": [590, 640, 654], "63774": 590, "17998": 590, "18028": 590, "268": 590, "18058": 590, "248": 590, "northunit": 590, "degreestandard_nam": 590, "sensor_to_target_azimuth_angleaxi": 590, "radial_azimuth_coordinatearrai": 590, "planeunit": 590, "sensor_to_target_elevation_angleaxi": 590, "radial_elevation_coordinatearrai": 590, "00long_nam": 590, "epochancillary_vari": 590, "time_offsetarrai": 590, "base_timeancillary_vari": 590, "base_timearrai": 590, "unspecifiedunit": 590, "dbstandard_nam": 590, "radar_linear_depolarization_ratiounpacking_detail": 590, "unpack": 590, "pack": [590, 595], "1041600": 590, "motion": 590, "instrumentunit": 590, "sstandard_nam": 590, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 590, "crosspolar": 590, "channelunit": 590, "factorunit": 590, "dbzstandard_nam": 590, "equivalent_reflectivity_factorunpacking_detail": 590, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 590, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 590, "widthunit": 590, "radar_doppler_spectrum_widthunpacking_detail": 590, "angleunit": 590, "degreearrai": 590, "n_sampl": 590, "momentsunit": 590, "1meta_group": 590, "instrument_parametersstandard_nam": 590, "number_of_samples_used_to_compute_momentsarrai": 590, "noise_figur": 590, "receiv": [590, 593, 595, 652], "methodunit": 590, "dbarrai": 590, "67": [590, 637, 638], "8043": 590, "unambigu": [590, 656], "velocityunit": 590, "smeta_group": 590, "968252": 590, "repetit": 590, "timeunit": 590, "sarrai": 590, "00027": 590, "transmitt": 590, "r_calib_radar_constant_copol": 590, "copolarunit": 590, "dbmeta_group": 590, "radar_calibrationstandard_nam": 590, "calibrated_radar_constant_h_channelarrai": 590, "996191": 590, "r_calib_radar_constant_crosspol": 590, "crosspolarunit": 590, "405288": 590, "r_calib_two_way_radome_loss_h": 590, "radom": 590, "loss": 590, "radar_calibration_two_way_radome_loss_h_channelarrai": 590, "half": 590, "radar_measured_sky_noise_h": 590, "sky": 590, "dbmarrai": 590, "69": [590, 624, 640], "03703": 590, "035995": 590, "0373": 590, "03814": 590, "05106": 590, "05984": 590, "radar_measured_sky_noise_v": 590, "radar_measured_transmit_pow": 590, "powerunit": 590, "dbmmeta_group": 590, "radar_transmit_powerarrai": 590, "143": [590, 640], "receiver_gain_copol": 590, "copolunit": 590, "sweepunit": 590, "1735": 590, "s22": 590, "basedunit": 590, "unambiguous_rang": [590, 656], "rangeunit": 590, "mmeta_group": 590, "unambiguous_rangearrai": 590, "40479": 590, "477": [590, 595], "degree_nstandard_nam": 590, "latitudevalid_min": 590, "0valid_max": 590, "0arrai": 590, "956158": 590, "degree_estandard_nam": 590, "longitudevalid_min": 590, "106": 590, "987854": 590, "altitudeunit": 590, "mstandard_nam": 590, "altitudearrai": 590, "2886": 590, "levelunit": 590, "heightarrai": 590, "m1convent": 590, "radar_calibrationprocess_vers": 590, "el7dod_vers": 590, "1input_sourc": 590, "kazr_moments_20220314": 590, "000005": 590, "datsite_id": 590, "gucplatform_id": 590, "kazrcfrgefacility_id": 590, "m1data_level": 590, "a1location_descript": 590, "laboratori": 590, "sail": 590, "mt": 590, "crest": 590, "butt": [590, 591], "coloradodatastream": 590, "a1antenna_altitud": 590, "mantenna_diamet": 590, "mcomment": 590, "digital_rx_dec": 590, "24dualpol": 590, "0fft_len": 590, "512filter_length": 590, "67institut": 590, "radiat": [590, 591, 593, 596, 648, 650, 651, 652, 654, 655, 656, 659], "research": [590, 591, 593, 596, 648, 650, 651, 652, 654, 655, 656, 659], "facilityn_g": 590, "1024num_spectral_averag": 590, "15pulse_compression_ratio": 590, "3range_gate_spacing_m": 590, "979246range_offset_ch1": 590, "mrange_offset_ch2": 590, "mscan_mod": 590, "pointingscan_nam": 590, "vptsoftware_vers": 590, "leachmantitl": 590, "momentsdoi": 590, "1498936histori": 590, "isel": 590, "coupl": 590, "extra": [590, 593, 595], "won": 590, "600rang": 590, "600coordin": 590, "395940000": 590, "469427000": 590, "542946000": 590, "360000": 590, "quadmesh": [590, 591], "0x7f7dad654f10": 590, "meant": [590, 592], "popular": [590, 593], "jump": 590, "bar": 590, "hover": 590, "inspect": 590, "clabel": [590, 627, 628], "xformatt": 590, "ref_plot": 590, "7000": [590, 654], "platform_id": 590, "location_descript": 590, "xtick": [590, 651, 654], "ytick": [590, 651, 654], "vel_plot": 590, "prepar": [590, 591, 593, 596, 650, 651, 652, 654, 655, 656, 659], "plot1": 590, "plot2": 590, "datashad": 590, "lazili": 590, "coars": 590, "intial": 590, "unfortun": 590, "ref_plot_rast": 590, "param": [590, 595], "dynamic_oper": 590, "outofboundsdatetim": 590, "nanosecond": 590, "54168": 590, "invok": 590, "x_rang": 590, "13t23": 590, "417014000": 590, "579705000": 590, "y_rang": 590, "traceback": 590, "recent": [590, 595, 661], "mgrover": [590, 593, 606, 610, 616, 617, 622, 630, 635, 636, 644, 645, 646], "277": [590, 595], "get_plot_fram": 590, "map_obj": 590, "1344": 590, "val": 590, "_execute_callback": 590, "tuple_kei": 590, "retval": 590, "callback": 590, "arg": 590, "708": 590, "__call__": 590, "ret": 590, "__init__": [590, 596, 607, 659], "1043": [590, 595], "obj": 590, "resolv": [590, 595], "1032": [590, 595], "1044": 590, "1036": 590, "_process": 590, "1018": [590, 595], "process_el": 590, "194": 590, "_appli": 590, "141": 590, "1514": 590, "predic": 590, "207": 590, "pipelined_fn": 590, "method_fn": 590, "1223": 590, "super": [590, 621, 651, 654], "710": [590, 595], "map_fn": 590, "214": 590, "1133": [590, 595], "astyp": 590, "int64": 590, "1497": 590, "apply_ufunc": 590, "1159": 590, "apply_dataarray_vfunc": 590, "286": [590, 595], "result_var": 590, "data_var": 590, "750": [590, 595], "apply_variable_ufunc": 590, "as_compatible_data": 590, "234": 590, "_possibly_convert_object": 590, "178": 590, "asarrai": 590, "ravel": 590, "reshap": 590, "sanitize_arrai": 590, "567": [590, 595], "subarr": 590, "_try_cast": 590, "raise_cast_failur": 590, "726": [590, 595], "sanitize_to_nanosecond": 590, "arr": 590, "cast": 590, "1717": 590, "ensure_datetime64n": 590, "_lib": 590, "tslib": 590, "pyx": [590, 595], "257": 590, "np_datetim": 590, "120": [590, 650], "check_dts_bound": 590, "saw": 590, "few": [590, 595, 598, 661], "pro": 590, "con": 590, "thing": [590, 596, 659], "clear": 590, "push": [590, 595, 596, 598, 659], "share": 590, "ran": [590, 596, 659], "shareabl": 590, "workflow": [590, 593, 595], "mb": [590, 603, 608, 614, 633, 641, 642, 647, 657], "difficult": [590, 610], "jupyterbook": 590, "jupyt": [590, 593, 595, 601, 602, 604, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 661], "campaign": [590, 638], "twitter": 591, "nou": 591, "dryglick": 591, "notic": [591, 595, 610, 618], "odd": 591, "directli": [591, 616], "grei": 591, "darker": 591, "moir\u00e9": 591, "ryan": 591, "dopplershift": [591, 595], "turbul": 591, "forecast": 591, "ncei": 591, "search": [591, 648, 658], "aw": [591, 593, 595, 604, 605, 607, 608, 657], "mention": [591, 595, 596, 648, 659, 661], "he": 591, "n0u": [591, 606], "elgin": 591, "panhandl": 591, "florida": 591, "kevx": 591, "1458": 591, "octob": 591, "landfal": 591, "gulf": 591, "lookl": 591, "webpag": 591, "cart": 591, "sent": 591, "email": [591, 595], "websit": 591, "ftp": 591, "unzip": [591, 593], "kmob_sdus54_n0uevx_201810101458": 591, "partli": [591, 593, 650, 651, 652, 654, 655, 656], "facil": [591, 593, 596, 648, 650, 651, 652, 654, 655, 656, 659], "cite": [591, 593, 595, 650, 651, 652, 654, 655, 656], "jj": [591, 593, 650, 651, 652, 654, 655, 656], "sm": [591, 593, 650, 651, 652, 654, 655, 656], "colli": [591, 593, 596, 648, 650, 651, 652, 654, 655, 656, 659], "jor": [591, 593, 596, 648, 650, 651, 652, 654, 655, 656, 659], "5334": [591, 593, 596, 648, 650, 651, 652, 654, 655, 656, 659], "119": [591, 593, 596, 607, 648, 650, 651, 652, 654, 655, 656, 659], "read_level3": 591, "dark": 591, "dark_background": 591, "okai": 591, "88": [591, 593, 635], "83": 591, "31msignatur": 591, "0m": [591, 593], "0mdisplai": 591, "34m": 591, "0mplot_ppi_map": 591, "0mfield": 591, "0msweep": 591, "36m0": 591, "0mmask_tupl": 591, "32mnone": 591, "0mvmin": 591, "0mvmax": 591, "0mcmap": 591, "0mnorm": 591, "0mmask_outsid": 591, "32mfals": 591, "0mtitl": 591, "0mtitle_flag": 591, "32mtrue": 591, "0mcolorbar_flag": 591, "0mcolorbar_label": 591, "0max": 591, "0mfig": 591, "0mlat_lin": 591, "0mlon_lin": 591, "0mproject": 591, "0mmin_lon": 591, "0mmax_lon": 591, "0mmin_lat": 591, "0mmax_lat": 591, "0mwidth": 591, "0mheight": 591, "0mlon_0": 591, "0mlat_0": 591, "0mresolut": 591, "0mshapefil": 591, "0mshapefile_kwarg": 591, "0medg": 591, "0mgatefilt": 591, "0mfilter_transit": 591, "0membelish": 591, "0mraster": 591, "0mtick": 591, "0mticklab": 591, "0malpha": 591, "31msourc": 591, "32mdef": 591, "0mself": 591, "embelish": [591, 595], "31m": 591, "0mparse_vmin_vmax": 591, "0m_radar": 591, "0mparse_cmap": 591, "32mif": 591, "32mi": 591, "0mnp": 591, "0marang": 591, "36m30": 591, "36m46": 591, "36m1": 591, "36m110": 591, "36m75": 591, "0mloc": 591, "0mdata": 591, "0m_get_data": 591, "0mx": 591, "0my": 591, "0m_get_x_i": 591, "0mma": 591, "0mmasked_outsid": 591, "0mplt": 591, "0mgcf": 591, "32mnot": 591, "0mhasattr": 591, "32mels": 591, "0mcartopi": 591, "0mcr": 591, "0mlambertconform": 591, "0mcentral_longitud": 591, "0mcentral_latitud": 591, "0mwarn": 591, "overrid": [591, 628], "lambert": [591, 595], "0muserwarn": 591, "0mset_ext": 591, "0mplatecarre": 591, "32melif": 591, "36m2": 591, "0mgrid_project": 591, "0mpm": 591, "0mpcolormesh": 591, "36m1000": 591, "0mtransform": 591, "graphic": 591, "0mset_raster": 591, "admin": [591, 596, 659], "0mstates_provinc": 591, "0mfeatur": 591, "0mnaturalearthfeatur": 591, "0mcategori": 591, "cultur": 591, "0mname": 591, "admin_1_states_provinces_lin": 591, "0mscale": 591, "0mfacecolor": 591, "0mcoastlin": 591, "0madd_featur": 591, "0medgecolor": 591, "pose": 591, "difficulti": 591, "spectif": 591, "32min": 591, "0mmercat": 591, "0mgl": 591, "0mgridlin": 591, "0mxloc": 591, "0myloc": 591, "0mdraw_label": 591, "0mxlabels_top": 591, "0mylabels_right": 591, "0misinst": 591, "0mfigur": 591, "0mcanva": 591, "0mdraw": 591, "maker": 591, "0mxaxi": 591, "0mset_major_formatt": 591, "0mmpl": 591, "0mlongitude_formatt": 591, "0myaxi": 591, "0mlatitude_formatt": 591, "0m_lambert_gridlin": 591, "0mlambert_xtick": 591, "0mlambert_ytick": 591, "32mfrom": 591, "0mio": 591, "0mshaperead": 591, "32mimport": 591, "0mreader": 591, "0madd_geometri": 591, "0mgeometri": 591, "0m_set_titl": 591, "0mplot": 591, "0mappend": 591, "0mplot_var": 591, "0mplot_colorbar": 591, "0mmappabl": 591, "0mlabel": 591, "32mreturn": 591, "31mfile": 591, "git_repo": 591, "31mtype": 591, "fashion": 591, "0marg": 591, "0mshade": 591, "0mantialias": 591, "0mkwarg": 591, "31mdocstr": 591, "pseudocolor": 591, "signatur": [591, 593], "quadrilater": 591, "pcolor": 591, "prefer": [591, 595, 658], "ref": [591, 607, 631, 638], "shade": [591, 595], "flat": [591, 606], "gouraud": 591, "cari": 591, "expand": 591, "rc": 591, "regist": 591, "canon": 591, "chosen": 591, "patch": [591, 627], "force_edgecolor": 591, "singular": 591, "opaqu": 591, "auto": [591, 593, 616], "solid": [591, 628], "quad": 591, "halfwai": 591, "galleri": [591, 595, 601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646, 648, 657], "images_contours_and_field": 591, "pcolormesh_grid": 591, "snap": 591, "mesh": 591, "misc": [591, 595], "rasterization_demo": 591, "constructor": 591, "agg_filt": 591, "anim": 591, "antialias": [591, 627, 628], "aa": 591, "capstyl": 591, "clip_box": 591, "bbox": 591, "clip_on": 591, "clip_path": 591, "rgba": 591, "ec": 591, "fc": 591, "gid": 591, "hatch": 591, "in_layout": 591, "joinstyl": 591, "miter": 591, "bevel": 591, "thereof": 591, "offset_transform": 591, "path_effect": 591, "abstractpatheffect": 591, "picker": 591, "pickradiu": 591, "sketch_param": 591, "random": 591, "zorder": 591, "imshow": [591, 595, 611, 612, 613, 616], "_ax": 591, "nrow": [591, 616], "ncolumn": 591, "_differ": 591, "li": 591, "handl": [591, 595], "polycollect": 591, "thu": [591, 598], "almost": 591, "slight": 591, "polygon": 591, "irrespect": 591, "One": [591, 596, 650, 656, 659, 661], "masked_arrai": [591, 650, 656], "1e": [591, 650, 656], "next": [591, 593, 598, 606], "get_gate_lat_lon_alt": [591, 595], "565": [591, 595], "562763": 591, "560526": 591, "888458": 591, "886227": 591, "883991": 591, "562765": 591, "560532": 591, "892834": 591, "890606": 591, "888374": 591, "562769": 591, "56054": 591, "898003": 591, "89578": 591, "893553": 591, "562756": 591, "560509": 591, "880096": 591, "877857": 591, "875618": 591, "560513": 591, "881853": 591, "879616": 591, "877377": 591, "56276": 591, "560518": 591, "884874": 591, "88264": 591, "880404": 591, "92199": 591, "92222": 591, "92245": 591, "186806": 591, "18703": 591, "18723": 591, "922264": 591, "92254": 591, "2396": 591, "23986": 591, "24012": 591, "92231": 591, "92263": 591, "29231": 591, "29262": 591, "29292": 591, "92208": 591, "92218": 591, "02802": 591, "02811": 591, "0282": 591, "92212": 591, "92226": 591, "07571": 591, "07583": 591, "07595": 591, "922356": 591, "133934": 591, "1341": [591, 595], "13428": 591, "setup": [591, 595, 606, 610, 616, 617, 622, 635, 648, 658], "geoaxi": 591, "border": [591, 627], "cbar": [591, 618], "tick_param": 591, "labels": 591, "set_label": [591, 618], "gl": [591, 593, 618], "draw_label": [591, 593, 618], "xlabel_styl": [591, 618], "ylabel_styl": [591, 618], "kevz_velocity_2018_10_10_1458": 591, "specifici": 591, "pull": [591, 595, 596, 597, 598, 607, 659], "pr": [591, 598], "importantli": 591, "api": [591, 595], "abil": [591, 595, 648, 661], "arguement": 591, "explor": [591, 593], "appreci": [591, 648], "hello": 592, "welcom": 592, "narr": 592, "feedback": 592, "feel": 592, "know": [592, 661], "fridai": 593, "midwest": 593, "142": 593, "368": [593, 595], "excess": 593, "65": 593, "knot": 593, "mph": 593, "184": 593, "hail": [593, 595, 639], "bing": 593, "inch": 593, "diamet": 593, "ifram": 593, "spc": [593, 595], "climo": 593, "gmf": 593, "php": 593, "rpt": 593, "230331_rpts_filter": 593, "walworth": 593, "counti": 593, "southeastern": [593, 610], "geneva": 593, "tourist": 593, "especi": [593, 611], "live": 593, "chicagoland": 593, "confirm": [593, 606, 650], "assembl": 593, "summari": [593, 606], "grlevel": 593, "encourag": 593, "peopl": 593, "cookbook": [593, 595, 648, 660], "moor": 593, "focu": 593, "varieti": [593, 596, 604, 605, 638, 659], "forg": [593, 595, 596, 648, 658, 659, 661], "arm_pyart": [593, 596, 598, 648, 658, 659, 661], "shaperead": 593, "shpreader": 593, "shapelyfeatur": 593, "miniforge3": 593, "tqdm": 593, "tqdmwarn": 593, "iprogress": 593, "ipywidget": 593, "readthedoc": 593, "stabl": 593, "user_instal": 593, "autonotebook": 593, "notebook_tqdm": 593, "credit": 593, "censu": 593, "mac": [593, 595, 648], "curl": 593, "linux": [593, 595, 596, 648, 659, 661], "wget": 593, "www2": 593, "geo": [593, 595], "tiger": 593, "tiger2016": 593, "primaryroad": 593, "tl_2016_us_primaryroad": 593, "zip": [593, 604, 607, 611, 616, 648], "xferd": 593, "dload": 593, "upload": [593, 595], "spent": 593, "7m": 593, "cpg": 593, "inflat": 593, "dbf": 593, "prj": 593, "shp": 593, "ea": 593, "iso": 593, "shx": 593, "reader": [593, 594, 595, 607], "geom": 593, "loop": [593, 595, 640], "rec": 593, "fullnam": 593, "interstate_featur": 593, "darkblu": 593, "clean": [593, 595, 644], "filesystem": 593, "month": [593, 606, 607], "kmkx20230401_010517_v06": 593, "kmkx20230401_011057_v06": 593, "kmkx20230401_011638_v06": 593, "kmkx20230401_012219_v06": 593, "kmkx20230401_012759_v06": 593, "kmkx20230401_013341_v06": 593, "kmkx20230401_013922_v06": 593, "kmkx20230401_014502_v06": 593, "kmkx20230401_015042_v06": 593, "kmkx20230401_015623_v06": 593, "kmkx20230401_015928_v06": 593, "plot_configur": 593, "twilight_shift": [593, 644], "cross_correlation_ratio": [593, 606, 619, 620, 637, 638, 655, 656], "plot_radar_ppi": 593, "left_field": 593, "right_field": 593, "plot_config": 593, "precip": 593, "vel_dealia": 593, "dealias_region_bas": [593, 595, 602, 644, 652], "add_field": [593, 596, 601, 602, 637, 638, 639, 644, 651, 652, 659], "corrected_veloc": [593, 602, 640, 644, 652, 655], "plot_numb": 593, "config": [593, 595, 650, 661], "121": [593, 606, 610, 617, 636, 644], "generate_titl": 593, "time_step": 593, "get_start_end": 593, "central_tim": 593, "astimezon": 593, "new_titl": 593, "cdt": 593, "sharon": 593, "Near": 593, "delavan": 593, "6105": 593, "60666": 593, "lightgrei": 593, "lavenderblush": 593, "ppi_velocity_reflectivity_": 593, "flexibl": 593, "hope": 593, "past": [594, 596, 659], "tag": [594, 595], "yyyi": 594, "dd": 594, "kernelspec": 594, "display_nam": 594, "ipykernel": 594, "languag": [594, 596, 648, 659], "language_info": 594, "codemirror_mod": 594, "file_extens": 594, "mimetyp": 594, "nbconvert_export": 594, "pygments_lex": 594, "ipython3": 594, "insert": 594, "nbformat": 594, "nbformat_minor": 594, "care": 594, "notabl": 594, "insight": 594, "cmweather": 595, "1452": 595, "zssherman": 595, "accessor": 595, "1457": 595, "syedhamidali": 595, "xradar": [595, 647, 657], "1456": 595, "mgrover1": 595, "1474": 595, "typo": 595, "1471": 595, "ci": [595, 597, 598], "isinst": 595, "1448": 595, "1472": 595, "1470": 595, "1469": 595, "outdat": 595, "instruct": [595, 648, 660], "1462": 595, "wheel": 595, "1473": 595, "1468": 595, "1450": 595, "app": 595, "scolli": 595, "dim": 595, "load_kazr": 595, "1446": 595, "isilb": 595, "1447": 595, "arm_vpt": 595, "1445": 595, "lint": [595, 596, 659], "1444": 595, "mnt": 595, "1440": [595, 650], "dedic": 595, "1442": 595, "1443": 595, "1437": 595, "minor": [595, 611, 651, 654], "algorith": 595, "1434": 595, "wolfidan": 595, "pin": [595, 598], "1430": 595, "codeql": 595, "1433": 595, "1428": 595, "neutrinocero": 595, "odim": 595, "1425": 595, "gatemapp": [595, 604, 609, 614, 657], "1418": 595, "rcjackson": 595, "commit": [595, 596, 598, 659], "hook": [595, 596, 659], "1419": 595, "sphinx": [595, 601, 602, 604, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646], "theme": 595, "1427": 595, "feet": 595, "1423": 595, "leak": 595, "mapper": 595, "1421": 595, "vforcel": 595, "1417": 595, "steepatticstair": 595, "1407": 595, "readm": [595, 658], "1397": 595, "1416": 595, "visual": [595, 616, 619, 627, 635, 638, 644], "1413": 595, "1411": 595, "1409": 595, "1401": 595, "joshua": 595, "hampton": 595, "del": [595, 618], "old": 595, "conda_recip": 595, "1399": 595, "ruff": 595, "1388": 595, "wrong": 595, "1390": 595, "1385": 595, "jrobrien91": 595, "1383": 595, "pkg_resourc": 595, "runtim": 595, "1394": 595, "mail": [595, 596, 648, 659], "1393": 595, "codeown": 595, "1391": 595, "1384": 595, "kmuehlbauer": 595, "1382": 595, "1379": 595, "mismatch": 595, "1381": 595, "wrap": 595, "get_gate_area": 595, "1375": 595, "1380": [595, 650], "1372": 595, "exec_modul": 595, "load_modul": 595, "1369": 595, "badg": 595, "1363": 595, "read_sigmet": 595, "1351": 595, "zouihao": 595, "unus": 595, "1343": 595, "1342": 595, "range_step": 595, "1338": 595, "max_num_g": 595, "1337": 595, "1327": 595, "revert": 595, "setuptool": 595, "unwant": 595, "cleanup": 595, "And": 595, "1357": 595, "1355": 595, "1339": 595, "1361": 595, "1335": 595, "manipul": [595, 618, 649], "1300": 595, "kylejgillett": 595, "melovato": 595, "tsbiscaro": 595, "1324": 595, "1319": 595, "1314": 595, "add_filt": 595, "1326": 595, "1320": [595, 650], "1325": 595, "jthielen": 595, "1303": 595, "jjhelmu": [595, 661], "wx4stg": 595, "antiviru": 595, "similiar": 595, "1307": 595, "1299": 595, "throw": 595, "convolve1d": 595, "1313": 595, "1306": 595, "1317": 595, "1311": 595, "jfigui": 595, "citat": [595, 596, 619, 648, 659], "1304": 595, "gamaanderson": 595, "hhuangwx": 595, "josephhardine": 595, "meteoswiss": [595, 639, 640], "mdr": 595, "ngui": 595, "tjlang": 595, "1294": 595, "1290": 595, "1285": 595, "1279": 595, "backward": [595, 599], "1278": 595, "1284": 595, "tracer": 595, "1296": 595, "1292": 595, "1287": 595, "cibuildwheel": 595, "1267": 595, "ocefpaf": 595, "1275": 595, "1276": 595, "1265": 595, "dcedgren": 595, "jilling": 595, "zhaobudaola": 595, "1263": 595, "1235": 595, "1215": 595, "columnsect": [595, 635], "1261": 595, "1241": 595, "1240": 595, "gatefi": 595, "1226": 595, "join_radar": 595, "repititon": 595, "iparam": 595, "1218": 595, "1216": 595, "trmm_rsl": 595, "1239": 595, "cftime": 595, "1211": 595, "incorrect": [595, 599, 652], "1231": 595, "ci_setup": 595, "1213": 595, "1264": 595, "basic": [595, 648, 649, 651], "1251": 595, "1234": 595, "1228": 595, "subset_radar": 595, "radar_util": 595, "1227": 595, "pyrad": 595, "1220": 595, "tst": 595, "median": 595, "1214": 595, "srbrodzik": 595, "1208": 595, "1204": 595, "1201": [595, 606], "1198": 595, "1196": 595, "catch": 595, "1191": 595, "1207": 595, "pypi": 595, "1206": 595, "unitest": 595, "1200": [595, 650], "1199": 595, "echoclass": 595, "1197": 595, "convv": 595, "awhil": 595, "back": 595, "1195": 595, "1190": 595, "dp": 595, "1184": 595, "solver": [595, 648], "1183": 595, "1176": 595, "1187": 595, "revis": 595, "270": [595, 596, 632, 659], "1185": 595, "1181": 595, "1178": 595, "1171": 595, "1180": 595, "1177": 595, "1173": 595, "sobitp59": 595, "rogu": 595, "1170": 595, "1160": 595, "1152": 595, "1151": 595, "mispel": 595, "1158": 595, "1148": 595, "1167": 595, "1154": 595, "unittest": 595, "1153": 595, "scm": [595, 596, 659], "1136": 595, "trigger": 595, "1126": 595, "action": [595, 596, 598, 659], "1118": 595, "1115": 595, "maco": 595, "1147": 595, "prune": 595, "1143": 595, "1141": 595, "1140": [595, 650], "1139": 595, "1137": 595, "1131": 595, "1130": 595, "1129": 595, "1128": 595, "1127": 595, "1125": 595, "1124": 595, "1123": 595, "1120": 595, "1119": 595, "dpr": 595, "1116": 595, "postcard": 595, "1104": 595, "1103": 595, "1122": 595, "gridmapdisplai": [595, 604, 615, 617, 633, 637, 638, 645, 654, 657], "1099": 595, "quick": [595, 606], "1146": 595, "contribut": [595, 596, 659, 660], "1106": 595, "1117": 595, "1113": 595, "submodul": [595, 654], "1110": 595, "forgotten": 595, "1108": 595, "test_echo_class": 595, "1107": 595, "1101": 595, "1098": 595, "1097": 595, "1094": 595, "1080": [595, 650], "registri": 595, "1087": 595, "1096": 595, "1093": 595, "1090": 595, "1089": 595, "1088": 595, "1085": 595, "1084": 595, "analyt": 595, "1081": 595, "1079": 595, "1077": 595, "pmi": 595, "log": [595, 598], "csp": 595, "ritvj": 595, "doesn": [595, 650], "mandat": 595, "1014": 595, "reallynicegui": 595, "hasattr": 595, "1034": 595, "overlap": [595, 618, 627], "mapdisplai": 595, "1029": 595, "azimuth_rhi_plot": 595, "1025": 595, "1019": 595, "rxm25": 595, "1075": 595, "1064": 595, "mute_radar": 595, "1033": 595, "1030": 595, "radxgrid": 595, "1027": 595, "1026": 595, "roadmap": 595, "repo": [595, 596, 659], "1059": 595, "dep": 595, "sidebar": 595, "1074": 595, "datetime_util": 595, "1072": 595, "1071": 595, "rtanamachi": 595, "pydata": 595, "1069": 595, "adc": 595, "1068": 595, "1067": 595, "1066": 595, "1063": 595, "codecov": 595, "1061": 595, "1060": 595, "1058": 595, "1056": 595, "1055": 595, "1053": 595, "1051": 595, "1050": 595, "1048": 595, "branch": [595, 596, 598, 659, 661], "1040": 595, "1039": 595, "1038": 595, "1031": 595, "1024": 595, "1020": [595, 650], "humphreyscart": 595, "tkralph": 595, "1003": 595, "997": 595, "1007": 595, "1001": 595, "1010": 595, "travi": 595, "sty": [595, 596, 659], "pep8": [595, 596, 659], "1005": 595, "988": 595, "quba1": 595, "984": 595, "tdwr": 595, "969": 595, "956": 595, "994": 595, "979": [595, 629, 633, 657], "h5py": [595, 648], "978": 595, "june1st": 595, "switch": [595, 596, 659], "973": 595, "maint": [595, 596, 659], "966": 595, "983": 595, "amarouan": 595, "abdelhak": 595, "bmgxyz": 595, "address": 595, "962": 595, "mwilson14": 595, "963": 595, "nonetyp": 595, "regard": 595, "959": 595, "964": 595, "176": 595, "919": 595, "rda": 595, "903": [595, 613, 614, 657], "add_gate_area": 595, "950": 595, "blotchi": 595, "947": 595, "946": 595, "944": 595, "694": 595, "938": 595, "vlouf": 595, "934": 595, "925": 595, "924": 595, "917": 595, "appveyor": 595, "937": 595, "927": 595, "liter": 595, "said": 595, "949": 595, "948": 595, "929": 595, "926": 595, "920": 595, "915": 595, "911": 595, "grwise1": 595, "jsignel": 595, "rumpki": 595, "broke": 595, "913": 595, "msg29": 595, "909": 595, "907": 595, "framework": 595, "910": 595, "912": 595, "napoleon": 595, "902": 595, "rtd": 595, "893": 595, "892": 595, "odimh5": 595, "898": 595, "895": 595, "896": 595, "864": 595, "louiswick": 595, "hilderbrand": 595, "877": 595, "886": 595, "crash": 595, "878": 595, "891": 595, "zflamig": 595, "futur": [595, 596, 599, 659], "890": 595, "889": 595, "885": 595, "dstex": 595, "880": 595, "soon": 595, "879": 595, "plot_grid": [595, 617, 631, 637, 638, 645, 654], "to_xarrai": 595, "873": 595, "876": 595, "elementwis": 595, "anaconda": [595, 596, 598, 648, 658, 659], "faq": 595, "group": [595, 596, 659], "868": 595, "mvanlierwalq": 595, "848": 595, "grid_io": 595, "846": 595, "jhemedin": 595, "841": 595, "nbin": 595, "865": 595, "856": 595, "840": [595, 650], "caus": 595, "852": 595, "849": 595, "get_dataset": 595, "845": 595, "docstr": 595, "838": 595, "836": 595, "cheatsheet": 595, "fortran": 595, "bit": [595, 658], "environ": [595, 648, 658, 660], "contr": 595, "843": 595, "spell": 595, "835": 595, "read_d3r_gcpex_nc": 595, "842": 595, "eccc": 595, "837": 595, "taylbm": 595, "kenkeho": 595, "swnesbitt": 595, "827": [595, 630, 633, 657], "822": 595, "806": 595, "804": 595, "800": [595, 620, 633, 657], "778": 595, "688": [595, 635], "incomplet": 595, "msg5": 595, "832": 595, "820": 595, "812": [595, 640, 641, 657], "deal": 595, "809": 595, "contiuum": 595, "gh": 595, "795": 595, "explicit": 595, "py2": 595, "790": 595, "sh": 595, "kai": 595, "muehlbauer": 595, "789": 595, "777": 595, "indexerror": 595, "check_outli": 595, "776": 595, "juhi24": 595, "770": 595, "imp": 595, "newer": [595, 658], "675": 595, "824": 595, "minu": 595, "803": 595, "738": 595, "799": 595, "792": 595, "favor": 595, "791": 595, "786": 595, "784": 595, "itself": [595, 656], "inc": 595, "794": 595, "rst": 595, "preformat": 595, "779": 595, "eaxmpl": 595, "834": [595, 625, 633, 657], "833": 595, "elsewher": 595, "831": 595, "828": 595, "821": 595, "pytest": [595, 596, 648, 658, 659], "818": 595, "atteun": 595, "817": 595, "simulated_veloc": [595, 655], "802": 595, "grab": [595, 630], "801": 595, "796": 595, "793": 595, "787": 595, "781": 595, "cvd": 595, "775": 595, "774": 595, "769": 595, "nl2": 595, "765": 595, "miaoneng": 595, "gewitterblitz": 595, "liliaow567": 595, "764": 595, "coveral": 595, "messsag": 595, "761": 595, "757": 595, "set_raster": 595, "748": 595, "754": 595, "755": 595, "recompil": 595, "758": 595, "ngoldbaum": 595, "reciev": 595, "752": 595, "maskedarrai": [595, 601], "gate_id": [595, 655], "749": 595, "746": 595, "744": 595, "zxdawn": 595, "netcdftim": 595, "736": 595, "731": 595, "dot_product": 595, "729": 595, "test_rhi_elev": 595, "twice": [595, 638], "724": 595, "728": 595, "727": 595, "nosetest": 595, "715": 595, "vradh": 595, "vradv": 595, "quantiti": 595, "739": 595, "es5nhc": 595, "735": 595, "wave100": 595, "734": 595, "733": 595, "730": 595, "723": 595, "comp": 595, "721": 595, "cameron": 595, "homey": 595, "716": 595, "cameronhomey": 595, "jamessong": 595, "winash12": 595, "687": 595, "csnardi": 595, "645": 595, "docbuild": 595, "failur": 595, "709": 595, "mhpicel": 595, "705": 595, "fromstr": 595, "704": 595, "692": 595, "651": 595, "711": 595, "calculate_velocity_textur": [595, 644, 652], "retreiv": 595, "672": 595, "bucket": [595, 606], "673": 595, "653": 595, "638": 595, "635": 595, "frombuff": 595, "702": 595, "grid_mapp": 595, "707": 595, "706": 595, "goharkai": 595, "infinit": 595, "693": 595, "freemansw1": 595, "683": 595, "674": 595, "668": 595, "contact": 595, "land": 595, "667": [595, 650], "665": 595, "662": 595, "661": 595, "attributeerror": 595, "656": 595, "oserror": 595, "650": 595, "overflowerror": 595, "too": 595, "648": 595, "happier": 595, "647": 595, "640": 595, "639": 595, "634": 595, "620": 595, "itsjm": 595, "kirknorth": 595, "617": 595, "616": 595, "631": 595, "swap": 595, "el": 595, "plot_rai": 595, "618": 595, "_get_angl": 595, "613": 595, "607": 595, "linspac": [595, 596, 616, 619, 637, 638, 650, 659], "603": 595, "627": 595, "623": 595, "596": 595, "595": 595, "632": 595, "630": 595, "625": 595, "tulipasilva": 595, "622": 595, "normbw": 595, "q": 595, "quit": [595, 648], "614": 595, "git": [595, 596, 648, 658, 659, 661], "611": [595, 646, 647, 657], "sinaram": 595, "608": 595, "mrugna": 595, "605": 595, "bld": 595, "kludg": 595, "604": 595, "acknowledg": [595, 648], "602": 595, "qpe": [595, 638], "598": 595, "mustafaalicelik": 595, "580": 595, "577": 595, "576": 595, "575": 595, "562": [595, 606, 608, 657], "azim": 595, "546": 595, "pickl": 595, "unpickl": 595, "543": 595, "vcp": 595, "541": 595, "noaaport": 595, "seper": 595, "540": [595, 650], "521": 595, "459": 595, "590": 595, "bugfix": 595, "l3": 595, "135": 595, "eet": 595, "585": 595, "582": 595, "574": 595, "570": 595, "558": 595, "ctm": 595, "553": 595, "542": 595, "aux_io": 595, "read_gam": 595, "535": 595, "midnight": 595, "523": 595, "importerror": 595, "522": 595, "519": 595, "512": 595, "510": 595, "phase_proc": 595, "zerodivis": 595, "494": 595, "485": 595, "unsupport": 595, "481": 595, "579": 595, "578": 595, "568": 595, "563": 595, "559": 595, "549": 595, "547": 595, "gamicfil": 595, "gamic_hdf5": 595, "536": 595, "524": 595, "513": 595, "balltre": 595, "504": 595, "501": 595, "482": 595, "479": 595, "594": 595, "561": 595, "despeckle_field": 595, "544": 595, "axislabel_flag": 595, "539": 595, "529": 595, "_get_x_z": 595, "491": 595, "486": 595, "586": 595, "583": 595, "572": 595, "fixup": 595, "569": 595, "560": 595, "rainbow_wrl": 595, "555": [595, 635], "recip": [595, 598], "554": 595, "nose_arg": 595, "548": 595, "538": 595, "532": 595, "531": 595, "528": 595, "output_to_geotiff": 595, "514": 595, "511": 595, "507": 595, "506": 595, "498": 595, "libgfortran": 595, "497": 595, "contour": [595, 604, 615, 633, 657], "495": 595, "493": 595, "489": 595, "488": 595, "argentinean": 595, "480": [595, 650], "bdolan44": 595, "dara74k": 595, "gavi": 595, "jacaicedob": 595, "wx": 595, "pfhein": 595, "tamisalex": 595, "469": 595, "468": 595, "467": 595, "luminos": 595, "464": 595, "455": 595, "hclass": 595, "447": [595, 607, 608, 657], "439": [595, 626, 633, 657], "434": 595, "433": 595, "427": [595, 610, 614, 657], "411": 595, "404": 595, "388": 595, "cross_section_ppi": [595, 632], "380": 595, "472": 595, "471": 595, "470": 595, "prf": 595, "460": 595, "get_field_colormap": 595, "446": [595, 644, 647, 657], "444": 595, "example_cfradial_rhi": 595, "441": 595, "417": 595, "struct": 595, "410": 595, "383": 595, "unicod": 595, "382": 595, "gatefit": 595, "372": [595, 622, 632, 633, 657], "465": 595, "refactor": 595, "463": 595, "decor": 595, "416": 595, "392": 595, "radxcovert": 595, "clarifi": 595, "475": 595, "406": 595, "add_field_lik": [595, 610], "397": [595, 624, 633, 657], "391": 595, "376": 595, "370": 595, "corner_to_point": 595, "473": 595, "466": 595, "456": 595, "outstand": 595, "412": [595, 637, 641, 657], "413": 595, "454": 595, "453": 595, "449": 595, "438": 595, "437": 595, "430": 595, "426": 595, "miniconda": [595, 596, 648, 659], "reactiv": 595, "422": [595, 611, 614, 657], "plot_map_one_radar_to_grid": [595, 612, 614, 657], "420": [595, 650], "419": 595, "408": 595, "resilli": 595, "403": 595, "write_mdv_grid": 595, "402": 595, "401": 595, "399": 595, "395": 595, "documen": 595, "add_2d_latlon_axi": 595, "394": 595, "378": 595, "acess": 595, "377": 595, "373": 595, "deeplycloudi": 595, "358": [595, 596, 659], "edge_netcdf": 595, "read_edge_netcdf": 595, "357": [595, 596, 659], "dealias_fourdd": 595, "348": 595, "346": 595, "creation": 595, "326": 595, "308": 595, "361": 595, "refl_filter_flag": 595, "map_gate_to_grid": 595, "334": 595, "region_dealia": 595, "327": 595, "libm": 595, "posix": 595, "319": 595, "unnecessari": 595, "inmemoryfil": 595, "365": 595, "359": [595, 596, 659], "354": 595, "_rsl_interfac": 595, "342": 595, "binstar": 595, "337": 595, "320": 595, "317": 595, "362": 595, "plot_grid_three_panel": 595, "353": 595, "confus": 595, "363": 595, "340": 595, "externalis": 595, "339": 595, "333": 595, "332": 595, "47": [595, 640], "324": 595, "323": 595, "271": 595, "binar": 595, "266": 595, "313": 595, "312": 595, "290": 595, "280": 595, "273": 595, "272": 595, "261": 595, "256": [595, 616, 639], "dealias_phase_unwrap": 595, "radarmapdispl": 595, "249": 595, "discontin": 595, "315": 595, "314": 595, "288": 595, "fault": 595, "276": 595, "dealias_unwrap_phas": 595, "275": 595, "corrupt": 595, "269": 595, "283": 595, "inconsist": 595, "274": 595, "254": [595, 638], "fallback": 595, "245": 595, "316": 595, "ngates_vart": 595, "310": 595, "py3": [595, 661], "nexrad_level2": 595, "nexrad_level3": 595, "309": 595, "1byte": 595, "datatyp": 595, "weathergod": 595, "293": 595, "292": 595, "289": 595, "291": 595, "138": 595, "284": 595, "alter": 595, "267": 595, "latlon": 595, "264": 595, "262": 595, "260": 595, "259": 595, "258": 595, "241": [595, 607, 612], "rebuild": 595, "237": 595, "scientif": [596, 648, 659], "analyz": [596, 648, 655, 659], "repositori": [596, 597, 598, 648, 658, 659, 661], "e25": [596, 648, 659], "publish": [596, 659], "easiest": [596, 648, 659], "januari": [596, 648, 659], "1st": [596, 648, 659], "Then": [596, 598, 648, 658, 659], "termin": [596, 648, 659, 661], "prompt": [596, 648, 659], "mamba": [596, 659], "openradar": [596, 659], "short": [596, 598, 659], "cours": [596, 610, 659], "ev": [596, 659], "pyart_short_cours": [596, 659], "youtub": [596, 659], "watch": [596, 659], "diip": [596, 659], "q3bkzw": [596, 659], "book": [596, 659], "rule": [596, 659], "pep": [596, 659], "0008": [596, 659], "afterward": [596, 659], "neccessari": [596, 659], "brief": [596, 597, 659], "third": [596, 659], "parti": [596, 659], "explain": [596, 659], "_inverse_dist_squar": [596, 659], "_average1d": [596, 659], "seen": [596, 659], "explan": [596, 597, 659], "privat": [596, 659], "rerun": [596, 659], "test_vad": [596, 659], "test_radar": [596, 650, 659], "make_target_radar": [596, 659], "1000": [596, 613, 621, 627, 628, 638, 654, 659], "ones_lik": [596, 659], "z_start": [596, 659], "z_end": [596, 659], "z_count": [596, 659], "vad_height": [596, 659], "vad_spe": [596, 659], "98665725": [596, 659], "94020686": [596, 659], "88107152": [596, 659], "81939374": [596, 659], "75851962": [596, 659], "vad_direct": [596, 659], "84659496": [596, 659], "30240553": [596, 659], "58658589": [596, 659], "81073051": [596, 659], "01353486": [596, 659], "01335138": [596, 659], "06014712": [596, 659], "12039762": [596, 659], "18410404": [596, 659], "24791911": [596, 659], "98663937": [596, 659], "9398407": [596, 659], "87958641": [596, 659], "81587601": [596, 659], "75205693": [596, 659], "assert_almost_equ": [596, 659], "pyarg": [596, 659], "test_cfradi": [596, 659], "cd": [596, 659], "fork": [596, 598, 659], "cartopy_map": [596, 659], "branch_nam": [596, 659], "task": [596, 604, 643, 659], "mind": [596, 610, 659], "simpli": [596, 637, 644, 652, 654, 658, 659, 661], "acronym": [596, 659], "finish": [596, 659, 661], "quotat": [596, 659], "hit": [596, 659], "depth": [596, 648, 656, 659], "acronymn": [596, 659], "gitwash": [596, 659], "development_workflow": [596, 659], "whitespac": [596, 659], "usual": [596, 607, 659], "vim": [596, 659], "fetch": [596, 611, 638, 639, 640, 659], "ff": [596, 659], "sit": [596, 659], "guidanc": [596, 659], "anyth": 598, "creator": 598, "draft": 598, "shortlog": 598, "uplod": 598, "feedstock": 598, "clone": [598, 648, 658], "meta": 598, "yaml": 598, "sha256": 598, "rerend": 598, "smithi": 598, "bot": 598, "sometim": [598, 650], "awar": 598, "semant": 599, "earlier": 599, "ceas": 599, "Such": 599, "proceed": 599, "futurewarn": 599, "runner": [601, 607], "micromamba": [601, 607], "fromnumer": 601, "771": 601, "kth": 601, "__doc__": [601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 637, 638], "sgpcsaprsurcmaci7": [601, 651], "20110520": [601, 651], "095101": [601, 651], "pop": 601, "specific_attenu": [601, 635, 639, 650, 655], "corrected_reflectivity_horizont": [601, 613, 617, 635, 644, 646, 650], "calculate_attenu": 601, "131": [601, 637, 638], "132": [601, 637, 638], "ax3": [601, 602, 631, 637, 638], "133": [601, 635, 637, 638], "suptitl": [601, 602, 611, 630, 640], "713": [601, 603, 657], "plot_attenu": [601, 603, 657], "ipynb": [601, 602, 606, 607, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 646], "ial": 602, "095636": [602, 652], "sonde_fil": 602, "sgpinterpolatedsondec1": 602, "c1": [602, 655], "20110510": 602, "000000": 602, "cdf": [602, 638], "dt": 602, "read_arm_sonde_vap": 602, "exclude_transit": [602, 612, 613, 617, 636], "exclude_invalid": 602, "exclude_outsid": 602, "dealias_data": 602, "sixth": 602, "221": [602, 620, 628, 633, 657], "222": [602, 620], "223": [602, 620], "ax4": 602, "224": [602, 620], "plot_dealia": [602, 603, 657], "018": 603, "mem": [603, 608, 614, 633, 641, 642, 647, 657], "examples_python": 604, "examples_jupyt": 604, "grover": [606, 610, 616, 617, 622, 630, 635, 636, 644, 645, 646], "filepath": [606, 607], "organ": 606, "radarsit": [606, 607], "_v06": 606, "khgx": 606, "aws_nexrad_level2_fil": [606, 607], "khgx20220322_120125_v06": 606, "clutter_filter_power_remov": 606, "spectrum_width": [606, 655, 656], "differential_phas": [606, 620, 655, 656], "relect": 606, "z_": [606, 610, 618], "v_": 606, "noq": 606, "level3": 606, "aws_nexrad_level3_velocity_fil": 606, "hgx_n0u_2022_03_22_12_01_25": 606, "aws_nexrad_level3_reflectivity_fil": 606, "hgx_n0q_2022_03_22_12_01_25": 606, "read_nexrad_level3": 606, "radar_level3_veloc": 606, "radar_level3_reflect": 606, "reflectivity_displai": 606, "velocity_displai": 606, "plot_nexrad_data_aw": [606, 608, 657], "zachari": 607, "sherman": 607, "zsherman": [607, 661], "tendenc": 607, "gz": 607, "handford": 607, "ca": 607, "khnx": 607, "0203": 607, "v06": 607, "khnx20060724_020338": 607, "nexrad_arch": 607, "231": [607, 638], "clearli": 607, "lucki": 607, "31417": 607, "63111": 607, "plote": [607, 624], "central_latitud": [607, 624, 637, 638, 651], "central_longitud": [607, 624, 637, 638, 651], "downloadwarn": 607, "naturalearth": 607, "amazonaw": 607, "10m_physic": 607, "ne_10m_coastlin": 607, "10m_cultur": 607, "ne_10m_admin_1_states_provinces_lin": 607, "plot_older_nexrad_data_aw": [607, 608, 657], "009": 608, "xsapr": [610, 613, 617], "xsapr_sw_fil": [610, 613, 617], "swx_20120520_0641": [610, 613, 616, 617, 618, 622, 632, 635, 636, 637, 638, 644, 645, 646], "xsapr_se_fil": [610, 613, 617], "sex_20120520_0641": [610, 613, 617], "radar_sw": [610, 613, 617], "radar_s": [610, 613, 617], "southwestern": 610, "gmapper": 610, "radar_sw_mapped_to_radar_s": 610, "disp1": 610, "98": [610, 635, 640, 655], "97": [610, 613, 617, 619, 631, 635, 637, 638, 650], "disp2": 610, "remap": 610, "eyebal": 610, "fortun": 610, "reflectivity_se_radar": 610, "reflectivity_sw_radar": 610, "reflectivity_differ": 610, "reflectivity_bia": 610, "southwest": 610, "xspar": 610, "southeast": 610, "histogram": [610, 652], "neccessarili": 610, "incl_gat": 610, "refl_s": 610, "refl_sw": 610, "values_without_mask": 610, "hist": [610, 644, 652], "histogram2d": 610, "masked_wher": [610, 638, 655], "log_": 610, "plot_compare_two_radars_gatemapp": [610, 614, 657], "solut": 611, "arguabl": 611, "overlook": 611, "neglig": 611, "ze": 611, "2nd": 611, "4th": 611, "purpl": 611, "truncat": 611, "ok": 611, "israel": 611, "silber": 611, "open_radar_data": [611, 638, 639, 640], "file_nam": 611, "example_plot_ppi_single_sweep": 611, "processed_field": 611, "reflectivity_at_cor": 611, "radar_obj": 611, "nnow": 611, "tight_layout": [611, 632], "ax_ind": 611, "sweep_obj": 611, "fig2": 611, "1601": 611, "40000": [611, 613, 617, 624, 654], "set_titl": [611, 616, 637, 638], "nuse": 611, "plot_grid_single_sweep_ppi": [611, 614, 657], "123000": 612, "338": [612, 614, 657], "xsarp": [613, 625, 626], "gatefilter_s": [613, 617], "exclude_abov": [613, 617, 644, 652], "gatefilter_sw": [613, 617], "201": [613, 637, 638, 654], "50000": [613, 617, 637, 638, 654], "57861": [613, 617], "363611": [613, 617], "plot_map_two_radars_to_grid": [613, 614, 657], "090": 614, "helper": 616, "vstack": 616, "plot_color_gradi": 616, "cmap_categori": 616, "cmap_list": 616, "figh": 616, "99": 616, "cmap_nam": 616, "pyart_": 616, "va": 616, "transax": 616, "spine": 616, "ones": 616, "set_axis_off": 616, "perceptu": [616, 619], "light": [616, 639], "diverg": 616, "meaning": 616, "terrain": 616, "spectral_r": 616, "rememb": 616, "front": 616, "plot_choose_a_colormap": [616, 633, 657], "181": [617, 631, 633, 657], "blue": [617, 627, 628], "plot_cross_sect": [617, 633, 657], "124": [617, 633, 640, 657], "colobar": 618, "joe": 618, "brien": 618, "obrienj": 618, "perfect": 618, "coord": 618, "gca": 618, "set_major_loc": 618, "nullloc": 618, "axsb": 618, "ppi_map": 618, "set_tick": 618, "071": [618, 633, 657], "plot_modify_colorbar": [618, 633, 657], "reduc": [619, 638, 658], "promin": [619, 638], "deemphas": 619, "depict": 619, "ultim": 619, "misinterpret": 619, "lmtomkin": [619, 637, 638], "ncsu": [619, 637, 638], "nexrad_fil": [619, 637, 638], "kbgm": 619, "kbgm20200207_132642_v06": 619, "image_mute_radar": [619, 637, 638], "magma_cmap": 619, "magma_r": [619, 637, 638], "grays_cmap": [619, 638], "gray_r": [619, 638], "nonmuted_cmap": 619, "linearsegmentedcolormap": [619, 637, 638], "from_list": [619, 637, 638], "muted_cmap": [619, 638], "nonmuted_reflect": [619, 637], "muted_reflect": [619, 638], "set_aspect": [619, 637, 638, 639], "719": [619, 633, 657], "plot_nexrad_image_muted_reflect": [619, 633, 657], "katx20130717_195021_v06": [620, 656], "plot_nexrad_multiple_mo": [620, 633, 657], "level2_katx_20130717_1950": 621, "ar2v": 621, "850": [621, 633, 657], "plot_nexrad_reflect": [621, 633, 657], "plot_cross_hair": 622, "plot_ppi_cfradi": [622, 633, 657], "145": [623, 633, 635, 638, 657], "jason": [624, 631], "hemeding": [624, 631], "nsaxsaprppic1": 624, "20140201": 624, "184802": 624, "157": 624, "156": 624, "71": 624, "158": 624, "72": 624, "40km": 624, "plot_line_xi": 624, "20000": [624, 654], "200000": [624, 637, 638], "plot_point": 624, "plot_ppi_with_r": [624, 633, 657], "instrument_nam": [625, 626, 656], "agl": 625, "fac": 625, "nplot": [625, 626, 630], "snum": 625, "hsrhi": [625, 626], "3f": [625, 626], "time_start": 625, "num2dat": 625, "only_use_cftime_datetim": 625, "only_use_python_datetim": 625, "figure_titl": 625, "isoformat": 625, "plot_rhi_cfradi": [625, 633, 657], "differnenti": 627, "cori": [627, 628], "weber": [627, 628], "cweber": [627, 628], "220629": 627, "matplolib": 627, "visabl": 627, "flow": 627, "paramt": 627, "compens": 627, "00015": 627, "veri": [627, 637, 638], "moir": 627, "001": 627, "get_start": [627, 628], "get_end": [627, 628], "blur": 627, "nice": [627, 658], "arbirarli": 627, "gaussian_filt": [627, 628], "ang": [627, 628], "levels_rain": 627, "levels_ic": 627, "contours_ic": 627, "contours_rain": 627, "fmt": [627, 628], "0000": [627, 628], "826": [627, 633, 657], "plot_rhi_contours_differential_reflect": [627, 633, 657], "spyi": 628, "034142": 628, "ramp": 628, "blob": 628, "pyart_budrd18": 628, "coutour": 628, "dot": 628, "major": 628, "axhlin": 628, "axvlin": 628, "00b4ff": 628, "ff6800": 628, "set_ylabel": [628, 640], "cp": 628, "plot_rhi_data_overlai": [628, 633, 657], "110041": 629, "plot_rhi_mdv": [629, 633, 657], "fields_to_plot": 630, "plot_num": 630, "u00b0": 630, "plot_rhi_two_panel": [630, 633, 657], "20110520100000_nexrad_grid": 631, "read_grid": [631, 638], "plot_crosshair": 631, "plot_longitude_slic": 631, "plot_latitude_slic": [631, 654], "plot_three_panel_gridmapdisplai": [631, 633, 657], "225": 632, "xsect": 632, "plot_xsect": [632, 633, 657], "147": 633, "maxwel": [635, 636], "site_lon": 635, "73": 635, "site_lat": 635, "latitdu": 635, "pathcollect": 635, "0x7f84bc902480": 635, "get_field_loc": 635, "350": 635, "818e": 635, "recalculated_diff_phas": [635, 650], "2778": 635, "1806": 635, "unf_dp_phase_shift": [635, 650], "953": 635, "144": [635, 638], "diff_reflect": [635, 650], "20t06": 635, "distance_from_radar": 635, "233": 635, "545": 635, "latitude_of_loc": 635, "longitude_of_loc": 635, "line2d": 635, "0x7f84bcb122a0": 635, "plot_column_subset": [635, 641, 657], "compz": 636, "composite_reflect": 636, "composite_displai": 636, "149": [636, 641, 657], "plot_composite_reflect": [636, 641, 657], "classifc": 637, "summer": [637, 638], "ian": [637, 638], "footprint": 637, "yield": 637, "smoother": 637, "rescal": [637, 638], "curv": 637, "plot_convstrat_schem": 637, "pick": 637, "radii": 637, "dilat": 637, "conv_strat_yut": 637, "convsf_mask": 637, "masked_equ": [637, 638], "feature_detect": [637, 638], "convsf": [637, 638], "magma_r_cmap": [637, 638], "ref_cmap": [637, 638], "albersequalarea": [637, 638], "convsf_und": 637, "convsf_ov": 637, "uncertainti": [637, 638], "underest": [637, 638], "feature_und": [637, 638], "overest": [637, 638], "feature_ov": [637, 638], "ktbw": [637, 638], "ktbw20220928_190142_v06": [637, 638], "rasumussen": [637, 638], "2003": [637, 638], "reflecit": 637, "kokx": [637, 638], "kokx20210207_161413_v06": [637, 638], "nonmuted_ref": 637, "masked_invalid": 637, "nonmuted_ref_linear": 637, "mm6": 637, "m3": 637, "snow_rat": [637, 638], "snow_rate_dict": 637, "40500": 637, "034": [637, 638], "ccotd": [637, 638], "rasmussen": [637, 638], "dixon": [637, 638, 648], "vasiloff": [637, 638], "hage": [637, 638], "knight": [637, 638], "vivekanandan": [637, 638], "xu": [637, 638], "nowcast": [637, 638], "accumul": [637, 638], "042": [637, 638], "3c0020": [637, 638], "snuart": [637, 638], "plot_convective_stratiform": [637, 641, 657], "heavili": 638, "customiz": 638, "manuscript": 638, "feature_mask": 638, "19990811": 638, "221202": 638, "convsf_cmap": 638, "140": 638, "253": 638, "maxdz": 638, "csb": 638, "csb_mask": 638, "masked_less_equ": 638, "csl": 638, "convsf_lo": 638, "csl_mask": 638, "csh": 638, "convsf_hi": 638, "csh_mask": 638, "rpm": 638, "csbpm": 638, "set_yticklabel": 638, "lo": 638, "cslpm": 638, "cshpm": 638, "csb_lt": 638, "csb_lt_mask": 638, "csu_lt": 638, "csu_lt_mask": 638, "cso_lt": 638, "cso_lt_mask": 638, "csupm": 638, "csopm": 638, "ztor": 638, "ref_field_ov": 638, "ref_field_und": 638, "2db": 638, "_overest": 638, "_underest": 638, "reflectivity_ov": 638, "reflectivity_und": 638, "snow_rate_ov": 638, "snow_rate_und": 638, "feature_estimate_dict": 638, "bpm": 638, "upm": 638, "opm": 638, "distinct": 638, "scalar_features_mask": 638, "cosine_features_mask": 638, "isol": 638, "faint_featur": 638, "faint_features_mask": 638, "features_faint_strong": 638, "features_faint_strong_mask": 638, "new_dict": 638, "comment_1": 638, "faint_strong_cmap": 638, "faint_strong": 638, "238": 638, "93": 638, "66": 638, "quickli": 638, "quick_image_mut": 638, "muted_ref": 638, "nonmuted_field": 638, "muted_field": 638, "snow_rate_nonmut": 638, "snow_rate_mut": 638, "features_nonmut": 638, "features_mut": 638, "srpm": 638, "srpmm": 638, "csbpmm": 638, "plot_feature_detect": [638, 641, 657], "daniel": [639, 640], "wolfensberg": [639, 640], "mll2217907250u": 639, "003": 639, "preinterpol": 639, "20220628072500_savevol_cosmo_lookup_temp": 639, "nwp_temp": 639, "calculate_attenuation_zphi": 639, "uncorrected_differential_phas": 639, "pia": 639, "pida": 639, "corrected_reflect": [639, 655], "corrected_differential_reflect": [639, 655], "kdp_maesaka": 639, "specific_differential_phas": [639, 655], "hydroclass_semisupervis": 639, "uncorrected_cross_correlation_ratio": 639, "radar_echo_classif": 639, "lr": 639, "rp": 639, "rn": 639, "vi": 639, "mh": 639, "ih": 639, "hdg": 639, "boundarynorm": 639, "aggreg": 639, "crystal": 639, "rime": 639, "particl": 639, "wet": 639, "graupel": 639, "plot_hydrometeor": [639, 641, 657], "2682": 640, "5272": 640, "7815": 640, "10403": 640, "14259": 640, "18533": 640, "22800": [640, 650], "27060": [640, 650], "31310": 640, "35549": 640, "39777": 640, "43991": 640, "50263": 640, "58621": 640, "71002": 640, "87118": 640, "106740": 640, "125476": 640, "143293": 640, "160000": 640, "mla2119412050u": 640, "zlevel": 640, "5000": [640, 654], "u_allsweep": 640, "v_allsweep": 640, "idx": 640, "radar_1sweep": 640, "vad_brown": 640, "u_avg": 640, "nanmean": 640, "v_avg": 640, "sharei": 640, "set_xlabel": 640, "plot_vad": [640, 641, 657], "851": 641, "000": 642, "xd": [644, 645, 646], "open_cfradial1_datatre": [644, 645, 646], "sweep_0": 644, "vel_textur": [644, 652], "velocity_textur": [644, 652, 655], "At": [644, 652], "velocity_dealias": [644, 652], "plot_dealias_xradar": [644, 647, 657], "101": 645, "10_000": 645, "50_000": 645, "045": [645, 647, 657], "plot_grid_xradar": [645, 647, 657], "plot_xradar": [646, 647, 657], "103": 647, "conceptu": 648, "understand": 648, "someth": 648, "demonstr": 648, "maik": 648, "heistermann": 648, "bam": 648, "kellei": 648, "peura": 648, "pfaff": 648, "wolff": 648, "emerg": 648, "bull": 648, "amer": 648, "soc": 648, "117": 648, "128": 648, "00240": 648, "ii": [648, 656], "abl": [648, 658], "sophist": 648, "tutori": 648, "materi": 648, "erad": 648, "asr": 648, "asm": 648, "Or": 648, "pyart_env": [648, 651, 654, 661], "wish": 648, "unreleas": 648, "charg": 648, "resourc": [648, 658], "lassen": 648, "radtec": 648, "rsl_path": [648, 658], "usr": 648, "wrapper": 648, "fastest": 648, "cbc": 648, "glpk": 648, "coincbc": [648, 658, 661], "coin_install_dir": [648, 658, 661], "ask": [648, 661], "hypothet": 650, "idea": [650, 652], "dict_kei": [650, 655], "rain_rate_a": [650, 655], "volume_numb": 650, "platform_typ": 650, "instrument_typ": 650, "primary_axi": 650, "make_empty_ppi_radar": 650, "59416667": 650, "isn": 650, "240": 650, "660": 650, "720": 650, "780": 650, "960": 650, "1260": 650, "1560": 650, "1620": 650, "1680": 650, "1740": 650, "1860": 650, "1920": 650, "1980": 650, "2040": 650, "2100": 650, "2160": 650, "2220": 650, "2280": 650, "2340": 650, "2400": 650, "2460": 650, "2520": 650, "2580": 650, "2640": 650, "2700": 650, "2760": 650, "2820": 650, "2880": 650, "2940": 650, "3060": 650, "3120": 650, "3180": 650, "3240": 650, "3300": 650, "3360": 650, "3420": 650, "3480": 650, "3540": 650, "3600": 650, "3660": 650, "3720": 650, "3780": 650, "3840": 650, "3900": 650, "3960": 650, "4020": 650, "4080": 650, "4140": 650, "4200": 650, "4260": 650, "4320": 650, "4380": 650, "4440": 650, "4500": 650, "4560": 650, "4620": 650, "4680": 650, "4740": 650, "4800": 650, "4860": 650, "4920": 650, "4980": 650, "5040": 650, "5100": 650, "5160": 650, "5220": 650, "5280": 650, "5340": 650, "5400": 650, "5460": 650, "5520": 650, "5580": 650, "5640": 650, "5700": 650, "5760": 650, "5820": 650, "5880": 650, "5940": 650, "6000": [650, 654], "6060": 650, "6120": 650, "6180": 650, "6240": 650, "6300": 650, "6360": 650, "6420": 650, "6480": 650, "6540": 650, "6600": 650, "6660": 650, "6720": 650, "6780": 650, "6840": 650, "6900": 650, "6960": 650, "7020": 650, "7080": 650, "7140": 650, "7200": [650, 656], "7260": 650, "7320": 650, "7380": 650, "7440": 650, "7560": 650, "7620": 650, "7680": 650, "7740": 650, "7800": 650, "7860": 650, "7920": 650, "7980": 650, "8040": 650, "8100": 650, "8160": 650, "8220": 650, "8280": 650, "8340": 650, "8400": 650, "8460": 650, "8520": 650, "8580": 650, "8640": 650, "8700": 650, "8760": 650, "8820": 650, "8880": 650, "8940": 650, "9000": [650, 654], "9060": 650, "9120": 650, "9180": 650, "9240": 650, "9300": 650, "9360": 650, "9420": 650, "9480": 650, "9540": 650, "9600": 650, "9660": 650, "9720": 650, "9780": 650, "9840": 650, "9900": 650, "9960": 650, "10020": 650, "10080": 650, "10140": 650, "10200": 650, "10260": 650, "10320": 650, "10380": 650, "10440": 650, "10500": 650, "10560": 650, "10620": 650, "10680": 650, "10740": 650, "10800": 650, "10860": 650, "10920": 650, "10980": 650, "11040": 650, "11100": 650, "11160": 650, "11220": 650, "11280": 650, "11340": 650, "11400": 650, "11460": 650, "11520": 650, "11580": 650, "11640": 650, "11700": 650, "11760": 650, "11820": 650, "11880": 650, "11940": 650, "12000": [650, 654], "12060": 650, "12120": 650, "12180": 650, "12240": 650, "12300": 650, "12360": 650, "12420": 650, "12480": 650, "12540": 650, "12600": 650, "12660": 650, "12720": 650, "12780": 650, "12840": 650, "12900": 650, "12960": 650, "13020": 650, "13080": 650, "13140": 650, "13200": 650, "13260": 650, "13320": 650, "13380": 650, "13440": 650, "13500": 650, "13560": 650, "13620": 650, "13680": 650, "13740": 650, "13800": 650, "13860": 650, "13920": 650, "13980": 650, "14040": 650, "14100": 650, "14160": 650, "14220": 650, "14280": 650, "14340": 650, "14400": 650, "14460": 650, "14520": 650, "14580": 650, "14640": 650, "14700": 650, "14760": 650, "14820": 650, "14880": 650, "14940": 650, "15000": [650, 654], "15060": 650, "15120": 650, "15180": 650, "15240": 650, "15300": 650, "15360": 650, "15420": 650, "15480": 650, "15540": 650, "15600": 650, "15660": 650, "15720": 650, "15780": 650, "15840": 650, "15900": 650, "15960": 650, "16020": 650, "16080": 650, "16140": 650, "16200": 650, "16260": 650, "16320": 650, "16380": 650, "16440": 650, "16500": 650, "16560": 650, "16620": 650, "16680": 650, "16740": 650, "16800": 650, "16860": 650, "16920": 650, "16980": 650, "17040": 650, "17100": 650, "17160": 650, "17220": 650, "17280": 650, "17340": 650, "17400": 650, "17460": 650, "17520": 650, "17580": 650, "17640": 650, "17700": 650, "17760": 650, "17820": 650, "17880": 650, "17940": 650, "18000": [650, 654], "18060": 650, "18120": 650, "18180": 650, "18240": 650, "18300": 650, "18360": 650, "18420": 650, "18480": 650, "18540": 650, "18600": 650, "18660": 650, "18720": 650, "18780": 650, "18840": 650, "18900": 650, "18960": 650, "19020": 650, "19080": 650, "19140": 650, "19200": 650, "19260": 650, "19320": 650, "19380": 650, "19440": 650, "19500": 650, "19560": 650, "19620": 650, "19680": 650, "19740": 650, "19800": 650, "19860": 650, "19920": 650, "19980": 650, "20040": 650, "20100": 650, "20160": 650, "20220": 650, "20280": 650, "20340": 650, "20400": 650, "20460": 650, "20520": 650, "20580": 650, "20640": 650, "20700": 650, "20760": 650, "20820": 650, "20880": 650, "20940": 650, "21000": [650, 654], "21060": 650, "21120": 650, "21180": 650, "21240": 650, "21300": 650, "21360": 650, "21420": 650, "21480": 650, "21540": 650, "21600": 650, "21660": 650, "21720": 650, "21780": 650, "21840": 650, "21900": 650, "21960": 650, "22020": 650, "22080": 650, "22140": 650, "22200": 650, "22260": 650, "22320": 650, "22380": 650, "22440": 650, "22500": 650, "22560": 650, "22620": 650, "22680": 650, "22740": 650, "22860": 650, "22920": 650, "22980": 650, "23040": 650, "23100": 650, "23160": 650, "23220": 650, "23280": 650, "23340": 650, "23400": 650, "23460": 650, "23520": 650, "23580": 650, "23640": 650, "23700": 650, "23760": 650, "23820": 650, "23880": 650, "23940": 650, "24000": [650, 654], "24060": 650, "24120": 650, "24180": 650, "24240": 650, "24300": 650, "24360": 650, "24420": 650, "24480": 650, "24540": 650, "24600": 650, "24660": 650, "24720": 650, "24780": 650, "24840": 650, "24900": 650, "24960": 650, "25020": 650, "25080": 650, "25140": 650, "25200": 650, "25260": 650, "25320": 650, "25380": 650, "25440": 650, "25500": 650, "25560": 650, "25620": 650, "25680": 650, "25740": 650, "25800": 650, "25860": 650, "25920": 650, "25980": 650, "26040": 650, "26100": 650, "26160": 650, "26220": 650, "26280": 650, "26340": 650, "26400": 650, "26460": 650, "26520": 650, "26580": 650, "26640": 650, "26700": 650, "26760": 650, "26820": 650, "26880": 650, "26940": 650, "27000": [650, 654], "27120": 650, "27180": 650, "27240": 650, "27300": 650, "27360": 650, "27420": 650, "27480": 650, "27540": 650, "27600": 650, "27660": 650, "27720": 650, "27780": 650, "27840": 650, "27900": 650, "27960": 650, "28020": 650, "28080": 650, "28140": 650, "28200": 650, "28260": 650, "28320": 650, "28380": 650, "28440": 650, "28500": 650, "28560": 650, "28620": 650, "28680": 650, "28740": 650, "28800": 650, "28860": 650, "28920": 650, "28980": 650, "29040": 650, "29100": 650, "29160": 650, "29220": 650, "29280": 650, "29340": 650, "29400": 650, "29460": 650, "29520": 650, "29580": 650, "29640": 650, "29700": 650, "29760": 650, "29820": 650, "29880": 650, "29940": 650, "30000": [650, 654], "30060": 650, "30120": 650, "30180": 650, "30240": 650, "30300": 650, "30360": 650, "30420": 650, "30480": 650, "30540": 650, "30600": 650, "30660": 650, "30720": 650, "30780": 650, "30840": 650, "30900": 650, "30960": 650, "31020": 650, "31080": 650, "31140": 650, "31200": 650, "31260": 650, "31320": 650, "31380": 650, "31440": 650, "31500": 650, "31560": 650, "31620": 650, "31680": 650, "31740": 650, "31800": 650, "31860": 650, "31920": 650, "31980": 650, "32040": 650, "32100": 650, "32160": 650, "32220": 650, "32280": 650, "32340": 650, "32400": 650, "32460": 650, "32520": 650, "32580": 650, "32640": 650, "32700": 650, "32760": 650, "32820": 650, "32880": 650, "32940": 650, "33000": [650, 654], "33060": 650, "33120": 650, "33180": 650, "33240": 650, "33300": 650, "33360": 650, "33420": 650, "33480": 650, "33540": 650, "33600": 650, "33660": 650, "33720": 650, "33780": 650, "33840": 650, "33900": 650, "33960": 650, "34020": 650, "34080": 650, "34140": 650, "34200": 650, "34260": 650, "34320": 650, "34380": 650, "34440": 650, "34500": 650, "34560": 650, "34620": 650, "34680": 650, "34740": 650, "34800": 650, "34860": 650, "34920": 650, "34980": 650, "35040": 650, "35100": 650, "35160": 650, "35220": 650, "35280": 650, "35340": 650, "35400": 650, "35460": 650, "35520": 650, "35580": 650, "35640": 650, "35700": 650, "35760": 650, "35820": 650, "35880": 650, "35940": 650, "36000": [650, 654], "36060": 650, "36120": 650, "36180": 650, "36240": 650, "36300": 650, "36360": 650, "36420": 650, "36480": 650, "36540": 650, "36600": 650, "36660": 650, "36720": 650, "36780": 650, "36840": 650, "36900": 650, "36960": 650, "37020": 650, "37080": 650, "37140": 650, "37200": 650, "37260": 650, "37320": 650, "37380": 650, "37440": 650, "37500": 650, "37560": 650, "37620": 650, "37680": 650, "37740": 650, "37800": 650, "37860": 650, "37920": 650, "37980": 650, "38040": 650, "38100": 650, "38160": 650, "38220": 650, "38280": 650, "38340": 650, "38400": 650, "38460": 650, "38520": 650, "38580": 650, "38640": 650, "38700": 650, "38760": 650, "38820": 650, "38880": 650, "38940": 650, "39000": [650, 654], "39060": 650, "39120": 650, "39180": 650, "39240": 650, "39300": 650, "39360": 650, "39420": 650, "39480": 650, "39540": 650, "39600": 650, "39660": 650, "39720": 650, "39780": 650, "39840": 650, "39900": 650, "39960": 650, "59416776": 650, "59416886": 650, "59489769": 650, "59489879": 650, "5948999": 650, "59415662": 650, "59414657": 650, "5874659": 650, "58745576": 650, "58744563": 650, "59414621": 650, "59412575": 650, "5805231": 650, "58050246": 650, "58048182": 650, "59419881": 650, "59423095": 650, "61560159": 650, "61563401": 650, "61566644": 650, "59418877": 650, "59421087": 650, "6089062": 650, "6089285": 650, "60895079": 650, "59417836": 650, "59419005": 650, "60196382": 650, "60197561": 650, "60198741": 650, "get_metadata": 650, "ref_dict": 650, "reflecitivity_horizont": 650, "21875": 650, "34375": 650, "0078125": 650, "2109375": 650, "1171875": 650, "59375": 650, "421875": 650, "5625": 650, "7109375": 650, "609375": 650, "5078125": 650, "3828125": 650, "6875": 650, "328125": 650, "3203125": 650, "859375": 650, "6484375": 650, "8515625": 650, "9375": [650, 656], "0234375": 650, "6328125": 650, "2890625": 650, "546875": 650, "578125": 650, "6796875": 650, "ref_gt_0": 651, "mask_dict": 651, "reflectivity_mask": 651, "coolwarm": 651, "sherm": [651, 654], "782": [651, 654], "matplotlibdeprecationwarn": [651, 654], "position": [651, 654], "829": [651, 654], "write_cfradi": 651, "new_radar": 651, "2pi": 652, "wave": 652, "3pi": 652, "erron": 652, "phenomena": [652, 656], "maximium": 652, "unambi": 652, "preprocess": 652, "thankfulli": [652, 654], "surround": [652, 654], "presenc": 652, "524973": 652, "elimin": [652, 654], "vleociti": 652, "realist": 652, "characterist": 654, "100000": 654, "gates_to_grid": 654, "99000": 654, "98000": 654, "97000": 654, "96000": 654, "95000": 654, "94000": 654, "93000": 654, "92000": 654, "91000": 654, "90000": 654, "89000": 654, "88000": 654, "87000": 654, "86000": 654, "85000": 654, "84000": 654, "83000": 654, "82000": 654, "81000": 654, "80000": 654, "79000": 654, "78000": 654, "77000": 654, "76000": 654, "75000": 654, "74000": 654, "73000": 654, "72000": 654, "71000": 654, "70000": 654, "69000": 654, "68000": 654, "67000": 654, "66000": 654, "65000": 654, "64000": 654, "63000": 654, "62000": 654, "61000": 654, "59000": 654, "58000": 654, "57000": 654, "56000": 654, "55000": 654, "54000": 654, "53000": 654, "52000": 654, "51000": 654, "49000": 654, "48000": 654, "47000": 654, "46000": 654, "45000": 654, "44000": 654, "43000": 654, "42000": 654, "41000": 654, "38000": 654, "37000": 654, "35000": 654, "34000": 654, "32000": 654, "31000": 654, "29000": 654, "28000": 654, "26000": 654, "23000": 654, "22000": 654, "19000": 654, "16000": 654, "14000": 654, "13000": 654, "8000": 654, "longitudn": 654, "latitudn": 654, "suffer": 654, "artifici": 654, "feather": 654, "grid_bett": 654, "1750": 654, "sgpxsaprcmacsuri5": 655, "20171004": 655, "203018": 655, "total_pow": 655, "xsapr_clutt": 655, "sounding_temperatur": 655, "signal_to_noise_ratio": 655, "unfolded_differential_phas": 655, "corrected_differential_phas": 655, "filtered_corrected_differential_phas": 655, "corrected_specific_diff_phas": 655, "filtered_corrected_specific_diff_phas": 655, "path_integrated_attenu": 655, "specific_differential_attenu": 655, "path_integrated_differential_attenu": 655, "nonhydrometeor": 655, "exclude_equ": 655, "tell": 655, "refl_arrai": 655, "reflectivity_w_mask": 655, "iter_slic": [655, 656], "9344453454202706": 655, "620691732853737": 655, "3756584054113996": 655, "597935968662154": 655, "696735014111216": 655, "061894569912447": 655, "721673265240488": 655, "086695918593689": 655, "33930700509078": 655, "599363169483158": 655, "836875745223637": 655, "051601529570966": 655, "22435547210836": 655, "378109469982695": 655, "553820234067336": 655, "648943841665002": 655, "837593740986444": 655, "049614721040282": 655, "331202567459613": 655, "585432697375357": 655, "87002341270722": 655, "993012637722325": 655, "061966001642219": 655, "122799449619672": 655, "861035552720102": 655, "74608994279257": 655, "148801770281325": 655, "70860719727862": 655, "989513966551444": 655, "188644935344827": 655, "89301878240611": 655, "172644371021923": 655, "79879842243138": 655, "912806090219976": 655, "766281467013889": 655, "920522471877334": 655, "898600907318164": 655, "971026055481874": 655, "110503947133682": 655, "094456418731509": 655, "0822160050675675": 655, "036430544969512": 655, "259332430219459": 655, "2438254054588604": 655, "473482666015625": 655, "574283685503023": 655, "866719139946832": 655, "771468742643597": 655, "beam_azimuth_angl": 656, "azimuth_angle_from_true_north": 656, "radial_azimuth_coordin": 656, "beam_elevation_angl": 656, "elevation_angle_from_horizontal_plan": 656, "radial_elevation_coordin": 656, "1832": 656, "log_differential_reflectivity_hv": 656, "875": 656, "differential_phase_hv": 656, "equivalent_reflectivity_factor": 656, "cross_correlation_ratio_hv": 656, "correlation_ratio": 656, "meters_per_second": 656, "doppler_spectrum_width": 656, "radial_velocity_of_scatterers_away_from_instru": 656, "target_fixed_angl": 656, "degrees_north": 656, "degrees_east": 656, "projection_range_coordin": 656, "range_to_measurement_volum": 656, "radial_range_coordin": 656, "spacing_is_const": 656, "meters_to_center_of_first_g": 656, "2125": 656, "meters_between_g": 656, "250": 656, "s20": 656, "unitless": 656, "coplan": 656, "vertical_point": 656, "idl": 656, "azimuth_surveil": 656, "elevation_surveil": 656, "sunscan": 656, "manual_ppi": 656, "manual_rhi": 656, "17t19": 656, "21z": 656, "time_in_seconds_since_volume_start": 656, "calendar": 656, "gregorian": 656, "katx": 656, "original_contain": 656, "vcp_pattern": 656, "7470703": 656, "7196045": 656, "6893921": 656, "511719": 656, "get_slic": 656, "sweep_1": 656, "52734375": 656, "indici": 656, "slice_indic": 656, "9066728410400056": 656, "478547577741713": 656, "587792083929423": 656, "871031288639269": 656, "971692217963673": 656, "830616390843327": 656, "108188248095756": 656, "483419908190385": 656, "88976917057903": 656, "852766685681688": 656, "410455582269897": 656, "66444787446138": 656, "997862391449566": 656, "172098402018502": 656, "489752513534416": 656, "712565619531706": 656, "commonli": 656, "219": 657, "9x": 658, "10x": 658, "11x": 658, "But": 658, "bash": 658, "pythonpath": 658, "pth": 658, "build_ext": 658, "segfault": 658, "Theres": 658, "proper": 658, "reinstal": 658, "remedi": 658, "fno": 658, "protector": 658, "d_fortify_sourc": 658, "cflag": 658, "makefil": 658, "troubl": 658, "define_macro": 658, "macro": 658, "extra_compile_arg": 658, "m32": 658, "extra_link_arg": 658, "m64": 658, "proj_lib": 658, "plai": 658, "xx": 658, "usernam": 658, "xxx": 658, "mpl_toolkit": 658, "conflict": 661, "exit": 661, "led": 661, "manag": 661, "deactiv": 661, "enviro": 661, "scratch": 661, "spyder": 661, "enhanc": 661, "though": 661, "yourusernam": 661, "youranacondadir": 661, "gitter": 661, "im": 661}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [126, 1, 0, "-", "correct"], [168, 1, 0, "-", "exceptions"], [169, 1, 0, "-", "filters"], [202, 1, 0, "-", "graph"], [359, 1, 0, "-", "io"], [380, 1, 0, "-", "lazydict"], [404, 1, 0, "-", "map"], [415, 1, 0, "-", "retrieve"], [450, 1, 0, "-", "testing"], [552, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_geographic"], [122, 0, 1, "", "cartesian_to_geographic_aeqd"], [123, 0, 1, "", "cartesian_vectors_to_geographic"], [124, 0, 1, "", "geographic_to_cartesian"], [125, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[127, 2, 1, "", "GateFilter"], [155, 0, 1, "", "calculate_attenuation"], [156, 0, 1, "", "calculate_attenuation_philinear"], [157, 0, 1, "", "calculate_attenuation_zphi"], [158, 0, 1, "", "correct_bias"], [159, 0, 1, "", "correct_noise_rhohv"], [160, 0, 1, "", "dealias_fourdd"], [161, 0, 1, "", "dealias_region_based"], [162, 0, 1, "", "dealias_unwrap_phase"], [163, 0, 1, "", "despeckle_field"], [164, 0, 1, "", "find_objects"], [165, 0, 1, "", "moment_based_gate_filter"], [166, 0, 1, "", "phase_proc_lp"], [167, 0, 1, "", "phase_proc_lp_gf"]], "pyart.correct.GateFilter": [[128, 3, 1, "", "copy"], [129, 3, 1, "", "exclude_above"], [130, 3, 1, "", "exclude_all"], [131, 3, 1, "", "exclude_below"], [132, 3, 1, "", "exclude_equal"], [133, 3, 1, "", "exclude_gates"], [134, 3, 1, "", "exclude_inside"], [135, 3, 1, "", "exclude_invalid"], [136, 3, 1, "", "exclude_masked"], [137, 3, 1, "", "exclude_none"], [138, 3, 1, "", "exclude_not_equal"], [139, 3, 1, "", "exclude_outside"], [140, 3, 1, "", "exclude_transition"], [141, 4, 1, "", "gate_excluded"], [142, 4, 1, "", "gate_included"], [143, 3, 1, "", "include_above"], [144, 3, 1, "", "include_all"], [145, 3, 1, "", "include_below"], [146, 3, 1, "", "include_equal"], [147, 3, 1, "", "include_gates"], [148, 3, 1, "", "include_inside"], [149, 3, 1, "", "include_none"], [150, 3, 1, "", "include_not_equal"], [151, 3, 1, "", "include_not_masked"], [152, 3, 1, "", "include_not_transition"], [153, 3, 1, "", "include_outside"], [154, 3, 1, "", "include_valid"]], "pyart.filters": [[170, 2, 1, "", "GateFilter"], [198, 0, 1, "", "iso0_based_gate_filter"], [199, 0, 1, "", "moment_and_texture_based_gate_filter"], [200, 0, 1, "", "moment_based_gate_filter"], [201, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[171, 3, 1, "", "copy"], [172, 3, 1, "", "exclude_above"], [173, 3, 1, "", "exclude_all"], [174, 3, 1, "", "exclude_below"], [175, 3, 1, "", "exclude_equal"], [176, 3, 1, "", "exclude_gates"], [177, 3, 1, "", "exclude_inside"], [178, 3, 1, "", "exclude_invalid"], [179, 3, 1, "", "exclude_masked"], [180, 3, 1, "", "exclude_none"], [181, 3, 1, "", "exclude_not_equal"], [182, 3, 1, "", "exclude_outside"], [183, 3, 1, "", "exclude_transition"], [184, 4, 1, "", "gate_excluded"], [185, 4, 1, "", "gate_included"], [186, 3, 1, "", "include_above"], [187, 3, 1, "", "include_all"], [188, 3, 1, "", "include_below"], [189, 3, 1, "", "include_equal"], [190, 3, 1, "", "include_gates"], [191, 3, 1, "", "include_inside"], [192, 3, 1, "", "include_none"], [193, 3, 1, "", "include_not_equal"], [194, 3, 1, "", "include_not_masked"], [195, 3, 1, "", "include_not_transition"], [196, 3, 1, "", "include_outside"], [197, 3, 1, "", "include_valid"]], "pyart.graph": [[203, 2, 1, "", "AirborneRadarDisplay"], [233, 2, 1, "", "GridMapDisplay"], [249, 2, 1, "", "GridMapDisplayBasemap"], [263, 2, 1, "", "RadarDisplay"], [292, 2, 1, "", "RadarMapDisplay"], [325, 2, 1, "", "RadarMapDisplayBasemap"], [358, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[204, 3, 1, "", "generate_az_rhi_title"], [205, 3, 1, "", "generate_filename"], [206, 3, 1, "", "generate_ray_title"], [207, 3, 1, "", "generate_title"], [208, 3, 1, "", "generate_vpt_title"], [209, 3, 1, "", "label_xaxis_r"], [210, 3, 1, "", "label_xaxis_rays"], [211, 3, 1, "", "label_xaxis_time"], [212, 3, 1, "", "label_xaxis_x"], [213, 3, 1, "", "label_yaxis_field"], [214, 3, 1, "", "label_yaxis_y"], [215, 3, 1, "", "label_yaxis_z"], [216, 3, 1, "", "plot"], [217, 3, 1, "", "plot_azimuth_to_rhi"], [218, 3, 1, "", "plot_colorbar"], [219, 3, 1, "", "plot_cr_raster"], [220, 3, 1, "", "plot_cross_hair"], [221, 3, 1, "", "plot_grid_lines"], [222, 3, 1, "", "plot_label"], [223, 3, 1, "", "plot_labels"], [224, 3, 1, "", "plot_ppi"], [225, 3, 1, "", "plot_range_ring"], [226, 3, 1, "", "plot_range_rings"], [227, 3, 1, "", "plot_ray"], [228, 3, 1, "", "plot_rhi"], [229, 3, 1, "", "plot_sweep_grid"], [230, 3, 1, "", "plot_vpt"], [231, 3, 1, "", "set_aspect_ratio"], [232, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[234, 3, 1, "", "cartopy_coastlines"], [235, 3, 1, "", "cartopy_political_boundaries"], [236, 3, 1, "", "cartopy_states"], [237, 3, 1, "", "generate_filename"], [238, 3, 1, "", "generate_grid_title"], [239, 3, 1, "", "generate_latitudinal_level_title"], [240, 3, 1, "", "generate_longitudinal_level_title"], [241, 3, 1, "", "plot_colorbar"], [242, 3, 1, "", "plot_cross_section"], [243, 3, 1, "", "plot_crosshairs"], [244, 3, 1, "", "plot_grid"], [245, 3, 1, "", "plot_latitude_slice"], [246, 3, 1, "", "plot_latitudinal_level"], [247, 3, 1, "", "plot_longitude_slice"], [248, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[250, 3, 1, "", "generate_filename"], [251, 3, 1, "", "generate_grid_title"], [252, 3, 1, "", "generate_latitudinal_level_title"], [253, 3, 1, "", "generate_longitudinal_level_title"], [254, 3, 1, "", "get_basemap"], [255, 3, 1, "", "plot_basemap"], [256, 3, 1, "", "plot_colorbar"], [257, 3, 1, "", "plot_crosshairs"], [258, 3, 1, "", "plot_grid"], [259, 3, 1, "", "plot_latitude_slice"], [260, 3, 1, "", "plot_latitudinal_level"], [261, 3, 1, "", "plot_longitude_slice"], [262, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[264, 3, 1, "", "generate_az_rhi_title"], [265, 3, 1, "", "generate_filename"], [266, 3, 1, "", "generate_ray_title"], [267, 3, 1, "", "generate_title"], [268, 3, 1, "", "generate_vpt_title"], [269, 3, 1, "", "label_xaxis_r"], [270, 3, 1, "", "label_xaxis_rays"], [271, 3, 1, "", "label_xaxis_time"], [272, 3, 1, "", "label_xaxis_x"], [273, 3, 1, "", "label_yaxis_field"], [274, 3, 1, "", "label_yaxis_y"], [275, 3, 1, "", "label_yaxis_z"], [276, 3, 1, "", "plot"], [277, 3, 1, "", "plot_azimuth_to_rhi"], [278, 3, 1, "", "plot_colorbar"], [279, 3, 1, "", "plot_cr_raster"], [280, 3, 1, "", "plot_cross_hair"], [281, 3, 1, "", "plot_grid_lines"], [282, 3, 1, "", "plot_label"], [283, 3, 1, "", "plot_labels"], [284, 3, 1, "", "plot_ppi"], [285, 3, 1, "", "plot_range_ring"], [286, 3, 1, "", "plot_range_rings"], [287, 3, 1, "", "plot_ray"], [288, 3, 1, "", "plot_rhi"], [289, 3, 1, "", "plot_vpt"], [290, 3, 1, "", "set_aspect_ratio"], [291, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[293, 3, 1, "", "generate_az_rhi_title"], [294, 3, 1, "", "generate_filename"], [295, 3, 1, "", "generate_ray_title"], [296, 3, 1, "", "generate_title"], [297, 3, 1, "", "generate_vpt_title"], [298, 3, 1, "", "label_xaxis_r"], [299, 3, 1, "", "label_xaxis_rays"], [300, 3, 1, "", "label_xaxis_time"], [301, 3, 1, "", "label_xaxis_x"], [302, 3, 1, "", "label_yaxis_field"], [303, 3, 1, "", "label_yaxis_y"], [304, 3, 1, "", "label_yaxis_z"], [305, 3, 1, "", "plot"], [306, 3, 1, "", "plot_azimuth_to_rhi"], [307, 3, 1, "", "plot_colorbar"], [308, 3, 1, "", "plot_cr_raster"], [309, 3, 1, "", "plot_cross_hair"], [310, 3, 1, "", "plot_grid_lines"], [311, 3, 1, "", "plot_label"], [312, 3, 1, "", "plot_labels"], [313, 3, 1, "", "plot_line_geo"], [314, 3, 1, "", "plot_line_xy"], [315, 3, 1, "", "plot_point"], [316, 3, 1, "", "plot_ppi"], [317, 3, 1, "", "plot_ppi_map"], [318, 3, 1, "", "plot_range_ring"], [319, 3, 1, "", "plot_range_rings"], [320, 3, 1, "", "plot_ray"], [321, 3, 1, "", "plot_rhi"], [322, 3, 1, "", "plot_vpt"], [323, 3, 1, "", "set_aspect_ratio"], [324, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[326, 3, 1, "", "generate_az_rhi_title"], [327, 3, 1, "", "generate_filename"], [328, 3, 1, "", "generate_ray_title"], [329, 3, 1, "", "generate_title"], [330, 3, 1, "", "generate_vpt_title"], [331, 3, 1, "", "label_xaxis_r"], [332, 3, 1, "", "label_xaxis_rays"], [333, 3, 1, "", "label_xaxis_time"], [334, 3, 1, "", "label_xaxis_x"], [335, 3, 1, "", "label_yaxis_field"], [336, 3, 1, "", "label_yaxis_y"], [337, 3, 1, "", "label_yaxis_z"], [338, 3, 1, "", "plot"], [339, 3, 1, "", "plot_azimuth_to_rhi"], [340, 3, 1, "", "plot_colorbar"], [341, 3, 1, "", "plot_cr_raster"], [342, 3, 1, "", "plot_cross_hair"], [343, 3, 1, "", "plot_grid_lines"], [344, 3, 1, "", "plot_label"], [345, 3, 1, "", "plot_labels"], [346, 3, 1, "", "plot_line_geo"], [347, 3, 1, "", "plot_line_xy"], [348, 3, 1, "", "plot_point"], [349, 3, 1, "", "plot_ppi"], [350, 3, 1, "", "plot_ppi_map"], [351, 3, 1, "", "plot_range_ring"], [352, 3, 1, "", "plot_range_rings"], [353, 3, 1, "", "plot_ray"], [354, 3, 1, "", "plot_rhi"], [355, 3, 1, "", "plot_vpt"], [356, 3, 1, "", "set_aspect_ratio"], [357, 3, 1, "", "set_limits"]], "pyart.io": [[360, 0, 1, "", "prepare_for_read"], [361, 0, 1, "", "read"], [362, 0, 1, "", "read_arm_sonde"], [363, 0, 1, "", "read_arm_sonde_vap"], [364, 0, 1, "", "read_cfradial"], [365, 0, 1, "", "read_chl"], [366, 0, 1, "", "read_grid"], [367, 0, 1, "", "read_grid_mdv"], [368, 0, 1, "", "read_mdv"], [369, 0, 1, "", "read_nexrad_archive"], [370, 0, 1, "", "read_nexrad_cdm"], [371, 0, 1, "", "read_nexrad_level3"], [372, 0, 1, "", "read_rsl"], [373, 0, 1, "", "read_sigmet"], [374, 0, 1, "", "read_uf"], [375, 0, 1, "", "write_cfradial"], [376, 0, 1, "", "write_grid"], [377, 0, 1, "", "write_grid_geotiff"], [378, 0, 1, "", "write_grid_mdv"], [379, 0, 1, "", "write_uf"]], "pyart.lazydict": [[381, 2, 1, "", "LazyLoadDict"], [394, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[382, 3, 1, "", "clear"], [383, 3, 1, "", "copy"], [384, 3, 1, "", "get"], [385, 3, 1, "", "has_key"], [386, 3, 1, "", "items"], [387, 3, 1, "", "keys"], [388, 3, 1, "", "pop"], [389, 3, 1, "", "popitem"], [390, 3, 1, "", "set_lazy"], [391, 3, 1, "", "setdefault"], [392, 3, 1, "", "update"], [393, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[395, 3, 1, "", "clear"], [396, 3, 1, "", "get"], [397, 3, 1, "", "items"], [398, 3, 1, "", "keys"], [399, 3, 1, "", "pop"], [400, 3, 1, "", "popitem"], [401, 3, 1, "", "setdefault"], [402, 3, 1, "", "update"], [403, 3, 1, "", "values"]], "pyart.map": [[405, 2, 1, "", "GateMapper"], [409, 0, 1, "", "example_roi_func_constant"], [410, 0, 1, "", "example_roi_func_dist"], [411, 0, 1, "", "example_roi_func_dist_beam"], [412, 0, 1, "", "grid_from_radars"], [413, 0, 1, "", "map_gates_to_grid"], [414, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[406, 4, 1, "", "distance_tolerance"], [407, 3, 1, "", "mapped_radar"], [408, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[416, 0, 1, "", "ZtoR"], [417, 0, 1, "", "calculate_snr_from_reflectivity"], [418, 0, 1, "", "calculate_velocity_texture"], [419, 0, 1, "", "composite_reflectivity"], [420, 0, 1, "", "compute_cdr"], [421, 0, 1, "", "compute_l"], [422, 0, 1, "", "compute_noisedBZ"], [423, 0, 1, "", "compute_snr"], [424, 0, 1, "", "conv_strat_raut"], [425, 0, 1, "", "conv_strat_yuter"], [426, 0, 1, "", "dealias_spectra"], [427, 0, 1, "", "est_rain_rate_a"], [428, 0, 1, "", "est_rain_rate_hydro"], [429, 0, 1, "", "est_rain_rate_kdp"], [430, 0, 1, "", "est_rain_rate_z"], [431, 0, 1, "", "est_rain_rate_za"], [432, 0, 1, "", "est_rain_rate_zkdp"], [433, 0, 1, "", "est_rain_rate_zpoly"], [434, 0, 1, "", "feature_detection"], [435, 0, 1, "", "fetch_radar_time_profile"], [436, 0, 1, "", "get_freq_band"], [437, 0, 1, "", "grid_displacement_pc"], [438, 0, 1, "", "grid_shift"], [439, 0, 1, "", "hydroclass_semisupervised"], [440, 0, 1, "", "kdp_maesaka"], [441, 0, 1, "", "kdp_schneebeli"], [442, 0, 1, "", "kdp_vulpiani"], [443, 0, 1, "", "map_profile_to_gates"], [444, 0, 1, "", "quasi_vertical_profile"], [445, 0, 1, "", "spectra_moments"], [446, 0, 1, "", "steiner_conv_strat"], [447, 0, 1, "", "texture_of_complex_phase"], [448, 0, 1, "", "vad_browning"], [449, 0, 1, "", "vad_michelson"]], "pyart.testing": [[451, 2, 1, "", "Grid"], [461, 2, 1, "", "InTemporaryDirectory"], [463, 2, 1, "", "Radar"], [492, 2, 1, "", "RadarSpectra"], [537, 0, 1, "", "get_metadata"], [538, 0, 1, "", "get_test_data"], [539, 0, 1, "", "make_empty_grid"], [540, 0, 1, "", "make_empty_ppi_radar"], [541, 0, 1, "", "make_empty_rhi_radar"], [542, 0, 1, "", "make_empty_spectra_radar"], [543, 0, 1, "", "make_gaussian_storm_grid"], [544, 0, 1, "", "make_normal_storm"], [545, 0, 1, "", "make_single_ray_radar"], [546, 0, 1, "", "make_storm_grid"], [547, 0, 1, "", "make_target_grid"], [548, 0, 1, "", "make_target_radar"], [549, 0, 1, "", "make_target_spectra_radar"], [550, 0, 1, "", "make_velocity_aliased_radar"], [551, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[452, 3, 1, "", "add_field"], [453, 3, 1, "", "get_point_longitude_latitude"], [454, 3, 1, "", "get_projparams"], [455, 3, 1, "", "init_point_altitude"], [456, 3, 1, "", "init_point_longitude_latitude"], [457, 3, 1, "", "init_point_x_y_z"], [458, 4, 1, "", "projection_proj"], [459, 3, 1, "", "to_xarray"], [460, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[462, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[464, 3, 1, "", "add_field"], [465, 3, 1, "", "add_field_like"], [466, 3, 1, "", "add_filter"], [467, 3, 1, "", "check_field_exists"], [468, 3, 1, "", "extract_sweeps"], [469, 3, 1, "", "get_azimuth"], [470, 3, 1, "", "get_elevation"], [471, 3, 1, "", "get_end"], [472, 3, 1, "", "get_field"], [473, 3, 1, "", "get_gate_area"], [474, 3, 1, "", "get_gate_lat_lon_alt"], [475, 3, 1, "", "get_gate_x_y_z"], [476, 3, 1, "", "get_nyquist_vel"], [477, 3, 1, "", "get_slice"], [478, 3, 1, "", "get_start"], [479, 3, 1, "", "get_start_end"], [480, 3, 1, "", "info"], [481, 3, 1, "", "init_gate_altitude"], [482, 3, 1, "", "init_gate_longitude_latitude"], [483, 3, 1, "", "init_gate_x_y_z"], [484, 3, 1, "", "init_rays_per_sweep"], [485, 3, 1, "", "iter_azimuth"], [486, 3, 1, "", "iter_elevation"], [487, 3, 1, "", "iter_end"], [488, 3, 1, "", "iter_field"], [489, 3, 1, "", "iter_slice"], [490, 3, 1, "", "iter_start"], [491, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[493, 4, 1, "", "altitude"], [494, 4, 1, "", "azimuth"], [495, 3, 1, "", "check_field_exists"], [496, 4, 1, "", "elevation"], [497, 4, 1, "", "fields"], [498, 4, 1, "", "fixed_angle"], [499, 4, 1, "", "gate_altitude"], [500, 4, 1, "", "gate_latitude"], [501, 4, 1, "", "gate_longitude"], [502, 4, 1, "", "gate_x"], [503, 4, 1, "", "gate_y"], [504, 4, 1, "", "gate_z"], [505, 3, 1, "", "get_end"], [506, 3, 1, "", "get_slice"], [507, 3, 1, "", "get_start"], [508, 3, 1, "", "get_start_end"], [509, 3, 1, "", "init_gate_altitude"], [510, 3, 1, "", "init_gate_longitude_latitude"], [511, 3, 1, "", "init_gate_x_y_z"], [512, 3, 1, "", "init_rays_per_sweep"], [513, 3, 1, "", "iter_azimuth"], [514, 3, 1, "", "iter_elevation"], [515, 3, 1, "", "iter_end"], [516, 3, 1, "", "iter_field"], [517, 3, 1, "", "iter_slice"], [518, 3, 1, "", "iter_start"], [519, 3, 1, "", "iter_start_end"], [520, 4, 1, "", "latitude"], [521, 4, 1, "", "longitude"], [522, 4, 1, "", "ngates"], [523, 4, 1, "", "npulses_max"], [524, 4, 1, "", "nrays"], [525, 4, 1, "", "nsweeps"], [526, 4, 1, "", "projection"], [527, 4, 1, "", "range"], [528, 4, 1, "", "rays_per_sweep"], [529, 4, 1, "", "scan_type"], [530, 4, 1, "", "sweep_end_ray_index"], [531, 4, 1, "", "sweep_mode"], [532, 4, 1, "", "sweep_number"], [533, 4, 1, "", "sweep_start_ray_index"], [534, 4, 1, "", "time"], [535, 3, 1, "", "to_vpt"], [536, 4, 1, "", "velocity_bins"]], "pyart.util": [[553, 0, 1, "", "angular_mean"], [554, 0, 1, "", "angular_mean_deg"], [555, 0, 1, "", "angular_std"], [556, 0, 1, "", "angular_std_deg"], [557, 0, 1, "", "angular_texture_2d"], [558, 0, 1, "", "column_vertical_profile"], [559, 0, 1, "", "cross_section_ppi"], [560, 0, 1, "", "cross_section_rhi"], [561, 0, 1, "", "datetime_from_dataset"], [562, 0, 1, "", "datetime_from_grid"], [563, 0, 1, "", "datetime_from_radar"], [564, 0, 1, "", "datetimes_from_dataset"], [565, 0, 1, "", "datetimes_from_radar"], [566, 0, 1, "", "determine_sweeps"], [567, 0, 1, "", "estimate_noise_hs74"], [568, 0, 1, "", "for_azimuth"], [569, 0, 1, "", "get_column_rays"], [570, 0, 1, "", "get_field_location"], [571, 0, 1, "", "image_mute_radar"], [572, 0, 1, "", "interval_mean"], [573, 0, 1, "", "interval_std"], [574, 0, 1, "", "is_vpt"], [575, 0, 1, "", "join_radar"], [576, 0, 1, "", "mean_of_two_angles"], [577, 0, 1, "", "mean_of_two_angles_deg"], [578, 0, 1, "", "rolling_window"], [579, 0, 1, "", "simulated_vel_from_profile"], [580, 0, 1, "", "sphere_distance"], [581, 0, 1, "", "subset_radar"], [582, 0, 1, "", "texture"], [583, 0, 1, "", "texture_along_ray"], [584, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 588, 590, 591, 595], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 447], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 537], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 611, 612, 613, 617, 645, 654], "add_field": [32, 46, 452, 464], "get_point_longitude_latitud": [33, 453], "get_projparam": [34, 454], "init_point_altitud": [35, 455], "init_point_longitude_latitud": [36, 456], "init_point_x_y_z": [37, 457], "projection_proj": [38, 458], "to_xarrai": [39, 459], "write": [40, 460], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 589, 590, 596, 598, 610, 612, 613, 635, 648, 651, 656, 659], "add_field_lik": [47, 465], "add_filt": [48, 466], "check_field_exist": [49, 77, 467, 495], "extract_sweep": [50, 468], "get_azimuth": [51, 469], "get_elev": [52, 470], "get_end": [53, 87, 471, 505], "get_field": [54, 472], "get_gate_area": [55, 473], "get_gate_lat_lon_alt": [56, 474], "get_gate_x_y_z": [57, 475], "get_nyquist_vel": [58, 476], "get_slic": [59, 88, 477, 506], "get_start": [60, 89, 478, 507], "get_start_end": [61, 90, 479, 508], "info": [62, 480], "init_gate_altitud": [63, 91, 481, 509], "init_gate_longitude_latitud": [64, 92, 482, 510], "init_gate_x_y_z": [65, 93, 483, 511], "init_rays_per_sweep": [66, 94, 484, 512], "iter_azimuth": [67, 95, 485, 513], "iter_elev": [68, 96, 486, 514], "iter_end": [69, 97, 487, 515], "iter_field": [70, 98, 488, 516], "iter_slic": [71, 99, 489, 517], "iter_start": [72, 100, 490, 518], "iter_start_end": [73, 101, 491, 519], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "altitud": [75, 493], "azimuth": [76, 494], "elev": [78, 496], "field": [79, 497, 651], "fixed_angl": [80, 498], "gate_altitud": [81, 499], "gate_latitud": [82, 500], "gate_longitud": [83, 501], "gate_x": [84, 502], "gate_i": [85, 503], "gate_z": [86, 504], "latitud": [102, 520, 607], "longitud": [103, 521, 607], "ngate": [104, 522], "npulses_max": [105, 523], "nrai": [106, 524], "nsweep": [107, 525], "project": [108, 526], "rang": [109, 527], "rays_per_sweep": [110, 528], "scan_typ": [111, 529], "sweep_end_ray_index": [112, 530], "sweep_mod": [113, 531], "sweep_numb": [114, 532], "sweep_start_ray_index": [115, 533], "time": [116, 534, 590, 603, 608, 614, 633, 641, 642, 647, 657], "to_vpt": [117, 535, 584], "velocity_bin": [118, 536], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_geograph": 121, "cartesian_to_geographic_aeqd": 122, "cartesian_vectors_to_geograph": 123, "geographic_to_cartesian": 124, "geographic_to_cartesian_aeqd": 125, "correct": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 600, 601, 604], "gatefilt": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 655], "copi": [128, 171, 383], "exclude_abov": [129, 172], "exclude_al": [130, 173], "exclude_below": [131, 174], "exclude_equ": [132, 175], "exclude_g": [133, 176], "exclude_insid": [134, 177], "exclude_invalid": [135, 178], "exclude_mask": [136, 179], "exclude_non": [137, 180], "exclude_not_equ": [138, 181], "exclude_outsid": [139, 182], "exclude_transit": [140, 183], "gate_exclud": [141, 184], "gate_includ": [142, 185], "include_abov": [143, 186], "include_al": [144, 187], "include_below": [145, 188], "include_equ": [146, 189], "include_g": [147, 190], "include_insid": [148, 191], "include_non": [149, 192], "include_not_equ": [150, 193], "include_not_mask": [151, 194], "include_not_transit": [152, 195], "include_outsid": [153, 196], "include_valid": [154, 197], "calculate_attenu": 155, "calculate_attenuation_philinear": 156, "calculate_attenuation_zphi": 157, "correct_bia": 158, "correct_noise_rhohv": 159, "dealias_fourdd": 160, "dealias_region_bas": 161, "dealias_unwrap_phas": 162, "despeckle_field": 163, "find_object": 164, "moment_based_gate_filt": [165, 200], "phase_proc_lp": 166, "phase_proc_lp_gf": 167, "except": 168, "filter": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "iso0_based_gate_filt": 198, "moment_and_texture_based_gate_filt": 199, "temp_based_gate_filt": 201, "graph": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "airborneradardisplai": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "generate_az_rhi_titl": [204, 264, 293, 326], "generate_filenam": [205, 237, 250, 265, 294, 327], "generate_ray_titl": [206, 266, 295, 328], "generate_titl": [207, 267, 296, 329], "generate_vpt_titl": [208, 268, 297, 330], "label_xaxis_r": [209, 269, 298, 331], "label_xaxis_rai": [210, 270, 299, 332], "label_xaxis_tim": [211, 271, 300, 333], "label_xaxis_x": [212, 272, 301, 334], "label_yaxis_field": [213, 273, 302, 335], "label_yaxis_i": [214, 274, 303, 336], "label_yaxis_z": [215, 275, 304, 337], "plot": [216, 276, 305, 338, 589, 590, 591, 593, 604, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 636, 639, 640, 646], "plot_azimuth_to_rhi": [217, 277, 306, 339], "plot_colorbar": [218, 241, 256, 278, 307, 340], "plot_cr_rast": [219, 279, 308, 341], "plot_cross_hair": [220, 280, 309, 342], "plot_grid_lin": [221, 281, 310, 343], "plot_label": [222, 223, 282, 283, 311, 312, 344, 345], "plot_ppi": [224, 284, 316, 349], "plot_range_r": [225, 226, 285, 286, 318, 319, 351, 352], "plot_rai": [227, 287, 320, 353], "plot_rhi": [228, 288, 321, 354], "plot_sweep_grid": 229, "plot_vpt": [230, 289, 322, 355], "set_aspect_ratio": [231, 290, 323, 356], "set_limit": [232, 291, 324, 357], "gridmapdisplai": [233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 631], "cartopy_coastlin": 234, "cartopy_political_boundari": 235, "cartopy_st": 236, "generate_grid_titl": [238, 251], "generate_latitudinal_level_titl": [239, 252], "generate_longitudinal_level_titl": [240, 253], "plot_cross_sect": 242, "plot_crosshair": [243, 257], "plot_grid": [244, 258], "plot_latitude_slic": [245, 259], "plot_latitudinal_level": [246, 260], "plot_longitude_slic": [247, 261], "plot_longitudinal_level": [248, 262], "gridmapdisplaybasemap": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "get_basemap": 254, "plot_basemap": 255, "radardisplai": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "radarmapdisplai": [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 591], "plot_line_geo": [313, 346], "plot_line_xi": [314, 347], "plot_point": [315, 348], "plot_ppi_map": [317, 350, 591], "radarmapdisplaybasemap": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "plot_convstrat_schem": 358, "io": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379], "prepare_for_read": 360, "read": [361, 589, 590, 591, 606, 607], "read_arm_sond": 362, "read_arm_sonde_vap": 363, "read_cfradi": 364, "read_chl": 365, "read_grid": 366, "read_grid_mdv": 367, "read_mdv": 368, "read_nexrad_arch": 369, "read_nexrad_cdm": 370, "read_nexrad_level3": 371, "read_rsl": 372, "read_sigmet": 373, "read_uf": 374, "write_cfradi": 375, "write_grid": 376, "write_grid_geotiff": 377, "write_grid_mdv": 378, "write_uf": 379, "lazydict": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "lazyloaddict": [381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "clear": [382, 395], "get": [384, 396, 648], "has_kei": 385, "item": [386, 397], "kei": [387, 398, 590], "pop": [388, 399], "popitem": [389, 400], "set_lazi": 390, "setdefault": [391, 401], "updat": [392, 402, 598], "valu": [393, 403], "mutablemap": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "map": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 604, 609, 611, 612, 613, 624, 654], "gatemapp": [405, 406, 407, 408, 610], "distance_toler": 406, "mapped_radar": 407, "time_toler": 408, "example_roi_func_const": 409, "example_roi_func_dist": 410, "example_roi_func_dist_beam": 411, "grid_from_radar": 412, "map_gates_to_grid": 413, "map_to_grid": 414, "retriev": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 604, 634], "ztor": 416, "calculate_snr_from_reflect": 417, "calculate_velocity_textur": 418, "composite_reflect": 419, "compute_cdr": 420, "compute_l": 421, "compute_noisedbz": 422, "compute_snr": 423, "conv_strat_raut": 424, "conv_strat_yut": 425, "dealias_spectra": 426, "est_rain_rate_a": 427, "est_rain_rate_hydro": 428, "est_rain_rate_kdp": 429, "est_rain_rate_z": 430, "est_rain_rate_za": 431, "est_rain_rate_zkdp": 432, "est_rain_rate_zpoli": 433, "feature_detect": 434, "fetch_radar_time_profil": 435, "get_freq_band": 436, "grid_displacement_pc": 437, "grid_shift": 438, "hydroclass_semisupervis": 439, "kdp_maesaka": 440, "kdp_schneeb": 441, "kdp_vulpiani": 442, "map_profile_to_g": 443, "quasi_vertical_profil": 444, "spectra_mo": 445, "paramet": [445, 591], "steiner_conv_strat": 446, "vad_brown": 448, "vad_michelson": 449, "test": [450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 596, 659], "intemporarydirectori": [461, 462], "cleanup": 462, "get_test_data": 538, "make_empty_grid": 539, "make_empty_ppi_radar": 540, "make_empty_rhi_radar": 541, "make_empty_spectra_radar": 542, "make_gaussian_storm_grid": 543, "make_normal_storm": 544, "make_single_ray_radar": 545, "make_storm_grid": 546, "make_target_grid": 547, "make_target_radar": 548, "make_target_spectra_radar": 549, "make_velocity_aliased_radar": 550, "make_velocity_aliased_rhi_radar": 551, "util": [552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584], "angular_mean": 553, "angular_mean_deg": 554, "angular_std": 555, "angular_std_deg": 556, "angular_texture_2d": 557, "column_vertical_profil": 558, "cross_section_ppi": 559, "cross_section_rhi": 560, "datetime_from_dataset": 561, "datetime_from_grid": 562, "datetime_from_radar": 563, "datetimes_from_dataset": 564, "datetimes_from_radar": 565, "determine_sweep": 566, "estimate_noise_hs74": 567, "for_azimuth": 568, "assumpt": [568, 580], "get_column_rai": 569, "get_field_loc": 570, "image_mute_radar": 571, "interval_mean": 572, "interval_std": 573, "is_vpt": 574, "join_radar": 575, "mean_of_two_angl": 576, "mean_of_two_angles_deg": 577, "rolling_window": 578, "simulated_vel_from_profil": 579, "sphere_dist": 580, "subset_radar": 581, "textur": 582, "texture_along_rai": 583, "api": 585, "refer": [585, 637, 638], "manual": 585, "blog": [586, 594], "blend": 587, "observ": 587, "from": [587, 589, 606, 617, 620, 622, 623, 625, 626, 627, 628, 629, 632, 658], "tracer": 587, "us": [587, 589, 590, 591, 602, 610, 611, 631, 644, 645, 646], "py": [587, 588, 589, 595, 596, 597, 598, 644, 645, 646, 648, 655, 656, 658, 659], "art": [587, 588, 589, 595, 596, 597, 598, 644, 645, 646, 648, 655, 656, 658, 659], "import": [587, 589, 590, 591, 593, 596, 659], "goe": 587, "data": [587, 589, 590, 591, 593, 606, 607, 645, 654, 655], "access": [587, 589, 591, 593], "csapr": 587, "load": [587, 590], "lma": 587, "flash": 587, "june": 587, "17th": 587, "case": 587, "17": 587, "rhi": [587, 625, 626, 627, 628, 629, 630], "activ": 588, "develop": [588, 599], "submit": 588, "pull": 588, "request": 588, "pr": [588, 595], "first": 588, "you": 588, "have": 588, "done": 588, "so": 588, "alreadi": 588, "need": 588, "fork": 588, "github": [588, 596, 598, 659], "repositori": 588, "second": 588, "termin": 588, "clone": 588, "your": [588, 616, 618], "remot": 588, "git": [588, 598], "command": 588, "third": 588, "creat": [588, 589, 590, 598, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 650, 661], "doc": [588, 592], "conda": [588, 598], "environ": [588, 661], "fourth": 588, "we": 588, "instal": [588, 596, 648, 658, 659], "trmm": 588, "rsl": 588, "librari": 588, "lastli": 588, "python": [588, 596, 648, 659], "script": 588, "within": 588, "okai": 588, "should": 588, "now": 588, "readi": 588, "make": [588, 598], "chang": 588, "sourc": [588, 658], "code": [588, 596, 659], "1": [588, 595, 638], "new": [588, 592], "branch": 588, "our": [588, 590, 591, 593], "2": [588, 595, 606, 607, 638], "push": 588, "To": 588, "let": 588, "commit": 588, "after": 588, "thi": [588, 595], "i": [588, 648], "what": [588, 648], "look": 588, "like": 588, "hope": 588, "help": [588, 648], "hail": 589, "storm": 589, "visual": [589, 590, 593], "panda": 589, "motiv": [589, 593, 594], "nexrad": [589, 591, 593, 606, 607, 620, 621], "fsspec": 589, "setup": [589, 593, 596, 597, 659], "filesystem": 589, "bucket": 589, "file": [589, 596, 620, 622, 623, 625, 626, 627, 628, 629, 650, 651, 659], "dataset": 589, "nexradaw": 589, "configur": 589, "search": 589, "download": [589, 593], "spc": 589, "report": 589, "function": [589, 593], "loop": 589, "through": 589, "helper": 589, "scale": 589, "bar": 589, "an": [589, 619, 627, 628, 661], "anim": 589, "imag": [589, 593, 619], "view": [589, 590], "final": [589, 590], "conclus": [589, 591, 593, 594], "work": [590, 637, 638], "vertic": 590, "point": [590, 635], "xarrai": 590, "hvplot": 590, "overview": 590, "ka": 590, "band": 590, "arm": [590, 596, 648, 659], "zenith": 590, "kazr": 590, "instrument": 590, "clean": 590, "up": [590, 591, 661], "bit": 590, "analysi": 590, "subset": 590, "reflect": [590, 601, 619, 621, 627, 628, 636], "veloc": [590, 602, 644, 652], "quick": 590, "extract": [590, 635], "date": [590, 593], "inform": [590, 661], "label": 590, "holoview": 590, "try": [590, 591], "raster": 590, "takeawai": 590, "fix": [591, 595, 607], "weird": 591, "pattern": 591, "when": 591, "level": [591, 606, 607], "3": [591, 595, 606, 631], "The": [591, 593, 594, 596, 648, 656, 659], "recreat": 591, "issu": [591, 607], "set": [591, 661], "matplotlib": 591, "style": [591, 596, 659], "without": 591, "alpha": 591, "add": [591, 593], "argument": 591, "dig": 591, "investig": [591, 593], "pcolormesh": 591, "edgecolor": 591, "modifi": [591, 618], "default": 591, "solut": [591, 594], "sever": 593, "weather": 593, "wisconsin": 593, "outbreak": 593, "focus": 593, "southern": 593, "reproduc": 593, "event": 593, "road": 593, "interst": 593, "featur": [593, 595, 638], "avail": 593, "run": 593, "post": 594, "templat": 594, "problem": 594, "changelog": 595, "16": 595, "enhanc": 595, "made": 595, "bug": 595, "document": [595, 598], "improv": 595, "other": 595, "merg": 595, "contributor": [595, 596, 659], "releas": [595, 598], "0": 595, "mainten": 595, "upkeep": 595, "15": 595, "v1": 595, "14": 595, "6": 595, "5": 595, "4": 595, "13": 595, "12": 595, "7": 595, "11": 595, "8": 595, "deprec": 595, "10": 595, "9": 595, "picasso": 595, "": [596, 599, 659], "guid": [596, 599, 659, 660], "toolkit": [596, 648, 659], "link": [596, 659], "cite": [596, 648, 659], "resourc": [596, 659], "continu": 597, "integr": 597, "how": [598, 637, 638], "tag": 598, "prepar": 598, "note": 598, "trigger": 598, "pypi": 598, "upload": 598, "packag": 598, "forg": 598, "announc": 598, "open": 598, "forum": 598, "version": 599, "moment": [600, 604, 620], "exampl": [600, 604, 605, 609, 615, 634, 637, 643], "attenu": 601, "dealia": [602, 644], "doppler": 602, "region": 602, "base": 602, "algorithm": [602, 637, 638], "comput": [603, 608, 614, 633, 641, 642, 647, 657], "galleri": [604, 649], "input": [604, 605], "output": [604, 605], "xradar": [604, 643, 644, 645, 646], "aw": 606, "cloud": 606, "older": 607, "compar": 610, "two": [610, 613, 630], "singl": [611, 612], "ppi": [611, 622, 623, 624, 632, 646], "sweep": 611, "cartesian": [611, 612, 613, 654], "2d": 611, "weight": 611, "choos": 616, "colormap": 616, "cross": [617, 632], "section": [617, 632], "colorbar": 618, "mute": 619, "multipl": [620, 625, 626], "cfradial": 622, "mdv": [623, 627, 628, 629], "cartopi": 624, "panel": [625, 626, 630, 631], "cf": [625, 626], "radial": [625, 626, 644], "contour": [627, 628], "line": [627, 628], "volum": 632, "column": 635, "abov": 635, "calcul": [636, 639, 640], "composit": 636, "convect": [637, 638], "stratiform": [637, 638], "classif": [637, 638, 639], "summari": [637, 638], "recommend": [637, 638], "best": [637, 638], "practic": [637, 638], "detect": 638, "part": 638, "warm": 638, "season": 638, "cool": 638, "hydrometeor": 639, "vad": 640, "profil": 640, "can": 648, "do": 648, "short": 648, "cours": 648, "depend": [648, 658, 661], "option": [648, 658, 661], "contribut": 648, "notebook": 649, "basic": 650, "ingest": 650, "netcdf": 650, "manipul": 651, "save": 651, "object": [651, 656], "dealias": 652, "mask": 655, "With": 655, "index": 656, "build": 658, "requir": 658, "obtain": 658, "latest": 658, "frequent": 658, "ask": 658, "question": 658, "user": 660, "anaconda": 661, "channel": 661, "ad": 661, "path": 661, "more": 661}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[126, "pyart-correct"]], "pyart.correct.GateFilter": [[127, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[128, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[129, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[130, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[131, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[132, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[133, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[134, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[135, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[136, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[137, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[138, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[139, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[140, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[141, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[142, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[143, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[144, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[145, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[146, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[147, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[148, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[149, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[150, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[151, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[152, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[153, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[154, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[155, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[156, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[157, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[158, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[159, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[160, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[161, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[162, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[163, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[164, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[165, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[166, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[167, "pyart-correct-phase-proc-lp-gf"]], "pyart.exceptions": [[168, "pyart-exceptions"]], "pyart.filters": [[169, "pyart-filters"]], "pyart.filters.GateFilter": [[170, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[171, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[172, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[173, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[174, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[175, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[176, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[177, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[178, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[179, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[180, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[181, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[182, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[183, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[184, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[185, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[186, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[187, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[188, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[189, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[190, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[191, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[192, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[193, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[194, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[195, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[196, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[197, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[198, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[199, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[200, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[201, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[202, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[203, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[204, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[205, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[206, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[207, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[208, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[209, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[210, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[211, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[212, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[213, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[214, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[215, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[216, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[217, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[218, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[219, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[220, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[221, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[222, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[223, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[224, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[225, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[226, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[227, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[228, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[229, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[230, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[231, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[232, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[233, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[234, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[235, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[236, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[237, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[238, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[239, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[240, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[241, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[242, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[243, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[244, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[245, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[246, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[247, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[248, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[249, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[250, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[251, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[252, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[253, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[254, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[255, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[256, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[257, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[258, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[259, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[260, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[261, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[262, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[263, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[264, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[265, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[266, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[267, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[268, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[269, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[270, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[271, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[272, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[273, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[274, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[275, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[276, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[277, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[278, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[279, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[280, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[281, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[282, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[283, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[284, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[285, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[286, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[287, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[288, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[289, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[290, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[291, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[292, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[293, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[294, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[295, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[296, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[297, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[298, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[299, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[300, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[301, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[302, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[303, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[304, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[305, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[306, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[307, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[308, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[309, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[310, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[311, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[312, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[313, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[314, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[315, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[316, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[317, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[318, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[319, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[320, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[321, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[322, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[323, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[324, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[325, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[326, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[327, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[328, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[329, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[330, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[331, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[332, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[333, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[334, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[335, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[336, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[337, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[338, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[339, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[340, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[341, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[342, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[343, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[344, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[345, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[346, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[347, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[348, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[349, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[350, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[351, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[352, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[353, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[354, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[355, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[356, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[357, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[358, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[359, "pyart-io"]], "pyart.io.prepare_for_read": [[360, "pyart-io-prepare-for-read"]], "pyart.io.read": [[361, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[362, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[363, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[364, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[365, "pyart-io-read-chl"]], "pyart.io.read_grid": [[366, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[367, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[368, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[369, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[370, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[371, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[372, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[373, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[374, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[375, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[376, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[377, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[378, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[379, "pyart-io-write-uf"]], "pyart.lazydict": [[380, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[381, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[382, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[383, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[384, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[385, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[386, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[387, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[388, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[389, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[390, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[391, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[392, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[393, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[394, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[395, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[396, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[397, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[398, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[399, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[400, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[401, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[402, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[403, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[404, "pyart-map"]], "pyart.map.GateMapper": [[405, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[406, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[407, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[408, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[409, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[410, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[411, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[412, "pyart-map-grid-from-radars"]], "pyart.map.map_gates_to_grid": [[413, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[414, "pyart-map-map-to-grid"]], "pyart.retrieve": [[415, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[416, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[417, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[418, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[419, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[420, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_l": [[421, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[422, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_snr": [[423, "pyart-retrieve-compute-snr"]], "pyart.retrieve.conv_strat_raut": [[424, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[425, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.dealias_spectra": [[426, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[427, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[428, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[429, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[430, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[431, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[432, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[433, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[434, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[435, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[436, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[437, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[438, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[439, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_maesaka": [[440, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[441, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[442, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[443, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[444, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[445, "pyart-retrieve-spectra-moments"]], "Parameter": [[445, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[446, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[447, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[448, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[449, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[450, "pyart-testing"]], "pyart.testing.Grid": [[451, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[452, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[453, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[454, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[455, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[456, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[457, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[458, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[459, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[460, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[461, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[462, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[463, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[464, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[465, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[466, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[467, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[468, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[469, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[470, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[471, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[472, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[473, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[474, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[475, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[476, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[477, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[478, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[479, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[480, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[481, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[482, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[483, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[484, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[485, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[486, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[487, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[488, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[489, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[490, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[491, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[492, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[493, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[494, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[495, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[496, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[497, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[498, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[499, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[500, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[501, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[502, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[503, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[504, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[505, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[506, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[507, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[508, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[509, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[510, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[511, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[512, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[513, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[514, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[515, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[516, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[517, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[518, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[519, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[520, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[521, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[522, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[523, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[524, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[525, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[526, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[527, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[528, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[529, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[530, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[531, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[532, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[533, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[534, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[535, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[536, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[537, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[538, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[539, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[540, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[541, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[542, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[543, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[544, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[545, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[546, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[547, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[548, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[549, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[550, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[551, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[552, "pyart-util"]], "pyart.util.angular_mean": [[553, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[554, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[555, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[556, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[557, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[558, "pyart-util-column-vertical-profile"]], "pyart.util.cross_section_ppi": [[559, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[560, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[561, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[562, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[563, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[564, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[565, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[566, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[567, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[568, "pyart-util-for-azimuth"]], "Assumptions": [[568, "assumptions"], [580, "assumptions"]], "pyart.util.get_column_rays": [[569, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[570, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[571, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[572, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[573, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[574, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[575, "pyart-util-join-radar"]], "pyart.util.mean_of_two_angles": [[576, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[577, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[578, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[579, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[580, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[581, "pyart-util-subset-radar"]], "pyart.util.texture": [[582, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[583, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[584, "pyart-util-to-vpt"]], "API Reference Manual": [[585, "api-reference-manual"]], "Blog": [[586, "blog"]], "Blending Observations from TRACER using Py-ART": [[587, "blending-observations-from-tracer-using-py-art"]], "Imports": [[587, "imports"], [589, "imports"], [590, "imports"], [591, "imports"], [593, "imports"]], "GOES data access": [[587, "goes-data-access"]], "CSAPR data access": [[587, "csapr-data-access"]], "Load LMA Flash data": [[587, "load-lma-flash-data"]], "June 17th case": [[587, "june-17th-case"]], "June 17 RHI": [[587, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[588, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[588, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[588, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[588, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[588, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[588, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[588, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[588, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[588, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[588, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[588, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[588, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[589, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[589, "motivation"], [593, "motivation"], [594, "motivation"]], "NEXRAD Data Access - fsspec": [[589, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[589, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[589, "read-in-a-file"]], "Visualize the Dataset": [[589, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[589, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[589, "configure-the-search"]], "Search and Download the Data": [[589, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[589, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[589, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[589, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[589, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[589, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[589, "create-an-animation-of-the-images"]], "View the Final Animation": [[589, "view-the-final-animation"]], "Conclusion": [[589, "conclusion"], [591, "conclusion"], [593, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[590, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[590, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[590, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[590, "plot-using-pyart"]], "Load in the data using pyart": [[590, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[590, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[590, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[590, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[590, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[590, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[590, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[590, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[590, "create-our-holoviews-plots"]], "View the Final Visualization": [[590, "view-the-final-visualization"]], "Try Using Rasterize": [[590, "try-using-rasterize"]], "Key Takeaways": [[590, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[591, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[591, "the-data"]], "Data Access": [[591, "data-access"]], "Recreate the Issue Using PyART": [[591, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[591, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[591, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[591, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[591, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[591, "add-in-the-alpha-argument"]], "Dig into the Issue": [[591, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[591, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[591, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[591, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[591, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[591, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[591, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[591, "fixing-the-issue-in-pyart"]], "New Docs": [[592, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[593, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[593, "the-outbreak"]], "Focusing on Southern Wisconsin": [[593, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[593, "reproducing-event-images"]], "Visualizing the Event": [[593, "visualizing-the-event"]], "Access the Data": [[593, "access-the-data"]], "Download the Road Data": [[593, "download-the-road-data"]], "Add the Interstate Date as a feature": [[593, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[593, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[593, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[593, "run-our-plotting-functions"]], "Blog Post Template": [[594, "blog-post-template"]], "The Problem": [[594, "the-problem"]], "The Solution": [[594, "the-solution"]], "Conclusions": [[594, "conclusions"]], "Changelog": [[595, "changelog"]], "Py-ART 1.16.1": [[595, "py-art-1-16-1"]], "Enhancements made": [[595, "enhancements-made"], [595, "id1"], [595, "id16"], [595, "id22"], [595, "id33"], [595, "id36"], [595, "id41"], [595, "id46"], [595, "id49"], [595, "id53"], [595, "id66"], [595, "id76"], [595, "id86"], [595, "id92"], [595, "id98"], [595, "id106"], [595, "id119"], [595, "id123"], [595, "id127"], [595, "id133"], [595, "id139"], [595, "id148"], [595, "id155"], [595, "id162"], [595, "id168"], [595, "id175"], [595, "id181"], [595, "id187"]], "Bugs fixed": [[595, "bugs-fixed"], [595, "id2"], [595, "id9"], [595, "id13"], [595, "id17"], [595, "id23"], [595, "id28"], [595, "id37"], [595, "id42"], [595, "id47"], [595, "id54"], [595, "id59"], [595, "id63"], [595, "id67"], [595, "id72"], [595, "id77"], [595, "id82"], [595, "id87"], [595, "id93"], [595, "id99"], [595, "id103"], [595, "id107"], [595, "id111"], [595, "id116"], [595, "id120"], [595, "id124"], [595, "id128"], [595, "id134"], [595, "id140"], [595, "id144"], [595, "id149"], [595, "id156"], [595, "id163"], [595, "id169"], [595, "id176"], [595, "id182"]], "Documentation improvements": [[595, "documentation-improvements"], [595, "id3"], [595, "id30"], [595, "id38"], [595, "id43"], [595, "id56"], [595, "id69"], [595, "id79"], [595, "id89"], [595, "id95"], [595, "id113"], [595, "id125"], [595, "id130"], [595, "id136"], [595, "id141"], [595, "id145"], [595, "id151"], [595, "id158"], [595, "id165"], [595, "id171"], [595, "id178"], [595, "id184"]], "Other merged PRs": [[595, "other-merged-prs"], [595, "id4"], [595, "id7"], [595, "id11"], [595, "id14"], [595, "id19"], [595, "id24"], [595, "id31"], [595, "id34"], [595, "id39"], [595, "id44"], [595, "id51"], [595, "id57"], [595, "id61"], [595, "id64"], [595, "id70"], [595, "id74"], [595, "id80"], [595, "id84"], [595, "id90"], [595, "id96"], [595, "id101"], [595, "id109"], [595, "id114"], [595, "id121"], [595, "id131"], [595, "id137"], [595, "id142"], [595, "id146"], [595, "id153"], [595, "id160"], [595, "id166"], [595, "id173"], [595, "id179"], [595, "id185"]], "Contributors to this release": [[595, "contributors-to-this-release"], [595, "id5"], [595, "id8"], [595, "id12"], [595, "id15"], [595, "id20"], [595, "id21"], [595, "id25"], [595, "id27"], [595, "id32"], [595, "id35"], [595, "id40"], [595, "id45"], [595, "id48"], [595, "id52"], [595, "id58"], [595, "id62"], [595, "id65"], [595, "id71"], [595, "id75"], [595, "id81"], [595, "id85"], [595, "id91"], [595, "id97"], [595, "id102"], [595, "id105"], [595, "id110"], [595, "id115"], [595, "id118"], [595, "id122"], [595, "id126"], [595, "id132"], [595, "id138"], [595, "id143"], [595, "id147"], [595, "id154"], [595, "id161"], [595, "id167"], [595, "id174"], [595, "id180"], [595, "id186"], [595, "id189"]], "Py-ART 1.16.0": [[595, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[595, "maintenance-and-upkeep-improvements"], [595, "id6"], [595, "id10"], [595, "id18"], [595, "id26"], [595, "id29"], [595, "id50"], [595, "id55"], [595, "id60"], [595, "id68"], [595, "id73"], [595, "id78"], [595, "id83"], [595, "id88"], [595, "id94"], [595, "id100"], [595, "id104"], [595, "id108"], [595, "id112"], [595, "id117"], [595, "id129"], [595, "id135"], [595, "id150"], [595, "id157"], [595, "id164"], [595, "id170"], [595, "id177"], [595, "id183"], [595, "id188"]], "Py-ART 1.15.2": [[595, "py-art-1-15-2"]], "Py-ART 1.15.1": [[595, "py-art-1-15-1"]], "Py-ART v1.15.0": [[595, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[595, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[595, "py-art-v1-14-5"]], "Merged PRs": [[595, "merged-prs"]], "Py-ART v1.14.4": [[595, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[595, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[595, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[595, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[595, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[595, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[595, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[595, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[595, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[595, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[595, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[595, "py-art-v1-12-5"]], "PyART v1.12.4": [[595, "pyart-v1-12-4"]], "PyART v1.12.2": [[595, "pyart-v1-12-2"]], "PyART v1.12.0": [[595, "pyart-v1-12-0"]], "PyART v1.11.8": [[595, "pyart-v1-11-8"]], "Deprecated features": [[595, "deprecated-features"], [595, "id152"], [595, "id159"], [595, "id172"]], "PyART v1.11.6": [[595, "pyart-v1-11-6"]], "PyART v1.11.5": [[595, "pyart-v1-11-5"]], "PyART v1.11.3": [[595, "pyart-v1-11-3"]], "PyART v1.11.2": [[595, "pyart-v1-11-2"]], "PyART v1.11.1": [[595, "pyart-v1-11-1"]], "PyART v1.11.0": [[595, "pyart-v1-11-0"]], "PyART v1.10.4": [[595, "pyart-v1-10-4"]], "PyART v1.10.3": [[595, "pyart-v1-10-3"]], "PyART v1.10.2": [[595, "pyart-v1-10-2"]], "PyART v1.10.1": [[595, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[595, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[595, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[595, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[595, "pyart-v1-8-0"]], "PyART v1.7.0": [[595, "pyart-v1-7-0"]], "PyART v1.6.0": [[595, "pyart-v1-6-0"]], "PyART v1.5.0": [[595, "pyart-v1-5-0"]], "PyART v1.4.0": [[595, "pyart-v1-4-0"]], "PyART v1.3.0": [[595, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[596, "contributor-s-guide"], [659, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[596, "the-python-arm-radar-toolkit-py-art"], [659, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[596, "important-links"], [659, "important-links"]], "Citing": [[596, "citing"], [659, "citing"]], "Install": [[596, "install"], [648, "install"], [659, "install"]], "Resources": [[596, "resources"], [659, "resources"]], "Code Style": [[596, "code-style"], [659, "code-style"]], "Python File Setup": [[596, "python-file-setup"], [659, "python-file-setup"]], "Testing": [[596, "testing"], [659, "testing"]], "GitHub": [[596, "github"], [659, "github"]], "Py-ART Continuous Integration Setup": [[597, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[598, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[598, "make-the-tagged-git-release"]], "Prepare the release notes": [[598, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[598, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[598, "documentation"]], "Create conda packages on conda-forge": [[598, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[598, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[599, "developer-s-guide"]], "Versions": [[599, "versions"]], "Moment correction examples": [[600, "moment-correction-examples"], [604, "moment-correction-examples"]], "Correct reflectivity attenuation": [[601, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[602, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[603, "computation-times"], [608, "computation-times"], [614, "computation-times"], [633, "computation-times"], [641, "computation-times"], [642, "computation-times"], [647, "computation-times"], [657, "computation-times"]], "Example Gallery": [[604, "example-gallery"]], "Input/Output Examples": [[604, "input-output-examples"], [605, "input-output-examples"]], "Mapping examples": [[604, "mapping-examples"], [609, "mapping-examples"]], "Plotting examples": [[604, "plotting-examples"], [615, "plotting-examples"]], "Retrieval Examples": [[604, "retrieval-examples"], [634, "retrieval-examples"]], "Xradar Examples": [[604, "xradar-examples"], [643, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[606, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[606, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[606, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[607, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[607, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[610, "compare-two-radars-using-gatemapper"]], "Map a single PPI sweep to a Cartesian grid using 2D weighting": [[611, "map-a-single-ppi-sweep-to-a-cartesian-grid-using-2d-weighting"]], "Map a single radar to a Cartesian grid": [[612, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[613, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[616, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[617, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[618, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[619, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[620, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[621, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[622, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[623, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[624, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[625, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [626, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[627, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [628, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[629, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[630, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[631, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[632, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[635, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[636, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[637, "convective-stratiform-classification"]], "How the algorithm works": [[637, "how-the-algorithm-works"], [638, "how-the-algorithm-works"]], "Examples": [[637, "examples"]], "Summary of recommendations and best practices": [[637, "summary-of-recommendations-and-best-practices"], [638, "summary-of-recommendations-and-best-practices"]], "References": [[637, "references"], [638, "references"]], "Feature Detection classification": [[638, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[638, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[638, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[639, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[640, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[644, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[645, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[646, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[648, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[648, "what-is-py-art"]], "Citing Py-ART": [[648, "citing-py-art"]], "What can Py-ART do?": [[648, "what-can-py-art-do"]], "Short Courses": [[648, "short-courses"]], "Dependencies": [[648, "dependencies"]], "Optional Dependences": [[648, "optional-dependences"]], "Getting help": [[648, "getting-help"]], "Contributing": [[648, "contributing"]], "Notebook Gallery": [[649, "notebook-gallery"]], "Notebooks": [[649, null]], "Creating a basic ingest of a NetCDF file": [[650, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[651, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[652, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[654, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[655, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[656, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[658, "building-and-installing-py-art"]], "Required Dependencies": [[658, "required-dependencies"]], "Optional Dependencies": [[658, "optional-dependencies"]], "Obtaining the latest source": [[658, "obtaining-the-latest-source"]], "Installing from Source": [[658, "installing-from-source"]], "Frequently asked questions": [[658, "frequently-asked-questions"]], "User Guide": [[660, "user-guide"]], "Setting up an Environment": [[661, "setting-up-an-environment"]], "Anaconda": [[661, "anaconda"]], "Setting a Channel": [[661, "setting-a-channel"]], "Creating an Environment": [[661, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[661, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[661, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [126, "module-pyart.correct"], [168, "module-pyart.exceptions"], [169, "module-pyart.filters"], [202, "module-pyart.graph"], [359, "module-pyart.io"], [380, "module-pyart.lazydict"], [404, "module-pyart.map"], [415, "module-pyart.retrieve"], [450, "module-pyart.testing"], [552, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[126, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[127, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[128, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[141, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[142, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[144, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[145, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[155, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[156, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[157, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[158, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[159, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[160, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[161, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[162, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[163, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[164, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[165, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[166, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[167, "pyart.correct.phase_proc_lp_gf"]], "pyart.exceptions": [[168, "module-pyart.exceptions"]], "pyart.filters": [[169, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[170, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[184, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[185, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[201, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[202, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[203, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[204, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[205, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[210, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[211, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[221, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[231, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[232, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[233, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[234, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[235, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[249, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[250, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[251, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[252, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[253, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[254, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[255, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[256, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[257, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[258, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[263, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[264, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[265, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[266, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[267, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[268, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[270, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[271, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[280, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[285, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[290, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[291, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[292, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[293, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[294, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[295, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[296, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[297, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[299, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[300, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[301, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[309, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[310, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[323, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[324, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[325, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[326, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[327, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[328, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[329, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[330, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[332, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[333, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[334, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[342, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[356, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[357, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[358, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[359, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[360, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[361, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[362, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[363, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[364, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[365, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[366, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[367, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[368, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[369, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[370, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[371, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[372, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[373, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[374, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[375, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[376, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[377, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[378, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[379, "pyart.io.write_uf"]], "pyart.lazydict": [[380, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[381, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[382, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[383, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[384, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[385, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[386, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[394, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[395, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[396, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[397, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[398, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[399, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[400, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[401, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[402, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[403, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[404, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[405, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[406, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[407, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[408, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[409, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[410, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[411, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[412, "pyart.map.grid_from_radars"]], "map_gates_to_grid() (in module pyart.map)": [[413, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[414, "pyart.map.map_to_grid"]], "pyart.retrieve": [[415, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[416, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[417, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[418, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[419, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[420, "pyart.retrieve.compute_cdr"]], "compute_l() (in module pyart.retrieve)": [[421, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[422, "pyart.retrieve.compute_noisedBZ"]], "compute_snr() (in module pyart.retrieve)": [[423, "pyart.retrieve.compute_snr"]], "conv_strat_raut() (in module pyart.retrieve)": [[424, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[425, "pyart.retrieve.conv_strat_yuter"]], "dealias_spectra() (in module pyart.retrieve)": [[426, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[427, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[428, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[429, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[430, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[431, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[432, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[433, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[434, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[435, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[436, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[437, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[438, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[439, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[440, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[441, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[442, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[443, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[444, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[445, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[446, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[447, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[448, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[449, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[450, "module-pyart.testing"]], "grid (class in pyart.testing)": [[451, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[452, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[453, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[454, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[455, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[456, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[457, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[458, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[459, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[460, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[461, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[462, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[463, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[464, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[465, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[466, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[467, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[468, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[469, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[470, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[471, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[472, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[473, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[474, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[475, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[476, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[477, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[478, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[479, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[480, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[481, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[482, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[483, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[484, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[491, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[492, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[493, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[494, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[495, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[496, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[497, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[498, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[499, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[500, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[501, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[502, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[503, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[504, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[505, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[506, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[507, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[508, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[509, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[510, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[511, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[512, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[513, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[514, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[515, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[516, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[517, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[518, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[519, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[520, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[521, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[522, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[523, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[524, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[525, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[526, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[527, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[528, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[529, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[530, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[531, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[532, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[533, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[534, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[535, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[536, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[537, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[538, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[539, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[540, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[541, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[542, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[543, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[544, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[545, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[546, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[547, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[548, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[549, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[550, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[551, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[552, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[553, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[554, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[555, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[556, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[557, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[558, "pyart.util.column_vertical_profile"]], "cross_section_ppi() (in module pyart.util)": [[559, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[560, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[561, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[562, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[563, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[564, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[565, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[566, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[567, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[568, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[569, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[570, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[571, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[572, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[573, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[574, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[575, "pyart.util.join_radar"]], "mean_of_two_angles() (in module pyart.util)": [[576, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[577, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[578, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[579, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[580, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[581, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[582, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[583, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[584, "pyart.util.to_vpt"]]}})