Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.create_cfad", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/2024/epcape-blog-post", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_grid_single_sweep_ppi", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_cfad", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.create_cfad.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/2024/epcape-blog-post.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_grid_single_sweep_ppi.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_cfad.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_snr", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.create_cfad", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Investigating ARM Scanning Cloud Radar Data from EPCAPE", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single PPI sweep to a Cartesian grid using 2D weighting", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Creating a CFAD diagram", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"stream": [0, 62, 364, 481], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 198, 199, 200, 201, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 384, 392, 395, 396, 402, 405, 413, 414, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 462, 464, 467, 475, 476, 493, 560, 561, 572, 580, 582, 590, 592, 594, 595, 597, 598, 620, 629, 640, 641, 659, 662], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 212, 214, 215, 216, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 313, 314, 315, 317, 318, 325, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 390, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 590, 591, 592, 594, 597, 598, 600, 603, 604, 606, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651, 653, 654, 655, 657, 658, 659, 662, 664], "print": [0, 62, 155, 166, 167, 233, 249, 373, 440, 441, 445, 481, 588, 590, 591, 595, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 640, 641, 654, 658, 659], "out": [0, 62, 163, 167, 198, 201, 375, 376, 377, 378, 379, 419, 436, 481, 590, 591, 592, 594, 595, 597, 598, 614, 615, 619, 630, 639, 642, 651, 657, 661, 662, 663], "version": [0, 12, 31, 202, 407, 452, 553, 588, 589, 596, 597, 598, 600, 651, 659, 661, 662, 664], "statu": [0, 589, 598, 662], "inform": [0, 24, 31, 45, 62, 74, 140, 152, 155, 160, 166, 167, 183, 195, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 365, 373, 376, 440, 441, 447, 452, 464, 481, 493, 588, 592, 595, 596, 597, 598, 601, 609, 630, 651, 662], "debug": [0, 155, 160, 166, 167, 233, 249, 373, 441, 597], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 121, 123, 124, 131, 140, 141, 142, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 174, 183, 184, 185, 198, 199, 200, 201, 216, 242, 276, 292, 305, 317, 325, 338, 350, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 392, 394, 402, 405, 407, 413, 414, 418, 419, 424, 425, 426, 435, 436, 441, 442, 443, 447, 449, 452, 454, 464, 466, 467, 470, 471, 473, 475, 476, 477, 493, 546, 558, 559, 567, 568, 572, 575, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 608, 609, 612, 613, 614, 618, 619, 620, 621, 624, 630, 637, 638, 640, 641, 647, 651, 653, 654, 655, 657, 658, 659, 661, 662, 664], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 417, 425, 435, 440, 441, 442, 443, 444, 447, 448, 451, 461, 464, 481, 493, 539, 580, 588, 589, 591, 592, 594, 595, 597, 600, 603, 605, 606, 608, 609, 610, 613, 614, 616, 617, 618, 621, 623, 626, 632, 633, 634, 635, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 658, 659, 660, 661, 664], "can": [0, 12, 16, 29, 45, 54, 57, 74, 121, 123, 124, 127, 140, 152, 156, 157, 160, 163, 165, 170, 183, 195, 198, 199, 200, 201, 216, 276, 305, 338, 360, 367, 368, 370, 373, 377, 378, 379, 413, 414, 426, 435, 440, 441, 442, 443, 445, 450, 464, 473, 476, 493, 588, 589, 590, 591, 592, 594, 595, 597, 598, 600, 608, 609, 612, 618, 637, 638, 640, 641, 647, 653, 654, 655, 657, 658, 659, 661, 662, 664], "run": [0, 229, 425, 435, 451, 567, 589, 591, 597, 598, 599, 600, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651, 661, 662, 664], "script": [0, 29, 595, 597, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 122, 125, 127, 131, 133, 140, 141, 147, 152, 155, 156, 157, 159, 160, 161, 162, 165, 166, 167, 169, 170, 174, 176, 183, 184, 190, 195, 198, 199, 200, 201, 203, 217, 218, 219, 224, 227, 228, 229, 230, 233, 241, 242, 244, 246, 248, 249, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 314, 316, 317, 320, 321, 322, 325, 339, 340, 341, 347, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 390, 392, 395, 402, 404, 407, 409, 410, 411, 413, 414, 417, 418, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 452, 455, 460, 464, 466, 469, 473, 474, 475, 476, 493, 546, 558, 559, 560, 561, 567, 568, 569, 570, 571, 572, 573, 574, 575, 580, 589, 591, 592, 594, 597, 598, 600, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 623, 626, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 653, 657, 658, 659, 660, 662, 664], "directori": [0, 29, 462, 586, 588, 589, 595, 596, 597, 598, 608, 661, 662], "report": [0, 1, 292, 325, 372, 450, 594, 597, 651], "dependeci": 0, "befor": [0, 31, 56, 160, 164, 167, 405, 425, 435, 449, 452, 475, 590, 591, 592, 598, 612, 640, 651, 655, 659, 662], "build": [0, 121, 123, 124, 127, 131, 133, 140, 147, 152, 170, 174, 176, 183, 190, 195, 379, 590, 594, 597, 598, 600, 651, 662, 663], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 121, 122, 123, 124, 125, 127, 140, 152, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 203, 205, 207, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 296, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 329, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 405, 412, 413, 414, 416, 417, 419, 421, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 464, 466, 473, 475, 476, 493, 546, 553, 558, 559, 560, 561, 567, 568, 575, 580, 582, 583, 584, 585, 589, 593, 594, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 609, 611, 616, 617, 618, 619, 621, 624, 625, 627, 628, 629, 630, 631, 635, 637, 638, 640, 641, 646, 650, 651, 653, 654, 655, 657, 658, 659, 660, 661, 662, 664], "python": [0, 29, 377, 440, 588, 590, 591, 592, 594, 595, 596, 597, 600, 603, 604, 606, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 653, 654, 655, 657, 658, 659, 661, 664], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 417, 418, 424, 425, 435, 438, 439, 440, 441, 442, 443, 444, 447, 448, 452, 464, 493, 544, 553, 559, 570, 571, 580, 586, 591, 592, 594, 596, 601, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 646, 650, 652, 653, 654, 655, 657, 660, 663, 664], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 461, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 481, 493, 496, 538, 539, 540, 541, 542, 543, 544, 554, 555, 556, 557, 558, 559, 560, 561, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 584, 585, 588, 590, 591, 595, 597, 598, 633, 640, 641, 654, 655, 657, 659, 661, 662], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 121, 122, 124, 125, 161, 162, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 386, 387, 397, 398, 419, 481, 549, 550, 551, 552, 554, 555, 556, 557, 568, 573, 590, 591, 592, 595, 596, 597, 598, 608, 609, 612, 637, 651, 653, 655, 657, 662], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 127, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 198, 199, 200, 201, 203, 218, 233, 241, 244, 249, 256, 263, 278, 292, 307, 317, 325, 340, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 386, 387, 390, 393, 397, 398, 403, 405, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 445, 446, 448, 449, 450, 451, 452, 453, 460, 461, 465, 466, 467, 469, 470, 471, 473, 481, 490, 518, 536, 540, 541, 542, 543, 546, 559, 567, 568, 570, 571, 572, 575, 576, 579, 582, 584, 585, 588, 589, 591, 592, 594, 597, 598, 608, 612, 620, 621, 625, 626, 627, 628, 629, 630, 631, 632, 633, 638, 640, 641, 642, 651, 652, 653, 657, 658, 662], "sy": 0, "stdout": [0, 62, 481], "descript": [1, 16, 18, 30, 126, 168, 169, 202, 359, 380, 404, 415, 451, 553, 580, 592, 598, 600, 637, 651, 662], "addit": [1, 2, 7, 8, 12, 14, 19, 160, 161, 162, 164, 216, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 358, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 405, 412, 414, 425, 435, 572, 588, 590, 591, 597, 600, 606, 608, 636, 640, 641, 651], "class": [1, 18, 19, 30, 31, 41, 45, 74, 126, 127, 169, 170, 202, 203, 233, 244, 249, 263, 292, 317, 325, 380, 381, 394, 404, 405, 406, 408, 413, 440, 451, 452, 462, 464, 493, 586, 590, 591, 592, 597, 598, 651, 657, 658, 662], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 126, 164, 165, 169, 198, 199, 200, 201, 202, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 276, 277, 284, 288, 289, 292, 305, 306, 316, 321, 322, 325, 338, 339, 349, 354, 355, 358, 359, 361, 364, 367, 368, 374, 377, 404, 405, 409, 410, 411, 413, 414, 415, 419, 424, 425, 426, 435, 441, 443, 449, 451, 475, 553, 559, 571, 572, 575, 579, 580, 585, 586, 591, 592, 595, 597, 598, 618, 637, 638, 640, 641, 647, 651, 655, 657, 659, 661, 662], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 127, 141, 142, 170, 184, 185, 217, 228, 277, 288, 306, 321, 339, 354, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 588, 594, 597, 603, 604, 606, 607, 610, 612, 613, 614, 615, 618, 619, 620, 621, 624, 626, 629, 630, 632, 633, 634, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651, 653, 654, 655, 657, 658, 659, 660], "write": [1, 15, 359, 375, 376, 377, 378, 379, 451, 462, 596, 597, 606, 607, 654], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 131, 140, 152, 158, 159, 160, 161, 162, 174, 183, 195, 203, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 258, 260, 262, 263, 277, 279, 284, 287, 288, 289, 292, 306, 308, 316, 317, 320, 321, 322, 325, 339, 341, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 404, 405, 412, 414, 416, 419, 424, 426, 427, 430, 435, 436, 440, 441, 442, 443, 445, 446, 447, 450, 452, 453, 464, 465, 466, 469, 470, 471, 473, 474, 475, 476, 477, 486, 487, 489, 493, 514, 515, 517, 539, 544, 546, 567, 572, 582, 585, 597, 598, 603, 604, 606, 607, 610, 612, 613, 614, 615, 617, 618, 619, 620, 621, 623, 624, 626, 627, 628, 629, 630, 632, 634, 636, 637, 638, 640, 641, 643, 646, 647, 649, 650, 651, 652, 653, 654, 655, 659, 660, 662], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 163, 164, 166, 167, 216, 220, 224, 225, 227, 228, 229, 230, 242, 276, 280, 284, 285, 287, 288, 289, 305, 309, 316, 317, 318, 320, 321, 322, 338, 342, 349, 350, 351, 353, 354, 355, 359, 364, 371, 377, 378, 412, 413, 414, 422, 426, 439, 441, 443, 452, 464, 470, 471, 473, 474, 475, 476, 477, 493, 540, 541, 542, 543, 544, 559, 567, 568, 585, 588, 591, 592, 594, 598, 600, 601, 618, 620, 637, 651, 659, 662], "format": [1, 12, 13, 39, 40, 45, 74, 205, 207, 217, 219, 224, 227, 228, 229, 230, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 359, 361, 370, 372, 374, 375, 376, 378, 460, 461, 464, 493, 588, 590, 591, 592, 595, 597, 598, 600, 630, 651, 653, 662], "These": [1, 29, 127, 160, 170, 255, 377, 414, 590, 595, 598, 608, 618, 640, 651, 658, 661, 662], "auxiliari": 1, "input": [1, 166, 167, 377, 435, 439, 440, 443, 567, 572, 588, 590, 597, 640, 641, 658], "output": [1, 13, 62, 159, 377, 419, 424, 440, 481, 569, 589, 591, 594, 595, 597, 651], "routin": [1, 12, 169, 375, 413, 597, 651], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 122, 125, 140, 152, 155, 156, 157, 160, 161, 162, 164, 165, 167, 169, 183, 195, 198, 199, 200, 201, 202, 217, 223, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 277, 283, 284, 288, 289, 306, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 345, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 383, 411, 412, 413, 414, 416, 418, 419, 424, 425, 426, 428, 429, 430, 432, 433, 435, 441, 443, 447, 452, 464, 475, 477, 493, 541, 542, 543, 560, 561, 568, 569, 573, 574, 581, 585, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 600, 604, 606, 608, 609, 612, 613, 618, 620, 621, 629, 632, 637, 638, 640, 641, 651, 653, 654, 655, 657, 658, 659, 661, 662, 664], "well": [1, 163, 165, 198, 199, 200, 201, 350, 369, 371, 414, 588, 590, 595, 597, 598, 609, 619, 641, 651, 657, 658, 662], "polish": 1, "those": [1, 48, 55, 141, 142, 161, 162, 184, 185, 373, 413, 467, 474, 586, 592, 594, 637, 664], "io": [1, 127, 170, 412, 588, 589, 590, 591, 592, 594, 595, 597, 598, 603, 604, 608, 609, 610, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651, 654, 655, 657, 658, 659, 660, 661, 662, 664], "thei": [1, 4, 58, 131, 133, 140, 160, 161, 162, 164, 174, 176, 183, 350, 365, 373, 379, 424, 441, 477, 592, 594, 598, 640, 662], "mai": [1, 29, 131, 133, 140, 147, 152, 160, 161, 174, 176, 183, 190, 195, 292, 325, 369, 371, 377, 381, 414, 424, 443, 553, 592, 594, 600, 640, 651], "requir": [1, 31, 45, 74, 121, 123, 124, 160, 163, 164, 373, 377, 414, 449, 452, 464, 493, 568, 588, 589, 597, 598, 609, 651, 662, 664], "depend": [1, 156, 157, 414, 429, 588, 592, 597, 598, 600, 662], "beyond": [1, 661], "standard": [1, 40, 45, 62, 74, 119, 120, 160, 375, 376, 377, 419, 442, 461, 464, 481, 493, 544, 556, 557, 574, 588, 592, 597, 598, 653, 654, 655, 662], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 417, 418, 424, 425, 435, 438, 439, 440, 441, 442, 443, 444, 447, 448, 452, 464, 493, 544, 553, 559, 570, 571, 580, 586, 592, 594, 601, 603, 604, 606, 607, 608, 609, 617, 618, 620, 638, 641, 646, 650, 652, 653, 654, 655, 657, 660, 663, 664], "instal": [1, 10, 121, 123, 124, 163, 164, 377, 591, 594, 597, 600, 663, 664], "non": [1, 121, 123, 124, 162, 373, 375, 424, 425, 435, 441, 443, 592, 597, 640], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 202, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 440, 441, 442, 443, 444, 447, 448, 452, 453, 464, 465, 466, 468, 473, 481, 493, 496, 539, 553, 572, 580, 584, 588, 591, 592, 594, 595, 596, 597, 608, 641, 654, 659], "support": [1, 244, 317, 350, 361, 368, 369, 370, 371, 372, 380, 381, 405, 441, 590, 592, 594, 597, 598, 629, 651, 653, 654, 655, 657, 658, 659, 661, 662], "fulli": [1, 367, 594, 661], "test": [1, 12, 160, 364, 369, 371, 381, 589, 592, 597, 599, 600, 603, 604, 612, 614, 615, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 647, 648, 649, 651, 653], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 127, 130, 137, 140, 144, 149, 152, 160, 161, 162, 164, 165, 166, 167, 170, 173, 180, 183, 187, 192, 195, 200, 217, 223, 224, 227, 228, 229, 230, 244, 277, 283, 284, 287, 288, 289, 306, 312, 316, 317, 320, 321, 322, 339, 345, 349, 350, 353, 354, 355, 358, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 382, 394, 395, 412, 413, 414, 418, 424, 425, 435, 436, 439, 441, 443, 452, 454, 464, 467, 475, 476, 493, 568, 586, 588, 589, 590, 591, 592, 593, 597, 598, 600, 606, 618, 637, 638, 639, 640, 643, 651, 659, 660, 662, 664], "pleas": [1, 56, 292, 325, 475, 588, 589, 592, 594, 595, 598, 651, 653, 654, 655, 657, 658, 659, 662], "your": [1, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 590, 591, 592, 596, 598, 600, 606, 617, 619, 635, 640, 641, 651, 660, 661, 662, 664], "own": [1, 12, 591, 595, 600, 618, 651, 661], "risk": [1, 590], "bug": [1, 591, 598, 601, 651, 661, 662], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 127, 131, 141, 142, 159, 160, 161, 162, 167, 170, 174, 184, 185, 203, 243, 257, 317, 350, 358, 359, 360, 373, 376, 378, 379, 413, 414, 425, 435, 441, 442, 443, 445, 447, 449, 450, 452, 464, 466, 473, 493, 567, 568, 592, 596, 597, 598, 600, 618, 640, 651, 661, 662, 664], "fix": [1, 588, 591, 598, 599, 601, 606, 607, 610, 632, 653, 660, 661, 662, 664], "them": [1, 4, 5, 6, 56, 160, 161, 162, 163, 233, 249, 317, 350, 364, 373, 414, 475, 591, 595, 598, 600, 618, 651, 662, 664], "prioriti": [1, 664], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 205, 237, 250, 265, 294, 317, 327, 350, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 461, 588, 589, 590, 592, 597, 598, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 662], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 158, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 453, 465, 466, 468, 473, 489, 496, 517, 582, 612, 657], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 129, 131, 133, 139, 140, 141, 142, 143, 145, 147, 152, 153, 155, 160, 161, 162, 166, 167, 170, 172, 174, 176, 182, 183, 184, 185, 186, 188, 190, 195, 196, 205, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 277, 279, 284, 287, 288, 289, 294, 306, 308, 316, 317, 320, 321, 322, 327, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 413, 414, 418, 424, 425, 429, 432, 435, 441, 442, 443, 445, 453, 454, 461, 462, 465, 466, 467, 470, 471, 473, 475, 476, 477, 551, 552, 562, 563, 564, 565, 566, 567, 575, 585, 588, 590, 591, 592, 594, 597, 598, 620, 627, 629, 630, 632, 640, 641, 653, 654, 658, 659, 662], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 467, 597], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 160, 161, 162, 216, 217, 218, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 276, 277, 278, 284, 288, 289, 305, 306, 307, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 340, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 412, 413, 414, 441, 562, 563, 564, 565, 566, 591, 592, 595, 597], "d3r": [2, 597], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 362, 363, 364, 366, 370, 375, 376, 436, 461, 562, 565, 588, 595, 597, 651, 652], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 40, 45, 46, 47, 49, 54, 74, 77, 121, 123, 124, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 447, 448, 452, 453, 461, 464, 465, 466, 468, 473, 493, 496, 539, 572, 580, 582, 584, 590, 592, 594, 595, 597], "odim_h5": [2, 8, 597], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 121, 123, 124, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 203, 263, 292, 317, 325, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 381, 413, 414, 418, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 446, 447, 448, 452, 453, 455, 460, 464, 465, 493, 580, 588, 592, 653], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 122, 123, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 170, 174, 176, 183, 190, 195, 217, 224, 228, 229, 230, 232, 242, 244, 246, 248, 255, 258, 260, 262, 277, 284, 288, 289, 291, 306, 314, 315, 316, 317, 318, 321, 322, 324, 339, 347, 348, 349, 350, 354, 355, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 414, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 447, 448, 450, 452, 453, 454, 461, 464, 465, 466, 467, 470, 471, 473, 475, 476, 481, 493, 560, 561, 568, 575, 580, 584, 585, 591, 592, 597, 640, 659], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 121, 123, 124, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 385, 412, 413, 414, 417, 418, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 444, 446, 447, 448, 452, 453, 464, 465, 466, 468, 493, 496, 538, 580, 609, 641, 654, 659], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 122, 125, 222, 244, 255, 282, 292, 311, 313, 314, 315, 317, 318, 325, 344, 346, 347, 348, 350, 351, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 392, 402, 419, 444, 452, 464, 493, 588, 590, 591, 592, 594, 597, 598, 612, 616, 617, 619, 620, 635, 638, 640, 641, 648, 651, 652, 660, 662], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 217, 218, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 276, 277, 278, 279, 284, 287, 288, 289, 292, 293, 294, 295, 296, 297, 302, 305, 306, 307, 308, 316, 317, 320, 321, 322, 325, 326, 327, 328, 329, 330, 335, 338, 339, 340, 341, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 460, 464, 465, 466, 467, 468, 473, 476, 489, 493, 496, 517, 540, 541, 542, 543, 544, 546, 549, 550, 551, 552, 558, 559, 571, 572, 580, 582, 583, 584, 588, 590, 591, 592, 594, 595, 597, 598, 603, 606, 608, 612, 613, 614, 615, 618, 619, 621, 632, 636, 637, 638, 639, 640, 641, 642, 647, 649, 651, 652, 653, 655, 657, 658, 659, 662], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 126, 127, 140, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 202, 203, 216, 217, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 276, 277, 282, 284, 288, 289, 292, 305, 306, 311, 314, 316, 317, 321, 322, 325, 338, 339, 344, 347, 349, 350, 354, 355, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 404, 405, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 460, 493, 536, 541, 542, 543, 546, 549, 550, 551, 552, 559, 560, 561, 564, 566, 567, 569, 570, 571, 572, 575, 576, 580, 581, 582, 583, 584, 585, 588, 589, 592, 594, 597, 602, 603, 604, 606, 607, 608, 609, 611, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 639, 640, 641, 642, 643, 644, 647, 648, 649, 652, 653, 655, 657, 658, 660, 663], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 121, 123, 124, 140, 152, 158, 160, 163, 164, 165, 183, 195, 199, 200, 205, 207, 217, 218, 223, 224, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 283, 284, 288, 289, 294, 296, 306, 307, 312, 315, 316, 317, 321, 322, 327, 329, 339, 340, 345, 348, 349, 350, 354, 355, 358, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 388, 392, 399, 402, 414, 418, 424, 425, 426, 428, 429, 430, 432, 433, 435, 436, 440, 441, 442, 443, 444, 447, 452, 453, 464, 466, 467, 468, 475, 493, 496, 558, 560, 561, 568, 582, 589, 591, 592, 593, 594, 595, 598, 600, 640, 651, 653, 654, 655, 657, 658, 659, 661, 662, 664], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 161, 162, 203, 263, 292, 325, 361, 365, 367, 368, 369, 370, 372, 373, 374, 378, 379, 424, 429, 441, 464, 493, 536, 567, 589, 592, 595, 597, 598, 641, 651, 659, 662], "found": [2, 7, 8, 12, 14, 29, 163, 361, 365, 367, 368, 369, 370, 372, 373, 374, 388, 399, 412, 413, 414, 419, 436, 588, 590, 592, 594, 595, 597, 598, 600, 609, 651, 661, 662, 664], "doe": [2, 7, 8, 12, 14, 49, 77, 121, 123, 124, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 468, 496, 585, 590, 592, 597, 598, 600, 630, 653, 661, 662, 664], "appear": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 575, 592, 595], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 159, 160, 205, 237, 249, 250, 265, 294, 325, 327, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 385, 392, 402, 404, 426, 429, 432, 433, 464, 493, 546, 568, 584, 589, 591, 592, 594, 595, 598, 600, 608, 618, 640, 651, 657, 659, 661, 662, 664], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 121, 122, 123, 124, 125, 127, 129, 131, 132, 133, 135, 138, 140, 143, 145, 146, 147, 150, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 178, 181, 183, 186, 188, 189, 190, 193, 195, 197, 198, 199, 200, 201, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 306, 307, 308, 310, 313, 314, 315, 316, 317, 319, 320, 321, 322, 339, 340, 341, 343, 346, 347, 348, 349, 350, 352, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 394, 399, 400, 413, 414, 416, 418, 419, 422, 424, 425, 426, 429, 432, 433, 435, 438, 440, 441, 442, 443, 447, 449, 452, 464, 467, 493, 541, 542, 543, 544, 558, 567, 568, 572, 573, 574, 588, 590, 591, 592, 595, 597, 598, 609, 612, 618, 621, 637, 638, 639, 640, 641, 647, 654, 655, 658, 662], "place": [2, 7, 8, 12, 14, 218, 222, 223, 241, 243, 256, 257, 278, 282, 283, 307, 311, 312, 340, 344, 345, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 585, 595, 597, 657, 661], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 122, 125, 127, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 198, 199, 200, 201, 203, 233, 242, 249, 263, 292, 315, 325, 348, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 380, 381, 394, 412, 413, 414, 418, 419, 424, 425, 426, 428, 435, 440, 441, 442, 443, 445, 447, 448, 449, 450, 452, 464, 466, 493, 544, 559, 572, 588, 592, 595, 597, 598, 621, 637, 640, 641, 645, 651, 662], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 224, 227, 228, 229, 230, 232, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 284, 287, 288, 289, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 316, 317, 320, 321, 322, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 349, 350, 353, 354, 355, 357, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 384, 396, 414, 416, 417, 419, 424, 425, 426, 429, 432, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 452, 464, 470, 471, 473, 475, 476, 481, 493, 541, 542, 543, 567, 568, 580, 589, 590, 597, 598, 629, 630, 637, 640, 641, 651, 661, 662, 664], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 121, 123, 124, 155, 156, 157, 160, 163, 165, 166, 167, 198, 199, 200, 201, 222, 223, 227, 282, 283, 287, 311, 312, 320, 344, 345, 353, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 379, 413, 414, 418, 440, 441, 447, 452, 464, 493, 558, 559, 588, 591, 592, 595, 596, 597, 619, 620, 637, 638, 640], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 417, 425, 435, 440, 441, 442, 443, 444, 447, 448, 580, 588, 589, 592, 594, 597, 608, 612, 639, 647], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 452, 470, 471, 473, 474, 475, 476, 477, 559, 597, 598, 637, 639, 640, 641, 642, 643, 644, 647, 655, 660, 662], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 155, 156, 157, 160, 161, 162, 166, 167, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 417, 419, 424, 441, 442, 443, 444, 448, 452, 453, 464, 465, 466, 493, 538, 540, 546, 580, 595, 596, 597, 609, 627, 628, 632, 659], "dure": [2, 7, 8, 12, 14, 19, 140, 152, 159, 160, 161, 162, 183, 195, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 425, 434, 441, 447, 588, 641, 661, 664], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 121, 122, 123, 124, 125, 129, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 172, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 199, 200, 205, 207, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 279, 282, 283, 284, 287, 288, 289, 292, 294, 296, 306, 307, 308, 311, 312, 316, 317, 320, 321, 322, 325, 327, 329, 339, 340, 341, 344, 345, 349, 350, 353, 354, 355, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 392, 394, 399, 400, 402, 405, 412, 413, 414, 416, 418, 419, 424, 425, 426, 428, 429, 432, 433, 435, 436, 440, 441, 442, 443, 447, 449, 452, 453, 454, 464, 466, 467, 474, 475, 476, 477, 481, 493, 546, 558, 560, 561, 567, 568, 569, 572, 575, 581, 582, 584, 585, 586, 588, 590, 591, 592, 593, 594, 596, 597, 598, 600, 603, 608, 609, 612, 613, 618, 619, 620, 621, 624, 629, 630, 637, 638, 640, 641, 653, 654, 655, 657, 658, 659, 661, 662, 664], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 131, 133, 140, 141, 142, 147, 152, 155, 156, 157, 160, 161, 162, 163, 165, 166, 167, 174, 176, 183, 184, 185, 190, 195, 199, 200, 292, 325, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 414, 419, 426, 440, 465, 466, 540, 585, 589, 593, 595, 601, 637, 653], "success": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 600], "unless": [2, 7, 8, 12, 14, 58, 121, 123, 124, 162, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 477, 592], "explicitli": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 127, 131, 133, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 169, 170, 174, 176, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 413, 414, 439, 449, 464, 469, 475, 476, 493, 559, 589, 591, 592, 594, 595, 596, 597, 598, 600, 608, 612, 632, 637, 651, 658, 661, 662], "introduct": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 598, 662], "specif": [2, 7, 8, 12, 14, 140, 152, 155, 156, 157, 183, 195, 325, 350, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 414, 428, 429, 430, 432, 433, 436, 440, 441, 442, 443, 572, 590, 592, 595, 597, 598, 603, 618, 640, 641, 651, 662, 664], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 121, 123, 124, 131, 133, 147, 160, 161, 162, 169, 174, 176, 190, 217, 219, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 277, 279, 284, 288, 289, 306, 308, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 346, 347, 348, 349, 350, 351, 354, 355, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 388, 399, 405, 413, 414, 441, 442, 443, 452, 464, 467, 475, 476, 493, 580, 584, 590, 591, 592, 597, 604, 608, 657, 658, 661], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 131, 133, 140, 147, 152, 155, 160, 161, 162, 166, 167, 170, 174, 176, 183, 190, 195, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 412, 414, 418, 424, 425, 429, 432, 433, 435, 441, 442, 443, 445, 447, 453, 454, 461, 465, 466, 467, 470, 471, 473, 475, 476, 477, 567, 575, 585, 592], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 123, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 412, 413, 414, 418, 424, 425, 429, 432, 433, 435, 441, 442, 443, 447, 452, 453, 454, 461, 462, 464, 465, 466, 467, 470, 471, 473, 475, 476, 477, 493, 551, 552, 567, 575, 585, 588, 589, 590, 591, 592, 594, 597, 598, 613, 620, 627, 628, 629, 630, 637, 640, 641, 643, 647, 654, 655, 659, 662], "mdv": [2, 8, 12, 14, 367, 368, 378, 589, 597, 604, 606, 614, 617, 635, 651, 655, 657, 660], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 121, 123, 124, 140, 152, 160, 162, 183, 195, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 590, 591, 592, 594, 595, 597, 598, 608, 609, 612, 613, 630, 662], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 418, 588, 589, 590, 591, 592, 594, 595, 597, 603, 612], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 122, 125, 155, 156, 157, 158, 160, 161, 162, 163, 198, 201, 222, 242, 282, 311, 344, 350, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 405, 406, 407, 408, 412, 413, 414, 416, 418, 419, 422, 423, 424, 425, 435, 438, 440, 441, 442, 443, 447, 449, 452, 464, 493, 539, 553, 554, 555, 558, 567, 568, 573, 574, 580, 582, 584, 588, 589, 590, 591, 597, 600, 606, 609, 613, 621, 632, 637, 640, 641, 652, 655, 658, 661], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 141, 142, 155, 156, 157, 159, 160, 162, 166, 167, 184, 185, 217, 228, 244, 277, 288, 306, 317, 321, 339, 350, 354, 361, 365, 367, 368, 369, 370, 371, 372, 373, 414, 441, 449, 469, 475, 476, 560, 561, 575, 582, 588, 589, 590, 592, 594, 597, 598, 601, 612, 613, 620, 630, 640, 641, 654, 655, 657, 662], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 131, 133, 140, 147, 152, 155, 156, 157, 160, 174, 176, 183, 190, 195, 217, 228, 249, 277, 288, 306, 317, 321, 339, 354, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 425, 435, 438, 454, 464, 467, 475, 493, 544, 567, 588, 590, 591, 592, 593, 594, 595, 597, 598, 608, 609, 637, 638, 640, 641, 651, 657, 661, 662, 663, 664], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 121, 123, 124, 160, 161, 162, 317, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 383, 385, 388, 389, 390, 392, 394, 399, 400, 402, 413, 414, 436, 452, 453, 464, 465, 466, 493, 546, 590, 592, 595, 637, 653, 654, 658], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 203, 219, 223, 226, 249, 263, 279, 283, 286, 292, 308, 312, 319, 325, 341, 345, 352, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 407, 414, 426, 436, 439, 467, 559, 560, 561, 570, 591, 592, 594, 595, 596, 597, 598, 600, 608, 651, 662, 663], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 149, 152, 155, 156, 157, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 192, 195, 198, 199, 200, 201, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 424, 441, 442, 443, 445, 449, 450, 467, 604, 614, 658], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 158, 161, 162, 164, 165, 166, 167, 199, 200, 217, 218, 224, 227, 228, 229, 230, 241, 256, 277, 278, 284, 287, 288, 289, 306, 307, 316, 317, 320, 321, 322, 339, 340, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 405, 412, 414, 419, 425, 429, 435, 464, 467, 493, 568, 590, 591, 592, 594, 597, 598, 608, 618, 629, 640, 641, 647, 655, 662], "after": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 441, 588, 590, 592, 597, 598, 600, 609, 640, 661, 662, 664], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 231, 232, 242, 244, 277, 279, 284, 287, 288, 289, 290, 291, 306, 308, 316, 317, 320, 321, 322, 323, 324, 339, 341, 349, 350, 353, 354, 355, 356, 357, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 386, 387, 390, 391, 397, 398, 401, 414, 424, 428, 429, 430, 432, 433, 441, 442, 443, 452, 464, 475, 476, 477, 493, 541, 542, 543, 551, 552, 558, 567, 577, 578, 589, 590, 595, 597, 598, 609, 612, 613, 619, 626, 629, 630, 633, 634, 637, 640, 641, 647, 651, 655, 661, 662, 663], "you": [2, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 440, 588, 591, 592, 593, 594, 596, 598, 600, 608, 640, 641, 651, 653, 654, 655, 657, 658, 659, 661, 662, 664], "want": [2, 589, 591, 592, 594, 609, 637, 651, 658, 659, 664], "altitud": [2, 31, 45, 56, 74, 166, 167, 203, 414, 419, 426, 447, 452, 464, 475, 493, 569, 581, 588, 591, 597, 630, 637, 643, 653, 657, 659], "provid": [2, 6, 45, 48, 74, 160, 202, 223, 283, 312, 317, 345, 363, 364, 365, 370, 373, 377, 378, 379, 381, 386, 387, 393, 394, 397, 398, 403, 405, 464, 467, 493, 572, 580, 586, 588, 591, 592, 594, 595, 596, 598, 609, 638, 640, 651, 658, 661, 662], "np": [2, 405, 422, 450, 579, 588, 590, 591, 592, 594, 595, 597, 598, 612, 614, 618, 621, 626, 629, 630, 632, 637, 638, 640, 641, 642, 643, 653, 654, 655, 657, 658, 659, 662], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 164, 170, 174, 176, 183, 184, 185, 190, 195, 203, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 288, 289, 292, 306, 307, 308, 313, 314, 316, 317, 321, 322, 325, 339, 340, 341, 346, 347, 349, 350, 354, 355, 405, 413, 414, 422, 425, 426, 427, 435, 440, 442, 443, 444, 449, 450, 452, 454, 460, 466, 470, 471, 473, 474, 475, 476, 477, 554, 555, 556, 557, 558, 565, 566, 568, 573, 574, 577, 578, 579, 588, 592, 597, 598, 612, 626, 637, 640, 641, 643, 653, 654, 655, 657, 658, 659, 662], "295": [2, 597], "dtype": [2, 412, 414, 588, 591, 592, 597, 653, 655, 659], "float64": [2, 413, 414, 588, 591, 638, 659], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 128, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 198, 199, 200, 201, 204, 205, 206, 207, 208, 237, 238, 239, 240, 250, 251, 252, 253, 264, 265, 266, 267, 268, 293, 294, 295, 296, 297, 326, 327, 328, 329, 330, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 388, 389, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 462, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 486, 487, 488, 489, 490, 491, 492, 506, 507, 508, 509, 514, 515, 516, 517, 518, 519, 520, 536, 538, 539, 540, 541, 542, 543, 544, 546, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 580, 581, 582, 584, 588, 590, 591, 592, 595, 597, 598, 638, 640, 641, 654, 657, 659, 662], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 232, 277, 284, 287, 288, 289, 291, 306, 316, 317, 320, 321, 322, 324, 339, 349, 350, 353, 354, 355, 357, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 394, 412, 413, 414, 416, 417, 418, 419, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 464, 465, 469, 470, 471, 473, 474, 475, 476, 477, 493, 558, 559, 560, 561, 567, 571, 580, 582, 585, 588, 589, 592, 597, 598, 609, 622, 623, 641, 651, 653, 654, 657, 659, 661, 662, 664], "edg": [3, 33, 57, 120, 123, 160, 161, 162, 163, 164, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 426, 439, 443, 454, 476, 544, 590, 591, 592, 629, 630, 640], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 379, 591, 597], "gamic": [4, 597], "hdf5": [4, 8, 597, 651], "unlik": [4, 5, 6, 364], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 160, 161, 162, 163, 164, 165, 200, 217, 219, 224, 227, 228, 229, 230, 244, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 366, 369, 371, 373, 377, 405, 414, 425, 435, 445, 449, 452, 460, 464, 493, 541, 542, 543, 590, 591, 592, 595, 598, 637, 640, 641, 651, 653, 661, 662, 664], "still": [4, 5, 6, 160, 292, 325, 364, 379, 414, 575, 594, 595, 597, 598, 608, 662], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 218, 222, 223, 224, 227, 228, 229, 230, 233, 241, 244, 246, 248, 249, 255, 256, 258, 260, 262, 277, 278, 282, 283, 284, 287, 288, 289, 306, 307, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 360, 361, 363, 364, 369, 370, 373, 374, 376, 377, 378, 379, 381, 409, 410, 411, 412, 413, 414, 417, 418, 436, 440, 441, 442, 443, 447, 448, 449, 452, 454, 464, 469, 473, 486, 487, 489, 490, 493, 514, 515, 517, 518, 558, 559, 560, 561, 568, 570, 571, 572, 573, 574, 580, 584, 588, 589, 590, 591, 592, 594, 595, 597, 598, 600, 604, 608, 609, 612, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 637, 638, 641, 647, 648, 649, 651, 655, 657, 659, 661, 662], "renam": [4, 5, 6, 29, 364, 374, 597], "uniform": [4, 5, 6, 58, 161, 162, 364, 372, 418, 424, 477, 597, 618, 621, 651, 653], "forc": [4, 5, 6, 364, 374, 418, 592, 597], "extract": [4, 217, 277, 306, 339, 373, 424, 436, 559, 560, 561, 571, 594, 597, 606, 612, 634, 636, 637, 640, 641, 644, 651, 660], "valid": [4, 31, 45, 74, 154, 155, 160, 197, 218, 241, 256, 278, 307, 340, 369, 378, 379, 414, 440, 452, 464, 493, 559, 560, 561, 568, 595, 597, 598, 613, 662], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 157, 203, 217, 219, 224, 225, 226, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 263, 277, 279, 284, 285, 286, 288, 289, 292, 306, 308, 316, 317, 318, 319, 321, 322, 325, 339, 341, 349, 350, 351, 352, 354, 355, 372, 422, 424, 441, 443, 464, 474, 476, 493, 559, 567, 582, 588, 590, 591, 592, 597, 613, 618, 623, 626, 632, 643, 653, 659], "valid_min": [4, 160, 161, 162, 365, 597, 640, 641, 659], "valid_max": [4, 160, 161, 162, 365, 640, 641, 659], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 166, 167, 174, 176, 183, 184, 185, 190, 195, 217, 224, 228, 229, 230, 244, 249, 277, 284, 288, 289, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 369, 370, 372, 373, 375, 379, 381, 405, 414, 418, 429, 432, 433, 441, 442, 443, 449, 451, 452, 464, 465, 466, 470, 471, 473, 475, 476, 493, 568, 589, 590, 591, 594, 597, 598, 599, 600, 601, 618, 637, 640, 641, 651, 654, 655, 658, 661, 662, 664], "present": [4, 29, 31, 45, 74, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 392, 402, 414, 440, 452, 464, 493, 592, 653, 658], "unit": [4, 55, 121, 122, 123, 124, 125, 161, 162, 209, 212, 213, 214, 215, 222, 242, 269, 272, 273, 274, 275, 282, 298, 301, 302, 303, 304, 311, 331, 334, 335, 336, 337, 344, 365, 367, 416, 435, 438, 440, 451, 474, 546, 568, 588, 592, 594, 597, 598, 599, 627, 632, 640, 641, 651, 654, 659, 662], "avail": [4, 16, 45, 56, 57, 58, 74, 140, 152, 155, 156, 157, 164, 183, 195, 202, 242, 244, 246, 248, 258, 260, 262, 367, 377, 464, 475, 476, 477, 493, 588, 590, 591, 592, 597, 600, 606, 608, 618, 637, 651], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 122, 125, 440, 449, 450, 588, 590, 591, 592, 593, 594, 595, 597, 598, 609, 643, 653, 654, 655, 657, 658, 659, 662], "k": [5, 125, 221, 222, 223, 225, 226, 227, 281, 282, 283, 285, 286, 287, 310, 311, 312, 318, 319, 320, 343, 344, 345, 351, 352, 353, 384, 388, 389, 391, 392, 396, 399, 400, 401, 402, 424, 441, 449, 590, 594, 595, 598, 619, 626, 629, 630, 662], "band": [5, 9, 155, 157, 159, 377, 428, 430, 437, 440, 441, 442, 443, 447, 588, 595, 597, 641], "arm": [5, 6, 40, 362, 363, 375, 376, 414, 436, 461, 540, 546, 588, 590, 592, 594, 597, 600, 615, 630, 653, 654, 655, 657, 658, 659, 661, 664], "zenith": 5, "kazr": [5, 6, 597], "ingest": [5, 591, 597, 651, 652], "spectra": [6, 74, 117, 427, 446, 493, 536, 543, 550, 568, 597], "radar_spectra": 6, "delay_field_load": [6, 361, 364, 367, 368, 369, 372, 374], "delai": [6, 361, 364, 367, 368, 369, 372, 597], "load": [6, 29, 361, 364, 367, 368, 369, 372, 380, 381, 390, 597, 613, 659], "until": [6, 29, 161, 361, 364, 367, 368, 369, 372, 600], "particular": [6, 361, 364, 367, 368, 369, 372, 414, 591, 600, 637, 651], "access": [6, 19, 31, 45, 56, 57, 74, 141, 142, 184, 185, 361, 364, 367, 368, 369, 372, 381, 452, 464, 475, 476, 493, 539, 591, 595, 608, 609, 657, 659], "In": [6, 121, 123, 124, 162, 164, 359, 361, 364, 367, 368, 369, 371, 372, 392, 402, 405, 416, 419, 426, 441, 450, 558, 559, 588, 590, 591, 592, 594, 598, 603, 604, 609, 637, 640, 641, 651, 654, 655, 657, 658, 661, 662], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 140, 141, 142, 152, 160, 183, 184, 185, 195, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 367, 368, 369, 372, 375, 376, 379, 452, 455, 456, 457, 458, 464, 475, 476, 482, 483, 484, 485, 493, 510, 511, 512, 513, 588, 591, 592, 594, 595, 638, 653, 659], "radarspectra": [6, 446, 543], "lazyloaddict": [6, 31, 45, 74, 361, 364, 367, 368, 369, 372, 452, 464, 493], "speedup": [6, 244, 317, 350, 364, 592, 597], "where": [6, 15, 56, 57, 119, 122, 125, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 165, 167, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 217, 224, 227, 228, 229, 230, 243, 257, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 358, 364, 419, 425, 426, 435, 444, 450, 475, 476, 560, 561, 569, 572, 584, 588, 589, 592, 594, 597, 608, 609, 612, 618, 621, 637, 638, 640, 651, 654, 658, 664], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 284, 288, 289, 292, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 364, 369, 370, 371, 372, 405, 412, 413, 414, 441, 442, 443, 444, 445, 449, 450, 464, 474, 475, 476, 493, 541, 542, 543, 558, 559, 570, 571, 588, 592, 597, 604, 609, 612, 614, 615, 619, 653, 655, 657, 658, 659], "vari": [6, 364, 367, 424, 640, 641], "between": [6, 33, 45, 56, 57, 74, 120, 122, 123, 140, 152, 160, 161, 163, 164, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 358, 364, 369, 372, 378, 379, 405, 424, 425, 429, 435, 454, 464, 475, 476, 493, 553, 567, 581, 588, 590, 591, 592, 598, 600, 612, 619, 629, 637, 640, 655, 657, 662, 664], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 140, 152, 155, 156, 157, 160, 161, 162, 164, 167, 183, 195, 199, 204, 206, 210, 211, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 264, 266, 270, 271, 277, 284, 287, 288, 289, 293, 295, 299, 300, 306, 316, 317, 320, 321, 322, 326, 328, 332, 333, 339, 349, 350, 353, 354, 355, 363, 364, 369, 372, 373, 405, 418, 422, 449, 464, 472, 475, 476, 477, 478, 479, 480, 493, 506, 507, 508, 509, 541, 542, 543, 546, 559, 564, 566, 570, 584, 585, 591, 592, 598, 614, 653, 659, 662], "ngates_vari": [6, 364], "recommend": [6, 29, 45, 74, 160, 162, 350, 364, 373, 414, 424, 425, 435, 441, 464, 493, 558, 598, 600, 618, 637, 651, 661, 662, 663, 664], "noxp": [7, 597], "iphex": [7, 597], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 317, 350, 369, 371, 436, 559, 562, 565, 571, 588, 591, 592, 597, 608, 613, 637, 638, 641, 642, 643, 651, 653], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 129, 131, 132, 133, 134, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 160, 165, 172, 174, 175, 176, 177, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 199, 200, 217, 222, 223, 242, 243, 245, 246, 247, 248, 257, 259, 260, 261, 262, 277, 282, 283, 306, 311, 312, 313, 314, 339, 344, 345, 346, 347, 388, 399, 405, 413, 414, 440, 444, 452, 454, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 493, 506, 507, 508, 509, 538, 559, 567, 570, 571, 573, 574, 580, 588, 592, 595, 637, 638, 640, 651], "dataset1": 8, "dataset2": 8, "pattern": [9, 544, 629, 637], "project": [9, 16, 31, 34, 45, 74, 121, 122, 123, 124, 125, 222, 233, 244, 255, 282, 292, 311, 317, 344, 350, 367, 376, 377, 414, 452, 455, 464, 493, 588, 590, 592, 594, 595, 597, 608, 609, 612, 613, 619, 620, 626, 633, 638, 640, 641, 647, 651, 654, 655, 657, 658, 661], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 203, 212, 217, 219, 222, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 263, 272, 277, 279, 282, 284, 287, 288, 289, 291, 292, 301, 306, 308, 311, 314, 316, 320, 321, 322, 324, 325, 334, 339, 341, 344, 347, 349, 353, 354, 355, 357, 405, 409, 410, 411, 412, 413, 414, 418, 425, 426, 428, 435, 437, 438, 439, 440, 441, 442, 443, 447, 452, 458, 460, 476, 484, 512, 540, 544, 558, 588, 591, 592, 596, 597, 601, 612, 619, 620, 629, 630, 637, 640, 641, 657, 658, 659], "radx_dir": 10, "first": [10, 45, 58, 74, 160, 162, 242, 362, 363, 372, 375, 405, 414, 425, 435, 441, 442, 443, 447, 464, 477, 493, 562, 564, 567, 577, 578, 588, 590, 591, 592, 594, 598, 600, 604, 608, 609, 623, 632, 637, 638, 640, 641, 647, 655, 657, 658, 659, 662], "convert": [10, 13, 39, 416, 425, 435, 460, 575, 585, 588, 590, 592, 597, 640, 641], "cf": [10, 13, 45, 74, 364, 375, 376, 436, 464, 493, 588, 589, 590, 591, 606, 617, 635, 651, 659, 660], "radial": [10, 13, 45, 74, 160, 161, 364, 375, 418, 441, 464, 493, 558, 580, 589, 591, 592, 594, 597, 602, 606, 608, 617, 635, 646, 650, 651, 655, 659, 660], "radxconvert": 10, "path": [10, 15, 156, 157, 162, 462, 539, 589, 590, 592, 594, 597, 598, 608, 609, 651, 661, 662], "radx": [10, 597], "grid": [11, 24, 45, 74, 202, 219, 221, 229, 233, 237, 243, 244, 245, 247, 249, 250, 255, 257, 258, 259, 261, 279, 281, 308, 310, 341, 343, 359, 366, 367, 376, 377, 378, 409, 410, 411, 412, 413, 414, 424, 425, 426, 435, 438, 439, 447, 464, 493, 540, 544, 545, 547, 548, 563, 582, 588, 592, 597, 606, 611, 616, 617, 620, 630, 633, 635, 637, 640, 641, 646, 650, 651, 652, 660], "produc": [11, 163, 366, 375, 377, 381, 445, 450, 592, 594, 598, 641, 651, 662], "radx2grid": 11, "within": [11, 29, 47, 48, 127, 160, 161, 162, 163, 167, 170, 202, 412, 413, 414, 418, 440, 466, 467, 553, 559, 560, 561, 569, 571, 573, 574, 586, 590, 592, 593, 594, 595, 597, 598, 608, 609, 620, 621, 651, 655, 657, 662, 664], "lrose": 11, "must": [11, 155, 156, 157, 160, 317, 363, 366, 367, 372, 378, 424, 438, 441, 442, 443, 580, 592, 598, 640, 651, 661, 662], "been": [11, 12, 131, 133, 140, 147, 152, 159, 160, 174, 176, 183, 190, 195, 249, 325, 364, 366, 369, 370, 371, 373, 568, 589, 594, 598, 608, 640, 651, 657, 661, 662], "write_grid": [11, 366], "ident": [11, 161, 162, 366, 413, 641], "layout": [11, 33, 366, 454, 597], "rainbow": 12, "rainbow5": [12, 597], "5": [12, 31, 155, 157, 160, 163, 164, 165, 166, 200, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 376, 424, 425, 429, 435, 440, 452, 544, 567, 575, 588, 589, 590, 591, 592, 594, 595, 596, 598, 603, 604, 609, 613, 618, 621, 623, 624, 625, 628, 629, 630, 631, 632, 633, 637, 638, 640, 641, 642, 643, 647, 653, 655, 658, 659, 662], "22": [12, 588, 590, 594, 597, 608, 618, 638], "3": [12, 45, 74, 119, 120, 160, 161, 198, 199, 201, 229, 367, 371, 377, 412, 414, 418, 424, 425, 435, 464, 493, 540, 544, 559, 588, 589, 590, 591, 594, 596, 598, 603, 604, 606, 609, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 650, 651, 653, 654, 655, 657, 658, 659, 660, 661, 662, 664], "34": [12, 435, 447, 588, 640, 641], "16": [12, 424, 428, 449, 586, 588, 589, 590, 592, 595, 598, 603, 604, 612, 625, 631, 637, 639, 655, 659, 662], "35": [12, 162, 166, 167, 588, 590, 591, 618, 627, 629, 630, 637, 658, 660], "1": [12, 31, 45, 55, 74, 119, 122, 125, 140, 160, 162, 166, 167, 183, 263, 364, 369, 370, 371, 376, 413, 414, 416, 421, 424, 425, 426, 429, 435, 440, 441, 443, 452, 464, 474, 493, 544, 559, 567, 568, 579, 586, 588, 590, 591, 592, 594, 595, 598, 600, 601, 603, 604, 608, 612, 613, 614, 615, 618, 619, 620, 622, 623, 624, 626, 627, 628, 629, 630, 632, 633, 634, 637, 638, 640, 642, 643, 648, 651, 653, 654, 655, 657, 659, 662], "sinc": [12, 419, 441, 588, 590, 591, 592, 613, 640, 641, 654, 657, 659], "evolv": [12, 588], "constantli": 12, "guaranti": 12, "work": [12, 122, 125, 244, 292, 317, 325, 350, 369, 371, 447, 589, 590, 592, 594, 595, 597, 598, 600, 601, 609, 637, 651, 653, 654, 655, 657, 658, 659, 661, 662, 664], "necessari": [12, 588], "user": [12, 29, 48, 156, 157, 163, 350, 377, 424, 467, 559, 584, 588, 591, 592, 594, 595, 597, 598, 651, 653, 654, 655, 657, 658, 659, 661, 662, 664], "adapt": [12, 119, 588, 664], "code": [12, 29, 160, 438, 440, 449, 588, 590, 594, 595, 597, 601, 603, 604, 606, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651, 661, 664], "accord": [12, 159, 373, 414, 421, 428, 429, 430, 432, 433], "its": [12, 441, 590, 591, 594, 597, 598, 600, 601, 651, 661, 662, 664], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 361, 372, 388, 389, 399, 400, 452, 453, 465, 466, 468, 477, 496, 591, 592, 597], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 135, 160, 161, 162, 163, 165, 166, 167, 178, 198, 199, 200, 201, 203, 222, 282, 311, 344, 350, 373, 376, 377, 393, 403, 405, 412, 413, 414, 418, 426, 436, 452, 460, 464, 466, 467, 470, 471, 477, 486, 487, 488, 489, 490, 491, 492, 493, 514, 515, 516, 517, 518, 519, 520, 538, 540, 541, 542, 543, 558, 561, 565, 566, 573, 574, 583, 585, 588, 589, 591, 592, 594, 595, 597, 598, 600, 601, 606, 609, 612, 613, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 637, 638, 640, 641, 647, 648, 649, 651, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663], "issu": [12, 29, 292, 325, 373, 376, 591, 595, 596, 597, 598, 606, 607, 610, 651, 660, 661, 662, 664], "upstream": [12, 589, 598, 600, 662], "reflect": [12, 47, 117, 127, 141, 142, 155, 156, 157, 158, 163, 165, 166, 167, 170, 184, 185, 199, 200, 219, 279, 308, 341, 358, 405, 414, 416, 417, 419, 422, 423, 424, 425, 426, 429, 431, 432, 433, 434, 435, 440, 441, 447, 466, 536, 549, 551, 552, 572, 588, 589, 590, 594, 595, 597, 602, 604, 605, 606, 608, 609, 612, 613, 614, 615, 617, 618, 619, 620, 622, 625, 628, 631, 632, 634, 635, 636, 637, 638, 640, 641, 644, 647, 649, 651, 653, 654, 655, 657, 658, 659, 660], "dbz": [12, 155, 159, 166, 167, 416, 422, 423, 424, 425, 435, 447, 589, 591, 594, 608, 612, 620, 627, 628, 634, 637, 640, 641, 659], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 160, 161, 162, 418, 426, 427, 438, 449, 450, 477, 536, 558, 580, 592, 594, 597, 598, 602, 605, 606, 608, 618, 622, 630, 632, 646, 650, 651, 652, 658, 659, 660, 662], "v": [12, 41, 42, 44, 388, 389, 392, 399, 400, 402, 424, 449, 450, 590, 595, 598, 629, 630, 641, 643, 662], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 568, 659], "width": [12, 243, 257, 317, 350, 414, 590, 591, 592, 594, 597, 659], "w": [12, 62, 162, 424, 481, 588, 642], "wu": [12, 412, 657], "wv": 12, "wvu": 12, "differenti": [12, 17, 155, 156, 157, 166, 167, 199, 426, 430, 433, 440, 441, 442, 443, 445, 448, 597, 622, 637, 651], "zdr": [12, 156, 157, 159, 199, 420], "zdru": 12, "co": [12, 119, 122, 125, 425, 426, 435, 588, 590, 613, 637, 640, 641], "polar": [12, 367, 368, 443, 591, 613], "correl": [12, 165, 199, 200, 438, 440, 572, 594, 621, 622, 639, 640, 641], "coeffici": [12, 155, 156, 157, 166, 167, 416, 424, 440, 572, 588, 597, 621, 622, 639], "rhohv": [12, 159, 165, 199, 200, 420, 421, 597, 621, 659], "rhohvu": 12, "phase": [12, 17, 155, 156, 157, 162, 166, 167, 199, 430, 433, 438, 440, 441, 442, 443, 445, 448, 597, 622, 651, 655], "phidp": [12, 156, 157, 166, 167, 199, 441, 597, 651], "uphidp": 12, "uphidpu": 12, "kdp": [12, 166, 167, 430, 433, 441, 442, 443, 597, 642, 651], "ukdp": 12, "ukdpu": 12, "signal": [12, 159, 165, 200, 417, 568, 591, 595], "qualiti": [12, 159, 165, 200, 430, 442, 443, 588, 594, 595, 608], "sqi": [12, 597], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 156, 157, 201, 440, 588, 642], "temp": [12, 597], "posit": [12, 45, 74, 122, 125, 156, 157, 160, 419, 441, 464, 493, 591, 597, 612, 618, 620, 659], "bin": [12, 45, 74, 119, 120, 157, 372, 426, 427, 464, 493, 567, 568, 588, 597, 612, 637, 655, 659], "respect": [12, 45, 74, 425, 435, 447, 464, 493, 592], "iso0": [12, 156, 198], "cfradial_outfil": 13, "head": [13, 45, 74, 203, 464, 493], "ridgelin": 13, "instrument": [13, 45, 74, 140, 152, 165, 183, 195, 199, 200, 379, 464, 493, 595, 597, 655, 659], "rxm": [13, 597], "25": [13, 424, 588, 590, 594, 597, 608, 612, 629, 630, 633, 638, 653, 658], "rli": 13, "here": [13, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 255, 588, 589, 590, 591, 592, 594, 595, 596, 600, 612, 637, 640, 641, 647, 651, 653, 658, 661, 664], "float": [13, 24, 58, 122, 125, 131, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 217, 219, 220, 224, 225, 227, 228, 229, 230, 242, 243, 244, 245, 246, 247, 248, 255, 257, 258, 259, 260, 261, 262, 263, 264, 277, 279, 280, 284, 285, 287, 288, 289, 292, 293, 306, 308, 309, 315, 316, 317, 318, 320, 321, 322, 325, 326, 339, 341, 342, 348, 349, 350, 351, 353, 354, 355, 358, 377, 405, 406, 408, 409, 410, 411, 412, 414, 416, 417, 418, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 477, 540, 544, 554, 555, 556, 557, 558, 559, 560, 561, 567, 568, 569, 570, 571, 572, 573, 574, 575, 581, 582, 592, 595], "offset": [13, 155, 166, 167, 203, 263, 292, 315, 325, 348, 425, 435, 567, 575, 588, 591, 592, 641], "exist": [13, 28, 32, 46, 47, 49, 77, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 199, 200, 373, 441, 453, 462, 465, 466, 468, 496, 538, 585, 590, 591, 592, 597, 600, 603, 651, 653], "enter": [13, 589, 592, 598, 662], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 166, 167, 201, 203, 217, 222, 223, 242, 243, 245, 247, 255, 257, 259, 261, 263, 277, 282, 283, 292, 306, 311, 312, 315, 317, 325, 339, 344, 345, 348, 350, 449, 454, 474, 475, 555, 557, 559, 560, 561, 569, 570, 571, 575, 578, 581, 590, 592, 595, 597, 598, 634, 638, 659, 662], "sinarame_h5": [14, 15, 597], "take": [15, 47, 161, 413, 414, 417, 441, 466, 590, 591, 592, 598, 608, 609, 612, 620, 640, 641, 662], "everi": [15, 442, 443, 598, 599, 651, 662], "one": [15, 25, 31, 39, 40, 45, 47, 74, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 200, 375, 376, 378, 405, 412, 413, 414, 419, 441, 442, 443, 449, 452, 460, 461, 464, 466, 493, 560, 561, 567, 572, 576, 580, 589, 591, 592, 594, 596, 597, 598, 600, 606, 611, 612, 613, 618, 637, 651, 654, 659, 662, 664], "volum": [15, 45, 74, 160, 162, 163, 317, 350, 369, 370, 371, 379, 405, 436, 464, 493, 560, 561, 563, 582, 585, 588, 591, 592, 594, 595, 597, 606, 613, 617, 635, 660], "folder": [15, 588, 595, 598, 662], "cfradial": [15, 364, 589, 597, 606, 617, 618, 632, 634, 635, 649, 653, 660], "each": [15, 31, 39, 41, 45, 55, 74, 155, 156, 157, 161, 162, 163, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 373, 377, 379, 405, 412, 413, 414, 426, 440, 449, 452, 460, 464, 474, 493, 541, 542, 543, 588, 591, 592, 595, 597, 598, 608, 614, 629, 632, 637, 640, 641, 658, 659, 662], "act": [16, 429, 432, 433, 588, 597, 637, 640, 653], "commun": [16, 588, 595, 598, 651, 662, 664], "softwar": [16, 229, 370, 377, 592, 594, 598, 651, 653, 654, 655, 657, 658, 659, 661, 662], "namespac": [16, 597], "current": [16, 27, 33, 131, 133, 140, 147, 152, 160, 174, 176, 183, 190, 195, 205, 207, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 265, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 296, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 327, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 368, 406, 408, 441, 454, 567, 588, 589, 591, 592, 594, 595, 598, 662], "extens": [16, 205, 237, 250, 265, 294, 327, 377, 591, 600, 661], "wradlib": [16, 597, 651], "http": [16, 369, 370, 371, 416, 419, 425, 426, 430, 431, 435, 438, 559, 572, 588, 590, 592, 594, 595, 598, 609, 621, 630, 637, 640, 641, 651, 661, 662, 664], "org": [16, 416, 419, 425, 426, 430, 431, 435, 438, 559, 572, 595, 597, 598, 621, 637, 640, 641, 651, 662], "phidp_field": [17, 155, 156, 157, 166, 167, 441, 442, 443, 448, 603, 642], "phidp_texture_field": [17, 448], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 123, 127, 141, 142, 155, 156, 157, 165, 166, 167, 170, 184, 185, 198, 199, 200, 201, 203, 263, 292, 325, 413, 414, 417, 418, 424, 425, 435, 438, 445, 446, 448, 449, 450, 452, 454, 464, 475, 476, 493, 558, 559, 567, 568, 569, 570, 571, 581, 588, 597, 598, 603, 606, 612, 613, 629, 630, 636, 640, 644, 647, 651, 655, 658, 660, 662], "textur": [17, 199, 418, 448, 558, 584, 597, 647, 651, 655], "real": [17, 160, 448, 606, 617, 640, 641, 664], "part": [17, 426, 428, 448, 567, 591, 592, 594, 597, 608, 637, 651, 653, 654, 655, 657, 658, 659], "complex": [17, 448], "shift": [17, 166, 167, 203, 263, 292, 325, 439, 442, 448, 567, 597, 655], "texture_field": [17, 448], "refer": [17, 31, 45, 47, 74, 119, 122, 125, 155, 156, 157, 159, 160, 161, 162, 166, 167, 369, 370, 371, 412, 416, 419, 422, 424, 425, 426, 428, 430, 431, 434, 435, 440, 441, 442, 443, 445, 447, 448, 449, 450, 452, 464, 466, 493, 559, 568, 572, 589, 594, 597, 598, 637, 651, 659, 662], "gourlei": [17, 159, 448], "j": [17, 122, 125, 162, 166, 167, 419, 424, 425, 435, 440, 442, 443, 445, 447, 448, 449, 450, 559, 589, 592, 595, 598, 603, 604, 614, 615, 622, 623, 625, 627, 631, 634, 640, 641, 651, 662], "p": [17, 20, 22, 28, 119, 122, 125, 412, 424, 428, 445, 448, 538, 559, 568, 591, 598, 651, 662], "tabari": [17, 448], "parent": [17, 448], "du": [17, 448], "chatelet": [17, 448], "fuzzi": [17, 448], "logic": [17, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 448], "algorithm": [17, 127, 160, 161, 162, 170, 412, 414, 424, 425, 435, 440, 441, 447, 448, 588, 597, 598, 602, 605, 606, 647, 651, 660, 662], "separ": [17, 424, 438, 447, 448, 568, 572, 608, 613, 621, 641, 664], "precipit": [17, 414, 416, 424, 430, 434, 440, 448, 572, 588, 590, 592, 597, 598, 612, 621, 640, 641, 651, 662], "nonprecipit": [17, 448], "echo": [17, 424, 425, 435, 440, 448, 597, 637, 640, 641, 658], "polarimetr": [17, 155, 156, 157, 159, 166, 167, 429, 430, 440, 445, 448, 559, 597, 603], "observ": [17, 119, 425, 435, 441, 448, 637, 640, 641], "journal": [17, 160, 162, 412, 428, 430, 448, 568, 598, 651, 662], "atmospher": [17, 45, 74, 119, 120, 160, 161, 414, 428, 444, 448, 464, 493, 588, 591, 592, 594, 595, 598, 608, 651, 653, 654, 655, 657, 658, 659, 662], "ocean": [17, 160, 166, 167, 425, 428, 434, 435, 445, 448, 559, 588, 592, 595, 608, 640, 641], "technologi": [17, 160, 428, 448], "24": [17, 448, 588, 590, 597, 609, 643], "8": [17, 62, 155, 160, 166, 199, 242, 244, 246, 248, 258, 260, 262, 424, 448, 481, 588, 590, 591, 592, 594, 600, 609, 612, 619, 629, 633, 637, 638, 641, 647, 653, 654, 655, 657, 658, 659], "1439": [17, 448], "1451": [17, 448], "filetyp": [19, 25, 592], "need": [19, 45, 54, 56, 57, 74, 377, 425, 435, 464, 473, 475, 476, 493, 569, 581, 590, 591, 592, 595, 596, 597, 598, 600, 608, 612, 618, 640, 641, 651, 653, 654, 655, 657, 658, 659, 661, 662, 664], "being": [19, 21, 160, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 414, 419, 443, 573, 574, 590, 592, 594, 597, 630, 661], "keep": [19, 160, 373, 582, 592, 598, 612, 640, 641, 662, 664], "string": [19, 31, 45, 74, 219, 222, 223, 227, 230, 243, 257, 279, 282, 283, 287, 289, 308, 311, 312, 313, 314, 315, 318, 320, 322, 341, 344, 345, 346, 347, 348, 351, 353, 355, 413, 414, 436, 438, 442, 443, 445, 449, 450, 452, 464, 493, 590, 591, 592, 597, 598, 618, 662], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 127, 160, 161, 170, 203, 263, 292, 325, 381, 456, 457, 458, 482, 483, 484, 485, 510, 511, 512, 513, 592, 595, 597, 620], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 131, 140, 141, 142, 152, 167, 174, 183, 184, 185, 195, 373, 441, 442, 443, 445, 449, 450, 452, 464, 488, 491, 492, 493, 516, 519, 520, 570, 588, 590, 592, 597, 608, 626], "dic": [22, 31, 45, 46, 74, 381, 452, 464, 465, 493], "colormap": [23, 202, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 591, 592, 597, 606, 617, 621, 635, 641, 642, 660], "select": [24, 50, 59, 88, 162, 469, 478, 507, 588, 591, 594, 597, 600], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 122, 125, 127, 152, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 170, 195, 198, 199, 200, 201, 203, 216, 217, 224, 227, 228, 229, 230, 231, 244, 258, 263, 276, 277, 284, 287, 288, 289, 290, 292, 305, 306, 315, 316, 317, 320, 321, 322, 323, 325, 338, 339, 348, 349, 350, 353, 354, 355, 356, 373, 377, 405, 413, 414, 417, 419, 424, 425, 426, 429, 431, 432, 433, 435, 439, 440, 441, 442, 445, 447, 449, 450, 454, 464, 469, 470, 471, 473, 474, 475, 476, 477, 493, 544, 567, 575, 588, 589, 590, 591, 592, 594, 595, 598, 600, 601, 603, 604, 605, 608, 609, 610, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 653, 654, 655, 657, 658, 659, 660, 661, 662], "limit": [24, 160, 161, 165, 166, 167, 198, 199, 200, 201, 219, 232, 255, 279, 291, 308, 324, 341, 357, 367, 378, 441, 582, 591, 592, 597, 613, 614, 615, 619, 637, 657], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 140, 152, 160, 161, 162, 164, 165, 183, 195, 199, 200, 205, 207, 216, 217, 219, 224, 228, 229, 230, 265, 267, 276, 277, 279, 284, 288, 289, 294, 296, 305, 306, 308, 316, 317, 321, 322, 327, 329, 338, 339, 341, 349, 350, 354, 355, 369, 370, 371, 373, 405, 418, 449, 464, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 486, 487, 488, 489, 490, 491, 492, 493, 506, 507, 508, 509, 514, 515, 516, 517, 518, 519, 520, 541, 542, 560, 561, 567, 588, 589, 591, 592, 594, 595, 597, 604, 606, 608, 611, 612, 616, 629, 630, 632, 637, 638, 640, 641, 643, 647, 655, 658, 659, 660], "get": [24, 234, 235, 236, 254, 381, 391, 401, 405, 588, 589, 591, 592, 594, 597, 609, 629, 630, 637, 640, 641, 653, 655, 658, 659, 661, 663, 664], "relat": [24, 157, 202, 378, 416, 425, 429, 432, 433, 434, 435, 442, 447, 559, 591, 597, 598, 640, 641, 651, 661, 662], "instac": 24, "nyquist": [24, 58, 160, 161, 162, 418, 477, 558, 597, 647, 655, 659], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 140, 152, 157, 160, 161, 163, 164, 166, 167, 183, 195, 199, 205, 206, 207, 216, 220, 224, 225, 227, 228, 229, 237, 238, 239, 240, 242, 244, 250, 251, 252, 253, 255, 258, 265, 266, 267, 276, 280, 284, 285, 287, 288, 294, 295, 296, 305, 309, 316, 317, 318, 320, 321, 327, 328, 329, 338, 342, 349, 350, 351, 353, 354, 377, 414, 418, 422, 425, 435, 441, 443, 449, 452, 454, 464, 470, 471, 473, 474, 475, 476, 477, 493, 541, 542, 543, 544, 558, 559, 568, 570, 584, 590, 592, 597, 598, 662], "consid": [24, 155, 163, 164, 358, 424, 425, 435, 560, 561, 567, 568, 575, 613, 640], "vmin": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 588, 589, 590, 591, 592, 594, 595, 597, 603, 604, 608, 609, 612, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 647, 648, 649, 654, 655, 657, 658], "vmax": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 588, 589, 590, 591, 592, 594, 595, 597, 603, 604, 608, 609, 612, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 647, 648, 649, 654, 655, 657, 658], "2": [24, 119, 122, 162, 163, 164, 199, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 308, 311, 312, 316, 319, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 352, 353, 354, 355, 357, 369, 370, 371, 373, 389, 400, 405, 412, 414, 418, 424, 425, 426, 435, 441, 449, 540, 544, 558, 572, 586, 588, 590, 591, 592, 594, 595, 598, 601, 605, 610, 612, 613, 619, 620, 625, 626, 629, 630, 633, 637, 638, 640, 642, 643, 647, 651, 653, 654, 655, 657, 658, 659, 662], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 381, 414, 452, 466, 467, 469, 470, 471, 473, 585, 591, 596, 597, 641, 654], "field_map": 25, "anoth": [25, 405, 572, 591, 592, 597, 612, 653, 658, 661, 664], "fill": [27, 155, 156, 157, 447, 592, 595, 597, 641, 653, 654], "empti": [28, 389, 400, 442, 443, 538, 540, 543, 589, 597, 653], "control": [29, 160, 373, 375, 376, 414, 441, 594, 595, 637, 657], "singl": [29, 161, 162, 163, 164, 222, 223, 225, 227, 282, 283, 285, 287, 311, 312, 318, 320, 344, 345, 351, 353, 377, 414, 546, 567, 585, 588, 591, 592, 594, 597, 598, 606, 608, 611, 612, 616, 638, 660, 662], "self": [29, 166, 167, 591, 592, 598, 654, 657, 662], "descrip": 29, "exampl": [29, 47, 127, 170, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 381, 405, 409, 410, 411, 413, 414, 449, 462, 466, 567, 588, 589, 590, 591, 592, 593, 595, 597, 598, 603, 604, 605, 608, 609, 610, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 653, 655, 658, 659, 660, 662, 664], "default_config": 29, "modifi": [29, 45, 74, 163, 464, 493, 589, 597, 598, 606, 617, 635, 660, 662], "environment": [29, 588, 589, 651, 661], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 203, 233, 249, 263, 292, 325, 375, 376, 405, 429, 436, 440, 441, 444, 445, 452, 460, 461, 464, 474, 493, 568, 588, 590, 591, 597, 608, 612, 637, 638, 640, 641, 651, 653, 654, 659, 661], "pyart_config": 29, "point": [29, 31, 33, 47, 123, 155, 156, 157, 167, 220, 225, 242, 243, 257, 280, 285, 292, 309, 314, 315, 318, 342, 347, 348, 351, 367, 368, 371, 373, 377, 412, 413, 414, 425, 426, 435, 447, 452, 454, 466, 540, 568, 571, 575, 585, 588, 590, 592, 594, 597, 600, 606, 619, 626, 636, 637, 640, 644, 647, 651, 655, 657, 659, 660], "new": [29, 47, 48, 50, 131, 133, 140, 147, 152, 163, 174, 176, 183, 190, 195, 427, 439, 445, 449, 466, 467, 469, 572, 582, 594, 597, 598, 600, 601, 612, 638, 641, 642, 647, 651, 654, 655, 662, 664], "execut": [29, 597, 605, 610, 616, 635, 644, 645, 650, 660], "full": [29, 62, 163, 164, 373, 481, 594, 595, 597, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649], "permiss": 29, "secur": 29, "do": [29, 45, 74, 160, 165, 199, 200, 377, 378, 464, 493, 592, 594, 595, 597, 598, 609, 640, 641, 653, 654, 655, 657, 658, 661, 662, 664], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 127, 131, 133, 140, 147, 152, 155, 157, 166, 167, 170, 174, 176, 183, 190, 195, 229, 242, 378, 379, 381, 392, 394, 402, 413, 424, 436, 441, 442, 443, 449, 452, 466, 473, 475, 476, 567, 568, 586, 591, 592, 597, 598, 600, 603, 624, 637, 647, 648, 649, 651, 658, 662], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 141, 142, 160, 184, 185, 372, 381, 452, 462, 464, 466, 470, 471, 473, 475, 493, 553, 588, 590, 592, 597, 598, 599, 600, 601, 637, 640, 641, 654, 657, 659, 661, 662], "home": [29, 594, 595, 598, 603, 609, 662, 664], "make": [29, 31, 452, 540, 544, 545, 547, 548, 590, 591, 592, 594, 595, 596, 597, 598, 599, 601, 612, 620, 629, 637, 640, 647, 651, 653, 654, 661, 662, 664], "adjust": [29, 122, 232, 291, 324, 357, 424, 592, 597, 618, 621, 629, 641], "login": [29, 595], "": [29, 31, 45, 58, 62, 74, 119, 120, 122, 125, 161, 162, 166, 167, 205, 207, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 265, 267, 277, 284, 288, 289, 294, 296, 306, 316, 321, 322, 327, 329, 339, 349, 354, 355, 386, 387, 393, 397, 398, 403, 405, 407, 412, 425, 426, 428, 429, 435, 437, 438, 441, 442, 443, 445, 447, 450, 452, 464, 477, 481, 493, 568, 572, 588, 589, 590, 591, 592, 594, 595, 597, 599, 600, 608, 609, 612, 618, 620, 621, 630, 637, 638, 640, 641, 643, 647, 651, 653, 654, 655, 657, 658, 659, 663], "also": [29, 45, 74, 131, 174, 202, 218, 241, 256, 278, 307, 340, 370, 371, 375, 377, 379, 391, 401, 405, 425, 435, 464, 493, 588, 589, 590, 591, 592, 594, 595, 597, 598, 608, 612, 637, 640, 641, 651, 653, 657, 659, 661, 662, 663, 664], "shell": 29, "session": 29, "modif": [29, 47, 466, 597], "last": [29, 45, 74, 160, 217, 218, 224, 228, 229, 230, 241, 246, 248, 249, 256, 258, 260, 262, 277, 278, 284, 288, 289, 306, 307, 316, 317, 321, 322, 325, 339, 340, 349, 350, 354, 355, 464, 493, 567, 591, 592, 594, 596, 597, 614, 641, 659], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 155, 156, 157, 161, 162, 167, 242, 472, 480, 488, 492, 506, 509, 516, 520, 588, 590, 591, 592, 594, 595, 597, 598, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651, 662], "interact": [30, 588, 591], "weather": [30, 119, 160, 412, 441, 590, 592, 597, 598, 608, 618, 651, 653, 654, 655, 657, 658, 659, 662], "time": [31, 39, 40, 45, 74, 160, 205, 207, 217, 219, 224, 228, 229, 230, 265, 267, 277, 279, 284, 288, 289, 294, 296, 306, 308, 316, 317, 321, 322, 327, 329, 339, 341, 349, 350, 354, 355, 362, 363, 373, 375, 376, 405, 408, 414, 424, 436, 438, 452, 460, 461, 464, 493, 562, 565, 588, 589, 590, 592, 594, 595, 597, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 653, 659, 664], "origin_latitud": [31, 452], "origin_longitud": [31, 452], "origin_altitud": [31, 452], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 203, 205, 214, 217, 219, 222, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 263, 265, 274, 277, 279, 282, 284, 287, 288, 289, 291, 292, 294, 303, 306, 308, 311, 314, 316, 320, 321, 322, 324, 325, 327, 336, 339, 341, 344, 347, 349, 353, 354, 355, 357, 405, 409, 410, 411, 412, 413, 414, 425, 435, 438, 439, 447, 452, 458, 460, 476, 484, 512, 540, 588, 590, 591, 592, 595, 601, 612, 619, 620, 629, 630, 637, 638, 640, 641], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 155, 157, 166, 167, 215, 275, 304, 337, 367, 377, 378, 409, 410, 411, 412, 413, 414, 416, 419, 424, 425, 429, 432, 433, 434, 435, 438, 452, 458, 460, 464, 476, 484, 493, 512, 540, 603, 613, 627, 629, 630, 640, 641, 654], "radar_latitud": [31, 452, 569, 581], "radar_longitud": [31, 452, 569, 581], "radar_altitud": [31, 452], "radar_tim": [31, 452], "radar_nam": [31, 452], "store": [31, 45, 74, 160, 161, 162, 381, 414, 419, 452, 464, 493, 588, 590, 592, 595, 597, 608, 638, 651, 654, 657, 659, 664], "rectilinear": [31, 452], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 367, 404, 405, 412, 413, 414, 452, 454, 460, 464, 493, 606, 611, 616, 619, 651, 652, 660], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 376, 404, 405, 407, 412, 414, 426, 452, 454, 460, 464, 475, 493, 540, 558, 588, 590, 591, 592, 597, 602, 606, 609, 611, 612, 613, 614, 615, 638, 651, 657, 659], "section": [31, 45, 47, 74, 217, 242, 277, 306, 339, 414, 452, 464, 466, 493, 560, 561, 588, 592, 593, 596, 597, 598, 606, 617, 635, 637, 640, 641, 651, 660, 662], "To": [31, 47, 165, 198, 199, 200, 201, 375, 376, 378, 452, 466, 585, 590, 595, 598, 600, 641, 651, 654, 657, 661, 662, 664], "creat": [31, 42, 45, 47, 50, 74, 160, 161, 162, 163, 165, 198, 199, 200, 201, 202, 203, 216, 230, 233, 249, 263, 276, 289, 292, 305, 317, 322, 325, 338, 350, 355, 370, 375, 376, 377, 378, 379, 413, 414, 445, 450, 452, 462, 464, 466, 469, 493, 579, 580, 582, 588, 592, 594, 597, 598, 603, 604, 606, 609, 612, 614, 615, 617, 618, 620, 634, 635, 636, 640, 641, 644, 649, 651, 652, 654, 657, 660, 662], "legaci": [31, 419, 452], "from_legacy_paramet": [31, 452], "ax": [31, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 356, 357, 409, 410, 411, 425, 435, 439, 447, 452, 588, 589, 590, 591, 592, 594, 595, 597, 603, 604, 608, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 633, 637, 638, 639, 640, 641, 642, 643, 647, 655], "moment": [31, 39, 45, 74, 117, 159, 160, 161, 162, 165, 199, 200, 369, 370, 371, 414, 446, 452, 460, 464, 493, 536, 568, 591, 597, 609, 617, 635, 651, 658, 660], "describ": [31, 45, 74, 165, 198, 199, 200, 201, 243, 257, 435, 452, 464, 493, 594, 640, 641], "geograph": [31, 45, 56, 74, 121, 122, 123, 124, 125, 292, 317, 325, 350, 376, 414, 452, 464, 475, 493, 592, 651], "origin": [31, 39, 160, 161, 162, 203, 263, 292, 325, 373, 375, 376, 381, 383, 412, 414, 435, 452, 460, 560, 561, 588, 589, 590, 592, 597, 598, 612, 613, 614, 615, 637, 639, 640, 641, 662], "distanc": [31, 39, 57, 119, 120, 217, 228, 277, 288, 306, 321, 339, 354, 405, 406, 409, 410, 411, 413, 414, 422, 438, 443, 452, 460, 476, 559, 560, 561, 569, 570, 571, 581, 588, 589, 590, 612, 622, 627, 628, 629], "axi": [31, 39, 45, 74, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 307, 308, 309, 310, 311, 312, 316, 317, 319, 320, 321, 322, 324, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 357, 367, 377, 452, 460, 464, 493, 588, 591, 592, 595, 603, 619, 630, 637, 640, 643, 659], "dimension": [31, 39, 160, 162, 412, 426, 435, 447, 452, 460, 612, 637, 640, 641], "space": [31, 45, 74, 123, 219, 279, 308, 341, 378, 414, 424, 425, 435, 438, 452, 464, 493, 588, 591, 609, 640, 653], "along": [31, 161, 164, 242, 245, 246, 247, 248, 259, 260, 261, 262, 452, 559, 560, 561, 570, 571, 582, 584, 590, 591, 592, 597, 640, 647], "three": [31, 162, 165, 200, 377, 426, 435, 447, 452, 591, 600, 637, 640, 641], "repeat": [31, 452], "throughout": [31, 452, 637], "nz": [31, 452], "nx": [31, 452], "ny": [31, 452], "dimens": [31, 160, 367, 414, 418, 419, 425, 435, 436, 438, 441, 443, 447, 452, 558, 582, 588, 591, 592, 597, 613, 638, 640, 641, 653, 657, 659], "transform": [31, 45, 74, 121, 122, 123, 124, 125, 222, 229, 282, 292, 311, 325, 344, 350, 376, 414, 424, 452, 464, 493, 590, 592, 597, 618, 640, 641], "proj": [31, 45, 74, 121, 123, 124, 255, 325, 452, 464, 493, 597], "pyart_aeqd": [31, 45, 74, 121, 123, 124, 452, 464, 493], "nativ": [31, 45, 74, 121, 123, 124, 361, 414, 419, 452, 464, 493, 597], "azimuth": [31, 45, 51, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 203, 204, 217, 219, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 264, 277, 279, 282, 284, 288, 289, 292, 293, 306, 308, 311, 316, 317, 321, 322, 325, 326, 339, 341, 344, 349, 350, 354, 355, 373, 377, 419, 443, 449, 450, 452, 464, 470, 474, 476, 486, 493, 514, 559, 560, 561, 567, 569, 570, 585, 591, 592, 597, 598, 632, 634, 638, 653, 659, 662], "equidist": [31, 45, 74, 121, 122, 123, 124, 125, 222, 282, 311, 344, 350, 377, 414, 452, 464, 493, 592], "pyproj": [31, 45, 74, 121, 123, 124, 452, 464, 493, 597, 661], "projparam": [31, 34, 45, 74, 121, 123, 124, 452, 455, 464, 493], "special": [31, 45, 74, 452, 464, 493, 592], "_include_lon_0_lat_0": [31, 45, 74, 452, 464, 493], "remov": [31, 45, 56, 57, 74, 155, 156, 157, 160, 165, 198, 199, 200, 201, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 382, 388, 389, 395, 399, 400, 425, 426, 435, 452, 464, 475, 476, 493, 590, 592, 595, 597, 598, 603, 614, 620, 629, 637, 640, 655, 658, 662], "interpret": [31, 45, 74, 161, 162, 376, 452, 464, 493, 573, 574, 592, 637], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 247, 248, 255, 257, 259, 261, 262, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 414, 452, 454, 457, 460, 464, 475, 493, 559, 569, 570, 571, 581, 588, 590, 591, 592, 595, 606, 607, 610, 619, 626, 633, 638, 640, 641, 653, 654, 659, 660], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 246, 247, 255, 257, 259, 260, 261, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 414, 452, 454, 457, 460, 464, 475, 493, 559, 569, 570, 571, 581, 588, 590, 591, 592, 595, 606, 607, 610, 619, 626, 633, 638, 640, 641, 653, 654, 659, 660], "ad": [31, 45, 47, 74, 164, 166, 167, 249, 315, 348, 413, 424, 425, 435, 452, 464, 466, 493, 544, 589, 591, 594, 595, 597, 598, 629, 630, 653, 654, 661, 662], "lon_0": [31, 45, 74, 122, 125, 317, 350, 452, 464, 493, 626], "lat_0": [31, 45, 74, 122, 125, 317, 350, 452, 464, 493, 626], "get_projparam": [31, 452], "evalu": [31, 381, 383, 430, 452, 594, 597], "locat": [31, 33, 45, 55, 56, 57, 74, 203, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 292, 306, 307, 308, 311, 312, 314, 316, 317, 318, 319, 321, 322, 325, 339, 340, 341, 344, 345, 347, 349, 350, 351, 352, 354, 355, 369, 370, 372, 378, 405, 412, 413, 414, 452, 454, 464, 474, 475, 476, 493, 540, 553, 559, 569, 570, 571, 588, 589, 590, 592, 594, 597, 598, 624, 626, 638, 647, 648, 649, 651, 657, 661, 662], "up": [31, 45, 74, 131, 133, 140, 147, 152, 156, 157, 174, 176, 183, 190, 195, 416, 419, 426, 429, 432, 433, 444, 452, 464, 493, 558, 589, 590, 594, 595, 596, 597, 600, 637, 640, 655, 659, 663], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 242, 373, 379, 436, 452, 464, 479, 480, 491, 492, 493, 508, 509, 519, 520, 563, 588, 589, 590, 591, 592, 594, 595, 598, 608, 618, 619, 629, 630, 651, 653, 662, 663], "collect": [31, 140, 152, 183, 195, 363, 369, 370, 371, 373, 404, 413, 414, 452, 591, 592, 598, 608, 623, 638, 651, 662, 663, 664], "nradar": [31, 452], "whose": [31, 372, 411, 452, 588], "wa": [31, 56, 57, 140, 161, 162, 183, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 452, 475, 476, 572, 588, 590, 592, 594, 595, 597, 651, 664], "projection_proj": [31, 452], "instanc": [31, 42, 48, 160, 161, 162, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 378, 379, 419, 452, 467, 572, 576, 580, 590, 592, 597], "valueerror": [31, 32, 46, 47, 452, 453, 465, 466, 592], "point_z": [31, 376, 452, 637], "point_x": [31, 376, 452], "point_i": [31, 376, 452], "func": [31, 452, 591, 597], "init_point_x_y_z": [31, 452], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 452, 457, 458, 464, 475, 483, 484, 485, 493, 511, 512, 513, 658], "point_latitud": [31, 376, 452], "point_longitud": [31, 376, 452], "perform": [31, 45, 56, 57, 58, 74, 131, 133, 140, 147, 152, 159, 160, 161, 162, 164, 174, 176, 183, 190, 195, 217, 222, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 282, 284, 287, 288, 289, 306, 311, 316, 317, 320, 321, 322, 325, 339, 344, 349, 350, 353, 354, 355, 369, 372, 377, 435, 441, 452, 464, 475, 476, 477, 493, 585, 591, 592, 602, 603, 604, 606, 614, 615, 619, 651], "invers": [31, 45, 74, 449, 452, 464, 493, 588], "rel": [31, 45, 74, 156, 198, 229, 315, 348, 414, 452, 464, 493, 588, 597, 598, 641, 659, 662], "init_point_longitude_latitud": [31, 452], "point_altitud": [31, 35, 376, 452, 456], "init_point_altitud": [31, 452], "init": [31, 233, 249, 381, 452, 569, 595, 597], "field_dict": [32, 453], "replace_exist": [32, 46, 47, 48, 453, 465, 466, 467, 594, 597, 598, 640, 641, 647, 654, 655, 662], "add": [32, 46, 47, 163, 167, 217, 219, 224, 227, 228, 229, 230, 242, 243, 244, 246, 248, 255, 257, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 440, 453, 465, 466, 589, 590, 591, 597, 598, 612, 618, 619, 620, 629, 630, 632, 638, 640, 641, 642, 647, 655, 661, 662, 664], "replac": [32, 46, 47, 48, 131, 133, 140, 147, 152, 161, 162, 174, 176, 183, 190, 195, 453, 465, 466, 467, 587, 595, 597], "overwrit": [32, 453, 567], "alreadi": [32, 46, 47, 453, 465, 466], "level": [33, 39, 41, 42, 45, 62, 74, 156, 157, 237, 238, 239, 240, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 369, 370, 371, 377, 378, 438, 447, 449, 454, 460, 464, 481, 493, 568, 588, 590, 591, 597, 598, 629, 630, 633, 637, 639, 648, 651, 657, 659, 662], "height": [33, 39, 41, 42, 156, 157, 198, 244, 258, 317, 350, 414, 417, 425, 426, 435, 436, 444, 447, 449, 450, 454, 460, 580, 588, 591, 592, 594, 597, 598, 618, 627, 637, 638, 643, 658, 662], "determin": [33, 45, 74, 160, 161, 162, 242, 244, 246, 248, 255, 258, 260, 262, 317, 350, 358, 361, 369, 370, 373, 378, 379, 418, 425, 428, 429, 430, 432, 433, 435, 447, 449, 454, 464, 493, 567, 568, 575, 580, 583, 591, 592, 597, 598, 640, 647, 662], "same": [33, 45, 47, 55, 56, 57, 74, 122, 125, 133, 147, 160, 176, 190, 229, 317, 350, 367, 373, 377, 378, 379, 414, 425, 426, 435, 438, 444, 454, 464, 466, 474, 475, 476, 493, 544, 567, 569, 581, 585, 588, 592, 595, 598, 608, 629, 630, 637, 640, 641, 653, 658, 662, 664], "interpol": [33, 57, 120, 123, 217, 224, 228, 229, 230, 242, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 363, 369, 413, 414, 436, 443, 444, 449, 454, 476, 580, 592, 597, 598, 609, 640, 641, 657, 662], "extrapol": [33, 120, 123, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 454, 592], "boundari": [33, 120, 123, 164, 235, 236, 255, 350, 443, 454, 544, 592, 642], "center": [33, 45, 57, 74, 119, 120, 122, 123, 125, 161, 217, 222, 224, 228, 229, 230, 243, 245, 246, 247, 248, 257, 258, 259, 260, 261, 262, 277, 282, 284, 288, 289, 292, 306, 311, 316, 317, 321, 322, 339, 344, 349, 350, 354, 355, 369, 371, 409, 410, 411, 454, 464, 476, 493, 540, 544, 558, 588, 590, 591, 592, 594, 618, 647, 655, 659], "2d": [33, 55, 56, 57, 120, 367, 377, 440, 443, 454, 474, 475, 476, 558, 588, 592, 606, 611, 612, 616, 637, 659, 660], "point_": [36, 37, 457, 458], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 141, 142, 184, 185, 406, 408, 449, 459, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 588, 592, 598, 662], "xarrai": [39, 233, 242, 244, 460, 559, 571, 588, 597, 633, 638, 647, 651, 661], "netcdf4": [40, 370, 375, 376, 461, 588, 589, 597, 627, 651, 653, 661, 664], "arm_time_vari": [40, 375, 376, 461], "arm_alt_lat_lon_vari": [40, 376, 461], "save": [40, 205, 217, 219, 224, 228, 229, 230, 237, 250, 265, 277, 279, 284, 288, 289, 294, 306, 308, 316, 317, 321, 322, 327, 339, 341, 349, 350, 354, 355, 376, 378, 461, 592, 594, 651, 652], "netcdf4_class": [40, 375, 376, 461], "netcdf3_class": [40, 375, 376, 461], "netcdf3_64bit": [40, 375, 376, 461], "base_tim": [40, 375, 376, 461, 591, 638], "time_offset": [40, 375, 376, 461, 591, 638], "alt": [40, 56, 376, 461, 475, 591, 592, 595, 597], "lat": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 461, 475, 588, 591, 592, 595, 597, 619, 620, 633, 657], "lon": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 461, 475, 588, 591, 592, 595, 597, 620, 633], "speed": [41, 42, 414, 449, 450, 558, 591, 592, 594, 597, 598, 643, 662], "direct": [41, 62, 373, 441, 449, 450, 481, 597, 598, 643, 662], "horizont": [41, 42, 43, 44, 45, 74, 155, 158, 159, 160, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 362, 363, 449, 464, 493, 580, 590, 591, 594, 597, 598, 620, 630, 648, 659, 662], "wind": [41, 42, 43, 44, 160, 161, 362, 363, 449, 450, 580, 590, 591, 592, 594, 597, 598, 643, 662], "profil": [41, 160, 362, 363, 436, 442, 443, 444, 445, 559, 580, 597, 598, 604, 606, 636, 637, 644, 660, 662], "1d": [41, 42, 120, 123, 440, 588, 597, 659], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 203, 263, 292, 314, 317, 325, 347, 350, 405, 406, 408, 409, 410, 411, 412, 413, 414, 417, 425, 435, 438, 441, 444, 447, 449, 475, 476, 477, 540, 569, 581, 591, 592, 597, 598, 612, 643, 657, 659, 662], "abov": [41, 42, 45, 47, 74, 129, 143, 155, 156, 157, 160, 163, 164, 165, 166, 167, 172, 186, 198, 199, 200, 201, 222, 223, 282, 283, 311, 312, 344, 345, 358, 414, 417, 424, 425, 435, 449, 464, 466, 493, 559, 567, 568, 570, 571, 588, 589, 590, 591, 597, 598, 600, 606, 612, 628, 630, 636, 637, 643, 644, 647, 651, 653, 655, 660, 662, 664], "sea": [41, 42, 45, 74, 449, 464, 493, 591, 597, 598, 662], "were": [41, 42, 131, 133, 140, 174, 176, 183, 449, 590, 592, 594, 598, 662], "sampl": [41, 42, 449, 450, 451, 545, 547, 548, 568, 588, 590, 591, 595, 597, 598, 608, 609, 618, 639, 642, 643, 651, 662], "per": [41, 42, 43, 44, 58, 160, 414, 449, 477, 541, 542, 543, 598, 662], "second": [41, 42, 43, 44, 47, 58, 119, 160, 373, 381, 405, 443, 449, 466, 477, 567, 577, 578, 588, 591, 594, 598, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 658, 659, 662], "north": [41, 45, 74, 242, 244, 255, 317, 350, 464, 493, 559, 571, 588, 591, 592, 622, 659], "east": [41, 217, 228, 242, 277, 288, 306, 321, 339, 354, 559, 571, 588, 591, 592, 622], "u_wind": [41, 42, 449, 450, 598, 643, 662], "compon": [41, 42, 43, 44, 424, 591, 598, 613, 662], "v_wind": [41, 42, 449, 450, 598, 643, 662], "classmethod": 42, "_rang": [45, 74, 422, 464, 493], "scan_typ": [45, 74, 203, 216, 263, 276, 292, 305, 325, 338, 464, 493, 595, 659], "sweep_numb": [45, 74, 464, 493, 591, 597, 627, 653, 659], "sweep_mod": [45, 74, 464, 493, 591, 597, 653, 659], "fixed_angl": [45, 74, 203, 263, 292, 325, 464, 493, 591, 595, 597, 627, 628, 632, 653, 659], "sweep_start_ray_index": [45, 74, 464, 493, 591, 653, 659], "sweep_end_ray_index": [45, 74, 464, 493, 591, 653, 659], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 203, 217, 219, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 373, 443, 464, 471, 476, 487, 493, 515, 561, 567, 575, 588, 591, 592, 594, 597, 612, 613, 639, 653, 659], "altitude_agl": [45, 74, 464, 493, 591, 659], "target_scan_r": [45, 74, 464, 493, 597, 659], "rays_are_index": [45, 74, 464, 493], "ray_angle_r": [45, 74, 464, 493], "scan_rat": [45, 74, 379, 464, 493, 597, 659], "antenna_transit": [45, 56, 57, 74, 140, 152, 183, 195, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 464, 475, 476, 493, 592, 659], "instrument_paramet": [45, 74, 160, 379, 440, 464, 493, 591, 594, 655, 659], "radar_calibr": [45, 74, 464, 493, 659], "rotat": [45, 74, 203, 464, 493], "tilt": [45, 74, 203, 229, 317, 350, 445, 464, 493, 592, 597, 609, 626, 633], "roll": [45, 74, 203, 373, 464, 493, 579, 584], "drift": [45, 74, 203, 464, 493], "pitch": [45, 74, 203, 464, 493], "georefs_appli": [45, 74, 464, 493], "antenna": [45, 56, 57, 74, 119, 120, 140, 152, 183, 195, 198, 201, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 419, 464, 475, 476, 493, 592, 597, 602, 606, 611, 612, 613, 614, 615, 651, 657, 659], "structur": [45, 74, 379, 424, 435, 447, 464, 493, 595, 608, 640, 641, 658], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 127, 161, 162, 165, 170, 198, 199, 200, 201, 230, 289, 322, 355, 377, 411, 413, 414, 424, 425, 435, 441, 464, 469, 470, 471, 473, 474, 475, 476, 477, 493, 572, 590, 591, 592, 597, 598, 602, 605, 606, 608, 647, 651, 655, 658, 659, 660, 662], "global": [45, 74, 464, 493, 588, 613, 659, 661], "4": [45, 74, 119, 120, 364, 367, 412, 416, 424, 444, 464, 493, 588, 589, 590, 591, 596, 598, 608, 609, 613, 616, 618, 627, 628, 629, 630, 632, 633, 637, 640, 641, 643, 647, 648, 651, 658, 662], "repres": [45, 74, 160, 440, 464, 493, 541, 542, 585, 597, 637, 641], "under": [45, 74, 160, 161, 162, 414, 464, 493, 597, 598, 640, 641, 651, 661, 662], "sub": [45, 74, 464, 493, 588, 597], "convent": [45, 74, 160, 464, 493, 588, 591, 592, 608, 651, 659], "meta_group": [45, 74, 464, 493, 659], "scan": [45, 74, 117, 160, 161, 162, 163, 203, 216, 217, 219, 230, 263, 276, 277, 279, 289, 292, 305, 306, 308, 322, 325, 338, 339, 341, 355, 369, 419, 464, 493, 536, 541, 542, 567, 569, 575, 580, 585, 588, 589, 590, 591, 597, 609, 612, 623, 624, 634, 637], "ppi": [45, 74, 161, 162, 163, 164, 216, 220, 224, 276, 280, 284, 305, 309, 316, 317, 338, 342, 349, 350, 443, 464, 493, 541, 542, 546, 549, 551, 560, 561, 567, 588, 589, 592, 597, 606, 611, 616, 617, 620, 621, 633, 635, 646, 648, 650, 651, 659, 660], "rhi": [45, 74, 216, 217, 228, 276, 277, 288, 305, 306, 321, 338, 339, 354, 443, 464, 493, 542, 552, 560, 561, 567, 589, 597, 606, 617, 635, 637, 651, 659, 660], "sector": [45, 74, 464, 493, 588, 597, 659], "multipl": [45, 74, 424, 464, 493, 589, 590, 597, 598, 606, 611, 617, 629, 635, 658, 660, 662, 664], "mode": [45, 62, 74, 360, 464, 481, 493, 588, 591, 597, 598, 637, 659, 661, 662], "ground": [45, 74, 419, 464, 493, 591, 592, 595, 608], "target": [45, 74, 377, 464, 493, 545, 547, 548, 549, 550, 551, 552, 559, 569, 570, 571, 581, 591, 659], "angl": [45, 51, 52, 74, 119, 120, 203, 217, 229, 263, 277, 292, 306, 325, 339, 443, 445, 464, 470, 471, 493, 554, 555, 556, 557, 559, 560, 561, 567, 569, 570, 577, 578, 585, 588, 591, 597, 613, 632, 634, 643, 653, 659], "thr": [45, 74, 464, 493], "index": [45, 60, 74, 89, 165, 200, 230, 244, 246, 248, 258, 260, 262, 289, 322, 355, 377, 405, 419, 445, 464, 479, 493, 508, 588, 590, 591, 592, 594, 597, 652], "rays_per_sweep": [45, 66, 74, 94, 464, 485, 493, 513, 541, 542], "upon": [45, 74, 165, 198, 199, 200, 201, 464, 493, 590, 594, 597], "prior": [45, 47, 74, 164, 166, 167, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 373, 464, 466, 493, 592, 600, 609, 651], "init_rays_per_sweep": [45, 74, 464, 493], "intend": [45, 74, 464, 493], "rate": [45, 74, 416, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 464, 493, 597, 640, 641], "whether": [45, 74, 131, 174, 412, 464, 493, 591, 592, 658], "regular": [45, 74, 378, 464, 493, 592, 595, 618, 637], "angular": [45, 74, 464, 493, 558, 577, 578], "resolut": [45, 74, 217, 219, 220, 224, 225, 228, 229, 230, 255, 277, 279, 280, 284, 285, 288, 289, 306, 308, 309, 316, 317, 318, 321, 322, 339, 341, 342, 349, 350, 351, 354, 355, 369, 414, 424, 425, 435, 441, 447, 464, 493, 544, 590, 591, 592, 595, 609, 623, 626, 647, 648, 655, 657, 658], "express": [45, 74, 464, 493], "360": [45, 74, 163, 164, 318, 351, 464, 493, 567, 597, 634, 635, 643, 653, 659, 660], "represent": [45, 74, 464, 493], "forbidden": [45, 74, 464, 493], "plane": [45, 74, 377, 464, 493, 588, 659], "180": [45, 74, 122, 464, 493, 567, 588, 590, 591, 598, 641, 642, 644, 653, 660, 662], "gate_z": [45, 57, 74, 464, 476, 493], "gate_x": [45, 57, 74, 464, 476, 493], "gate_i": [45, 57, 74, 464, 476, 493], "system": [45, 74, 121, 122, 123, 166, 167, 360, 369, 377, 407, 412, 464, 493, 597, 598, 661, 662], "assum": [45, 74, 119, 120, 160, 163, 438, 441, 443, 444, 464, 493, 567, 590, 594], "earth": [45, 74, 119, 120, 122, 125, 464, 493, 569, 581, 588, 592], "radiu": [45, 74, 119, 120, 122, 125, 409, 410, 411, 412, 413, 414, 425, 435, 447, 464, 493, 569, 581, 640, 657], "model": [45, 74, 119, 120, 161, 370, 376, 424, 464, 493, 591, 642], "init_gate_x_y_z": [45, 74, 464, 493], "gate_latitud": [45, 56, 64, 74, 92, 464, 475, 483, 493, 511, 588], "gate_longitud": [45, 56, 64, 74, 92, 464, 475, 483, 493, 511, 588, 653], "init_gate_longitude_latitud": [45, 74, 464, 493, 653], "gate_altitud": [45, 56, 63, 74, 91, 464, 475, 482, 493, 510, 588], "init_gate_altitud": [45, 74, 464, 493, 653], "actual": [45, 74, 373, 377, 412, 424, 464, 493, 664], "flag": [45, 74, 160, 263, 373, 442, 443, 445, 447, 464, 493, 575, 588, 595, 597, 664], "transit": [45, 56, 57, 74, 140, 152, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 442, 464, 475, 476, 493, 592, 597], "ye": [45, 74, 160, 464, 493], "about": [45, 74, 464, 493, 588, 590, 595, 596, 597], "aircraft": [45, 74, 229, 373, 464, 493, 559], "longitudin": [45, 74, 229, 240, 248, 252, 253, 262, 464, 493], "vertic": [45, 74, 159, 160, 217, 218, 219, 224, 228, 229, 230, 238, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 377, 426, 438, 445, 464, 493, 559, 575, 585, 588, 590, 597, 630, 637, 642, 643, 648], "orthogon": [45, 74, 464, 493], "platform": [45, 74, 464, 493, 588, 600], "right": [45, 74, 464, 493, 590, 593, 594, 595, 597, 618, 619, 637, 651], "wing": [45, 74, 464, 493], "down": [45, 74, 464, 493, 586, 590], "track": [45, 74, 464, 493, 588, 592, 597], "compass": [45, 74, 464, 493], "clockwis": [45, 74, 464, 493], "nose": [45, 74, 464, 493, 597], "had": [45, 74, 378, 464, 493, 595, 597, 608, 664], "georefer": [45, 74, 464, 493], "lead": [45, 74, 464, 493, 592, 612], "centric": [45, 74, 464, 493], "avaiabl": [45, 74, 464, 493], "radar_paramet": [45, 74, 464, 493, 591], "subconvent": [45, 74, 464, 493], "calibr": [45, 74, 428, 464, 493, 591], "ngate": [45, 55, 74, 464, 474, 493, 541, 542, 543, 588, 597, 653, 659], "nrai": [45, 55, 74, 422, 464, 474, 493, 543, 570, 597, 653, 659], "nsweep": [45, 74, 464, 493, 541, 542, 613, 627, 628, 643, 659], "loos": [46, 47, 465, 466], "existing_field_nam": [47, 466], "note": [47, 119, 131, 133, 140, 147, 152, 160, 164, 174, 176, 183, 190, 195, 244, 317, 364, 367, 368, 378, 414, 424, 438, 440, 441, 449, 466, 567, 589, 592, 595, 597, 598, 608, 609, 613, 620, 640, 641, 661, 662], "made": [47, 375, 418, 466, 585, 589, 591, 592, 598, 599, 662], "done": [47, 160, 164, 447, 466, 598, 600, 653, 661, 662, 664], "both": [47, 160, 165, 200, 361, 438, 439, 466, 588, 592, 597, 598, 609, 612, 613, 615, 619, 634, 641, 651, 657, 658, 661, 662], "numpi": [47, 133, 147, 176, 190, 466, 588, 590, 591, 592, 594, 595, 597, 598, 600, 603, 612, 614, 618, 621, 626, 629, 630, 632, 637, 638, 640, 641, 642, 643, 651, 653, 654, 655, 657, 658, 659, 661, 662, 664], "see": [47, 120, 127, 160, 170, 216, 230, 242, 245, 247, 255, 259, 261, 276, 289, 305, 317, 322, 338, 350, 355, 367, 375, 376, 414, 424, 425, 435, 438, 447, 466, 588, 590, 592, 594, 595, 597, 598, 608, 609, 618, 637, 640, 641, 651, 653, 655, 657, 658, 662], "how": [47, 373, 375, 376, 466, 588, 589, 590, 591, 592, 594, 595, 597, 599, 608, 609, 618, 619, 620, 637, 651, 654, 657, 658, 664], "reflectivity_copi": [47, 466], "gatefilt": [48, 155, 156, 157, 160, 161, 162, 163, 164, 165, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 405, 413, 414, 419, 441, 442, 443, 445, 449, 450, 467, 588, 590, 592, 594, 595, 597, 598, 604, 612, 614, 615, 619, 637, 639, 647, 652, 655, 662], "updat": [48, 467, 567, 589, 593, 594, 597, 598, 620, 640, 651, 662], "mask": [48, 131, 133, 136, 140, 147, 151, 152, 160, 161, 162, 163, 165, 174, 176, 179, 183, 190, 194, 195, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 369, 370, 371, 414, 419, 426, 444, 467, 544, 572, 592, 595, 597, 603, 612, 614, 637, 640, 641, 647, 652, 653, 654, 659], "filter": [48, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 164, 165, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 405, 413, 414, 418, 441, 442, 443, 467, 588, 590, 592, 594, 595, 597, 604, 612, 614, 615, 619, 637, 639, 647, 655, 658], "equal": [48, 121, 123, 124, 132, 133, 138, 146, 147, 150, 161, 175, 176, 181, 189, 190, 193, 350, 367, 378, 424, 447, 449, 467, 567, 592, 621, 637, 640, 641, 642, 658], "condit": [48, 127, 131, 133, 140, 147, 152, 160, 170, 174, 176, 183, 190, 195, 378, 430, 467, 588, 604, 654, 658], "append": [48, 467, 594, 595, 597, 643], "filtered_": [48, 467], "prefix": [48, 462, 467], "check": [49, 58, 77, 161, 162, 163, 164, 372, 418, 424, 444, 468, 477, 496, 569, 581, 585, 590, 591, 594, 595, 597, 598, 600, 651, 661, 662, 663], "keyerror": [49, 77, 388, 389, 399, 400, 468, 496, 661], "array_lik": [50, 469, 574], "view": [51, 52, 54, 381, 386, 387, 393, 397, 398, 403, 470, 471, 473, 588, 595, 619, 655, 657, 659], "possibl": [51, 52, 54, 373, 470, 471, 473, 568, 592, 594, 595, 597, 601, 618, 637, 640, 641, 655, 657], "underli": [51, 52, 54, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 470, 471, 473, 592, 651], "get_gate_x_y_z": [54, 473, 629, 630], "obtain": [54, 57, 473, 476, 595, 598, 643, 653, 662], "plot": [54, 57, 202, 203, 204, 205, 206, 207, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 445, 450, 473, 476, 588, 589, 597, 603, 604, 608, 609, 612, 613, 614, 615, 635, 636, 637, 638, 640, 641, 644, 646, 647, 650, 651, 653, 654, 655, 657, 658, 660], "correct": [54, 57, 170, 198, 199, 200, 201, 367, 436, 441, 473, 476, 546, 588, 590, 594, 597, 598, 601, 604, 605, 609, 620, 637, 642, 647, 651, 655, 660, 662], "spatial": [54, 57, 160, 473, 476, 588, 657], "context": [54, 57, 473, 476, 590, 638], "request": [54, 123, 369, 413, 414, 439, 473, 592, 597, 598, 599, 600, 651, 662], "area": [55, 217, 219, 224, 228, 229, 230, 231, 277, 279, 284, 288, 289, 290, 306, 308, 316, 317, 321, 322, 323, 339, 341, 349, 350, 354, 355, 356, 424, 443, 447, 474, 572, 588, 590, 592, 594], "squar": [55, 418, 438, 441, 449, 474], "assumpt": [55, 441, 474], "size": [55, 157, 160, 161, 163, 164, 199, 220, 280, 309, 342, 411, 413, 414, 418, 425, 426, 434, 435, 441, 443, 474, 544, 558, 584, 591, 620, 633, 638, 640, 641], "m": [55, 58, 162, 198, 201, 205, 265, 294, 327, 412, 418, 422, 424, 428, 435, 438, 440, 441, 442, 445, 447, 474, 477, 558, 559, 572, 582, 588, 590, 591, 592, 594, 595, 597, 598, 600, 608, 621, 630, 637, 640, 641, 643, 647, 651, 661, 662], "reset_gate_coord": [56, 475], "filter_transit": [56, 57, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 475, 476, 592], "With": [56, 57, 475, 476, 651, 652, 653], "therefor": [56, 57, 441, 475, 476, 588, 655, 659], "more": [56, 57, 62, 161, 164, 377, 412, 413, 414, 419, 424, 425, 435, 447, 475, 476, 481, 560, 561, 588, 589, 590, 591, 592, 593, 595, 597, 598, 612, 618, 629, 630, 637, 651, 655, 659, 662], "effici": [56, 57, 413, 424, 475, 476, 651, 655], "than": [56, 57, 161, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 424, 425, 426, 435, 441, 475, 476, 567, 572, 590, 591, 592, 595, 637, 640, 664], "through": [56, 57, 242, 440, 475, 476, 591, 592, 594, 596, 598, 612, 618, 662], "No": [56, 57, 162, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 377, 414, 475, 476, 592], "get_field": [57, 476, 629, 630], "check_uniform": [58, 477], "lookuperror": [58, 477], "except": [58, 377, 394, 477, 592, 597, 657], "skip": [58, 161, 162, 372, 418, 477, 590, 597, 598, 662], "nyquist_veloc": [58, 161, 162, 379, 477, 591, 594, 655, 659], "slice": [59, 71, 88, 99, 245, 246, 247, 248, 259, 260, 261, 262, 478, 490, 507, 518, 633, 657, 659], "_io": [62, 481], "textiowrapp": [62, 481], "encod": [62, 378, 481, 597], "utf": [62, 481], "compact": [62, 481], "c": [62, 119, 122, 125, 155, 157, 159, 160, 162, 255, 350, 424, 428, 430, 437, 440, 441, 442, 443, 445, 450, 481, 546, 588, 592, 594, 595, 597, 598, 612, 641, 651, 654, 657, 661, 662, 664], "f": [62, 255, 350, 392, 402, 481, 588, 589, 590, 591, 592, 594, 595, 609, 613, 618, 632, 637, 640, 641, 651, 664], "minim": [62, 441, 447, 481], "everyth": [62, 481, 592, 598, 609, 662], "screen": [62, 481], "gate_": [65, 93, 484, 512], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 392, 402, 441, 443, 486, 487, 488, 489, 490, 491, 492, 514, 515, 516, 517, 518, 519, 520, 594, 659], "over": [69, 72, 73, 97, 100, 101, 160, 161, 198, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 424, 425, 435, 488, 491, 492, 516, 519, 520, 568, 588, 592, 594, 597, 612, 640, 641, 643, 651, 654, 659], "npulses_max": [74, 493, 543], "velocity_bin": [74, 493], "simpl": [117, 405, 536, 597, 654, 655], "vpt": [117, 208, 216, 230, 268, 276, 289, 297, 305, 322, 330, 338, 355, 536, 575, 591, 597], "mean": [117, 119, 449, 536, 544, 554, 555, 568, 573, 577, 578, 588, 591, 597, 598, 601, 608, 609, 637, 658, 659, 662], "kilomet": [119, 425, 435], "equat": [119, 441, 568, 588, 597], "28": [119, 588, 590, 592, 597, 640, 641, 643], "b": [119, 358, 416, 424, 425, 435, 442, 450, 588, 589, 590, 591, 595, 597, 598, 641, 651, 662], "doviak": 119, "zrnic": 119, "sqrt": [119, 122, 588, 629, 630, 643], "r": [119, 121, 122, 123, 124, 125, 160, 162, 166, 167, 209, 222, 223, 243, 257, 269, 282, 283, 298, 311, 312, 313, 314, 331, 344, 345, 346, 347, 416, 424, 425, 426, 429, 432, 433, 434, 435, 447, 449, 568, 572, 588, 598, 608, 621, 629, 630, 637, 640, 641, 662], "sin": [119, 122, 125, 588, 590], "theta_": 119, "arcsin": [119, 122, 590], "frac": 119, "theta_a": 119, "arc": [119, 569], "length": [119, 166, 167, 441, 590, 592, 597], "effect": [119, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 229, 413, 414, 590, 613, 629, 637], "taken": [119, 166, 167, 217, 277, 306, 339, 546, 560, 561, 568, 573, 574, 622], "6371": [119, 122, 125, 569, 581, 590], "km": [119, 122, 125, 203, 220, 225, 226, 232, 263, 280, 285, 286, 291, 292, 309, 318, 319, 324, 325, 342, 350, 351, 352, 357, 422, 424, 425, 435, 441, 544, 569, 581, 589, 590, 591, 592, 595, 613, 622, 627, 628, 630, 637, 638, 648, 657], "doppler": [119, 160, 161, 162, 449, 568, 591, 598, 602, 605, 606, 622, 632, 637, 651, 659, 660, 662], "edit": [119, 596, 597, 598, 662], "1993": 119, "21": [119, 434, 588, 590, 594], "vector": [120, 123, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 422, 438, 588, 590, 592, 597], "util": [120, 157, 160, 161, 229, 428, 451, 591, 595, 597, 598, 609, 621, 634, 638, 640, 641, 651, 662], "antenna_to_cartesian": [120, 597], "detail": [120, 127, 160, 170, 242, 255, 317, 350, 375, 376, 412, 414, 425, 435, 588, 590, 592, 594, 599, 600, 637, 640, 641, 651, 659], "cartograph": [121, 122, 123, 124, 125, 325], "differ": [121, 123, 124, 160, 358, 405, 424, 425, 429, 435, 441, 589, 590, 591, 592, 595, 597, 598, 606, 608, 612, 637, 640, 641, 646, 657, 661, 662], "pass": [121, 123, 124, 160, 161, 162, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 360, 361, 369, 371, 412, 414, 441, 590, 592, 597, 600, 608, 609, 654, 657], "desir": [121, 123, 124, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 381, 425, 435, 449, 539, 582, 590, 591, 638, 658], "6370997": [122, 125], "rho": 122, "arctan2": [122, 643], "correspond": [122, 125, 141, 142, 184, 185, 216, 244, 258, 276, 305, 338, 362, 388, 399, 414, 559, 568, 570, 590, 592, 598, 608, 621, 655, 659, 662], "typic": [122, 125, 127, 131, 133, 140, 147, 152, 161, 170, 174, 176, 183, 190, 195, 377, 412, 413, 613, 664], "snyder": [122, 125], "manual": [122, 125, 595, 597, 600], "geolog": [122, 125], "survei": [122, 125], "profession": [122, 125], "paper": [122, 125, 651], "1395": [122, 125, 597], "1987": [122, 125], "pp": [122, 125], "191": [122, 125], "202": [122, 125], "find": [123, 161, 164, 405, 412, 413, 414, 435, 436, 588, 592, 594, 595, 597, 609, 641, 651, 664], "arcco": 125, "exclude_bas": [127, 170], "boolean": [127, 133, 141, 142, 147, 170, 176, 184, 185, 190, 358, 425, 435, 445, 597, 658], "variou": [127, 163, 165, 170, 198, 199, 200, 201, 559, 571, 590, 597, 606, 636, 651], "exclude_below": [127, 170, 588, 590, 594, 595, 612, 639, 647, 658], "suggest": [127, 170, 589, 597], "begin": [127, 160, 161, 162, 166, 167, 170, 205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 367, 368, 371, 373, 597], "import": [127, 170, 445, 449, 450, 462, 589, 595, 597, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 653, 654, 655, 657, 658, 659, 661], "radar_fil": [127, 170, 604, 618, 620], "nc": [127, 170, 588, 589, 591, 595, 597, 603, 612, 613, 615, 618, 619, 620, 624, 626, 627, 628, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 653, 654, 658], "10": [127, 163, 166, 167, 170, 412, 414, 425, 426, 430, 431, 435, 440, 442, 443, 559, 572, 588, 590, 591, 592, 594, 595, 598, 604, 609, 612, 613, 614, 618, 621, 622, 624, 626, 629, 630, 633, 635, 637, 640, 641, 643, 647, 650, 651, 653, 654, 655, 657, 658, 659, 660, 662], "normalized_coherent_pow": [127, 170, 588, 658], "75": [127, 170, 231, 290, 323, 356, 377, 425, 435, 440, 588, 594, 612, 629, 637, 640, 653, 657, 658], "exclude_mask": [129, 131, 132, 133, 134, 135, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 614], "op": [129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 591], "inclus": [129, 131, 134, 139, 143, 145, 148, 153, 172, 174, 177, 182, 186, 188, 191, 196, 412, 414, 540, 597, 618], "below": [131, 145, 160, 163, 165, 166, 167, 174, 188, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 413, 414, 424, 425, 429, 432, 433, 435, 441, 567, 568, 588, 589, 590, 591, 592, 618, 637, 640, 653, 655, 658, 663], "compar": [131, 160, 174, 419, 558, 598, 606, 611, 616, 618, 637, 640, 641, 660, 662], "against": [131, 160, 174, 599, 600, 629], "mark": [131, 140, 141, 142, 152, 160, 174, 183, 184, 185, 195, 589], "exclus": [131, 174, 613], "oper": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 373, 412, 430, 434, 435, 443, 447, 588, 591, 592, 598, 640, 641, 661, 662], "merg": [131, 133, 140, 147, 152, 161, 174, 176, 183, 190, 195, 363, 567, 598, 600, 662], "AND": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195], "OR": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 588], "gener": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 204, 205, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 242, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 264, 265, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 294, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 327, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 376, 379, 394, 405, 413, 414, 436, 441, 590, 592, 593, 595, 597, 600, 603, 604, 606, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651], "meet": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 375, 651], "result": [131, 133, 140, 147, 152, 160, 161, 162, 174, 176, 183, 190, 195, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 360, 376, 381, 414, 419, 445, 450, 579, 590, 591, 592, 598, 609, 613, 637, 641, 642, 651, 657, 662], "previous": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 608, 637, 640], "becaus": [131, 133, 140, 174, 176, 183, 441, 640, 664], "invalid": [131, 133, 135, 140, 165, 174, 176, 178, 183, 198, 199, 200, 201, 588, 595], "shape": [133, 147, 176, 190, 367, 444, 588, 591, 592, 594, 595, 597, 598, 640, 653, 657, 658, 659, 662], "v1": [134, 139, 148, 153, 177, 182, 191, 196, 588, 589, 600, 661], "v2": [134, 139, 148, 153, 177, 182, 191, 196, 598, 662], "insid": [134, 148, 177, 191, 654], "interv": [134, 139, 148, 153, 161, 165, 177, 182, 191, 196, 200, 558, 573, 574, 588, 595, 597], "occur": [135, 154, 164, 178, 197, 369, 370, 588, 655, 659], "nan": [135, 154, 160, 165, 178, 197, 200, 443, 588, 591, 597, 638], "inf": [135, 154, 165, 178, 197, 200, 597], "outsid": [139, 153, 165, 182, 196, 200, 224, 227, 229, 230, 242, 244, 246, 248, 258, 260, 262, 284, 287, 289, 316, 317, 320, 322, 349, 350, 353, 355, 424, 592, 597, 598, 637, 662], "trans_valu": [140, 152, 183, 195], "construct": [140, 152, 183, 195, 414, 591], "element": [141, 142, 160, 161, 162, 163, 164, 184, 185, 379, 413, 414, 418, 444, 558, 573, 574, 577, 578, 590, 591, 592], "NOT": [141, 142, 184, 185], "gate_includ": [141, 184, 658], "lost": [141, 142, 184, 185, 443, 585, 588, 657], "again": [141, 142, 184, 185, 592, 600, 609, 620, 641, 661], "gate_exclud": [142, 185, 658], "z_offset": 155, "doc": [155, 156, 157, 167, 588, 592, 597, 598, 600, 603, 609, 651, 661, 662, 664], "15": [155, 441, 572, 588, 589, 590, 591, 595, 603, 604, 609, 618, 621, 627, 628, 629, 630, 633, 634, 637, 638, 641, 643, 655, 659], "fzl": [155, 156, 157, 166, 167], "4000": [155, 166, 167, 657], "rhv_min": 155, "ncp_min": 155, "a_coef": [155, 157], "06": [155, 588, 590, 594, 616, 660], "beta": [155, 157, 428, 429, 430, 431, 432, 433], "refl_field": [155, 156, 157, 165, 166, 167, 199, 200, 414, 417, 423, 424, 425, 429, 431, 432, 433, 434, 440, 447, 603, 640, 642], "ncp_field": [155, 165, 166, 167, 200, 603], "rhv_field": [155, 165, 166, 167, 199, 200, 440, 603, 642], "spec_at_field": [155, 156, 157], "corr_refl_field": [155, 156, 157], "attenu": [155, 156, 157, 428, 429, 432, 597, 602, 605, 606, 642, 651, 660], "phi": [155, 157, 166, 597, 603], "copol_coeff": [155, 546, 603, 638, 639, 653], "norm_coherent_pow": [155, 546, 603, 653], "proc_dp_phase_shift": [155, 603, 638, 653], "reflectivity_horizont": [155, 160, 546, 589, 603, 612, 618, 620, 624, 626, 627, 628, 632, 634, 637, 638, 639, 640, 641, 648, 653, 654], "supress": [155, 233, 244, 249, 317, 350, 592, 597], "freez": [155, 156, 157], "layer": [155, 156, 157, 198, 201, 377, 429, 441, 445, 544], "combin": [155, 156, 157, 576, 588, 590, 591, 598, 600, 662], "minimum": [155, 165, 166, 167, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 412, 414, 424, 425, 426, 435, 540, 544, 568, 588, 590, 592, 595, 597, 637, 640, 657], "normal": [155, 165, 166, 167, 200, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 426, 592, 629, 637], "coher": [155, 165, 166, 167, 200], "power": [155, 157, 165, 166, 167, 200, 428, 429, 430, 431, 432, 433, 588, 591], "zdr_field": [155, 156, 157, 159, 199, 420, 440, 642], "spec_at": [155, 156, 157, 603, 642], "cor_z": [155, 156, 157, 603, 642], "gu": [155, 157], "et": [155, 157, 159, 424, 425, 426, 430, 434, 435, 440, 441, 447, 640, 641], "al": [155, 157, 159, 424, 425, 426, 430, 434, 435, 440, 441, 442, 447, 640, 641], "heavi": [155, 157, 572, 590, 621, 629, 641], "rain": [155, 157, 424, 428, 429, 430, 431, 434, 435, 447, 597, 621, 629, 640, 641, 642], "jamc": [155, 157, 443, 559], "2011": [155, 157, 638], "50": [155, 157, 558, 588, 589, 590, 591, 594, 615, 633, 637, 638, 642, 657, 659], "39": [155, 157, 588, 590, 638], "58": [155, 157, 424, 591, 637, 638], "pia_coef": 156, "pida_coef": 156, "temp_field": [156, 157, 201, 440, 642], "iso0_field": [156, 157, 198], "pia_field": [156, 157], "spec_diff_at_field": [156, 157], "pida_field": [156, 157], "corr_zdr_field": [156, 157], "temp_ref": [156, 157, 642], "linear": [156, 166, 167, 242, 369, 425, 435, 443, 568, 580, 591, 592, 597, 640, 641, 651], "dependec": 156, "comput": [156, 157, 159, 199, 420, 421, 422, 423, 425, 435, 441, 442, 443, 554, 555, 556, 557, 558, 573, 574, 577, 578, 584, 588, 591, 597, 637, 642, 643, 651], "either": [156, 157, 160, 161, 162, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 320, 321, 322, 339, 340, 341, 349, 353, 354, 355, 363, 392, 402, 429, 432, 433, 598, 637, 640, 661, 662], "frequenc": [156, 157, 379, 426, 428, 429, 430, 432, 433, 437, 440, 441, 442, 443, 591, 637], "refl": [156, 157, 627], "integr": [156, 157, 588, 591], "pida_coeff": 156, "0c": [156, 157], "isotherm": [156, 157], "height_over_iso0": [156, 157, 658], "fixed_fzl": [156, 157], "pia_dict": [156, 157], "spec_diff_at": [156, 157, 642], "pida_dict": [156, 157], "cor_zdr": [156, 157, 642], "smooth_window_len": 157, "d": [157, 162, 205, 265, 294, 327, 381, 382, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 424, 443, 450, 559, 588, 590, 591, 592, 595, 598, 638, 651, 662], "smooth": [157, 164, 441, 569, 581, 592, 629, 630, 657], "window": [157, 160, 166, 167, 199, 418, 443, 449, 558, 567, 579, 584, 597, 598, 651, 662], "expon": [157, 166, 167, 416, 428, 429, 430, 431, 432, 433], "law": [157, 428, 429, 430, 431, 432, 433], "ryzhkov": [157, 428, 445, 559], "potenti": [157, 428, 588, 595], "rainfal": [157, 424, 428, 429, 430, 431, 432, 433, 434, 441, 443], "estim": [157, 198, 201, 219, 279, 308, 341, 422, 428, 429, 430, 431, 432, 433, 434, 441, 442, 443, 445, 559, 568, 591, 597, 640, 641], "mitig": [157, 428], "partial": [157, 428, 597], "beam": [157, 411, 413, 414, 428, 591], "blockag": [157, 428], "network": [157, 161, 371, 428, 590], "jaot": [157, 159], "2014": [157, 428, 442, 445, 651], "31": [157, 369, 428, 588, 590, 591, 594, 609, 638], "599": [157, 428], "619": [157, 428, 597], "bia": [158, 597], "magnitud": [158, 441, 643, 659], "corrected_field": 158, "urhohv_field": 159, "snr_field": [159, 417, 423], "nh_field": 159, "nv_field": 159, "rhohv_field": [159, 420, 421], "nois": [159, 417, 422, 423, 568, 591, 595, 597, 637, 655], "eq": [159, 627], "6": [159, 199, 424, 429, 588, 590, 591, 595, 609, 612, 613, 614, 618, 619, 623, 626, 637, 638, 639, 642, 643, 653, 655, 658, 659], "2006": [159, 609], "subtract": [159, 425, 435], "uncorrect": [159, 588, 647], "snr": [159, 417, 423, 597], "channel": [159, 377, 588, 591, 597, 600], "meteo": 159, "franc": 159, "23": [159, 588, 590, 591, 610], "1340": 159, "1356": [159, 597], "last_radar": 160, "sonde_profil": 160, "filt": 160, "rsl_badval": 160, "131072": 160, "keep_origin": [160, 161, 162], "set_limit": [160, 161, 162, 589, 621, 622, 623, 625, 627, 628, 629, 630, 632, 637], "vel_field": [160, 161, 162, 418, 450, 637, 647, 655], "corr_vel_field": [160, 161, 162], "last_vel_field": 160, "max_shear": 160, "05": [160, 413, 414, 588, 590, 616, 633, 637, 638, 660], "sign": [160, 597, 629, 630, 637], "dealia": [160, 161, 162, 427, 594, 597, 602, 605, 606, 637, 646, 650, 655, 660], "4dd": [160, 597], "univers": [160, 374, 434, 588, 597, 651], "washington": 160, "previou": [160, 317, 350, 592, 595, 597, 600], "sound": [160, 597], "For": [160, 245, 247, 259, 261, 367, 377, 413, 440, 441, 588, 589, 591, 592, 597, 598, 601, 608, 612, 637, 642, 651, 658, 659, 662, 664], "best": [160, 590, 637], "argument": [160, 161, 162, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 277, 284, 288, 289, 306, 313, 314, 315, 316, 317, 318, 321, 322, 339, 346, 347, 348, 349, 350, 351, 354, 355, 369, 371, 379, 381, 412, 414, 442, 443, 597, 598, 662], "_fourdd_interfac": 160, "fourdd_dealia": 160, "fine": 160, "tune": [160, 640, 641], "behavior": [160, 317, 350, 367, 381, 592, 597, 601], "fourdd": 160, "document": [160, 245, 247, 255, 259, 261, 317, 350, 370, 375, 376, 580, 586, 589, 591, 592, 593, 595, 598, 599, 651, 657, 662], "dealias": [160, 161, 162, 427, 597, 598, 604, 608, 647, 651, 652, 662], "mean_doppler_veloc": [160, 591, 595, 632, 637, 638, 647, 653], "successfulli": 160, "greatli": 160, "improv": [160, 442, 443, 572, 592, 600, 621, 641], "final": [160, 442, 443, 588, 589, 595, 596, 600, 613, 637, 640], "horizontalwindprofil": [160, 362, 363, 450, 580, 597, 598, 662], "sond": [160, 161, 362, 363, 436, 597, 604], "moment_based_gate_filt": [160, 161, 162, 414, 590], "bergen": 160, "alber": 160, "bad": [160, 441, 442, 443, 447], "rsl": [160, 361, 372, 373, 597, 651, 661], "procedur": [160, 161, 162], "fail": [160, 161, 162, 367, 377, 597, 598, 662], "otherwis": [160, 388, 399, 429, 432, 433, 438, 600], "maxshear": 160, "maximum": [160, 161, 165, 166, 167, 198, 199, 200, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 358, 377, 412, 414, 419, 425, 429, 432, 433, 435, 441, 540, 544, 558, 567, 575, 588, 590, 592, 637, 639, 640, 647, 659], "shear": 160, "incorpor": [160, 435, 640], "match": [160, 163, 164, 203, 263, 292, 325, 373, 405, 595, 597, 612, 620, 641], "toward": 160, "neg": [160, 217, 228, 277, 288, 306, 321, 339, 354, 441, 567, 588, 597, 618], "compthresh": 160, "fraction": [160, 426, 590, 637, 640, 659], "threshold": [160, 163, 164, 165, 198, 199, 200, 201, 358, 424, 425, 429, 432, 433, 435, 568, 572, 588, 590, 594, 637, 640, 647, 655, 658], "continu": [160, 162, 591, 597, 598, 662], "unfold": [160, 161, 166, 167, 441], "compthresh2": 160, "thresh": [160, 429, 432, 433], "adjac": [160, 592], "count": [160, 426, 612, 655, 659], "assign": [160, 590, 597, 640], "question": [160, 359, 414, 592, 651], "ckval": 160, "absolut": [160, 558, 641], "stdthresh": 160, "deviat": [160, 544, 556, 557, 574, 588, 655], "portion": [160, 594, 657], "epsilon": 160, "miss": [160, 440, 441, 442, 443, 447, 588, 597, 609], "maxcount": 160, "allow": [160, 163, 164, 216, 276, 305, 338, 405, 424, 559, 567, 589, 592, 595, 597, 601, 612, 659, 664], "fold": [160, 161, 608], "pass2": 160, "retain": [160, 161, 162, 165, 198, 199, 200, 201, 585], "rm": 160, "what": [160, 169, 414, 588, 591, 592, 594, 595, 596, 597, 598, 608, 618, 647, 653, 655, 658, 662, 664], "left": [160, 315, 348, 590, 592, 594, 595, 618, 620, 637], "proxim": 160, "side": [160, 595, 637], "doubl": [160, 377, 640], "captur": [160, 424, 647], "suffici": [160, 637], "good": [160, 161, 588, 589, 600], "mingood": 160, "ba_mincount": 160, "neighbor": [160, 369, 414, 588, 597, 613, 657], "ba_edgecount": 160, "usuccess": 160, "radialvelvolum": 160, "lastvelvolum": 160, "unfoldedvolum": 160, "sondvolum": 160, "vr_corr": 160, "due": [160, 419, 424, 588, 590, 592, 597, 612, 655, 661, 664], "call": [160, 163, 216, 217, 219, 224, 228, 229, 230, 244, 276, 277, 279, 284, 288, 289, 305, 306, 308, 316, 317, 321, 322, 338, 339, 341, 349, 350, 354, 355, 372, 377, 381, 559, 571, 589, 591, 592, 598, 600, 655, 659, 662, 664], "999": [160, 381, 588, 597], "long": [160, 430, 597, 641, 654, 659], "n": [160, 418, 424, 440, 558, 588, 590, 591, 592, 594, 595, 608, 612, 613, 621, 632, 634, 638, 640, 641, 645, 651, 664], "jame": 160, "houz": [160, 358, 425, 426, 435, 447, 637, 640, 641], "jr": [160, 425, 435, 447, 640, 641], "four": [160, 369, 370, 372], "dealis": 160, "scheme": [160, 358, 412, 425, 435, 441, 589, 640], "2001": 160, "18": [160, 586, 588, 590, 619, 630, 637, 650], "1674": 160, "ref_vel_field": 161, "interval_split": 161, "interval_limit": 161, "skip_between_rai": 161, "100": [161, 163, 165, 200, 220, 225, 242, 280, 285, 309, 342, 379, 450, 588, 590, 591, 592, 594, 615, 619, 629, 630, 637, 643], "skip_along_rai": 161, "nyquist_vel": [161, 162, 594, 637, 647, 655], "check_nyquist_uniform": [161, 162, 418], "rays_wrap_around": [161, 162], "region": [161, 167, 255, 317, 350, 419, 424, 572, 588, 590, 591, 592, 594, 595, 597, 598, 602, 605, 606, 608, 621, 640, 641, 647, 658, 660, 662], "similar": [161, 591, 592, 612, 657], "pair": [161, 242, 369, 381, 389, 394, 400, 590, 653], "accomplish": [161, 373, 606, 646], "problem": [161, 166, 167, 292, 325, 414, 609], "dynam": [161, 588], "reduct": 161, "anchor": 161, "onc": [161, 592, 598, 600, 640, 661, 662, 664], "complet": [161, 597], "simul": [161, 580, 597], "simulated_vel_from_profil": [161, 598, 662], "segment": [161, 313, 314, 346, 347, 597], "split": [161, 572, 588], "larger": [161, 592, 640], "longer": [161, 567, 590, 597, 598, 651, 661, 662], "process": [161, 166, 167, 588, 591, 594, 595, 597, 598, 600, 608, 641, 651, 662], "better": [161, 220, 225, 280, 285, 309, 318, 342, 351, 595, 597, 641, 651, 655], "seem": 161, "compromis": 161, "artifact": [161, 597, 655, 657], "free": [161, 593, 594, 651], "cover": [161, 588], "entir": [161, 162, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 414, 582, 588, 591, 592, 595, 637], "join": [161, 462, 597], "gap": [161, 163, 164, 657], "connect": [161, 162], "disabl": [161, 162, 165, 198, 199, 200, 201], "across": [161, 590, 597, 637, 639], "so": [161, 217, 228, 277, 288, 306, 321, 339, 354, 373, 414, 588, 591, 592, 594, 595, 597, 598, 608, 609, 637, 640, 651, 662, 664], "averag": [161, 358, 425, 435, 568, 573, 594, 640, 641, 643], "individu": [161, 162, 414, 595], "attempt": [161, 162, 375, 376, 597], "de": [161, 162, 348, 551, 552], "alias": [161, 162, 551, 552, 594, 597, 655, 659], "corr_vel": [161, 162], "unwrap_unit": 162, "skip_check": [162, 597], "multi": [162, 597], "unwrap": [162, 166, 167, 597], "independ": 162, "often": [162, 419], "give": [162, 377, 592, 595, 599, 600, 647, 648, 649, 651, 655, 658], "superior": 162, "lower": [162, 242, 244, 246, 248, 258, 260, 262, 424, 591, 595, 613, 614, 615], "contamin": [162, 447], "clutter": [162, 595, 655, 658], "poor": 162, "verif": [162, 559, 597], "appropi": [162, 216, 276, 305, 338], "offer": [162, 589], "extrem": [162, 637], "miguel": 162, "arevallilo": 162, "herraez": 162, "david": [162, 592], "burton": 162, "michael": [162, 592, 595], "lalor": 162, "munther": 162, "gdeisat": 162, "fast": 162, "two": [162, 379, 412, 425, 435, 438, 439, 447, 544, 576, 577, 578, 590, 591, 592, 594, 595, 597, 600, 606, 611, 616, 617, 619, 634, 635, 654, 657, 660], "sort": [162, 590, 594, 596, 597], "reliabl": 162, "follow": [162, 165, 199, 200, 375, 376, 378, 379, 392, 402, 413, 414, 424, 440, 441, 588, 590, 591, 592, 594, 595, 598, 600, 601, 608, 638, 651, 661, 662], "noncontinu": 162, "optic": 162, "vol": 162, "41": [162, 590, 638, 643, 657], "2002": 162, "7437": 162, "abdul": 162, "rahman": 162, "h": [162, 205, 255, 265, 294, 327, 350, 445, 568, 588, 590, 591, 612, 620, 637], "osten": 162, "gorecki": 162, "e": [162, 164, 166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 362, 377, 392, 402, 424, 425, 426, 435, 441, 447, 572, 588, 589, 591, 592, 598, 608, 621, 637, 640, 641, 661, 662], "l": [162, 166, 167, 221, 225, 226, 255, 281, 285, 286, 310, 319, 343, 350, 352, 421, 435, 572, 588, 592, 621, 637, 641], "novak": 162, "ed": 162, "metrologi": 162, "2005": [162, 425, 435, 640, 641], "32": [162, 424, 544, 588, 597, 618, 622, 623, 624, 634, 638, 641, 643, 659], "40": [162, 255, 424, 588, 591, 595, 604, 613, 615, 620, 624, 626, 629, 637, 640, 641, 647], "intern": [162, 592], "societi": [162, 416, 419, 430], "photon": 162, "label_dict": [163, 164], "delta": [163, 164, 442], "despeckl": [163, 597, 637], "identifi": [163, 164, 358, 425, 435, 568, 588, 592, 594, 621, 640, 641, 658], "small": [163, 164, 424, 425, 435, 447, 597, 612, 613, 629], "investig": [163, 164, 445, 608], "scipi": [163, 164, 441, 580, 588, 597, 598, 629, 630, 651, 661, 662, 664], "core": [163, 164, 358, 377, 405, 414, 424, 425, 435, 442, 443, 559, 571, 591, 595, 597, 598, 603, 640, 662], "queri": [163, 164, 414, 588, 592, 595], "speckl": [163, 640], "find_object": 163, "tupl": [163, 164, 217, 219, 222, 223, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 277, 279, 282, 283, 284, 287, 288, 289, 291, 306, 308, 311, 312, 316, 317, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 353, 354, 355, 357, 389, 400, 412, 414, 418, 438, 439, 540, 558, 592, 597], "contigu": [163, 164], "perman": 163, "deg": [163, 164, 198, 201, 441, 582, 588, 643], "label": [164, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 282, 283, 284, 287, 288, 289, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 312, 315, 316, 317, 320, 321, 322, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 344, 345, 348, 349, 350, 353, 354, 355, 585, 588, 590, 592, 594, 595, 597, 612, 619, 620, 629, 630, 634, 642], "period": [164, 567, 588, 591, 595, 655], "account": [164, 597], "g": [164, 377, 412, 435, 441, 443, 450], "examin": [164, 360, 373, 376, 591, 594, 598, 651, 662], "box": [164, 377, 642], "alwai": [164, 361, 373, 424, 425, 435, 441, 592, 597, 601, 651], "readi": 164, "min_ncp": [165, 166, 200], "min_rhv": [165, 166, 199, 200], "min_refl": [165, 200], "20": [165, 199, 200, 445, 559, 588, 589, 590, 591, 592, 594, 595, 608, 609, 612, 613, 619, 620, 621, 624, 626, 627, 628, 629, 630, 632, 637, 639, 640, 641, 644, 648, 649, 653, 657, 659, 660], "max_refl": [165, 200], "undesir": [165, 198, 199, 200, 201, 414], "cross": [165, 199, 200, 217, 220, 242, 277, 280, 306, 309, 339, 342, 560, 561, 588, 591, 594, 597, 606, 617, 626, 635, 637, 640, 659, 660], "ratio": [165, 199, 200, 231, 290, 323, 356, 417, 420, 588, 591, 594, 595, 659], "min_rhi": [165, 200], "criteria": [165, 198, 199, 200, 201, 414, 441, 447, 595], "built": [165, 198, 199, 200, 201, 413, 414], "lowest": [165, 198, 199, 200, 201, 419, 444, 594, 608, 612, 638, 640, 641], "greatest": [165, 200], "self_const": [166, 167], "60000": [166, 167, 615, 619, 657], "low_z": [166, 167], "high_z": [166, 167], "53": [166, 167, 588, 590, 594, 635], "min_phidp": [166, 167], "01": [166, 167, 315, 348, 441, 588, 590, 591, 594, 595, 605, 616, 618, 635, 660], "sys_phas": 166, "overide_sys_phas": 166, "nowrap": [166, 167], "really_verbos": [166, 167], "lp_solver": [166, 167], "pyglpk": [166, 167, 597, 651, 661], "kdp_field": [166, 167, 429, 430, 432, 433, 440, 441, 442, 443, 642], "unf_field": [166, 167], "window_len": [166, 167], "proc": [166, 167, 441, 597], "coef": [166, 167, 597], "914": [166, 167, 597], "lp": [166, 167, 597, 651], "consist": [166, 167, 597, 637, 657], "factor": [166, 167, 379, 419, 428, 429, 430, 431, 432, 433, 558, 588, 589, 591, 597, 620, 628, 634, 657], "low": [166, 167, 369, 441, 613, 621], "high": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 424, 441, 591, 592, 594, 613, 642], "copolar": [166, 167, 440, 639], "automat": [166, 373, 378, 379, 414, 418, 447, 590, 592, 595, 597, 598, 600, 624, 651, 662], "lpx": [166, 167], "messag": [166, 167, 233, 249, 369, 589, 597, 600, 609], "suppress": [166, 167, 441], "cvxopt": [166, 167, 597, 651, 661], "cylp": [166, 167, 597, 651, 661, 664], "cylp_mp": [166, 167], "modul": [166, 167, 546, 586, 592, 597, 598, 608, 609, 651, 654, 655, 657, 658, 659, 661, 662], "solv": [166, 167, 596, 597], "horizon": [166, 167, 440], "sobel": [166, 167], "worker": [166, 167], "link": [166, 167, 590, 591, 594, 595, 597], "1z": [166, 167], "reproc_phas": [166, 167], "sob_kdp": [166, 167], "recalcul": [166, 167, 653], "giangrand": [166, 167, 651], "mcgraw": [166, 167], "lei": [166, 167], "applic": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 425, 435, 579, 592, 594, 598, 662], "program": [166, 167, 597, 598, 651, 662], "atmo": [166, 167, 424, 434, 440, 445, 559, 572, 598, 621, 641, 662], "tech": [166, 167, 440, 572, 621, 641], "2013": [166, 167, 442, 445, 659], "30": [166, 167, 424, 425, 435, 588, 590, 591, 592, 595, 612, 613, 620, 624, 626, 637, 640, 641, 655], "1716": [166, 167], "system_phas": 167, "ncpt": 167, "first_gate_sysp": 167, "carri": 167, "smaller": [167, 350, 414, 588, 591, 592, 598, 640, 662], "off": [167, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 439, 445, 588, 592, 618, 640, 641], "custom": [168, 216, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 276, 277, 278, 279, 284, 288, 289, 305, 306, 307, 308, 316, 317, 321, 322, 338, 339, 340, 341, 349, 350, 354, 355, 413, 424, 592, 657], "max_h_iso0": 198, "thick": [198, 201], "400": [198, 201, 597, 653], "beamwidth": [198, 201], "primarili": [198, 201], "melt": [198, 201, 429, 441, 445, 572, 621, 640, 641, 642], "db": [198, 201, 417, 595, 629, 659], "phi_field": 199, "textzdr_field": 199, "textrhv_field": 199, "textphi_field": 199, "textrefl_field": 199, "wind_siz": [199, 418, 584, 655], "7": [199, 367, 449, 584, 588, 590, 591, 592, 594, 598, 600, 609, 619, 621, 626, 633, 637, 644, 658, 659, 662], "max_textphi": 199, "max_textrhv": 199, "max_textzdr": 199, "85": [199, 588, 592, 643], "max_textrefl": 199, "move": [199, 568, 590, 594, 597, 612], "highest": 199, "min_temp": 201, "There": [202, 590, 592, 594, 600, 618, 661, 664], "colorblind": [202, 589, 594, 618], "friendli": [202, 589, 594, 597, 618], "revers": [202, 217, 228, 277, 288, 306, 321, 339, 354, 373, 441, 597], "_r": 202, "matplotlib": [202, 217, 219, 222, 223, 224, 228, 229, 230, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 288, 289, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 377, 588, 589, 590, 591, 594, 595, 597, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 651, 653, 654, 655, 657, 658, 661, 664], "pyart_colormap": 202, "bluebrown10": [202, 618], "bluebrown11": [202, 618], "brbu10": [202, 618], "brbu12": [202, 618], "bu10": [202, 618], "bu7": [202, 618], "budor12": [202, 618], "budor18": [202, 618], "budrd12": [202, 618], "budrd18": [202, 618], "bugr14": [202, 618], "bugy8": [202, 618], "buor10": [202, 618], "buor12": [202, 618], "buor8": [202, 618], "buorr14": [202, 618], "carbone11": [202, 618], "carbone17": [202, 618], "carbone42": [202, 618], "cat12": [202, 618], "ewilson17": [202, 618], "grmg16": [202, 618], "gray5": [202, 618], "gray9": [202, 618], "nwsref": [202, 618], "nwsvel": [202, 618], "nws_spw": [202, 618], "pd17": [202, 618], "rrate11": [202, 618], "rdylbu11b": [202, 618], "refdiff": [202, 618], "scook18": [202, 618], "stepseq25": [202, 618], "symgray12": [202, 618], "theodore16": [202, 618], "wild25": [202, 618], "langrainbow12": [202, 618], "homeyerrainbow": [202, 597, 618], "balanc": [202, 597, 618], "chasespectr": [202, 618], "spectralextend": [202, 618], "displai": [203, 217, 219, 224, 228, 229, 230, 232, 263, 277, 279, 284, 288, 289, 291, 292, 306, 308, 316, 317, 321, 322, 324, 325, 339, 341, 349, 350, 354, 355, 357, 377, 419, 449, 450, 589, 590, 591, 592, 594, 595, 597, 598, 603, 604, 608, 609, 613, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 653, 654, 655, 657, 658, 662], "airborn": [203, 597], "plot_var": [203, 263, 292, 325], "order": [203, 263, 292, 325, 358, 373, 378, 379, 405, 425, 435, 441, 558, 588, 595, 597, 598, 603, 640, 641, 651, 662], "cb": [203, 263, 292, 325, 620, 641], "colorbar": [203, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 249, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 316, 317, 320, 321, 322, 325, 339, 340, 341, 349, 350, 353, 354, 355, 588, 590, 591, 592, 597, 606, 612, 617, 618, 634, 635, 637, 641, 660], "loc": [203, 263, 292, 325, 588, 590, 594, 595, 619], "titl": [204, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 238, 239, 240, 242, 244, 246, 248, 251, 252, 253, 258, 260, 262, 264, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 589, 590, 591, 592, 594, 596, 597, 603, 604, 612, 620, 622, 623, 625, 627, 628, 632, 659], "ext": [205, 237, 250, 265, 294, 327], "png": [205, 237, 250, 265, 294, 327, 589, 590, 592, 594], "datetime_format": [205, 207, 265, 267, 294, 296, 327, 329], "use_sweep_tim": [205, 207, 265, 267, 294, 296, 327, 329], "form": [205, 219, 237, 250, 265, 279, 294, 308, 327, 341, 588, 592, 597], "radar_name_field_sweep_tim": [205, 265, 294, 327], "datetim": [205, 207, 224, 228, 230, 265, 267, 284, 288, 289, 294, 296, 316, 321, 322, 327, 329, 349, 354, 355, 362, 363, 379, 562, 563, 564, 565, 566, 590, 594, 597], "strftime": [205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 590, 591], "suitabl": [205, 237, 250, 265, 294, 327, 424, 592], "xaxi": [209, 212, 269, 272, 298, 301, 331, 334, 620], "static": [210, 211, 220, 221, 225, 231, 232, 270, 271, 280, 281, 285, 290, 291, 299, 300, 309, 310, 323, 324, 332, 333, 342, 343, 356, 357, 589], "yaxi": [210, 211, 213, 214, 215, 270, 271, 273, 274, 275, 299, 300, 302, 303, 304, 332, 333, 335, 336, 337], "keyword": [216, 276, 305, 317, 338, 350, 369, 371, 588, 592, 597, 654, 657], "plot_ppi": [216, 276, 305, 338, 597, 604, 642, 647, 649, 653], "plot_sweep_grid": [216, 597], "target_azimuth": [217, 277, 306, 339, 560], "mask_tupl": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 592], "norm": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 441, 592, 597, 620, 642], "cmap": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 588, 589, 590, 591, 592, 594, 595, 612, 618, 619, 620, 621, 625, 628, 630, 632, 633, 637, 639, 640, 641, 647, 648, 649, 654, 655], "mask_outsid": [217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 589, 592, 597, 627, 628, 637], "title_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 592, 632], "axislabel": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 589, 622, 627, 628], "axislabels_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 597, 640, 641], "colorbar_flag": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 590, 592], "colorbar_label": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589, 592, 594, 603, 604, 608, 622, 623, 627, 628, 629, 630, 634, 647], "colorbar_ori": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 594, 597], "reverse_xaxi": [217, 228, 277, 288, 306, 321, 339, 354], "fig": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 588, 589, 590, 591, 592, 594, 595, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 637, 639, 641, 642, 643, 647, 655, 657, 658], "tick": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 592, 597, 618, 620, 640, 641, 642], "ticklab": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 592, 597, 640, 641, 642], "raster": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 592, 597], "pseudo": [217, 277, 306, 339, 597], "associ": [217, 277, 306, 339, 394, 424, 588, 600, 637], "pcolormesh": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 588, 597, 612, 629, 637, 640, 641], "integ": [217, 277, 306, 339, 379, 418, 438, 439], "ncp": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 592], "lumin": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 592], "scale": [217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 413, 414, 421, 424, 441, 442, 588, 591, 592, 621], "west": [217, 228, 277, 288, 306, 321, 339, 354, 588, 592, 622], "leav": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 590, 592], "orient": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 590, 592, 593, 642, 643], "treat": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 592], "themselv": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 592], "figur": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 589, 590, 591, 592, 594, 595, 596, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 639, 640, 641, 647, 654, 655, 657, 658], "render": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 591, 592], "rather": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 592], "larg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 441, 447, 592, 594, 597], "Be": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 592, 600], "sure": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 591, 592, 596, 597, 600, 612, 620, 640, 661, 664], "dpi": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 590, 592, 594], "pdf": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 592], "ep": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 592], "svg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 592], "mappabl": [218, 241, 249, 256, 278, 307, 340], "cax": [218, 241, 256, 278, 307, 340, 642], "imag": [218, 241, 256, 278, 307, 340, 424, 439, 558, 572, 588, 589, 591, 592, 597, 606, 617, 635, 638, 640, 641, 660], "contourset": [218, 241, 249, 256, 278, 307, 340], "etc": [218, 241, 244, 249, 256, 278, 307, 317, 340, 350, 376, 435, 590, 592, 597, 637], "onto": [218, 241, 256, 258, 278, 307, 317, 340, 350, 405, 412, 414, 444, 592, 595], "drawn": [218, 241, 256, 278, 307, 340, 592], "target_rang": [219, 279, 308, 341], "delta_x": [219, 279, 308, 341], "delta_i": [219, 279, 308, 341], "az_limit": [219, 279, 308, 341], "el_limit": [219, 279, 308, 341], "corner": [219, 279, 308, 315, 341, 348, 592, 593, 597], "reflector": [219, 279, 308, 341, 597], "griddata": [219, 279, 308, 341], "min": [219, 279, 308, 341, 588, 592, 643], "max": [219, 279, 308, 341, 377, 588, 592, 597, 608, 612, 613, 618, 619, 624, 632, 643, 647, 648, 649], "npt": [220, 225, 280, 285, 309, 318, 342, 351], "hair": [220, 280, 309, 342, 626], "higher": [220, 225, 280, 285, 309, 318, 342, 351, 414, 591, 595, 637, 655, 657], "col": [221, 225, 226, 281, 285, 286, 310, 319, 343, 352, 591, 613], "line": [221, 227, 243, 244, 255, 257, 281, 287, 310, 313, 314, 317, 318, 320, 343, 346, 347, 350, 351, 353, 377, 441, 589, 590, 591, 592, 597, 598, 600, 606, 617, 619, 635, 637, 638, 660, 661, 662, 664], "color": [221, 222, 223, 225, 226, 243, 281, 282, 283, 285, 286, 310, 311, 312, 314, 317, 318, 319, 343, 344, 345, 350, 352, 377, 589, 590, 591, 592, 594, 595, 619, 620, 621, 629, 630, 637, 638, 640, 641, 642], "linestyl": [221, 225, 226, 243, 281, 285, 286, 310, 319, 343, 352, 590, 592, 594, 619, 620, 630], "symbol": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348], "text_color": [222, 223, 282, 283, 311, 312, 344, 345], "text": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348, 462, 590, 596, 597, 600, 618, 627, 643, 651, 655], "just": [222, 223, 282, 283, 311, 312, 344, 345, 367, 567, 595, 597, 598, 618, 621, 653, 659, 662, 664], "marker": [222, 223, 227, 243, 257, 282, 283, 287, 311, 312, 320, 344, 345, 353, 588, 590], "title_datetime_format": [224, 228, 284, 288, 316, 321, 349, 354], "title_use_sweep_tim": [224, 228, 284, 288, 316, 321, 349, 354], "range_ring_location_km": [225, 285, 318, 351], "lw": [225, 226, 285, 286, 319, 352, 592, 594, 637], "ring": [225, 226, 285, 286, 318, 319, 351, 352, 590, 613, 614, 626], "range_r": [226, 286, 319, 352], "seri": [226, 286, 319, 352, 588, 591], "draw": [226, 244, 255, 286, 317, 319, 350, 352, 590, 592], "format_str": [227, 287, 320, 353], "ray_min": [227, 287, 320, 353], "ray_max": [227, 287, 320, 353], "style": [227, 243, 257, 287, 313, 314, 318, 320, 346, 347, 351, 353, 377, 597], "ignoretilt": 229, "antenna_to_cartesian_track_rel": 229, "slant": 229, "ncar": 229, "soloii": 229, "time_axis_flag": [230, 289, 322, 355, 591], "date_time_form": [230, 289, 322, 355], "tz": [230, 289, 322, 355, 590], "zone": [230, 289, 322, 355], "info": [230, 289, 317, 322, 350, 355, 592, 597, 642, 659], "aspect_ratio": [231, 290, 323, 356], "aspect": [231, 290, 323, 356, 618], "xlim": [232, 291, 324, 357, 588, 589, 592, 594, 595, 623, 625, 629, 630, 657], "ylim": [232, 291, 324, 357, 588, 589, 591, 592, 594, 595, 623, 625, 627, 628, 629, 630, 632, 634, 637], "cartopi": [233, 234, 235, 236, 244, 292, 317, 588, 590, 592, 594, 595, 597, 598, 606, 608, 609, 612, 613, 617, 619, 620, 633, 635, 638, 640, 641, 647, 651, 654, 655, 657, 658, 660, 661, 662, 664], "coastlin": [234, 244, 317, 350, 588, 592], "polit": 235, "state": [236, 442, 590, 592, 594, 597], "grid_name_field_level_tim": [237, 250], "latitudin": [239, 246, 260], "step": [242, 377, 589, 591, 595, 600, 608, 629, 630, 640, 664], "interp_typ": 242, "x_axi": [242, 619], "metpi": [242, 590, 592, 594, 597], "design": [242, 572, 588, 598, 629, 640, 641, 651, 662], "geodes": 242, "nearest": [242, 369, 414, 436, 560, 561, 580, 588, 592, 597, 657], "dataarrai": 242, "interp": [242, 443], "ex": [242, 443, 590, 594, 595, 596, 618], "upper": [242, 244, 246, 248, 258, 260, 262, 590, 594, 595, 619], "colormesh": [242, 244, 246, 248, 258, 260, 262], "64": [242, 244, 246, 248, 258, 260, 262, 589, 618, 623, 624, 625, 629, 631, 633, 634, 638, 658, 661], "linewidth": [243, 257, 590, 592, 594, 620, 629, 630], "crosshair": [243, 257, 592], "lat_lin": [244, 255, 317, 350, 590, 592, 612, 626, 638], "lon_lin": [244, 255, 317, 350, 590, 592, 612, 626, 638], "embellish": [244, 317, 350, 590, 620], "add_grid_lin": [244, 317, 590], "reason": [244, 255, 592], "america": [244, 255, 317, 350, 592], "cr": [244, 292, 317, 588, 590, 592, 594, 595, 608, 609, 612, 613, 619, 620, 626, 633, 638, 640, 641, 642, 647, 654, 655, 658], "subsequ": [244, 317, 592], "geoax": [244, 317, 592, 654, 657], "platecarre": [244, 317, 588, 590, 592, 594, 595, 608, 612, 619, 620, 633, 638, 640, 641, 647, 655, 658], "shapefil": [244, 317, 350, 592], "certain": [244, 317, 359, 439, 572, 592, 597, 640, 641, 658], "plot_latitudinal_level": [245, 259], "y_index": [246, 260], "basemap": [246, 248, 249, 254, 255, 258, 260, 262, 325, 346, 347, 348, 350, 351, 597, 651, 661], "plot_longitudinal_level": [247, 261], "x_index": [248, 262], "top": [249, 414, 444, 588, 590, 593, 597, 598, 618, 637, 638, 657, 662], "veric": 251, "area_thresh": [255, 350], "10000": [255, 350, 450, 613, 619, 640, 641, 657], "auto_rang": 255, "min_lon": [255, 317, 350, 590, 592, 612, 626, 658], "92": [255, 627, 638], "max_lon": [255, 317, 350, 590, 592, 612, 626, 658], "86": [255, 592], "min_lat": [255, 317, 350, 590, 592, 612, 626, 658], "max_lat": [255, 317, 350, 590, 592, 612, 626, 658], "44": [255, 425, 435, 588, 590, 640, 641, 661], "databas": [255, 350, 594], "merc": [255, 350], "mercat": [255, 613], "line_styl": [257, 313, 314, 318, 346, 347, 351, 626], "plot_rhi": [276, 305, 338, 588], "plot_vpt": [276, 305, 338, 591], "grid_project": [292, 413, 414, 592], "progress": [292, 325], "some": [292, 325, 389, 400, 443, 462, 589, 590, 591, 592, 594, 595, 596, 597, 609, 618, 619, 637, 638, 640, 651, 655, 657, 661], "correctli": [292, 325, 597], "github": [292, 325, 590, 593, 597, 630, 651, 661, 664], "tracker": [292, 325, 598, 651, 662], "azimuthalequidist": 292, "line_lon": [313, 346], "line_lat": [313, 346], "compat": [313, 314, 315, 318, 346, 347, 348, 351, 374, 590, 597, 601, 664], "line_x": [314, 347], "line_i": [314, 347], "ro": [315, 348], "label_text": [315, 348], "label_offset": [315, 348], "bottom": [315, 348, 590, 592, 618, 620], "110m": [317, 592], "shapefile_kwarg": [317, 592], "alpha": [317, 350, 428, 429, 430, 431, 432, 433, 590, 594, 620, 629, 637], "edgecolor": [317, 350, 590, 594, 629], "face": [317, 350, 592], "reson": [317, 350, 592], "lambertconform": [317, 592, 609, 626, 654], "domain": [317, 350, 588, 592, 612], "neither": [317, 350, 381, 592], "extend": [317, 350, 373, 592], "word": [317, 592], "10m": [317, 590, 592, 595, 609, 626], "50m": [317, 592, 647, 655, 658], "naturalearthfeatur": [317, 592], "tranpar": [317, 350, 592], "overplot": [317, 350, 592], "pixel": [317, 350, 438, 439, 544, 588, 592], "lcc": 350, "cylindr": 350, "mill": 350, "exhibit": 350, "distort": 350, "aea": 350, "laea": 350, "conform": [350, 592, 651, 653], "tmerc": 350, "stere": 350, "aeqd": 350, "cass": 350, "even": [350, 424, 443, 594, 597, 629, 637, 651, 657, 664], "cyl": [350, 597], "cannot": [350, 361, 590, 592], "lake": [350, 594], "esri": 350, "background": [350, 358, 425, 435, 447, 592, 596, 626, 633, 640, 641], "untest": 350, "always_core_thr": [358, 425, 435, 640, 641], "use_cosin": [358, 425, 435, 640, 641], "max_diff": [358, 425, 435, 640, 641], "zero_diff_cos_v": [358, 425, 435, 640, 641], "use_addit": [358, 425, 435, 640, 641], "scalar_diff": [358, 425, 435, 640, 641], "convect": [358, 424, 425, 435, 447, 588, 597, 606, 636, 644, 660], "stratiform": [358, 424, 425, 435, 447, 597, 606, 636, 644, 660], "classif": [358, 424, 425, 429, 435, 440, 447, 597, 606, 636, 644, 660], "cosin": [358, 425, 435, 640, 641], "scalar": [358, 425, 435, 590, 592, 597, 640], "classifi": [358, 424, 425, 435, 440, 597, 640, 641, 642], "eqn": [358, 425, 435], "b1": [358, 425, 435, 595], "yuter": [358, 425, 426, 435, 447, 572, 621, 637, 640, 641], "1997": [358, 425, 435, 640, 641], "zero": [358, 375, 425, 435, 439, 441, 580, 597, 637, 640, 641, 654, 658], "multipli": [358, 425, 435, 591, 640, 653], "most": [359, 367, 590, 591, 592, 597, 618, 637, 641, 655, 657, 664], "storage_opt": [360, 369, 371], "anon": [360, 369, 371, 588, 590, 594], "open": [360, 369, 371, 462, 588, 591, 592, 594, 596, 597, 598, 623, 651, 653, 654, 655, 657, 658, 659, 662, 664], "binari": [360, 435, 588, 600], "transpar": [360, 590, 592, 597, 629], "decompress": [360, 597], "gzip": [360, 367, 368], "bzip2": [360, 597], "close": [360, 435, 441, 589, 590, 594, 595, 597], "compress": [360, 367, 368, 592, 597], "backend": [360, 369], "googl": [360, 369, 597, 598, 662], "cloud": [360, 369, 424, 441, 590, 591, 598, 600, 606, 607, 610, 651, 660, 662, 664], "storag": [360, 369, 539], "amazon": [360, 369, 588, 590, 592, 594, 608, 609], "web": [360, 369, 377, 588, 592, 594, 595, 608, 609], "servic": [360, 369, 588, 590, 592, 594, 595, 600, 608, 609, 618], "s3": [360, 369, 590, 594, 608, 609, 621, 640, 641], "file_lik": 360, "use_rsl": 361, "read_": 361, "trmm": [361, 373, 597, 651, 661], "librari": [361, 370, 373, 376, 377, 588, 590, 591, 592, 594, 597, 598, 599, 651, 653, 654, 655, 657, 658, 659, 661, 662], "choos": [361, 592, 606, 617, 635, 640, 641, 660, 664], "Not": [361, 368], "typeerror": [361, 597], "launch_datetim": 362, "date": [362, 363, 586, 590, 592, 595, 596, 597, 608, 609], "radiosond": 362, "launch": 362, "record": [362, 594, 595, 659], "target_datetim": 363, "closest": [363, 405], "profile_datetim": 363, "use_file_field_attribut": 365, "csu": [365, 597], "chill": 365, "chl": [365, 597], "field_file_nam": 365, "long_nam": [365, 440, 588, 591, 640, 641, 654, 659], "zlib": [367, 368], "read_mdv": [367, 589, 604, 614, 625, 629, 630, 631], "interchang": 367, "vlevel": 367, "proj_polar_radar": 367, "9": [367, 431, 440, 568, 588, 590, 591, 592, 594, 596, 603, 609, 619, 621, 630, 638, 639, 640, 641, 651, 653, 658, 659], "proj_rhi_radar": 367, "13": [367, 568, 588, 591, 594, 609, 632, 637, 651, 658, 659], "vlevel_typ": 367, "vert_type_z": 367, "vert_type_elev": 367, "vert_type_az": 367, "17": [367, 590, 591, 627, 632, 635], "vert_type_pressur": 367, "vert_type_theta": 367, "unknown": [367, 597], "station": [369, 370, 592, 609], "linear_interp": 369, "nexrad": [369, 370, 371, 372, 588, 597, 606, 607, 610, 617, 621, 635, 640, 641, 651, 659, 660], "archiv": [369, 590, 592, 594, 595, 622, 651], "host": [369, 371, 590, 600], "noaa": [369, 371, 373, 588, 590, 592, 594, 608, 609, 621, 640, 641], "nation": [369, 371, 588, 590, 592, 594, 608, 618], "climat": [369, 371, 591, 592, 594, 597, 598, 651, 653, 654, 655, 657, 658, 659, 662], "ucar": [369, 370, 588], "thredd": [369, 370, 376], "server": [369, 370], "letter": [369, 370, 372], "icao": [369, 370, 597], "older": [369, 370, 597, 598, 606, 607, 610, 651, 660, 662], "mix": [369, 424, 572, 621, 640, 641], "constant": [369, 409, 413, 414, 438, 441, 588, 591, 597, 609], "fsspec": [369, 371, 594, 597], "cut": [369, 370, 371, 439], "www": [369, 370, 371, 438, 590, 594, 598, 662], "ncdc": [369, 371], "gov": [369, 371, 588, 589, 590, 594, 595, 603, 604, 608, 609, 612, 614, 615, 618, 619, 620, 622, 623, 624, 625, 627, 629, 630, 631, 632, 634, 638, 639, 647, 648, 649], "edu": [369, 370, 438, 588, 621, 637, 640, 641], "catalog": [369, 370, 588], "html": [369, 370, 438, 590, 594, 597, 598, 651, 661, 662], "common": [370, 591, 597, 613, 651, 661], "cdm": [370, 376], "url": [370, 590, 592, 595, 609], "java": [370, 376], "tool": [370, 376, 588, 591, 595, 651, 661], "opendap": 370, "accept": [370, 442, 443, 592, 595, 597, 598, 662], "compil": [370, 442, 597, 651, 661], "unidata": [370, 588, 608], "htm": 370, "product": [371, 373, 419, 450, 588, 592, 597], "nw": [371, 594], "wsr": 371, "88d": 371, "iii": 371, "distribut": [371, 425, 426, 434, 435, 449, 544, 554, 555, 556, 557, 573, 574, 597, 598, 637, 640, 641, 651, 662], "roc": 371, "wsr88d": [371, 372], "level_iii": 371, "level3info": 371, "asp": 371, "radar_format": 372, "callid": 372, "skip_range_check": 372, "rsl_radar": 372, "id": [372, 377, 588, 595, 597], "verifi": [372, 575, 585], "ioerror": 372, "time_ord": [373, 597], "full_xhdr": 373, "noaa_hh_hdr": 373, "ignore_xhdr": 373, "ignore_sweep_start_m": 373, "sigmet": [373, 597, 651], "iri": [373, 597, 651, 661], "sequenti": [373, 618], "re": [373, 424, 590, 598, 662], "manner": 373, "determind": 373, "maintain": [373, 412, 597], "yet": [373, 608, 613], "warn": [373, 376, 440, 588, 590, 591, 592, 594, 595, 597, 603, 609, 612, 657], "reverse_and_rol": 373, "strictli": 373, "increas": [373, 414, 441, 444, 588, 592, 598, 618, 637, 657, 662], "becom": [373, 640, 654, 657], "thisopt": 373, "strict": 373, "header": [373, 597], "decod": [373, 597], "hurrican": [373, 592, 640, 641], "hunter": 373, "millisecond": 373, "precis": [373, 424], "explic": 373, "read_rsl": [373, 661], "error": [373, 377, 442, 443, 588, 590, 592, 596, 597, 613, 661], "uf": [374, 379, 597, 651], "introduc": [374, 443], "implement": [374, 381, 394, 413, 430, 438, 591, 592, 597, 598, 603, 641, 662], "time_refer": [375, 653], "compliant": 375, "mani": [375, 597, 598, 651, 657, 662, 664], "outlin": [375, 441, 568], "_zlib": [375, 376], "_deflatelevel": [375, 376], "_shuffl": [375, 376], "_fletcher32": [375, 376], "_contingu": [375, 376], "_chunksiz": [375, 376], "_endian": [375, 376], "_least_significant_digit": [375, 376], "_fillvalu": [375, 376, 597, 654, 659], "write_proj_coord_si": 376, "proj_coord_si": 376, "write_point_x_y_z": 376, "write_point_lon_lat_alt": 376, "projectioncoordinatesystem": 376, "toolsui": 376, "written": [376, 378, 379, 597, 600, 651], "appropri": [376, 568, 592, 601], "understood": 376, "rgb": 377, "viridi": [377, 640, 641], "color_level": 377, "warp": 377, "sld": 377, "use_doublequot": 377, "geotiff": [377, 597, 651], "wgs84": 377, "sphere": [377, 569, 581], "latter": [377, 592], "usabl": [377, 588], "byte": [377, 597], "former": 377, "gi": 377, "while": [377, 592, 595, 613, 651, 655, 664], "show": [377, 588, 589, 590, 592, 594, 595, 596, 597, 598, 603, 604, 608, 609, 612, 613, 614, 615, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 640, 641, 647, 653, 655, 657, 658, 659, 662], "lack": [377, 392, 402], "composit": [377, 419, 588, 591, 597, 606, 636, 644, 660], "gdal": [377, 597, 651], "via": [377, 590, 592, 600], "conda": [377, 594, 597, 598, 651, 661, 662, 664], "rbg": 377, "tabl": [377, 588], "column": [377, 559, 570, 571, 588, 590, 591, 592, 597, 606, 636, 644, 660], "categor": [377, 590, 642], "255": [377, 597, 641], "hydrometeor": [377, 429, 440, 597, 606, 636, 644, 655, 660], "gdalwarp": 377, "command": [377, 597, 598, 600, 651, 654, 662, 664], "o": [377, 462, 590, 592, 598, 620, 651, 661, 662], "az": [377, 590, 597, 627, 628], "descriptor": 377, "tiff": 377, "don": [377, 591, 592, 597, 612], "t": [377, 424, 425, 435, 441, 442, 445, 450, 588, 591, 592, 595, 597, 612, 637, 640, 641, 651, 653], "quot": 377, "help": [377, 451, 590, 591, 592, 594, 595, 598, 600, 612, 618, 640, 662, 664], "translat": 377, "sr": [377, 588], "instead": [377, 588, 590, 592, 595, 597, 598, 609, 637, 640, 657, 661, 662, 664], "mdv_field_nam": [378, 597], "field_write_ord": [378, 379], "sentinel": [378, 379], "float32": [378, 588, 591, 592, 597, 638, 653, 655, 659], "_write_as_dtyp": 378, "writabl": 378, "satisfi": 378, "xy": [378, 414], "irregular": 378, "exce": [378, 640, 641], "122": [378, 595, 608, 612, 619, 639, 647], "uint8": 378, "uint16": 378, "scale_factor": [378, 591], "add_offset": [378, 591], "uncompress": 378, "sai": [378, 598, 662], "uf_field_nam": 379, "radar_field_nam": 379, "volume_start": 379, "templates_extra": 379, "radar_beam_width_h": [379, 591], "radar_beam_width_v": [379, 591], "radar_receiver_bandwidth": 379, "prt": [379, 591], "polarization_mod": 379, "round": [379, 592, 595, 597], "_uf_scale_factor": 379, "charact": 379, "advanc": [379, 588], "usag": 379, "templat": [379, 597, 600], "mandatory_head": 379, "optional_head": 379, "field_head": 379, "lazi": [380, 381, 383, 390, 597], "set_lazi": 381, "callabl": [381, 390, 591, 592], "cach": 381, "tradit": 381, "supplement": 381, "syntax": [381, 597], "prevent": [381, 414, 590, 597, 598, 662], "comparison": [381, 597, 612, 641], "__cmp__": 381, "__ge__": 381, "__gt__": 381, "__le__": 381, "__lt__": 381, "__ne__": 381, "nor": 381, "viewitem": 381, "viewkei": 381, "viewvalu": 381, "fromkei": 381, "tradition": 381, "referenc": 381, "lazyloaddictionari": 381, "henc": 381, "key1": 381, "value1": 381, "key2": 381, "value2": 381, "lazy_func": 381, "lambda": 381, "lazykey1": 381, "item": [382, 392, 395, 402, 597], "els": [384, 385, 396, 591, 595], "value_cal": 390, "concret": 394, "__getitem__": [394, 591], "__setitem__": 394, "__delitem__": 394, "__iter__": 394, "__len__": 394, "robust": [404, 424, 597], "src_radar": 405, "dest_radar": 405, "distance_toler": [405, 612], "500": [405, 590, 594, 612, 619, 623, 647, 650, 660], "gatefilter_src": [405, 612], "time_toler": [405, 612], "60": [405, 588, 603, 608, 612, 615, 620, 648, 653, 655, 657], "kd": 405, "tree": [405, 414, 647, 648, 649], "physic": [405, 419, 425, 435, 640, 641], "easi": [405, 419, 651], "equival": [405, 589, 591, 597, 608, 620, 628, 634], "src_radar_i": 405, "src_radar_x": 405, "destin": [405, 407, 590, 594, 597, 612], "toler": [405, 406, 408, 560, 561, 597], "src_radar_tim": 405, "dest_radar_tim": 405, "gate_mapp": 405, "src": [405, 594], "dest": 405, "dest_index": 405, "radar_map": 405, "mapped_radar": [405, 612], "adequ": [405, 612], "getter": [406, 408], "field_list": [407, 439], "zg": [409, 410, 411], "yg": [409, 410, 411], "xg": [409, 410, 411], "roi": [409, 410, 411, 414, 597, 613], "influenc": [409, 412, 413, 414, 657], "grow": [410, 411, 413, 414, 598, 662], "virtual": [411, 413, 414], "grid_shap": [412, 413, 414, 540, 613, 614, 615, 619, 640, 641, 648, 657], "grid_limit": [412, 413, 414, 540, 613, 614, 615, 619, 640, 641, 648, 657], "gridding_algo": 412, "map_gates_to_grid": [412, 597], "copy_field_dtyp": [412, 597], "map_to_grid": [412, 413, 597], "significantli": [412, 414], "faster": [412, 414, 592, 597], "barn": [412, 414, 597, 657], "1964": 412, "techniqu": [412, 424, 641], "maxim": 412, "numer": [412, 597], "analysi": [412, 424, 571, 592, 595, 597], "meteorologi": [412, 416, 419, 441, 450, 568], "climatologi": [412, 450], "396": [412, 591], "409": [412, 597], "cressman": [412, 414, 657], "1959": 412, "monthli": 412, "review": [412, 589, 597], "87": [412, 588, 590], "367": 412, "374": [412, 597], "paulei": [412, 657], "1990": [412, 657], "theoret": 412, "discret": 412, "respons": 412, "118": 412, "1145": [412, 597], "1164": [412, 597], "grid_origin": [413, 414, 615, 619], "grid_origin_alt": [413, 414], "map_roi": [413, 414], "weighting_funct": [413, 414, 657], "barnes2": [413, 414, 597], "toa": [413, 414, 417, 444], "17000": [413, 414, 657], "roi_func": [413, 414, 597, 657], "dist_beam": [413, 414, 657], "constant_roi": [413, 414, 597], "z_factor": [413, 414], "xy_factor": [413, 414], "02": [413, 414, 588, 591, 616, 621, 635, 640, 641, 644, 660], "min_radiu": [413, 414, 597, 657], "250": [413, 414, 659], "h_factor": [413, 414, 613], "nb": [413, 414], "bsp": [413, 414], "dist_factor": [413, 613], "weight": [413, 414, 440, 441, 449, 588, 597, 606, 611, 616, 657, 660], "linearli": 413, "roifunct": 413, "dist": [413, 414, 573, 574, 588, 590], "get_roi": 413, "cython": [413, 597], "grid_siz": [413, 414], "grid_from_radar": [413, 414, 613, 614, 615, 619, 640, 641, 648, 657], "around": [413, 425, 435, 544, 558, 594, 595, 614, 629, 632, 637, 640, 653, 655], "copy_field_data": 414, "kd_tree": 414, "leafsiz": 414, "nearbi": [414, 615], "coodin": 414, "azimut": 414, "similarili": 414, "example_roi_func_const": 414, "example_roi_func_dist": 414, "example_roi_func_dist_beam": 414, "altern": [414, 419, 592, 640], "foreach": 414, "metet": 414, "dist_mean": 414, "preserv": [414, 595, 655], "less": [414, 424, 425, 426, 435, 443, 572, 595, 637, 640], "memori": [414, 597], "slower": [414, 441], "It": [414, 443, 558, 568, 590, 592, 595, 598, 601, 612, 662, 664], "leaf": 414, "lookup": 414, "affect": 414, "optim": [414, 441, 597], "natur": [414, 424, 592], "ref_field": [416, 641, 654], "300": [416, 588, 590, 591, 592, 594, 621, 622, 653], "save_nam": [416, 641], "nws_primary_pr": 416, "mm": [416, 595, 596, 640, 641], "hr": [416, 640, 641], "author": [416, 419, 435, 572, 589, 595, 596, 600, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649], "laura": [416, 435, 572, 621, 637, 640, 641], "tomkin": [416, 435, 572, 621, 637, 640, 641], "look": [416, 419, 426, 445, 588, 590, 591, 592, 594, 595, 596, 597, 608, 609, 612, 613, 620, 651, 653, 655, 657, 659], "expect": [416, 443, 598, 662], "relationship": [416, 424, 434], "american": [416, 419], "meteorolog": [416, 419, 430, 450, 592], "2022": [416, 419, 572, 588, 591, 596, 608, 621, 640, 641, 651], "glossari": [416, 419], "ametsoc": [416, 419], "wiki": [416, 419, 438], "r_relat": 416, "25000": [417, 657], "floor": 417, "measur": [417, 425, 428, 434, 435, 440, 441, 442, 443, 559, 591, 592, 594, 595, 598, 640, 641, 651, 653, 654, 655, 657, 658, 659, 662], "nyq": [418, 594, 647, 655], "check_nyq_uniform": 418, "deriv": [418, 441, 443], "try": [418, 441, 590, 595, 596, 657, 658], "vel_dict": 418, "entri": [418, 659], "am": [419, 594, 598, 651, 662], "dry": [419, 642], "world": [419, 606, 617], "aloft": 419, "oppos": [419, 621], "nwp": [419, 642], "why": [419, 592, 596, 598, 662], "would": [419, 588, 589, 590, 591, 594, 595, 597, 598, 608, 609, 655, 657, 662], "think": 419, "turn": [419, 445, 618, 640, 641, 651], "spin": [419, 595], "randi": [419, 594], "chase": [419, 594], "dopplerchas": [419, 597], "cdr_field": 420, "circular": [420, 573, 574, 597, 640], "depolar": [420, 591], "cdr": 420, "l_field": 421, "logarithm": 421, "log10": [421, 612], "l_field_out": 421, "noisedbz_v": 422, "ref_dist": 422, "noise_field": [422, 423], "noisedbz": 422, "cappi_level": 424, "zr_a": 424, "200": [424, 598, 662], "zr_b": 424, "core_wt_threshold": 424, "conv_wt_threshold": 424, "conv_scale_km": 424, "min_reflect": 424, "conv_min_refl": 424, "conv_core_threshold": 424, "42": [424, 425, 435, 447, 588, 590, 591, 594, 638, 640, 641], "override_check": 424, "computation": 424, "\u00e0": 424, "trou": 424, "wavelet": 424, "atwt": 424, "multiresolut": 424, "focus": [424, 588, 590, 591], "raut": 424, "2008": [424, 609], "2020": [424, 559, 592, 595, 597, 598, 621, 651, 661, 662], "convers": [424, 558, 591], "sensit": 424, "howev": [424, 441, 592, 655], "intermedi": 424, "signific": 424, "approxim": [424, 588, 591, 597], "break": [424, 595, 599, 600], "season": 424, "2018": [424, 592], "discuss": [424, 592, 601], "insensit": 424, "variat": [424, 434, 441, 597], "dyadic": 424, "scale_break_us": 424, "greater": [424, 447, 592, 640], "bypass": 424, "saniti": 424, "fall": 424, "categori": [424, 590, 595], "strong": [424, 435, 590, 641], "updraft": 424, "activ": [424, 664], "collis": 424, "coalesc": 424, "wide": [424, 637], "remain": 424, "intens": [424, 447, 544], "unclassifi": [424, 588], "karekar": 424, "puranik": 424, "infrar": [424, 588], "satellit": [424, 588], "ieee": [424, 442], "geosci": [424, 442], "remot": [424, 442, 590, 591, 592, 597, 598, 608, 662], "sen": [424, 442], "lett": 424, "328": 424, "330": [424, 597], "seed": 424, "reeder": 424, "jakob": 424, "cascad": 424, "downscal": 424, "geophi": 424, "123": [424, 426, 637], "2050": 424, "2067": 424, "louf": 424, "gayatri": 424, "murugavel": 424, "konwar": 424, "prabhakaran": 424, "tran": 424, "5409": 424, "5415": 424, "dx": [425, 435, 447, 640, 641], "dy": [425, 435, 447, 590, 640, 641], "level_m": [425, 435, 641], "bkg_rad_km": [425, 435, 640, 641], "11": [425, 435, 579, 588, 590, 595, 605, 609, 615, 616, 638, 641, 648, 651, 658, 659, 660], "55": [425, 435, 588, 590, 633, 640, 641], "calc_thr": [425, 435, 640, 641], "weak_echo_thr": [425, 435, 640, 641], "min_dbz_us": [425, 640], "db_averag": [425, 435, 640, 641], "remove_small_object": [425, 435, 640, 641], "min_km2_siz": [425, 435, 640, 641], "val_for_max_conv_rad": [425, 640], "max_conv_rad_km": [425, 640], "cs_core": 425, "nosfcecho": [425, 435, 640, 641], "weakecho": [425, 435, 640, 641], "sf": [425, 640], "conv": [425, 640], "estimate_flag": [425, 435, 640, 641], "estimate_offset": [425, 435, 640, 641], "partit": [425, 435, 447, 595, 603], "pars": [425, 435, 591, 592, 597], "least": [425, 435, 640], "simpler": [425, 435, 640], "percentag": [425, 435], "weak": [425, 435, 640, 641], "surfac": [425, 435, 591, 640, 641], "snow": [425, 429, 435, 559, 572, 591, 621, 640, 641, 642], "underestim": [425, 435, 640, 641], "wih": [425, 435], "convsf_dict": [425, 640, 641], "raindrop": [425, 435, 640, 641], "pacif": [425, 435, 640, 641], "warm": [425, 435, 441, 640], "pool": [425, 435, 640, 641], "implic": [425, 435, 640, 641], "appl": [425, 435, 443, 445, 447, 449, 559, 598, 640, 641, 662], "meteor": [425, 435, 443, 445, 447, 449, 559, 598, 640, 641, 651, 662], "36": [425, 435, 588, 609, 612, 615, 619, 633, 638, 640, 641, 657], "847": [425, 435, 597, 640, 641], "867": [425, 435, 597, 640, 641], "doi": [425, 426, 430, 431, 435, 440, 442, 443, 559, 572, 588, 591, 592, 594, 595, 598, 621, 637, 640, 641, 651, 653, 654, 655, 657, 658, 659, 662], "1175": [425, 426, 435, 443, 559, 597, 637, 640, 641, 651], "1520": [425, 426, 435, 597, 637, 640, 641], "0450": [425, 435, 640, 641], "036": [425, 435, 640, 641], "3c0847": [425, 435, 640, 641], "morsdo": [425, 435, 640, 641], "3e2": [425, 426, 435, 637, 640, 641], "smith": [425, 435, 640, 641], "wilheit": [425, 435, 640, 641], "zipser": [425, 435, 640, 641], "character": [425, 435, 447, 640, 641], "tropic": [425, 435, 640, 641], "kwajex": [425, 435, 640, 641], "385": [425, 435, 597, 640, 641], "415": [425, 435, 640, 641], "jam2206": [425, 435, 640, 641], "field_bin": [426, 637], "altitude_bin": [426, 637], "field_mask": [426, 637], "min_frac_thr": [426, 637], "contour": [426, 597, 606, 617, 635, 637, 660], "diagram": [426, 606, 636, 644, 660], "cfad": [426, 597, 606, 636, 644, 660], "1995": [426, 435, 447, 637, 640, 641], "histogram": [426, 612, 637, 655], "largest": 426, "row": [426, 588, 590, 592, 637], "creation": [426, 597], "total": [426, 441, 442, 443, 591, 594, 603, 604, 605, 608, 609, 610, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 660], "freq_norm": [426, 637], "height_edg": [426, 637], "field_edg": [426, 637], "kinemat": [426, 449, 598, 637, 662], "microphys": [426, 588, 637], "evolut": [426, 637], "florida": [426, 592, 637], "cumulonimbu": [426, 637], "ii": [426, 637, 651, 659], "mon": [426, 637], "wea": [426, 637], "rev": [426, 637], "1941": [426, 637], "1963": [426, 637], "0493": [426, 637], "3c1941": [426, 637], "tdkame": [426, 637], "the_spectra": 427, "vel_bin": 427, "wavelength": [427, 588, 591], "left_limit": 427, "right_limit": 427, "new_spectra": 427, "new_bin": 427, "a_field": [428, 429, 432], "rr_field": [428, 429, 430, 431, 432, 433, 434], "go": [428, 429, 430, 432, 433, 582, 589, 590, 595, 597, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 654], "diederich": 428, "simmer": [428, 445], "zhang": [428, 445, 559], "tromel": [428, 445], "2015": [428, 431, 445, 651], "wavelenght": 428, "hydrometeorologi": 428, "487": [428, 588], "502": [428, 597], "alphazr": 429, "0376": [429, 431, 432, 433], "betazr": 429, "6112": [429, 431, 432, 433], "alphaz": [429, 432, 433], "betaz": [429, 432, 433], "alphaa": [429, 432], "betaa": [429, 432], "mp_factor": 429, "hydro_field": [429, 440], "main_field": [429, 432, 433], "thresh_max": [429, 432, 433], "main": [429, 432, 433, 588, 590, 591, 592, 597, 598, 624, 662], "secondari": [429, 432, 433, 597], "figuera": [430, 440], "term": [430, 597], "monitor": 430, "french": 430, "sever": [430, 590, 597, 641], "quantit": 430, "ideal": [430, 591], "quarterli": 430, "royal": 430, "2012": [430, 441, 443], "1002": [430, 597], "qj": 430, "1934": 430, "fabri": 431, "fr\u00e9d\u00e9ric": 431, "meterologi": 431, "ch": [431, 642, 643], "pg": 431, "148": 431, "165": 431, "1017": 431, "cbo9781107707405": 431, "blend": [432, 433, 592, 629], "rain_main": [432, 433], "alphakdp": 433, "betakdp": 433, "polynomi": 434, "develop": [434, 435, 588, 592, 597, 641, 651, 661], "mcgill": [434, 651], "doell": 434, "systemat": 434, "drop": [434, 591, 592, 597], "northern": [434, 590], "germani": 434, "seven": 434, "year": [434, 588, 590, 594, 596, 608, 609], "1998": 434, "technol": [434, 445, 559], "1545": [434, 597], "1556": 434, "joss": 434, "switzerland": 434, "vdf": 434, "hochschulverlag": 434, "ag": [434, 642], "eth": 434, "zurich": 434, "134": [434, 588], "min_val_us": [435, 641], "binary_clos": 435, "val_for_max_rad": [435, 641], "max_rad_km": [435, 641], "core_v": [435, 641], "bkgd_val": [435, 641], "feat_val": [435, 641], "overest_field": [435, 641], "underest_field": [435, 641], "detect": [435, 592, 597, 606, 624, 636, 640, 644, 655, 660], "featur": [435, 589, 590, 592, 595, 601, 606, 621, 636, 637, 640, 644, 651, 660], "2023": [435, 594, 651], "steiner": [435, 447, 597, 640, 641], "lauratomkin": [435, 572, 597], "overestim": [435, 640, 641], "feature_dict": [435, 641], "climatolog": [435, 447, 640, 641], "storm": [435, 447, 544, 545, 547, 588, 591, 592, 594, 621, 640, 641, 657], "gaug": [435, 447, 640, 641], "1978": [435, 447, 640, 641], "2007": [435, 447, 640, 641], "miller": [435, 572, 621, 641], "2024": [435, 586, 595, 641], "identif": [435, 572, 621, 641], "faint": [435, 641], "winter": [435, 621, 640, 641], "prep": [435, 641], "sonde_dset": 436, "time_kei": 436, "height_kei": 436, "nvar": 436, "vap": 436, "startard": 436, "ncvar": 436, "return_d": 436, "freq": 437, "hz": [437, 440, 627], "freq_band": 437, "grid1": 438, "grid2": 438, "return_valu": 438, "displac": 438, "en": [438, 594, 597, 598, 651, 661, 662], "wikipedia": 438, "phase_correl": 438, "inspir": 438, "christoph": 438, "gohlk": 438, "lfd": 438, "uci": 438, "imreg": 438, "advect": [438, 439, 597], "trim_edg": 439, "shifted_grid": 439, "subset": [439, 582, 588, 590, 594, 597, 606, 636, 638], "mass_cent": 440, "approach": [440, 588, 591, 613], "besic": 440, "2016": [440, 588, 591, 592, 594, 598, 651, 653, 654, 655, 657, 658, 659, 662], "ndarrai": [440, 659], "centroid": 440, "nclass": 440, "nvariabl": 440, "hydro": [440, 642], "ventura": 440, "grazioli": [440, 442], "gabella": 440, "germann": 440, "bern": [440, 442], "statist": [440, 597, 598, 662], "cluster": 440, "semi": 440, "supervis": 440, "mea": [440, 572, 621, 641], "4425": 440, "4445": 440, "5194": [440, 572, 621, 641], "amt": [440, 572, 621, 641], "block": [440, 588, 595, 597], "2e9": 440, "cg": 441, "backscatt": [441, 445], "clpf": 441, "length_scal": 441, "first_guess": 441, "finite_ord": 441, "fill_valu": [441, 442, 443, 447, 592, 653, 654, 659], "psidp_field": [441, 442, 443, 642], "verbos": [441, 445, 597, 598, 662], "maesaka": 441, "monoton": [441, 444, 618], "propag": [441, 442, 443], "notat": 441, "primari": [441, 591], "proport": 441, "dr": 441, "analys": [441, 442, 443], "cost": [441, 597], "nonlinear": 441, "conjug": 441, "gradient": [441, 597, 618], "broyden": 441, "fletcher": 441, "goldfarb": 441, "shanno": 441, "bfg": 441, "100k": 441, "consider": [441, 594, 640, 641], "parameter": 441, "attentu": 441, "constraint": 441, "bring": [441, 588], "guess": 441, "root": [441, 661, 664], "signifi": [441, 447], "everywher": 441, "exactli": [441, 595, 612], "avoid": [441, 597, 600, 664], "converg": 441, "fact": [441, 443], "closer": 441, "finit": 441, "accuraci": 441, "maxit": 441, "met": 441, "achiev": 441, "somewhat": 441, "arbitrari": 441, "parallel": [441, 442, 443], "thread": [441, 592], "cpu": 441, "multiprocess": 441, "capabl": [441, 591, 655, 659], "relev": [441, 595, 601], "kdp_dict": [441, 442, 443], "phidpf_dict": 441, "phidpr_dict": [441, 442, 443], "forward": [441, 569, 570], "iwanami": 441, "maki": 441, "seventh": 441, "european": 441, "confer": 441, "hydrologi": 441, "rcov": 442, "pcov": 442, "prefilter_psidp": [442, 443], "filter_opt": [442, 443], "kalman": 442, "schneeb": 442, "psidp": [442, 443], "char": [442, 443], "capit": [442, 443], "intercept": 442, "slope": 442, "3x3": 442, "covari": 442, "matrix": [442, 592, 597], "4x4": 442, "filter_psidp": [442, 443, 597], "enabl": [442, 443, 591, 594, 597], "kdp_std_dict": 442, "dev": [442, 591, 594, 595, 598, 657, 662], "ensembl": 442, "52": [442, 445, 588, 591, 638], "5137": 442, "5149": 442, "1109": [442, 597], "tgr": 442, "2287017": 442, "windsiz": 443, "n_iter": 443, "vulpiani": [443, 597], "pre": [443, 597, 598, 662], "advantag": 443, "eat": 443, "gianfranco": 443, "mario": 443, "montopoli": 443, "luca": 443, "delli": 443, "passeri": 443, "antonio": 443, "gioia": 443, "pietro": 443, "giordano": 443, "frank": 443, "marzano": 443, "On": [443, 589, 590], "dual": [443, 597], "mountain": 443, "climatol": [443, 559, 640, 641], "51": [443, 588, 638], "405": [443, 597], "425": [443, 597], "05024": 443, "profile_field": 444, "height_field": 444, "3re": 444, "whole": [444, 597], "height_dict": 444, "profile_dict": 444, "desired_angl": [445, 597], "quasi": 445, "qvp": [445, 597], "wanted_angl": 445, "dictonari": 445, "quasai": 445, "troemel": 445, "kumjian": 445, "clim": [445, 591, 592], "2529": 445, "2548": 445, "meteorol": [445, 640, 641], "54": [445, 588, 590, 591, 609, 643], "2344": 445, "2359": 445, "reev": 445, "tschallen": 445, "wai": [445, 591, 598, 600, 612, 653, 662, 664], "submit": [445, 592, 651], "work_level": 447, "3000": [447, 653, 657], "peak_rel": 447, "area_rel": 447, "medium": 447, "bkg_rad": 447, "11000": [447, 657], "use_intens": 447, "bright": [447, 588], "sgp": [447, 540], "peaked": 447, "eclass": 447, "z_want": [449, 450, 598, 643, 662], "valid_ray_min": [449, 598, 662], "velocity_azimuth_displai": [449, 598, 662], "one_sweep_radar": 449, "extract_sweep": [449, 594, 613, 637, 640, 641, 643], "vad": [449, 450, 597, 598, 606, 636, 644, 660, 662], "amount": [449, 591, 594, 598, 641, 657, 662], "_averag1d": [449, 598, 662], "idw": 449, "brown": [449, 597, 598, 662], "wexler": [449, 598, 662], "1968": [449, 598, 662], "105": [449, 598, 643, 662], "113": [449, 598, 638, 662], "linespac": 450, "michelson": [450, 597, 651], "andersson": 450, "koistinen": [450, 651], "collier": 450, "riedl": 450, "szturc": 450, "gjertsen": 450, "nielsen": 450, "overgaard": 450, "2000": [450, 588, 614, 657], "baltex": 450, "centr": 450, "methodologi": [450, 559, 655], "smhi": 450, "swedish": 450, "hydrolog": 450, "institut": [450, 588, 659], "norrkop": 450, "suffix": 462, "tmp": 462, "dir": 462, "temporari": [462, 597], "my_cwd": 462, "getcwd": 462, "tmpdir": 462, "_": [462, 590, 594, 595, 608, 609, 642], "txt": [462, 597, 661], "wt": 462, "assert": [462, 597, 598, 662], "isfil": 462, "path_to_fil": 539, "local": [539, 589, 590, 594, 597, 598, 651, 661, 662], "without": [540, 553, 588, 591, 597, 661], "site": [540, 588, 590, 591, 592, 593, 594, 595, 603, 609, 638, 654, 657, 661], "oklahoma": [540, 594], "puls": [543, 591, 597, 655], "min_valu": 544, "max_valu": 544, "45": [544, 590, 598, 621, 630, 640, 641, 662], "grid_len": 544, "sigma": [544, 545, 629, 630], "mu": [544, 545], "masked_boundari": 544, "gaussian": [544, 545, 597, 629], "sapr": 546, "dp_phase_shift": [546, 638, 653], "diff_phas": [546, 653], "differential_reflect": [546, 608, 622, 629, 658, 659], "rectangular": [547, 548, 592, 597], "alia": [551, 552, 592, 597], "miscellan": 553, "depreci": [553, 597], "caution": [553, 637], "radian": [554, 556, 577, 588], "std": [556, 557, 574, 579], "convolut": 558, "ndimag": [558, 597, 629, 630], "generic_filt": 558, "pi": [558, 588, 655], "std_dev": 558, "azimuth_spread": 559, "spatial_spread": 559, "spatial_rang": 559, "sphere_dist": [559, 571], "for_azimuth": [559, 571], "get_sweep_rai": 559, "subset_field": 559, "assemble_column": 559, "murphi": 559, "columnar": 559, "cvp": [559, 597], "ic": [559, 629, 642], "situ": 559, "37": [559, 588, 591, 612, 616, 638, 641, 643, 658, 660], "1623": 559, "1642": 559, "jtech": 559, "0011": 559, "bukov\u010di\u0107": 559, "zrni\u0107": 559, "59": [559, 588, 591, 644], "991": [559, 597], "1009": [559, 597], "19": [559, 588, 590, 591, 597, 643, 659], "0140": 559, "az_tol": 560, "radar_rhi": 560, "target_elev": 561, "el_tol": 561, "radar_ppi": 561, "epoch": [562, 563, 564, 565, 566, 588], "max_offset": 567, "running_win_dt": 567, "deg_rng": 567, "consider_2pi_jump": 567, "is_ppi": 567, "wise": 567, "could": [567, 592, 595, 598, 609, 662], "strategi": [567, 588], "might": [567, 589, 653, 664], "goe": [567, 592], "shot": 567, "navg": 568, "nnoise_min": 568, "hildebrand": [568, 597], "sehkon": 568, "1974": 568, "spectral": [568, 588, 591, 597], "articl": 568, "peak": [568, 591, 655], "var": [568, 583, 584, 588], "varianc": [568, 613], "nnois": 568, "sekhon": [568, 597], "808": 568, "811": [568, 597], "target_latitud": [569, 581], "target_longitud": [569, 581], "bear": [569, 590], "alongitudeg": 569, "great": [569, 581], "circl": [569, 581, 640], "known": [569, 597, 598, 659, 662], "6371000": [569, 581], "calculatitude": 569, "degress": [569, 581], "further": [571, 589, 591, 595], "get_column_rai": 571, "mute_field": [572, 621], "mute_threshold": [572, 621], "field_threshold": [572, 621], "discern": 572, "mute": [572, 597, 606, 617, 635, 640, 641, 660], "allen": [572, 621, 641], "5515": [572, 621, 641], "5525": [572, 621, 641], "interval_min": [573, 574], "interval_max": [573, 574], "endpoint": [573, 574], "to_vpt": 575, "90": [575, 588, 590, 591, 598, 662], "verticl": 575, "radar1": 576, "radar2": 576, "angles1": 577, "angles2": 577, "angle1": 578, "angle2": 578, "eg": 579, "ma": [579, 598, 612, 614, 637, 640, 641, 654, 658, 662], "interp_kind": 580, "sim_vel_field": 580, "kind": [580, 588, 595, 603], "slinear": 580, "quadrat": 580, "cubic": 580, "interp1d": [580, 598, 662], "sim_vel": [580, 598, 662], "rng_min": 582, "rng_max": 582, "ele_min": 582, "ele_max": 582, "azi_min": 582, "azi_max": 582, "coverag": [582, 588, 597, 598, 662], "11pt": 583, "stdev": 583, "texarrai": 583, "pyradarobj": 583, "tex": 584, "single_scan": 585, "is_vpt": 585, "mislabel": 585, "properli": [585, 598, 609, 662], "releas": [586, 593, 598, 601, 651, 654, 657, 661, 662], "post2": 586, "apr": 586, "guid": [586, 588, 589, 597, 651], "public": [586, 588, 592, 594, 595, 597, 598, 653, 654, 655, 657, 658, 659, 662], "broken": [586, 597], "aerosol": 588, "experi": 588, "depart": [588, 591, 592, 594, 653, 654, 655, 657, 658, 659], "energi": [588, 591, 592, 594, 653, 654, 655, 657, 658, 659], "iop": 588, "goal": 588, "studi": 588, "lifecycl": 588, "houston": [588, 608], "impact": [588, 594, 629], "uniqu": 588, "suit": [588, 597, 657], "seabreez": 588, "coast": [588, 592], "cleaner": [588, 658], "air": [588, 592, 595], "pollut": 588, "click": [588, 589, 595, 600], "post": [588, 590, 591, 592, 594, 595, 597, 600, 651], "overlai": 588, "texa": [588, 608], "lightn": 588, "csapr2": 588, "wildfir": 588, "smoke": 588, "entrain": 588, "juli": [588, 609], "12": [588, 590, 591, 595, 596, 603, 608, 609, 613, 620, 627, 637, 638, 641, 651, 654, 658, 659], "we": [588, 590, 591, 592, 594, 595, 598, 601, 608, 609, 612, 618, 637, 638, 640, 641, 647, 653, 654, 655, 657, 658, 659, 661, 662, 663, 664], "highlight": [588, 589, 592], "minut": [588, 590, 591, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649], "pyart": [588, 590, 594, 595, 598, 600, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651, 653, 654, 655, 657, 658, 659, 661, 662, 664], "pyplot": [588, 589, 590, 591, 592, 594, 595, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 653, 654, 655, 657, 658], "plt": [588, 589, 590, 591, 592, 594, 595, 597, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 653, 654, 655, 657, 658], "xr": [588, 591], "s3f": 588, "ccr": [588, 590, 592, 594, 595, 608, 609, 612, 613, 619, 620, 626, 633, 638, 640, 641, 647, 654, 655, 658], "panda": [588, 591, 594, 597, 664], "pd": [588, 590, 591, 594], "kdtree": 588, "inlin": [588, 629, 630], "download": [588, 589, 591, 592, 595, 597, 598, 603, 604, 606, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651, 662, 664], "longwav": 588, "ensur": [588, 590, 597, 641], "c13": 588, "denot": [588, 613], "anonym": [588, 590], "credenti": 588, "s3filesystem": 588, "day_no": 588, "168": 588, "dai": [588, 594], "16th": 588, "leap": 588, "hour": [588, 592, 594, 608, 609], "goes16": 588, "abi": 588, "l1b": 588, "radc": 588, "02d": 588, "fi": 588, "or_abi": 588, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 588, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 588, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 588, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 588, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 588, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 588, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 588, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 588, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 588, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 588, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 588, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 588, "goes_d": 588, "open_dataset": [588, 591], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 588, "lt": [588, 591], "gt": [588, 591], "1500": [588, 653], "2500": 588, "number_of_time_bound": 588, "number_of_image_bound": 588, "num_star_look": 588, "datetime64": [588, 591, 638], "07": [588, 590, 591, 609, 621, 635, 640, 641, 659, 660], "1282": 588, "1013": 588, "y_imag": 588, "08624": 588, "x_imag": 588, "03136": 588, "band_id": 588, "int8": 588, "band_wavelength": 588, "33": [588, 591, 592, 641, 659], "t_star_look": 588, "band_wavelength_star_look": 588, "rad": [588, 591], "dqf": 588, "time_bound": 588, "goes_imager_project": 588, "int32": [588, 659], "2147483647": 588, "y_image_bound": 588, "x_image_bound": 588, "algorithm_dynamic_input_data_contain": 588, "processing_parm_version_contain": 588, "algorithm_product_version_contain": 588, "star_id": 588, "channel_integration_tim": 588, "336": [588, 597], "channel_gain_field": 588, "naming_author": 588, "nesdi": 588, "standard_name_vocabulari": 588, "v35": 588, "commerc": 588, "production_sit": 588, "wcda": 588, "timeline_id": 588, "date_cr": 588, "12t20": 588, "09": [588, 590, 595, 605, 635, 640, 641, 660], "3z": 588, "time_coverage_start": [588, 653, 659], "time_coverage_end": [588, 653], "08": [588, 610, 660], "7z": 588, "lut_filenam": 588, "spacelookparam": 588, "fm1a_cdrl79revp_pr_09_00_02": 588, "f45b564c": 588, "dcb9": 588, "498a": 588, "ac56": 588, "da80a1d735a5xarrai": 588, "datasetdimens": [588, 591], "1500x": 588, "2500number_of_time_bound": 588, "2number_of_image_bound": 588, "2band": 588, "1num_star_look": 588, "24coordin": 588, "j2000": 588, "mid": 588, "secondsstandard_nam": 588, "timeaxi": 588, "tbound": 588, "time_boundsarrai": 588, "x27": [588, 591], "537394048": 588, "float640": 588, "04432": 588, "04427unit": 588, "radaxi": 588, "ylong_nam": 588, "coordinatestandard_nam": 588, "projection_y_coordinatearrai": 588, "128212": 588, "128156": 588, "1281": 588, "04438": 588, "044324": 588, "044268": 588, "03856": 588, "03861unit": 588, "xlong_nam": 588, "projection_x_coordinatearrai": 588, "101332": 588, "101276": 588, "10122": 588, "0385": 588, "038556": 588, "038612": 588, "imagestandard_nam": 588, "projection_y_coordinateunit": 588, "yarrai": 588, "projection_x_coordinateunit": 588, "numberstandard_nam": 588, "sensor_band_identifierunit": 588, "1arrai": [588, 591], "central": [588, 590, 594], "wavelengthstandard_nam": 588, "sensor_band_central_radiation_wavelengthunit": 588, "umarrai": 588, "star": 588, "tarrai": 588, "01t11": 588, "43": [588, 591, 594], "000000000": [588, 591], "starstandard_nam": 588, "radiancesstandard_nam": 588, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 588, "12valid_rang": 588, "4094": 588, "mw": 588, "cm": [588, 630], "1resolut": 588, "000056": 588, "radgrid_map": 588, "goes_imager_projectioncell_method": 588, "pointancillary_vari": 588, "3750000": 588, "radianc": 588, "flagsstandard_nam": 588, "status_flagvalid_rang": 588, "1grid_map": 588, "pointflag_valu": 588, "flag_mean": 588, "good_pixel_qf": 588, "conditionally_usable_pixel_qf": 588, "out_of_range_pixel_qf": 588, "no_value_pixel_qf": 588, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 588, "5percent_good_pixel_qf": 588, "0percent_conditionally_usable_pixel_qf": 588, "0percent_out_of_range_pixel_qf": 588, "0percent_no_value_pixel_qf": 588, "0percent_focal_plane_temperature_threshold_exceeded_qf": 588, "00": [588, 590, 591, 594, 595, 597, 605, 610, 616, 635, 644, 645, 650, 660], "326423040": 588, "748365056": 588, "projectiongrid_mapping_nam": 588, "geostationaryperspective_point_height": 588, "35786023": 588, "0semi_major_axi": 588, "6378137": 588, "0semi_minor_axi": 588, "6356752": 588, "31414inverse_flatten": 588, "298": 588, "2572221latitude_of_projection_origin": 588, "0longitude_of_projection_origin": 588, "0sweep_angle_axi": 588, "south": [588, 592, 622], "extent": [588, 590, 591, 594, 613, 615], "imageunit": 588, "radarrai": 588, "12824": 588, "04424": 588, "10136": 588, "03864": 588, "nominal_satellite_subpoint_lat": 588, "nomin": 588, "subpoint": 588, "standard_nam": [588, 640, 641, 654, 659], "latitudeunit": [588, 591], "degrees_northarrai": 588, "nominal_satellite_subpoint_lon": 588, "longitudeunit": [588, 591], "degrees_eastarrai": 588, "199997": 588, "nominal_satellite_height": 588, "gr": 588, "80": [588, 590, 604, 633, 639], "ellipsoid": 588, "height_above_reference_ellipsoidunit": 588, "kmarrai": 588, "35786": 588, "023438": 588, "geospatial_lat_lon_ext": 588, "geospati": 588, "referencesgeospatial_westbound_longitud": 588, "152": [588, 641], "10928geospatial_northbound_latitud": 588, "56": [588, 591, 643], "76145geospatial_eastbound_longitud": 588, "94688geospatial_southbound_latitud": 588, "14": [588, 591, 592, 594, 595, 608, 609, 610, 618, 620, 647, 659, 660], "57134geospatial_lat_cent": 588, "083002geospatial_lon_cent": 588, "096954geospatial_lat_nadir": 588, "0geospatial_lon_nadir": 588, "0geospatial_lat_unit": 588, "degrees_northgeospatial_lon_unit": 588, "96921e": 588, "yaw_flip_flag": 588, "spacecraft": 588, "yaw": 588, "flip": 588, "configurationvalid_rang": 588, "1flag_valu": 588, "truearrai": 588, "esun": 588, "bandpass": 588, "solar": 588, "irradi": 588, "sun": 588, "distancestandard_nam": 588, "toa_shortwave_irradiance_per_unit_wavelengthunit": 588, "um": 588, "1cell_method": 588, "meanarrai": 588, "kappa0": 588, "incom": 588, "d2": 588, "instantan": [588, 597], "divid": 588, "reflectanceunit": 588, "planck_fk1": 588, "wavenumb": 588, "c2": 588, "nu3": 588, "emiss": 588, "monochromat": 588, "nu": 588, "constantsunit": 588, "10803": 588, "299805": 588, "planck_fk2": 588, "karrai": 588, "1392": [588, 597], "73999": 588, "planck_bc1": 588, "bc_1": 588, "bc_2": 588, "planck_funct": 588, "wavenumberunit": 588, "0755": 588, "planck_bc2": 588, "99975": 588, "valid_pixel_count": 588, "condition": 588, "pixelsunit": 588, "countgrid_map": 588, "sum": [588, 596, 637], "comment": [588, 589, 630, 659], "3702838": 588, "missing_pixel_count": 588, "saturated_pixel_count": 588, "satur": 588, "radiometr": 588, "geoloc": 588, "undersaturated_pixel_count": 588, "undersatur": 588, "focal_plane_temperature_threshold_exceeded_count": 588, "exceed": 588, "thresholdunit": 588, "min_radiance_value_of_valid_pixel": 588, "pixelsstandard_nam": 588, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 588, "6443": 588, "185": 588, "5699": 588, "849287": 588, "max_radiance_value_of_valid_pixel": 588, "154": [588, 626], "23053": 588, "mean_radiance_value_of_valid_pixel": 588, "197975": 588, "std_dev_radiance_value_of_valid_pixel": 588, "toa_outgoing_radiance_per_unit_wavenumberunit": 588, "standard_devi": 588, "985853": 588, "maximum_focal_plane_temperatur": 588, "focal": 588, "valuevalid_rang": 588, "951939": 588, "focal_plane_temperature_threshold_increas": 588, "bound": [588, 591, 641], "81": [588, 590, 659], "focal_plane_temperature_threshold_decreas": 588, "decreas": [588, 637], "percent_uncorrectable_l0_error": 588, "percent": 588, "l0": 588, "errorsvalid_rang": 588, "percentgrid_map": 588, "earth_sun_distance_anomaly_in_au": 588, "anomali": [588, 641], "astronom": 588, "unitsunit": 588, "uacell_method": 588, "016543": 588, "datainput_abi_l0_data": 588, "m6_g16_s20221932006173_e20221932008557_c": 588, "ncarrai": 588, "filenamesl1b_processing_parm_vers": 588, "parm": 588, "rad_g16_v01r00": 588, "ziparrai": 588, "packag": [588, 589, 590, 591, 592, 594, 595, 597, 598, 603, 609, 651, 654, 657, 661, 662, 664], "versionalgorithm_vers": 588, "alg": 588, "rad_v01r00": 588, "zipproduct_vers": 588, "v01r00arrai": 588, "stararrai": 588, "vnir": 588, "ir": 588, "telemetryunit": 588, "countarrai": 588, "gain": [588, 591], "noaaconvent": 588, "7standard_name_vocabulari": 588, "administr": [588, 592, 608], "servicesproject": 588, "goesproduction_sit": 588, "wcdasproduction_environ": 588, "oespatial_resolut": 588, "2km": 588, "nadirmetadata_convent": 588, "discoveri": [588, 595], "0orbital_slot": 588, "eastplatform_id": 588, "g16instrument_typ": 588, "baselin": 588, "scene_id": 588, "conusinstrument_id": 588, "fm1titl": 588, "radiancessummari": 588, "digit": 588, "outgo": 588, "engin": 588, "radiancekeywords_vocabulari": 588, "nasa": 588, "master": [588, 597, 600, 630], "gcmd": 588, "scienc": [588, 592, 594, 653, 654, 655, 657, 658, 659], "0iso_series_metadata_id": 588, "a70be540": 588, "c38b": 588, "11e0": 588, "962b": 588, "0800200c9a66licens": 588, "restrict": 588, "approv": 588, "processing_level": 588, "aeronaut": 588, "l1bcdm_data_typ": 588, "imagedataset_nam": 588, "ncproduction_data_sourc": 588, "realtimetimeline_id": 588, "6date_cr": 588, "3ztime_coverage_start": 588, "3ztime_coverage_end": 588, "7zlut_filenam": 588, "637827000": 588, "h5": [588, 597], "qtableband13": 588, "fm1a_cdrl79revh_do_08_00_00": 588, "582860861": 588, "caltargettimeinterv": 588, "fm1a_cdrl79revp_do_08_00_01": 588, "611906620": 588, "bandsaturationlimit": 588, "600000000": 588, "solarspacelookparam": 588, "fm1a_adr1233_pr_09_08_25": 588, "709281036": 588, "deadrowlistparam": 588, "mirror_record": 588, "fm1a_cdrl79revg_do_07_00_00": 588, "kalmanastroconst": 588, "xml": [588, 594], "kalmanfiltercontrol": 588, "fm1a_pr_09_08_02": 588, "677650371": 588, "kalmanmeasmaxsens": 588, "fmaa_int_only_do_09_01_00": 588, "652936814": 588, "kalmanpreprocessorcontrol": 588, "fm1a_cdrl79revj_pr_09_06_02": 588, "657795700": 588, "kalmanreferencedata": 588, "888": 588, "kalmanstarcatalog": 588, "abi_navigationrdp_band13": 588, "fm1a_cdrl79revj_do_07_00_00": 588, "abi_navigationparameters_band13": 588, "fm1a_cdrl79revh_do_07_00_00": 588, "abi_resamplingimplementation_band13": 588, "fm1a_cdrl79revh_do_07_02_00": 588, "602129336": 588, "abi_resamplingparameters_band13": 588, "starlookparam": 588, "stardetectionparam": 588, "resamplingscaledconvers": 588, "fmaa_int_only_do_08_00_00": 588, "1111": [588, 591, 597], "blockreleaseregion": 588, "2222": 588, "csv": [588, 590], "ir_retrievalparamet": 588, "fm1a_cdrl79revh_do_09_01_00": 588, "652936750": 588, "radiancelut_band13": 588, "fm1a_cdrl79reve_do_08_00_00": 588, "ict_record": 588, "fm1a_tmabi_18_159_pr_09_00_02": 588, "icm_conversionconst": 588, "fm1a_cdrl43": 588, "18_do_09_01_00": 588, "icm_sensorcoeffici": 588, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 588, "676949608": 588, "h5id": 588, "da80a1d735a5": 588, "team": 588, "bobbi": [588, 612], "jackson": [588, 612], "pug": 588, "l2": [588, 597], "file_id": 588, "def": [588, 590, 594, 597, 598, 618, 641, 662], "calculate_degre": 588, "x_coordinate_1d": 588, "y_coordinate_1d": 588, "projection_info": 588, "lon_origin": 588, "attr": 588, "longitude_of_projection_origin": 588, "perspective_point_height": 588, "semi_major_axi": 588, "r_eq": 588, "r_pol": 588, "semi_minor_axi": 588, "matric": 588, "x_coordinate_2d": 588, "y_coordinate_2d": 588, "meshgrid": [588, 612, 637], "lambda_0": 588, "a_var": 588, "b_var": 588, "c_var": 588, "r_": 588, "s_x": 588, "s_y": 588, "s_z": 588, "conu": 588, "seterr": 588, "abi_lat": 588, "arctan": 588, "abi_lon": 588, "crop": 588, "our": [588, 590, 593, 608, 609, 612, 618, 619, 638, 640, 641, 647, 651], "interest": [588, 590, 591, 592, 594, 595, 612, 640], "circ": 588, "95": [588, 590, 638, 659], "nan_to_num": 588, "9999": [588, 659], "lat_rang": 588, "lon_rang": 588, "lat_min": 588, "lat_max": 588, "lat_min_bound": 588, "argmin": 588, "ab": 588, "lat_max_bound": 588, "lon_min": 588, "lon_max": 588, "lon_min_bound": 588, "lon_max_bound": 588, "a1": [588, 591, 595, 626], "disoveri": 588, "toolkit": [588, 591, 592, 594, 595, 653, 654, 655, 657, 658, 659], "5439": [588, 591, 595], "1467901": 588, "page": [588, 593, 597, 600], "autom": [588, 594, 595], "catalogu": 588, "adam": [588, 597], "theisen": 588, "geometri": [588, 594, 597], "cell_track_info": 588, "read_csv": [588, 590], "raw": [588, 603, 604, 613], "githubusercont": 588, "com": [588, 598, 609, 630, 661, 662, 664], "adamtheisen": [588, 597], "cell": [588, 595, 597, 629, 648], "stat": [588, 597], "houcsapr": 588, "20220617": 588, "index_col": 588, "parse_d": 588, "unnam": 588, "scan_mod": [588, 591, 597], "scan_nam": [588, 591, 597], "template_nam": 588, "azimuth_min": 588, "azimuth_max": 588, "elevation_min": 588, "elevation_max": 588, "range_min": 588, "range_max": 588, "cell_azimuth": 588, "cell_rang": 588, "cell_zh": 588, "ngates_gt_0": 588, "ngates_gt_10": 588, "ngates_gt_30": 588, "ngates_gt_50": 588, "ngates_gt_10_5km": 588, "ngates_gt40_5km": 588, "03": [588, 591, 608, 635, 644, 650, 660], "hou": 588, "303": [588, 597, 605], "74450": 588, "637207": 588, "383545": 588, "109900": 588, "297": 588, "59216": 588, "307": [588, 597], "63367": 588, "021240": 588, "988037": 588, "910767": 588, "700": [588, 591, 594, 597], "930866": 588, "78": 588, "302": 588, "64587": 588, "645874": 588, "1800": [588, 590, 653], "776333": 588, "55798": 588, "59094": 588, "97546": 588, "99744": 588, "975464": 588, "900": [588, 653], "972101": 588, "46": [588, 638], "2826": 588, "301": [588, 597], "48132": 588, "50330": 588, "648193": 588, "382324": 588, "503296": 588, "62400": 588, "327583": 588, "990": 588, "989": [588, 597, 614, 616, 660], "210": [588, 641], "995": [588, 597], "2827": 588, "305": [588, 597], "70007": 588, "404297": 588, "700073": 588, "13600": 588, "29": [588, 591], "037998": 588, "2828": 588, "23510": 588, "26807": 588, "235107": 588, "459156": 588, "2829": 588, "296": [588, 597], "08704": 588, "306": [588, 597], "16150": 588, "999268": 588, "998291": 588, "646362": 588, "59100": 588, "882927": 588, "807": 588, "783": [588, 597], "27": [588, 592, 638], "63": [588, 659], "830": 588, "2830": 588, "05835": 588, "08032": 588, "058350": 588, "62800": 588, "198204": 588, "767": [588, 597], "76": 588, "773": [588, 597], "2831": 588, "notebook": [588, 590, 591, 596, 597, 603, 604, 606, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 654, 657, 658, 664], "much": [588, 590, 591, 592, 594, 595, 597, 637, 655, 657, 658], "frequent": 588, "start_hour": 588, "end_hour": 588, "utc": [588, 590, 591, 592, 595, 608, 609, 632], "48": [588, 590, 615, 660], "04": [588, 591, 594, 638, 650, 660], "26": [588, 641, 644, 660], "38": [588, 591, 609], "57": [588, 640, 641], "rjackson": [588, 612], "paw": 588, "houcsapr2cfrs2": 588, "20220712": 588, "200714": 588, "easili": [588, 594], "eol": 588, "cgi": 588, "codiac": 588, "fgr_form": 588, "016": 588, "densiti": [588, 642], "lma_d": 588, "lylout_220712_000000_86400_map500m": 588, "afternoon": 588, "203229": 588, "lylout_220617_000000_86400_map500m": 588, "radarmapdisplai": [588, 590, 594, 595, 597, 608, 609, 612, 620, 626, 638, 647, 649, 653, 654, 655, 657, 658], "subplot": [588, 590, 591, 592, 594, 595, 597, 608, 612, 618, 619, 620, 632, 637, 638, 639, 640, 641, 642, 643, 647, 655], "subplot_kw": 588, "disp": 588, "graph": [588, 589, 590, 591, 592, 594, 595, 597, 603, 604, 608, 609, 612, 613, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 647, 648, 649, 653, 654, 655, 657, 658], "150": [588, 589, 625, 638, 644, 655, 660], "plot_ppi_map": [588, 590, 594, 595, 597, 608, 609, 612, 620, 626, 638, 647, 654, 655, 658], "flash_tim": 588, "squeez": [588, 653], "argwher": [588, 612], "logical_and": [588, 612], "flash_time_start": 588, "17t20": 588, "scatter": [588, 590, 594, 595, 619, 638], "flash_center_longitud": 588, "flash_center_latitud": 588, "set_xlim": [588, 633, 637, 642], "96": [588, 590, 591, 612, 651, 658], "94": [588, 659], "set_ylim": [588, 633, 637, 642], "deprecationwarn": [588, 657], "escap": 588, "sequenc": [588, 592], "xf": 588, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 588, "ipykernel_41252": 588, "2371313213": 588, "opt": [588, 589, 591, 592, 597], "anaconda3": [588, 591, 592, 651, 654, 657, 661, 664], "env": [588, 589, 591, 592, 594, 595, 597, 603, 609, 651, 654, 657, 664], "pyart_env2": 588, "lib": [588, 591, 592, 594, 595, 603, 609, 654, 657, 661], "python3": [588, 591, 592, 594, 595, 596, 603, 609], "mpl": [588, 597, 642, 654, 657], "gridlin": [588, 592, 594, 620], "451": [588, 591], "userwarn": [588, 595, 603, 609], "xlabels_top": [588, 592], "deprec": [588, 592, 600, 654, 657], "top_label": [588, 594, 620], "toggl": [588, 597], "visibl": [588, 592, 597], "ylabels_right": [588, 592], "right_label": [588, 594, 620], "strike": 588, "overlaid": 588, "csapr_rhi": 588, "203012": 588, "flash_alt": 588, "flash_init_altitud": 588, "flash_lon": 588, "flash_init_longitud": 588, "flash_lat": 588, "flash_init_latitud": 588, "rhi_lon": 588, "flatten": [588, 612], "rhi_lat": 588, "rhi_alt": 588, "kdtree_data": 588, "stack": [588, 591, 594, 598, 661, 662], "inp_data": 588, "where_in_rhi": 588, "flash_rang": 588, "1e3": 588, "motiv": [589, 592], "blog": [589, 594, 597, 598, 662], "come": [589, 592, 640], "colorschem": 589, "vision": 589, "defici": 589, "illustr": 589, "collabor": 589, "contributor": [589, 600, 651, 663], "guidenc": 589, "ve": 589, "trip": [589, 658], "me": 589, "assist": 589, "https_link_to_your_fork": 589, "unfamiliar": 589, "yml": [589, 597, 651, 664], "slightli": [589, 592, 620], "latest": [589, 597, 598, 651, 662], "button": [589, 593, 600], "kshrc": 589, "export": [589, 661, 664], "pip": [589, 598, 661, 662, 664], "checkout": [589, 598, 600, 662], "newblog_post": 589, "plot_ppi_mdv": [589, 625, 635, 660], "radardisplai": [589, 590, 591, 595, 597, 603, 604, 613, 618, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 634, 637, 639, 642], "jonathan": [589, 603, 604, 614, 615, 622, 623, 625, 627, 631, 634, 664], "helmu": [589, 592, 594, 598, 603, 604, 614, 615, 622, 623, 625, 627, 631, 634, 651, 653, 654, 655, 657, 658, 659, 662, 664], "jhelmu": [589, 597, 603, 604, 614, 615, 622, 623, 625, 627, 631, 634], "anl": [589, 603, 604, 608, 609, 612, 614, 615, 618, 619, 620, 622, 623, 624, 625, 627, 629, 630, 631, 632, 634, 638, 639, 647, 648, 649], "licens": [589, 598, 603, 604, 608, 609, 612, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651, 662], "bsd": [589, 598, 603, 604, 608, 609, 612, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651, 662], "claus": [589, 598, 603, 604, 608, 609, 612, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 662], "get_test_data": [589, 603, 604, 612, 614, 615, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 647, 648, 649], "110635": [589, 614, 625, 657], "figsiz": [589, 590, 591, 592, 594, 595, 603, 604, 608, 609, 612, 613, 618, 619, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 637, 639, 640, 641, 642, 647, 654, 655, 657, 658], "add_subplot": [589, 603, 604, 613, 614, 615, 622, 623, 624, 625, 627, 628, 629, 630, 631, 634], "111": [589, 590, 592, 595, 612, 614, 615, 620, 623, 624, 625, 629, 630, 631, 638], "get_cmap": [589, 621, 640, 641], "jet": 589, "colorbind": 589, "pyart_homeyerrainbow": [589, 591, 612, 618, 619, 620, 625, 628, 632, 633, 639], "plot_rhi_cfradial_singlescan": [589, 628, 635, 660], "panel": [589, 595, 606, 617, 635, 637, 660], "sgpxsaprrhicmaci5": [589, 627, 628, 632, 637], "c0": [589, 603, 627, 628, 632, 637, 654], "20110524": [589, 627, 628, 632, 637], "015604_nc4": [589, 627, 628, 632, 637], "read_cfradi": [589, 603, 612, 615, 619, 627, 628, 632, 637, 642, 643], "subplots_adjust": [589, 591, 618, 627, 628], "hspace": [589, 591, 627, 628], "xlabel": [589, 591, 612, 627, 628, 655], "ylabel": [589, 591, 612, 627, 628, 655], "stage": 589, "my": [589, 661], "untrack": [589, 598, 662], "blog_pr": 589, "restor": 589, "discard": 589, "_static": 589, "As": [589, 591, 598, 653, 655, 657, 658, 662], "statement": [589, 597, 598, 662], "hint": [589, 592, 599], "wait": [589, 592], "editor": [589, 596, 598, 662, 664], "enh": [589, 597], "abort": 589, "person": 589, "addition": [589, 592], "anyon": 589, "respond": 589, "walk": [590, 591, 594, 595, 596], "septemb": 590, "2021": [590, 640, 641], "thunderstorm": 590, "southern": 590, "wisconsin": [590, 597], "illinoi": 590, "trail": 590, "damag": [590, 594], "milwauke": [590, 594], "madison": 590, "imageri": [590, 594], "russ": 590, "schumach": 590, "colorado": 590, "unvers": 590, "put": 590, "togeth": [590, 591, 592, 597], "hi": [590, 641], "glob": [590, 591, 594, 595, 598, 662], "math": 590, "atan2": 590, "tempfil": 590, "cfeatur": [590, 592, 594, 595], "mcolor": [590, 592, 621, 640, 641], "mdate": 590, "uscounti": [590, 594], "imageio": 590, "pytz": [590, 597], "temploc": 590, "mkdtemp": 590, "filterwarn": [590, 591, 592, 594, 612], "let": [590, 591, 592, 593, 595, 597, 598, 608, 609, 612, 618, 620, 637, 638, 640, 641, 647, 653, 655, 657, 658, 659, 662, 664], "machin": [590, 591, 594, 595, 664], "kmkx": [590, 594], "nexrad_path": 590, "level2": [590, 594, 597, 608, 609, 621, 640, 641], "d_": 590, "kmkx20210907_170101_v06": 590, "kmkx20210907_170739_v06": 590, "kmkx20210907_171431_v06": 590, "kmkx20210907_172123_v06": 590, "kmkx20210907_172814_v06": 590, "kmkx20210907_173452_v06": 590, "kmkx20210907_174130_v06": 590, "kmkx20210907_174807_v06": 590, "kmkx20210907_175459_v06": 590, "kmkx20210907_175459_v06_mdm": 590, "read_nexrad_arch": [590, 594, 608, 609, 621, 622, 623, 640, 641], "possibli": 590, "add_featur": [590, 592, 594, 595], "pyart_chasespectr": [590, 594, 595, 648, 649], "70": [590, 591, 594, 608, 612, 619, 649], "set_ext": 590, "easier": [590, 591, 592], "scroll": 590, "radar_id": 590, "timestamp": [590, 591], "tz_local": 590, "later": [590, 592, 654, 657], "interfac": [590, 595, 597], "conn": 590, "nexradawsinterfac": 590, "get_avail_scans_in_rang": 590, "len": [590, 618, 632, 642, 653], "kmkx20210907_151132_v06": 590, "kmkx20210907_152621_v06": 590, "kmkx20210907_150152_v06": 590, "kmkx20210907_151622_v06": 590, "kmkx20210907_152121_v06": 590, "kmkx20210907_150642_v06": 590, "kmkx20210907_155424_v06_mdm": 590, "kmkx20210907_153610_v06": 590, "kmkx20210907_154814_v06": 590, "kmkx20210907_155424_v06": 590, "kmkx20210907_154205_v06": 590, "kmkx20210907_160034_v06": 590, "kmkx20210907_160607_v06": 590, "kmkx20210907_161141_v06": 590, "kmkx20210907_163532_v06": 590, "kmkx20210907_161714_v06": 590, "kmkx20210907_162924_v06": 590, "kmkx20210907_164816_v06": 590, "kmkx20210907_165433_v06": 590, "kmkx20210907_165433_v06_mdm": 590, "kmkx20210907_162247_v06": 590, "kmkx20210907_153134_v06": 590, "kmkx20210907_164149_v06": 590, "kmkx20210907_182057_v06": 590, "kmkx20210907_182749_v06": 590, "kmkx20210907_184048_v06": 590, "kmkx20210907_180841_v06": 590, "kmkx20210907_183440_v06": 590, "kmkx20210907_185431_v06_mdm": 590, "kmkx20210907_181448_v06": 590, "kmkx20210907_180150_v06": 590, "kmkx20210907_185431_v06": 590, "kmkx20210907_190109_v06": 590, "kmkx20210907_190703_v06": 590, "kmkx20210907_193238_v06": 590, "kmkx20210907_191951_v06": 590, "kmkx20210907_191327_v06": 590, "kmkx20210907_195642_v06": 590, "kmkx20210907_194459_v06": 590, "kmkx20210907_195642_v06_mdm": 590, "kmkx20210907_193849_v06": 590, "kmkx20210907_184739_v06": 590, "kmkx20210907_192614_v06": 590, "kmkx20210907_195056_v06": 590, "now": [590, 591, 592, 594, 595, 597, 609, 612, 613, 618, 620, 638, 640, 641, 647, 653, 655, 661], "predict": 590, "tornado": [590, 594], "offic": [590, 592, 594, 653, 654, 655, 657, 658, 659], "acces": 590, "internet": 590, "wcm": 590, "2021_wind": 590, "read_spc_report": 590, "start_tim": 590, "end_tim": 590, "hazard": 590, "timezon": 590, "gmt": 590, "torn": 590, "df": 590, "datafram": 590, "conver": 590, "to_datetim": [590, 591, 594], "set_index": 590, "inplac": 590, "ambigu": 590, "nat": 590, "nonexist": 590, "shift_forward": 590, "tz_convert": 590, "timedelta": [590, 594], "wind_report": 590, "tornado_report": 590, "hail_report": 590, "om": 590, "yr": 590, "mo": 590, "st": 590, "stf": 590, "stn": 590, "elon": 590, "wid": 590, "sn": 590, "sg": 590, "f1": 590, "f2": 590, "f3": 590, "f4": 590, "657521": 590, "tx": 590, "7500": [590, 653], "331": [590, 597], "657522": 590, "4300": 590, "657523": 590, "0500": 590, "167": 590, "657524": 590, "0200": 590, "657525": 590, "1595": 590, "663777": 590, "sc": 590, "0100": [590, 595], "663778": 590, "663779": 590, "2200": 590, "663780": 590, "1900": 590, "49": [590, 591], "663781": 590, "1100": [590, 597], "6261": 590, "gc_latlon_bear_dist": 590, "lat1": 590, "lon1": 590, "decim": 590, "lat2": 590, "lon2": 590, "lat1r": 590, "deg2rad": 590, "lon1r": 590, "bearr": 590, "lat2r": 590, "lon2r": 590, "rad2deg": [590, 643], "add_scale_lin": 590, "fontsiz": [590, 591, 592, 595, 603, 604, 618, 620, 629, 630], "fontweight": 590, "zoom": [590, 591], "black": [590, 597, 619, 637, 638], "frac_lat": 590, "frac_lon": 590, "e1": 590, "get_ext": 590, "center_lon": 590, "center_lat": 590, "shorten": 590, "hash": [590, 600], "lat1a": 590, "lon1a": 590, "lat1b": 590, "lon1b": 590, "lat2a": 590, "lon2a": 590, "lat2b": 590, "lon2b": 590, "horizontalalign": 590, "verticalalign": 590, "enumer": 590, "iter_success": 590, "mdm": 590, "this_tim": 590, "open_pyart": 590, "map_panel_ax": [590, 633], "x_cut_panel_ax": [590, 633], "y_cut_panel_ax": [590, 633], "masking_data_with_gatefilt": [590, 597], "ax1": [590, 591, 595, 603, 604, 619, 633, 634, 637, 640, 641, 647], "add_ax": [590, 633], "recogniz": 590, "with_scal": 590, "500k": 590, "grai": [590, 592, 594, 620, 621, 637], "plot_colorbar": 590, "pad": 590, "plot_range_r": [590, 597, 613, 623, 624, 626], "dash": [590, 592, 630], "set_xtick": [590, 637, 654, 657], "arang": [590, 595, 598, 612, 626, 629, 630, 637, 638, 642, 643, 662], "set_ytick": [590, 637, 654, 657], "wind_reports_now": 590, "slon": 590, "tolist": 590, "slat": 590, "facecolor": [590, 592, 594], "deepskyblu": 590, "tornado_reports_now": 590, "tab": [590, 600, 619], "red": [590, 629, 630], "hail_reports_now": 590, "lawngreen": 590, "legend": [590, 594, 595, 619], "savefig": [590, 592, 594], "_dz_rpt": 590, "bbox_inch": 590, "tight": 590, "white": [590, 592, 629], "mp4": 590, "map_imag": 590, "gif_titl": 590, "delet": [590, 597, 598, 620, 662], "gif": 590, "get_writ": 590, "fp": 590, "writer": [590, 597], "imread": 590, "append_data": 590, "ffmpeg_writ": 590, "divis": [590, 597], "macro_block_s": 590, "resiz": 590, "1930": 590, "1766": 590, "1936": 590, "1776": 590, "video": 590, "codec": 590, "player": 590, "incompat": [590, 597, 601], "ipython": [590, 594, 596, 664], "browser": 590, "event": [590, 595, 640, 641], "overview": [590, 593, 600], "retrospect": 590, "ecosystem": 591, "By": [591, 592, 595, 601], "learn": [591, 651], "portal": [591, 592], "march": [591, 594, 608], "shown": [591, 618], "offici": [591, 598, 662], "probe": 591, "millimet": 591, "ghz": 591, "purpos": [591, 592, 640, 641], "nearli": [591, 629], "bokeh": 591, "formatt": 591, "datetimetickformatt": 591, "hv": 591, "guckazrcfrgem1": 591, "20220314": 591, "000003": 591, "0x7f7dbd517400": 591, "linear_depolarization_ratio": 591, "mean_doppler_velocity_crosspolar_v": 591, "reflectivity_crosspolar_v": 591, "signal_to_noise_ratio_copolar_h": [591, 595], "signal_to_noise_ratio_crosspolar_v": 591, "spectral_width": 591, "spectral_width_crosspolar_v": 591, "vertical": 591, "awai": [591, 592], "pyart_bal": [591, 592, 595, 612, 632, 647, 655], "substanti": 591, "211": [591, 634], "ax2": [591, 595, 603, 604, 612, 619, 633, 634, 637, 639, 640, 641, 647, 655], "212": [591, 634], "pangeo": 591, "1736": 591, "600": [591, 653], "r_calib": 591, "14t00": 591, "489e": 591, "806e": 591, "107": 591, "886e": 591, "command_lin": 591, "kazrcfr_ingest": 591, "guc": 591, "m1": 591, "process_vers": 591, "kazrcfr": 591, "el7": 591, "dod_vers": 591, "kazrcfrg": 591, "input_sourc": 591, "guckazrm1": 591, "kazr_moments_": 591, "site_id": 591, "software_vers": 591, "wed": 591, "mar": 591, "leachman": 591, "1498936": 591, "histori": [591, 659], "dsmgr": 591, "procnode2": 591, "1736rang": 591, "600frequenc": 591, "1sweep": 591, "1r_calib": 591, "1coordin": 591, "453818": 591, "startstandard_nam": 591, "timearrai": 591, "453818000": 591, "527426000": 591, "601027000": 591, "002026000": 591, "075634000": 591, "149219000": 591, "float323": 591, "10long_nam": 591, "transmit": [591, 655], "frequencyunit": 591, "hzstandard_nam": 591, "radiation_frequencymeta_group": 591, "instrument_parametersarrai": 591, "float32100": 591, "130": 591, "803e": 591, "04long_nam": 591, "volumeunit": 591, "mmeters_between_g": 591, "979246meters_to_center_of_first_g": 591, "679245spacing_is_const": 591, "truestandard_nam": 591, "projection_range_coordinateaxi": 591, "radial_range_coordinatearrai": 591, "679245": 591, "6585": 591, "160": [591, 639, 643, 644, 657, 660], "63774": 591, "17998": 591, "18028": 591, "268": [591, 630, 635, 660], "18058": 591, "248": 591, "northunit": 591, "degreestandard_nam": 591, "sensor_to_target_azimuth_angleaxi": 591, "radial_azimuth_coordinatearrai": 591, "planeunit": 591, "sensor_to_target_elevation_angleaxi": 591, "radial_elevation_coordinatearrai": 591, "00long_nam": 591, "epochancillary_vari": 591, "time_offsetarrai": 591, "base_timeancillary_vari": 591, "base_timearrai": 591, "unspecifiedunit": 591, "dbstandard_nam": 591, "radar_linear_depolarization_ratiounpacking_detail": 591, "unpack": 591, "pack": [591, 597], "1041600": 591, "motion": 591, "instrumentunit": 591, "sstandard_nam": 591, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 591, "crosspolar": 591, "channelunit": 591, "factorunit": 591, "dbzstandard_nam": 591, "equivalent_reflectivity_factorunpacking_detail": 591, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 591, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 591, "widthunit": 591, "radar_doppler_spectrum_widthunpacking_detail": 591, "angleunit": 591, "degreearrai": 591, "n_sampl": 591, "momentsunit": 591, "1meta_group": 591, "instrument_parametersstandard_nam": 591, "number_of_samples_used_to_compute_momentsarrai": 591, "noise_figur": 591, "receiv": [591, 594, 597, 655], "methodunit": 591, "dbarrai": 591, "67": [591, 640, 641], "8043": 591, "unambigu": [591, 659], "velocityunit": 591, "smeta_group": 591, "968252": 591, "repetit": 591, "timeunit": 591, "sarrai": 591, "00027": 591, "transmitt": 591, "r_calib_radar_constant_copol": 591, "copolarunit": 591, "dbmeta_group": 591, "radar_calibrationstandard_nam": 591, "calibrated_radar_constant_h_channelarrai": 591, "996191": 591, "r_calib_radar_constant_crosspol": 591, "crosspolarunit": 591, "405288": 591, "r_calib_two_way_radome_loss_h": 591, "radom": 591, "loss": 591, "radar_calibration_two_way_radome_loss_h_channelarrai": 591, "half": 591, "radar_measured_sky_noise_h": 591, "sky": 591, "dbmarrai": 591, "69": [591, 626, 643], "03703": 591, "035995": 591, "0373": 591, "03814": 591, "05106": 591, "05984": 591, "radar_measured_sky_noise_v": 591, "radar_measured_transmit_pow": 591, "powerunit": 591, "dbmmeta_group": 591, "radar_transmit_powerarrai": 591, "143": [591, 643], "receiver_gain_copol": 591, "copolunit": 591, "sweepunit": 591, "1735": 591, "s22": 591, "basedunit": 591, "unambiguous_rang": [591, 659], "rangeunit": 591, "mmeta_group": 591, "unambiguous_rangearrai": 591, "40479": 591, "477": [591, 597], "degree_nstandard_nam": 591, "latitudevalid_min": 591, "0valid_max": 591, "0arrai": 591, "956158": 591, "degree_estandard_nam": 591, "longitudevalid_min": 591, "106": 591, "987854": 591, "altitudeunit": 591, "mstandard_nam": 591, "altitudearrai": 591, "2886": 591, "levelunit": 591, "heightarrai": 591, "m1convent": 591, "radar_calibrationprocess_vers": 591, "el7dod_vers": 591, "1input_sourc": 591, "kazr_moments_20220314": 591, "000005": 591, "datsite_id": 591, "gucplatform_id": 591, "kazrcfrgefacility_id": 591, "m1data_level": 591, "a1location_descript": 591, "laboratori": 591, "sail": 591, "mt": 591, "crest": 591, "butt": [591, 592], "coloradodatastream": 591, "a1antenna_altitud": 591, "mantenna_diamet": 591, "mcomment": 591, "digital_rx_dec": 591, "24dualpol": 591, "0fft_len": 591, "512filter_length": 591, "67institut": 591, "radiat": [591, 592, 594, 595, 598, 651, 653, 654, 655, 657, 658, 659, 662], "research": [591, 592, 594, 598, 651, 653, 654, 655, 657, 658, 659, 662], "facilityn_g": 591, "1024num_spectral_averag": 591, "15pulse_compression_ratio": 591, "3range_gate_spacing_m": 591, "979246range_offset_ch1": 591, "mrange_offset_ch2": 591, "mscan_mod": 591, "pointingscan_nam": 591, "vptsoftware_vers": 591, "leachmantitl": 591, "momentsdoi": 591, "1498936histori": 591, "isel": 591, "coupl": [591, 595], "extra": [591, 594, 597], "won": 591, "600rang": 591, "600coordin": 591, "395940000": 591, "469427000": 591, "542946000": 591, "360000": 591, "quadmesh": [591, 592], "0x7f7dad654f10": 591, "meant": [591, 593], "popular": [591, 594], "jump": 591, "bar": 591, "hover": 591, "inspect": 591, "clabel": [591, 629, 630], "xformatt": 591, "ref_plot": 591, "7000": [591, 657], "platform_id": 591, "location_descript": 591, "xtick": [591, 654, 657], "ytick": [591, 654, 657], "vel_plot": 591, "prepar": [591, 592, 594, 595, 598, 653, 654, 655, 657, 658, 659, 662], "plot1": 591, "plot2": 591, "datashad": 591, "lazili": 591, "coars": 591, "intial": 591, "unfortun": 591, "ref_plot_rast": 591, "param": [591, 597], "dynamic_oper": 591, "outofboundsdatetim": 591, "nanosecond": 591, "54168": 591, "invok": 591, "x_rang": 591, "13t23": 591, "417014000": 591, "579705000": 591, "y_rang": 591, "traceback": 591, "recent": [591, 597, 664], "mgrover": [591, 594, 595, 608, 612, 618, 619, 624, 632, 638, 639, 647, 648, 649], "277": [591, 597], "get_plot_fram": 591, "map_obj": 591, "1344": 591, "val": 591, "_execute_callback": 591, "tuple_kei": 591, "retval": 591, "callback": 591, "arg": 591, "708": 591, "__call__": 591, "ret": 591, "__init__": [591, 598, 609, 662], "1043": [591, 597], "obj": 591, "resolv": [591, 597], "1032": [591, 597], "1044": 591, "1036": 591, "_process": 591, "1018": [591, 597], "process_el": 591, "194": 591, "_appli": 591, "141": 591, "1514": 591, "predic": [591, 595], "207": 591, "pipelined_fn": 591, "method_fn": 591, "1223": 591, "super": [591, 623, 654, 657], "710": [591, 597], "map_fn": 591, "214": [591, 610], "1133": [591, 597], "astyp": 591, "int64": 591, "1497": [591, 597], "apply_ufunc": 591, "1159": 591, "apply_dataarray_vfunc": 591, "286": [591, 597], "result_var": 591, "data_var": 591, "750": [591, 597, 643, 644, 660], "apply_variable_ufunc": 591, "as_compatible_data": 591, "234": 591, "_possibly_convert_object": 591, "178": 591, "asarrai": 591, "ravel": 591, "reshap": 591, "sanitize_arrai": 591, "567": [591, 597], "subarr": 591, "_try_cast": 591, "raise_cast_failur": 591, "726": [591, 597], "sanitize_to_nanosecond": 591, "arr": 591, "cast": 591, "1717": 591, "ensure_datetime64n": 591, "_lib": 591, "tslib": 591, "pyx": [591, 597], "257": 591, "np_datetim": 591, "120": [591, 653], "check_dts_bound": 591, "saw": 591, "few": [591, 597, 600, 664], "pro": 591, "con": 591, "thing": [591, 598, 662], "clear": [591, 595], "push": [591, 597, 598, 600, 662], "share": 591, "ran": [591, 598, 662], "shareabl": 591, "workflow": [591, 594, 597], "mb": [591, 605, 610, 616, 635, 644, 645, 650, 660], "difficult": [591, 612], "jupyterbook": 591, "jupyt": [591, 594, 597, 603, 604, 606, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 664], "campaign": [591, 595, 641], "twitter": 592, "nou": 592, "dryglick": 592, "notic": [592, 595, 597, 612, 620], "odd": 592, "directli": [592, 618], "grei": 592, "darker": 592, "moir\u00e9": 592, "ryan": 592, "dopplershift": [592, 597], "turbul": 592, "forecast": 592, "ncei": 592, "search": [592, 651, 661], "aw": [592, 594, 597, 606, 607, 609, 610, 660], "mention": [592, 597, 598, 651, 662, 664], "he": 592, "n0u": [592, 608], "elgin": 592, "panhandl": 592, "kevx": 592, "1458": 592, "octob": 592, "landfal": 592, "gulf": 592, "lookl": 592, "webpag": 592, "cart": 592, "sent": 592, "email": [592, 595, 597], "websit": 592, "ftp": 592, "unzip": [592, 594], "kmob_sdus54_n0uevx_201810101458": 592, "partli": [592, 594, 653, 654, 655, 657, 658, 659], "facil": [592, 594, 595, 598, 651, 653, 654, 655, 657, 658, 659, 662], "cite": [592, 594, 595, 597, 653, 654, 655, 657, 658, 659], "jj": [592, 594, 653, 654, 655, 657, 658, 659], "sm": [592, 594, 653, 654, 655, 657, 658, 659], "colli": [592, 594, 598, 651, 653, 654, 655, 657, 658, 659, 662], "jor": [592, 594, 598, 651, 653, 654, 655, 657, 658, 659, 662], "5334": [592, 594, 598, 651, 653, 654, 655, 657, 658, 659, 662], "119": [592, 594, 598, 609, 651, 653, 654, 655, 657, 658, 659, 662], "read_level3": 592, "dark": 592, "dark_background": 592, "okai": 592, "88": [592, 594, 638], "83": 592, "31msignatur": [592, 595], "0m": [592, 594, 595], "0mdisplai": 592, "34m": [592, 595], "0mplot_ppi_map": 592, "0mfield": 592, "0msweep": 592, "36m0": 592, "0mmask_tupl": 592, "32mnone": [592, 595], "0mvmin": 592, "0mvmax": 592, "0mcmap": 592, "0mnorm": 592, "0mmask_outsid": 592, "32mfals": 592, "0mtitl": 592, "0mtitle_flag": 592, "32mtrue": 592, "0mcolorbar_flag": 592, "0mcolorbar_label": 592, "0max": 592, "0mfig": 592, "0mlat_lin": 592, "0mlon_lin": 592, "0mproject": 592, "0mmin_lon": 592, "0mmax_lon": 592, "0mmin_lat": 592, "0mmax_lat": 592, "0mwidth": 592, "0mheight": 592, "0mlon_0": 592, "0mlat_0": 592, "0mresolut": 592, "0mshapefil": 592, "0mshapefile_kwarg": 592, "0medg": 592, "0mgatefilt": 592, "0mfilter_transit": 592, "0membelish": 592, "0mraster": 592, "0mtick": 592, "0mticklab": 592, "0malpha": 592, "31msourc": 592, "32mdef": 592, "0mself": 592, "embelish": [592, 597], "31m": 592, "0mparse_vmin_vmax": 592, "0m_radar": 592, "0mparse_cmap": 592, "32mif": 592, "32mi": 592, "0mnp": 592, "0marang": 592, "36m30": 592, "36m46": 592, "36m1": 592, "36m110": 592, "36m75": 592, "0mloc": 592, "0mdata": 592, "0m_get_data": 592, "0mx": 592, "0my": 592, "0m_get_x_i": 592, "0mma": 592, "0mmasked_outsid": 592, "0mplt": 592, "0mgcf": 592, "32mnot": 592, "0mhasattr": 592, "32mels": 592, "0mcartopi": 592, "0mcr": 592, "0mlambertconform": 592, "0mcentral_longitud": 592, "0mcentral_latitud": 592, "0mwarn": 592, "overrid": [592, 630], "lambert": [592, 597], "0muserwarn": 592, "0mset_ext": 592, "0mplatecarre": 592, "32melif": 592, "36m2": 592, "0mgrid_project": 592, "0mpm": 592, "0mpcolormesh": 592, "36m1000": 592, "0mtransform": 592, "graphic": 592, "0mset_raster": 592, "admin": [592, 598, 662], "0mstates_provinc": 592, "0mfeatur": 592, "0mnaturalearthfeatur": 592, "0mcategori": 592, "cultur": 592, "0mname": 592, "admin_1_states_provinces_lin": 592, "0mscale": 592, "0mfacecolor": 592, "0mcoastlin": 592, "0madd_featur": 592, "0medgecolor": 592, "pose": 592, "difficulti": 592, "spectif": 592, "32min": 592, "0mmercat": 592, "0mgl": 592, "0mgridlin": 592, "0mxloc": 592, "0myloc": 592, "0mdraw_label": 592, "0mxlabels_top": 592, "0mylabels_right": 592, "0misinst": 592, "0mfigur": 592, "0mcanva": 592, "0mdraw": 592, "maker": 592, "0mxaxi": 592, "0mset_major_formatt": 592, "0mmpl": 592, "0mlongitude_formatt": 592, "0myaxi": 592, "0mlatitude_formatt": 592, "0m_lambert_gridlin": 592, "0mlambert_xtick": 592, "0mlambert_ytick": 592, "32mfrom": 592, "0mio": 592, "0mshaperead": 592, "32mimport": 592, "0mreader": 592, "0madd_geometri": 592, "0mgeometri": 592, "0m_set_titl": 592, "0mplot": 592, "0mappend": 592, "0mplot_var": 592, "0mplot_colorbar": 592, "0mmappabl": 592, "0mlabel": 592, "32mreturn": 592, "31mfile": [592, 595], "git_repo": 592, "31mtype": [592, 595], "fashion": 592, "0marg": 592, "0mshade": 592, "0mantialias": 592, "0mkwarg": 592, "31mdocstr": [592, 595], "pseudocolor": 592, "signatur": [592, 594], "quadrilater": 592, "pcolor": 592, "prefer": [592, 597, 661], "ref": [592, 609, 633, 641], "shade": [592, 597], "flat": [592, 608], "gouraud": 592, "cari": 592, "expand": 592, "rc": 592, "regist": [592, 595], "canon": 592, "chosen": 592, "patch": [592, 629], "force_edgecolor": 592, "singular": 592, "opaqu": 592, "auto": [592, 594, 618], "solid": [592, 630], "quad": 592, "halfwai": 592, "galleri": [592, 597, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649, 651, 660], "images_contours_and_field": 592, "pcolormesh_grid": 592, "snap": 592, "mesh": 592, "misc": [592, 597], "rasterization_demo": 592, "constructor": 592, "agg_filt": 592, "anim": 592, "antialias": [592, 629, 630], "aa": 592, "capstyl": 592, "clip_box": 592, "bbox": 592, "clip_on": 592, "clip_path": 592, "rgba": 592, "ec": 592, "fc": 592, "gid": 592, "hatch": 592, "in_layout": 592, "joinstyl": 592, "miter": 592, "bevel": 592, "thereof": 592, "offset_transform": 592, "path_effect": 592, "abstractpatheffect": 592, "picker": 592, "pickradiu": 592, "sketch_param": 592, "random": [592, 595], "zorder": 592, "imshow": [592, 597, 613, 614, 615, 618], "_ax": 592, "nrow": [592, 618], "ncolumn": 592, "_differ": 592, "li": 592, "handl": [592, 597], "polycollect": 592, "thu": [592, 600], "almost": 592, "slight": 592, "polygon": 592, "irrespect": 592, "One": [592, 598, 653, 659, 662, 664], "masked_arrai": [592, 653, 659], "1e": [592, 653, 659], "next": [592, 594, 600, 608, 637], "get_gate_lat_lon_alt": [592, 595, 597], "565": [592, 597], "562763": 592, "560526": 592, "888458": 592, "886227": 592, "883991": 592, "562765": 592, "560532": 592, "892834": 592, "890606": 592, "888374": 592, "562769": 592, "56054": 592, "898003": 592, "89578": 592, "893553": 592, "562756": 592, "560509": 592, "880096": 592, "877857": 592, "875618": 592, "560513": 592, "881853": 592, "879616": 592, "877377": 592, "56276": 592, "560518": 592, "884874": 592, "88264": 592, "880404": 592, "92199": 592, "92222": 592, "92245": 592, "186806": 592, "18703": 592, "18723": 592, "922264": 592, "92254": 592, "2396": 592, "23986": 592, "24012": 592, "92231": 592, "92263": 592, "29231": 592, "29262": 592, "29292": 592, "92208": 592, "92218": 592, "02802": 592, "02811": 592, "0282": 592, "92212": 592, "92226": 592, "07571": 592, "07583": 592, "07595": 592, "922356": 592, "133934": 592, "1341": [592, 597], "13428": 592, "setup": [592, 595, 597, 608, 612, 618, 619, 624, 638, 651, 661], "geoaxi": 592, "border": [592, 629], "cbar": [592, 620], "tick_param": 592, "labels": 592, "set_label": [592, 620], "gl": [592, 594, 620], "draw_label": [592, 594, 620], "xlabel_styl": [592, 620], "ylabel_styl": [592, 620], "kevz_velocity_2018_10_10_1458": 592, "specifici": 592, "pull": [592, 597, 598, 599, 600, 609, 662], "pr": [592, 600], "importantli": 592, "api": [592, 597], "abil": [592, 597, 651, 664], "arguement": 592, "explor": [592, 594], "appreci": [592, 651], "hello": 593, "welcom": 593, "narr": 593, "feedback": 593, "feel": 593, "know": [593, 595, 664], "fridai": 594, "midwest": 594, "142": 594, "368": [594, 597], "excess": 594, "65": [594, 637], "knot": 594, "mph": 594, "184": 594, "hail": [594, 597, 642], "bing": 594, "inch": 594, "diamet": 594, "ifram": 594, "spc": [594, 597], "climo": 594, "gmf": 594, "php": 594, "rpt": 594, "230331_rpts_filter": 594, "walworth": 594, "counti": 594, "southeastern": [594, 612], "geneva": 594, "tourist": 594, "especi": [594, 595, 613], "live": 594, "chicagoland": 594, "confirm": [594, 608, 653], "assembl": 594, "summari": [594, 608], "grlevel": 594, "encourag": 594, "peopl": 594, "cookbook": [594, 597, 651, 663], "moor": 594, "focu": 594, "varieti": [594, 595, 598, 606, 607, 641, 662], "forg": [594, 597, 598, 651, 661, 662, 664], "arm_pyart": [594, 598, 600, 651, 661, 662, 664], "shaperead": 594, "shpreader": 594, "shapelyfeatur": 594, "miniforge3": 594, "tqdm": 594, "tqdmwarn": 594, "iprogress": 594, "ipywidget": 594, "readthedoc": 594, "stabl": 594, "user_instal": 594, "autonotebook": 594, "notebook_tqdm": 594, "credit": 594, "censu": 594, "mac": [594, 597, 651], "curl": 594, "linux": [594, 597, 598, 651, 662, 664], "wget": 594, "www2": 594, "geo": [594, 597], "tiger": 594, "tiger2016": 594, "primaryroad": 594, "tl_2016_us_primaryroad": 594, "zip": [594, 606, 609, 613, 618, 651], "xferd": 594, "dload": 594, "upload": [594, 597], "spent": 594, "7m": 594, "cpg": 594, "inflat": 594, "dbf": 594, "prj": 594, "shp": 594, "ea": 594, "iso": 594, "shx": 594, "reader": [594, 596, 597, 609], "geom": 594, "loop": [594, 597, 643], "rec": 594, "fullnam": 594, "interstate_featur": 594, "darkblu": 594, "clean": [594, 597, 637, 647], "filesystem": 594, "month": [594, 608, 609], "kmkx20230401_010517_v06": 594, "kmkx20230401_011057_v06": 594, "kmkx20230401_011638_v06": 594, "kmkx20230401_012219_v06": 594, "kmkx20230401_012759_v06": 594, "kmkx20230401_013341_v06": 594, "kmkx20230401_013922_v06": 594, "kmkx20230401_014502_v06": 594, "kmkx20230401_015042_v06": 594, "kmkx20230401_015623_v06": 594, "kmkx20230401_015928_v06": 594, "plot_configur": 594, "twilight_shift": [594, 647], "cross_correlation_ratio": [594, 608, 621, 622, 640, 641, 658, 659], "plot_radar_ppi": 594, "left_field": 594, "right_field": 594, "plot_config": 594, "precip": 594, "vel_dealia": 594, "dealias_region_bas": [594, 597, 604, 637, 647, 655], "add_field": [594, 598, 603, 604, 637, 640, 641, 642, 647, 654, 655, 662], "corrected_veloc": [594, 604, 637, 643, 647, 655, 658], "plot_numb": 594, "config": [594, 597, 653, 664], "121": [594, 595, 608, 612, 619, 639, 647], "generate_titl": 594, "time_step": 594, "get_start_end": 594, "central_tim": 594, "astimezon": 594, "new_titl": 594, "cdt": 594, "sharon": 594, "Near": 594, "delavan": 594, "6105": 594, "60666": 594, "lightgrei": 594, "lavenderblush": 594, "ppi_velocity_reflectivity_": 594, "flexibl": [594, 597], "hope": 594, "visual": [595, 597, 618, 621, 629, 638, 641, 647], "notabl": [595, 596], "insight": [595, 596], "analyz": [595, 598, 651, 658, 662], "decid": 595, "quicklook": 595, "januari": [595, 598, 651, 662], "wettest": 595, "la": 595, "jolla": 595, "california": 595, "tarfil": 595, "download_arm_data": 595, "0mact": 595, "0mdiscoveri": 595, "0mdownload_arm_data": 595, "0musernam": 595, "0mtoken": 595, "0mdatastream": 595, "0mstartdat": 595, "0menddat": 595, "0mtime": 595, "0moutput": 595, "webservic": 595, "usernam": [595, 661], "log": [595, 597, 600], "adc": [595, 597], "datastream": 595, "acquir": 595, "startdat": 595, "yyyi": [595, 596], "dd": [595, 596], "yyyymmdd": 595, "thh": 595, "ss": 595, "15t12": 595, "enddat": 595, "15t13": 595, "hhmmss": 595, "programmat": 595, "rest": 595, "savedata": 595, "cron": 595, "job": 595, "workspac": 595, "elimin": [595, 655, 657], "disk": 595, "hpss": 595, "armliv": 595, "livedata": 595, "giansiracusa": 595, "giansiracumt": 595, "ornl": 595, "sgpmete13": 595, "jan": 595, "2017": 595, "xxxxxxxxxxxxxxxx": 595, "download_data": 595, "mambaforg": 595, "epckasacrcfrs2": 595, "21t01": 595, "20240121": 595, "010020": 595, "010436": 595, "011116": 595, "012914": 595, "012503": 595, "011845": 595, "012257": 595, "010757": 595, "010118": 595, "011434": 595, "012708": 595, "011640": 595, "012051": 595, "bharadwaj": 595, "hardin": 595, "isom": 595, "johnson": 595, "lindenmai": 595, "matthew": 595, "nelson": 595, "feng": 595, "deng": 595, "rocqu": 595, "castro": 595, "wendler": 595, "ka": 595, "kasacrcfr": 595, "1469302": 595, "trick": 595, "ones": [595, 618], "798": 595, "runtimewarn": 595, "encount": 595, "intersect": 595, "whic": 595, "ppi_fil": 595, "rhi_fil": 595, "elif": 595, "mainli": 595, "threshold_valu": 595, "suptitl": [595, 603, 604, 613, 632, 643], "tight_layout": [595, 613, 634, 637], "too": [595, 597], "And": [595, 597], "remaind": 595, "fromnumer": [595, 603], "784": [595, 597], "maskedarrai": [595, 597, 603], "kth": [595, 603], "idea": [595, 653, 655], "0115": 595, "rhi_radar": 595, "ppi_radar": 595, "achiv": 595, "past": [596, 598, 662], "tag": [596, 597], "kernelspec": 596, "display_nam": 596, "ipykernel": 596, "languag": [596, 598, 651, 662], "language_info": 596, "codemirror_mod": 596, "file_extens": 596, "mimetyp": 596, "nbconvert_export": 596, "pygments_lex": 596, "ipython3": 596, "insert": 596, "nbformat": 596, "nbformat_minor": 596, "care": 596, "isilb": 597, "sinaram": 597, "1532": 597, "zssherman": 597, "get_azimuth": 597, "xradar": [597, 650, 660], "1547": 597, "mgrover1": 597, "1544": 597, "1542": 597, "1541": 597, "bridg": 597, "1537": 597, "columnsect": [597, 638], "1529": 597, "failur": 597, "wheel": 597, "1526": 597, "dep": 597, "bump": 597, "action": [597, 598, 600, 662], "group": [597, 598, 662], "1539": 597, "dependabot": 597, "epcap": 597, "1534": 597, "1530": 597, "1528": 597, "zdist_factor": 597, "1509": 597, "1524": 597, "1519": 597, "codeql": 597, "1515": 597, "pin": [597, 600], "ci": [597, 599, 600], "1507": 597, "xdrlib": 597, "1525": 597, "1518": 597, "1492": 597, "kmuehlbauer": 597, "rtanamachi": 597, "1504": 597, "1487": 597, "1478": 597, "jrobrien91": 597, "1503": 597, "1501": 597, "outdat": 597, "ipynb": [597, 603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649], "1490": 597, "1484": 597, "1482": 597, "1474": 597, "commit": [597, 598, 600, 662], "1506": 597, "1475": 597, "rainbow_wrl": 597, "happyxiaoanan": 597, "reclass": 597, "1495": 597, "rbhupi": 597, "1493": 597, "minor": [597, 613, 654, 657], "get_elev": 597, "1489": 597, "rescal": [597, 640, 641], "1486": 597, "1479": 597, "rcjackson": 597, "app": 597, "cmweather": 597, "1452": 597, "accessor": 597, "1457": 597, "syedhamidali": 597, "1456": 597, "typo": 597, "1471": 597, "isinst": 597, "1448": 597, "1472": 597, "1470": 597, "1469": 597, "instruct": [597, 651, 663], "1462": 597, "1473": 597, "1468": 597, "1450": 597, "scolli": 597, "dim": 597, "load_kazr": 597, "1446": 597, "1447": 597, "arm_vpt": 597, "1445": 597, "lint": [597, 598, 662], "1444": 597, "mnt": 597, "1440": [597, 653], "dedic": 597, "1442": 597, "1443": 597, "1437": 597, "algorith": 597, "1434": 597, "wolfidan": 597, "1430": 597, "1433": 597, "1428": 597, "neutrinocero": 597, "odim": 597, "1425": 597, "gatemapp": [597, 606, 611, 616, 660], "1418": 597, "hook": [597, 598, 662], "1419": 597, "sphinx": [597, 603, 604, 606, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 647, 648, 649], "theme": 597, "1427": 597, "feet": 597, "1423": 597, "leak": 597, "mapper": 597, "1421": 597, "vforcel": 597, "1417": 597, "steepatticstair": 597, "1407": 597, "readm": [597, 661], "1397": 597, "1416": 597, "1413": 597, "1411": 597, "1409": 597, "1401": 597, "joshua": 597, "hampton": 597, "del": [597, 620], "old": 597, "conda_recip": 597, "1399": 597, "ruff": 597, "1388": 597, "wrong": 597, "1390": 597, "1385": 597, "1383": 597, "pkg_resourc": 597, "runtim": 597, "1394": 597, "mail": [597, 598, 651, 662], "1393": 597, "codeown": 597, "1391": 597, "1384": 597, "1382": 597, "1379": 597, "mismatch": 597, "1381": 597, "wrap": 597, "get_gate_area": 597, "1375": 597, "1380": [597, 653], "1372": 597, "exec_modul": 597, "load_modul": 597, "1369": 597, "badg": 597, "1363": 597, "read_sigmet": 597, "1351": 597, "zouihao": 597, "unus": 597, "1343": 597, "1342": 597, "range_step": 597, "1338": 597, "max_num_g": 597, "1337": 597, "1327": 597, "revert": 597, "setuptool": 597, "unwant": 597, "cleanup": 597, "1357": 597, "1355": 597, "1339": 597, "1361": 597, "1335": 597, "manipul": [597, 620, 652], "1300": 597, "kylejgillett": 597, "melovato": 597, "tsbiscaro": 597, "1324": 597, "1319": 597, "1314": 597, "add_filt": 597, "1326": 597, "1320": [597, 653], "1325": 597, "jthielen": 597, "1303": 597, "jjhelmu": [597, 664], "wx4stg": 597, "antiviru": 597, "similiar": 597, "1307": 597, "1299": 597, "throw": 597, "convolve1d": 597, "1313": 597, "1306": 597, "1317": 597, "1311": 597, "jfigui": 597, "citat": [597, 598, 621, 651, 662], "1304": 597, "gamaanderson": 597, "hhuangwx": 597, "josephhardine": 597, "meteoswiss": [597, 642, 643], "mdr": 597, "ngui": 597, "tjlang": 597, "1294": 597, "1290": 597, "1285": 597, "1279": 597, "backward": [597, 601], "1278": 597, "1284": 597, "tracer": 597, "1296": 597, "1292": 597, "1287": 597, "cibuildwheel": 597, "1267": 597, "ocefpaf": 597, "1275": 597, "1276": 597, "1265": 597, "dcedgren": 597, "jilling": 597, "zhaobudaola": 597, "1263": 597, "1235": 597, "1215": 597, "1261": 597, "1241": 597, "1240": 597, "gatefi": 597, "1226": 597, "join_radar": 597, "repititon": 597, "iparam": 597, "1218": 597, "1216": 597, "trmm_rsl": 597, "1239": 597, "cftime": 597, "1211": 597, "incorrect": [597, 601, 655], "1231": 597, "ci_setup": 597, "1213": 597, "1264": 597, "basic": [597, 651, 652, 654], "1251": 597, "1234": 597, "1228": 597, "subset_radar": 597, "radar_util": 597, "1227": 597, "pyrad": 597, "1220": 597, "tst": 597, "median": 597, "1214": 597, "srbrodzik": 597, "1208": 597, "1204": 597, "1201": [597, 608], "1198": 597, "1196": 597, "catch": 597, "1191": 597, "1207": 597, "pypi": 597, "1206": 597, "unitest": 597, "1200": [597, 653], "1199": 597, "echoclass": 597, "1197": 597, "convv": 597, "awhil": 597, "back": 597, "1195": 597, "1190": 597, "dp": 597, "1184": 597, "solver": [597, 651], "1183": 597, "1176": 597, "1187": 597, "revis": 597, "270": [597, 598, 634, 662], "1185": 597, "1181": 597, "1178": 597, "1171": 597, "1180": 597, "1177": 597, "1173": 597, "sobitp59": 597, "rogu": 597, "1170": 597, "1160": 597, "1152": 597, "1151": 597, "mispel": 597, "1158": 597, "1148": 597, "1167": 597, "1154": 597, "unittest": 597, "1153": 597, "scm": [597, 598, 662], "1136": 597, "trigger": 597, "1126": 597, "1118": 597, "1115": 597, "maco": 597, "1147": 597, "prune": 597, "1143": 597, "1141": 597, "1140": [597, 653], "1139": 597, "1137": 597, "1131": 597, "1130": 597, "1129": 597, "1128": 597, "1127": 597, "1125": 597, "1124": 597, "1123": 597, "1120": 597, "1119": 597, "dpr": 597, "1116": 597, "postcard": 597, "1104": 597, "1103": 597, "1122": 597, "gridmapdisplai": [597, 606, 617, 619, 635, 640, 641, 648, 657, 660], "1099": 597, "quick": [597, 608], "1146": 597, "contribut": [597, 598, 662, 663], "1106": 597, "1117": 597, "1113": 597, "submodul": [597, 657], "1110": 597, "forgotten": 597, "1108": 597, "test_echo_class": 597, "1107": 597, "1101": 597, "1098": 597, "1097": 597, "1094": 597, "1080": [597, 653], "registri": 597, "1087": 597, "1096": 597, "1093": 597, "1090": 597, "1089": 597, "1088": 597, "1085": 597, "1084": 597, "analyt": 597, "1081": 597, "1079": 597, "1077": 597, "pmi": 597, "csp": 597, "ritvj": 597, "doesn": [597, 653], "mandat": 597, "1014": 597, "reallynicegui": 597, "hasattr": 597, "1034": 597, "overlap": [597, 620, 629], "mapdisplai": 597, "1029": 597, "azimuth_rhi_plot": 597, "1025": 597, "1019": 597, "rxm25": 597, "1075": 597, "1064": 597, "mute_radar": 597, "1033": 597, "1030": 597, "radxgrid": 597, "1027": 597, "1026": 597, "roadmap": 597, "repo": [597, 598, 662], "1059": 597, "sidebar": 597, "1074": 597, "datetime_util": 597, "1072": 597, "1071": 597, "pydata": 597, "1069": 597, "1068": 597, "1067": 597, "1066": 597, "1063": 597, "codecov": 597, "1061": 597, "1060": 597, "1058": 597, "1056": 597, "1055": 597, "1053": 597, "1051": 597, "1050": 597, "1048": 597, "branch": [597, 598, 600, 662, 664], "1040": 597, "1039": 597, "1038": 597, "1031": 597, "1024": 597, "1020": [597, 653], "humphreyscart": 597, "tkralph": 597, "1003": 597, "997": 597, "1007": 597, "1001": 597, "1010": 597, "travi": 597, "sty": [597, 598, 662], "pep8": [597, 598, 662], "1005": 597, "988": 597, "quba1": 597, "984": 597, "tdwr": 597, "969": 597, "956": 597, "994": 597, "979": 597, "h5py": [597, 651], "978": 597, "june1st": 597, "switch": [597, 598, 662], "973": 597, "maint": [597, 598, 662], "966": 597, "983": 597, "amarouan": 597, "abdelhak": 597, "bmgxyz": 597, "address": 597, "962": 597, "mwilson14": 597, "963": 597, "nonetyp": 597, "regard": 597, "959": 597, "964": 597, "176": 597, "919": 597, "rda": 597, "903": 597, "add_gate_area": 597, "950": 597, "blotchi": 597, "947": 597, "946": 597, "944": 597, "694": 597, "938": 597, "vlouf": 597, "934": 597, "925": 597, "924": 597, "917": 597, "appveyor": 597, "937": 597, "927": 597, "liter": 597, "said": 597, "949": 597, "948": 597, "929": 597, "926": 597, "920": 597, "915": 597, "911": 597, "grwise1": 597, "jsignel": 597, "rumpki": 597, "broke": 597, "913": 597, "msg29": 597, "909": [597, 631, 635, 660], "907": 597, "framework": 597, "910": 597, "912": 597, "napoleon": 597, "902": 597, "rtd": 597, "893": 597, "892": 597, "odimh5": 597, "898": 597, "895": 597, "896": [597, 613, 616, 660], "864": 597, "louiswick": 597, "hilderbrand": 597, "877": [597, 609, 610, 660], "886": 597, "crash": 597, "878": 597, "891": 597, "zflamig": 597, "futur": [597, 598, 601, 662], "890": 597, "889": 597, "885": 597, "dstex": 597, "880": 597, "soon": 597, "879": 597, "plot_grid": [597, 619, 633, 640, 641, 648, 657], "to_xarrai": 597, "873": 597, "876": 597, "elementwis": 597, "anaconda": [597, 598, 600, 651, 661, 662], "faq": 597, "868": 597, "mvanlierwalq": 597, "848": 597, "grid_io": 597, "846": 597, "jhemedin": 597, "841": [597, 623, 635, 660], "nbin": 597, "865": 597, "856": 597, "840": [597, 653], "caus": 597, "852": 597, "849": 597, "get_dataset": 597, "845": 597, "docstr": 597, "838": 597, "836": 597, "cheatsheet": 597, "fortran": 597, "bit": [597, 661], "environ": [597, 651, 661, 663], "contr": 597, "843": 597, "spell": 597, "835": 597, "read_d3r_gcpex_nc": 597, "842": 597, "eccc": 597, "837": 597, "taylbm": 597, "kenkeho": 597, "swnesbitt": 597, "827": 597, "822": 597, "806": 597, "804": 597, "800": [597, 637], "778": 597, "688": [597, 638], "incomplet": 597, "msg5": 597, "832": 597, "820": 597, "812": 597, "deal": 597, "809": 597, "contiuum": 597, "gh": 597, "795": 597, "explicit": 597, "py2": 597, "790": 597, "sh": 597, "kai": 597, "muehlbauer": 597, "789": 597, "777": 597, "indexerror": 597, "check_outli": 597, "776": 597, "juhi24": 597, "770": 597, "imp": 597, "newer": [597, 661], "675": 597, "824": 597, "minu": 597, "803": 597, "738": 597, "799": 597, "792": 597, "favor": 597, "791": 597, "786": 597, "itself": [597, 659], "inc": 597, "794": 597, "rst": 597, "preformat": 597, "779": 597, "eaxmpl": 597, "834": 597, "833": 597, "elsewher": 597, "831": 597, "828": [597, 612, 616, 660], "821": 597, "pytest": [597, 598, 651, 661, 662], "818": [597, 622, 635, 660], "atteun": 597, "817": [597, 603, 605, 660], "simulated_veloc": [597, 658], "802": 597, "grab": [597, 632], "801": 597, "796": 597, "793": 597, "787": 597, "781": 597, "cvd": 597, "775": 597, "774": 597, "769": 597, "nl2": 597, "765": 597, "miaoneng": 597, "gewitterblitz": 597, "liliaow567": 597, "764": 597, "coveral": 597, "messsag": 597, "761": 597, "757": 597, "set_raster": 597, "748": 597, "754": 597, "755": 597, "recompil": 597, "758": 597, "ngoldbaum": 597, "reciev": 597, "752": 597, "gate_id": [597, 658], "749": 597, "746": 597, "744": [597, 621, 635, 660], "zxdawn": 597, "netcdftim": 597, "736": 597, "731": 597, "dot_product": 597, "729": 597, "test_rhi_elev": 597, "twice": [597, 641], "724": 597, "728": 597, "727": 597, "nosetest": 597, "715": [597, 615, 616, 660], "vradh": 597, "vradv": 597, "quantiti": 597, "739": 597, "es5nhc": 597, "735": 597, "wave100": 597, "734": 597, "733": 597, "730": 597, "723": 597, "comp": 597, "721": 597, "cameron": 597, "homey": 597, "716": 597, "cameronhomey": 597, "jamessong": 597, "winash12": 597, "687": 597, "csnardi": 597, "645": 597, "docbuild": 597, "709": 597, "mhpicel": 597, "705": 597, "fromstr": 597, "704": 597, "692": 597, "651": 597, "711": 597, "calculate_velocity_textur": [597, 647, 655], "retreiv": 597, "672": 597, "bucket": [597, 608], "673": 597, "653": 597, "638": 597, "635": 597, "frombuff": 597, "702": 597, "grid_mapp": 597, "707": 597, "706": 597, "goharkai": 597, "infinit": 597, "693": 597, "freemansw1": 597, "683": 597, "674": 597, "668": 597, "contact": 597, "land": 597, "667": [597, 653], "665": 597, "662": 597, "661": 597, "attributeerror": 597, "656": 597, "oserror": 597, "650": 597, "overflowerror": 597, "648": 597, "happier": 597, "647": 597, "640": 597, "639": 597, "634": 597, "620": 597, "itsjm": 597, "kirknorth": 597, "617": 597, "616": 597, "631": 597, "swap": 597, "el": 597, "plot_rai": 597, "618": 597, "_get_angl": 597, "613": 597, "607": 597, "linspac": [597, 598, 618, 621, 637, 640, 641, 653, 662], "603": 597, "627": 597, "623": 597, "596": 597, "595": 597, "632": 597, "630": 597, "625": 597, "tulipasilva": 597, "622": 597, "normbw": 597, "q": 597, "quit": [597, 651], "614": 597, "git": [597, 598, 651, 661, 662, 664], "611": 597, "608": 597, "mrugna": 597, "605": 597, "bld": 597, "kludg": 597, "604": 597, "acknowledg": [597, 651], "602": 597, "qpe": [597, 641], "598": 597, "mustafaalicelik": 597, "580": 597, "577": 597, "576": 597, "575": 597, "562": 597, "azim": 597, "546": 597, "pickl": 597, "unpickl": 597, "543": 597, "vcp": 597, "541": 597, "noaaport": 597, "seper": 597, "540": [597, 653], "521": 597, "459": 597, "590": 597, "bugfix": 597, "l3": 597, "135": 597, "eet": 597, "585": 597, "582": 597, "574": 597, "570": 597, "558": 597, "ctm": 597, "553": 597, "542": 597, "aux_io": 597, "read_gam": 597, "535": 597, "midnight": 597, "523": 597, "importerror": 597, "522": 597, "519": 597, "512": 597, "510": 597, "phase_proc": 597, "zerodivis": 597, "494": 597, "485": [597, 604, 605, 660], "unsupport": 597, "481": 597, "579": 597, "578": 597, "568": 597, "563": 597, "559": 597, "549": 597, "547": 597, "gamicfil": 597, "gamic_hdf5": 597, "536": 597, "524": 597, "513": 597, "balltre": 597, "504": 597, "501": 597, "482": 597, "479": 597, "594": 597, "561": 597, "despeckle_field": 597, "544": 597, "axislabel_flag": 597, "539": 597, "529": 597, "_get_x_z": 597, "491": 597, "486": 597, "586": 597, "583": 597, "572": 597, "fixup": 597, "569": 597, "560": 597, "555": [597, 638], "recip": [597, 600], "554": 597, "nose_arg": 597, "548": 597, "538": 597, "532": 597, "531": 597, "528": 597, "output_to_geotiff": 597, "514": 597, "511": 597, "507": 597, "506": 597, "498": 597, "libgfortran": 597, "497": 597, "495": 597, "493": 597, "489": [597, 641, 644, 660], "488": 597, "argentinean": 597, "480": [597, 653], "bdolan44": 597, "dara74k": 597, "gavi": 597, "jacaicedob": 597, "wx": 597, "pfhein": 597, "tamisalex": 597, "469": 597, "468": [597, 628, 635, 660], "467": 597, "luminos": 597, "464": 597, "455": 597, "hclass": 597, "447": 597, "439": 597, "434": 597, "433": 597, "427": 597, "411": 597, "404": 597, "388": 597, "cross_section_ppi": [597, 634], "380": 597, "472": 597, "471": 597, "470": 597, "prf": 597, "460": 597, "get_field_colormap": 597, "446": 597, "444": 597, "example_cfradial_rhi": 597, "441": 597, "417": 597, "struct": 597, "410": 597, "383": 597, "unicod": 597, "382": 597, "gatefit": 597, "372": 597, "465": 597, "refactor": 597, "463": 597, "decor": 597, "416": 597, "392": 597, "radxcovert": 597, "clarifi": 597, "475": 597, "406": 597, "add_field_lik": [597, 612], "397": 597, "391": [597, 637, 644, 660], "376": 597, "370": 597, "corner_to_point": 597, "473": 597, "466": 597, "456": 597, "outstand": 597, "412": 597, "413": 597, "454": 597, "453": 597, "449": 597, "438": 597, "437": 597, "430": 597, "426": 597, "miniconda": [597, 598, 651, 662], "reactiv": 597, "422": 597, "plot_map_one_radar_to_grid": [597, 614, 616, 660], "420": [597, 653], "419": 597, "408": 597, "resilli": 597, "403": 597, "write_mdv_grid": 597, "402": 597, "401": 597, "399": 597, "395": 597, "documen": 597, "add_2d_latlon_axi": 597, "394": 597, "378": 597, "acess": 597, "377": 597, "373": 597, "deeplycloudi": 597, "358": [597, 598, 662], "edge_netcdf": 597, "read_edge_netcdf": 597, "357": [597, 598, 662], "dealias_fourdd": 597, "348": 597, "346": 597, "326": 597, "308": 597, "361": 597, "refl_filter_flag": 597, "map_gate_to_grid": 597, "334": [597, 626, 635, 660], "region_dealia": 597, "327": 597, "libm": 597, "posix": 597, "319": 597, "unnecessari": 597, "inmemoryfil": 597, "365": 597, "359": [597, 598, 662], "354": 597, "_rsl_interfac": 597, "342": 597, "binstar": 597, "337": [597, 608, 610, 660], "320": 597, "317": 597, "362": 597, "plot_grid_three_panel": 597, "353": 597, "confus": 597, "363": 597, "340": 597, "externalis": 597, "339": 597, "333": 597, "332": 597, "47": [597, 643], "324": 597, "323": 597, "271": 597, "binar": 597, "266": 597, "313": 597, "312": 597, "290": 597, "280": 597, "273": 597, "272": [597, 644], "261": 597, "256": [597, 618, 642], "dealias_phase_unwrap": 597, "radarmapdispl": 597, "249": 597, "discontin": 597, "315": 597, "314": 597, "288": 597, "fault": 597, "276": 597, "dealias_unwrap_phas": 597, "275": 597, "corrupt": 597, "269": 597, "283": 597, "inconsist": 597, "274": 597, "254": [597, 641], "fallback": 597, "245": 597, "316": 597, "ngates_vart": 597, "310": 597, "py3": [597, 664], "nexrad_level2": 597, "nexrad_level3": 597, "309": 597, "1byte": 597, "datatyp": 597, "weathergod": 597, "293": 597, "292": 597, "289": 597, "291": 597, "138": 597, "284": 597, "alter": 597, "267": 597, "latlon": 597, "264": 597, "262": 597, "260": 597, "259": 597, "258": 597, "241": [597, 609, 614], "rebuild": 597, "237": 597, "scientif": [598, 651, 662], "repositori": [598, 599, 600, 651, 661, 662, 664], "e25": [598, 651, 662], "publish": [598, 662], "easiest": [598, 651, 662], "1st": [598, 651, 662], "Then": [598, 600, 651, 661, 662], "termin": [598, 651, 662, 664], "prompt": [598, 651, 662], "mamba": [598, 662], "openradar": [598, 662], "short": [598, 600, 662], "cours": [598, 612, 662], "ev": [598, 662], "pyart_short_cours": [598, 662], "youtub": [598, 662], "watch": [598, 662], "diip": [598, 662], "q3bkzw": [598, 662], "book": [598, 662], "rule": [598, 662], "pep": [598, 662], "0008": [598, 662], "afterward": [598, 662], "neccessari": [598, 662], "brief": [598, 599, 662], "third": [598, 662], "parti": [598, 662], "explain": [598, 662], "_inverse_dist_squar": [598, 662], "_average1d": [598, 662], "seen": [598, 662], "explan": [598, 599, 662], "privat": [598, 662], "rerun": [598, 662], "test_vad": [598, 662], "test_radar": [598, 653, 662], "make_target_radar": [598, 662], "1000": [598, 615, 623, 629, 630, 637, 641, 657, 662], "ones_lik": [598, 662], "z_start": [598, 662], "z_end": [598, 662], "z_count": [598, 662], "vad_height": [598, 662], "vad_spe": [598, 662], "98665725": [598, 662], "94020686": [598, 662], "88107152": [598, 662], "81939374": [598, 662], "75851962": [598, 662], "vad_direct": [598, 662], "84659496": [598, 662], "30240553": [598, 662], "58658589": [598, 662], "81073051": [598, 662], "01353486": [598, 662], "01335138": [598, 662], "06014712": [598, 662], "12039762": [598, 662], "18410404": [598, 662], "24791911": [598, 662], "98663937": [598, 662], "9398407": [598, 662], "87958641": [598, 662], "81587601": [598, 662], "75205693": [598, 662], "assert_almost_equ": [598, 662], "pyarg": [598, 662], "test_cfradi": [598, 662], "cd": [598, 662], "fork": [598, 600, 662], "cartopy_map": [598, 662], "branch_nam": [598, 662], "task": [598, 606, 646, 662], "mind": [598, 612, 662], "simpli": [598, 640, 647, 655, 657, 661, 662, 664], "acronym": [598, 662], "finish": [598, 662, 664], "quotat": [598, 662], "hit": [598, 662], "depth": [598, 651, 659, 662], "acronymn": [598, 662], "gitwash": [598, 662], "development_workflow": [598, 662], "whitespac": [598, 662], "usual": [598, 609, 662], "vim": [598, 662], "fetch": [598, 613, 637, 641, 642, 643, 662], "ff": [598, 662], "sit": [598, 662], "guidanc": [598, 662], "anyth": 600, "creator": 600, "draft": 600, "shortlog": 600, "uplod": 600, "feedstock": 600, "clone": [600, 651, 661], "meta": 600, "yaml": 600, "sha256": 600, "rerend": 600, "smithi": 600, "bot": 600, "sometim": [600, 653], "awar": 600, "semant": 601, "earlier": 601, "ceas": 601, "Such": 601, "proceed": 601, "futurewarn": 601, "runner": [603, 609], "micromamba": [603, 609], "771": 603, "__doc__": [603, 604, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 640, 641], "sgpcsaprsurcmaci7": [603, 654], "20110520": [603, 654], "095101": [603, 654], "pop": 603, "specific_attenu": [603, 638, 642, 653, 658], "corrected_reflectivity_horizont": [603, 615, 619, 638, 647, 649, 653], "calculate_attenu": 603, "131": [603, 640, 641], "132": [603, 640, 641], "ax3": [603, 604, 633, 637, 640, 641], "133": [603, 638, 640, 641], "plot_attenu": [603, 605, 660], "ial": 604, "095636": [604, 655], "sonde_fil": 604, "sgpinterpolatedsondec1": 604, "c1": [604, 658], "20110510": 604, "000000": 604, "cdf": [604, 637, 641], "dt": 604, "read_arm_sonde_vap": 604, "exclude_transit": [604, 614, 615, 619, 639], "exclude_invalid": [604, 637], "exclude_outsid": [604, 637], "dealias_data": 604, "sixth": 604, "221": [604, 622], "222": [604, 622], "223": [604, 622], "ax4": 604, "224": [604, 622], "plot_dealia": [604, 605, 660], "mem": [605, 610, 616, 635, 644, 645, 650, 660], "examples_python": 606, "examples_jupyt": 606, "grover": [608, 612, 618, 619, 624, 632, 638, 639, 647, 648, 649], "filepath": [608, 609], "organ": 608, "radarsit": [608, 609], "_v06": 608, "khgx": 608, "aws_nexrad_level2_fil": [608, 609], "khgx20220322_120125_v06": 608, "differential_phas": [608, 622, 658, 659], "spectrum_width": [608, 658, 659], "clutter_filter_power_remov": 608, "relect": 608, "z_": [608, 612, 620], "v_": 608, "noq": 608, "level3": 608, "aws_nexrad_level3_velocity_fil": 608, "hgx_n0u_2022_03_22_12_01_25": 608, "aws_nexrad_level3_reflectivity_fil": 608, "hgx_n0q_2022_03_22_12_01_25": 608, "read_nexrad_level3": 608, "radar_level3_veloc": 608, "radar_level3_reflect": 608, "reflectivity_displai": 608, "velocity_displai": 608, "plot_nexrad_data_aw": [608, 610, 660], "zachari": 609, "sherman": 609, "zsherman": [609, 664], "tendenc": 609, "gz": 609, "handford": 609, "ca": 609, "khnx": 609, "0203": 609, "v06": 609, "khnx20060724_020338": 609, "nexrad_arch": 609, "231": [609, 641], "clearli": 609, "lucki": 609, "31417": 609, "63111": 609, "plote": [609, 626], "central_latitud": [609, 626, 640, 641, 654], "central_longitud": [609, 626, 640, 641, 654], "downloadwarn": 609, "naturalearth": 609, "amazonaw": 609, "10m_physic": 609, "ne_10m_coastlin": 609, "10m_cultur": 609, "ne_10m_admin_1_states_provinces_lin": 609, "plot_older_nexrad_data_aw": [609, 610, 660], "xsapr": [612, 615, 619], "xsapr_sw_fil": [612, 615, 619], "swx_20120520_0641": [612, 615, 618, 619, 620, 624, 634, 638, 639, 640, 641, 647, 648, 649], "xsapr_se_fil": [612, 615, 619], "sex_20120520_0641": [612, 615, 619], "radar_sw": [612, 615, 619], "radar_s": [612, 615, 619], "southwestern": 612, "gmapper": 612, "radar_sw_mapped_to_radar_s": 612, "disp1": 612, "98": [612, 638, 643, 658], "97": [612, 615, 619, 621, 633, 638, 640, 641, 653], "disp2": 612, "remap": 612, "eyebal": 612, "fortun": 612, "reflectivity_se_radar": 612, "reflectivity_sw_radar": 612, "reflectivity_differ": 612, "reflectivity_bia": 612, "southwest": 612, "xspar": 612, "southeast": 612, "neccessarili": 612, "incl_gat": 612, "refl_s": 612, "refl_sw": 612, "values_without_mask": 612, "hist": [612, 647, 655], "histogram2d": 612, "masked_wher": [612, 637, 641, 658], "log_": 612, "plot_compare_two_radars_gatemapp": [612, 616, 660], "solut": 613, "arguabl": 613, "overlook": 613, "neglig": 613, "ze": 613, "2nd": 613, "4th": 613, "purpl": 613, "truncat": 613, "ok": 613, "israel": 613, "silber": 613, "open_radar_data": [613, 637, 641, 642, 643], "file_nam": 613, "example_plot_ppi_single_sweep": 613, "processed_field": 613, "reflectivity_at_cor": 613, "radar_obj": 613, "nnow": 613, "ax_ind": 613, "sweep_obj": 613, "fig2": 613, "1601": 613, "40000": [613, 615, 619, 626, 657], "set_titl": [613, 618, 637, 640, 641], "nuse": 613, "plot_grid_single_sweep_ppi": [613, 616, 660], "123000": 614, "xsarp": [615, 627, 628], "gatefilter_s": [615, 619], "exclude_abov": [615, 619, 647, 655], "gatefilter_sw": [615, 619], "201": [615, 640, 641, 657], "50000": [615, 619, 640, 641, 657], "57861": [615, 619], "363611": [615, 619], "plot_map_two_radars_to_grid": [615, 616, 660], "428": 616, "helper": 618, "vstack": 618, "plot_color_gradi": 618, "cmap_categori": 618, "cmap_list": 618, "figh": 618, "99": 618, "cmap_nam": 618, "pyart_": 618, "va": 618, "transax": 618, "spine": 618, "set_axis_off": 618, "perceptu": [618, 621], "light": [618, 642], "diverg": 618, "meaning": 618, "terrain": 618, "spectral_r": 618, "rememb": 618, "front": 618, "971": [618, 635, 660], "plot_choose_a_colormap": [618, 635, 660], "181": 619, "blue": [619, 629, 630], "plot_cross_sect": [619, 635, 660], "205": [619, 635, 660], "colobar": 620, "joe": 620, "brien": 620, "obrienj": 620, "perfect": 620, "coord": 620, "gca": 620, "set_major_loc": 620, "nullloc": 620, "axsb": 620, "ppi_map": 620, "set_tick": 620, "049": [620, 635, 660], "plot_modify_colorbar": [620, 635, 660], "reduc": [621, 641, 661], "promin": [621, 641], "deemphas": 621, "depict": [621, 637], "ultim": 621, "misinterpret": 621, "lmtomkin": [621, 637, 640, 641], "ncsu": [621, 637, 640, 641], "nexrad_fil": [621, 640, 641], "kbgm": 621, "kbgm20200207_132642_v06": 621, "image_mute_radar": [621, 640, 641], "magma_cmap": 621, "magma_r": [621, 637, 640, 641], "grays_cmap": [621, 641], "gray_r": [621, 641], "nonmuted_cmap": 621, "linearsegmentedcolormap": [621, 640, 641], "from_list": [621, 640, 641], "muted_cmap": [621, 641], "nonmuted_reflect": [621, 640], "muted_reflect": [621, 641], "set_aspect": [621, 637, 640, 641, 642], "plot_nexrad_image_muted_reflect": [621, 635, 660], "katx20130717_195021_v06": [622, 659], "plot_nexrad_multiple_mo": [622, 635, 660], "level2_katx_20130717_1950": 623, "ar2v": 623, "plot_nexrad_reflect": [623, 635, 660], "plot_cross_hair": 624, "355": [624, 635, 660], "plot_ppi_cfradi": [624, 635, 660], "151": [625, 635, 640, 644, 660], "jason": [626, 633], "hemeding": [626, 633], "nsaxsaprppic1": 626, "20140201": 626, "184802": 626, "157": 626, "156": 626, "71": 626, "158": 626, "72": 626, "40km": 626, "plot_line_xi": 626, "20000": [626, 657], "200000": [626, 640, 641], "plot_point": 626, "plot_ppi_with_r": [626, 635, 660], "instrument_nam": [627, 628, 659], "agl": 627, "fac": 627, "nplot": [627, 628, 632], "snum": 627, "hsrhi": [627, 628], "3f": [627, 628], "time_start": 627, "num2dat": 627, "only_use_cftime_datetim": 627, "only_use_python_datetim": 627, "figure_titl": 627, "isoformat": 627, "814": [627, 635, 660], "plot_rhi_cfradi": [627, 635, 660], "differnenti": 629, "cori": [629, 630], "weber": [629, 630], "cweber": [629, 630], "220629": 629, "matplolib": 629, "visabl": 629, "flow": 629, "paramt": 629, "compens": 629, "00015": 629, "veri": [629, 637, 640, 641], "moir": 629, "001": 629, "get_start": [629, 630], "get_end": [629, 630], "blur": 629, "nice": [629, 661], "arbirarli": 629, "gaussian_filt": [629, 630], "ang": [629, 630], "levels_rain": 629, "levels_ic": 629, "contours_ic": 629, "contours_rain": 629, "fmt": [629, 630], "0000": [629, 630], "714": [629, 635, 660], "plot_rhi_contours_differential_reflect": [629, 635, 660], "spyi": 630, "034142": 630, "ramp": 630, "blob": 630, "pyart_budrd18": 630, "coutour": 630, "dot": 630, "major": 630, "axhlin": [630, 637], "axvlin": 630, "00b4ff": 630, "ff6800": 630, "set_ylabel": [630, 637, 643], "cp": 630, "plot_rhi_data_overlai": [630, 635, 660], "110041": 631, "plot_rhi_mdv": [631, 635, 660], "fields_to_plot": 632, "plot_num": 632, "u00b0": 632, "825": [632, 635, 660], "plot_rhi_two_panel": [632, 635, 660], "20110520100000_nexrad_grid": 633, "read_grid": [633, 637, 641], "plot_crosshair": 633, "plot_longitude_slic": 633, "plot_latitude_slic": [633, 657], "032": [633, 635, 660], "plot_three_panel_gridmapdisplai": [633, 635, 660], "225": 634, "xsect": 634, "plot_xsect": [634, 635, 660], "858": 635, "essenti": 637, "distinguish": 637, "insuffici": 637, "tenth": 637, "aggress": 637, "noisi": 637, "ref_data": 637, "ref_data_mask": 637, "masked_outsid": 637, "create_cfad": 637, "15000": [637, 653, 657], "freq_norm_mask": 637, "masked_less_equ": [637, 641], "cfad_pm": 637, "plasma": 637, "set_xlabel": [637, 643], "8km": 637, "widen": 637, "freq_norm2": 637, "freq_norm0": 637, "freq_norm2_mask": 637, "freq_norm0_mask": 637, "chart": 637, "14km": 637, "12km": 637, "swath": 637, "velocity_dealia": 637, "rdbu_r": 637, "bimod": 637, "reproduc": 637, "2c": 637, "demonstr": [637, 651], "ddop": 637, "910815": 637, "213931": 637, "altitude_data": 637, "field_data": 637, "maxdz": [637, 641], "vvel_data": 637, "w_wind": 637, "vvel_mask": 637, "masked_invalid": [637, 640], "field_data_mask": 637, "cont": 637, "plot_cfad": [637, 644, 660], "maxwel": [638, 639], "site_lon": 638, "73": 638, "site_lat": 638, "latitdu": 638, "pathcollect": 638, "0x7f1f4d2ddfd0": 638, "get_field_loc": 638, "2kb": 638, "176b": 638, "350": 638, "818e": 638, "recalculated_diff_phas": [638, 653], "2778": 638, "unf_dp_phase_shift": [638, 653], "88b": 638, "145": [638, 641], "144": [638, 641], "diff_reflect": [638, 653], "8b": 638, "20t06": 638, "distance_from_radar": 638, "233": 638, "545": 638, "latitude_of_loc": 638, "longitude_of_loc": 638, "line2d": 638, "0x7f1f4d5f43b0": 638, "plot_column_subset": [638, 644, 660], "compz": 639, "composite_reflect": 639, "composite_displai": 639, "plot_composite_reflect": [639, 644, 660], "classifc": 640, "summer": [640, 641], "ian": [640, 641], "footprint": 640, "yield": 640, "smoother": 640, "curv": 640, "plot_convstrat_schem": 640, "pick": 640, "radii": 640, "dilat": 640, "conv_strat_yut": 640, "convsf_mask": 640, "masked_equ": [640, 641], "feature_detect": [640, 641], "convsf": [640, 641], "magma_r_cmap": [640, 641], "ref_cmap": [640, 641], "albersequalarea": [640, 641], "convsf_und": 640, "convsf_ov": 640, "uncertainti": [640, 641], "underest": [640, 641], "feature_und": [640, 641], "overest": [640, 641], "feature_ov": [640, 641], "ktbw": [640, 641], "ktbw20220928_190142_v06": [640, 641], "rasumussen": [640, 641], "2003": [640, 641], "reflecit": 640, "kokx": [640, 641], "kokx20210207_161413_v06": [640, 641], "nonmuted_ref": 640, "nonmuted_ref_linear": 640, "mm6": 640, "m3": 640, "snow_rat": [640, 641], "snow_rate_dict": 640, "40500": 640, "034": [640, 641], "ccotd": [640, 641], "rasmussen": [640, 641], "dixon": [640, 641, 651], "vasiloff": [640, 641], "hage": [640, 641], "knight": [640, 641], "vivekanandan": [640, 641], "xu": [640, 641], "nowcast": [640, 641], "accumul": [640, 641], "042": [640, 641], "3c0020": [640, 641], "snuart": [640, 641], "plot_convective_stratiform": [640, 644, 660], "heavili": 641, "customiz": 641, "manuscript": 641, "feature_mask": 641, "19990811": 641, "221202": 641, "convsf_cmap": 641, "140": 641, "253": 641, "csb": 641, "csb_mask": 641, "csl": 641, "convsf_lo": 641, "csl_mask": 641, "csh": 641, "convsf_hi": 641, "csh_mask": 641, "rpm": 641, "csbpm": 641, "set_yticklabel": 641, "lo": 641, "cslpm": 641, "cshpm": 641, "csb_lt": 641, "csb_lt_mask": 641, "csu_lt": 641, "csu_lt_mask": 641, "cso_lt": 641, "cso_lt_mask": 641, "csupm": 641, "csopm": 641, "ztor": 641, "ref_field_ov": 641, "ref_field_und": 641, "2db": 641, "_overest": 641, "_underest": 641, "reflectivity_ov": 641, "reflectivity_und": 641, "snow_rate_ov": 641, "snow_rate_und": 641, "feature_estimate_dict": 641, "bpm": 641, "upm": 641, "opm": 641, "distinct": 641, "scalar_features_mask": 641, "cosine_features_mask": 641, "isol": 641, "faint_featur": 641, "faint_features_mask": 641, "features_faint_strong": 641, "features_faint_strong_mask": 641, "new_dict": 641, "comment_1": 641, "faint_strong_cmap": 641, "faint_strong": 641, "238": 641, "93": 641, "66": 641, "quickli": 641, "quick_image_mut": 641, "muted_ref": 641, "nonmuted_field": 641, "muted_field": 641, "snow_rate_nonmut": 641, "snow_rate_mut": 641, "features_nonmut": 641, "features_mut": 641, "srpm": 641, "srpmm": 641, "csbpmm": 641, "plot_feature_detect": [641, 644, 660], "daniel": [642, 643], "wolfensberg": [642, 643], "mll2217907250u": 642, "003": 642, "preinterpol": 642, "20220628072500_savevol_cosmo_lookup_temp": 642, "nwp_temp": 642, "calculate_attenuation_zphi": 642, "uncorrected_differential_phas": 642, "pia": 642, "pida": 642, "corrected_reflect": [642, 658], "corrected_differential_reflect": [642, 658], "kdp_maesaka": 642, "specific_differential_phas": [642, 658], "hydroclass_semisupervis": 642, "uncorrected_cross_correlation_ratio": 642, "radar_echo_classif": 642, "lr": 642, "rp": 642, "rn": 642, "vi": 642, "mh": 642, "ih": 642, "hdg": 642, "boundarynorm": 642, "aggreg": 642, "crystal": 642, "rime": 642, "particl": 642, "wet": 642, "graupel": 642, "plot_hydrometeor": [642, 644, 660], "2682": 643, "5272": 643, "7815": 643, "10403": 643, "14259": 643, "18533": 643, "22800": [643, 653], "27060": [643, 653], "31310": 643, "35549": 643, "39777": 643, "43991": 643, "50263": 643, "58621": 643, "71002": 643, "87118": 643, "106740": 643, "125476": 643, "124": 643, "143293": 643, "160000": 643, "mla2119412050u": 643, "zlevel": 643, "5000": [643, 657], "u_allsweep": 643, "v_allsweep": 643, "idx": 643, "radar_1sweep": 643, "vad_brown": 643, "u_avg": 643, "nanmean": 643, "v_avg": 643, "sharei": 643, "plot_vad": [643, 644, 660], "000": 645, "xd": [647, 648, 649], "open_cfradial1_datatre": [647, 648, 649], "sweep_0": 647, "vel_textur": [647, 655], "velocity_textur": [647, 655, 658], "At": [647, 655], "velocity_dealias": [647, 655], "plot_dealias_xradar": [647, 650, 660], "101": 648, "10_000": 648, "50_000": 648, "591": [648, 650, 660], "plot_grid_xradar": [648, 650, 660], "588": [649, 650, 660], "plot_xradar": [649, 650, 660], "678": 650, "conceptu": 651, "understand": 651, "someth": 651, "maik": 651, "heistermann": 651, "bam": 651, "kellei": 651, "peura": 651, "pfaff": 651, "wolff": 651, "emerg": 651, "bull": 651, "amer": 651, "soc": 651, "117": 651, "128": 651, "00240": 651, "abl": [651, 661], "sophist": 651, "tutori": 651, "materi": 651, "erad": 651, "asr": 651, "asm": 651, "Or": 651, "pyart_env": [651, 654, 657, 664], "wish": 651, "unreleas": 651, "charg": 651, "resourc": [651, 661], "lassen": 651, "radtec": 651, "rsl_path": [651, 661], "usr": 651, "wrapper": 651, "fastest": 651, "cbc": 651, "glpk": 651, "coincbc": [651, 661, 664], "coin_install_dir": [651, 661, 664], "ask": [651, 664], "hypothet": 653, "dict_kei": [653, 658], "rain_rate_a": [653, 658], "volume_numb": 653, "platform_typ": 653, "instrument_typ": 653, "primary_axi": 653, "make_empty_ppi_radar": 653, "59416667": 653, "isn": 653, "240": 653, "660": 653, "720": 653, "780": 653, "960": 653, "1260": 653, "1560": 653, "1620": 653, "1680": 653, "1740": 653, "1860": 653, "1920": 653, "1980": 653, "2040": 653, "2100": 653, "2160": 653, "2220": 653, "2280": 653, "2340": 653, "2400": 653, "2460": 653, "2520": 653, "2580": 653, "2640": 653, "2700": 653, "2760": 653, "2820": 653, "2880": 653, "2940": 653, "3060": 653, "3120": 653, "3180": 653, "3240": 653, "3300": 653, "3360": 653, "3420": 653, "3480": 653, "3540": 653, "3600": 653, "3660": 653, "3720": 653, "3780": 653, "3840": 653, "3900": 653, "3960": 653, "4020": 653, "4080": 653, "4140": 653, "4200": 653, "4260": 653, "4320": 653, "4380": 653, "4440": 653, "4500": 653, "4560": 653, "4620": 653, "4680": 653, "4740": 653, "4800": 653, "4860": 653, "4920": 653, "4980": 653, "5040": 653, "5100": 653, "5160": 653, "5220": 653, "5280": 653, "5340": 653, "5400": 653, "5460": 653, "5520": 653, "5580": 653, "5640": 653, "5700": 653, "5760": 653, "5820": 653, "5880": 653, "5940": 653, "6000": [653, 657], "6060": 653, "6120": 653, "6180": 653, "6240": 653, "6300": 653, "6360": 653, "6420": 653, "6480": 653, "6540": 653, "6600": 653, "6660": 653, "6720": 653, "6780": 653, "6840": 653, "6900": 653, "6960": 653, "7020": 653, "7080": 653, "7140": 653, "7200": [653, 659], "7260": 653, "7320": 653, "7380": 653, "7440": 653, "7560": 653, "7620": 653, "7680": 653, "7740": 653, "7800": 653, "7860": 653, "7920": 653, "7980": 653, "8040": 653, "8100": 653, "8160": 653, "8220": 653, "8280": 653, "8340": 653, "8400": 653, "8460": 653, "8520": 653, "8580": 653, "8640": 653, "8700": 653, "8760": 653, "8820": 653, "8880": 653, "8940": 653, "9000": [653, 657], "9060": 653, "9120": 653, "9180": 653, "9240": 653, "9300": 653, "9360": 653, "9420": 653, "9480": 653, "9540": 653, "9600": 653, "9660": 653, "9720": 653, "9780": 653, "9840": 653, "9900": 653, "9960": 653, "10020": 653, "10080": 653, "10140": 653, "10200": 653, "10260": 653, "10320": 653, "10380": 653, "10440": 653, "10500": 653, "10560": 653, "10620": 653, "10680": 653, "10740": 653, "10800": 653, "10860": 653, "10920": 653, "10980": 653, "11040": 653, "11100": 653, "11160": 653, "11220": 653, "11280": 653, "11340": 653, "11400": 653, "11460": 653, "11520": 653, "11580": 653, "11640": 653, "11700": 653, "11760": 653, "11820": 653, "11880": 653, "11940": 653, "12000": [653, 657], "12060": 653, "12120": 653, "12180": 653, "12240": 653, "12300": 653, "12360": 653, "12420": 653, "12480": 653, "12540": 653, "12600": 653, "12660": 653, "12720": 653, "12780": 653, "12840": 653, "12900": 653, "12960": 653, "13020": 653, "13080": 653, "13140": 653, "13200": 653, "13260": 653, "13320": 653, "13380": 653, "13440": 653, "13500": 653, "13560": 653, "13620": 653, "13680": 653, "13740": 653, "13800": 653, "13860": 653, "13920": 653, "13980": 653, "14040": 653, "14100": 653, "14160": 653, "14220": 653, "14280": 653, "14340": 653, "14400": 653, "14460": 653, "14520": 653, "14580": 653, "14640": 653, "14700": 653, "14760": 653, "14820": 653, "14880": 653, "14940": 653, "15060": 653, "15120": 653, "15180": 653, "15240": 653, "15300": 653, "15360": 653, "15420": 653, "15480": 653, "15540": 653, "15600": 653, "15660": 653, "15720": 653, "15780": 653, "15840": 653, "15900": 653, "15960": 653, "16020": 653, "16080": 653, "16140": 653, "16200": 653, "16260": 653, "16320": 653, "16380": 653, "16440": 653, "16500": 653, "16560": 653, "16620": 653, "16680": 653, "16740": 653, "16800": 653, "16860": 653, "16920": 653, "16980": 653, "17040": 653, "17100": 653, "17160": 653, "17220": 653, "17280": 653, "17340": 653, "17400": 653, "17460": 653, "17520": 653, "17580": 653, "17640": 653, "17700": 653, "17760": 653, "17820": 653, "17880": 653, "17940": 653, "18000": [653, 657], "18060": 653, "18120": 653, "18180": 653, "18240": 653, "18300": 653, "18360": 653, "18420": 653, "18480": 653, "18540": 653, "18600": 653, "18660": 653, "18720": 653, "18780": 653, "18840": 653, "18900": 653, "18960": 653, "19020": 653, "19080": 653, "19140": 653, "19200": 653, "19260": 653, "19320": 653, "19380": 653, "19440": 653, "19500": 653, "19560": 653, "19620": 653, "19680": 653, "19740": 653, "19800": 653, "19860": 653, "19920": 653, "19980": 653, "20040": 653, "20100": 653, "20160": 653, "20220": 653, "20280": 653, "20340": 653, "20400": 653, "20460": 653, "20520": 653, "20580": 653, "20640": 653, "20700": 653, "20760": 653, "20820": 653, "20880": 653, "20940": 653, "21000": [653, 657], "21060": 653, "21120": 653, "21180": 653, "21240": 653, "21300": 653, "21360": 653, "21420": 653, "21480": 653, "21540": 653, "21600": 653, "21660": 653, "21720": 653, "21780": 653, "21840": 653, "21900": 653, "21960": 653, "22020": 653, "22080": 653, "22140": 653, "22200": 653, "22260": 653, "22320": 653, "22380": 653, "22440": 653, "22500": 653, "22560": 653, "22620": 653, "22680": 653, "22740": 653, "22860": 653, "22920": 653, "22980": 653, "23040": 653, "23100": 653, "23160": 653, "23220": 653, "23280": 653, "23340": 653, "23400": 653, "23460": 653, "23520": 653, "23580": 653, "23640": 653, "23700": 653, "23760": 653, "23820": 653, "23880": 653, "23940": 653, "24000": [653, 657], "24060": 653, "24120": 653, "24180": 653, "24240": 653, "24300": 653, "24360": 653, "24420": 653, "24480": 653, "24540": 653, "24600": 653, "24660": 653, "24720": 653, "24780": 653, "24840": 653, "24900": 653, "24960": 653, "25020": 653, "25080": 653, "25140": 653, "25200": 653, "25260": 653, "25320": 653, "25380": 653, "25440": 653, "25500": 653, "25560": 653, "25620": 653, "25680": 653, "25740": 653, "25800": 653, "25860": 653, "25920": 653, "25980": 653, "26040": 653, "26100": 653, "26160": 653, "26220": 653, "26280": 653, "26340": 653, "26400": 653, "26460": 653, "26520": 653, "26580": 653, "26640": 653, "26700": 653, "26760": 653, "26820": 653, "26880": 653, "26940": 653, "27000": [653, 657], "27120": 653, "27180": 653, "27240": 653, "27300": 653, "27360": 653, "27420": 653, "27480": 653, "27540": 653, "27600": 653, "27660": 653, "27720": 653, "27780": 653, "27840": 653, "27900": 653, "27960": 653, "28020": 653, "28080": 653, "28140": 653, "28200": 653, "28260": 653, "28320": 653, "28380": 653, "28440": 653, "28500": 653, "28560": 653, "28620": 653, "28680": 653, "28740": 653, "28800": 653, "28860": 653, "28920": 653, "28980": 653, "29040": 653, "29100": 653, "29160": 653, "29220": 653, "29280": 653, "29340": 653, "29400": 653, "29460": 653, "29520": 653, "29580": 653, "29640": 653, "29700": 653, "29760": 653, "29820": 653, "29880": 653, "29940": 653, "30000": [653, 657], "30060": 653, "30120": 653, "30180": 653, "30240": 653, "30300": 653, "30360": 653, "30420": 653, "30480": 653, "30540": 653, "30600": 653, "30660": 653, "30720": 653, "30780": 653, "30840": 653, "30900": 653, "30960": 653, "31020": 653, "31080": 653, "31140": 653, "31200": 653, "31260": 653, "31320": 653, "31380": 653, "31440": 653, "31500": 653, "31560": 653, "31620": 653, "31680": 653, "31740": 653, "31800": 653, "31860": 653, "31920": 653, "31980": 653, "32040": 653, "32100": 653, "32160": 653, "32220": 653, "32280": 653, "32340": 653, "32400": 653, "32460": 653, "32520": 653, "32580": 653, "32640": 653, "32700": 653, "32760": 653, "32820": 653, "32880": 653, "32940": 653, "33000": [653, 657], "33060": 653, "33120": 653, "33180": 653, "33240": 653, "33300": 653, "33360": 653, "33420": 653, "33480": 653, "33540": 653, "33600": 653, "33660": 653, "33720": 653, "33780": 653, "33840": 653, "33900": 653, "33960": 653, "34020": 653, "34080": 653, "34140": 653, "34200": 653, "34260": 653, "34320": 653, "34380": 653, "34440": 653, "34500": 653, "34560": 653, "34620": 653, "34680": 653, "34740": 653, "34800": 653, "34860": 653, "34920": 653, "34980": 653, "35040": 653, "35100": 653, "35160": 653, "35220": 653, "35280": 653, "35340": 653, "35400": 653, "35460": 653, "35520": 653, "35580": 653, "35640": 653, "35700": 653, "35760": 653, "35820": 653, "35880": 653, "35940": 653, "36000": [653, 657], "36060": 653, "36120": 653, "36180": 653, "36240": 653, "36300": 653, "36360": 653, "36420": 653, "36480": 653, "36540": 653, "36600": 653, "36660": 653, "36720": 653, "36780": 653, "36840": 653, "36900": 653, "36960": 653, "37020": 653, "37080": 653, "37140": 653, "37200": 653, "37260": 653, "37320": 653, "37380": 653, "37440": 653, "37500": 653, "37560": 653, "37620": 653, "37680": 653, "37740": 653, "37800": 653, "37860": 653, "37920": 653, "37980": 653, "38040": 653, "38100": 653, "38160": 653, "38220": 653, "38280": 653, "38340": 653, "38400": 653, "38460": 653, "38520": 653, "38580": 653, "38640": 653, "38700": 653, "38760": 653, "38820": 653, "38880": 653, "38940": 653, "39000": [653, 657], "39060": 653, "39120": 653, "39180": 653, "39240": 653, "39300": 653, "39360": 653, "39420": 653, "39480": 653, "39540": 653, "39600": 653, "39660": 653, "39720": 653, "39780": 653, "39840": 653, "39900": 653, "39960": 653, "59416776": 653, "59416886": 653, "59489769": 653, "59489879": 653, "5948999": 653, "59415662": 653, "59414657": 653, "5874659": 653, "58745576": 653, "58744563": 653, "59414621": 653, "59412575": 653, "5805231": 653, "58050246": 653, "58048182": 653, "59419881": 653, "59423095": 653, "61560159": 653, "61563401": 653, "61566644": 653, "59418877": 653, "59421087": 653, "6089062": 653, "6089285": 653, "60895079": 653, "59417836": 653, "59419005": 653, "60196382": 653, "60197561": 653, "60198741": 653, "get_metadata": 653, "ref_dict": 653, "reflecitivity_horizont": 653, "21875": 653, "34375": 653, "0078125": 653, "2109375": 653, "1171875": 653, "59375": 653, "421875": 653, "5625": 653, "7109375": 653, "609375": 653, "5078125": 653, "3828125": 653, "6875": 653, "328125": 653, "3203125": 653, "859375": 653, "6484375": 653, "8515625": 653, "9375": [653, 659], "0234375": 653, "6328125": 653, "2890625": 653, "546875": 653, "578125": 653, "6796875": 653, "ref_gt_0": 654, "mask_dict": 654, "reflectivity_mask": 654, "coolwarm": 654, "sherm": [654, 657], "782": [654, 657], "matplotlibdeprecationwarn": [654, 657], "position": [654, 657], "829": [654, 657], "write_cfradi": 654, "new_radar": 654, "2pi": 655, "wave": 655, "3pi": 655, "erron": 655, "phenomena": [655, 659], "maximium": 655, "unambi": 655, "preprocess": 655, "thankfulli": [655, 657], "surround": [655, 657], "presenc": 655, "524973": 655, "vleociti": 655, "realist": 655, "characterist": 657, "100000": 657, "gates_to_grid": 657, "99000": 657, "98000": 657, "97000": 657, "96000": 657, "95000": 657, "94000": 657, "93000": 657, "92000": 657, "91000": 657, "90000": 657, "89000": 657, "88000": 657, "87000": 657, "86000": 657, "85000": 657, "84000": 657, "83000": 657, "82000": 657, "81000": 657, "80000": 657, "79000": 657, "78000": 657, "77000": 657, "76000": 657, "75000": 657, "74000": 657, "73000": 657, "72000": 657, "71000": 657, "70000": 657, "69000": 657, "68000": 657, "67000": 657, "66000": 657, "65000": 657, "64000": 657, "63000": 657, "62000": 657, "61000": 657, "59000": 657, "58000": 657, "57000": 657, "56000": 657, "55000": 657, "54000": 657, "53000": 657, "52000": 657, "51000": 657, "49000": 657, "48000": 657, "47000": 657, "46000": 657, "45000": 657, "44000": 657, "43000": 657, "42000": 657, "41000": 657, "38000": 657, "37000": 657, "35000": 657, "34000": 657, "32000": 657, "31000": 657, "29000": 657, "28000": 657, "26000": 657, "23000": 657, "22000": 657, "19000": 657, "16000": 657, "14000": 657, "13000": 657, "8000": 657, "longitudn": 657, "latitudn": 657, "suffer": 657, "artifici": 657, "feather": 657, "grid_bett": 657, "1750": 657, "sgpxsaprcmacsuri5": 658, "20171004": 658, "203018": 658, "total_pow": 658, "xsapr_clutt": 658, "sounding_temperatur": 658, "signal_to_noise_ratio": 658, "unfolded_differential_phas": 658, "corrected_differential_phas": 658, "filtered_corrected_differential_phas": 658, "corrected_specific_diff_phas": 658, "filtered_corrected_specific_diff_phas": 658, "path_integrated_attenu": 658, "specific_differential_attenu": 658, "path_integrated_differential_attenu": 658, "nonhydrometeor": 658, "exclude_equ": 658, "tell": 658, "refl_arrai": 658, "reflectivity_w_mask": 658, "iter_slic": [658, 659], "9344453454202706": 658, "620691732853737": 658, "3756584054113996": 658, "597935968662154": 658, "696735014111216": 658, "061894569912447": 658, "721673265240488": 658, "086695918593689": 658, "33930700509078": 658, "599363169483158": 658, "836875745223637": 658, "051601529570966": 658, "22435547210836": 658, "378109469982695": 658, "553820234067336": 658, "648943841665002": 658, "837593740986444": 658, "049614721040282": 658, "331202567459613": 658, "585432697375357": 658, "87002341270722": 658, "993012637722325": 658, "061966001642219": 658, "122799449619672": 658, "861035552720102": 658, "74608994279257": 658, "148801770281325": 658, "70860719727862": 658, "989513966551444": 658, "188644935344827": 658, "89301878240611": 658, "172644371021923": 658, "79879842243138": 658, "912806090219976": 658, "766281467013889": 658, "920522471877334": 658, "898600907318164": 658, "971026055481874": 658, "110503947133682": 658, "094456418731509": 658, "0822160050675675": 658, "036430544969512": 658, "259332430219459": 658, "2438254054588604": 658, "473482666015625": 658, "574283685503023": 658, "866719139946832": 658, "771468742643597": 658, "beam_azimuth_angl": 659, "azimuth_angle_from_true_north": 659, "radial_azimuth_coordin": 659, "beam_elevation_angl": 659, "elevation_angle_from_horizontal_plan": 659, "radial_elevation_coordin": 659, "1832": 659, "log_differential_reflectivity_hv": 659, "875": 659, "differential_phase_hv": 659, "equivalent_reflectivity_factor": 659, "cross_correlation_ratio_hv": 659, "correlation_ratio": 659, "meters_per_second": 659, "doppler_spectrum_width": 659, "radial_velocity_of_scatterers_away_from_instru": 659, "target_fixed_angl": 659, "degrees_north": 659, "degrees_east": 659, "projection_range_coordin": 659, "range_to_measurement_volum": 659, "radial_range_coordin": 659, "spacing_is_const": 659, "meters_to_center_of_first_g": 659, "2125": 659, "meters_between_g": 659, "s20": 659, "unitless": 659, "coplan": 659, "vertical_point": 659, "idl": 659, "azimuth_surveil": 659, "elevation_surveil": 659, "sunscan": 659, "manual_ppi": 659, "manual_rhi": 659, "17t19": 659, "21z": 659, "time_in_seconds_since_volume_start": 659, "calendar": 659, "gregorian": 659, "katx": 659, "original_contain": 659, "vcp_pattern": 659, "7470703": 659, "7196045": 659, "6893921": 659, "511719": 659, "get_slic": 659, "sweep_1": 659, "52734375": 659, "indici": 659, "slice_indic": 659, "9066728410400056": 659, "478547577741713": 659, "587792083929423": 659, "871031288639269": 659, "971692217963673": 659, "830616390843327": 659, "108188248095756": 659, "483419908190385": 659, "88976917057903": 659, "852766685681688": 659, "410455582269897": 659, "66444787446138": 659, "997862391449566": 659, "172098402018502": 659, "489752513534416": 659, "712565619531706": 659, "commonli": 659, "753": 660, "9x": 661, "10x": 661, "11x": 661, "But": 661, "bash": 661, "pythonpath": 661, "pth": 661, "build_ext": 661, "segfault": 661, "Theres": 661, "proper": 661, "reinstal": 661, "remedi": 661, "fno": 661, "protector": 661, "d_fortify_sourc": 661, "cflag": 661, "makefil": 661, "troubl": 661, "define_macro": 661, "macro": 661, "extra_compile_arg": 661, "m32": 661, "extra_link_arg": 661, "m64": 661, "proj_lib": 661, "plai": 661, "xx": 661, "xxx": 661, "mpl_toolkit": 661, "conflict": 664, "exit": 664, "led": 664, "manag": 664, "deactiv": 664, "enviro": 664, "scratch": 664, "spyder": 664, "enhanc": 664, "though": 664, "yourusernam": 664, "youranacondadir": 664, "gitter": 664, "im": 664}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [126, 1, 0, "-", "correct"], [168, 1, 0, "-", "exceptions"], [169, 1, 0, "-", "filters"], [202, 1, 0, "-", "graph"], [359, 1, 0, "-", "io"], [380, 1, 0, "-", "lazydict"], [404, 1, 0, "-", "map"], [415, 1, 0, "-", "retrieve"], [451, 1, 0, "-", "testing"], [553, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_geographic"], [122, 0, 1, "", "cartesian_to_geographic_aeqd"], [123, 0, 1, "", "cartesian_vectors_to_geographic"], [124, 0, 1, "", "geographic_to_cartesian"], [125, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[127, 2, 1, "", "GateFilter"], [155, 0, 1, "", "calculate_attenuation"], [156, 0, 1, "", "calculate_attenuation_philinear"], [157, 0, 1, "", "calculate_attenuation_zphi"], [158, 0, 1, "", "correct_bias"], [159, 0, 1, "", "correct_noise_rhohv"], [160, 0, 1, "", "dealias_fourdd"], [161, 0, 1, "", "dealias_region_based"], [162, 0, 1, "", "dealias_unwrap_phase"], [163, 0, 1, "", "despeckle_field"], [164, 0, 1, "", "find_objects"], [165, 0, 1, "", "moment_based_gate_filter"], [166, 0, 1, "", "phase_proc_lp"], [167, 0, 1, "", "phase_proc_lp_gf"]], "pyart.correct.GateFilter": [[128, 3, 1, "", "copy"], [129, 3, 1, "", "exclude_above"], [130, 3, 1, "", "exclude_all"], [131, 3, 1, "", "exclude_below"], [132, 3, 1, "", "exclude_equal"], [133, 3, 1, "", "exclude_gates"], [134, 3, 1, "", "exclude_inside"], [135, 3, 1, "", "exclude_invalid"], [136, 3, 1, "", "exclude_masked"], [137, 3, 1, "", "exclude_none"], [138, 3, 1, "", "exclude_not_equal"], [139, 3, 1, "", "exclude_outside"], [140, 3, 1, "", "exclude_transition"], [141, 4, 1, "", "gate_excluded"], [142, 4, 1, "", "gate_included"], [143, 3, 1, "", "include_above"], [144, 3, 1, "", "include_all"], [145, 3, 1, "", "include_below"], [146, 3, 1, "", "include_equal"], [147, 3, 1, "", "include_gates"], [148, 3, 1, "", "include_inside"], [149, 3, 1, "", "include_none"], [150, 3, 1, "", "include_not_equal"], [151, 3, 1, "", "include_not_masked"], [152, 3, 1, "", "include_not_transition"], [153, 3, 1, "", "include_outside"], [154, 3, 1, "", "include_valid"]], "pyart.filters": [[170, 2, 1, "", "GateFilter"], [198, 0, 1, "", "iso0_based_gate_filter"], [199, 0, 1, "", "moment_and_texture_based_gate_filter"], [200, 0, 1, "", "moment_based_gate_filter"], [201, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[171, 3, 1, "", "copy"], [172, 3, 1, "", "exclude_above"], [173, 3, 1, "", "exclude_all"], [174, 3, 1, "", "exclude_below"], [175, 3, 1, "", "exclude_equal"], [176, 3, 1, "", "exclude_gates"], [177, 3, 1, "", "exclude_inside"], [178, 3, 1, "", "exclude_invalid"], [179, 3, 1, "", "exclude_masked"], [180, 3, 1, "", "exclude_none"], [181, 3, 1, "", "exclude_not_equal"], [182, 3, 1, "", "exclude_outside"], [183, 3, 1, "", "exclude_transition"], [184, 4, 1, "", "gate_excluded"], [185, 4, 1, "", "gate_included"], [186, 3, 1, "", "include_above"], [187, 3, 1, "", "include_all"], [188, 3, 1, "", "include_below"], [189, 3, 1, "", "include_equal"], [190, 3, 1, "", "include_gates"], [191, 3, 1, "", "include_inside"], [192, 3, 1, "", "include_none"], [193, 3, 1, "", "include_not_equal"], [194, 3, 1, "", "include_not_masked"], [195, 3, 1, "", "include_not_transition"], [196, 3, 1, "", "include_outside"], [197, 3, 1, "", "include_valid"]], "pyart.graph": [[203, 2, 1, "", "AirborneRadarDisplay"], [233, 2, 1, "", "GridMapDisplay"], [249, 2, 1, "", "GridMapDisplayBasemap"], [263, 2, 1, "", "RadarDisplay"], [292, 2, 1, "", "RadarMapDisplay"], [325, 2, 1, "", "RadarMapDisplayBasemap"], [358, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[204, 3, 1, "", "generate_az_rhi_title"], [205, 3, 1, "", "generate_filename"], [206, 3, 1, "", "generate_ray_title"], [207, 3, 1, "", "generate_title"], [208, 3, 1, "", "generate_vpt_title"], [209, 3, 1, "", "label_xaxis_r"], [210, 3, 1, "", "label_xaxis_rays"], [211, 3, 1, "", "label_xaxis_time"], [212, 3, 1, "", "label_xaxis_x"], [213, 3, 1, "", "label_yaxis_field"], [214, 3, 1, "", "label_yaxis_y"], [215, 3, 1, "", "label_yaxis_z"], [216, 3, 1, "", "plot"], [217, 3, 1, "", "plot_azimuth_to_rhi"], [218, 3, 1, "", "plot_colorbar"], [219, 3, 1, "", "plot_cr_raster"], [220, 3, 1, "", "plot_cross_hair"], [221, 3, 1, "", "plot_grid_lines"], [222, 3, 1, "", "plot_label"], [223, 3, 1, "", "plot_labels"], [224, 3, 1, "", "plot_ppi"], [225, 3, 1, "", "plot_range_ring"], [226, 3, 1, "", "plot_range_rings"], [227, 3, 1, "", "plot_ray"], [228, 3, 1, "", "plot_rhi"], [229, 3, 1, "", "plot_sweep_grid"], [230, 3, 1, "", "plot_vpt"], [231, 3, 1, "", "set_aspect_ratio"], [232, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[234, 3, 1, "", "cartopy_coastlines"], [235, 3, 1, "", "cartopy_political_boundaries"], [236, 3, 1, "", "cartopy_states"], [237, 3, 1, "", "generate_filename"], [238, 3, 1, "", "generate_grid_title"], [239, 3, 1, "", "generate_latitudinal_level_title"], [240, 3, 1, "", "generate_longitudinal_level_title"], [241, 3, 1, "", "plot_colorbar"], [242, 3, 1, "", "plot_cross_section"], [243, 3, 1, "", "plot_crosshairs"], [244, 3, 1, "", "plot_grid"], [245, 3, 1, "", "plot_latitude_slice"], [246, 3, 1, "", "plot_latitudinal_level"], [247, 3, 1, "", "plot_longitude_slice"], [248, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[250, 3, 1, "", "generate_filename"], [251, 3, 1, "", "generate_grid_title"], [252, 3, 1, "", "generate_latitudinal_level_title"], [253, 3, 1, "", "generate_longitudinal_level_title"], [254, 3, 1, "", "get_basemap"], [255, 3, 1, "", "plot_basemap"], [256, 3, 1, "", "plot_colorbar"], [257, 3, 1, "", "plot_crosshairs"], [258, 3, 1, "", "plot_grid"], [259, 3, 1, "", "plot_latitude_slice"], [260, 3, 1, "", "plot_latitudinal_level"], [261, 3, 1, "", "plot_longitude_slice"], [262, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[264, 3, 1, "", "generate_az_rhi_title"], [265, 3, 1, "", "generate_filename"], [266, 3, 1, "", "generate_ray_title"], [267, 3, 1, "", "generate_title"], [268, 3, 1, "", "generate_vpt_title"], [269, 3, 1, "", "label_xaxis_r"], [270, 3, 1, "", "label_xaxis_rays"], [271, 3, 1, "", "label_xaxis_time"], [272, 3, 1, "", "label_xaxis_x"], [273, 3, 1, "", "label_yaxis_field"], [274, 3, 1, "", "label_yaxis_y"], [275, 3, 1, "", "label_yaxis_z"], [276, 3, 1, "", "plot"], [277, 3, 1, "", "plot_azimuth_to_rhi"], [278, 3, 1, "", "plot_colorbar"], [279, 3, 1, "", "plot_cr_raster"], [280, 3, 1, "", "plot_cross_hair"], [281, 3, 1, "", "plot_grid_lines"], [282, 3, 1, "", "plot_label"], [283, 3, 1, "", "plot_labels"], [284, 3, 1, "", "plot_ppi"], [285, 3, 1, "", "plot_range_ring"], [286, 3, 1, "", "plot_range_rings"], [287, 3, 1, "", "plot_ray"], [288, 3, 1, "", "plot_rhi"], [289, 3, 1, "", "plot_vpt"], [290, 3, 1, "", "set_aspect_ratio"], [291, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[293, 3, 1, "", "generate_az_rhi_title"], [294, 3, 1, "", "generate_filename"], [295, 3, 1, "", "generate_ray_title"], [296, 3, 1, "", "generate_title"], [297, 3, 1, "", "generate_vpt_title"], [298, 3, 1, "", "label_xaxis_r"], [299, 3, 1, "", "label_xaxis_rays"], [300, 3, 1, "", "label_xaxis_time"], [301, 3, 1, "", "label_xaxis_x"], [302, 3, 1, "", "label_yaxis_field"], [303, 3, 1, "", "label_yaxis_y"], [304, 3, 1, "", "label_yaxis_z"], [305, 3, 1, "", "plot"], [306, 3, 1, "", "plot_azimuth_to_rhi"], [307, 3, 1, "", "plot_colorbar"], [308, 3, 1, "", "plot_cr_raster"], [309, 3, 1, "", "plot_cross_hair"], [310, 3, 1, "", "plot_grid_lines"], [311, 3, 1, "", "plot_label"], [312, 3, 1, "", "plot_labels"], [313, 3, 1, "", "plot_line_geo"], [314, 3, 1, "", "plot_line_xy"], [315, 3, 1, "", "plot_point"], [316, 3, 1, "", "plot_ppi"], [317, 3, 1, "", "plot_ppi_map"], [318, 3, 1, "", "plot_range_ring"], [319, 3, 1, "", "plot_range_rings"], [320, 3, 1, "", "plot_ray"], [321, 3, 1, "", "plot_rhi"], [322, 3, 1, "", "plot_vpt"], [323, 3, 1, "", "set_aspect_ratio"], [324, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[326, 3, 1, "", "generate_az_rhi_title"], [327, 3, 1, "", "generate_filename"], [328, 3, 1, "", "generate_ray_title"], [329, 3, 1, "", "generate_title"], [330, 3, 1, "", "generate_vpt_title"], [331, 3, 1, "", "label_xaxis_r"], [332, 3, 1, "", "label_xaxis_rays"], [333, 3, 1, "", "label_xaxis_time"], [334, 3, 1, "", "label_xaxis_x"], [335, 3, 1, "", "label_yaxis_field"], [336, 3, 1, "", "label_yaxis_y"], [337, 3, 1, "", "label_yaxis_z"], [338, 3, 1, "", "plot"], [339, 3, 1, "", "plot_azimuth_to_rhi"], [340, 3, 1, "", "plot_colorbar"], [341, 3, 1, "", "plot_cr_raster"], [342, 3, 1, "", "plot_cross_hair"], [343, 3, 1, "", "plot_grid_lines"], [344, 3, 1, "", "plot_label"], [345, 3, 1, "", "plot_labels"], [346, 3, 1, "", "plot_line_geo"], [347, 3, 1, "", "plot_line_xy"], [348, 3, 1, "", "plot_point"], [349, 3, 1, "", "plot_ppi"], [350, 3, 1, "", "plot_ppi_map"], [351, 3, 1, "", "plot_range_ring"], [352, 3, 1, "", "plot_range_rings"], [353, 3, 1, "", "plot_ray"], [354, 3, 1, "", "plot_rhi"], [355, 3, 1, "", "plot_vpt"], [356, 3, 1, "", "set_aspect_ratio"], [357, 3, 1, "", "set_limits"]], "pyart.io": [[360, 0, 1, "", "prepare_for_read"], [361, 0, 1, "", "read"], [362, 0, 1, "", "read_arm_sonde"], [363, 0, 1, "", "read_arm_sonde_vap"], [364, 0, 1, "", "read_cfradial"], [365, 0, 1, "", "read_chl"], [366, 0, 1, "", "read_grid"], [367, 0, 1, "", "read_grid_mdv"], [368, 0, 1, "", "read_mdv"], [369, 0, 1, "", "read_nexrad_archive"], [370, 0, 1, "", "read_nexrad_cdm"], [371, 0, 1, "", "read_nexrad_level3"], [372, 0, 1, "", "read_rsl"], [373, 0, 1, "", "read_sigmet"], [374, 0, 1, "", "read_uf"], [375, 0, 1, "", "write_cfradial"], [376, 0, 1, "", "write_grid"], [377, 0, 1, "", "write_grid_geotiff"], [378, 0, 1, "", "write_grid_mdv"], [379, 0, 1, "", "write_uf"]], "pyart.lazydict": [[381, 2, 1, "", "LazyLoadDict"], [394, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[382, 3, 1, "", "clear"], [383, 3, 1, "", "copy"], [384, 3, 1, "", "get"], [385, 3, 1, "", "has_key"], [386, 3, 1, "", "items"], [387, 3, 1, "", "keys"], [388, 3, 1, "", "pop"], [389, 3, 1, "", "popitem"], [390, 3, 1, "", "set_lazy"], [391, 3, 1, "", "setdefault"], [392, 3, 1, "", "update"], [393, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[395, 3, 1, "", "clear"], [396, 3, 1, "", "get"], [397, 3, 1, "", "items"], [398, 3, 1, "", "keys"], [399, 3, 1, "", "pop"], [400, 3, 1, "", "popitem"], [401, 3, 1, "", "setdefault"], [402, 3, 1, "", "update"], [403, 3, 1, "", "values"]], "pyart.map": [[405, 2, 1, "", "GateMapper"], [409, 0, 1, "", "example_roi_func_constant"], [410, 0, 1, "", "example_roi_func_dist"], [411, 0, 1, "", "example_roi_func_dist_beam"], [412, 0, 1, "", "grid_from_radars"], [413, 0, 1, "", "map_gates_to_grid"], [414, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[406, 4, 1, "", "distance_tolerance"], [407, 3, 1, "", "mapped_radar"], [408, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[416, 0, 1, "", "ZtoR"], [417, 0, 1, "", "calculate_snr_from_reflectivity"], [418, 0, 1, "", "calculate_velocity_texture"], [419, 0, 1, "", "composite_reflectivity"], [420, 0, 1, "", "compute_cdr"], [421, 0, 1, "", "compute_l"], [422, 0, 1, "", "compute_noisedBZ"], [423, 0, 1, "", "compute_snr"], [424, 0, 1, "", "conv_strat_raut"], [425, 0, 1, "", "conv_strat_yuter"], [426, 0, 1, "", "create_cfad"], [427, 0, 1, "", "dealias_spectra"], [428, 0, 1, "", "est_rain_rate_a"], [429, 0, 1, "", "est_rain_rate_hydro"], [430, 0, 1, "", "est_rain_rate_kdp"], [431, 0, 1, "", "est_rain_rate_z"], [432, 0, 1, "", "est_rain_rate_za"], [433, 0, 1, "", "est_rain_rate_zkdp"], [434, 0, 1, "", "est_rain_rate_zpoly"], [435, 0, 1, "", "feature_detection"], [436, 0, 1, "", "fetch_radar_time_profile"], [437, 0, 1, "", "get_freq_band"], [438, 0, 1, "", "grid_displacement_pc"], [439, 0, 1, "", "grid_shift"], [440, 0, 1, "", "hydroclass_semisupervised"], [441, 0, 1, "", "kdp_maesaka"], [442, 0, 1, "", "kdp_schneebeli"], [443, 0, 1, "", "kdp_vulpiani"], [444, 0, 1, "", "map_profile_to_gates"], [445, 0, 1, "", "quasi_vertical_profile"], [446, 0, 1, "", "spectra_moments"], [447, 0, 1, "", "steiner_conv_strat"], [448, 0, 1, "", "texture_of_complex_phase"], [449, 0, 1, "", "vad_browning"], [450, 0, 1, "", "vad_michelson"]], "pyart.testing": [[452, 2, 1, "", "Grid"], [462, 2, 1, "", "InTemporaryDirectory"], [464, 2, 1, "", "Radar"], [493, 2, 1, "", "RadarSpectra"], [538, 0, 1, "", "get_metadata"], [539, 0, 1, "", "get_test_data"], [540, 0, 1, "", "make_empty_grid"], [541, 0, 1, "", "make_empty_ppi_radar"], [542, 0, 1, "", "make_empty_rhi_radar"], [543, 0, 1, "", "make_empty_spectra_radar"], [544, 0, 1, "", "make_gaussian_storm_grid"], [545, 0, 1, "", "make_normal_storm"], [546, 0, 1, "", "make_single_ray_radar"], [547, 0, 1, "", "make_storm_grid"], [548, 0, 1, "", "make_target_grid"], [549, 0, 1, "", "make_target_radar"], [550, 0, 1, "", "make_target_spectra_radar"], [551, 0, 1, "", "make_velocity_aliased_radar"], [552, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[453, 3, 1, "", "add_field"], [454, 3, 1, "", "get_point_longitude_latitude"], [455, 3, 1, "", "get_projparams"], [456, 3, 1, "", "init_point_altitude"], [457, 3, 1, "", "init_point_longitude_latitude"], [458, 3, 1, "", "init_point_x_y_z"], [459, 4, 1, "", "projection_proj"], [460, 3, 1, "", "to_xarray"], [461, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[463, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[465, 3, 1, "", "add_field"], [466, 3, 1, "", "add_field_like"], [467, 3, 1, "", "add_filter"], [468, 3, 1, "", "check_field_exists"], [469, 3, 1, "", "extract_sweeps"], [470, 3, 1, "", "get_azimuth"], [471, 3, 1, "", "get_elevation"], [472, 3, 1, "", "get_end"], [473, 3, 1, "", "get_field"], [474, 3, 1, "", "get_gate_area"], [475, 3, 1, "", "get_gate_lat_lon_alt"], [476, 3, 1, "", "get_gate_x_y_z"], [477, 3, 1, "", "get_nyquist_vel"], [478, 3, 1, "", "get_slice"], [479, 3, 1, "", "get_start"], [480, 3, 1, "", "get_start_end"], [481, 3, 1, "", "info"], [482, 3, 1, "", "init_gate_altitude"], [483, 3, 1, "", "init_gate_longitude_latitude"], [484, 3, 1, "", "init_gate_x_y_z"], [485, 3, 1, "", "init_rays_per_sweep"], [486, 3, 1, "", "iter_azimuth"], [487, 3, 1, "", "iter_elevation"], [488, 3, 1, "", "iter_end"], [489, 3, 1, "", "iter_field"], [490, 3, 1, "", "iter_slice"], [491, 3, 1, "", "iter_start"], [492, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[494, 4, 1, "", "altitude"], [495, 4, 1, "", "azimuth"], [496, 3, 1, "", "check_field_exists"], [497, 4, 1, "", "elevation"], [498, 4, 1, "", "fields"], [499, 4, 1, "", "fixed_angle"], [500, 4, 1, "", "gate_altitude"], [501, 4, 1, "", "gate_latitude"], [502, 4, 1, "", "gate_longitude"], [503, 4, 1, "", "gate_x"], [504, 4, 1, "", "gate_y"], [505, 4, 1, "", "gate_z"], [506, 3, 1, "", "get_end"], [507, 3, 1, "", "get_slice"], [508, 3, 1, "", "get_start"], [509, 3, 1, "", "get_start_end"], [510, 3, 1, "", "init_gate_altitude"], [511, 3, 1, "", "init_gate_longitude_latitude"], [512, 3, 1, "", "init_gate_x_y_z"], [513, 3, 1, "", "init_rays_per_sweep"], [514, 3, 1, "", "iter_azimuth"], [515, 3, 1, "", "iter_elevation"], [516, 3, 1, "", "iter_end"], [517, 3, 1, "", "iter_field"], [518, 3, 1, "", "iter_slice"], [519, 3, 1, "", "iter_start"], [520, 3, 1, "", "iter_start_end"], [521, 4, 1, "", "latitude"], [522, 4, 1, "", "longitude"], [523, 4, 1, "", "ngates"], [524, 4, 1, "", "npulses_max"], [525, 4, 1, "", "nrays"], [526, 4, 1, "", "nsweeps"], [527, 4, 1, "", "projection"], [528, 4, 1, "", "range"], [529, 4, 1, "", "rays_per_sweep"], [530, 4, 1, "", "scan_type"], [531, 4, 1, "", "sweep_end_ray_index"], [532, 4, 1, "", "sweep_mode"], [533, 4, 1, "", "sweep_number"], [534, 4, 1, "", "sweep_start_ray_index"], [535, 4, 1, "", "time"], [536, 3, 1, "", "to_vpt"], [537, 4, 1, "", "velocity_bins"]], "pyart.util": [[554, 0, 1, "", "angular_mean"], [555, 0, 1, "", "angular_mean_deg"], [556, 0, 1, "", "angular_std"], [557, 0, 1, "", "angular_std_deg"], [558, 0, 1, "", "angular_texture_2d"], [559, 0, 1, "", "column_vertical_profile"], [560, 0, 1, "", "cross_section_ppi"], [561, 0, 1, "", "cross_section_rhi"], [562, 0, 1, "", "datetime_from_dataset"], [563, 0, 1, "", "datetime_from_grid"], [564, 0, 1, "", "datetime_from_radar"], [565, 0, 1, "", "datetimes_from_dataset"], [566, 0, 1, "", "datetimes_from_radar"], [567, 0, 1, "", "determine_sweeps"], [568, 0, 1, "", "estimate_noise_hs74"], [569, 0, 1, "", "for_azimuth"], [570, 0, 1, "", "get_column_rays"], [571, 0, 1, "", "get_field_location"], [572, 0, 1, "", "image_mute_radar"], [573, 0, 1, "", "interval_mean"], [574, 0, 1, "", "interval_std"], [575, 0, 1, "", "is_vpt"], [576, 0, 1, "", "join_radar"], [577, 0, 1, "", "mean_of_two_angles"], [578, 0, 1, "", "mean_of_two_angles_deg"], [579, 0, 1, "", "rolling_window"], [580, 0, 1, "", "simulated_vel_from_profile"], [581, 0, 1, "", "sphere_distance"], [582, 0, 1, "", "subset_radar"], [583, 0, 1, "", "texture"], [584, 0, 1, "", "texture_along_ray"], [585, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589, 591, 592, 597], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 448], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 538], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 613, 614, 615, 619, 648, 657], "add_field": [32, 46, 453, 465], "get_point_longitude_latitud": [33, 454], "get_projparam": [34, 455], "init_point_altitud": [35, 456], "init_point_longitude_latitud": [36, 457], "init_point_x_y_z": [37, 458], "projection_proj": [38, 459], "to_xarrai": [39, 460], "write": [40, 461], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 590, 591, 595, 598, 600, 612, 614, 615, 638, 651, 654, 659, 662], "add_field_lik": [47, 466], "add_filt": [48, 467], "check_field_exist": [49, 77, 468, 496], "extract_sweep": [50, 469], "get_azimuth": [51, 470], "get_elev": [52, 471], "get_end": [53, 87, 472, 506], "get_field": [54, 473], "get_gate_area": [55, 474], "get_gate_lat_lon_alt": [56, 475], "get_gate_x_y_z": [57, 476], "get_nyquist_vel": [58, 477], "get_slic": [59, 88, 478, 507], "get_start": [60, 89, 479, 508], "get_start_end": [61, 90, 480, 509], "info": [62, 481], "init_gate_altitud": [63, 91, 482, 510], "init_gate_longitude_latitud": [64, 92, 483, 511], "init_gate_x_y_z": [65, 93, 484, 512], "init_rays_per_sweep": [66, 94, 485, 513], "iter_azimuth": [67, 95, 486, 514], "iter_elev": [68, 96, 487, 515], "iter_end": [69, 97, 488, 516], "iter_field": [70, 98, 489, 517], "iter_slic": [71, 99, 490, 518], "iter_start": [72, 100, 491, 519], "iter_start_end": [73, 101, 492, 520], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537], "altitud": [75, 494], "azimuth": [76, 495], "elev": [78, 497], "field": [79, 498, 654], "fixed_angl": [80, 499], "gate_altitud": [81, 500], "gate_latitud": [82, 501], "gate_longitud": [83, 502], "gate_x": [84, 503], "gate_i": [85, 504], "gate_z": [86, 505], "latitud": [102, 521, 609], "longitud": [103, 522, 609], "ngate": [104, 523], "npulses_max": [105, 524], "nrai": [106, 525], "nsweep": [107, 526], "project": [108, 527], "rang": [109, 528], "rays_per_sweep": [110, 529], "scan_typ": [111, 530], "sweep_end_ray_index": [112, 531], "sweep_mod": [113, 532], "sweep_numb": [114, 533], "sweep_start_ray_index": [115, 534], "time": [116, 535, 591, 605, 610, 616, 635, 644, 645, 650, 660], "to_vpt": [117, 536, 585], "velocity_bin": [118, 537], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_geograph": 121, "cartesian_to_geographic_aeqd": 122, "cartesian_vectors_to_geograph": 123, "geographic_to_cartesian": 124, "geographic_to_cartesian_aeqd": 125, "correct": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 595, 602, 603, 606], "gatefilt": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 658], "copi": [128, 171, 383], "exclude_abov": [129, 172], "exclude_al": [130, 173], "exclude_below": [131, 174], "exclude_equ": [132, 175], "exclude_g": [133, 176], "exclude_insid": [134, 177], "exclude_invalid": [135, 178], "exclude_mask": [136, 179], "exclude_non": [137, 180], "exclude_not_equ": [138, 181], "exclude_outsid": [139, 182], "exclude_transit": [140, 183], "gate_exclud": [141, 184], "gate_includ": [142, 185], "include_abov": [143, 186], "include_al": [144, 187], "include_below": [145, 188], "include_equ": [146, 189], "include_g": [147, 190], "include_insid": [148, 191], "include_non": [149, 192], "include_not_equ": [150, 193], "include_not_mask": [151, 194], "include_not_transit": [152, 195], "include_outsid": [153, 196], "include_valid": [154, 197], "calculate_attenu": 155, "calculate_attenuation_philinear": 156, "calculate_attenuation_zphi": 157, "correct_bia": 158, "correct_noise_rhohv": 159, "dealias_fourdd": 160, "dealias_region_bas": 161, "dealias_unwrap_phas": 162, "despeckle_field": 163, "find_object": 164, "moment_based_gate_filt": [165, 200], "phase_proc_lp": 166, "phase_proc_lp_gf": 167, "except": 168, "filter": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "iso0_based_gate_filt": 198, "moment_and_texture_based_gate_filt": 199, "temp_based_gate_filt": 201, "graph": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "airborneradardisplai": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "generate_az_rhi_titl": [204, 264, 293, 326], "generate_filenam": [205, 237, 250, 265, 294, 327], "generate_ray_titl": [206, 266, 295, 328], "generate_titl": [207, 267, 296, 329], "generate_vpt_titl": [208, 268, 297, 330], "label_xaxis_r": [209, 269, 298, 331], "label_xaxis_rai": [210, 270, 299, 332], "label_xaxis_tim": [211, 271, 300, 333], "label_xaxis_x": [212, 272, 301, 334], "label_yaxis_field": [213, 273, 302, 335], "label_yaxis_i": [214, 274, 303, 336], "label_yaxis_z": [215, 275, 304, 337], "plot": [216, 276, 305, 338, 590, 591, 592, 594, 595, 606, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 639, 642, 643, 649], "plot_azimuth_to_rhi": [217, 277, 306, 339], "plot_colorbar": [218, 241, 256, 278, 307, 340], "plot_cr_rast": [219, 279, 308, 341], "plot_cross_hair": [220, 280, 309, 342], "plot_grid_lin": [221, 281, 310, 343], "plot_label": [222, 223, 282, 283, 311, 312, 344, 345], "plot_ppi": [224, 284, 316, 349], "plot_range_r": [225, 226, 285, 286, 318, 319, 351, 352], "plot_rai": [227, 287, 320, 353], "plot_rhi": [228, 288, 321, 354], "plot_sweep_grid": 229, "plot_vpt": [230, 289, 322, 355], "set_aspect_ratio": [231, 290, 323, 356], "set_limit": [232, 291, 324, 357], "gridmapdisplai": [233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 633], "cartopy_coastlin": 234, "cartopy_political_boundari": 235, "cartopy_st": 236, "generate_grid_titl": [238, 251], "generate_latitudinal_level_titl": [239, 252], "generate_longitudinal_level_titl": [240, 253], "plot_cross_sect": 242, "plot_crosshair": [243, 257], "plot_grid": [244, 258], "plot_latitude_slic": [245, 259], "plot_latitudinal_level": [246, 260], "plot_longitude_slic": [247, 261], "plot_longitudinal_level": [248, 262], "gridmapdisplaybasemap": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "get_basemap": 254, "plot_basemap": 255, "radardisplai": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "radarmapdisplai": [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 592], "plot_line_geo": [313, 346], "plot_line_xi": [314, 347], "plot_point": [315, 348], "plot_ppi_map": [317, 350, 592], "radarmapdisplaybasemap": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "plot_convstrat_schem": 358, "io": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379], "prepare_for_read": 360, "read": [361, 590, 591, 592, 595, 608, 609], "read_arm_sond": 362, "read_arm_sonde_vap": 363, "read_cfradi": 364, "read_chl": 365, "read_grid": 366, "read_grid_mdv": 367, "read_mdv": 368, "read_nexrad_arch": 369, "read_nexrad_cdm": 370, "read_nexrad_level3": 371, "read_rsl": 372, "read_sigmet": 373, "read_uf": 374, "write_cfradi": 375, "write_grid": 376, "write_grid_geotiff": 377, "write_grid_mdv": 378, "write_uf": 379, "lazydict": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "lazyloaddict": [381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "clear": [382, 395], "get": [384, 396, 651], "has_kei": 385, "item": [386, 397], "kei": [387, 398, 591], "pop": [388, 399], "popitem": [389, 400], "set_lazi": 390, "setdefault": [391, 401], "updat": [392, 402, 600], "valu": [393, 403], "mutablemap": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "map": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 606, 611, 613, 614, 615, 626, 657], "gatemapp": [405, 406, 407, 408, 612], "distance_toler": 406, "mapped_radar": 407, "time_toler": 408, "example_roi_func_const": 409, "example_roi_func_dist": 410, "example_roi_func_dist_beam": 411, "grid_from_radar": 412, "map_gates_to_grid": 413, "map_to_grid": 414, "retriev": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 595, 606, 636], "ztor": 416, "calculate_snr_from_reflect": 417, "calculate_velocity_textur": 418, "composite_reflect": 419, "compute_cdr": 420, "compute_l": 421, "compute_noisedbz": 422, "compute_snr": 423, "conv_strat_raut": 424, "conv_strat_yut": 425, "create_cfad": 426, "dealias_spectra": 427, "est_rain_rate_a": 428, "est_rain_rate_hydro": 429, "est_rain_rate_kdp": 430, "est_rain_rate_z": 431, "est_rain_rate_za": 432, "est_rain_rate_zkdp": 433, "est_rain_rate_zpoli": 434, "feature_detect": 435, "fetch_radar_time_profil": 436, "get_freq_band": 437, "grid_displacement_pc": 438, "grid_shift": 439, "hydroclass_semisupervis": 440, "kdp_maesaka": 441, "kdp_schneeb": 442, "kdp_vulpiani": 443, "map_profile_to_g": 444, "quasi_vertical_profil": 445, "spectra_mo": 446, "paramet": [446, 592], "steiner_conv_strat": 447, "vad_brown": 449, "vad_michelson": 450, "test": [451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 598, 662], "intemporarydirectori": [462, 463], "cleanup": 463, "get_test_data": 539, "make_empty_grid": 540, "make_empty_ppi_radar": 541, "make_empty_rhi_radar": 542, "make_empty_spectra_radar": 543, "make_gaussian_storm_grid": 544, "make_normal_storm": 545, "make_single_ray_radar": 546, "make_storm_grid": 547, "make_target_grid": 548, "make_target_radar": 549, "make_target_spectra_radar": 550, "make_velocity_aliased_radar": 551, "make_velocity_aliased_rhi_radar": 552, "util": [553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585], "angular_mean": 554, "angular_mean_deg": 555, "angular_std": 556, "angular_std_deg": 557, "angular_texture_2d": 558, "column_vertical_profil": 559, "cross_section_ppi": 560, "cross_section_rhi": 561, "datetime_from_dataset": 562, "datetime_from_grid": 563, "datetime_from_radar": 564, "datetimes_from_dataset": 565, "datetimes_from_radar": 566, "determine_sweep": 567, "estimate_noise_hs74": 568, "for_azimuth": 569, "assumpt": [569, 581], "get_column_rai": 570, "get_field_loc": 571, "image_mute_radar": 572, "interval_mean": 573, "interval_std": 574, "is_vpt": 575, "join_radar": 576, "mean_of_two_angl": 577, "mean_of_two_angles_deg": 578, "rolling_window": 579, "simulated_vel_from_profil": 580, "sphere_dist": 581, "subset_radar": 582, "textur": 583, "texture_along_rai": 584, "api": [586, 595], "refer": [586, 595, 640, 641], "manual": 586, "blog": [587, 596], "blend": 588, "observ": 588, "from": [588, 590, 595, 608, 619, 622, 624, 625, 627, 628, 629, 630, 631, 634, 661], "tracer": 588, "us": [588, 590, 591, 592, 595, 604, 612, 613, 633, 647, 648, 649], "py": [588, 589, 590, 595, 597, 598, 599, 600, 647, 648, 649, 651, 658, 659, 661, 662], "art": [588, 589, 590, 595, 597, 598, 599, 600, 647, 648, 649, 651, 658, 659, 661, 662], "import": [588, 590, 591, 592, 594, 598, 662], "goe": 588, "data": [588, 590, 591, 592, 594, 595, 608, 609, 648, 657, 658], "access": [588, 590, 592, 594], "csapr": 588, "load": [588, 591], "lma": 588, "flash": 588, "june": 588, "17th": 588, "case": 588, "17": [588, 597], "rhi": [588, 595, 627, 628, 629, 630, 631, 632], "activ": 589, "develop": [589, 601], "submit": 589, "pull": 589, "request": 589, "pr": [589, 597], "first": 589, "you": [589, 595], "have": 589, "done": 589, "so": 589, "alreadi": 589, "need": 589, "fork": 589, "github": [589, 598, 600, 662], "repositori": 589, "second": 589, "termin": 589, "clone": 589, "your": [589, 595, 618, 620], "remot": 589, "git": [589, 600], "command": 589, "third": 589, "creat": [589, 590, 591, 600, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 637, 653, 664], "doc": [589, 593], "conda": [589, 600], "environ": [589, 664], "fourth": 589, "we": 589, "instal": [589, 598, 651, 661, 662], "trmm": 589, "rsl": 589, "librari": 589, "lastli": 589, "python": [589, 598, 651, 662], "script": 589, "within": 589, "okai": 589, "should": 589, "now": 589, "readi": 589, "make": [589, 600], "chang": 589, "sourc": [589, 661], "code": [589, 598, 662], "1": [589, 597, 641], "new": [589, 593], "branch": 589, "our": [589, 591, 592, 594, 595], "2": [589, 597, 608, 609, 641], "push": 589, "To": 589, "let": 589, "commit": 589, "after": 589, "thi": [589, 597], "i": [589, 595, 651], "what": [589, 651], "look": 589, "like": 589, "hope": 589, "help": [589, 651], "hail": 590, "storm": 590, "visual": [590, 591, 594], "panda": 590, "motiv": [590, 594, 595, 596], "nexrad": [590, 592, 594, 608, 609, 622, 623], "fsspec": 590, "setup": [590, 594, 598, 599, 662], "filesystem": 590, "bucket": 590, "file": [590, 598, 622, 624, 625, 627, 628, 629, 630, 631, 653, 654, 662], "dataset": 590, "nexradaw": 590, "configur": 590, "search": [590, 595], "download": [590, 594], "spc": 590, "report": 590, "function": [590, 594], "loop": 590, "through": [590, 595], "helper": 590, "scale": 590, "bar": 590, "an": [590, 621, 629, 630, 664], "anim": 590, "imag": [590, 594, 621], "view": [590, 591], "final": [590, 591], "conclus": [590, 592, 594, 595, 596], "work": [591, 640, 641], "vertic": 591, "point": [591, 638], "xarrai": 591, "hvplot": 591, "overview": 591, "ka": 591, "band": 591, "arm": [591, 595, 598, 651, 662], "zenith": 591, "kazr": 591, "instrument": 591, "clean": [591, 595], "up": [591, 592, 664], "bit": 591, "analysi": 591, "subset": 591, "reflect": [591, 603, 621, 623, 629, 630, 639], "veloc": [591, 595, 604, 637, 647, 655], "quick": 591, "extract": [591, 638], "date": [591, 594], "inform": [591, 664], "label": 591, "holoview": 591, "try": [591, 592], "raster": 591, "takeawai": 591, "fix": [592, 597, 609], "weird": 592, "pattern": 592, "when": 592, "level": [592, 608, 609], "3": [592, 597, 608, 633], "The": [592, 594, 595, 596, 598, 651, 659, 662], "recreat": 592, "issu": [592, 609], "set": [592, 664], "matplotlib": 592, "style": [592, 598, 662], "without": 592, "alpha": 592, "add": [592, 594], "argument": 592, "dig": 592, "investig": [592, 594, 595], "pcolormesh": 592, "edgecolor": 592, "modifi": [592, 620], "default": 592, "solut": [592, 595, 596], "sever": 594, "weather": 594, "wisconsin": 594, "outbreak": 594, "focus": 594, "southern": 594, "reproduc": 594, "event": 594, "road": 594, "interst": 594, "featur": [594, 597, 641], "avail": 594, "run": 594, "scan": 595, "cloud": [595, 608], "epcap": 595, "problem": [595, 596], "dq": 595, "browser": 595, "act": 595, "token": 595, "live": 595, "pass": 595, "credenti": 595, "take": 595, "peak": 595, "strategi": 595, "sort": 595, "all": 595, "ppi": [595, 613, 624, 625, 626, 634, 649], "appli": 595, "explor": 595, "threshold": 595, "snr": 595, "revis": 595, "where": 595, "slice": 595, "frame": 595, "post": 596, "templat": 596, "changelog": 597, "18": 597, "enhanc": 597, "made": 597, "bug": 597, "other": 597, "merg": 597, "contributor": [597, 598, 662], "releas": [597, 600], "0": 597, "document": [597, 600], "improv": 597, "16": 597, "mainten": 597, "upkeep": 597, "15": 597, "v1": 597, "14": 597, "6": 597, "5": 597, "4": 597, "13": 597, "12": 597, "7": 597, "11": 597, "8": 597, "deprec": 597, "10": 597, "9": 597, "picasso": 597, "": [598, 601, 662], "guid": [598, 601, 662, 663], "toolkit": [598, 651, 662], "link": [598, 662], "cite": [598, 651, 662], "resourc": [598, 662], "continu": 599, "integr": 599, "how": [600, 640, 641], "tag": 600, "prepar": 600, "note": 600, "trigger": 600, "pypi": 600, "upload": 600, "packag": 600, "forg": 600, "announc": 600, "open": 600, "forum": 600, "version": 601, "moment": [602, 606, 622], "exampl": [602, 606, 607, 611, 617, 636, 637, 640, 646], "attenu": 603, "dealia": [604, 647], "doppler": 604, "region": 604, "base": 604, "algorithm": [604, 640, 641], "comput": [605, 610, 616, 635, 644, 645, 650, 660], "galleri": [606, 652], "input": [606, 607], "output": [606, 607], "xradar": [606, 646, 647, 648, 649], "aw": 608, "older": 609, "compar": 612, "two": [612, 615, 632], "singl": [613, 614], "sweep": 613, "cartesian": [613, 614, 615, 657], "2d": 613, "weight": 613, "choos": 618, "colormap": 618, "cross": [619, 634], "section": [619, 634], "colorbar": 620, "mute": 621, "multipl": [622, 627, 628], "cfradial": 624, "mdv": [625, 629, 630, 631], "cartopi": 626, "panel": [627, 628, 632, 633], "cf": [627, 628], "radial": [627, 628, 647], "contour": [629, 630], "line": [629, 630], "volum": 634, "cfad": 637, "diagram": 637, "valid": 637, "column": 638, "abov": 638, "calcul": [639, 642, 643], "composit": 639, "convect": [640, 641], "stratiform": [640, 641], "classif": [640, 641, 642], "summari": [640, 641], "recommend": [640, 641], "best": [640, 641], "practic": [640, 641], "detect": 641, "part": 641, "warm": 641, "season": 641, "cool": 641, "hydrometeor": 642, "vad": 643, "profil": 643, "can": 651, "do": 651, "short": 651, "cours": 651, "depend": [651, 661, 664], "option": [651, 661, 664], "contribut": 651, "notebook": 652, "basic": 653, "ingest": 653, "netcdf": 653, "manipul": 654, "save": 654, "object": [654, 659], "dealias": 655, "mask": 658, "With": 658, "index": 659, "build": 661, "requir": 661, "obtain": 661, "latest": 661, "frequent": 661, "ask": 661, "question": 661, "user": 663, "anaconda": 664, "channel": 664, "ad": 664, "path": 664, "more": 664}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[126, "pyart-correct"]], "pyart.correct.GateFilter": [[127, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[128, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[129, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[130, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[131, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[132, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[133, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[134, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[135, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[136, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[137, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[138, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[139, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[140, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[141, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[142, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[143, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[144, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[145, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[146, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[147, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[148, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[149, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[150, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[151, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[152, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[153, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[154, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[155, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[156, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[157, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[158, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[159, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[160, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[161, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[162, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[163, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[164, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[165, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[166, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[167, "pyart-correct-phase-proc-lp-gf"]], "pyart.exceptions": [[168, "pyart-exceptions"]], "pyart.filters": [[169, "pyart-filters"]], "pyart.filters.GateFilter": [[170, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[171, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[172, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[173, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[174, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[175, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[176, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[177, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[178, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[179, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[180, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[181, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[182, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[183, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[184, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[185, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[186, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[187, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[188, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[189, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[190, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[191, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[192, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[193, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[194, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[195, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[196, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[197, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[198, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[199, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[200, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[201, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[202, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[203, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[204, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[205, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[206, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[207, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[208, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[209, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[210, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[211, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[212, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[213, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[214, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[215, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[216, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[217, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[218, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[219, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[220, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[221, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[222, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[223, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[224, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[225, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[226, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[227, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[228, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[229, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[230, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[231, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[232, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[233, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[234, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[235, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[236, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[237, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[238, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[239, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[240, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[241, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[242, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[243, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[244, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[245, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[246, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[247, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[248, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[249, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[250, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[251, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[252, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[253, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[254, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[255, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[256, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[257, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[258, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[259, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[260, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[261, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[262, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[263, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[264, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[265, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[266, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[267, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[268, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[269, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[270, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[271, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[272, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[273, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[274, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[275, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[276, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[277, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[278, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[279, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[280, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[281, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[282, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[283, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[284, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[285, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[286, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[287, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[288, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[289, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[290, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[291, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[292, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[293, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[294, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[295, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[296, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[297, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[298, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[299, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[300, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[301, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[302, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[303, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[304, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[305, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[306, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[307, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[308, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[309, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[310, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[311, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[312, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[313, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[314, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[315, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[316, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[317, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[318, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[319, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[320, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[321, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[322, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[323, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[324, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[325, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[326, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[327, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[328, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[329, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[330, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[331, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[332, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[333, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[334, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[335, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[336, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[337, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[338, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[339, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[340, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[341, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[342, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[343, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[344, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[345, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[346, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[347, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[348, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[349, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[350, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[351, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[352, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[353, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[354, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[355, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[356, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[357, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[358, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[359, "pyart-io"]], "pyart.io.prepare_for_read": [[360, "pyart-io-prepare-for-read"]], "pyart.io.read": [[361, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[362, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[363, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[364, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[365, "pyart-io-read-chl"]], "pyart.io.read_grid": [[366, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[367, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[368, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[369, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[370, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[371, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[372, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[373, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[374, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[375, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[376, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[377, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[378, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[379, "pyart-io-write-uf"]], "pyart.lazydict": [[380, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[381, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[382, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[383, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[384, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[385, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[386, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[387, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[388, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[389, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[390, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[391, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[392, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[393, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[394, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[395, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[396, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[397, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[398, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[399, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[400, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[401, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[402, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[403, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[404, "pyart-map"]], "pyart.map.GateMapper": [[405, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[406, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[407, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[408, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[409, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[410, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[411, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[412, "pyart-map-grid-from-radars"]], "pyart.map.map_gates_to_grid": [[413, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[414, "pyart-map-map-to-grid"]], "pyart.retrieve": [[415, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[416, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[417, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[418, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[419, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[420, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_l": [[421, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[422, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_snr": [[423, "pyart-retrieve-compute-snr"]], "pyart.retrieve.conv_strat_raut": [[424, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[425, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.create_cfad": [[426, "pyart-retrieve-create-cfad"]], "pyart.retrieve.dealias_spectra": [[427, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[428, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[429, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[430, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[431, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[432, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[433, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[434, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[435, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[436, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[437, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[438, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[439, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[440, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_maesaka": [[441, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[442, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[443, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[444, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[445, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[446, "pyart-retrieve-spectra-moments"]], "Parameter": [[446, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[447, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[448, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[449, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[450, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[451, "pyart-testing"]], "pyart.testing.Grid": [[452, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[453, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[454, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[455, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[456, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[457, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[458, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[459, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[460, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[461, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[462, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[463, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[464, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[465, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[466, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[467, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[468, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[469, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[470, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[471, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[472, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[473, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[474, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[475, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[476, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[477, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[478, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[479, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[480, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[481, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[482, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[483, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[484, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[485, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[486, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[487, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[488, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[489, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[490, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[491, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[492, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[493, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[494, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[495, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[496, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[497, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[498, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[499, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[500, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[501, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[502, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[503, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[504, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[505, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[506, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[507, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[508, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[509, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[510, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[511, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[512, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[513, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[514, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[515, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[516, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[517, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[518, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[519, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[520, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[521, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[522, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[523, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[524, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[525, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[526, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[527, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[528, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[529, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[530, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[531, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[532, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[533, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[534, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[535, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[536, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[537, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[538, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[539, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[540, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[541, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[542, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[543, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[544, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[545, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[546, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[547, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[548, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[549, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[550, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[551, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[552, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[553, "pyart-util"]], "pyart.util.angular_mean": [[554, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[555, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[556, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[557, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[558, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[559, "pyart-util-column-vertical-profile"]], "pyart.util.cross_section_ppi": [[560, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[561, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[562, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[563, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[564, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[565, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[566, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[567, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[568, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[569, "pyart-util-for-azimuth"]], "Assumptions": [[569, "assumptions"], [581, "assumptions"]], "pyart.util.get_column_rays": [[570, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[571, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[572, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[573, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[574, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[575, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[576, "pyart-util-join-radar"]], "pyart.util.mean_of_two_angles": [[577, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[578, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[579, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[580, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[581, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[582, "pyart-util-subset-radar"]], "pyart.util.texture": [[583, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[584, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[585, "pyart-util-to-vpt"]], "API Reference Manual": [[586, "api-reference-manual"]], "Blog": [[587, "blog"]], "Blending Observations from TRACER using Py-ART": [[588, "blending-observations-from-tracer-using-py-art"]], "Imports": [[588, "imports"], [590, "imports"], [591, "imports"], [592, "imports"], [594, "imports"]], "GOES data access": [[588, "goes-data-access"]], "CSAPR data access": [[588, "csapr-data-access"]], "Load LMA Flash data": [[588, "load-lma-flash-data"]], "June 17th case": [[588, "june-17th-case"]], "June 17 RHI": [[588, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[589, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[589, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[589, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[589, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[589, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[589, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[589, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[589, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[589, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[589, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[589, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[589, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[590, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[590, "motivation"], [594, "motivation"], [595, "motivation"], [596, "motivation"]], "NEXRAD Data Access - fsspec": [[590, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[590, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[590, "read-in-a-file"]], "Visualize the Dataset": [[590, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[590, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[590, "configure-the-search"]], "Search and Download the Data": [[590, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[590, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[590, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[590, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[590, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[590, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[590, "create-an-animation-of-the-images"]], "View the Final Animation": [[590, "view-the-final-animation"]], "Conclusion": [[590, "conclusion"], [592, "conclusion"], [594, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[591, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[591, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[591, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[591, "plot-using-pyart"]], "Load in the data using pyart": [[591, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[591, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[591, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[591, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[591, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[591, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[591, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[591, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[591, "create-our-holoviews-plots"]], "View the Final Visualization": [[591, "view-the-final-visualization"]], "Try Using Rasterize": [[591, "try-using-rasterize"]], "Key Takeaways": [[591, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[592, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[592, "the-data"]], "Data Access": [[592, "data-access"]], "Recreate the Issue Using PyART": [[592, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[592, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[592, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[592, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[592, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[592, "add-in-the-alpha-argument"]], "Dig into the Issue": [[592, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[592, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[592, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[592, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[592, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[592, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[592, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[592, "fixing-the-issue-in-pyart"]], "New Docs": [[593, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[594, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[594, "the-outbreak"]], "Focusing on Southern Wisconsin": [[594, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[594, "reproducing-event-images"]], "Visualizing the Event": [[594, "visualizing-the-event"]], "Access the Data": [[594, "access-the-data"]], "Download the Road Data": [[594, "download-the-road-data"]], "Add the Interstate Date as a feature": [[594, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[594, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[594, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[594, "run-our-plotting-functions"]], "Investigating ARM Scanning Cloud Radar Data from EPCAPE": [[595, "investigating-arm-scanning-cloud-radar-data-from-epcape"]], "The Problem": [[595, "the-problem"], [596, "the-problem"]], "The Solution": [[595, "the-solution"], [596, "the-solution"]], "Searching for data through the DQ Plot Browser": [[595, "searching-for-data-through-the-dq-plot-browser"]], "Use ACT to retrieve data from EPCAPE": [[595, "use-act-to-retrieve-data-from-epcape"]], "Retrieve you API token from ARM Live": [[595, "retrieve-you-api-token-from-arm-live"]], "Pass your Credentials into the Search": [[595, "pass-your-credentials-into-the-search"]], "Read the Data into Py-ART": [[595, "read-the-data-into-py-art"]], "Take a Peak at the Scan Strategy": [[595, "take-a-peak-at-the-scan-strategy"]], "Sort the Scans by Scan Strategy": [[595, "sort-the-scans-by-scan-strategy"]], "Plot all of the PPI Scans": [[595, "plot-all-of-the-ppi-scans"]], "Plot all the RHI Scans": [[595, "plot-all-the-rhi-scans"]], "Apply Corrections to the Velocity Data": [[595, "apply-corrections-to-the-velocity-data"]], "Explore a Threshold for SNR": [[595, "explore-a-threshold-for-snr"]], "Plot our Revised, Cleaned Data": [[595, "plot-our-revised-cleaned-data"]], "Plot where the RHI scan is slicing through using the PPI for a frame of reference": [[595, "plot-where-the-rhi-scan-is-slicing-through-using-the-ppi-for-a-frame-of-reference"]], "Conclusions": [[595, "conclusions"], [596, "conclusions"]], "Blog Post Template": [[596, "blog-post-template"]], "Changelog": [[597, "changelog"]], "Py-ART 1.18.1": [[597, "py-art-1-18-1"]], "Enhancements made": [[597, "enhancements-made"], [597, "id1"], [597, "id5"], [597, "id9"], [597, "id14"], [597, "id29"], [597, "id35"], [597, "id46"], [597, "id49"], [597, "id54"], [597, "id59"], [597, "id62"], [597, "id66"], [597, "id79"], [597, "id89"], [597, "id99"], [597, "id105"], [597, "id111"], [597, "id119"], [597, "id132"], [597, "id136"], [597, "id140"], [597, "id146"], [597, "id152"], [597, "id161"], [597, "id168"], [597, "id175"], [597, "id181"], [597, "id188"], [597, "id194"], [597, "id200"]], "Bugs fixed": [[597, "bugs-fixed"], [597, "id2"], [597, "id6"], [597, "id10"], [597, "id15"], [597, "id22"], [597, "id26"], [597, "id30"], [597, "id36"], [597, "id41"], [597, "id50"], [597, "id55"], [597, "id60"], [597, "id67"], [597, "id72"], [597, "id76"], [597, "id80"], [597, "id85"], [597, "id90"], [597, "id95"], [597, "id100"], [597, "id106"], [597, "id112"], [597, "id116"], [597, "id120"], [597, "id124"], [597, "id129"], [597, "id133"], [597, "id137"], [597, "id141"], [597, "id147"], [597, "id153"], [597, "id157"], [597, "id162"], [597, "id169"], [597, "id176"], [597, "id182"], [597, "id189"], [597, "id195"]], "Other merged PRs": [[597, "other-merged-prs"], [597, "id3"], [597, "id7"], [597, "id12"], [597, "id17"], [597, "id20"], [597, "id24"], [597, "id27"], [597, "id32"], [597, "id37"], [597, "id44"], [597, "id47"], [597, "id52"], [597, "id57"], [597, "id64"], [597, "id70"], [597, "id74"], [597, "id77"], [597, "id83"], [597, "id87"], [597, "id93"], [597, "id97"], [597, "id103"], [597, "id109"], [597, "id114"], [597, "id122"], [597, "id127"], [597, "id134"], [597, "id144"], [597, "id150"], [597, "id155"], [597, "id159"], [597, "id166"], [597, "id173"], [597, "id179"], [597, "id186"], [597, "id192"], [597, "id198"]], "Contributors to this release": [[597, "contributors-to-this-release"], [597, "id4"], [597, "id8"], [597, "id13"], [597, "id18"], [597, "id21"], [597, "id25"], [597, "id28"], [597, "id33"], [597, "id34"], [597, "id38"], [597, "id40"], [597, "id45"], [597, "id48"], [597, "id53"], [597, "id58"], [597, "id61"], [597, "id65"], [597, "id71"], [597, "id75"], [597, "id78"], [597, "id84"], [597, "id88"], [597, "id94"], [597, "id98"], [597, "id104"], [597, "id110"], [597, "id115"], [597, "id118"], [597, "id123"], [597, "id128"], [597, "id131"], [597, "id135"], [597, "id139"], [597, "id145"], [597, "id151"], [597, "id156"], [597, "id160"], [597, "id167"], [597, "id174"], [597, "id180"], [597, "id187"], [597, "id193"], [597, "id199"], [597, "id202"]], "Py-ART 1.18.0": [[597, "py-art-1-18-0"]], "Py-ART 1.17.0": [[597, "py-art-1-17-0"]], "Documentation improvements": [[597, "documentation-improvements"], [597, "id11"], [597, "id16"], [597, "id43"], [597, "id51"], [597, "id56"], [597, "id69"], [597, "id82"], [597, "id92"], [597, "id102"], [597, "id108"], [597, "id126"], [597, "id138"], [597, "id143"], [597, "id149"], [597, "id154"], [597, "id158"], [597, "id164"], [597, "id171"], [597, "id178"], [597, "id184"], [597, "id191"], [597, "id197"]], "Py-ART 1.16.1": [[597, "py-art-1-16-1"]], "Py-ART 1.16.0": [[597, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[597, "maintenance-and-upkeep-improvements"], [597, "id19"], [597, "id23"], [597, "id31"], [597, "id39"], [597, "id42"], [597, "id63"], [597, "id68"], [597, "id73"], [597, "id81"], [597, "id86"], [597, "id91"], [597, "id96"], [597, "id101"], [597, "id107"], [597, "id113"], [597, "id117"], [597, "id121"], [597, "id125"], [597, "id130"], [597, "id142"], [597, "id148"], [597, "id163"], [597, "id170"], [597, "id177"], [597, "id183"], [597, "id190"], [597, "id196"], [597, "id201"]], "Py-ART 1.15.2": [[597, "py-art-1-15-2"]], "Py-ART 1.15.1": [[597, "py-art-1-15-1"]], "Py-ART v1.15.0": [[597, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[597, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[597, "py-art-v1-14-5"]], "Merged PRs": [[597, "merged-prs"]], "Py-ART v1.14.4": [[597, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[597, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[597, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[597, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[597, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[597, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[597, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[597, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[597, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[597, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[597, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[597, "py-art-v1-12-5"]], "PyART v1.12.4": [[597, "pyart-v1-12-4"]], "PyART v1.12.2": [[597, "pyart-v1-12-2"]], "PyART v1.12.0": [[597, "pyart-v1-12-0"]], "PyART v1.11.8": [[597, "pyart-v1-11-8"]], "Deprecated features": [[597, "deprecated-features"], [597, "id165"], [597, "id172"], [597, "id185"]], "PyART v1.11.6": [[597, "pyart-v1-11-6"]], "PyART v1.11.5": [[597, "pyart-v1-11-5"]], "PyART v1.11.3": [[597, "pyart-v1-11-3"]], "PyART v1.11.2": [[597, "pyart-v1-11-2"]], "PyART v1.11.1": [[597, "pyart-v1-11-1"]], "PyART v1.11.0": [[597, "pyart-v1-11-0"]], "PyART v1.10.4": [[597, "pyart-v1-10-4"]], "PyART v1.10.3": [[597, "pyart-v1-10-3"]], "PyART v1.10.2": [[597, "pyart-v1-10-2"]], "PyART v1.10.1": [[597, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[597, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[597, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[597, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[597, "pyart-v1-8-0"]], "PyART v1.7.0": [[597, "pyart-v1-7-0"]], "PyART v1.6.0": [[597, "pyart-v1-6-0"]], "PyART v1.5.0": [[597, "pyart-v1-5-0"]], "PyART v1.4.0": [[597, "pyart-v1-4-0"]], "PyART v1.3.0": [[597, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[598, "contributor-s-guide"], [662, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[598, "the-python-arm-radar-toolkit-py-art"], [662, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[598, "important-links"], [662, "important-links"]], "Citing": [[598, "citing"], [662, "citing"]], "Install": [[598, "install"], [651, "install"], [662, "install"]], "Resources": [[598, "resources"], [662, "resources"]], "Code Style": [[598, "code-style"], [662, "code-style"]], "Python File Setup": [[598, "python-file-setup"], [662, "python-file-setup"]], "Testing": [[598, "testing"], [662, "testing"]], "GitHub": [[598, "github"], [662, "github"]], "Py-ART Continuous Integration Setup": [[599, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[600, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[600, "make-the-tagged-git-release"]], "Prepare the release notes": [[600, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[600, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[600, "documentation"]], "Create conda packages on conda-forge": [[600, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[600, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[601, "developer-s-guide"]], "Versions": [[601, "versions"]], "Moment correction examples": [[602, "moment-correction-examples"], [606, "moment-correction-examples"]], "Correct reflectivity attenuation": [[603, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[604, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[605, "computation-times"], [610, "computation-times"], [616, "computation-times"], [635, "computation-times"], [644, "computation-times"], [645, "computation-times"], [650, "computation-times"], [660, "computation-times"]], "Example Gallery": [[606, "example-gallery"]], "Input/Output Examples": [[606, "input-output-examples"], [607, "input-output-examples"]], "Mapping examples": [[606, "mapping-examples"], [611, "mapping-examples"]], "Plotting examples": [[606, "plotting-examples"], [617, "plotting-examples"]], "Retrieval Examples": [[606, "retrieval-examples"], [636, "retrieval-examples"]], "Xradar Examples": [[606, "xradar-examples"], [646, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[608, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[608, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[608, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[609, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[609, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[612, "compare-two-radars-using-gatemapper"]], "Map a single PPI sweep to a Cartesian grid using 2D weighting": [[613, "map-a-single-ppi-sweep-to-a-cartesian-grid-using-2d-weighting"]], "Map a single radar to a Cartesian grid": [[614, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[615, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[618, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[619, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[620, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[621, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[622, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[623, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[624, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[625, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[626, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[627, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [628, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[629, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [630, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[631, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[632, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[633, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[634, "plot-a-cross-section-from-a-ppi-volume"]], "Creating a CFAD diagram": [[637, "creating-a-cfad-diagram"]], "Velocity example": [[637, "velocity-example"]], "Validation": [[637, "validation"]], "Extract a radar column above a point": [[638, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[639, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[640, "convective-stratiform-classification"]], "How the algorithm works": [[640, "how-the-algorithm-works"], [641, "how-the-algorithm-works"]], "Examples": [[640, "examples"]], "Summary of recommendations and best practices": [[640, "summary-of-recommendations-and-best-practices"], [641, "summary-of-recommendations-and-best-practices"]], "References": [[640, "references"], [641, "references"]], "Feature Detection classification": [[641, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[641, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[641, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[642, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[643, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[647, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[648, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[649, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[651, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[651, "what-is-py-art"]], "Citing Py-ART": [[651, "citing-py-art"]], "What can Py-ART do?": [[651, "what-can-py-art-do"]], "Short Courses": [[651, "short-courses"]], "Dependencies": [[651, "dependencies"]], "Optional Dependences": [[651, "optional-dependences"]], "Getting help": [[651, "getting-help"]], "Contributing": [[651, "contributing"]], "Notebook Gallery": [[652, "notebook-gallery"]], "Notebooks": [[652, null]], "Creating a basic ingest of a NetCDF file": [[653, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[654, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[655, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[657, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[658, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[659, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[661, "building-and-installing-py-art"]], "Required Dependencies": [[661, "required-dependencies"]], "Optional Dependencies": [[661, "optional-dependencies"]], "Obtaining the latest source": [[661, "obtaining-the-latest-source"]], "Installing from Source": [[661, "installing-from-source"]], "Frequently asked questions": [[661, "frequently-asked-questions"]], "User Guide": [[663, "user-guide"]], "Setting up an Environment": [[664, "setting-up-an-environment"]], "Anaconda": [[664, "anaconda"]], "Setting a Channel": [[664, "setting-a-channel"]], "Creating an Environment": [[664, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[664, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[664, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [126, "module-pyart.correct"], [168, "module-pyart.exceptions"], [169, "module-pyart.filters"], [202, "module-pyart.graph"], [359, "module-pyart.io"], [380, "module-pyart.lazydict"], [404, "module-pyart.map"], [415, "module-pyart.retrieve"], [451, "module-pyart.testing"], [553, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[126, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[127, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[128, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[141, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[142, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[144, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[145, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[155, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[156, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[157, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[158, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[159, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[160, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[161, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[162, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[163, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[164, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[165, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[166, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[167, "pyart.correct.phase_proc_lp_gf"]], "pyart.exceptions": [[168, "module-pyart.exceptions"]], "pyart.filters": [[169, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[170, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[184, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[185, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[201, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[202, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[203, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[204, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[205, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[210, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[211, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[221, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[231, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[232, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[233, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[234, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[235, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[249, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[250, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[251, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[252, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[253, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[254, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[255, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[256, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[257, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[258, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[263, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[264, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[265, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[266, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[267, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[268, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[270, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[271, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[280, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[285, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[290, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[291, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[292, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[293, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[294, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[295, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[296, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[297, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[299, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[300, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[301, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[309, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[310, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[323, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[324, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[325, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[326, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[327, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[328, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[329, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[330, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[332, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[333, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[334, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[342, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[356, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[357, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[358, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[359, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[360, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[361, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[362, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[363, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[364, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[365, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[366, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[367, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[368, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[369, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[370, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[371, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[372, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[373, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[374, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[375, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[376, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[377, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[378, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[379, "pyart.io.write_uf"]], "pyart.lazydict": [[380, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[381, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[382, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[383, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[384, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[385, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[386, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[394, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[395, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[396, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[397, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[398, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[399, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[400, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[401, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[402, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[403, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[404, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[405, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[406, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[407, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[408, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[409, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[410, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[411, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[412, "pyart.map.grid_from_radars"]], "map_gates_to_grid() (in module pyart.map)": [[413, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[414, "pyart.map.map_to_grid"]], "pyart.retrieve": [[415, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[416, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[417, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[418, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[419, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[420, "pyart.retrieve.compute_cdr"]], "compute_l() (in module pyart.retrieve)": [[421, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[422, "pyart.retrieve.compute_noisedBZ"]], "compute_snr() (in module pyart.retrieve)": [[423, "pyart.retrieve.compute_snr"]], "conv_strat_raut() (in module pyart.retrieve)": [[424, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[425, "pyart.retrieve.conv_strat_yuter"]], "create_cfad() (in module pyart.retrieve)": [[426, "pyart.retrieve.create_cfad"]], "dealias_spectra() (in module pyart.retrieve)": [[427, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[428, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[429, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[430, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[431, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[432, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[433, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[434, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[435, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[436, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[437, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[438, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[439, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[440, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[441, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[442, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[443, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[444, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[445, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[446, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[447, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[448, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[449, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[450, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[451, "module-pyart.testing"]], "grid (class in pyart.testing)": [[452, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[453, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[454, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[455, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[456, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[457, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[458, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[459, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[460, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[461, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[462, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[463, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[464, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[465, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[466, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[467, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[468, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[469, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[470, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[471, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[472, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[473, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[474, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[475, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[476, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[477, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[478, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[479, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[480, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[481, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[482, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[483, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[484, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[491, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[492, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[493, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[494, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[495, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[496, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[497, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[498, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[499, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[500, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[501, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[502, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[503, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[504, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[505, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[506, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[507, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[508, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[509, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[510, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[511, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[512, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[513, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[514, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[515, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[516, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[517, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[518, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[519, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[520, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[521, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[522, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[523, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[524, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[525, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[526, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[527, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[528, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[529, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[530, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[531, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[532, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[533, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[534, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[535, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[536, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[537, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[538, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[539, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[540, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[541, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[542, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[543, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[544, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[545, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[546, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[547, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[548, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[549, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[550, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[551, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[552, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[553, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[554, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[555, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[556, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[557, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[558, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[559, "pyart.util.column_vertical_profile"]], "cross_section_ppi() (in module pyart.util)": [[560, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[561, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[562, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[563, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[564, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[565, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[566, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[567, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[568, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[569, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[570, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[571, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[572, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[573, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[574, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[575, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[576, "pyart.util.join_radar"]], "mean_of_two_angles() (in module pyart.util)": [[577, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[578, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[579, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[580, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[581, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[582, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[583, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[584, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[585, "pyart.util.to_vpt"]]}})