Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_above_toa", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_last_gates", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calc_cloud_mask", "API/generated/pyart.correct.calc_noise_floor", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.cloud_threshold", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.range_correction", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_above_toa", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_last_gates", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.create_cfad", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_rhi_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/2024/animated-gifs-with-pyart", "blog_posts/2024/epcape-blog-post", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_grid_single_sweep_ppi", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_cfad", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_hydrometeor_class_x_band", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_above_toa.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_last_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calc_cloud_mask.rst", "API/generated/pyart.correct.calc_noise_floor.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.cloud_threshold.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.range_correction.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_above_toa.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_last_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.create_cfad.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_rhi_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/2024/animated-gifs-with-pyart.ipynb", "blog_posts/2024/epcape-blog-post.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_grid_single_sweep_ppi.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_cfad.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_hydrometeor_class_x_band.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_above_toa", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_last_gates", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calc_cloud_mask", "pyart.correct.calc_noise_floor", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.cloud_threshold", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.range_correction", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_above_toa", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_last_gates", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vp", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.create_cfad", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_rhi_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.compute_directional_stats", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART", "Investigating ARM Scanning Cloud Radar Data from EPCAPE", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single PPI sweep to a Cartesian grid using 2D weighting", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Creating a CFAD diagram", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Hydrometeor Classification with Custom Frequency Settings", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"stream": [0, 62, 373, 498], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 207, 208, 209, 210, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 393, 401, 404, 405, 411, 414, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 469, 479, 481, 484, 492, 493, 510, 579, 580, 591, 600, 602, 610, 612, 614, 615, 616, 618, 619, 641, 650, 661, 662, 681, 684], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 221, 223, 224, 225, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 322, 323, 324, 326, 327, 334, 355, 356, 357, 359, 360, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 394, 399, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 610, 611, 612, 614, 618, 619, 621, 624, 625, 627, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673, 675, 676, 677, 679, 680, 681, 684, 686], "print": [0, 62, 160, 172, 173, 242, 258, 382, 458, 498, 608, 610, 611, 615, 616, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 661, 662, 664, 676, 680, 681], "out": [0, 62, 169, 173, 207, 210, 384, 385, 386, 387, 388, 430, 453, 498, 610, 611, 612, 614, 615, 616, 618, 619, 635, 636, 640, 651, 660, 663, 673, 679, 683, 684, 685], "version": [0, 12, 31, 211, 416, 457, 469, 571, 608, 609, 617, 618, 619, 621, 673, 681, 683, 684, 686], "statu": [0, 609, 619, 684], "inform": [0, 24, 31, 45, 62, 74, 143, 155, 160, 166, 172, 173, 192, 204, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 373, 374, 382, 385, 457, 458, 464, 469, 481, 498, 510, 608, 612, 616, 617, 618, 619, 622, 630, 651, 664, 673, 684], "debug": [0, 160, 166, 172, 173, 242, 258, 382, 458, 618], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 122, 124, 125, 133, 138, 143, 144, 145, 158, 160, 161, 162, 165, 166, 167, 168, 170, 171, 172, 173, 182, 187, 192, 193, 194, 207, 208, 209, 210, 225, 251, 285, 301, 314, 326, 334, 347, 359, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 401, 403, 411, 414, 416, 422, 423, 424, 425, 429, 430, 432, 435, 436, 438, 439, 440, 441, 442, 443, 452, 453, 457, 458, 459, 460, 464, 466, 469, 471, 481, 483, 484, 487, 488, 490, 492, 493, 494, 510, 563, 576, 577, 586, 587, 591, 594, 605, 606, 607, 608, 610, 611, 612, 613, 614, 616, 617, 619, 620, 621, 622, 624, 625, 629, 630, 633, 634, 635, 639, 640, 641, 642, 645, 651, 658, 659, 661, 662, 664, 669, 673, 675, 676, 677, 679, 680, 681, 683, 684, 686], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 160, 161, 162, 166, 167, 168, 171, 172, 173, 207, 208, 209, 210, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 428, 442, 452, 457, 458, 459, 460, 461, 464, 465, 468, 478, 481, 498, 510, 556, 600, 608, 609, 611, 612, 614, 616, 618, 621, 624, 626, 627, 629, 630, 631, 634, 635, 637, 638, 639, 642, 644, 647, 653, 654, 655, 656, 660, 661, 662, 663, 665, 666, 667, 670, 671, 672, 673, 674, 680, 681, 682, 683, 686], "can": [0, 12, 16, 29, 45, 54, 57, 74, 122, 124, 125, 128, 143, 155, 161, 162, 166, 169, 171, 177, 192, 204, 207, 208, 209, 210, 225, 285, 314, 347, 369, 376, 377, 379, 382, 386, 387, 388, 424, 425, 432, 435, 436, 438, 439, 440, 443, 452, 457, 458, 459, 460, 462, 467, 481, 490, 493, 510, 596, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 621, 629, 630, 633, 639, 658, 659, 661, 662, 664, 669, 675, 676, 677, 679, 680, 681, 683, 684, 686], "run": [0, 238, 442, 452, 468, 586, 609, 611, 615, 618, 619, 620, 621, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673, 683, 684, 686], "script": [0, 29, 616, 618, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 121, 123, 126, 128, 133, 135, 143, 144, 150, 155, 160, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 176, 177, 182, 184, 192, 193, 199, 204, 207, 208, 209, 210, 212, 226, 227, 228, 233, 236, 237, 238, 239, 242, 250, 251, 253, 255, 257, 258, 264, 265, 267, 269, 271, 272, 286, 287, 288, 293, 296, 297, 298, 301, 315, 316, 317, 323, 325, 326, 329, 330, 331, 334, 348, 349, 350, 356, 358, 359, 362, 363, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 399, 401, 404, 411, 413, 416, 418, 419, 420, 424, 425, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 469, 472, 477, 481, 483, 486, 490, 491, 492, 493, 510, 563, 576, 577, 579, 580, 586, 587, 588, 589, 590, 591, 592, 593, 594, 600, 609, 611, 612, 614, 618, 619, 621, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 647, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 679, 680, 681, 682, 684, 686], "directori": [0, 29, 479, 606, 608, 609, 615, 616, 617, 618, 619, 629, 683, 684], "report": [0, 1, 301, 334, 381, 467, 614, 618, 673], "dependeci": 0, "befor": [0, 31, 56, 166, 170, 173, 414, 432, 435, 436, 438, 440, 442, 452, 466, 469, 492, 610, 611, 612, 619, 633, 661, 673, 677, 681, 684], "build": [0, 122, 124, 125, 128, 133, 135, 143, 150, 155, 177, 182, 184, 192, 199, 204, 388, 610, 614, 618, 619, 621, 673, 684, 685], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 122, 123, 124, 125, 126, 128, 138, 143, 155, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 187, 192, 204, 207, 208, 209, 210, 212, 214, 216, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 305, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 336, 338, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 361, 362, 363, 364, 366, 367, 368, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 414, 421, 422, 423, 424, 425, 427, 428, 430, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 481, 483, 490, 492, 493, 510, 563, 571, 576, 577, 578, 579, 580, 586, 587, 594, 596, 600, 602, 603, 604, 605, 609, 613, 614, 617, 618, 619, 620, 621, 623, 624, 626, 627, 628, 629, 630, 632, 637, 638, 639, 640, 642, 645, 646, 648, 649, 650, 651, 652, 656, 658, 659, 661, 662, 664, 668, 672, 673, 675, 676, 677, 679, 680, 681, 682, 683, 684, 686], "python": [0, 29, 386, 608, 610, 611, 612, 614, 615, 616, 617, 618, 621, 624, 625, 627, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 675, 676, 677, 679, 680, 681, 683, 686], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 122, 124, 125, 128, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 207, 208, 209, 210, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 301, 315, 317, 325, 326, 330, 331, 334, 348, 350, 358, 359, 363, 364, 374, 375, 376, 377, 381, 383, 386, 413, 428, 429, 441, 442, 452, 455, 456, 457, 458, 459, 460, 461, 464, 465, 469, 481, 510, 561, 571, 577, 589, 590, 600, 606, 611, 612, 614, 617, 622, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 672, 674, 675, 676, 677, 679, 682, 685, 686], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 182, 184, 192, 199, 204, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 478, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 498, 510, 513, 555, 556, 557, 558, 559, 560, 561, 572, 573, 574, 575, 576, 577, 578, 579, 580, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 608, 610, 611, 616, 618, 619, 654, 661, 662, 664, 676, 677, 679, 681, 683, 684], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 122, 123, 125, 126, 167, 168, 369, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 395, 396, 406, 407, 430, 498, 566, 567, 568, 569, 570, 572, 573, 574, 575, 587, 592, 610, 611, 612, 615, 616, 617, 618, 619, 629, 630, 633, 658, 673, 675, 677, 679, 684], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 128, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 207, 208, 209, 210, 212, 227, 242, 250, 253, 258, 265, 272, 287, 301, 316, 326, 334, 349, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 395, 396, 399, 402, 406, 407, 412, 414, 421, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 462, 463, 465, 466, 467, 468, 469, 470, 477, 478, 482, 483, 484, 486, 487, 488, 490, 498, 507, 535, 553, 557, 558, 559, 560, 563, 577, 586, 587, 589, 590, 591, 594, 595, 599, 602, 604, 605, 608, 609, 611, 612, 614, 615, 618, 619, 629, 633, 641, 642, 646, 647, 648, 649, 650, 651, 652, 653, 654, 659, 661, 662, 663, 664, 673, 674, 675, 679, 680, 684], "sy": 0, "stdout": [0, 62, 498], "descript": [1, 16, 18, 30, 127, 175, 176, 211, 368, 389, 413, 426, 468, 571, 600, 612, 619, 621, 658, 673, 684], "addit": [1, 2, 7, 8, 12, 14, 19, 166, 167, 168, 170, 225, 226, 233, 237, 238, 239, 251, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 285, 286, 293, 297, 298, 314, 315, 322, 323, 324, 325, 326, 327, 330, 331, 347, 348, 355, 356, 357, 358, 359, 360, 363, 364, 367, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 414, 421, 422, 423, 425, 442, 452, 591, 608, 610, 611, 615, 618, 621, 627, 629, 657, 661, 662, 673], "class": [1, 18, 19, 30, 31, 41, 45, 74, 127, 128, 176, 177, 211, 212, 242, 253, 258, 272, 301, 326, 334, 389, 390, 403, 413, 414, 415, 417, 424, 457, 468, 469, 479, 481, 510, 606, 610, 611, 612, 618, 619, 673, 679, 680, 684], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 127, 158, 162, 170, 171, 176, 207, 208, 209, 210, 211, 225, 226, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 285, 286, 293, 297, 298, 301, 314, 315, 325, 330, 331, 334, 347, 348, 358, 363, 364, 367, 368, 370, 373, 376, 377, 383, 386, 413, 414, 418, 419, 420, 422, 423, 424, 425, 426, 430, 436, 441, 442, 443, 452, 457, 458, 460, 466, 468, 492, 571, 577, 590, 591, 594, 599, 600, 605, 606, 611, 612, 615, 616, 618, 619, 639, 658, 659, 661, 662, 664, 669, 673, 677, 679, 681, 683, 684], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 128, 144, 145, 177, 193, 194, 226, 237, 286, 297, 315, 330, 348, 363, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 388, 608, 614, 618, 624, 625, 627, 628, 631, 633, 634, 635, 636, 639, 640, 641, 642, 645, 647, 650, 651, 653, 654, 655, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673, 675, 676, 677, 679, 680, 681, 682], "write": [1, 15, 368, 384, 385, 386, 387, 388, 468, 479, 617, 618, 627, 628, 676], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 133, 143, 155, 158, 159, 163, 164, 165, 166, 167, 168, 174, 182, 192, 204, 212, 226, 228, 233, 236, 237, 238, 239, 242, 251, 253, 255, 257, 258, 267, 269, 271, 272, 286, 288, 293, 296, 297, 298, 301, 315, 317, 325, 326, 329, 330, 331, 334, 348, 350, 358, 359, 362, 363, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 413, 414, 421, 422, 423, 425, 427, 430, 432, 435, 436, 438, 439, 440, 441, 443, 444, 447, 452, 453, 457, 458, 459, 460, 462, 463, 464, 467, 469, 470, 481, 482, 483, 486, 487, 488, 490, 491, 492, 493, 494, 503, 504, 506, 510, 531, 532, 534, 556, 561, 563, 578, 586, 591, 602, 605, 618, 619, 624, 625, 627, 628, 631, 633, 634, 635, 636, 638, 639, 640, 641, 642, 644, 645, 647, 648, 649, 650, 651, 653, 655, 657, 658, 659, 661, 662, 664, 665, 668, 669, 671, 672, 673, 674, 675, 676, 677, 681, 682, 684], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 138, 160, 161, 162, 163, 166, 167, 169, 170, 172, 173, 187, 225, 229, 233, 234, 236, 237, 238, 239, 251, 285, 289, 293, 294, 296, 297, 298, 314, 318, 325, 326, 327, 329, 330, 331, 347, 351, 358, 359, 360, 362, 363, 364, 368, 373, 380, 386, 387, 421, 424, 425, 432, 434, 435, 436, 438, 443, 456, 458, 460, 469, 481, 487, 488, 490, 491, 492, 493, 494, 510, 557, 558, 559, 560, 561, 577, 578, 586, 587, 605, 608, 611, 612, 614, 619, 621, 622, 639, 641, 658, 673, 681, 684], "format": [1, 12, 13, 39, 40, 45, 74, 214, 216, 226, 228, 233, 236, 237, 238, 239, 274, 276, 286, 288, 293, 296, 297, 298, 303, 305, 315, 317, 325, 326, 329, 330, 331, 336, 338, 348, 350, 358, 359, 362, 363, 364, 368, 370, 379, 381, 383, 384, 385, 387, 477, 478, 481, 510, 608, 610, 611, 612, 615, 616, 618, 619, 621, 651, 673, 675, 684], "These": [1, 29, 128, 166, 177, 264, 386, 425, 610, 616, 619, 629, 639, 661, 673, 680, 683, 684], "auxiliari": 1, "input": [1, 172, 173, 386, 422, 423, 452, 456, 457, 460, 586, 591, 608, 610, 618, 661, 662, 680], "output": [1, 13, 62, 165, 386, 422, 430, 441, 457, 498, 588, 609, 611, 614, 616, 618, 673], "routin": [1, 12, 176, 384, 424, 618, 673], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 123, 126, 143, 155, 160, 161, 162, 166, 167, 168, 170, 171, 173, 176, 192, 204, 207, 208, 209, 210, 211, 226, 232, 233, 237, 238, 239, 251, 253, 255, 257, 264, 267, 269, 271, 286, 292, 293, 297, 298, 315, 321, 322, 323, 324, 325, 326, 327, 330, 331, 348, 354, 355, 356, 357, 358, 359, 360, 363, 364, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 392, 420, 421, 424, 425, 427, 429, 430, 439, 441, 442, 443, 445, 446, 447, 449, 450, 452, 457, 458, 460, 464, 469, 481, 492, 494, 510, 558, 559, 560, 579, 580, 587, 588, 592, 593, 601, 605, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 621, 625, 627, 629, 630, 633, 634, 639, 641, 642, 650, 653, 658, 659, 661, 662, 664, 673, 675, 676, 677, 679, 680, 681, 683, 684, 686], "well": [1, 169, 171, 207, 208, 209, 210, 359, 378, 380, 425, 608, 610, 615, 616, 618, 619, 630, 640, 662, 673, 679, 680, 684], "polish": 1, "those": [1, 48, 55, 144, 145, 167, 168, 193, 194, 382, 424, 425, 484, 491, 606, 612, 614, 658, 686], "io": [1, 128, 177, 421, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 624, 625, 629, 630, 631, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673, 676, 677, 679, 680, 681, 682, 683, 684, 686], "thei": [1, 4, 58, 133, 135, 143, 166, 167, 168, 170, 182, 184, 192, 359, 374, 382, 388, 439, 441, 458, 494, 612, 614, 615, 619, 661, 684], "mai": [1, 29, 133, 135, 143, 150, 155, 166, 167, 182, 184, 192, 199, 204, 301, 334, 378, 380, 386, 390, 425, 441, 460, 571, 612, 614, 615, 621, 661, 673], "requir": [1, 31, 45, 74, 122, 124, 125, 166, 169, 170, 382, 386, 422, 423, 425, 466, 469, 481, 510, 587, 608, 609, 615, 618, 619, 630, 673, 684, 686], "depend": [1, 161, 162, 422, 425, 446, 608, 612, 618, 619, 621, 684], "beyond": [1, 683], "standard": [1, 40, 45, 62, 74, 119, 120, 166, 373, 384, 385, 386, 430, 459, 478, 481, 498, 510, 561, 574, 575, 593, 608, 612, 618, 619, 675, 676, 677, 684], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 122, 124, 125, 128, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 207, 208, 209, 210, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 301, 315, 317, 325, 326, 330, 331, 334, 348, 350, 358, 359, 363, 364, 374, 375, 376, 377, 381, 383, 386, 413, 428, 429, 441, 442, 452, 455, 456, 457, 458, 459, 460, 461, 464, 465, 469, 481, 510, 561, 571, 577, 589, 590, 600, 606, 612, 614, 622, 624, 625, 627, 628, 629, 630, 638, 639, 641, 659, 662, 668, 672, 674, 675, 676, 677, 679, 682, 685, 686], "instal": [1, 10, 122, 124, 125, 169, 170, 386, 611, 614, 618, 621, 685, 686], "non": [1, 122, 124, 125, 168, 382, 384, 441, 442, 452, 458, 460, 612, 618, 661], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 133, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 182, 207, 208, 209, 210, 211, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 296, 297, 298, 315, 317, 325, 326, 329, 330, 331, 348, 350, 358, 359, 362, 363, 364, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 464, 465, 469, 470, 481, 482, 483, 485, 490, 498, 510, 513, 556, 571, 591, 600, 604, 608, 611, 612, 614, 616, 617, 618, 629, 662, 676, 681], "support": [1, 253, 326, 359, 370, 377, 378, 379, 380, 381, 389, 390, 414, 458, 610, 612, 614, 618, 619, 650, 673, 675, 676, 677, 679, 680, 681, 683, 684], "fulli": [1, 376, 614, 683], "test": [1, 12, 166, 373, 378, 380, 390, 609, 612, 618, 620, 621, 624, 625, 633, 635, 636, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 669, 670, 671, 673, 675], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 128, 132, 140, 143, 147, 152, 155, 166, 167, 168, 170, 171, 172, 173, 177, 181, 189, 192, 196, 201, 204, 209, 226, 232, 233, 236, 237, 238, 239, 253, 286, 292, 293, 296, 297, 298, 315, 321, 325, 326, 329, 330, 331, 348, 354, 358, 359, 362, 363, 364, 367, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 391, 403, 404, 421, 422, 423, 424, 425, 429, 432, 435, 436, 438, 440, 441, 442, 452, 453, 456, 458, 460, 469, 471, 481, 484, 492, 493, 510, 587, 606, 608, 609, 610, 611, 612, 613, 615, 618, 619, 621, 627, 639, 658, 659, 660, 661, 665, 673, 681, 682, 684, 686], "pleas": [1, 56, 301, 334, 492, 608, 609, 612, 614, 616, 619, 673, 675, 676, 677, 679, 680, 681, 684], "your": [1, 226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 610, 611, 612, 617, 619, 621, 627, 638, 640, 656, 661, 662, 673, 682, 683, 684, 686], "own": [1, 12, 611, 615, 616, 621, 639, 673, 683], "risk": [1, 610], "bug": [1, 611, 619, 622, 673, 683, 684], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 128, 133, 144, 145, 165, 166, 167, 168, 173, 177, 182, 193, 194, 212, 252, 266, 326, 359, 367, 368, 369, 382, 385, 387, 388, 422, 423, 424, 425, 442, 452, 458, 459, 460, 462, 464, 466, 467, 469, 481, 483, 490, 510, 586, 587, 612, 615, 617, 618, 619, 621, 639, 661, 664, 673, 683, 684, 686], "fix": [1, 439, 608, 611, 619, 620, 622, 627, 628, 631, 653, 675, 682, 683, 684, 686], "them": [1, 4, 5, 6, 56, 166, 167, 168, 169, 242, 258, 326, 359, 373, 382, 425, 492, 611, 616, 619, 621, 639, 673, 684, 686], "prioriti": [1, 686], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 214, 246, 259, 274, 303, 326, 336, 359, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 478, 608, 609, 610, 612, 615, 618, 619, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 684], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 164, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 432, 435, 436, 438, 439, 440, 470, 482, 483, 485, 490, 506, 513, 534, 602, 633, 679], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 388], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 124, 128, 130, 131, 133, 135, 142, 143, 144, 145, 146, 148, 150, 155, 156, 160, 166, 167, 168, 172, 173, 177, 179, 180, 182, 184, 191, 192, 193, 194, 195, 197, 199, 204, 205, 214, 226, 228, 233, 236, 237, 238, 239, 242, 251, 253, 255, 257, 258, 264, 267, 269, 271, 274, 286, 288, 293, 296, 297, 298, 303, 315, 317, 325, 326, 329, 330, 331, 336, 348, 350, 358, 359, 362, 363, 364, 367, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 394, 424, 425, 429, 441, 442, 446, 449, 452, 457, 458, 459, 460, 470, 471, 478, 479, 482, 483, 484, 487, 488, 490, 492, 493, 494, 569, 570, 581, 582, 583, 584, 585, 586, 594, 605, 608, 610, 611, 612, 614, 615, 618, 619, 641, 648, 650, 651, 653, 661, 662, 664, 675, 676, 680, 681, 684], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 388], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 484, 618], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 166, 167, 168, 225, 226, 227, 233, 237, 238, 239, 251, 253, 254, 255, 256, 257, 264, 267, 268, 269, 270, 271, 285, 286, 287, 293, 297, 298, 314, 315, 316, 322, 323, 324, 325, 326, 327, 330, 331, 347, 348, 349, 355, 356, 357, 358, 359, 360, 363, 364, 370, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 421, 422, 423, 424, 425, 458, 581, 582, 583, 584, 585, 611, 612, 616, 618], "d3r": [2, 618], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 371, 372, 373, 375, 379, 384, 385, 453, 478, 581, 584, 608, 616, 618, 673, 674], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 34, 40, 45, 46, 47, 49, 54, 74, 77, 122, 124, 125, 133, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 182, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 416, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 457, 458, 459, 460, 461, 464, 465, 469, 470, 472, 478, 481, 482, 483, 485, 490, 510, 513, 556, 578, 591, 600, 602, 604, 610, 612, 614, 616, 618], "odim_h5": [2, 8, 618], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 122, 124, 125, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 212, 272, 301, 326, 334, 369, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 388, 390, 424, 425, 429, 431, 433, 434, 437, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 461, 463, 464, 465, 469, 470, 472, 477, 481, 482, 510, 600, 608, 612, 675], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 123, 124, 126, 128, 133, 135, 143, 150, 155, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 177, 182, 184, 192, 199, 204, 226, 233, 237, 238, 239, 241, 251, 253, 255, 257, 264, 267, 269, 271, 286, 293, 297, 298, 300, 315, 323, 324, 325, 326, 327, 330, 331, 333, 348, 356, 357, 358, 359, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 425, 428, 429, 431, 433, 434, 437, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 464, 465, 467, 469, 470, 471, 478, 481, 482, 483, 484, 487, 488, 490, 492, 493, 498, 510, 579, 580, 587, 594, 600, 604, 605, 611, 612, 618, 661, 681], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 122, 124, 125, 160, 161, 162, 166, 167, 168, 169, 170, 172, 173, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 392, 394, 421, 424, 425, 428, 429, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 457, 461, 463, 464, 465, 469, 470, 481, 482, 483, 485, 510, 513, 555, 600, 630, 662, 676, 681], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 123, 126, 231, 253, 264, 291, 301, 320, 322, 323, 324, 326, 327, 334, 353, 355, 356, 357, 359, 360, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 401, 411, 430, 461, 469, 481, 510, 608, 610, 611, 612, 614, 618, 619, 633, 637, 638, 640, 641, 656, 659, 661, 662, 670, 673, 674, 682, 684], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 182, 183, 184, 185, 186, 187, 188, 190, 191, 195, 197, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 225, 226, 227, 228, 233, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 285, 286, 287, 288, 293, 296, 297, 298, 301, 302, 303, 304, 305, 306, 311, 314, 315, 316, 317, 325, 326, 329, 330, 331, 334, 335, 336, 337, 338, 339, 344, 347, 348, 349, 350, 358, 359, 362, 363, 364, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 416, 421, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 477, 481, 482, 483, 484, 485, 490, 493, 506, 510, 513, 534, 557, 558, 559, 560, 561, 563, 566, 567, 568, 569, 570, 576, 577, 578, 590, 591, 600, 602, 603, 604, 608, 610, 611, 612, 614, 615, 616, 618, 619, 624, 627, 629, 633, 634, 635, 636, 639, 640, 642, 653, 657, 658, 659, 660, 661, 662, 663, 669, 671, 673, 674, 675, 677, 679, 680, 681, 684], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 121, 127, 128, 143, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 192, 204, 207, 208, 209, 210, 211, 212, 225, 226, 231, 233, 237, 238, 239, 255, 257, 267, 269, 271, 272, 285, 286, 291, 293, 297, 298, 301, 314, 315, 320, 323, 325, 326, 330, 331, 334, 347, 348, 353, 356, 358, 359, 363, 364, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 413, 414, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 477, 510, 553, 558, 559, 560, 563, 566, 567, 568, 569, 570, 577, 578, 579, 580, 583, 585, 586, 588, 589, 590, 591, 594, 595, 600, 601, 602, 603, 604, 605, 608, 609, 612, 614, 618, 623, 624, 625, 627, 628, 629, 630, 632, 634, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 660, 661, 662, 663, 664, 665, 666, 669, 670, 671, 674, 675, 677, 679, 680, 682, 685], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 122, 124, 125, 143, 155, 163, 164, 166, 169, 170, 171, 192, 204, 208, 209, 214, 216, 226, 227, 232, 233, 237, 238, 239, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 286, 287, 292, 293, 297, 298, 303, 305, 315, 316, 321, 324, 325, 326, 330, 331, 336, 338, 348, 349, 354, 357, 358, 359, 363, 364, 367, 370, 372, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 397, 401, 408, 411, 425, 429, 432, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 457, 458, 459, 460, 461, 464, 469, 470, 481, 483, 484, 485, 492, 510, 513, 576, 579, 580, 587, 602, 609, 611, 612, 613, 614, 616, 619, 621, 661, 673, 675, 676, 677, 679, 680, 681, 683, 684, 686], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 167, 168, 212, 272, 301, 334, 370, 374, 376, 377, 378, 379, 381, 382, 383, 387, 388, 432, 435, 436, 438, 440, 441, 446, 457, 458, 481, 510, 553, 578, 586, 609, 612, 616, 618, 619, 662, 664, 673, 681, 684], "found": [2, 7, 8, 12, 14, 29, 162, 169, 370, 374, 376, 377, 378, 379, 381, 382, 383, 397, 408, 421, 424, 425, 430, 453, 608, 610, 612, 614, 616, 618, 619, 621, 630, 673, 683, 684, 686], "doe": [2, 7, 8, 12, 14, 49, 77, 122, 124, 125, 166, 167, 168, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 296, 297, 298, 315, 317, 325, 326, 329, 330, 331, 348, 350, 358, 359, 362, 363, 364, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 401, 411, 485, 513, 605, 610, 612, 618, 619, 621, 651, 664, 675, 683, 684, 686], "appear": [2, 7, 8, 12, 14, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 594, 612, 615, 616], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 165, 166, 214, 246, 258, 259, 274, 303, 334, 336, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 387, 394, 401, 411, 413, 443, 446, 449, 450, 457, 481, 510, 563, 587, 604, 609, 611, 612, 614, 615, 616, 619, 621, 629, 639, 661, 673, 679, 681, 683, 684, 686], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 122, 123, 124, 125, 126, 128, 130, 131, 133, 134, 135, 137, 141, 143, 146, 148, 149, 150, 153, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 180, 182, 183, 184, 186, 190, 192, 195, 197, 198, 199, 202, 204, 206, 207, 208, 209, 210, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 250, 251, 253, 255, 257, 264, 265, 267, 269, 271, 286, 287, 288, 290, 293, 294, 295, 296, 297, 298, 315, 316, 317, 319, 322, 323, 324, 325, 326, 328, 329, 330, 331, 348, 349, 350, 352, 355, 356, 357, 358, 359, 361, 362, 363, 364, 367, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 397, 398, 403, 408, 409, 424, 425, 427, 429, 430, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 446, 449, 450, 452, 455, 457, 458, 459, 460, 464, 466, 469, 481, 484, 510, 558, 559, 560, 561, 576, 578, 586, 587, 591, 592, 593, 608, 610, 611, 612, 615, 616, 618, 619, 630, 633, 639, 642, 658, 659, 660, 661, 662, 669, 676, 677, 680, 684], "place": [2, 7, 8, 12, 14, 227, 231, 232, 250, 252, 265, 266, 287, 291, 292, 316, 320, 321, 349, 353, 354, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 387, 388, 605, 615, 616, 618, 679, 683], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 123, 126, 128, 158, 159, 160, 161, 162, 163, 166, 167, 168, 171, 172, 173, 177, 207, 208, 209, 210, 212, 242, 251, 258, 272, 301, 324, 334, 357, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 389, 390, 403, 421, 422, 423, 424, 425, 429, 430, 432, 433, 435, 441, 442, 443, 445, 446, 452, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 481, 483, 510, 561, 577, 591, 608, 612, 615, 616, 618, 619, 642, 658, 661, 662, 667, 673, 684], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 160, 161, 162, 164, 166, 167, 168, 169, 171, 172, 173, 177, 182, 184, 192, 199, 204, 207, 208, 209, 210, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 233, 236, 237, 238, 239, 241, 250, 251, 253, 255, 257, 264, 265, 267, 269, 271, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 293, 296, 297, 298, 300, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 325, 326, 329, 330, 331, 333, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 358, 359, 362, 363, 364, 366, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 393, 405, 425, 427, 428, 430, 439, 441, 442, 443, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 469, 481, 487, 488, 490, 492, 493, 498, 510, 558, 559, 560, 578, 586, 587, 600, 609, 610, 618, 619, 650, 651, 658, 661, 662, 664, 673, 683, 684, 686], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 122, 124, 125, 160, 161, 162, 166, 169, 171, 172, 173, 207, 208, 209, 210, 231, 232, 236, 291, 292, 296, 320, 321, 329, 353, 354, 362, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 388, 424, 425, 429, 436, 439, 457, 458, 464, 469, 481, 510, 576, 577, 608, 611, 612, 615, 616, 617, 618, 640, 641, 658, 659, 661], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 160, 161, 162, 166, 167, 168, 171, 172, 173, 207, 208, 209, 210, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 428, 442, 452, 457, 458, 459, 460, 461, 464, 465, 600, 608, 609, 612, 614, 618, 629, 633, 660, 669], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 469, 487, 488, 490, 491, 492, 493, 494, 577, 615, 618, 619, 658, 660, 661, 662, 663, 664, 665, 666, 669, 677, 682, 684], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 160, 161, 162, 166, 167, 168, 172, 173, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 387, 428, 430, 441, 458, 459, 460, 461, 465, 469, 470, 481, 482, 483, 510, 555, 557, 563, 600, 616, 617, 618, 630, 648, 649, 653, 681], "dure": [2, 7, 8, 12, 14, 19, 143, 155, 165, 166, 167, 168, 192, 204, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 442, 451, 458, 464, 608, 662, 683, 686], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 122, 123, 124, 125, 126, 130, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 179, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 204, 205, 208, 209, 214, 216, 226, 227, 228, 231, 232, 233, 236, 237, 238, 239, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 286, 287, 288, 291, 292, 293, 296, 297, 298, 301, 303, 305, 315, 316, 317, 320, 321, 325, 326, 329, 330, 331, 334, 336, 338, 348, 349, 350, 353, 354, 358, 359, 362, 363, 364, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 397, 398, 401, 403, 408, 409, 411, 414, 421, 422, 423, 424, 425, 427, 429, 430, 432, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 457, 458, 459, 460, 464, 466, 469, 470, 471, 481, 483, 484, 491, 492, 493, 494, 498, 510, 563, 576, 579, 580, 586, 587, 588, 591, 594, 596, 601, 602, 604, 605, 606, 608, 610, 611, 612, 613, 614, 615, 617, 618, 619, 621, 624, 629, 630, 633, 634, 639, 640, 641, 642, 645, 650, 651, 658, 659, 661, 662, 664, 675, 676, 677, 679, 680, 681, 683, 684, 686], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 133, 135, 143, 144, 145, 150, 155, 160, 161, 162, 166, 167, 168, 169, 171, 172, 173, 182, 184, 192, 193, 194, 199, 204, 208, 209, 301, 334, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 422, 423, 425, 430, 443, 457, 482, 483, 557, 605, 609, 613, 615, 616, 622, 658, 675], "success": [2, 7, 8, 12, 14, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 621], "unless": [2, 7, 8, 12, 14, 58, 122, 124, 125, 168, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 387, 494, 612], "explicitli": [2, 7, 8, 12, 14, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 422, 423], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 128, 133, 135, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 166, 167, 168, 169, 170, 171, 176, 177, 182, 184, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 226, 233, 237, 238, 239, 251, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 422, 423, 424, 425, 456, 466, 481, 486, 492, 493, 510, 577, 596, 609, 611, 612, 614, 615, 616, 617, 618, 619, 621, 629, 633, 653, 658, 673, 680, 683, 684], "introduct": [2, 7, 8, 12, 14, 370, 374, 376, 377, 378, 379, 380, 381, 382, 619, 684], "specif": [2, 7, 8, 12, 14, 143, 155, 160, 161, 162, 192, 204, 334, 359, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 425, 445, 446, 447, 449, 450, 453, 457, 458, 459, 460, 591, 610, 612, 616, 618, 619, 624, 639, 661, 662, 664, 673, 684, 686], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 122, 124, 125, 133, 135, 150, 166, 167, 168, 176, 182, 184, 199, 226, 228, 233, 237, 238, 239, 251, 253, 254, 255, 256, 257, 264, 267, 268, 269, 270, 271, 286, 288, 293, 297, 298, 315, 317, 322, 323, 324, 325, 326, 327, 330, 331, 348, 350, 355, 356, 357, 358, 359, 360, 363, 364, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 397, 408, 414, 424, 425, 458, 459, 460, 469, 481, 484, 492, 493, 510, 600, 604, 610, 611, 612, 615, 618, 625, 629, 679, 680, 683], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 124, 128, 133, 135, 143, 150, 155, 160, 166, 167, 168, 172, 173, 177, 182, 184, 192, 199, 204, 214, 216, 226, 228, 233, 236, 237, 238, 239, 242, 251, 253, 255, 257, 258, 264, 267, 269, 271, 274, 276, 286, 288, 293, 296, 297, 298, 303, 305, 315, 317, 325, 326, 329, 330, 331, 336, 338, 348, 350, 358, 359, 362, 363, 364, 367, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 421, 422, 425, 429, 441, 442, 446, 449, 450, 452, 457, 458, 459, 460, 464, 470, 471, 478, 482, 483, 484, 487, 488, 490, 492, 493, 494, 586, 594, 605, 612], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 124, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 166, 167, 168, 172, 173, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 214, 216, 226, 228, 233, 236, 237, 238, 239, 242, 251, 253, 255, 257, 258, 264, 267, 269, 271, 274, 276, 286, 288, 293, 296, 297, 298, 303, 305, 315, 317, 325, 326, 329, 330, 331, 336, 338, 348, 350, 358, 359, 362, 363, 364, 367, 369, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 394, 421, 422, 424, 425, 429, 441, 442, 446, 449, 450, 452, 457, 458, 459, 460, 464, 469, 470, 471, 478, 479, 481, 482, 483, 484, 487, 488, 490, 492, 493, 494, 510, 569, 570, 586, 594, 605, 608, 609, 610, 611, 612, 614, 615, 618, 619, 634, 641, 648, 649, 650, 651, 658, 661, 662, 664, 665, 669, 676, 677, 681, 684], "mdv": [2, 8, 12, 14, 376, 377, 387, 609, 618, 625, 627, 635, 638, 656, 673, 677, 679, 682], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 122, 124, 125, 143, 155, 166, 168, 192, 204, 368, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 401, 411, 610, 611, 612, 614, 616, 618, 619, 629, 630, 633, 634, 651, 684], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 166, 167, 168, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 296, 297, 298, 315, 317, 325, 326, 329, 330, 331, 348, 350, 358, 359, 362, 363, 364, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 422, 423, 429, 457, 608, 609, 610, 611, 612, 614, 615, 616, 618, 624, 633], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 123, 126, 160, 161, 162, 164, 166, 167, 168, 169, 207, 210, 231, 251, 291, 320, 353, 359, 369, 370, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 414, 415, 416, 417, 421, 424, 425, 427, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 452, 455, 457, 458, 459, 460, 464, 466, 469, 481, 510, 556, 571, 572, 573, 576, 578, 586, 587, 592, 593, 596, 600, 602, 604, 608, 609, 610, 611, 615, 618, 621, 627, 630, 634, 642, 653, 658, 661, 662, 664, 674, 677, 680, 683], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 144, 145, 160, 161, 162, 165, 166, 168, 172, 173, 193, 194, 226, 237, 253, 286, 297, 315, 326, 330, 348, 359, 363, 370, 374, 376, 377, 378, 379, 380, 381, 382, 422, 423, 425, 458, 466, 486, 492, 493, 579, 580, 594, 596, 602, 608, 609, 610, 612, 614, 618, 619, 622, 633, 634, 641, 651, 661, 662, 676, 677, 679, 684], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 133, 135, 143, 150, 155, 160, 161, 162, 166, 182, 184, 192, 199, 204, 226, 237, 258, 286, 297, 315, 326, 330, 348, 363, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 439, 442, 452, 455, 471, 481, 484, 492, 510, 561, 586, 608, 610, 611, 612, 613, 614, 616, 618, 619, 629, 630, 658, 659, 661, 662, 664, 673, 679, 683, 684, 685, 686], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 122, 124, 125, 166, 167, 168, 326, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 394, 397, 398, 399, 401, 403, 408, 409, 411, 424, 425, 453, 457, 469, 470, 481, 482, 483, 510, 563, 610, 612, 615, 616, 658, 675, 676, 680], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 212, 228, 232, 235, 258, 272, 288, 292, 295, 301, 317, 321, 328, 334, 350, 354, 361, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 416, 422, 423, 425, 432, 435, 436, 438, 439, 440, 443, 453, 456, 484, 577, 579, 580, 589, 611, 612, 614, 616, 617, 618, 619, 621, 629, 673, 684, 685], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 155, 160, 161, 162, 171, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 201, 204, 207, 208, 209, 210, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 388, 441, 458, 459, 460, 462, 466, 467, 484, 625, 635, 680], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 164, 167, 168, 170, 171, 172, 173, 208, 209, 226, 227, 233, 236, 237, 238, 239, 250, 265, 286, 287, 293, 296, 297, 298, 315, 316, 325, 326, 329, 330, 331, 348, 349, 358, 359, 362, 363, 364, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 414, 421, 425, 430, 442, 446, 452, 481, 484, 510, 587, 610, 611, 612, 614, 615, 618, 619, 629, 639, 650, 661, 662, 664, 669, 677, 684], "after": [2, 4, 5, 6, 7, 8, 12, 14, 166, 167, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 390, 458, 608, 610, 612, 618, 619, 621, 630, 661, 683, 684, 686], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 160, 161, 162, 166, 167, 168, 171, 172, 173, 177, 182, 184, 192, 199, 204, 207, 208, 209, 210, 226, 228, 233, 236, 237, 238, 239, 240, 241, 251, 253, 286, 288, 293, 296, 297, 298, 299, 300, 315, 317, 325, 326, 329, 330, 331, 332, 333, 348, 350, 358, 359, 362, 363, 364, 365, 366, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 395, 396, 399, 400, 406, 407, 410, 425, 436, 441, 445, 446, 447, 449, 450, 458, 459, 460, 469, 481, 492, 493, 494, 510, 558, 559, 560, 569, 570, 576, 586, 597, 598, 609, 610, 616, 618, 619, 627, 630, 633, 634, 640, 647, 650, 651, 654, 655, 657, 658, 661, 662, 666, 669, 673, 677, 682, 683, 684, 685], "you": [2, 226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 457, 608, 611, 612, 613, 614, 615, 617, 619, 621, 629, 661, 662, 673, 675, 676, 677, 679, 680, 681, 683, 684, 686], "want": [2, 609, 611, 612, 614, 615, 630, 658, 673, 680, 681, 686], "altitud": [2, 31, 45, 56, 74, 172, 173, 212, 422, 425, 430, 443, 464, 469, 481, 492, 510, 588, 601, 608, 611, 618, 651, 658, 665, 675, 679, 681], "provid": [2, 6, 45, 48, 74, 166, 211, 232, 292, 321, 326, 354, 372, 373, 374, 379, 382, 386, 387, 388, 390, 395, 396, 402, 403, 406, 407, 412, 414, 457, 481, 484, 510, 591, 600, 606, 608, 611, 612, 614, 615, 616, 617, 619, 630, 659, 661, 673, 680, 683, 684], "np": [2, 414, 434, 467, 599, 608, 610, 611, 612, 614, 616, 618, 619, 633, 635, 639, 642, 647, 650, 651, 653, 658, 659, 661, 662, 663, 664, 665, 675, 676, 677, 679, 680, 681, 684], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 126, 128, 133, 135, 143, 144, 145, 150, 155, 159, 163, 166, 167, 168, 170, 174, 177, 182, 184, 192, 193, 194, 199, 204, 212, 226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 264, 265, 267, 269, 271, 272, 286, 287, 288, 293, 297, 298, 301, 315, 316, 317, 322, 323, 325, 326, 330, 331, 334, 348, 349, 350, 355, 356, 358, 359, 363, 364, 414, 424, 425, 434, 442, 443, 444, 452, 457, 459, 460, 461, 466, 467, 469, 471, 477, 483, 487, 488, 490, 491, 492, 493, 494, 572, 573, 574, 575, 576, 584, 585, 587, 592, 593, 596, 597, 598, 599, 608, 612, 618, 619, 633, 647, 658, 661, 662, 665, 675, 676, 677, 679, 680, 681, 684], "295": [2, 618], "dtype": [2, 421, 425, 608, 611, 612, 618, 675, 677, 681], "float64": [2, 424, 425, 608, 611, 659, 681], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 207, 208, 209, 210, 213, 214, 215, 216, 217, 246, 247, 248, 249, 259, 260, 261, 262, 273, 274, 275, 276, 277, 302, 303, 304, 305, 306, 335, 336, 337, 338, 339, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 392, 397, 398, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 472, 479, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 503, 504, 505, 506, 507, 508, 509, 523, 524, 525, 526, 531, 532, 533, 534, 535, 536, 537, 553, 555, 556, 557, 558, 559, 560, 561, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 600, 601, 602, 604, 608, 610, 611, 612, 615, 616, 618, 619, 659, 661, 662, 664, 676, 679, 681, 684], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 159, 160, 161, 162, 166, 167, 168, 170, 171, 172, 173, 174, 207, 208, 209, 210, 226, 233, 236, 237, 238, 239, 241, 286, 293, 296, 297, 298, 300, 315, 325, 326, 329, 330, 331, 333, 348, 358, 359, 362, 363, 364, 366, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 390, 403, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 435, 438, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 481, 482, 486, 487, 488, 490, 491, 492, 493, 494, 510, 576, 577, 579, 580, 586, 590, 600, 602, 605, 608, 609, 612, 615, 618, 619, 630, 643, 644, 662, 673, 675, 676, 679, 681, 683, 684, 686], "edg": [3, 33, 57, 120, 124, 166, 167, 168, 169, 170, 226, 233, 237, 238, 239, 255, 257, 267, 269, 271, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 443, 456, 460, 471, 493, 561, 610, 611, 612, 650, 651, 661], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 388, 611, 618], "gamic": [4, 618], "hdf5": [4, 8, 618, 673], "unlik": [4, 5, 6, 373], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 166, 167, 168, 169, 170, 171, 209, 226, 228, 233, 236, 237, 238, 239, 253, 286, 288, 293, 296, 297, 298, 315, 317, 325, 326, 329, 330, 331, 348, 350, 358, 359, 362, 363, 364, 370, 373, 375, 378, 380, 382, 386, 414, 425, 442, 452, 462, 466, 469, 477, 481, 510, 558, 559, 560, 610, 611, 612, 616, 619, 658, 661, 662, 673, 675, 683, 684, 686], "still": [4, 5, 6, 166, 301, 334, 373, 388, 425, 594, 614, 616, 618, 619, 629, 684], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 128, 133, 135, 143, 150, 155, 166, 167, 168, 169, 171, 172, 173, 177, 182, 184, 192, 199, 204, 207, 208, 209, 210, 226, 227, 231, 232, 233, 236, 237, 238, 239, 242, 250, 253, 255, 257, 258, 264, 265, 267, 269, 271, 286, 287, 291, 292, 293, 296, 297, 298, 315, 316, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 369, 370, 372, 373, 378, 379, 382, 383, 385, 386, 387, 388, 390, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 436, 439, 453, 457, 458, 459, 460, 464, 465, 466, 469, 471, 481, 486, 490, 503, 504, 506, 507, 510, 531, 532, 534, 535, 576, 577, 578, 579, 580, 587, 589, 590, 591, 592, 593, 600, 604, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 621, 625, 629, 630, 633, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 658, 659, 662, 669, 670, 671, 673, 677, 679, 681, 683, 684], "renam": [4, 5, 6, 29, 373, 383, 618], "uniform": [4, 5, 6, 58, 167, 168, 373, 381, 429, 441, 494, 618, 639, 642, 673, 675], "forc": [4, 5, 6, 373, 383, 429, 612, 618], "extract": [4, 226, 286, 315, 348, 382, 439, 441, 453, 577, 579, 580, 590, 614, 618, 627, 633, 655, 657, 658, 661, 662, 666, 673, 682], "valid": [4, 31, 45, 74, 157, 160, 166, 206, 227, 250, 265, 287, 316, 349, 378, 387, 388, 422, 423, 425, 432, 435, 436, 438, 457, 469, 481, 510, 577, 578, 579, 580, 587, 616, 618, 619, 634, 684], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 121, 162, 174, 212, 226, 228, 233, 234, 235, 237, 238, 239, 251, 253, 255, 257, 264, 267, 269, 271, 272, 286, 288, 293, 294, 295, 297, 298, 301, 315, 317, 325, 326, 327, 328, 330, 331, 334, 348, 350, 358, 359, 360, 361, 363, 364, 381, 422, 423, 425, 432, 434, 436, 438, 439, 441, 458, 460, 481, 491, 493, 510, 577, 578, 586, 602, 608, 610, 611, 612, 618, 634, 639, 644, 647, 653, 665, 675, 681], "valid_min": [4, 166, 167, 168, 374, 618, 661, 662, 681], "valid_max": [4, 166, 167, 168, 374, 661, 662, 681], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 133, 135, 138, 143, 144, 145, 150, 155, 166, 167, 168, 172, 173, 182, 184, 187, 192, 193, 194, 199, 204, 226, 233, 237, 238, 239, 253, 258, 286, 293, 297, 298, 315, 325, 326, 330, 331, 334, 348, 358, 359, 363, 364, 378, 379, 381, 382, 384, 388, 390, 414, 425, 429, 432, 435, 436, 438, 440, 446, 449, 450, 458, 459, 460, 466, 468, 469, 481, 482, 483, 487, 488, 490, 492, 493, 510, 587, 609, 610, 611, 614, 615, 618, 619, 620, 621, 622, 639, 658, 661, 662, 664, 673, 676, 677, 680, 683, 684, 686], "present": [4, 29, 31, 45, 74, 226, 233, 237, 238, 239, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 387, 388, 401, 411, 425, 457, 469, 481, 510, 612, 675, 680], "unit": [4, 55, 122, 123, 124, 125, 126, 167, 168, 218, 221, 222, 223, 224, 231, 251, 278, 281, 282, 283, 284, 291, 307, 310, 311, 312, 313, 320, 340, 343, 344, 345, 346, 353, 374, 376, 427, 452, 455, 468, 491, 563, 587, 608, 612, 614, 618, 619, 620, 648, 653, 661, 662, 664, 673, 676, 681, 684], "avail": [4, 16, 45, 56, 57, 58, 74, 143, 155, 160, 161, 162, 170, 192, 204, 211, 251, 253, 255, 257, 267, 269, 271, 376, 386, 481, 492, 493, 494, 510, 596, 608, 610, 611, 612, 615, 618, 621, 627, 629, 639, 658, 673], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 123, 126, 446, 457, 466, 467, 608, 610, 611, 612, 613, 614, 615, 616, 618, 619, 630, 665, 675, 676, 677, 679, 680, 681, 684], "k": [5, 126, 158, 159, 163, 230, 231, 232, 234, 235, 236, 290, 291, 292, 294, 295, 296, 319, 320, 321, 327, 328, 329, 352, 353, 354, 360, 361, 362, 393, 397, 398, 400, 401, 405, 408, 409, 410, 411, 441, 458, 466, 610, 614, 616, 619, 640, 647, 650, 651, 684], "band": [5, 9, 160, 162, 165, 386, 432, 445, 447, 454, 457, 458, 459, 460, 464, 608, 616, 618, 662, 664], "arm": [5, 6, 40, 158, 159, 163, 371, 372, 373, 384, 385, 425, 453, 478, 557, 563, 608, 610, 612, 614, 618, 621, 636, 651, 675, 676, 677, 679, 680, 681, 683, 686], "zenith": 5, "kazr": [5, 6, 618], "ingest": [5, 611, 618, 673, 674], "spectra": [6, 74, 117, 444, 463, 510, 553, 560, 568, 587, 618], "radar_spectra": 6, "delay_field_load": [6, 370, 373, 376, 377, 378, 381, 383], "delai": [6, 370, 373, 376, 377, 378, 381, 618], "load": [6, 29, 370, 373, 376, 377, 378, 381, 389, 390, 399, 618, 634, 681], "until": [6, 29, 167, 370, 373, 376, 377, 378, 381, 615, 621], "particular": [6, 370, 373, 376, 377, 378, 381, 425, 439, 611, 621, 658, 673], "access": [6, 19, 31, 45, 56, 57, 74, 144, 145, 193, 194, 370, 373, 376, 377, 378, 381, 390, 469, 481, 492, 493, 510, 556, 611, 616, 629, 630, 679, 681], "In": [6, 122, 124, 125, 168, 170, 368, 370, 373, 376, 377, 378, 380, 381, 401, 411, 414, 427, 430, 439, 443, 458, 467, 576, 577, 608, 610, 611, 612, 614, 615, 619, 624, 625, 630, 658, 661, 662, 673, 676, 677, 679, 680, 683, 684], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 143, 144, 145, 155, 166, 192, 193, 194, 204, 226, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 370, 373, 374, 376, 377, 378, 381, 384, 385, 388, 469, 472, 473, 474, 475, 481, 492, 493, 499, 500, 501, 502, 510, 527, 528, 529, 530, 608, 611, 612, 614, 616, 659, 675, 681], "radarspectra": [6, 463, 560], "lazyloaddict": [6, 31, 45, 74, 370, 373, 376, 377, 378, 381, 469, 481, 510], "speedup": [6, 253, 326, 359, 373, 612, 618], "where": [6, 15, 56, 57, 119, 123, 126, 130, 133, 134, 135, 136, 137, 139, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 161, 162, 166, 167, 168, 171, 173, 179, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 226, 233, 236, 237, 238, 239, 252, 266, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 367, 373, 430, 432, 435, 436, 438, 439, 440, 442, 443, 452, 461, 467, 492, 493, 579, 580, 588, 591, 604, 608, 609, 612, 614, 618, 629, 630, 633, 639, 642, 658, 659, 661, 664, 673, 676, 680, 686], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 121, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 226, 233, 237, 238, 239, 255, 257, 267, 269, 271, 272, 286, 293, 297, 298, 301, 315, 325, 326, 330, 331, 334, 348, 358, 359, 363, 364, 373, 378, 379, 380, 381, 414, 421, 424, 425, 458, 459, 460, 461, 462, 466, 467, 481, 491, 492, 493, 510, 558, 559, 560, 576, 577, 589, 590, 608, 612, 618, 625, 630, 633, 635, 636, 640, 675, 677, 679, 680, 681], "vari": [6, 373, 376, 441, 661, 662], "between": [6, 33, 45, 56, 57, 74, 120, 123, 124, 143, 155, 166, 167, 169, 170, 171, 192, 204, 208, 209, 226, 233, 237, 238, 239, 251, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 367, 373, 378, 381, 387, 388, 414, 441, 442, 446, 452, 471, 481, 492, 493, 510, 571, 586, 601, 608, 610, 611, 612, 619, 621, 633, 640, 650, 658, 661, 677, 679, 684, 686], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 138, 143, 155, 160, 161, 162, 166, 167, 168, 170, 173, 187, 192, 204, 208, 213, 215, 219, 220, 226, 233, 236, 237, 238, 239, 255, 257, 267, 269, 271, 273, 275, 279, 280, 286, 293, 296, 297, 298, 302, 304, 308, 309, 315, 325, 326, 329, 330, 331, 335, 337, 341, 342, 348, 358, 359, 362, 363, 364, 372, 373, 378, 381, 382, 414, 429, 434, 466, 481, 489, 492, 493, 494, 495, 496, 497, 510, 523, 524, 525, 526, 558, 559, 560, 563, 577, 578, 583, 585, 589, 604, 605, 611, 612, 619, 635, 675, 681, 684], "ngates_vari": [6, 373], "recommend": [6, 29, 45, 74, 166, 168, 359, 373, 382, 425, 441, 442, 452, 458, 481, 510, 576, 619, 621, 639, 658, 673, 683, 684, 685, 686], "noxp": [7, 618], "iphex": [7, 618], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 138, 187, 326, 359, 378, 380, 422, 423, 453, 577, 581, 584, 590, 608, 611, 612, 618, 629, 634, 658, 659, 662, 663, 664, 665, 673, 675], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 130, 131, 133, 134, 135, 136, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 156, 166, 171, 179, 180, 182, 183, 184, 185, 188, 190, 191, 195, 197, 198, 199, 200, 202, 203, 205, 208, 209, 226, 231, 232, 251, 252, 254, 255, 256, 257, 266, 268, 269, 270, 271, 286, 291, 292, 315, 320, 321, 322, 323, 348, 353, 354, 355, 356, 397, 408, 414, 422, 423, 424, 425, 436, 457, 461, 469, 471, 481, 487, 488, 489, 490, 493, 494, 495, 496, 497, 510, 523, 524, 525, 526, 555, 577, 586, 589, 590, 592, 593, 600, 608, 612, 616, 658, 659, 661, 673], "dataset1": 8, "dataset2": 8, "pattern": [9, 561, 650, 658], "project": [9, 16, 31, 34, 45, 74, 122, 123, 124, 125, 126, 231, 242, 253, 264, 291, 301, 320, 326, 353, 359, 376, 385, 386, 425, 432, 435, 436, 438, 440, 469, 472, 481, 510, 608, 610, 612, 614, 615, 616, 618, 629, 630, 633, 634, 640, 641, 647, 654, 659, 661, 662, 669, 673, 676, 677, 679, 680, 683], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 126, 212, 221, 226, 228, 231, 233, 236, 237, 238, 239, 241, 251, 253, 255, 257, 267, 269, 271, 272, 281, 286, 288, 291, 293, 296, 297, 298, 300, 301, 310, 315, 317, 320, 323, 325, 329, 330, 331, 333, 334, 343, 348, 350, 353, 356, 358, 362, 363, 364, 366, 414, 418, 419, 420, 421, 422, 424, 425, 429, 442, 443, 445, 452, 454, 455, 456, 457, 458, 459, 460, 464, 469, 475, 477, 493, 501, 529, 557, 561, 576, 608, 611, 612, 615, 617, 618, 622, 633, 640, 641, 650, 651, 658, 661, 662, 664, 679, 680, 681], "radx_dir": 10, "first": [10, 45, 58, 74, 166, 168, 251, 371, 372, 381, 384, 414, 425, 442, 452, 458, 459, 460, 464, 481, 494, 510, 581, 583, 586, 597, 598, 608, 610, 611, 612, 614, 615, 619, 621, 625, 629, 630, 644, 653, 658, 659, 661, 662, 669, 677, 679, 680, 681, 684], "convert": [10, 13, 39, 427, 442, 452, 477, 594, 605, 608, 610, 612, 618, 661, 662], "cf": [10, 13, 45, 74, 373, 384, 385, 453, 481, 510, 608, 609, 610, 611, 627, 638, 656, 673, 681, 682], "radial": [10, 13, 45, 74, 166, 167, 373, 384, 429, 458, 481, 510, 576, 600, 609, 611, 612, 614, 618, 623, 627, 629, 638, 656, 668, 672, 673, 677, 681, 682], "radxconvert": 10, "path": [10, 15, 161, 162, 168, 479, 556, 609, 610, 612, 614, 615, 618, 619, 629, 630, 673, 683, 684], "radx": [10, 618], "grid": [11, 24, 45, 74, 211, 228, 230, 238, 242, 246, 252, 253, 254, 256, 258, 259, 264, 266, 267, 268, 270, 288, 290, 317, 319, 350, 352, 368, 375, 376, 385, 386, 387, 418, 419, 420, 421, 422, 423, 424, 425, 432, 435, 436, 438, 440, 441, 442, 443, 452, 455, 456, 464, 481, 510, 557, 561, 562, 564, 565, 582, 602, 608, 612, 615, 618, 627, 632, 637, 638, 641, 651, 654, 656, 658, 661, 662, 668, 672, 673, 674, 682], "produc": [11, 169, 375, 384, 386, 390, 462, 467, 612, 614, 619, 662, 673, 684], "radx2grid": 11, "within": [11, 29, 47, 48, 128, 166, 167, 168, 169, 173, 177, 211, 421, 424, 425, 429, 432, 435, 436, 438, 440, 457, 483, 484, 571, 577, 579, 580, 588, 590, 592, 593, 606, 610, 612, 613, 614, 616, 618, 619, 629, 630, 641, 642, 673, 677, 679, 684, 686], "lrose": 11, "must": [11, 160, 161, 162, 166, 326, 372, 375, 376, 381, 387, 441, 455, 458, 459, 460, 600, 612, 619, 661, 673, 683, 684], "been": [11, 12, 133, 135, 143, 150, 155, 165, 166, 182, 184, 192, 199, 204, 258, 334, 373, 375, 378, 379, 380, 382, 587, 609, 614, 619, 629, 661, 673, 679, 683, 684], "write_grid": [11, 375], "ident": [11, 167, 168, 375, 424, 662], "layout": [11, 33, 375, 471, 618], "rainbow": 12, "rainbow5": [12, 618], "5": [12, 31, 158, 160, 162, 166, 169, 170, 171, 172, 209, 226, 233, 236, 237, 238, 239, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 385, 441, 442, 446, 452, 457, 469, 561, 586, 594, 608, 609, 610, 611, 612, 614, 615, 616, 617, 619, 624, 625, 630, 634, 639, 642, 644, 645, 646, 649, 650, 651, 652, 653, 654, 658, 659, 661, 662, 663, 664, 665, 669, 675, 677, 680, 681, 684], "22": [12, 608, 610, 614, 618, 629, 631, 639, 659], "3": [12, 45, 74, 119, 120, 166, 167, 207, 208, 210, 238, 376, 380, 386, 421, 422, 423, 425, 429, 441, 442, 452, 457, 481, 510, 557, 561, 577, 608, 609, 610, 611, 614, 617, 619, 624, 625, 627, 630, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 672, 673, 675, 676, 677, 679, 680, 681, 682, 683, 684, 686], "34": [12, 452, 464, 608, 661, 662], "16": [12, 441, 445, 466, 608, 609, 610, 612, 616, 619, 624, 625, 633, 646, 652, 658, 660, 677, 681, 684], "35": [12, 168, 172, 173, 608, 610, 611, 633, 637, 639, 648, 650, 651, 658, 680, 682], "1": [12, 31, 45, 55, 74, 119, 123, 126, 143, 158, 159, 163, 166, 168, 172, 173, 192, 272, 373, 378, 379, 380, 385, 424, 425, 427, 432, 433, 435, 436, 438, 439, 441, 442, 443, 446, 452, 457, 458, 460, 469, 481, 491, 510, 561, 577, 578, 586, 587, 599, 606, 608, 610, 611, 612, 614, 616, 619, 621, 622, 624, 625, 629, 633, 634, 635, 636, 639, 640, 641, 643, 644, 645, 647, 648, 649, 650, 651, 653, 654, 655, 658, 659, 661, 663, 664, 665, 670, 673, 675, 676, 677, 679, 681, 684], "sinc": [12, 430, 458, 608, 610, 611, 612, 634, 661, 662, 676, 679, 681], "evolv": [12, 608], "constantli": 12, "guaranti": 12, "work": [12, 123, 126, 253, 301, 326, 334, 359, 378, 380, 464, 609, 610, 612, 614, 615, 616, 618, 619, 621, 622, 630, 658, 673, 675, 676, 677, 679, 680, 681, 683, 684, 686], "necessari": [12, 608, 615], "user": [12, 29, 48, 161, 162, 169, 359, 386, 441, 457, 484, 577, 604, 608, 611, 612, 614, 616, 618, 619, 664, 673, 675, 676, 677, 679, 680, 681, 683, 684, 686], "adapt": [12, 119, 608, 686], "code": [12, 29, 166, 455, 466, 608, 610, 614, 616, 618, 622, 624, 625, 627, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673, 683, 686], "accord": [12, 165, 382, 425, 433, 445, 446, 447, 449, 450], "its": [12, 458, 596, 610, 611, 614, 615, 618, 619, 621, 622, 673, 683, 684, 686], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 370, 381, 397, 398, 408, 409, 469, 470, 482, 483, 485, 494, 513, 611, 612, 615, 618], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 137, 158, 166, 167, 168, 169, 171, 172, 173, 186, 207, 208, 209, 210, 212, 231, 291, 320, 353, 359, 382, 385, 386, 402, 412, 414, 421, 422, 424, 425, 429, 435, 438, 443, 453, 469, 477, 481, 483, 484, 487, 488, 494, 503, 504, 505, 506, 507, 508, 509, 510, 531, 532, 533, 534, 535, 536, 537, 555, 557, 558, 559, 560, 567, 576, 580, 584, 585, 592, 593, 603, 605, 608, 609, 611, 612, 614, 615, 616, 618, 619, 621, 622, 627, 630, 633, 634, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 652, 653, 654, 655, 656, 658, 659, 661, 662, 664, 669, 670, 671, 673, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685], "issu": [12, 29, 301, 334, 382, 385, 611, 616, 617, 618, 619, 627, 628, 631, 664, 673, 682, 683, 684, 686], "upstream": [12, 609, 619, 621, 684], "reflect": [12, 47, 117, 128, 144, 145, 158, 159, 160, 161, 162, 164, 169, 171, 172, 173, 174, 177, 193, 194, 208, 209, 228, 288, 317, 350, 367, 414, 425, 427, 428, 430, 434, 437, 441, 442, 443, 446, 448, 449, 450, 451, 452, 457, 458, 464, 483, 553, 566, 567, 569, 570, 591, 608, 609, 610, 614, 615, 616, 618, 623, 625, 626, 627, 629, 630, 633, 634, 635, 636, 638, 639, 640, 641, 643, 646, 649, 652, 653, 655, 656, 657, 658, 659, 661, 662, 666, 669, 671, 673, 675, 676, 677, 679, 680, 681, 682], "dbz": [12, 160, 165, 172, 173, 427, 434, 437, 441, 442, 452, 457, 464, 609, 611, 614, 615, 629, 633, 641, 648, 649, 655, 658, 661, 662, 664, 681], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 166, 167, 168, 429, 443, 444, 455, 466, 467, 494, 553, 576, 600, 612, 614, 615, 618, 619, 623, 626, 627, 629, 639, 643, 651, 653, 664, 668, 672, 673, 674, 680, 681, 682, 684], "v": [12, 41, 42, 44, 397, 398, 401, 408, 409, 411, 431, 433, 441, 466, 467, 610, 615, 616, 619, 650, 651, 662, 665, 684], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 587, 681], "width": [12, 252, 266, 326, 359, 425, 610, 611, 612, 614, 618, 681], "w": [12, 62, 168, 441, 457, 498, 608, 663], "wu": [12, 421, 679], "wv": 12, "wvu": 12, "differenti": [12, 17, 160, 161, 162, 172, 173, 208, 443, 447, 450, 457, 458, 459, 460, 462, 465, 618, 643, 658, 673], "zdr": [12, 161, 162, 165, 208, 431, 457, 664], "zdru": 12, "co": [12, 119, 123, 126, 431, 433, 442, 443, 452, 608, 610, 634, 658, 661, 662], "polar": [12, 376, 377, 460, 611, 634], "correl": [12, 171, 208, 209, 455, 457, 591, 614, 642, 643, 660, 661, 662], "coeffici": [12, 160, 161, 162, 172, 173, 427, 441, 457, 591, 608, 618, 642, 643, 660], "rhohv": [12, 165, 171, 208, 209, 431, 433, 457, 618, 642, 664, 681], "rhohvu": 12, "phase": [12, 17, 160, 161, 162, 168, 172, 173, 208, 438, 447, 450, 455, 457, 458, 459, 460, 462, 465, 618, 643, 673, 677], "phidp": [12, 161, 162, 172, 173, 208, 458, 618, 673], "uphidp": 12, "uphidpu": 12, "kdp": [12, 172, 173, 447, 450, 457, 458, 459, 460, 618, 663, 664, 673], "ukdp": 12, "ukdpu": 12, "signal": [12, 165, 171, 209, 428, 587, 611, 616], "qualiti": [12, 158, 159, 163, 165, 171, 209, 447, 459, 460, 608, 614, 616, 629], "sqi": [12, 618], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 161, 162, 210, 457, 608, 663], "temp": [12, 618], "posit": [12, 45, 74, 123, 126, 161, 162, 166, 430, 458, 481, 510, 611, 618, 633, 639, 641, 681], "bin": [12, 45, 74, 119, 120, 121, 162, 381, 432, 435, 436, 438, 440, 443, 444, 481, 510, 586, 587, 608, 618, 633, 658, 677, 681], "respect": [12, 45, 74, 442, 452, 457, 464, 481, 510, 612], "iso0": [12, 161, 207, 457], "cfradial_outfil": 13, "head": [13, 45, 74, 212, 481, 510], "ridgelin": 13, "instrument": [13, 45, 74, 143, 155, 171, 192, 204, 208, 209, 388, 481, 510, 616, 618, 664, 677, 681], "rxm": [13, 618], "25": [13, 422, 423, 441, 608, 610, 614, 618, 629, 633, 650, 651, 654, 659, 664, 675, 680], "rli": 13, "here": [13, 133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 264, 608, 609, 610, 611, 612, 614, 616, 617, 621, 633, 658, 661, 662, 664, 669, 673, 675, 680, 683, 686], "float": [13, 24, 58, 123, 126, 133, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 182, 207, 208, 209, 210, 212, 213, 226, 228, 229, 233, 234, 236, 237, 238, 239, 251, 252, 253, 254, 255, 256, 257, 264, 266, 267, 268, 269, 270, 271, 272, 273, 286, 288, 289, 293, 294, 296, 297, 298, 301, 302, 315, 317, 318, 324, 325, 326, 327, 329, 330, 331, 334, 335, 348, 350, 351, 357, 358, 359, 360, 362, 363, 364, 367, 386, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 494, 557, 561, 572, 573, 574, 575, 576, 577, 579, 580, 586, 587, 588, 589, 590, 591, 592, 593, 594, 601, 602, 612, 616], "offset": [13, 158, 160, 172, 173, 212, 272, 301, 324, 334, 357, 442, 452, 586, 594, 608, 611, 612, 662], "exist": [13, 28, 32, 46, 47, 49, 77, 133, 135, 143, 150, 155, 170, 171, 182, 184, 192, 199, 204, 208, 209, 382, 458, 470, 479, 482, 483, 485, 513, 555, 605, 610, 611, 612, 618, 621, 624, 673, 675], "enter": [13, 609, 612, 619, 684], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 126, 172, 173, 210, 212, 226, 231, 232, 251, 252, 254, 256, 264, 266, 268, 270, 272, 286, 291, 292, 301, 315, 320, 321, 324, 326, 334, 348, 353, 354, 357, 359, 432, 438, 466, 471, 491, 492, 573, 575, 577, 579, 580, 588, 589, 590, 594, 598, 601, 610, 612, 616, 618, 619, 655, 659, 681, 684], "sinarame_h5": [14, 15, 618], "take": [15, 47, 167, 424, 425, 428, 458, 483, 610, 611, 612, 619, 629, 630, 633, 641, 661, 662, 684], "everi": [15, 459, 460, 619, 620, 673, 684], "one": [15, 25, 31, 39, 40, 45, 47, 74, 133, 135, 143, 150, 155, 170, 171, 182, 184, 192, 199, 204, 209, 384, 385, 387, 414, 421, 424, 425, 430, 458, 459, 460, 466, 469, 477, 478, 481, 483, 510, 578, 579, 580, 586, 591, 595, 600, 609, 611, 612, 614, 615, 617, 618, 619, 621, 627, 632, 633, 634, 639, 658, 673, 676, 681, 684, 686], "volum": [15, 45, 74, 166, 168, 169, 326, 359, 378, 379, 380, 388, 414, 422, 423, 432, 435, 436, 438, 439, 440, 453, 457, 481, 510, 579, 580, 582, 602, 605, 608, 611, 612, 614, 616, 618, 627, 634, 638, 656, 682], "folder": [15, 608, 616, 619, 684], "cfradial": [15, 373, 609, 618, 627, 638, 639, 653, 655, 656, 671, 675, 682], "each": [15, 31, 39, 41, 45, 55, 74, 138, 159, 160, 161, 162, 163, 167, 168, 169, 187, 226, 233, 237, 238, 239, 255, 257, 267, 269, 271, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 382, 386, 388, 414, 421, 424, 425, 439, 443, 457, 466, 469, 477, 481, 491, 510, 558, 559, 560, 608, 611, 612, 615, 616, 618, 619, 629, 635, 650, 653, 658, 661, 662, 680, 681, 684], "act": [16, 446, 449, 450, 608, 618, 658, 661, 675], "commun": [16, 608, 616, 619, 673, 684, 686], "softwar": [16, 238, 379, 386, 612, 614, 619, 673, 675, 676, 677, 679, 680, 681, 683, 684], "namespac": [16, 618], "current": [16, 27, 33, 133, 135, 143, 150, 155, 166, 182, 184, 192, 199, 204, 214, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 274, 276, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 305, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 333, 336, 338, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 377, 415, 417, 432, 435, 436, 438, 439, 440, 458, 471, 586, 608, 609, 611, 612, 614, 616, 619, 684], "extens": [16, 214, 246, 259, 274, 303, 336, 386, 611, 621, 683], "wradlib": [16, 618, 673], "http": [16, 158, 159, 163, 378, 379, 380, 427, 430, 431, 433, 442, 443, 446, 447, 448, 452, 455, 457, 577, 591, 608, 610, 612, 614, 616, 619, 630, 642, 651, 658, 661, 662, 673, 683, 684, 686], "org": [16, 158, 159, 163, 427, 430, 431, 433, 442, 443, 446, 447, 448, 452, 455, 457, 577, 591, 616, 618, 619, 642, 658, 661, 662, 673, 684], "phidp_field": [17, 160, 161, 162, 172, 173, 458, 459, 460, 465, 624, 663], "phidp_texture_field": [17, 465], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 124, 128, 144, 145, 158, 159, 160, 161, 162, 163, 171, 172, 173, 177, 193, 194, 207, 208, 209, 210, 212, 272, 301, 334, 424, 425, 428, 429, 441, 442, 452, 455, 462, 463, 465, 466, 467, 469, 471, 481, 492, 493, 510, 576, 577, 586, 587, 588, 589, 590, 601, 608, 618, 619, 624, 627, 633, 634, 650, 651, 657, 661, 666, 669, 673, 677, 680, 682, 684], "textur": [17, 208, 429, 465, 576, 604, 618, 669, 673, 677], "real": [17, 166, 465, 627, 638, 661, 662, 686], "part": [17, 158, 159, 163, 443, 445, 465, 586, 611, 612, 614, 618, 629, 658, 673, 675, 676, 677, 679, 680, 681], "complex": [17, 465], "shift": [17, 172, 173, 212, 272, 301, 334, 456, 459, 465, 586, 618, 677], "texture_field": [17, 465], "refer": [17, 31, 45, 47, 74, 119, 123, 126, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 172, 173, 378, 379, 380, 421, 427, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 451, 452, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 481, 483, 510, 577, 587, 591, 609, 614, 618, 619, 658, 673, 681, 684], "gourlei": [17, 165, 465], "j": [17, 123, 126, 158, 159, 163, 168, 172, 173, 430, 431, 433, 441, 442, 446, 452, 457, 459, 460, 462, 464, 465, 466, 467, 577, 609, 612, 616, 619, 624, 625, 635, 636, 643, 644, 646, 648, 652, 655, 661, 662, 673, 684], "p": [17, 20, 22, 28, 119, 123, 126, 158, 159, 163, 421, 435, 436, 438, 441, 445, 462, 465, 555, 577, 587, 611, 619, 673, 684], "tabari": [17, 465], "parent": [17, 465], "du": [17, 465], "chatelet": [17, 465], "fuzzi": [17, 465], "logic": [17, 133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 465], "algorithm": [17, 128, 166, 167, 168, 177, 421, 425, 441, 442, 452, 457, 458, 464, 465, 608, 618, 619, 623, 626, 627, 669, 673, 682, 684], "separ": [17, 422, 423, 441, 455, 464, 465, 587, 591, 629, 634, 642, 662, 686], "precipit": [17, 425, 427, 436, 438, 441, 447, 451, 457, 465, 591, 608, 610, 612, 618, 619, 633, 642, 661, 662, 664, 673, 684], "nonprecipit": [17, 465], "echo": [17, 441, 442, 452, 457, 465, 618, 658, 661, 662, 680], "polarimetr": [17, 160, 161, 162, 165, 172, 173, 432, 433, 435, 436, 438, 446, 447, 457, 462, 465, 577, 618, 624], "observ": [17, 119, 436, 438, 442, 452, 458, 465, 658, 661, 662], "journal": [17, 166, 168, 421, 445, 447, 465, 587, 619, 673, 684], "atmospher": [17, 45, 74, 119, 120, 166, 167, 425, 445, 461, 465, 481, 510, 608, 611, 612, 614, 616, 619, 629, 673, 675, 676, 677, 679, 680, 681, 684], "ocean": [17, 158, 159, 163, 166, 172, 173, 431, 433, 442, 445, 451, 452, 462, 465, 577, 608, 612, 616, 629, 661, 662], "technologi": [17, 166, 445, 465], "24": [17, 465, 608, 610, 618, 630, 662, 666, 682], "8": [17, 62, 160, 166, 172, 208, 251, 253, 255, 257, 267, 269, 271, 441, 457, 465, 498, 608, 610, 611, 612, 614, 615, 621, 630, 633, 640, 650, 654, 658, 659, 662, 666, 669, 675, 676, 677, 679, 680, 681], "1439": [17, 465], "1451": [17, 465], "filetyp": [19, 25, 612], "need": [19, 45, 54, 56, 57, 74, 386, 442, 452, 481, 490, 492, 493, 510, 588, 601, 610, 611, 612, 615, 616, 617, 618, 619, 621, 629, 633, 639, 661, 662, 673, 675, 676, 677, 679, 680, 681, 683, 684, 686], "being": [19, 21, 166, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 296, 297, 298, 315, 317, 325, 326, 329, 330, 331, 348, 350, 358, 359, 362, 363, 364, 425, 430, 460, 592, 593, 610, 612, 614, 615, 618, 651, 683], "keep": [19, 166, 382, 602, 612, 619, 633, 661, 662, 684, 686], "string": [19, 31, 45, 74, 158, 159, 174, 228, 231, 232, 236, 239, 252, 266, 288, 291, 292, 296, 298, 317, 320, 321, 322, 323, 324, 327, 329, 331, 350, 353, 354, 355, 356, 357, 360, 362, 364, 424, 425, 453, 455, 459, 460, 462, 466, 467, 469, 481, 510, 610, 611, 612, 618, 619, 639, 684], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 128, 166, 167, 177, 212, 272, 301, 334, 390, 473, 474, 475, 499, 500, 501, 502, 527, 528, 529, 530, 612, 616, 618, 641, 664], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 133, 143, 144, 145, 155, 173, 182, 192, 193, 194, 204, 382, 458, 459, 460, 462, 466, 467, 469, 481, 505, 508, 509, 510, 533, 536, 537, 589, 608, 610, 612, 618, 629, 647], "dic": [22, 31, 45, 46, 74, 390, 469, 481, 482, 510], "colormap": [23, 211, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 386, 611, 612, 618, 627, 638, 642, 656, 662, 663, 682], "select": [24, 50, 59, 88, 168, 432, 435, 436, 438, 440, 486, 495, 524, 608, 611, 614, 618, 621, 664], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 123, 126, 128, 155, 158, 160, 161, 163, 164, 166, 167, 169, 170, 171, 172, 173, 177, 204, 207, 208, 209, 210, 212, 225, 226, 233, 236, 237, 238, 239, 240, 253, 267, 272, 285, 286, 293, 296, 297, 298, 299, 301, 314, 315, 324, 325, 326, 329, 330, 331, 332, 334, 347, 348, 357, 358, 359, 362, 363, 364, 365, 382, 386, 414, 422, 423, 424, 425, 428, 430, 431, 432, 433, 435, 436, 438, 439, 440, 441, 442, 443, 446, 448, 449, 450, 452, 456, 457, 458, 459, 462, 464, 466, 467, 471, 481, 486, 487, 488, 490, 491, 492, 493, 494, 510, 561, 578, 586, 594, 608, 609, 610, 611, 612, 614, 615, 616, 619, 621, 622, 624, 625, 626, 629, 630, 631, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 675, 676, 677, 679, 680, 681, 682, 683, 684], "limit": [24, 166, 167, 171, 172, 173, 207, 208, 209, 210, 228, 241, 264, 288, 300, 317, 333, 350, 366, 376, 387, 422, 423, 458, 602, 611, 612, 615, 618, 634, 635, 636, 640, 658, 679], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 143, 155, 166, 167, 168, 170, 171, 192, 204, 208, 209, 214, 216, 225, 226, 228, 233, 237, 238, 239, 274, 276, 285, 286, 288, 293, 297, 298, 303, 305, 314, 315, 317, 325, 326, 330, 331, 336, 338, 347, 348, 350, 358, 359, 363, 364, 378, 379, 380, 382, 414, 422, 423, 429, 435, 438, 466, 481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 503, 504, 505, 506, 507, 508, 509, 510, 523, 524, 525, 526, 531, 532, 533, 534, 535, 536, 537, 558, 559, 579, 580, 586, 608, 609, 611, 612, 614, 615, 616, 618, 625, 627, 629, 632, 633, 637, 650, 651, 653, 658, 659, 661, 662, 664, 665, 669, 677, 680, 681, 682], "get": [24, 159, 174, 243, 244, 245, 263, 373, 390, 400, 410, 414, 608, 609, 611, 612, 614, 615, 618, 630, 650, 651, 658, 661, 662, 664, 675, 677, 680, 681, 683, 685, 686], "relat": [24, 162, 211, 387, 427, 442, 446, 449, 450, 451, 452, 459, 464, 577, 611, 618, 619, 661, 662, 673, 683, 684], "instac": 24, "nyquist": [24, 58, 166, 167, 168, 429, 494, 576, 618, 664, 669, 677, 681], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 143, 155, 158, 162, 163, 166, 167, 169, 170, 172, 173, 192, 204, 208, 214, 215, 216, 225, 229, 233, 234, 236, 237, 238, 246, 247, 248, 249, 251, 253, 259, 260, 261, 262, 264, 267, 274, 275, 276, 285, 289, 293, 294, 296, 297, 303, 304, 305, 314, 318, 325, 326, 327, 329, 330, 336, 337, 338, 347, 351, 358, 359, 360, 362, 363, 386, 422, 423, 425, 429, 432, 434, 435, 436, 438, 442, 452, 458, 460, 466, 469, 471, 481, 487, 488, 490, 491, 492, 493, 494, 510, 558, 559, 560, 561, 576, 577, 578, 587, 589, 604, 610, 612, 618, 619, 684], "consid": [24, 160, 169, 170, 367, 422, 423, 441, 442, 452, 578, 579, 580, 586, 587, 594, 634, 661], "vmin": [24, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 296, 297, 298, 315, 317, 325, 326, 329, 330, 331, 348, 350, 358, 359, 362, 363, 364, 386, 608, 609, 610, 611, 612, 614, 615, 616, 618, 624, 625, 629, 630, 633, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 664, 669, 670, 671, 676, 677, 679, 680], "vmax": [24, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 296, 297, 298, 315, 317, 325, 326, 329, 330, 331, 348, 350, 358, 359, 362, 363, 364, 386, 608, 609, 610, 611, 612, 614, 615, 616, 618, 624, 625, 629, 630, 633, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 664, 669, 670, 671, 676, 677, 679, 680], "2": [24, 119, 123, 168, 169, 170, 208, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 251, 252, 253, 255, 257, 266, 267, 269, 271, 286, 288, 291, 292, 293, 294, 295, 296, 297, 298, 300, 315, 317, 320, 321, 325, 328, 329, 330, 331, 333, 348, 350, 353, 354, 358, 359, 361, 362, 363, 364, 366, 378, 379, 380, 382, 398, 409, 414, 421, 422, 423, 425, 429, 431, 433, 436, 441, 442, 443, 452, 457, 458, 466, 557, 561, 576, 591, 608, 610, 611, 612, 614, 616, 619, 622, 626, 631, 633, 634, 640, 641, 646, 647, 650, 651, 654, 658, 659, 661, 663, 664, 665, 669, 673, 675, 676, 677, 679, 680, 681, 684], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 390, 425, 469, 483, 484, 486, 487, 488, 490, 605, 611, 617, 618, 662, 676], "field_map": 25, "anoth": [25, 414, 432, 435, 436, 438, 440, 591, 611, 612, 618, 633, 675, 680, 683, 686], "fill": [27, 160, 161, 162, 464, 612, 616, 618, 662, 675, 676], "empti": [28, 398, 409, 459, 460, 555, 557, 560, 609, 618, 675], "control": [29, 158, 159, 163, 166, 382, 384, 385, 425, 457, 458, 614, 615, 616, 658, 679], "singl": [29, 167, 168, 169, 170, 231, 232, 234, 236, 291, 292, 294, 296, 320, 321, 327, 329, 353, 354, 360, 362, 386, 425, 563, 586, 605, 608, 611, 612, 614, 618, 619, 627, 629, 632, 633, 637, 659, 682, 684], "self": [29, 172, 173, 611, 612, 619, 676, 679, 684], "descrip": 29, "exampl": [29, 47, 128, 177, 226, 233, 236, 237, 238, 239, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 390, 414, 418, 419, 420, 424, 425, 466, 479, 483, 586, 608, 609, 610, 611, 612, 613, 615, 616, 618, 619, 624, 625, 626, 629, 630, 631, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 677, 680, 681, 682, 684, 686], "default_config": 29, "modifi": [29, 45, 74, 169, 481, 510, 609, 618, 619, 627, 638, 656, 682, 684], "environment": [29, 608, 609, 673, 683], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 212, 242, 258, 272, 301, 334, 384, 385, 414, 422, 446, 453, 457, 458, 461, 462, 469, 477, 478, 481, 491, 510, 587, 608, 610, 611, 615, 618, 629, 633, 658, 659, 661, 662, 664, 673, 675, 676, 681, 683], "pyart_config": 29, "point": [29, 31, 33, 47, 124, 160, 161, 162, 163, 173, 229, 234, 251, 252, 266, 289, 294, 301, 318, 323, 324, 327, 351, 356, 357, 360, 376, 377, 380, 382, 386, 421, 424, 425, 432, 435, 436, 438, 440, 442, 443, 452, 464, 469, 471, 483, 557, 578, 587, 590, 594, 605, 608, 610, 612, 614, 618, 621, 627, 640, 647, 657, 658, 661, 666, 669, 673, 677, 679, 681, 682], "new": [29, 47, 48, 50, 133, 135, 143, 150, 155, 169, 182, 184, 192, 199, 204, 432, 435, 436, 438, 439, 440, 444, 456, 462, 466, 483, 484, 486, 591, 602, 614, 615, 618, 619, 621, 622, 633, 659, 662, 663, 669, 673, 676, 677, 684, 686], "execut": [29, 618, 626, 631, 637, 656, 666, 667, 672, 682], "full": [29, 62, 169, 170, 382, 498, 614, 616, 618, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671], "permiss": 29, "secur": 29, "do": [29, 45, 74, 166, 171, 208, 209, 386, 387, 481, 510, 612, 614, 615, 616, 618, 619, 630, 661, 662, 675, 676, 677, 679, 680, 683, 684, 686], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 128, 133, 135, 143, 150, 155, 160, 162, 172, 173, 177, 182, 184, 192, 199, 204, 238, 251, 387, 388, 390, 401, 403, 411, 422, 423, 424, 441, 453, 458, 459, 460, 466, 469, 483, 490, 492, 493, 586, 587, 606, 611, 612, 618, 619, 621, 624, 645, 658, 669, 670, 671, 673, 680, 684], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 144, 145, 166, 193, 194, 381, 390, 469, 479, 481, 483, 487, 488, 490, 492, 510, 571, 608, 610, 612, 615, 618, 619, 620, 621, 622, 658, 661, 662, 664, 676, 679, 681, 683, 684], "home": [29, 614, 616, 619, 624, 630, 684, 686], "make": [29, 31, 469, 557, 561, 562, 564, 565, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 622, 633, 641, 650, 658, 661, 669, 673, 675, 676, 683, 684, 686], "adjust": [29, 123, 241, 300, 333, 366, 441, 612, 618, 639, 642, 650, 662], "login": [29, 616], "": [29, 31, 45, 58, 62, 74, 119, 120, 123, 126, 167, 168, 172, 173, 214, 216, 226, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 274, 276, 286, 293, 297, 298, 303, 305, 315, 325, 330, 331, 336, 338, 348, 358, 363, 364, 395, 396, 402, 406, 407, 412, 414, 416, 421, 431, 435, 442, 443, 445, 446, 452, 454, 455, 458, 459, 460, 462, 464, 467, 469, 481, 494, 498, 510, 587, 591, 608, 609, 610, 611, 612, 614, 615, 616, 618, 620, 621, 629, 630, 633, 639, 641, 642, 651, 658, 659, 661, 662, 664, 665, 669, 673, 675, 676, 677, 679, 680, 681, 685], "also": [29, 45, 74, 133, 182, 211, 227, 250, 265, 287, 316, 349, 379, 380, 384, 386, 388, 400, 410, 414, 422, 442, 452, 481, 510, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 629, 633, 658, 661, 662, 673, 675, 679, 681, 683, 684, 685, 686], "shell": 29, "session": 29, "modif": [29, 47, 483, 618], "last": [29, 45, 74, 166, 226, 227, 233, 237, 238, 239, 250, 255, 257, 258, 265, 267, 269, 271, 286, 287, 293, 297, 298, 315, 316, 325, 326, 330, 331, 334, 348, 349, 358, 359, 363, 364, 481, 510, 586, 611, 612, 614, 617, 618, 635, 662, 681], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 138, 160, 161, 162, 167, 168, 173, 187, 251, 489, 497, 505, 509, 523, 526, 533, 537, 608, 610, 611, 612, 614, 615, 616, 618, 619, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673, 684], "interact": [30, 608, 611], "weather": [30, 119, 166, 421, 431, 432, 436, 458, 610, 612, 615, 618, 619, 629, 639, 673, 675, 676, 677, 679, 680, 681, 684], "time": [31, 39, 40, 45, 74, 159, 163, 166, 214, 216, 226, 228, 233, 237, 238, 239, 274, 276, 286, 288, 293, 297, 298, 303, 305, 315, 317, 325, 326, 330, 331, 336, 338, 348, 350, 358, 359, 363, 364, 371, 372, 382, 384, 385, 414, 417, 425, 432, 435, 436, 438, 439, 440, 441, 453, 455, 469, 477, 478, 481, 510, 581, 584, 608, 609, 610, 612, 614, 616, 618, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 675, 681, 686], "origin_latitud": [31, 469], "origin_longitud": [31, 469], "origin_altitud": [31, 469], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 126, 212, 214, 223, 226, 228, 231, 233, 236, 237, 238, 239, 241, 251, 253, 255, 257, 267, 269, 271, 272, 274, 283, 286, 288, 291, 293, 296, 297, 298, 300, 301, 303, 312, 315, 317, 320, 323, 325, 329, 330, 331, 333, 334, 336, 345, 348, 350, 353, 356, 358, 362, 363, 364, 366, 414, 418, 419, 420, 421, 422, 423, 424, 425, 431, 442, 452, 455, 456, 464, 469, 475, 477, 493, 501, 529, 557, 608, 610, 611, 612, 615, 616, 622, 633, 640, 641, 650, 651, 658, 659, 661, 662], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 121, 160, 162, 172, 173, 224, 284, 313, 346, 376, 386, 387, 418, 419, 420, 421, 423, 424, 425, 427, 430, 441, 442, 446, 449, 450, 451, 452, 455, 469, 475, 477, 481, 493, 501, 510, 529, 557, 615, 624, 634, 648, 650, 651, 661, 662, 664, 676], "radar_latitud": [31, 469, 588, 601], "radar_longitud": [31, 469, 588, 601], "radar_altitud": [31, 469], "radar_tim": [31, 469], "radar_nam": [31, 469], "store": [31, 45, 74, 166, 167, 168, 390, 425, 430, 432, 435, 436, 438, 439, 440, 469, 481, 510, 608, 610, 612, 616, 618, 629, 659, 673, 676, 679, 681, 686], "rectilinear": [31, 469], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 126, 376, 413, 414, 421, 424, 425, 469, 471, 477, 481, 510, 627, 632, 637, 640, 673, 674, 682], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 126, 226, 233, 237, 238, 239, 255, 257, 267, 269, 271, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 385, 413, 414, 416, 421, 425, 439, 443, 469, 471, 477, 481, 492, 510, 557, 576, 608, 610, 611, 612, 618, 623, 627, 630, 632, 633, 634, 635, 636, 659, 673, 679, 681], "section": [31, 45, 47, 74, 226, 251, 286, 315, 348, 423, 425, 469, 481, 483, 510, 579, 580, 608, 612, 613, 617, 618, 619, 627, 638, 656, 658, 661, 662, 673, 682, 684], "To": [31, 47, 171, 207, 208, 209, 210, 384, 385, 387, 469, 483, 605, 610, 615, 616, 619, 621, 662, 664, 673, 676, 679, 683, 684, 686], "creat": [31, 42, 45, 47, 50, 74, 166, 167, 168, 169, 171, 207, 208, 209, 210, 211, 212, 225, 239, 242, 258, 272, 285, 298, 301, 314, 326, 331, 334, 347, 359, 364, 379, 384, 385, 386, 387, 388, 424, 425, 432, 435, 436, 438, 439, 440, 462, 467, 469, 479, 481, 483, 486, 510, 599, 600, 602, 608, 612, 614, 618, 619, 624, 625, 627, 630, 633, 635, 636, 638, 639, 641, 655, 656, 657, 661, 662, 666, 671, 673, 674, 676, 679, 682, 684], "legaci": [31, 430, 469], "from_legacy_paramet": [31, 469], "ax": [31, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 358, 359, 361, 362, 363, 364, 365, 366, 418, 419, 420, 442, 452, 456, 464, 469, 608, 609, 610, 611, 612, 614, 615, 616, 618, 624, 625, 629, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 658, 659, 660, 661, 662, 663, 664, 665, 669, 677], "moment": [31, 39, 45, 74, 117, 165, 166, 167, 168, 171, 208, 209, 378, 379, 380, 425, 463, 469, 477, 481, 510, 553, 587, 611, 618, 630, 638, 656, 673, 680, 682], "describ": [31, 45, 74, 171, 207, 208, 209, 210, 252, 266, 452, 469, 481, 510, 614, 661, 662], "geograph": [31, 45, 56, 74, 122, 123, 124, 125, 126, 301, 326, 334, 359, 385, 425, 469, 481, 492, 510, 612, 673], "origin": [31, 39, 166, 167, 168, 212, 272, 301, 334, 382, 384, 385, 390, 392, 421, 425, 452, 469, 477, 579, 580, 608, 609, 610, 612, 618, 619, 633, 634, 635, 636, 658, 660, 661, 662, 684], "distanc": [31, 39, 57, 119, 120, 121, 226, 237, 286, 297, 315, 330, 348, 363, 414, 415, 418, 419, 420, 422, 423, 424, 425, 432, 434, 438, 455, 457, 460, 469, 477, 493, 577, 579, 580, 588, 589, 590, 601, 608, 609, 610, 633, 643, 648, 649, 650], "axi": [31, 39, 45, 74, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 250, 251, 252, 253, 255, 257, 264, 265, 266, 267, 269, 271, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 315, 316, 317, 318, 319, 320, 321, 325, 326, 328, 329, 330, 331, 333, 348, 349, 350, 351, 352, 353, 354, 358, 359, 361, 362, 363, 364, 366, 376, 386, 469, 477, 481, 510, 578, 608, 611, 612, 616, 624, 640, 651, 658, 661, 665, 681], "dimension": [31, 39, 166, 168, 421, 443, 452, 464, 469, 477, 633, 658, 661, 662], "space": [31, 45, 74, 124, 228, 288, 317, 350, 387, 425, 441, 442, 452, 455, 469, 481, 510, 608, 611, 630, 661, 675], "along": [31, 167, 170, 251, 254, 255, 256, 257, 268, 269, 270, 271, 439, 469, 577, 578, 579, 580, 589, 590, 602, 604, 610, 611, 612, 618, 661, 669], "three": [31, 168, 171, 209, 386, 443, 452, 464, 469, 611, 621, 658, 661, 662], "repeat": [31, 469], "throughout": [31, 469, 658], "nz": [31, 469], "nx": [31, 469], "ny": [31, 469], "dimens": [31, 166, 376, 422, 423, 425, 429, 430, 442, 452, 453, 455, 458, 460, 464, 469, 576, 602, 608, 611, 612, 618, 634, 659, 661, 662, 675, 679, 681], "transform": [31, 45, 74, 122, 123, 124, 125, 126, 231, 238, 291, 301, 320, 334, 353, 359, 385, 425, 441, 457, 469, 481, 510, 610, 612, 615, 618, 639, 661, 662], "proj": [31, 45, 74, 122, 124, 125, 264, 334, 469, 481, 510, 618], "pyart_aeqd": [31, 45, 74, 122, 124, 125, 469, 481, 510], "nativ": [31, 45, 74, 122, 124, 125, 370, 425, 430, 469, 481, 510, 618], "azimuth": [31, 45, 51, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 126, 212, 213, 226, 228, 231, 233, 237, 238, 239, 255, 257, 267, 269, 271, 272, 273, 286, 288, 291, 293, 297, 298, 301, 302, 315, 317, 320, 325, 326, 330, 331, 334, 335, 348, 350, 353, 358, 359, 363, 364, 382, 386, 423, 430, 432, 438, 439, 460, 466, 467, 469, 481, 487, 491, 493, 503, 510, 531, 577, 579, 580, 586, 588, 589, 605, 611, 612, 618, 619, 653, 655, 659, 675, 681, 684], "equidist": [31, 45, 74, 122, 123, 124, 125, 126, 231, 291, 320, 353, 359, 386, 425, 469, 481, 510, 612], "pyproj": [31, 45, 74, 122, 124, 125, 469, 481, 510, 618, 683], "projparam": [31, 34, 45, 74, 122, 124, 125, 469, 472, 481, 510], "special": [31, 45, 74, 469, 481, 510, 612], "_include_lon_0_lat_0": [31, 45, 74, 469, 481, 510], "remov": [31, 45, 56, 57, 74, 160, 161, 162, 166, 171, 207, 208, 209, 210, 226, 233, 237, 238, 239, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 391, 397, 398, 404, 408, 409, 442, 443, 452, 469, 481, 492, 493, 510, 610, 612, 615, 616, 618, 619, 624, 635, 641, 650, 658, 661, 677, 680, 684], "interpret": [31, 45, 74, 167, 168, 385, 433, 469, 481, 510, 592, 593, 612, 658], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 122, 123, 124, 126, 212, 231, 232, 251, 252, 253, 254, 256, 257, 264, 266, 268, 270, 271, 272, 291, 292, 301, 320, 321, 322, 324, 326, 334, 353, 354, 355, 357, 359, 425, 432, 438, 440, 469, 471, 474, 477, 481, 492, 510, 577, 588, 589, 590, 601, 608, 610, 611, 612, 615, 616, 627, 628, 631, 640, 647, 654, 659, 661, 662, 675, 676, 681, 682], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 122, 123, 124, 126, 212, 231, 232, 251, 252, 253, 254, 255, 256, 264, 266, 268, 269, 270, 272, 291, 292, 301, 320, 321, 322, 324, 326, 334, 353, 354, 355, 357, 359, 425, 432, 438, 440, 469, 471, 474, 477, 481, 492, 510, 577, 588, 589, 590, 601, 608, 610, 611, 612, 615, 616, 627, 628, 631, 640, 647, 654, 659, 661, 662, 675, 676, 681, 682], "ad": [31, 45, 47, 74, 170, 172, 173, 258, 324, 357, 422, 424, 441, 442, 452, 469, 481, 483, 510, 561, 609, 611, 614, 616, 618, 619, 650, 651, 675, 676, 683, 684], "lon_0": [31, 45, 74, 123, 126, 326, 359, 469, 481, 510, 647], "lat_0": [31, 45, 74, 123, 126, 326, 359, 469, 481, 510, 647], "get_projparam": [31, 469], "evalu": [31, 390, 392, 447, 469, 614, 618], "locat": [31, 33, 45, 55, 56, 57, 74, 212, 226, 227, 228, 231, 232, 233, 234, 235, 237, 238, 239, 250, 251, 253, 255, 257, 264, 265, 267, 269, 271, 272, 286, 287, 288, 291, 292, 293, 294, 295, 297, 298, 301, 315, 316, 317, 320, 321, 323, 325, 326, 327, 328, 330, 331, 334, 348, 349, 350, 353, 354, 356, 358, 359, 360, 361, 363, 364, 378, 379, 381, 387, 414, 421, 424, 425, 469, 471, 481, 491, 492, 493, 510, 557, 571, 577, 588, 589, 590, 608, 609, 610, 612, 614, 618, 619, 645, 647, 659, 669, 670, 671, 673, 679, 683, 684], "up": [31, 45, 74, 133, 135, 143, 150, 155, 161, 162, 182, 184, 192, 199, 204, 422, 423, 427, 430, 436, 443, 446, 449, 450, 461, 469, 481, 510, 576, 609, 610, 614, 616, 617, 618, 621, 658, 661, 677, 681, 685], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 251, 382, 388, 439, 453, 469, 481, 496, 497, 508, 509, 510, 525, 526, 536, 537, 582, 608, 609, 610, 611, 612, 614, 615, 616, 619, 629, 639, 640, 650, 651, 673, 675, 684, 685], "collect": [31, 143, 155, 192, 204, 372, 378, 379, 380, 382, 413, 424, 425, 469, 611, 612, 619, 629, 644, 659, 673, 684, 685, 686], "nradar": [31, 469], "whose": [31, 381, 420, 469, 608], "wa": [31, 56, 57, 143, 167, 168, 192, 226, 233, 237, 238, 239, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 469, 492, 493, 591, 608, 610, 612, 614, 615, 616, 618, 673, 686], "projection_proj": [31, 469], "instanc": [31, 42, 48, 166, 167, 168, 226, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 387, 388, 430, 469, 484, 591, 595, 600, 610, 612, 618], "valueerror": [31, 32, 46, 47, 469, 470, 482, 483, 612], "point_z": [31, 385, 469, 658], "point_x": [31, 385, 469], "point_i": [31, 385, 469], "func": [31, 469, 611, 618], "init_point_x_y_z": [31, 469], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 469, 474, 475, 481, 492, 500, 501, 502, 510, 528, 529, 530, 680], "point_latitud": [31, 385, 469], "point_longitud": [31, 385, 469], "perform": [31, 45, 56, 57, 58, 74, 133, 135, 143, 150, 155, 165, 166, 167, 168, 170, 182, 184, 192, 199, 204, 226, 231, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 291, 293, 296, 297, 298, 315, 320, 325, 326, 329, 330, 331, 334, 348, 353, 358, 359, 362, 363, 364, 378, 381, 386, 422, 423, 432, 435, 436, 438, 452, 458, 469, 481, 492, 493, 494, 510, 605, 611, 612, 623, 624, 625, 627, 635, 636, 640, 673], "invers": [31, 45, 74, 466, 469, 481, 510, 608], "rel": [31, 45, 74, 161, 207, 238, 324, 357, 425, 469, 481, 510, 608, 618, 619, 662, 681, 684], "init_point_longitude_latitud": [31, 469], "point_altitud": [31, 35, 385, 469, 473], "init_point_altitud": [31, 469], "init": [31, 242, 258, 390, 469, 588, 616, 618], "field_dict": [32, 457, 470], "replace_exist": [32, 46, 47, 48, 470, 482, 483, 484, 614, 618, 619, 661, 662, 664, 669, 676, 677, 684], "add": [32, 46, 47, 169, 173, 226, 228, 233, 236, 237, 238, 239, 251, 252, 253, 255, 257, 264, 266, 267, 269, 271, 286, 288, 293, 296, 297, 298, 315, 317, 325, 326, 329, 330, 331, 348, 350, 358, 359, 362, 363, 364, 432, 435, 436, 438, 440, 457, 470, 482, 483, 609, 610, 611, 615, 618, 619, 633, 639, 640, 641, 650, 651, 653, 659, 661, 662, 663, 664, 669, 677, 683, 684, 686], "replac": [32, 46, 47, 48, 133, 135, 143, 150, 155, 167, 168, 182, 184, 192, 199, 204, 470, 482, 483, 484, 607, 615, 616, 618], "overwrit": [32, 470, 586], "alreadi": [32, 46, 47, 470, 482, 483], "level": [33, 39, 41, 42, 45, 62, 74, 161, 162, 246, 247, 248, 249, 253, 255, 257, 259, 260, 261, 262, 267, 269, 271, 378, 379, 380, 386, 387, 455, 464, 466, 471, 477, 481, 498, 510, 587, 608, 610, 611, 618, 619, 650, 651, 654, 658, 660, 670, 673, 679, 681, 684], "height": [33, 39, 41, 42, 158, 159, 161, 162, 163, 174, 207, 253, 267, 326, 359, 422, 423, 425, 428, 432, 435, 436, 438, 440, 442, 443, 452, 453, 457, 461, 464, 466, 467, 471, 477, 600, 608, 611, 612, 614, 618, 619, 639, 648, 658, 659, 665, 680, 684], "determin": [33, 45, 74, 158, 166, 167, 168, 251, 253, 255, 257, 264, 267, 269, 271, 326, 359, 367, 370, 378, 379, 382, 387, 388, 429, 442, 445, 446, 447, 449, 450, 452, 464, 466, 471, 481, 510, 586, 587, 594, 600, 603, 611, 612, 618, 619, 661, 669, 684], "same": [33, 45, 47, 55, 56, 57, 74, 123, 126, 135, 150, 166, 184, 199, 238, 326, 359, 376, 382, 386, 387, 388, 425, 442, 443, 452, 455, 461, 471, 481, 483, 491, 492, 493, 510, 561, 586, 588, 601, 605, 608, 612, 615, 616, 619, 629, 650, 651, 658, 661, 662, 675, 680, 684, 686], "interpol": [33, 57, 120, 124, 226, 233, 237, 238, 239, 251, 255, 257, 267, 269, 271, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 372, 378, 424, 425, 432, 435, 436, 438, 440, 453, 460, 461, 466, 471, 493, 600, 612, 618, 619, 630, 661, 662, 679, 684], "extrapol": [33, 120, 124, 226, 233, 237, 238, 239, 255, 257, 267, 269, 271, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 471, 612], "boundari": [33, 120, 124, 170, 244, 245, 264, 359, 460, 471, 561, 612, 663], "center": [33, 45, 57, 74, 119, 120, 121, 123, 124, 126, 167, 226, 231, 233, 237, 238, 239, 252, 254, 255, 256, 257, 266, 267, 268, 269, 270, 271, 286, 291, 293, 297, 298, 301, 315, 320, 325, 326, 330, 331, 348, 353, 358, 359, 363, 364, 378, 380, 418, 419, 420, 432, 435, 436, 438, 440, 471, 481, 493, 510, 557, 561, 576, 608, 610, 611, 612, 614, 615, 639, 669, 677, 681], "2d": [33, 55, 56, 57, 120, 376, 386, 457, 460, 471, 491, 492, 493, 576, 608, 612, 627, 632, 633, 637, 658, 681, 682], "point_": [36, 37, 474, 475], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 144, 145, 193, 194, 415, 417, 466, 476, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 608, 612, 619, 684], "xarrai": [39, 242, 251, 253, 422, 423, 477, 577, 590, 608, 618, 654, 659, 669, 673, 683], "netcdf4": [40, 379, 384, 385, 478, 608, 609, 618, 648, 673, 675, 683, 686], "arm_time_vari": [40, 384, 385, 478], "arm_alt_lat_lon_vari": [40, 385, 478], "save": [40, 214, 226, 228, 233, 237, 238, 239, 246, 259, 274, 286, 288, 293, 297, 298, 303, 315, 317, 325, 326, 330, 331, 336, 348, 350, 358, 359, 363, 364, 385, 387, 478, 612, 614, 615, 673, 674], "netcdf4_class": [40, 384, 385, 478], "netcdf3_class": [40, 384, 385, 478], "netcdf3_64bit": [40, 384, 385, 478], "base_tim": [40, 384, 385, 478, 611, 659], "time_offset": [40, 384, 385, 478, 611, 659], "alt": [40, 56, 385, 478, 492, 611, 612, 616, 618], "lat": [40, 56, 122, 123, 124, 125, 126, 251, 252, 253, 254, 255, 256, 257, 266, 268, 269, 270, 271, 322, 324, 326, 355, 357, 385, 386, 432, 438, 440, 478, 492, 608, 611, 612, 615, 616, 618, 640, 641, 654, 679], "lon": [40, 56, 122, 123, 124, 125, 126, 251, 252, 253, 254, 255, 256, 257, 266, 268, 269, 270, 271, 322, 324, 326, 355, 357, 385, 386, 432, 438, 440, 478, 492, 608, 611, 612, 615, 616, 618, 641, 654], "speed": [41, 42, 425, 466, 467, 576, 611, 612, 614, 618, 619, 665, 684], "direct": [41, 62, 382, 458, 466, 467, 498, 618, 619, 665, 684], "horizont": [41, 42, 43, 44, 45, 74, 160, 164, 165, 166, 226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 265, 267, 269, 271, 286, 287, 288, 293, 297, 298, 315, 316, 317, 325, 326, 330, 331, 348, 349, 350, 358, 359, 363, 364, 371, 372, 422, 423, 466, 481, 510, 600, 610, 611, 614, 618, 619, 641, 651, 670, 681, 684], "wind": [41, 42, 43, 44, 166, 167, 371, 372, 466, 467, 600, 610, 611, 612, 614, 618, 619, 665, 684], "profil": [41, 166, 371, 372, 432, 435, 436, 438, 440, 453, 459, 460, 461, 462, 577, 600, 618, 619, 625, 627, 657, 658, 666, 682, 684], "1d": [41, 42, 120, 124, 457, 578, 608, 618, 681], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 126, 212, 272, 301, 323, 326, 334, 356, 359, 414, 415, 417, 418, 419, 420, 421, 424, 425, 428, 442, 452, 455, 458, 461, 464, 466, 492, 493, 494, 557, 588, 601, 611, 612, 618, 619, 633, 665, 679, 681, 684], "abov": [41, 42, 45, 47, 74, 130, 131, 146, 160, 161, 162, 166, 169, 170, 171, 172, 173, 179, 180, 195, 207, 208, 209, 210, 231, 232, 291, 292, 320, 321, 353, 354, 367, 425, 428, 441, 442, 452, 466, 481, 483, 510, 577, 586, 587, 589, 590, 608, 609, 610, 611, 618, 619, 621, 627, 633, 649, 651, 657, 658, 665, 666, 669, 673, 675, 677, 682, 684, 686], "sea": [41, 42, 45, 74, 466, 481, 510, 611, 618, 619, 684], "were": [41, 42, 133, 135, 143, 182, 184, 192, 466, 610, 612, 614, 615, 619, 684], "sampl": [41, 42, 159, 163, 466, 467, 468, 562, 564, 565, 587, 608, 610, 611, 616, 618, 619, 629, 630, 639, 660, 663, 665, 673, 684], "per": [41, 42, 43, 44, 58, 166, 425, 466, 494, 558, 559, 560, 619, 684], "second": [41, 42, 43, 44, 47, 58, 119, 166, 382, 390, 414, 460, 466, 483, 494, 586, 597, 598, 608, 611, 614, 619, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 680, 681, 684], "north": [41, 45, 74, 251, 253, 264, 326, 359, 481, 510, 577, 590, 608, 611, 612, 643, 681], "east": [41, 226, 237, 251, 286, 297, 315, 330, 348, 363, 577, 590, 608, 611, 612, 643], "u_wind": [41, 42, 466, 467, 619, 665, 684], "compon": [41, 42, 43, 44, 441, 611, 619, 634, 684], "v_wind": [41, 42, 466, 467, 619, 665, 684], "classmethod": 42, "_rang": [45, 74, 434, 481, 510], "scan_typ": [45, 74, 212, 225, 272, 285, 301, 314, 334, 347, 481, 510, 616, 681], "sweep_numb": [45, 74, 481, 510, 611, 618, 648, 675, 681], "sweep_mod": [45, 74, 373, 481, 510, 611, 618, 675, 681], "fixed_angl": [45, 74, 212, 272, 301, 334, 481, 510, 611, 616, 618, 648, 649, 653, 675, 681], "sweep_start_ray_index": [45, 74, 481, 510, 611, 675, 681], "sweep_end_ray_index": [45, 74, 481, 510, 611, 675, 681], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 121, 212, 226, 228, 233, 237, 238, 239, 255, 257, 267, 269, 271, 272, 286, 288, 293, 297, 298, 301, 315, 317, 325, 326, 330, 331, 334, 348, 350, 358, 359, 363, 364, 382, 422, 435, 438, 439, 460, 481, 488, 493, 504, 510, 532, 580, 586, 594, 608, 611, 612, 614, 615, 618, 633, 634, 660, 675, 681], "altitude_agl": [45, 74, 481, 510, 611, 681], "target_scan_r": [45, 74, 481, 510, 618, 681], "rays_are_index": [45, 74, 481, 510], "ray_angle_r": [45, 74, 481, 510], "scan_rat": [45, 74, 388, 481, 510, 618, 681], "antenna_transit": [45, 56, 57, 74, 143, 155, 192, 204, 226, 233, 237, 238, 239, 272, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 481, 492, 493, 510, 612, 681], "instrument_paramet": [45, 74, 166, 388, 457, 481, 510, 611, 614, 664, 677, 681], "radar_calibr": [45, 74, 481, 510, 681], "rotat": [45, 74, 212, 481, 510], "tilt": [45, 74, 212, 238, 326, 359, 462, 481, 510, 612, 618, 630, 647, 654], "roll": [45, 74, 212, 382, 481, 510, 599, 604], "drift": [45, 74, 212, 481, 510], "pitch": [45, 74, 212, 481, 510], "georefs_appli": [45, 74, 481, 510], "antenna": [45, 56, 57, 74, 119, 120, 121, 143, 155, 192, 204, 207, 210, 226, 233, 237, 238, 239, 272, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 430, 439, 481, 492, 493, 510, 612, 618, 623, 627, 632, 633, 634, 635, 636, 673, 679, 681], "structur": [45, 74, 388, 441, 452, 464, 481, 510, 616, 629, 661, 662, 680], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 128, 162, 167, 168, 171, 177, 207, 208, 209, 210, 239, 298, 331, 364, 386, 420, 424, 425, 436, 441, 442, 452, 458, 481, 486, 487, 488, 490, 491, 492, 493, 494, 510, 591, 610, 611, 612, 615, 618, 619, 623, 626, 627, 629, 669, 673, 677, 680, 681, 682, 684], "global": [45, 74, 481, 510, 608, 634, 681, 683], "4": [45, 74, 119, 120, 373, 376, 421, 427, 441, 457, 461, 481, 510, 608, 609, 610, 611, 615, 617, 619, 629, 630, 634, 637, 639, 648, 649, 650, 651, 653, 654, 658, 661, 662, 664, 665, 669, 670, 673, 680, 684], "repres": [45, 74, 166, 422, 423, 457, 481, 510, 558, 559, 605, 615, 618, 658, 662], "under": [45, 74, 166, 167, 168, 425, 481, 510, 615, 618, 619, 661, 662, 673, 683, 684], "sub": [45, 74, 481, 510, 608, 618], "convent": [45, 74, 166, 481, 510, 608, 611, 612, 629, 673, 681], "meta_group": [45, 74, 481, 510, 681], "scan": [45, 74, 117, 158, 159, 163, 166, 167, 168, 169, 212, 225, 226, 228, 239, 272, 285, 286, 288, 298, 301, 314, 315, 317, 331, 334, 347, 348, 350, 364, 378, 422, 430, 481, 510, 553, 558, 559, 586, 588, 594, 600, 605, 608, 609, 610, 611, 615, 618, 630, 633, 644, 645, 655, 658], "ppi": [45, 74, 167, 168, 169, 170, 225, 229, 233, 285, 289, 293, 314, 318, 325, 326, 347, 351, 358, 359, 422, 423, 435, 438, 460, 481, 510, 558, 559, 563, 566, 569, 579, 580, 586, 608, 609, 612, 615, 618, 627, 632, 637, 638, 641, 642, 654, 656, 668, 670, 672, 673, 681, 682], "rhi": [45, 74, 225, 226, 237, 285, 286, 297, 314, 315, 330, 347, 348, 363, 423, 435, 438, 460, 481, 510, 559, 567, 570, 579, 580, 586, 609, 618, 627, 638, 656, 658, 673, 681, 682], "sector": [45, 74, 481, 510, 608, 618, 681], "multipl": [45, 74, 441, 481, 510, 609, 610, 618, 619, 627, 632, 638, 650, 656, 680, 682, 684, 686], "mode": [45, 62, 74, 369, 431, 439, 481, 498, 510, 608, 611, 618, 619, 658, 681, 683, 684], "ground": [45, 74, 430, 436, 481, 510, 611, 612, 616, 629], "target": [45, 74, 386, 481, 510, 562, 564, 565, 566, 567, 568, 569, 570, 577, 588, 589, 590, 601, 611, 681], "angl": [45, 51, 52, 74, 119, 120, 121, 212, 226, 238, 272, 286, 301, 315, 334, 348, 435, 438, 439, 460, 462, 481, 487, 488, 510, 572, 573, 574, 575, 577, 579, 580, 586, 588, 589, 597, 598, 605, 608, 611, 618, 634, 653, 655, 665, 675, 681], "thr": [45, 74, 481, 510], "index": [45, 60, 74, 89, 171, 209, 239, 253, 255, 257, 267, 269, 271, 298, 331, 364, 386, 414, 430, 462, 481, 496, 510, 525, 608, 610, 611, 612, 614, 615, 618, 674], "rays_per_sweep": [45, 66, 74, 94, 481, 502, 510, 530, 558, 559], "upon": [45, 74, 171, 207, 208, 209, 210, 481, 510, 610, 614, 618], "prior": [45, 47, 74, 170, 172, 173, 226, 233, 236, 237, 238, 239, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 382, 481, 483, 510, 612, 621, 630, 673], "init_rays_per_sweep": [45, 74, 481, 510], "intend": [45, 74, 436, 481, 510, 615], "rate": [45, 74, 427, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 457, 481, 510, 618, 661, 662], "whether": [45, 74, 133, 182, 373, 421, 481, 510, 611, 612, 680], "regular": [45, 74, 387, 432, 435, 436, 438, 440, 481, 510, 612, 616, 639, 658], "angular": [45, 74, 481, 510, 576, 597, 598], "resolut": [45, 74, 226, 228, 229, 233, 234, 237, 238, 239, 264, 286, 288, 289, 293, 294, 297, 298, 315, 317, 318, 325, 326, 327, 330, 331, 348, 350, 351, 358, 359, 360, 363, 364, 378, 425, 432, 435, 436, 438, 440, 441, 442, 452, 458, 464, 481, 510, 561, 610, 611, 612, 616, 630, 644, 647, 669, 670, 677, 679, 680], "express": [45, 74, 481, 510], "360": [45, 74, 169, 170, 327, 360, 481, 510, 586, 618, 665, 675, 681], "represent": [45, 74, 481, 510], "forbidden": [45, 74, 481, 510], "plane": [45, 74, 386, 422, 423, 481, 510, 608, 681], "180": [45, 74, 121, 123, 481, 510, 586, 608, 610, 611, 619, 662, 675, 684], "gate_z": [45, 57, 74, 481, 493, 510], "gate_x": [45, 57, 74, 481, 493, 510], "gate_i": [45, 57, 74, 481, 493, 510], "system": [45, 74, 122, 123, 124, 172, 173, 369, 378, 386, 416, 421, 481, 510, 615, 618, 619, 683, 684], "assum": [45, 74, 119, 120, 166, 169, 455, 458, 460, 461, 481, 510, 586, 610, 614], "earth": [45, 74, 119, 120, 123, 126, 481, 510, 588, 601, 608, 612], "radiu": [45, 74, 119, 120, 123, 126, 418, 419, 420, 421, 424, 425, 442, 452, 464, 481, 510, 588, 601, 661, 679], "model": [45, 74, 119, 120, 167, 379, 385, 441, 481, 510, 611, 663], "init_gate_x_y_z": [45, 74, 481, 510], "gate_latitud": [45, 56, 64, 74, 92, 481, 492, 500, 510, 528, 608], "gate_longitud": [45, 56, 64, 74, 92, 481, 492, 500, 510, 528, 608, 675], "init_gate_longitude_latitud": [45, 74, 481, 510, 675], "gate_altitud": [45, 56, 63, 74, 91, 481, 492, 499, 510, 527, 608], "init_gate_altitud": [45, 74, 481, 510, 675], "actual": [45, 74, 382, 386, 421, 441, 481, 510, 615, 686], "flag": [45, 74, 166, 272, 382, 459, 460, 464, 481, 510, 594, 608, 616, 618, 686], "transit": [45, 56, 57, 74, 143, 155, 171, 192, 204, 208, 209, 226, 233, 237, 238, 239, 272, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 436, 438, 459, 481, 492, 493, 510, 612, 618], "ye": [45, 74, 166, 481, 510], "about": [45, 74, 481, 510, 608, 610, 616, 617, 618], "aircraft": [45, 74, 238, 382, 481, 510, 577], "longitudin": [45, 74, 238, 249, 257, 261, 262, 271, 481, 510], "vertic": [45, 74, 165, 166, 226, 227, 228, 233, 237, 238, 239, 247, 250, 251, 253, 255, 257, 265, 267, 269, 271, 286, 287, 288, 293, 297, 298, 315, 316, 317, 325, 326, 330, 331, 348, 349, 350, 358, 359, 363, 364, 386, 422, 423, 432, 435, 436, 438, 440, 443, 455, 457, 462, 481, 510, 577, 594, 605, 608, 610, 615, 618, 651, 658, 663, 664, 665, 670], "orthogon": [45, 74, 481, 510], "platform": [45, 74, 481, 510, 608, 621], "right": [45, 74, 481, 510, 610, 613, 614, 615, 616, 618, 639, 640, 658, 673], "wing": [45, 74, 481, 510], "down": [45, 74, 481, 510, 606, 610], "track": [45, 74, 481, 510, 608, 612, 615, 618], "compass": [45, 74, 481, 510], "clockwis": [45, 74, 481, 510], "nose": [45, 74, 481, 510, 618], "had": [45, 74, 387, 481, 510, 616, 618, 629, 686], "georefer": [45, 74, 481, 510], "lead": [45, 74, 481, 510, 612, 633], "centric": [45, 74, 481, 510], "avaiabl": [45, 74, 481, 510], "radar_paramet": [45, 74, 481, 510, 611], "subconvent": [45, 74, 481, 510], "calibr": [45, 74, 445, 481, 510, 611], "ngate": [45, 55, 74, 481, 491, 510, 558, 559, 560, 608, 618, 675, 681], "nrai": [45, 55, 74, 434, 481, 491, 510, 560, 589, 618, 675, 681], "nsweep": [45, 74, 481, 510, 558, 559, 634, 648, 649, 665, 681], "loos": [46, 47, 482, 483, 596], "existing_field_nam": [47, 483], "note": [47, 119, 133, 135, 143, 150, 155, 162, 166, 170, 182, 184, 192, 199, 204, 253, 326, 373, 376, 377, 387, 422, 423, 425, 441, 455, 457, 458, 466, 483, 586, 609, 612, 616, 618, 619, 629, 630, 634, 641, 661, 662, 664, 683, 684], "made": [47, 384, 429, 483, 605, 609, 611, 612, 615, 619, 620, 684], "done": [47, 166, 170, 464, 483, 619, 621, 675, 683, 684, 686], "both": [47, 166, 171, 209, 370, 455, 456, 457, 483, 608, 612, 615, 618, 619, 630, 633, 634, 636, 640, 655, 662, 673, 679, 680, 683, 684], "numpi": [47, 135, 150, 163, 184, 199, 483, 596, 608, 610, 611, 612, 614, 616, 618, 619, 621, 624, 633, 635, 639, 642, 647, 650, 651, 653, 658, 659, 661, 662, 663, 664, 665, 673, 675, 676, 677, 679, 680, 681, 683, 684, 686], "see": [47, 120, 128, 166, 177, 225, 239, 251, 254, 256, 264, 268, 270, 285, 298, 314, 326, 331, 347, 359, 364, 376, 384, 385, 425, 441, 442, 452, 455, 464, 483, 608, 610, 612, 614, 616, 618, 619, 629, 630, 639, 658, 661, 662, 673, 675, 677, 679, 680, 684], "how": [47, 382, 384, 385, 483, 608, 609, 610, 611, 612, 614, 616, 618, 620, 629, 630, 639, 640, 641, 658, 664, 673, 676, 679, 680, 686], "reflectivity_copi": [47, 483], "gatefilt": [48, 160, 161, 162, 166, 167, 168, 169, 170, 171, 173, 207, 208, 209, 210, 226, 233, 236, 237, 238, 239, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 414, 424, 425, 430, 458, 459, 460, 462, 466, 467, 484, 608, 610, 612, 614, 616, 618, 619, 625, 633, 635, 636, 640, 658, 660, 669, 674, 677, 684], "updat": [48, 158, 484, 586, 609, 613, 614, 618, 619, 641, 661, 673, 684], "mask": [48, 133, 135, 139, 143, 150, 154, 155, 158, 166, 167, 168, 169, 171, 182, 184, 188, 192, 199, 203, 204, 207, 208, 209, 210, 226, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 378, 379, 380, 425, 430, 432, 435, 436, 438, 440, 443, 461, 484, 561, 591, 596, 612, 616, 618, 624, 633, 635, 658, 661, 662, 664, 669, 674, 675, 676, 681], "filter": [48, 128, 133, 135, 143, 150, 155, 166, 167, 168, 169, 170, 171, 226, 233, 237, 238, 239, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 414, 424, 425, 429, 458, 459, 460, 484, 608, 610, 612, 614, 616, 618, 625, 633, 635, 636, 640, 658, 660, 669, 677, 680], "equal": [48, 122, 124, 125, 134, 135, 141, 149, 150, 153, 158, 167, 183, 184, 190, 198, 199, 202, 359, 376, 387, 441, 464, 466, 484, 586, 612, 642, 658, 661, 662, 663, 680], "condit": [48, 128, 133, 135, 143, 150, 155, 166, 177, 182, 184, 192, 199, 204, 387, 447, 484, 608, 625, 676, 680], "append": [48, 484, 614, 615, 616, 618, 665], "filtered_": [48, 484], "prefix": [48, 479, 484], "check": [49, 58, 77, 167, 168, 169, 170, 381, 429, 441, 461, 485, 494, 513, 588, 601, 605, 610, 611, 614, 616, 618, 619, 621, 673, 683, 684, 685], "keyerror": [49, 77, 397, 398, 408, 409, 485, 513, 683], "array_lik": [50, 486, 593], "view": [51, 52, 54, 390, 395, 396, 402, 406, 407, 412, 487, 488, 490, 608, 616, 640, 677, 679, 681], "possibl": [51, 52, 54, 382, 487, 488, 490, 587, 612, 614, 616, 618, 622, 639, 658, 661, 662, 677, 679], "underli": [51, 52, 54, 226, 233, 237, 238, 239, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 370, 487, 488, 490, 612, 673], "get_gate_x_y_z": [54, 490, 650, 651], "obtain": [54, 57, 490, 493, 616, 619, 665, 675, 684], "plot": [54, 57, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 432, 435, 436, 438, 440, 462, 467, 490, 493, 608, 609, 618, 624, 625, 629, 630, 633, 634, 635, 636, 656, 657, 658, 659, 661, 662, 664, 666, 668, 669, 672, 673, 675, 676, 677, 679, 680, 682], "correct": [54, 57, 177, 207, 208, 209, 210, 376, 453, 458, 490, 493, 563, 608, 610, 614, 618, 619, 622, 625, 626, 630, 641, 658, 663, 669, 673, 677, 682, 684], "spatial": [54, 57, 166, 490, 493, 608, 679], "context": [54, 57, 490, 493, 610, 659], "request": [54, 124, 378, 424, 425, 456, 490, 612, 618, 619, 620, 621, 673, 684], "area": [55, 226, 228, 233, 237, 238, 239, 240, 286, 288, 293, 297, 298, 299, 315, 317, 325, 326, 330, 331, 332, 348, 350, 358, 359, 363, 364, 365, 441, 460, 464, 491, 591, 608, 610, 612, 614], "squar": [55, 429, 455, 458, 466, 491], "assumpt": [55, 458, 491], "size": [55, 162, 163, 166, 167, 169, 170, 208, 229, 289, 318, 351, 420, 422, 423, 424, 425, 429, 442, 443, 451, 452, 458, 460, 491, 561, 576, 604, 611, 641, 654, 659, 661, 662], "m": [55, 58, 121, 168, 207, 210, 214, 274, 303, 336, 421, 425, 429, 432, 434, 435, 436, 438, 439, 440, 441, 445, 446, 452, 455, 457, 458, 459, 462, 464, 491, 494, 576, 577, 591, 602, 608, 610, 611, 612, 614, 615, 616, 618, 619, 621, 629, 642, 651, 658, 661, 662, 664, 665, 669, 673, 683, 684], "reset_gate_coord": [56, 492], "filter_transit": [56, 57, 226, 233, 237, 238, 239, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 492, 493, 612], "With": [56, 57, 492, 493, 673, 674, 675], "therefor": [56, 57, 458, 492, 493, 608, 677, 681], "more": [56, 57, 62, 167, 170, 386, 421, 424, 425, 430, 441, 442, 452, 464, 492, 493, 498, 579, 580, 608, 609, 610, 611, 612, 613, 616, 618, 619, 633, 639, 650, 651, 658, 673, 677, 681, 684], "effici": [56, 57, 424, 441, 492, 493, 673, 677], "than": [56, 57, 158, 167, 173, 226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 441, 442, 443, 452, 458, 492, 493, 586, 591, 610, 611, 612, 616, 658, 661, 686], "through": [56, 57, 251, 446, 457, 492, 493, 611, 612, 614, 617, 619, 633, 639, 684], "No": [56, 57, 168, 226, 233, 237, 238, 239, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 386, 425, 492, 493, 612, 615], "get_field": [57, 493, 650, 651], "check_uniform": [58, 494], "lookuperror": [58, 494], "except": [58, 386, 403, 494, 612, 615, 618, 679], "skip": [58, 167, 168, 381, 429, 494, 610, 615, 618, 619, 684], "nyquist_veloc": [58, 167, 168, 388, 494, 611, 614, 664, 677, 681], "slice": [59, 71, 88, 99, 254, 255, 256, 257, 268, 269, 270, 271, 495, 507, 524, 535, 654, 679, 681], "_io": [62, 498], "textiowrapp": [62, 498], "encod": [62, 387, 498, 618], "utf": [62, 498], "compact": [62, 498], "c": [62, 119, 123, 126, 160, 162, 165, 166, 168, 264, 359, 432, 435, 441, 445, 447, 454, 457, 458, 459, 460, 462, 467, 498, 563, 608, 612, 614, 616, 618, 619, 633, 662, 664, 673, 676, 679, 683, 684, 686], "f": [62, 264, 359, 401, 411, 498, 608, 609, 610, 611, 612, 614, 615, 616, 630, 634, 639, 648, 649, 653, 658, 661, 662, 673, 686], "minim": [62, 458, 464, 498], "everyth": [62, 498, 612, 615, 619, 630, 684], "screen": [62, 498], "gate_": [65, 93, 501, 529], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 163, 401, 411, 458, 460, 503, 504, 505, 506, 507, 508, 509, 531, 532, 533, 534, 535, 536, 537, 614, 681], "over": [69, 72, 73, 97, 100, 101, 163, 166, 167, 207, 226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 441, 442, 452, 505, 508, 509, 533, 536, 537, 587, 608, 612, 614, 615, 618, 633, 661, 662, 665, 673, 676, 681], "npulses_max": [74, 510, 560], "velocity_bin": [74, 510], "simpl": [117, 414, 553, 618, 676, 677], "vpt": [117, 217, 225, 239, 277, 285, 298, 306, 314, 331, 339, 347, 364, 553, 594, 611, 618], "mean": [117, 119, 432, 435, 436, 438, 466, 553, 561, 572, 573, 578, 587, 592, 597, 598, 608, 611, 618, 619, 622, 629, 630, 658, 680, 681, 684], "kilomet": [119, 422, 442, 452], "equat": [119, 458, 587, 608, 618], "28": [119, 608, 610, 612, 618, 661, 662, 665], "b": [119, 367, 427, 441, 442, 452, 459, 467, 608, 609, 610, 611, 616, 618, 619, 662, 673, 684], "doviak": 119, "zrnic": [119, 438], "sqrt": [119, 123, 608, 650, 651, 665], "r": [119, 122, 123, 124, 125, 126, 166, 168, 172, 173, 218, 231, 232, 252, 266, 278, 291, 292, 307, 320, 321, 322, 323, 340, 353, 354, 355, 356, 427, 432, 436, 441, 442, 443, 446, 449, 450, 451, 452, 464, 466, 587, 591, 608, 619, 629, 642, 650, 651, 658, 661, 662, 664, 684], "sin": [119, 123, 126, 608, 610], "theta_": 119, "arcsin": [119, 123, 610], "frac": 119, "theta_a": 119, "arc": [119, 588], "length": [119, 172, 173, 458, 610, 612, 618, 664], "effect": [119, 133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 238, 424, 425, 610, 634, 650, 658], "taken": [119, 172, 173, 226, 286, 315, 348, 563, 579, 580, 587, 592, 593, 643], "6371": [119, 123, 126, 588, 601, 610], "km": [119, 123, 126, 212, 229, 234, 235, 241, 272, 289, 294, 295, 300, 301, 318, 327, 328, 333, 334, 351, 359, 360, 361, 366, 423, 434, 441, 442, 452, 457, 458, 561, 588, 601, 609, 610, 611, 612, 616, 634, 643, 648, 649, 651, 658, 659, 670, 679], "doppler": [119, 166, 167, 168, 466, 587, 611, 619, 623, 626, 627, 643, 653, 658, 673, 681, 682, 684], "edit": [119, 617, 618, 619, 684], "1993": 119, "21": [119, 431, 451, 608, 610, 614], "vector": [120, 124, 226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 434, 455, 457, 608, 610, 612, 618], "util": [120, 162, 166, 167, 238, 445, 468, 611, 616, 618, 619, 630, 642, 655, 659, 661, 662, 673, 684], "antenna_to_cartesian": [120, 618], "detail": [120, 128, 166, 177, 251, 264, 326, 359, 384, 385, 421, 425, 442, 452, 608, 610, 612, 614, 620, 621, 658, 661, 662, 673, 681], "cartograph": [122, 123, 124, 125, 126, 334], "differ": [122, 124, 125, 166, 367, 414, 422, 423, 441, 442, 446, 452, 458, 609, 610, 611, 612, 616, 618, 619, 627, 629, 633, 658, 661, 662, 668, 679, 683, 684], "pass": [122, 124, 125, 166, 167, 168, 225, 226, 233, 237, 238, 239, 251, 253, 255, 257, 264, 267, 269, 271, 285, 286, 293, 297, 298, 314, 315, 322, 323, 324, 325, 326, 327, 330, 331, 347, 348, 355, 356, 357, 358, 359, 360, 363, 364, 369, 370, 378, 380, 421, 425, 458, 610, 612, 618, 621, 629, 630, 676, 679], "desir": [122, 124, 125, 133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 390, 436, 442, 452, 466, 556, 602, 610, 611, 659, 680], "6370997": [123, 126], "rho": 123, "arctan2": [123, 665], "correspond": [123, 126, 144, 145, 193, 194, 225, 253, 267, 285, 314, 347, 371, 397, 408, 422, 425, 577, 587, 589, 610, 612, 619, 629, 642, 677, 681, 684], "typic": [123, 126, 128, 133, 135, 143, 150, 155, 167, 177, 182, 184, 192, 199, 204, 386, 421, 424, 634, 686], "snyder": [123, 126], "manual": [123, 126, 615, 616, 618, 621, 673], "geolog": [123, 126], "survei": [123, 126], "profession": [123, 126], "paper": [123, 126, 673], "1395": [123, 126, 618], "1987": [123, 126], "pp": [123, 126, 432, 435, 436, 438], "191": [123, 126], "202": [123, 126], "find": [124, 167, 170, 414, 421, 424, 425, 452, 453, 608, 612, 614, 616, 618, 630, 662, 673, 686], "arcco": 126, "exclude_bas": [128, 177], "boolean": [128, 135, 144, 145, 150, 177, 184, 193, 194, 199, 367, 442, 452, 618, 680], "variou": [128, 169, 171, 177, 207, 208, 209, 210, 577, 590, 610, 618, 627, 657, 673], "exclude_below": [128, 177, 608, 610, 614, 616, 633, 660, 669, 680], "suggest": [128, 177, 609, 618], "begin": [128, 166, 167, 168, 172, 173, 177, 214, 216, 233, 237, 274, 276, 293, 297, 303, 305, 325, 330, 336, 338, 358, 363, 376, 377, 380, 382, 618], "import": [128, 177, 462, 466, 467, 479, 609, 615, 616, 618, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 675, 676, 677, 679, 680, 681, 683], "radar_fil": [128, 177, 615, 625, 639, 641], "nc": [128, 177, 608, 609, 611, 616, 618, 624, 633, 634, 636, 639, 640, 641, 645, 647, 648, 649, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 675, 676, 680], "10": [128, 138, 158, 159, 162, 163, 169, 172, 173, 177, 187, 421, 425, 431, 432, 433, 438, 442, 443, 446, 447, 448, 452, 457, 459, 460, 577, 591, 608, 610, 611, 612, 614, 615, 616, 619, 625, 630, 633, 634, 635, 639, 642, 643, 645, 647, 650, 651, 654, 658, 661, 662, 664, 665, 669, 672, 673, 675, 676, 677, 679, 680, 681, 682, 684], "normalized_coherent_pow": [128, 177, 608, 680], "75": [128, 177, 240, 299, 332, 365, 386, 442, 452, 457, 608, 614, 633, 650, 658, 661, 675, 679, 680], "exclude_mask": [130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 179, 180, 182, 183, 184, 185, 186, 187, 190, 191, 192, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 635], "op": [130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 611], "inclus": [130, 131, 133, 136, 142, 146, 148, 151, 156, 179, 180, 182, 185, 191, 195, 197, 200, 205, 421, 425, 557, 618, 639], "toa": [131, 180, 424, 425, 428, 461], "below": [133, 148, 166, 169, 171, 172, 173, 182, 197, 207, 208, 209, 210, 226, 233, 236, 237, 238, 239, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 424, 425, 441, 442, 446, 449, 450, 452, 458, 586, 587, 608, 609, 610, 611, 612, 615, 639, 658, 661, 675, 677, 680, 685], "compar": [133, 166, 182, 430, 576, 619, 627, 632, 637, 639, 658, 661, 662, 682, 684], "against": [133, 166, 182, 620, 621, 650], "mark": [133, 143, 144, 145, 155, 166, 182, 192, 193, 194, 204, 609, 615], "exclus": [133, 182, 634], "oper": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 382, 421, 425, 431, 447, 451, 452, 460, 464, 608, 611, 612, 619, 661, 662, 683, 684], "merg": [133, 135, 143, 150, 155, 167, 182, 184, 192, 199, 204, 372, 586, 619, 621, 684], "AND": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204], "OR": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 608], "gener": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 213, 214, 215, 216, 217, 226, 228, 233, 236, 237, 238, 239, 246, 247, 248, 249, 251, 253, 255, 257, 259, 260, 261, 262, 267, 269, 271, 273, 274, 275, 276, 277, 286, 288, 293, 296, 297, 298, 302, 303, 304, 305, 306, 315, 317, 325, 326, 329, 330, 331, 335, 336, 337, 338, 339, 348, 350, 358, 359, 362, 363, 364, 385, 388, 403, 414, 424, 425, 453, 458, 610, 612, 613, 616, 618, 621, 624, 625, 627, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673], "meet": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 384, 673], "result": [133, 135, 143, 150, 155, 163, 166, 167, 168, 182, 184, 192, 199, 204, 226, 233, 236, 237, 238, 239, 255, 257, 267, 269, 271, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 369, 385, 390, 422, 423, 425, 430, 462, 467, 578, 599, 610, 611, 612, 619, 630, 634, 658, 662, 663, 673, 679, 684], "previous": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 629, 658, 661], "becaus": [133, 135, 143, 182, 184, 192, 458, 661, 686], "invalid": [133, 135, 137, 143, 171, 182, 184, 186, 192, 207, 208, 209, 210, 608, 616], "shape": [135, 150, 184, 199, 376, 461, 596, 608, 611, 612, 614, 616, 618, 619, 661, 675, 679, 680, 681, 684], "v1": [136, 142, 151, 156, 185, 191, 200, 205, 608, 609, 621, 683], "v2": [136, 142, 151, 156, 185, 191, 200, 205, 619, 684], "insid": [136, 151, 185, 200, 676], "interv": [136, 142, 151, 156, 167, 171, 185, 191, 200, 205, 209, 576, 592, 593, 608, 616, 618], "occur": [137, 157, 170, 186, 206, 378, 379, 608, 677, 681], "nan": [137, 157, 166, 171, 186, 206, 209, 460, 608, 611, 618, 659], "inf": [137, 157, 171, 186, 206, 209, 618], "n_gate": [138, 187], "try": [138, 187, 429, 458, 610, 615, 616, 617, 679, 680], "ring": [138, 187, 234, 235, 294, 295, 327, 328, 360, 361, 610, 634, 635, 647], "artifact": [138, 167, 187, 618, 677, 679], "some": [138, 187, 301, 334, 398, 409, 460, 479, 609, 610, 611, 612, 614, 615, 616, 617, 618, 630, 639, 640, 658, 659, 661, 664, 673, 677, 679, 683], "outsid": [142, 156, 171, 191, 205, 209, 233, 236, 238, 239, 251, 253, 255, 257, 267, 269, 271, 293, 296, 298, 325, 326, 329, 331, 358, 359, 362, 364, 436, 441, 612, 618, 619, 658, 684], "trans_valu": [143, 155, 192, 204], "construct": [143, 155, 192, 204, 425, 611], "element": [144, 145, 166, 167, 168, 169, 170, 193, 194, 388, 422, 423, 424, 425, 429, 461, 576, 592, 593, 597, 598, 610, 611, 612], "NOT": [144, 145, 193, 194], "gate_includ": [144, 193, 680], "lost": [144, 145, 193, 194, 460, 605, 608, 679], "again": [144, 145, 193, 194, 612, 621, 630, 641, 662, 664, 683], "gate_exclud": [145, 194, 680], "noise_threshold": 158, "45": [158, 561, 610, 619, 642, 651, 661, 662, 684], "threshold_offset": 158, "counts_threshold": 158, "12": [158, 423, 608, 610, 611, 615, 616, 617, 624, 629, 630, 634, 641, 648, 658, 659, 662, 673, 676, 680, 681], "primari": [158, 458, 611], "cloud": [158, 159, 163, 369, 378, 441, 458, 610, 611, 619, 621, 627, 628, 631, 673, 682, 684, 686], "threshold": [158, 163, 166, 169, 170, 171, 207, 208, 209, 210, 367, 441, 442, 446, 449, 450, 452, 587, 591, 608, 610, 614, 658, 661, 669, 677, 680], "nois": [158, 159, 163, 165, 174, 428, 434, 437, 587, 611, 616, 618, 658, 677], "detect": [158, 452, 612, 618, 627, 645, 657, 661, 666, 677, 682], "greater": [158, 441, 464, 612, 661], "count": [158, 166, 443, 633, 677, 681], "kollia": [158, 159, 163], "jo": [158, 159, 163], "borqu": [158, 159, 163], "tatarev": [158, 159, 163], "lamer": [158, 159, 163], "n": [158, 159, 163, 166, 429, 441, 446, 457, 576, 608, 610, 611, 612, 614, 616, 629, 633, 634, 642, 653, 655, 659, 661, 662, 667, 673, 686], "bharadwaj": [158, 159, 163, 616], "widen": [158, 159, 163, 658], "johnson": [158, 159, 163, 616], "e": [158, 159, 163, 168, 170, 172, 173, 226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 371, 386, 401, 411, 439, 441, 442, 443, 452, 458, 464, 591, 608, 609, 611, 612, 615, 619, 629, 642, 658, 661, 662, 683, 684], "clothiaux": [158, 159, 163], "2014": [158, 159, 162, 163, 445, 459, 462, 673], "ii": [158, 159, 163, 443, 658, 673, 681], "process": [158, 159, 163, 167, 172, 173, 608, 611, 614, 615, 616, 618, 619, 621, 629, 662, 664, 673, 684], "atmo": [158, 159, 163, 172, 173, 431, 433, 441, 446, 451, 457, 462, 577, 591, 615, 619, 642, 662, 684], "technol": [158, 159, 163, 431, 433, 451, 462, 577], "31": [158, 159, 162, 163, 378, 445, 608, 610, 611, 614, 630, 659], "583": [158, 159, 163, 431, 618], "598": [158, 159, 163, 618], "doi": [158, 159, 163, 431, 433, 442, 443, 446, 447, 448, 452, 457, 459, 460, 577, 591, 608, 611, 612, 614, 616, 619, 642, 658, 661, 662, 673, 675, 676, 677, 679, 680, 681, 684], "1175": [158, 159, 163, 431, 433, 442, 443, 452, 460, 577, 618, 658, 661, 662, 673], "jtech": [158, 159, 163, 435, 438, 577], "d": [158, 159, 162, 163, 168, 214, 274, 303, 336, 390, 391, 393, 395, 396, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 436, 438, 441, 460, 467, 577, 608, 610, 611, 612, 615, 616, 619, 659, 673, 684], "13": [158, 159, 163, 376, 587, 608, 611, 614, 629, 630, 631, 653, 658, 664, 673, 680, 681, 682], "00045": [158, 159, 163], "floor": [159, 163, 174, 428], "z_offset": 160, "doc": [160, 161, 162, 173, 608, 612, 618, 619, 621, 624, 630, 673, 683, 684, 686], "15": [160, 458, 591, 608, 609, 610, 611, 616, 624, 625, 630, 639, 642, 648, 649, 650, 651, 654, 655, 658, 659, 662, 664, 665, 677, 681], "fzl": [160, 161, 162, 172, 173], "4000": [160, 172, 173, 679], "rhv_min": 160, "ncp_min": 160, "a_coef": [160, 162], "06": [160, 608, 610, 614, 615, 637, 666, 682], "beta": [160, 162, 445, 446, 447, 448, 449, 450], "refl_field": [160, 161, 162, 171, 172, 173, 208, 209, 425, 428, 437, 441, 442, 446, 448, 449, 450, 451, 457, 464, 624, 661, 663, 664], "ncp_field": [160, 171, 172, 173, 209, 624], "rhv_field": [160, 171, 172, 173, 208, 209, 457, 624, 663, 664], "spec_at_field": [160, 161, 162], "corr_refl_field": [160, 161, 162], "attenu": [160, 161, 162, 445, 446, 449, 618, 623, 626, 627, 663, 673, 682], "phi": [160, 162, 172, 618, 624], "copol_coeff": [160, 563, 624, 659, 660, 675], "norm_coherent_pow": [160, 563, 624, 675], "proc_dp_phase_shift": [160, 624, 659, 675], "reflectivity_horizont": [160, 166, 563, 609, 624, 633, 639, 641, 645, 647, 648, 649, 653, 655, 658, 659, 660, 661, 662, 670, 675, 676], "supress": [160, 242, 253, 258, 326, 359, 612, 618], "freez": [160, 161, 162, 432, 436], "layer": [160, 161, 162, 207, 210, 386, 446, 458, 462, 561], "combin": [160, 161, 162, 595, 608, 610, 611, 619, 621, 684], "minimum": [160, 171, 172, 173, 208, 209, 210, 226, 228, 233, 236, 237, 238, 239, 286, 288, 293, 296, 297, 298, 315, 317, 325, 326, 329, 330, 331, 348, 350, 358, 359, 362, 363, 364, 386, 421, 425, 432, 435, 436, 438, 439, 441, 442, 443, 452, 557, 561, 578, 587, 608, 610, 612, 615, 616, 618, 658, 661, 679], "normal": [160, 171, 172, 173, 209, 226, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 443, 457, 596, 612, 650, 658], "coher": [160, 171, 172, 173, 209], "power": [160, 162, 171, 172, 173, 209, 436, 445, 446, 447, 448, 449, 450, 608, 611], "zdr_field": [160, 161, 162, 165, 208, 431, 457, 663, 664], "spec_at": [160, 161, 162, 624, 663], "cor_z": [160, 161, 162, 624, 663], "gu": [160, 162], "et": [160, 162, 165, 441, 442, 443, 447, 451, 452, 457, 458, 464, 661, 662], "al": [160, 162, 165, 441, 442, 443, 447, 451, 452, 457, 458, 459, 464, 661, 662], "heavi": [160, 162, 591, 610, 642, 650, 662], "rain": [160, 162, 432, 436, 441, 445, 446, 447, 448, 451, 452, 457, 464, 618, 642, 650, 661, 662, 663, 664], "jamc": [160, 162, 460, 577], "2011": [160, 162, 615, 659], "50": [160, 162, 435, 439, 440, 457, 576, 608, 609, 610, 611, 614, 636, 654, 658, 659, 663, 664, 679, 681], "39": [160, 162, 608, 610, 659], "58": [160, 162, 441, 611, 637, 658, 659], "pia_coef": 161, "pida_coef": 161, "temp_field": [161, 162, 210, 457, 663, 664], "iso0_field": [161, 162, 207, 457], "pia_field": [161, 162], "spec_diff_at_field": [161, 162], "pida_field": [161, 162], "corr_zdr_field": [161, 162], "temp_ref": [161, 162, 457, 663], "linear": [161, 172, 173, 251, 378, 431, 442, 452, 460, 587, 600, 611, 612, 618, 661, 662, 673], "dependec": 161, "comput": [161, 162, 165, 208, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 452, 457, 458, 459, 460, 572, 573, 574, 575, 576, 578, 592, 593, 597, 598, 604, 608, 611, 618, 658, 663, 665, 673], "either": [161, 162, 166, 167, 168, 226, 227, 228, 233, 236, 237, 238, 239, 250, 251, 253, 255, 257, 265, 267, 269, 271, 286, 287, 288, 293, 296, 297, 298, 315, 316, 317, 325, 329, 330, 331, 348, 349, 350, 358, 362, 363, 364, 372, 401, 411, 432, 435, 436, 438, 446, 449, 450, 457, 619, 658, 661, 683, 684], "frequenc": [161, 162, 388, 443, 445, 446, 447, 449, 450, 454, 457, 458, 459, 460, 611, 627, 657, 658, 666, 682], "refl": [161, 162, 648], "integr": [161, 162, 608, 611], "pida_coeff": 161, "0c": [161, 162], "isotherm": [161, 162], "height_over_iso0": [161, 162, 457, 680], "fixed_fzl": [161, 162], "pia_dict": [161, 162], "spec_diff_at": [161, 162, 663], "pida_dict": [161, 162], "cor_zdr": [161, 162, 663], "smooth_window_len": 162, "forumul": 162, "smooth": [162, 170, 458, 588, 601, 612, 650, 651, 679], "window": [162, 166, 172, 173, 208, 429, 460, 466, 576, 586, 599, 604, 618, 619, 673, 684], "expon": [162, 172, 173, 427, 445, 446, 447, 448, 449, 450], "law": [162, 445, 446, 447, 448, 449, 450], "ryzhkov": [162, 432, 433, 435, 445, 462, 577], "potenti": [162, 445, 608, 616], "rainfal": [162, 441, 445, 446, 447, 448, 449, 450, 451, 458, 460, 615], "estim": [162, 207, 210, 228, 288, 317, 350, 422, 431, 434, 445, 446, 447, 448, 449, 450, 451, 458, 459, 460, 462, 577, 587, 611, 618, 661, 662], "mitig": [162, 445], "partial": [162, 445, 618], "beam": [162, 420, 424, 425, 445, 611], "blockag": [162, 445], "network": [162, 167, 380, 445, 610], "jaot": [162, 165], "599": [162, 445], "619": [162, 445, 618], "n_avg": 163, "nfft": 163, "averag": [163, 167, 367, 432, 435, 436, 438, 442, 452, 578, 587, 592, 614, 661, 662, 665], "scalar": [163, 367, 442, 452, 610, 612, 618, 661], "bia": [164, 618], "magnitud": [164, 458, 665, 681], "corrected_field": 164, "urhohv_field": 165, "snr_field": [165, 428, 437], "nh_field": 165, "nv_field": 165, "rhohv_field": [165, 431, 433], "eq": [165, 648], "6": [165, 208, 441, 446, 457, 608, 610, 611, 615, 616, 630, 633, 634, 635, 639, 640, 644, 647, 658, 659, 660, 663, 664, 665, 675, 677, 680, 681], "2006": [165, 630], "subtract": [165, 442, 452], "uncorrect": [165, 608, 669], "snr": [165, 428, 437, 618], "channel": [165, 386, 608, 611, 618, 621], "meteo": 165, "franc": 165, "23": [165, 608, 610, 611, 615, 665], "1340": 165, "1356": [165, 618], "last_radar": 166, "sonde_profil": 166, "filt": 166, "rsl_badval": 166, "131072": 166, "keep_origin": [166, 167, 168], "set_limit": [166, 167, 168, 609, 642, 643, 644, 646, 648, 649, 650, 651, 653, 658, 664], "vel_field": [166, 167, 168, 429, 467, 658, 669, 677], "corr_vel_field": [166, 167, 168], "last_vel_field": 166, "max_shear": 166, "05": [166, 424, 425, 608, 610, 615, 637, 654, 658, 659, 682], "sign": [166, 618, 650, 651, 658], "dealia": [166, 167, 168, 444, 614, 618, 623, 626, 627, 658, 668, 672, 677, 682], "4dd": [166, 618], "univers": [166, 383, 451, 608, 618, 673], "washington": 166, "previou": [166, 326, 359, 612, 616, 618, 621], "sound": [166, 618], "For": [166, 254, 256, 268, 270, 376, 386, 424, 457, 458, 608, 609, 611, 612, 615, 618, 619, 622, 629, 633, 658, 663, 673, 680, 681, 684, 686], "best": [166, 610, 658], "argument": [166, 167, 168, 226, 233, 237, 238, 239, 251, 253, 254, 255, 256, 257, 267, 268, 269, 270, 271, 286, 293, 297, 298, 315, 322, 323, 324, 325, 326, 327, 330, 331, 348, 355, 356, 357, 358, 359, 360, 363, 364, 378, 380, 388, 390, 421, 425, 459, 460, 618, 619, 684], "_fourdd_interfac": 166, "fourdd_dealia": 166, "fine": 166, "tune": [166, 661, 662], "behavior": [166, 326, 359, 376, 390, 612, 618, 622], "fourdd": 166, "document": [166, 254, 256, 264, 268, 270, 326, 359, 379, 384, 385, 600, 606, 609, 611, 612, 613, 616, 619, 620, 673, 679, 684], "dealias": [166, 167, 168, 444, 618, 619, 625, 629, 669, 673, 674, 684], "mean_doppler_veloc": [166, 611, 616, 653, 658, 659, 669, 675], "successfulli": [166, 615], "greatli": 166, "improv": [166, 459, 460, 591, 612, 621, 642, 662], "final": [166, 459, 460, 608, 609, 616, 617, 621, 634, 658, 661], "horizontalwindprofil": [166, 371, 372, 467, 600, 618, 619, 684], "sond": [166, 167, 371, 372, 453, 618, 625], "moment_based_gate_filt": [166, 167, 168, 425, 610], "bergen": 166, "alber": 166, "bad": [166, 458, 459, 460, 464], "rsl": [166, 370, 381, 382, 618, 673, 683], "procedur": [166, 167, 168], "fail": [166, 167, 168, 376, 386, 615, 618, 619, 684], "otherwis": [166, 397, 408, 432, 435, 436, 438, 439, 440, 446, 449, 450, 455, 596, 621], "maxshear": 166, "maximum": [166, 167, 171, 172, 173, 207, 208, 209, 226, 228, 233, 236, 237, 238, 239, 286, 288, 293, 296, 297, 298, 315, 317, 325, 326, 329, 330, 331, 348, 350, 358, 359, 362, 363, 364, 367, 386, 421, 422, 423, 425, 430, 432, 435, 436, 438, 439, 440, 442, 446, 449, 450, 452, 458, 557, 561, 576, 586, 594, 608, 610, 612, 615, 658, 660, 661, 669, 681], "shear": 166, "incorpor": [166, 452, 661, 664], "match": [166, 169, 170, 174, 212, 272, 301, 334, 382, 414, 616, 618, 633, 641, 662], "toward": 166, "neg": [166, 226, 237, 286, 297, 315, 330, 348, 363, 458, 586, 608, 618, 639], "compthresh": 166, "fraction": [166, 422, 423, 443, 610, 615, 658, 661, 681], "continu": [166, 168, 611, 615, 618, 619, 684], "unfold": [166, 167, 172, 173, 458], "compthresh2": 166, "thresh": [166, 446, 449, 450], "adjac": [166, 612], "assign": [166, 457, 610, 618, 661], "question": [166, 368, 425, 612, 673], "ckval": 166, "absolut": [166, 576, 662], "stdthresh": 166, "deviat": [166, 561, 574, 575, 593, 608, 677], "portion": [166, 614, 679], "epsilon": 166, "miss": [166, 457, 458, 459, 460, 464, 608, 618, 630, 664], "maxcount": 166, "allow": [166, 169, 170, 225, 285, 314, 347, 414, 441, 577, 586, 609, 612, 615, 616, 618, 622, 633, 681, 686], "fold": [166, 167, 629], "pass2": 166, "retain": [166, 167, 168, 171, 207, 208, 209, 210, 605], "rm": 166, "what": [166, 176, 425, 608, 611, 612, 614, 615, 616, 617, 618, 619, 629, 639, 669, 675, 677, 680, 684, 686], "left": [166, 324, 357, 610, 612, 614, 616, 639, 641, 658], "proxim": 166, "side": [166, 616, 658], "doubl": [166, 386, 661], "captur": [166, 441, 669], "suffici": [166, 658], "good": [166, 167, 608, 609, 621], "mingood": 166, "ba_mincount": 166, "neighbor": [166, 378, 425, 608, 618, 634, 679], "ba_edgecount": 166, "usuccess": 166, "radialvelvolum": 166, "lastvelvolum": 166, "unfoldedvolum": 166, "sondvolum": 166, "vr_corr": 166, "due": [166, 430, 441, 608, 610, 612, 615, 618, 633, 677, 683, 686], "call": [166, 169, 225, 226, 228, 233, 237, 238, 239, 253, 285, 286, 288, 293, 297, 298, 314, 315, 317, 325, 326, 330, 331, 347, 348, 350, 358, 359, 363, 364, 381, 386, 390, 577, 590, 609, 611, 612, 615, 619, 621, 677, 681, 684, 686], "999": [166, 390, 608, 618], "long": [166, 447, 618, 662, 676, 681], "jame": 166, "houz": [166, 367, 442, 443, 452, 464, 658, 661, 662], "jr": [166, 442, 452, 464, 661, 662], "four": [166, 378, 379, 381], "dealis": 166, "scheme": [166, 367, 421, 442, 452, 458, 609, 661], "2001": [166, 433], "18": [166, 433, 606, 608, 610, 640, 651, 658, 672], "1674": 166, "ref_vel_field": 167, "interval_split": 167, "interval_limit": 167, "skip_between_rai": 167, "100": [167, 169, 171, 209, 229, 234, 251, 289, 294, 318, 351, 388, 425, 467, 608, 610, 611, 612, 614, 636, 640, 650, 651, 658, 665], "skip_along_rai": 167, "nyquist_vel": [167, 168, 614, 658, 669, 677], "check_nyquist_uniform": [167, 168, 429], "rays_wrap_around": [167, 168], "region": [167, 173, 264, 326, 359, 430, 441, 591, 608, 610, 611, 612, 614, 616, 618, 619, 623, 626, 627, 629, 642, 661, 662, 669, 680, 682, 684], "similar": [167, 611, 612, 633, 679], "pair": [167, 251, 378, 390, 398, 403, 409, 610, 675], "accomplish": [167, 382, 627, 668], "problem": [167, 172, 173, 301, 334, 425, 630], "dynam": [167, 608], "reduct": 167, "anchor": 167, "onc": [167, 612, 615, 619, 621, 661, 683, 684, 686], "complet": [167, 618], "simul": [167, 600, 618], "simulated_vel_from_profil": [167, 619, 684], "segment": [167, 322, 323, 355, 356, 618], "split": [167, 591, 608], "larger": [167, 612, 661], "longer": [167, 586, 610, 618, 619, 673, 683, 684], "better": [167, 229, 234, 289, 294, 318, 327, 351, 360, 615, 616, 618, 662, 673, 677], "seem": 167, "compromis": 167, "free": [167, 613, 614, 673], "cover": [167, 608], "entir": [167, 168, 226, 233, 237, 238, 239, 255, 257, 267, 269, 271, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 425, 602, 608, 611, 612, 616, 658], "join": [167, 479, 615, 618], "gap": [167, 169, 170, 679], "connect": [167, 168], "disabl": [167, 168, 171, 207, 208, 209, 210, 615], "across": [167, 610, 618, 658, 660], "so": [167, 226, 237, 286, 297, 315, 330, 348, 363, 382, 425, 608, 611, 612, 614, 615, 616, 618, 619, 629, 630, 658, 661, 673, 684, 686], "individu": [167, 168, 425, 616], "attempt": [167, 168, 384, 385, 618, 664], "de": [167, 168, 357, 569, 570], "alias": [167, 168, 569, 570, 614, 618, 677, 681], "corr_vel": [167, 168], "unwrap_unit": 168, "skip_check": [168, 618], "multi": [168, 618], "unwrap": [168, 172, 173, 618], "independ": 168, "often": [168, 430, 615], "give": [168, 386, 612, 616, 620, 621, 669, 670, 671, 673, 677, 680], "superior": 168, "lower": [168, 251, 253, 255, 257, 267, 269, 271, 441, 611, 615, 616, 634, 635, 636], "contamin": [168, 464], "clutter": [168, 615, 616, 677, 680], "poor": 168, "verif": [168, 577, 618], "appropi": [168, 225, 285, 314, 347], "offer": [168, 609], "extrem": [168, 658], "miguel": 168, "arevallilo": 168, "herraez": 168, "david": [168, 612], "burton": 168, "michael": [168, 612, 616], "lalor": 168, "munther": 168, "gdeisat": 168, "fast": 168, "two": [168, 388, 421, 439, 442, 452, 455, 456, 464, 561, 595, 597, 598, 610, 611, 612, 614, 615, 616, 618, 621, 627, 632, 637, 638, 640, 655, 656, 676, 679, 682], "sort": [168, 610, 614, 615, 617, 618], "reliabl": 168, "follow": [168, 171, 208, 209, 384, 385, 387, 388, 401, 411, 424, 425, 441, 457, 458, 608, 610, 611, 612, 614, 615, 616, 619, 621, 622, 629, 659, 673, 683, 684], "noncontinu": 168, "optic": 168, "vol": [168, 432, 435, 436, 438], "41": [168, 610, 615, 659, 665, 679], "2002": 168, "7437": 168, "abdul": 168, "rahman": 168, "h": [168, 214, 264, 274, 303, 336, 359, 431, 435, 462, 587, 608, 610, 611, 633, 641, 658], "osten": 168, "gorecki": 168, "l": [168, 172, 173, 230, 234, 235, 264, 290, 294, 295, 319, 328, 352, 359, 361, 433, 452, 591, 608, 612, 642, 658, 662], "novak": 168, "ed": 168, "metrologi": 168, "2005": [168, 442, 452, 661, 662], "32": [168, 436, 441, 561, 608, 618, 639, 643, 644, 645, 655, 659, 662, 665, 681], "40": [168, 264, 441, 608, 611, 616, 625, 634, 636, 641, 645, 647, 650, 658, 661, 662, 669], "intern": [168, 612], "societi": [168, 427, 430, 447], "photon": 168, "label_dict": [169, 170], "delta": [169, 170, 459], "despeckl": [169, 618, 658], "identifi": [169, 170, 367, 442, 452, 587, 608, 612, 614, 642, 661, 662, 664, 680], "small": [169, 170, 441, 442, 452, 464, 618, 633, 634, 650], "investig": [169, 170, 462, 629], "scipi": [169, 170, 458, 600, 608, 618, 619, 650, 651, 673, 683, 684, 686], "core": [169, 170, 367, 386, 414, 425, 441, 442, 452, 459, 460, 577, 590, 611, 616, 618, 619, 661, 684], "queri": [169, 170, 425, 608, 612, 616], "speckl": [169, 661], "find_object": 169, "tupl": [169, 170, 226, 228, 231, 232, 233, 236, 237, 238, 239, 241, 251, 253, 255, 257, 267, 269, 271, 286, 288, 291, 292, 293, 296, 297, 298, 300, 315, 317, 320, 321, 325, 326, 329, 330, 331, 333, 348, 350, 353, 354, 358, 359, 362, 363, 364, 366, 398, 409, 421, 422, 423, 425, 429, 455, 456, 557, 576, 596, 612, 618], "contigu": [169, 170], "perman": 169, "deg": [169, 170, 207, 210, 432, 438, 439, 440, 457, 458, 602, 608, 665], "label": [170, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 236, 237, 238, 239, 250, 251, 253, 255, 257, 265, 267, 269, 271, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 291, 292, 293, 296, 297, 298, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 320, 321, 324, 325, 326, 329, 330, 331, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 353, 354, 357, 358, 359, 362, 363, 364, 605, 608, 610, 612, 614, 615, 616, 618, 633, 640, 641, 650, 651, 655, 663], "period": [170, 586, 608, 611, 616, 677], "account": [170, 618], "g": [170, 386, 421, 438, 452, 458, 460, 467], "examin": [170, 369, 382, 385, 611, 614, 619, 673, 684], "box": [170, 386, 663], "alwai": [170, 370, 382, 441, 442, 452, 458, 612, 618, 622, 673], "readi": 170, "min_ncp": [171, 172, 209], "min_rhv": [171, 172, 208, 209], "min_refl": [171, 209], "20": [171, 208, 209, 462, 577, 608, 609, 610, 611, 612, 614, 616, 629, 630, 633, 634, 640, 641, 642, 645, 647, 648, 649, 650, 651, 653, 658, 660, 661, 662, 664, 670, 671, 675, 679, 681], "max_refl": [171, 209], "undesir": [171, 207, 208, 209, 210, 425], "cross": [171, 208, 209, 226, 229, 251, 286, 289, 315, 318, 348, 351, 423, 579, 580, 608, 611, 614, 618, 627, 638, 647, 656, 658, 661, 681, 682], "ratio": [171, 208, 209, 240, 299, 332, 365, 428, 431, 608, 611, 614, 616, 681], "min_rhi": [171, 209], "criteria": [171, 207, 208, 209, 210, 425, 458, 464, 616], "built": [171, 207, 208, 209, 210, 424, 425, 615], "lowest": [171, 207, 208, 209, 210, 430, 461, 614, 615, 629, 633, 659, 661, 662], "greatest": [171, 209], "self_const": [172, 173], "60000": [172, 173, 636, 640, 679], "low_z": [172, 173], "high_z": [172, 173], "53": [172, 173, 608, 610, 614, 665], "min_phidp": [172, 173], "01": [172, 173, 324, 357, 458, 608, 610, 611, 614, 616, 626, 639, 656, 666, 682], "sys_phas": 172, "overide_sys_phas": 172, "nowrap": [172, 173], "really_verbos": [172, 173], "lp_solver": [172, 173], "pyglpk": [172, 173, 618, 673, 683], "kdp_field": [172, 173, 446, 447, 449, 450, 457, 458, 459, 460, 663, 664], "unf_field": [172, 173], "window_len": [172, 173], "proc": [172, 173, 458, 618], "coef": [172, 173, 618], "914": [172, 173, 618], "lp": [172, 173, 618, 673], "consist": [172, 173, 618, 658, 679], "factor": [172, 173, 388, 430, 445, 446, 447, 448, 449, 450, 576, 608, 609, 611, 615, 618, 641, 649, 655, 679], "low": [172, 173, 378, 458, 615, 634, 642], "high": [172, 173, 226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 441, 457, 458, 611, 612, 614, 634, 663, 664], "copolar": [172, 173, 457, 660], "automat": [172, 382, 387, 388, 425, 429, 464, 610, 612, 616, 618, 619, 621, 645, 673, 684], "lpx": [172, 173], "messag": [172, 173, 242, 258, 378, 609, 615, 618, 621, 630], "suppress": [172, 173, 458], "cvxopt": [172, 173, 618, 673, 683], "cylp": [172, 173, 618, 673, 683, 686], "cylp_mp": [172, 173], "modul": [172, 173, 563, 606, 612, 618, 619, 629, 630, 673, 676, 677, 679, 680, 681, 683, 684], "solv": [172, 173, 617, 618], "horizon": [172, 173, 457], "sobel": [172, 173], "worker": [172, 173], "link": [172, 173, 610, 611, 614, 616, 618], "1z": [172, 173], "reproc_phas": [172, 173], "sob_kdp": [172, 173], "recalcul": [172, 173, 675], "giangrand": [172, 173, 673], "mcgraw": [172, 173], "lei": [172, 173], "applic": [172, 173, 226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 386, 442, 452, 599, 612, 614, 619, 684], "program": [172, 173, 618, 619, 673, 684], "tech": [172, 173, 446, 457, 591, 642, 662], "2013": [172, 173, 459, 462, 681], "30": [172, 173, 435, 436, 441, 442, 452, 608, 610, 611, 612, 615, 616, 633, 634, 641, 645, 647, 658, 661, 662, 677], "1716": [172, 173], "system_phas": 173, "ncpt": 173, "first_gate_sysp": 173, "carri": 173, "smaller": [173, 359, 425, 608, 611, 612, 619, 661, 684], "off": [173, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 456, 608, 612, 639, 661, 662], "help": [174, 386, 468, 610, 611, 612, 614, 616, 619, 621, 633, 639, 661, 684, 686], "custom": [175, 225, 226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 265, 267, 269, 271, 285, 286, 287, 288, 293, 297, 298, 314, 315, 316, 317, 325, 326, 330, 331, 347, 348, 349, 350, 358, 359, 363, 364, 424, 441, 612, 627, 657, 666, 679, 682], "max_h_iso0": 207, "thick": [207, 210], "400": [207, 210, 618, 675], "beamwidth": [207, 210], "primarili": [207, 210], "melt": [207, 210, 446, 457, 458, 462, 591, 642, 661, 662, 663, 664], "db": [207, 210, 428, 616, 650, 664, 681], "phi_field": 208, "textzdr_field": 208, "textrhv_field": 208, "textphi_field": 208, "textrefl_field": 208, "wind_siz": [208, 429, 604, 677], "7": [208, 376, 457, 466, 604, 606, 608, 610, 611, 612, 614, 615, 619, 621, 630, 640, 642, 647, 654, 658, 664, 680, 681, 684], "max_textphi": 208, "max_textrhv": 208, "max_textzdr": 208, "85": [208, 608, 612, 664, 665], "max_textrefl": 208, "move": [208, 587, 610, 614, 618, 633], "highest": 208, "min_temp": 210, "There": [211, 610, 612, 614, 621, 639, 683, 686], "colorblind": [211, 609, 614, 639], "friendli": [211, 609, 614, 618, 639], "revers": [211, 226, 237, 286, 297, 315, 330, 348, 363, 382, 458, 618], "_r": 211, "matplotlib": [211, 226, 228, 231, 232, 233, 237, 238, 239, 251, 252, 253, 255, 257, 266, 267, 269, 271, 286, 288, 291, 292, 293, 297, 298, 315, 317, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 348, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 386, 608, 609, 610, 611, 614, 615, 616, 618, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 673, 675, 676, 677, 679, 680, 683, 686], "pyart_colormap": 211, "bluebrown10": [211, 639], "bluebrown11": [211, 639], "brbu10": [211, 639], "brbu12": [211, 639], "bu10": [211, 639], "bu7": [211, 639], "budor12": [211, 639], "budor18": [211, 639], "budrd12": [211, 639], "budrd18": [211, 639], "bugr14": [211, 639], "bugy8": [211, 639], "buor10": [211, 639], "buor12": [211, 639], "buor8": [211, 639], "buorr14": [211, 639], "carbone11": [211, 639], "carbone17": [211, 639], "carbone42": [211, 639], "cat12": [211, 639], "ewilson17": [211, 639], "grmg16": [211, 639], "gray5": [211, 639], "gray9": [211, 639], "nwsref": [211, 639], "nwsvel": [211, 639], "nws_spw": [211, 639], "pd17": [211, 639], "rrate11": [211, 639], "rdylbu11b": [211, 639], "refdiff": [211, 639], "scook18": [211, 639], "stepseq25": [211, 639], "symgray12": [211, 639], "theodore16": [211, 639], "wild25": [211, 639], "langrainbow12": [211, 639], "homeyerrainbow": [211, 618, 639], "balanc": [211, 618, 639], "chasespectr": [211, 639], "spectralextend": [211, 639], "displai": [212, 226, 228, 233, 237, 238, 239, 241, 272, 286, 288, 293, 297, 298, 300, 301, 315, 317, 325, 326, 330, 331, 333, 334, 348, 350, 358, 359, 363, 364, 366, 386, 430, 466, 467, 609, 610, 611, 612, 614, 615, 616, 618, 619, 624, 625, 629, 630, 634, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 675, 676, 677, 679, 680, 684], "airborn": [212, 618], "plot_var": [212, 272, 301, 334], "order": [212, 272, 301, 334, 367, 382, 387, 388, 414, 442, 452, 457, 458, 576, 608, 615, 616, 618, 619, 624, 661, 662, 673, 684], "cb": [212, 272, 301, 334, 641, 662, 664], "colorbar": [212, 226, 227, 228, 233, 236, 237, 238, 239, 250, 251, 253, 255, 257, 258, 265, 267, 269, 271, 272, 286, 287, 288, 293, 296, 297, 298, 301, 315, 316, 317, 325, 326, 329, 330, 331, 334, 348, 349, 350, 358, 359, 362, 363, 364, 608, 610, 611, 612, 618, 627, 633, 638, 639, 655, 656, 658, 662, 682], "loc": [212, 272, 301, 334, 608, 610, 614, 615, 616, 640], "titl": [213, 215, 216, 217, 226, 228, 233, 236, 237, 238, 239, 247, 248, 249, 251, 253, 255, 257, 260, 261, 262, 267, 269, 271, 273, 275, 276, 277, 286, 288, 293, 296, 297, 298, 302, 304, 305, 306, 315, 317, 325, 326, 329, 330, 331, 335, 337, 338, 339, 348, 350, 358, 359, 362, 363, 364, 609, 610, 611, 612, 614, 615, 617, 618, 624, 625, 633, 641, 643, 644, 646, 648, 649, 653, 681], "ext": [214, 246, 259, 274, 303, 336], "png": [214, 246, 259, 274, 303, 336, 609, 610, 612, 614, 615], "datetime_format": [214, 216, 274, 276, 303, 305, 336, 338], "use_sweep_tim": [214, 216, 274, 276, 303, 305, 336, 338], "form": [214, 228, 246, 259, 274, 288, 303, 317, 336, 350, 608, 612, 618], "radar_name_field_sweep_tim": [214, 274, 303, 336], "datetim": [214, 216, 233, 237, 239, 274, 276, 293, 297, 298, 303, 305, 325, 330, 331, 336, 338, 358, 363, 364, 371, 372, 388, 432, 435, 436, 438, 439, 440, 581, 582, 583, 584, 585, 610, 614, 615, 618], "strftime": [214, 216, 233, 237, 274, 276, 293, 297, 303, 305, 325, 330, 336, 338, 358, 363, 610, 611, 615], "suitabl": [214, 246, 259, 274, 303, 336, 441, 612], "xaxi": [218, 221, 278, 281, 307, 310, 340, 343, 641], "static": [219, 220, 229, 230, 234, 240, 241, 279, 280, 289, 290, 294, 299, 300, 308, 309, 318, 319, 332, 333, 341, 342, 351, 352, 365, 366, 609], "yaxi": [219, 220, 222, 223, 224, 279, 280, 282, 283, 284, 308, 309, 311, 312, 313, 341, 342, 344, 345, 346], "keyword": [225, 285, 314, 326, 347, 359, 378, 380, 608, 612, 618, 676, 679], "plot_ppi": [225, 285, 314, 347, 618, 625, 663, 664, 669, 671, 675], "plot_sweep_grid": [225, 618], "target_azimuth": [226, 286, 315, 348, 579], "mask_tupl": [226, 233, 236, 237, 238, 239, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 612], "norm": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 458, 612, 618, 641, 663], "cmap": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 386, 608, 609, 610, 611, 612, 614, 615, 616, 633, 639, 640, 641, 642, 646, 649, 651, 653, 654, 658, 660, 661, 662, 664, 669, 670, 671, 676, 677], "mask_outsid": [226, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 609, 612, 618, 648, 649, 658, 664], "title_flag": [226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 296, 297, 298, 315, 317, 325, 326, 329, 330, 331, 348, 350, 358, 359, 362, 363, 364, 612, 653], "axislabel": [226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 296, 297, 298, 315, 317, 325, 329, 330, 331, 348, 350, 358, 362, 363, 364, 609, 643, 648, 649], "axislabels_flag": [226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 296, 297, 298, 315, 317, 325, 329, 330, 331, 348, 350, 358, 362, 363, 364, 618, 661, 662], "colorbar_flag": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 610, 612, 615], "colorbar_label": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 609, 612, 614, 624, 625, 629, 643, 644, 648, 649, 650, 651, 655, 664, 669], "colorbar_ori": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 614, 618], "reverse_xaxi": [226, 237, 286, 297, 315, 330, 348, 363], "fig": [226, 227, 228, 233, 236, 237, 238, 239, 250, 251, 253, 255, 257, 265, 267, 269, 271, 286, 287, 288, 293, 296, 297, 298, 315, 316, 317, 325, 326, 329, 330, 331, 348, 349, 350, 358, 359, 362, 363, 364, 608, 609, 610, 611, 612, 614, 615, 616, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 658, 660, 662, 663, 664, 665, 669, 677, 679, 680], "tick": [226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 265, 267, 269, 271, 286, 287, 288, 293, 297, 298, 315, 316, 317, 325, 326, 330, 331, 348, 349, 350, 358, 359, 363, 364, 612, 618, 639, 641, 661, 662, 663], "ticklab": [226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 265, 267, 269, 271, 286, 287, 288, 293, 297, 298, 315, 316, 317, 325, 326, 330, 331, 348, 349, 350, 358, 359, 363, 364, 612, 618, 661, 662, 663], "raster": [226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 386, 612, 618], "pseudo": [226, 286, 315, 348, 618], "associ": [226, 286, 315, 348, 403, 441, 608, 621, 658], "pcolormesh": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 608, 618, 633, 650, 658, 661, 662], "integ": [226, 286, 315, 348, 388, 429, 455, 456], "ncp": [226, 233, 236, 237, 238, 239, 286, 293, 296, 297, 298, 315, 325, 326, 329, 330, 331, 348, 358, 359, 362, 363, 364, 612], "lumin": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 612], "scale": [226, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 387, 388, 424, 425, 433, 441, 458, 459, 608, 611, 612, 642], "west": [226, 237, 286, 297, 315, 330, 348, 363, 608, 612, 643], "leav": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 267, 269, 271, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 610, 612], "orient": [226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 265, 267, 269, 271, 286, 287, 288, 293, 297, 298, 315, 316, 317, 325, 326, 330, 331, 348, 349, 350, 358, 359, 363, 364, 457, 610, 612, 613, 615, 663, 665], "treat": [226, 233, 237, 238, 239, 255, 257, 267, 269, 271, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 612], "themselv": [226, 233, 237, 238, 239, 255, 257, 267, 269, 271, 286, 293, 297, 298, 315, 325, 326, 330, 331, 348, 358, 359, 363, 364, 612], "figur": [226, 227, 228, 233, 236, 237, 238, 239, 250, 251, 253, 255, 257, 265, 267, 269, 271, 286, 287, 288, 293, 296, 297, 298, 315, 316, 317, 325, 326, 329, 330, 331, 348, 349, 350, 358, 359, 362, 363, 364, 609, 610, 611, 612, 614, 615, 616, 617, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 660, 661, 662, 664, 669, 676, 677, 679, 680], "render": [226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 611, 612], "rather": [226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 612], "larg": [226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 458, 464, 612, 614, 615, 618], "Be": [226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 612, 621], "sure": [226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 611, 612, 615, 617, 618, 621, 633, 641, 661, 683, 686], "dpi": [226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 610, 612, 614], "pdf": [226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 612], "ep": [226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 612], "svg": [226, 228, 233, 237, 238, 239, 286, 288, 293, 297, 298, 315, 317, 325, 326, 330, 331, 348, 350, 358, 359, 363, 364, 612], "mappabl": [227, 250, 258, 265, 287, 316, 349, 615], "cax": [227, 250, 265, 287, 316, 349, 663], "imag": [227, 250, 265, 287, 316, 349, 441, 456, 576, 591, 608, 609, 611, 612, 615, 618, 627, 638, 656, 659, 661, 662, 682], "contourset": [227, 250, 258, 265, 287, 316, 349], "etc": [227, 250, 253, 258, 265, 287, 316, 326, 349, 359, 385, 432, 435, 436, 438, 440, 452, 610, 612, 618, 658], "onto": [227, 250, 265, 267, 287, 316, 326, 349, 359, 414, 421, 425, 461, 612, 616], "drawn": [227, 250, 265, 287, 316, 349, 612], "target_rang": [228, 288, 317, 350], "delta_x": [228, 288, 317, 350], "delta_i": [228, 288, 317, 350], "az_limit": [228, 288, 317, 350], "el_limit": [228, 288, 317, 350], "corner": [228, 288, 317, 324, 350, 357, 612, 613, 618], "reflector": [228, 288, 317, 350, 618], "griddata": [228, 288, 317, 350], "min": [228, 288, 317, 350, 608, 612, 665], "max": [228, 288, 317, 350, 386, 608, 612, 618, 629, 633, 634, 639, 640, 645, 653, 665, 669, 670, 671], "npt": [229, 234, 289, 294, 318, 327, 351, 360], "hair": [229, 289, 318, 351, 647], "higher": [229, 234, 289, 294, 318, 327, 351, 360, 425, 611, 616, 658, 677, 679], "col": [230, 234, 235, 290, 294, 295, 319, 328, 352, 361, 611, 634], "line": [230, 236, 252, 253, 264, 266, 290, 296, 319, 322, 323, 326, 327, 329, 352, 355, 356, 359, 360, 362, 386, 458, 609, 610, 611, 612, 615, 618, 619, 621, 627, 638, 640, 656, 658, 659, 682, 683, 684, 686], "color": [230, 231, 232, 234, 235, 252, 290, 291, 292, 294, 295, 319, 320, 321, 323, 326, 327, 328, 352, 353, 354, 359, 361, 386, 609, 610, 611, 612, 614, 615, 616, 640, 641, 642, 650, 651, 658, 659, 661, 662, 663, 664], "linestyl": [230, 234, 235, 252, 290, 294, 295, 319, 328, 352, 361, 610, 612, 614, 640, 641, 651], "symbol": [231, 232, 291, 292, 320, 321, 324, 353, 354, 357], "text_color": [231, 232, 291, 292, 320, 321, 353, 354], "text": [231, 232, 291, 292, 320, 321, 324, 353, 354, 357, 479, 610, 617, 618, 621, 639, 648, 665, 673, 677], "just": [231, 232, 291, 292, 320, 321, 353, 354, 376, 586, 616, 618, 619, 639, 642, 675, 681, 684, 686], "marker": [231, 232, 236, 252, 266, 291, 292, 296, 320, 321, 329, 353, 354, 362, 608, 610, 615], "title_datetime_format": [233, 237, 293, 297, 325, 330, 358, 363], "title_use_sweep_tim": [233, 237, 293, 297, 325, 330, 358, 363], "range_ring_location_km": [234, 294, 327, 360], "lw": [234, 235, 294, 295, 328, 361, 612, 614, 658], "range_r": [235, 295, 328, 361], "seri": [235, 295, 328, 361, 439, 608, 611], "draw": [235, 253, 264, 295, 326, 328, 359, 361, 610, 612], "format_str": [236, 296, 329, 362], "ray_min": [236, 296, 329, 362], "ray_max": [236, 296, 329, 362], "style": [236, 252, 266, 296, 322, 323, 327, 329, 355, 356, 360, 362, 386, 618], "ignoretilt": 238, "antenna_to_cartesian_track_rel": 238, "slant": [238, 422, 438], "ncar": 238, "soloii": 238, "time_axis_flag": [239, 298, 331, 364, 611], "date_time_form": [239, 298, 331, 364], "tz": [239, 298, 331, 364, 610], "zone": [239, 298, 331, 364], "info": [239, 298, 326, 331, 359, 364, 612, 618, 663, 664, 681], "aspect_ratio": [240, 299, 332, 365], "aspect": [240, 299, 332, 365, 639], "xlim": [241, 300, 333, 366, 608, 609, 612, 614, 615, 616, 644, 646, 650, 651, 664, 679], "ylim": [241, 300, 333, 366, 608, 609, 611, 612, 614, 615, 616, 644, 646, 648, 649, 650, 651, 653, 655, 658, 664], "cartopi": [242, 243, 244, 245, 253, 301, 326, 608, 610, 612, 614, 615, 616, 618, 619, 627, 629, 630, 633, 634, 638, 640, 641, 654, 656, 659, 661, 662, 669, 673, 676, 677, 679, 680, 682, 683, 684, 686], "coastlin": [243, 253, 326, 359, 608, 612], "polit": 244, "state": [245, 459, 610, 612, 614, 618], "grid_name_field_level_tim": [246, 259], "latitudin": [248, 255, 269], "step": [251, 386, 432, 435, 436, 438, 439, 440, 609, 611, 616, 621, 629, 650, 651, 661, 686], "interp_typ": 251, "x_axi": [251, 640], "metpi": [251, 610, 612, 614, 615, 618], "design": [251, 591, 608, 619, 650, 661, 662, 673, 684], "geodes": 251, "nearest": [251, 378, 422, 425, 432, 435, 436, 438, 440, 453, 579, 580, 600, 608, 612, 618, 679], "dataarrai": 251, "interp": [251, 460], "ex": [251, 460, 610, 614, 616, 617, 639], "upper": [251, 253, 255, 257, 267, 269, 271, 610, 614, 615, 616, 640], "colormesh": [251, 253, 255, 257, 267, 269, 271], "64": [251, 253, 255, 257, 267, 269, 271, 609, 639, 644, 645, 646, 650, 652, 654, 655, 659, 680, 683], "linewidth": [252, 266, 610, 612, 614, 615, 641, 650, 651], "crosshair": [252, 266, 612], "lat_lin": [253, 264, 326, 359, 610, 612, 633, 647, 659], "lon_lin": [253, 264, 326, 359, 610, 612, 633, 647, 659], "embellish": [253, 326, 359, 610, 641], "add_grid_lin": [253, 326, 610], "reason": [253, 264, 612], "america": [253, 264, 326, 359, 612], "cr": [253, 301, 326, 457, 608, 610, 612, 614, 615, 616, 629, 630, 633, 634, 640, 641, 647, 654, 659, 661, 662, 663, 669, 676, 677, 680], "subsequ": [253, 326, 612], "geoax": [253, 326, 612, 676, 679], "platecarre": [253, 326, 608, 610, 612, 614, 615, 616, 629, 633, 640, 641, 654, 659, 661, 662, 669, 677, 680], "shapefil": [253, 326, 359, 612], "certain": [253, 326, 368, 456, 591, 612, 618, 661, 662, 680], "plot_latitudinal_level": [254, 268], "y_index": [255, 269], "basemap": [255, 257, 258, 263, 264, 267, 269, 271, 334, 355, 356, 357, 359, 360, 618, 673, 683], "plot_longitudinal_level": [256, 270], "x_index": [257, 271], "top": [258, 425, 461, 608, 610, 613, 618, 619, 639, 658, 659, 679, 684], "veric": 260, "area_thresh": [264, 359], "10000": [264, 359, 432, 435, 436, 438, 440, 467, 634, 640, 661, 662, 679], "auto_rang": 264, "min_lon": [264, 326, 359, 610, 612, 633, 647, 680], "92": [264, 648, 659], "max_lon": [264, 326, 359, 610, 612, 633, 647, 680], "86": [264, 612], "min_lat": [264, 326, 359, 610, 612, 633, 647, 680], "max_lat": [264, 326, 359, 610, 612, 633, 647, 680], "44": [264, 442, 452, 608, 610, 661, 662, 683], "databas": [264, 359, 614], "merc": [264, 359], "mercat": [264, 634], "line_styl": [266, 322, 323, 327, 355, 356, 360, 647], "plot_rhi": [285, 314, 347, 608], "plot_vpt": [285, 314, 347, 611], "grid_project": [301, 424, 425, 612], "progress": [301, 334, 615], "correctli": [301, 334, 615, 618], "github": [301, 334, 610, 613, 618, 651, 673, 683, 686], "tracker": [301, 334, 619, 673, 684], "azimuthalequidist": 301, "line_lon": [322, 355], "line_lat": [322, 355], "compat": [322, 323, 324, 327, 355, 356, 357, 360, 383, 610, 618, 622, 686], "line_x": [323, 356], "line_i": [323, 356], "ro": [324, 357], "label_text": [324, 357], "label_offset": [324, 357], "bottom": [324, 357, 610, 612, 639, 641], "110m": [326, 612], "shapefile_kwarg": [326, 612], "alpha": [326, 359, 445, 446, 447, 448, 449, 450, 610, 614, 641, 650, 658], "edgecolor": [326, 359, 610, 614, 650], "face": [326, 359, 612], "reson": [326, 359, 612], "lambertconform": [326, 612, 630, 647, 676], "domain": [326, 359, 608, 612, 633], "neither": [326, 359, 390, 612], "extend": [326, 359, 382, 612], "word": [326, 612], "10m": [326, 610, 612, 616, 630, 647], "50m": [326, 612, 669, 677, 680], "naturalearthfeatur": [326, 612], "tranpar": [326, 359, 612], "overplot": [326, 359, 612], "pixel": [326, 359, 455, 456, 561, 608, 612], "lcc": 359, "cylindr": 359, "mill": 359, "exhibit": 359, "distort": 359, "aea": 359, "laea": 359, "conform": [359, 612, 673, 675], "tmerc": 359, "stere": 359, "aeqd": 359, "cass": 359, "even": [359, 441, 460, 614, 618, 650, 658, 673, 679, 686], "cyl": [359, 618], "cannot": [359, 370, 610, 612], "lake": [359, 614], "esri": 359, "background": [359, 367, 442, 452, 464, 612, 617, 647, 654, 661, 662], "untest": 359, "always_core_thr": [367, 442, 452, 661, 662], "use_cosin": [367, 442, 452, 661, 662], "max_diff": [367, 442, 452, 661, 662], "zero_diff_cos_v": [367, 442, 452, 661, 662], "use_addit": [367, 442, 452, 661, 662], "scalar_diff": [367, 442, 452, 661, 662], "convect": [367, 441, 442, 452, 464, 608, 615, 618, 627, 657, 666, 682], "stratiform": [367, 441, 442, 452, 464, 618, 627, 657, 666, 682], "classif": [367, 441, 442, 446, 452, 457, 464, 618, 627, 657, 666, 682], "cosin": [367, 442, 452, 661, 662], "classifi": [367, 441, 442, 452, 457, 618, 661, 662, 663], "eqn": [367, 442, 452], "b1": [367, 442, 452, 616], "yuter": [367, 442, 443, 452, 464, 591, 642, 658, 661, 662], "1997": [367, 442, 452, 661, 662], "zero": [367, 384, 442, 452, 456, 458, 600, 615, 618, 658, 661, 662, 676, 680], "multipli": [367, 442, 452, 611, 661, 675], "most": [368, 376, 610, 611, 612, 618, 639, 658, 662, 677, 679, 686], "storage_opt": [369, 378, 380], "anon": [369, 378, 380, 608, 610, 614, 615], "open": [369, 378, 380, 479, 608, 611, 612, 614, 615, 617, 618, 619, 644, 673, 675, 676, 677, 679, 680, 681, 684, 686], "binari": [369, 452, 608, 621], "transpar": [369, 610, 612, 618, 650], "decompress": [369, 618], "gzip": [369, 376, 377], "bzip2": [369, 618], "close": [369, 452, 458, 609, 610, 614, 615, 616, 618], "compress": [369, 376, 377, 612, 618], "backend": [369, 378], "googl": [369, 378, 618, 619, 684], "storag": [369, 378, 556], "amazon": [369, 378, 608, 610, 612, 614, 629, 630], "web": [369, 378, 386, 608, 612, 614, 616, 629, 630], "servic": [369, 378, 608, 610, 612, 614, 616, 621, 629, 630, 639], "s3": [369, 378, 610, 614, 629, 630, 642, 661, 662], "file_lik": 369, "use_rsl": 370, "read_": 370, "trmm": [370, 382, 618, 673, 683], "librari": [370, 379, 382, 385, 386, 608, 610, 611, 612, 614, 618, 619, 620, 673, 675, 676, 677, 679, 680, 681, 683, 684], "choos": [370, 612, 627, 638, 656, 661, 662, 682, 686], "Not": [370, 377, 457], "typeerror": [370, 618], "launch_datetim": 371, "date": [371, 372, 606, 610, 612, 616, 617, 618, 629, 630], "radiosond": 371, "launch": 371, "record": [371, 614, 616, 681], "target_datetim": 372, "closest": [372, 414, 432, 435, 436, 438, 440], "profile_datetim": 372, "use_arm_scan_nam": 373, "scan_nam": [373, 608, 611, 618], "use_file_field_attribut": 374, "csu": [374, 618], "chill": 374, "chl": [374, 618], "field_file_nam": 374, "long_nam": [374, 608, 611, 661, 662, 664, 676, 681], "zlib": [376, 377], "read_mdv": [376, 609, 625, 635, 646, 650, 651, 652], "interchang": 376, "vlevel": 376, "proj_polar_radar": 376, "9": [376, 446, 448, 457, 587, 608, 610, 611, 612, 614, 615, 617, 624, 630, 642, 651, 659, 660, 661, 662, 664, 673, 675, 680, 681], "proj_rhi_radar": 376, "vlevel_typ": 376, "vert_type_z": 376, "vert_type_elev": 376, "vert_type_az": 376, "17": [376, 610, 611, 648, 653, 656], "vert_type_pressur": 376, "vert_type_theta": 376, "unknown": [376, 618], "station": [378, 379, 612, 630], "linear_interp": 378, "nexrad": [378, 379, 380, 381, 608, 618, 627, 628, 631, 638, 642, 656, 661, 662, 673, 681, 682], "archiv": [378, 610, 612, 614, 616, 643, 673], "host": [378, 380, 610, 621], "noaa": [378, 380, 382, 608, 610, 612, 614, 615, 629, 630, 642, 661, 662], "nation": [378, 380, 608, 610, 612, 614, 615, 629, 639], "climat": [378, 380, 611, 612, 614, 618, 619, 673, 675, 676, 677, 679, 680, 681, 684], "ucar": [378, 379, 608], "thredd": [378, 379, 385], "server": [378, 379], "letter": [378, 379, 381], "icao": [378, 379, 618], "older": [378, 379, 618, 619, 627, 628, 631, 673, 682, 684], "mix": [378, 441, 591, 642, 661, 662], "constant": [378, 418, 424, 425, 455, 458, 608, 611, 618, 630], "fsspec": [378, 380, 614, 615, 618], "cut": [378, 379, 380, 456], "www": [378, 379, 380, 455, 610, 614, 619, 684], "ncdc": [378, 380], "gov": [378, 380, 608, 609, 610, 614, 616, 624, 625, 629, 630, 633, 635, 636, 639, 640, 641, 643, 644, 645, 646, 648, 650, 651, 652, 653, 655, 659, 660, 669, 670, 671], "edu": [378, 379, 455, 608, 642, 658, 661, 662], "catalog": [378, 379, 608], "html": [378, 379, 455, 610, 614, 618, 619, 673, 683, 684], "common": [379, 611, 618, 634, 673, 683], "cdm": [379, 385], "url": [379, 610, 612, 616, 630], "java": [379, 385], "tool": [379, 385, 608, 611, 616, 673, 683], "opendap": 379, "accept": [379, 432, 435, 436, 438, 459, 460, 612, 616, 618, 619, 684], "compil": [379, 459, 615, 618, 673, 683], "unidata": [379, 608, 629], "htm": 379, "product": [380, 382, 430, 467, 608, 612, 618], "nw": [380, 614, 615], "wsr": 380, "88d": 380, "iii": 380, "distribut": [380, 442, 443, 451, 452, 466, 561, 572, 573, 574, 575, 592, 593, 618, 619, 658, 661, 662, 673, 684], "roc": 380, "wsr88d": [380, 381], "level_iii": 380, "level3info": 380, "asp": 380, "radar_format": 381, "callid": 381, "skip_range_check": 381, "rsl_radar": 381, "id": [381, 386, 608, 616, 618], "verifi": [381, 594, 605], "ioerror": 381, "time_ord": [382, 618], "full_xhdr": 382, "noaa_hh_hdr": 382, "ignore_xhdr": 382, "ignore_sweep_start_m": 382, "sigmet": [382, 618, 673], "iri": [382, 618, 673, 683], "sequenti": [382, 639], "re": [382, 441, 610, 619, 684], "manner": 382, "determind": 382, "maintain": [382, 421, 618], "yet": [382, 629, 634], "warn": [382, 385, 457, 608, 610, 611, 612, 614, 615, 616, 618, 624, 630, 633, 664, 679], "reverse_and_rol": 382, "strictli": 382, "increas": [382, 425, 458, 461, 608, 612, 619, 639, 658, 679, 684], "becom": [382, 661, 676, 679], "thisopt": 382, "strict": 382, "header": [382, 618], "decod": [382, 618], "hurrican": [382, 612, 661, 662], "hunter": 382, "millisecond": [382, 615], "precis": [382, 441], "explic": 382, "read_rsl": [382, 683], "error": [382, 386, 459, 460, 608, 610, 612, 615, 617, 618, 634, 683], "uf": [383, 388, 618, 673], "introduc": [383, 460], "implement": [383, 390, 403, 424, 447, 455, 611, 612, 615, 618, 619, 624, 662, 684], "time_refer": [384, 675], "compliant": 384, "mani": [384, 618, 619, 673, 679, 684, 686], "outlin": [384, 458, 587], "_zlib": [384, 385], "_deflatelevel": [384, 385], "_shuffl": [384, 385], "_fletcher32": [384, 385], "_contingu": [384, 385], "_chunksiz": [384, 385], "_endian": [384, 385], "_least_significant_digit": [384, 385], "_fillvalu": [384, 385, 618, 676, 681], "write_proj_coord_si": 385, "proj_coord_si": 385, "write_point_x_y_z": 385, "write_point_lon_lat_alt": 385, "projectioncoordinatesystem": 385, "toolsui": 385, "written": [385, 387, 388, 618, 621, 673], "appropri": [385, 587, 612, 622], "understood": 385, "rgb": 386, "viridi": [386, 661, 662], "color_level": 386, "warp": 386, "sld": 386, "use_doublequot": 386, "geotiff": [386, 618, 673], "wgs84": 386, "sphere": [386, 588, 601], "latter": [386, 612], "usabl": [386, 608], "byte": [386, 618], "former": 386, "gi": 386, "while": [386, 612, 615, 616, 634, 673, 677, 686], "show": [386, 608, 609, 610, 612, 614, 616, 617, 618, 619, 624, 625, 629, 630, 633, 634, 635, 636, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 661, 662, 664, 669, 675, 677, 679, 680, 681, 684], "lack": [386, 401, 411], "composit": [386, 430, 608, 611, 618, 627, 657, 666, 682], "gdal": [386, 618, 673], "via": [386, 422, 423, 610, 612, 621], "conda": [386, 614, 618, 619, 673, 683, 684, 686], "rbg": 386, "tabl": [386, 608], "column": [386, 577, 589, 590, 608, 610, 611, 612, 618, 627, 657, 666, 682], "categor": [386, 610, 663], "255": [386, 618, 662], "hydrometeor": [386, 446, 457, 618, 627, 657, 666, 677, 682], "gdalwarp": 386, "command": [386, 618, 619, 621, 673, 676, 684, 686], "o": [386, 479, 610, 612, 615, 619, 641, 673, 683, 684], "az": [386, 610, 618, 648, 649], "descriptor": 386, "tiff": 386, "don": [386, 611, 612, 615, 618, 633], "t": [386, 435, 441, 442, 452, 458, 459, 462, 467, 608, 611, 612, 615, 616, 618, 633, 658, 661, 662, 673, 675], "quot": 386, "translat": 386, "sr": [386, 608], "instead": [386, 608, 610, 612, 615, 616, 618, 619, 630, 658, 661, 679, 683, 684, 686], "mdv_field_nam": [387, 618], "field_write_ord": [387, 388], "sentinel": [387, 388], "float32": [387, 608, 611, 612, 618, 659, 675, 677, 681], "_write_as_dtyp": 387, "writabl": 387, "satisfi": 387, "xy": [387, 425], "irregular": 387, "exce": [387, 661, 662], "122": [387, 616, 629, 633, 640, 660, 664, 669], "uint8": 387, "uint16": 387, "scale_factor": [387, 611], "add_offset": [387, 611], "uncompress": 387, "sai": [387, 619, 684], "uf_field_nam": 388, "radar_field_nam": 388, "volume_start": 388, "templates_extra": 388, "radar_beam_width_h": [388, 611], "radar_beam_width_v": [388, 611], "radar_receiver_bandwidth": 388, "prt": [388, 611], "polarization_mod": 388, "round": [388, 422, 423, 612, 616, 618], "_uf_scale_factor": 388, "charact": 388, "advanc": [388, 608], "usag": 388, "templat": [388, 618, 621], "mandatory_head": 388, "optional_head": 388, "field_head": 388, "lazi": [389, 390, 392, 399, 618], "set_lazi": 390, "callabl": [390, 399, 611, 612], "cach": 390, "tradit": 390, "supplement": 390, "syntax": [390, 618], "prevent": [390, 425, 610, 618, 619, 684], "comparison": [390, 618, 633, 662], "__cmp__": 390, "__ge__": 390, "__gt__": 390, "__le__": 390, "__lt__": 390, "__ne__": 390, "nor": 390, "viewitem": 390, "viewkei": 390, "viewvalu": 390, "fromkei": 390, "tradition": 390, "referenc": 390, "lazyloaddictionari": 390, "henc": 390, "key1": 390, "value1": 390, "key2": 390, "value2": 390, "lazy_func": 390, "lambda": 390, "lazykey1": 390, "item": [391, 401, 404, 411, 618], "els": [393, 394, 405, 611, 615, 616, 664], "value_cal": 399, "concret": 403, "__getitem__": [403, 611], "__setitem__": 403, "__delitem__": 403, "__iter__": 403, "__len__": 403, "robust": [413, 441, 618], "src_radar": 414, "dest_radar": 414, "distance_toler": [414, 633], "500": [414, 610, 614, 633, 640, 644], "gatefilter_src": [414, 633], "time_toler": [414, 633], "60": [414, 608, 624, 629, 633, 636, 641, 670, 675, 677, 679], "kd": 414, "tree": [414, 425, 669, 670, 671], "physic": [414, 430, 442, 452, 661, 662], "easi": [414, 430, 673], "equival": [414, 609, 611, 615, 618, 629, 641, 649, 655], "src_radar_i": 414, "src_radar_x": 414, "destin": [414, 416, 610, 614, 618, 633], "toler": [414, 415, 417, 432, 435, 438, 439, 440, 579, 580, 618], "src_radar_tim": 414, "dest_radar_tim": 414, "gate_mapp": 414, "src": [414, 614], "dest": 414, "dest_index": 414, "radar_map": 414, "mapped_radar": [414, 633], "adequ": [414, 633], "getter": [415, 417], "field_list": [416, 456], "zg": [418, 419, 420], "yg": [418, 419, 420], "xg": [418, 419, 420], "roi": [418, 419, 420, 422, 423, 425, 618, 634], "influenc": [418, 421, 424, 425, 679], "grow": [419, 420, 424, 425, 619, 684], "virtual": [420, 424, 425], "grid_shap": [421, 422, 423, 424, 425, 557, 634, 635, 636, 640, 661, 662, 670, 679], "grid_limit": [421, 422, 423, 424, 425, 557, 634, 635, 636, 640, 661, 662, 670, 679], "gridding_algo": 421, "map_gates_to_grid": [421, 618], "copy_field_dtyp": [421, 618], "map_to_grid": [421, 424, 618], "significantli": [421, 425], "faster": [421, 425, 612, 618], "barn": [421, 425, 618, 679], "1964": 421, "techniqu": [421, 441, 662], "maxim": 421, "numer": [421, 618], "analysi": [421, 433, 441, 590, 612, 616, 618], "meteorologi": [421, 427, 430, 458, 467, 587], "climatologi": [421, 467], "396": [421, 611], "409": [421, 618], "cressman": [421, 425, 679], "1959": 421, "monthli": 421, "review": [421, 609, 618], "87": [421, 608, 610, 615], "367": 421, "374": [421, 618], "paulei": [421, 679], "1990": [421, 679], "theoret": [421, 433], "discret": 421, "respons": 421, "118": 421, "1145": [421, 618], "1164": [421, 618], "target_sweep": [422, 423], "grid_siz": [422, 423, 424, 425], "801": [422, 423, 618], "auto": [422, 423, 612, 614, 639], "max_z": [422, 423], "12000": [422, 423, 675, 679], "el_rounding_frac": 422, "add_grid_altitud": 422, "weight": [422, 423, 424, 425, 436, 457, 458, 466, 608, 618, 627, 632, 637, 679, 682], "grid_from_radar": [422, 423, 424, 425, 634, 635, 636, 640, 661, 662, 670, 679], "receiv": [422, 423, 431, 611, 614, 618, 677], "h_factor": [422, 423, 424, 425, 634], "dist_factor": [422, 423, 424, 634], "radar_d": [422, 423], "third": [422, 423, 619, 684], "az_rounding_frac": 423, "grid_origin": [424, 425, 636, 640], "grid_origin_alt": [424, 425], "map_roi": [424, 425], "weighting_funct": [424, 425, 679], "barnes2": [424, 425, 618], "17000": [424, 425, 679], "roi_func": [424, 425, 618, 679], "dist_beam": [424, 425, 679], "constant_roi": [424, 425, 618], "z_factor": [424, 425], "xy_factor": [424, 425], "02": [424, 425, 608, 611, 642, 656, 661, 662, 666, 682], "min_radiu": [424, 425, 618, 679], "250": [424, 425, 432, 438, 681], "nb": [424, 425], "bsp": [424, 425], "linearli": 424, "roifunct": 424, "dist": [424, 425, 592, 593, 608, 610], "get_roi": 424, "cython": [424, 618], "around": [424, 439, 442, 452, 561, 576, 614, 616, 635, 650, 653, 658, 661, 675, 677], "copy_field_data": 425, "kd_tree": 425, "leafsiz": 425, "nearbi": [425, 636], "coodin": 425, "azimut": 425, "similarili": 425, "example_roi_func_const": 425, "example_roi_func_dist": 425, "example_roi_func_dist_beam": 425, "altern": [425, 430, 612, 661], "foreach": 425, "metet": 425, "sacr": 425, "sapr": [425, 563], "dist_mean": 425, "preserv": [425, 616, 677], "less": [425, 441, 442, 443, 452, 460, 591, 616, 658, 661], "memori": [425, 618], "slower": [425, 458], "It": [425, 460, 576, 587, 610, 612, 616, 619, 622, 633, 684, 686], "leaf": 425, "lookup": 425, "affect": 425, "optim": [425, 458, 618], "natur": [425, 441, 612], "ref_field": [427, 662, 676], "300": [427, 608, 610, 611, 612, 614, 615, 642, 643, 675], "save_nam": [427, 662], "nws_primary_pr": 427, "mm": [427, 615, 616, 617, 661, 662], "hr": [427, 661, 662], "author": [427, 430, 452, 591, 609, 616, 617, 621, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 665, 669, 670, 671], "laura": [427, 452, 591, 642, 658, 661, 662], "tomkin": [427, 452, 591, 642, 658, 661, 662], "look": [427, 430, 435, 443, 462, 608, 610, 611, 612, 614, 616, 617, 618, 629, 630, 633, 634, 641, 673, 675, 677, 679, 681], "expect": [427, 460, 619, 684], "relationship": [427, 441, 451], "american": [427, 430], "meteorolog": [427, 430, 433, 447, 467, 612], "2022": [427, 430, 591, 608, 611, 617, 629, 642, 661, 662, 673], "glossari": [427, 430], "ametsoc": [427, 430], "wiki": [427, 430, 455], "r_relat": 427, "25000": [428, 679], "measur": [428, 431, 442, 445, 446, 451, 452, 457, 458, 459, 460, 577, 611, 612, 614, 616, 619, 661, 662, 673, 675, 676, 677, 679, 680, 681, 684], "nyq": [429, 614, 669, 677], "check_nyq_uniform": 429, "deriv": [429, 458, 460], "vel_dict": 429, "entri": [429, 681], "am": [430, 614, 619, 673, 684], "dry": [430, 457, 663, 664], "world": [430, 627, 638], "aloft": 430, "oppos": [430, 642], "nwp": [430, 663], "why": [430, 612, 617, 619, 684], "would": [430, 608, 609, 610, 611, 614, 616, 618, 619, 629, 630, 677, 679, 684], "think": 430, "turn": [430, 639, 661, 662, 673], "spin": [430, 616], "randi": [430, 614], "chase": [430, 614], "dopplerchas": [430, 618], "cdr_field": 431, "circular": [431, 592, 593, 618, 661], "depolar": [431, 611], "cdr": 431, "matrosov": 431, "2004": 431, "simultan": 431, "transmiss": 431, "574": [431, 618, 626], "1520": [431, 433, 442, 443, 452, 618, 658, 661, 662], "0426": [431, 433], "021": 431, "0574": 431, "deflha": 431, "ref_tim": [432, 435, 436, 438, 439, 440], "latlon_tol": [432, 438, 440], "0005": [432, 438, 440], "delta_rng": [432, 438], "15000": [432, 438, 658, 675, 679], "delta_azi": [432, 438], "hmax": [432, 435, 436, 438, 440], "hre": [432, 435, 436, 438, 440], "avg_typ": [432, 435, 436, 438, 578], "nvalid_min": [432, 435, 436, 438, 578], "interp_kind": [432, 435, 436, 438, 440, 600], "qvp": [432, 435, 436, 438, 440, 462, 618], "enhanc": [432, 664, 686], "interest": [432, 438, 440, 608, 610, 611, 612, 614, 616, 633, 661, 664], "central": [432, 438, 608, 610, 614], "evp": [432, 438], "median": [432, 435, 436, 438, 578, 618], "regardless": [432, 435, 436, 438, 440], "elimin": [432, 435, 436, 438, 440, 616, 677, 679], "kaltenboeck": 432, "2016": [432, 435, 446, 457, 608, 611, 612, 614, 619, 673, 675, 676, 677, 679, 680, 681, 684], "storm": [432, 452, 464, 561, 562, 564, 608, 611, 612, 614, 642, 661, 662, 679], "explor": [432, 612, 614], "methodologi": [432, 467, 577, 677], "meteorologisch": 432, "zeitschrift": 432, "26": [432, 608], "207": [432, 611], "222": [432, 625, 643], "l_field": 433, "logarithm": 433, "log10": [433, 633], "l_field_out": 433, "covari": [433, 459], "matrix": [433, 459, 612, 618], "scatter": [433, 608, 610, 614, 615, 616, 640, 659], "315": [433, 618], "328": [433, 441], "018": 433, "0315": 433, "ioprcm": 433, "noisedbz_v": 434, "ref_dist": 434, "noise_field": [434, 437], "noisedbz": 434, "ang_tol": [435, 438, 439], "quasi": [435, 436, 462], "convers": [435, 438, 441, 576, 611], "zhang": [435, 438, 445, 462, 577], "reev": [435, 462], "kumjian": [435, 436, 462], "tschallen": [435, 462], "tr\u00f6mel": 435, "simmer": [435, 445, 462], "wai": [435, 462, 611, 619, 621, 633, 675, 684, 686], "33": [435, 608, 611, 612, 662, 681], "551": 435, "562": [435, 618], "rmax": 436, "50000": [436, 636, 640, 661, 662, 679], "weight_pow": 436, "ab": [436, 608], "grng": 436, "tobin": 436, "2017": [436, 438, 616], "surfac": [436, 442, 452, 611, 661, 662], "ic": [436, 438, 457, 577, 650, 663, 664], "pellet": 436, "forecast": [436, 612], "2065": 436, "2082": 436, "bukovc": 438, "winter": [438, 452, 642, 661, 662], "liquid": 438, "reveal": 438, "2dvd": 438, "oklahoma": [438, 557, 614], "56": [438, 608, 611, 665], "1345": 438, "1363": [438, 618], "along_azi": 439, "fixed_rang": 439, "fixed_azimuth": 439, "fixed_elev": 439, "rng_tol": 439, "value_start": 439, "value_stop": 439, "acoord": 439, "along_el": 439, "along_rng": 439, "stop": 439, "cappi_level": 441, "zr_a": 441, "200": [441, 619, 684], "zr_b": 441, "core_wt_threshold": 441, "conv_wt_threshold": 441, "conv_scale_km": 441, "min_reflect": 441, "conv_min_refl": 441, "conv_core_threshold": 441, "42": [441, 442, 452, 464, 608, 610, 611, 614, 661, 662], "override_check": 441, "computation": 441, "\u00e0": 441, "trou": 441, "wavelet": 441, "atwt": 441, "multiresolut": 441, "focus": [441, 608, 610, 611], "raut": 441, "2008": [441, 630], "2020": [441, 577, 612, 616, 618, 619, 642, 673, 683, 684], "sensit": 441, "howev": [441, 458, 612, 677], "intermedi": 441, "signific": 441, "approxim": [441, 608, 611, 618], "break": [441, 616, 620, 621], "season": 441, "2018": [441, 457, 612], "discuss": [441, 612, 622], "insensit": 441, "variat": [441, 451, 458, 618], "dyadic": 441, "scale_break_us": 441, "bypass": 441, "saniti": 441, "fall": 441, "categori": [441, 610, 616], "strong": [441, 452, 610, 662], "updraft": 441, "activ": [441, 686], "collis": 441, "coalesc": 441, "wide": [441, 658], "remain": 441, "intens": [441, 464, 561], "unclassifi": [441, 608], "karekar": 441, "puranik": 441, "infrar": [441, 608], "satellit": [441, 608], "ieee": [441, 459], "geosci": [441, 459], "remot": [441, 459, 610, 611, 612, 618, 619, 629, 684], "sen": [441, 459], "lett": 441, "330": [441, 618], "seed": 441, "reeder": 441, "jakob": 441, "cascad": 441, "downscal": 441, "geophi": 441, "123": [441, 443, 658], "2050": 441, "2067": 441, "louf": 441, "gayatri": 441, "murugavel": 441, "konwar": 441, "prabhakaran": 441, "tran": 441, "5409": 441, "5415": 441, "dx": [442, 452, 464, 661, 662], "dy": [442, 452, 464, 610, 661, 662], "level_m": [442, 452, 662], "bkg_rad_km": [442, 452, 661, 662], "11": [442, 452, 457, 599, 608, 610, 616, 630, 636, 637, 662, 670, 673, 680, 681, 682], "55": [442, 452, 608, 610, 654, 661, 662], "calc_thr": [442, 452, 661, 662], "weak_echo_thr": [442, 452, 661, 662], "min_dbz_us": [442, 661], "db_averag": [442, 452, 661, 662], "remove_small_object": [442, 452, 661, 662], "min_km2_siz": [442, 452, 661, 662], "val_for_max_conv_rad": [442, 661], "max_conv_rad_km": [442, 661], "cs_core": 442, "nosfcecho": [442, 452, 661, 662], "weakecho": [442, 452, 661, 662], "sf": [442, 661], "conv": [442, 661], "estimate_flag": [442, 452, 661, 662], "estimate_offset": [442, 452, 661, 662], "partit": [442, 452, 464, 616, 624], "pars": [442, 452, 611, 612, 618], "least": [442, 452, 661], "simpler": [442, 452, 661], "percentag": [442, 452], "weak": [442, 452, 661, 662], "snow": [442, 446, 452, 457, 577, 591, 611, 642, 661, 662, 663, 664], "underestim": [442, 452, 661, 662], "wih": [442, 452], "convsf_dict": [442, 661, 662], "raindrop": [442, 452, 661, 662], "pacif": [442, 452, 661, 662], "warm": [442, 452, 458, 661], "pool": [442, 452, 661, 662], "implic": [442, 452, 661, 662], "appl": [442, 452, 460, 462, 464, 466, 577, 619, 661, 662, 684], "meteor": [442, 452, 460, 462, 464, 466, 577, 619, 661, 662, 673, 684], "36": [442, 452, 608, 630, 633, 636, 640, 654, 659, 661, 662, 665, 679, 682], "847": [442, 452, 618, 661, 662], "867": [442, 452, 618, 661, 662], "0450": [442, 452, 661, 662], "036": [442, 452, 661, 662], "3c0847": [442, 452, 661, 662], "morsdo": [442, 452, 661, 662], "3e2": [442, 443, 452, 658, 661, 662], "smith": [442, 452, 661, 662], "wilheit": [442, 452, 661, 662], "zipser": [442, 452, 661, 662], "character": [442, 452, 464, 661, 662], "tropic": [442, 452, 661, 662, 664], "kwajex": [442, 452, 661, 662], "385": [442, 452, 618, 661, 662], "415": [442, 452, 661, 662], "jam2206": [442, 452, 661, 662], "field_bin": [443, 658], "altitude_bin": [443, 658], "field_mask": [443, 658], "min_frac_thr": [443, 658], "contour": [443, 618, 627, 638, 656, 658, 682], "diagram": [443, 627, 657, 666, 682], "cfad": [443, 618, 627, 657, 666, 682], "1995": [443, 452, 464, 658, 661, 662], "histogram": [443, 633, 658, 677], "largest": 443, "row": [443, 608, 610, 612, 658], "creation": [443, 618], "total": [443, 458, 459, 460, 611, 614, 624, 625, 626, 629, 630, 631, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 682], "freq_norm": [443, 658], "height_edg": [443, 658], "field_edg": [443, 658], "kinemat": [443, 466, 619, 658, 684], "microphys": [443, 608, 658], "evolut": [443, 658], "florida": [443, 612, 658], "cumulonimbu": [443, 658], "mon": [443, 658], "wea": [443, 658], "rev": [443, 658], "1941": [443, 658], "1963": [443, 658], "0493": [443, 658], "3c1941": [443, 658], "tdkame": [443, 658], "the_spectra": 444, "vel_bin": 444, "wavelength": [444, 608, 611], "left_limit": 444, "right_limit": 444, "new_spectra": 444, "new_bin": 444, "a_field": [445, 446, 449], "rr_field": [445, 446, 447, 448, 449, 450, 451], "go": [445, 446, 447, 449, 450, 457, 602, 609, 610, 615, 616, 618, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 676], "diederich": 445, "tromel": [445, 462], "2015": [445, 448, 462, 673], "wavelenght": 445, "hydrometeorologi": 445, "487": [445, 608], "502": [445, 618], "alphazr": 446, "0376": [446, 448, 449, 450], "betazr": 446, "6112": [446, 448, 449, 450], "alphaz": [446, 449, 450], "betaz": [446, 449, 450], "alphaa": [446, 449], "betaa": [446, 449], "mp_factor": 446, "hydro_field": [446, 457], "main_field": [446, 449, 450], "thresh_max": [446, 449, 450], "main": [446, 449, 450, 608, 610, 611, 612, 618, 619, 645, 684], "secondari": [446, 449, 450, 618], "besic": [446, 457], "figuera": [446, 447, 457], "ventura": [446, 457], "grazioli": [446, 457, 459], "gabella": [446, 457], "germann": [446, 457], "bern": [446, 457, 459], "statist": [446, 457, 578, 618, 619, 684], "cluster": [446, 457], "semi": [446, 457], "supervis": [446, 457], "approach": [446, 457, 608, 611, 634], "mea": [446, 457, 591, 642, 662], "4425": [446, 457], "4445": [446, 457], "5194": [446, 457, 591, 642, 662], "amt": [446, 457, 591, 642, 662], "term": [447, 618], "monitor": 447, "french": 447, "sever": [447, 610, 618, 662], "quantit": 447, "ideal": [447, 611], "quarterli": 447, "royal": 447, "2012": [447, 458, 460], "1002": [447, 618], "qj": 447, "1934": 447, "fabri": 448, "fr\u00e9d\u00e9ric": 448, "meterologi": 448, "ch": [448, 663, 665], "pg": 448, "148": 448, "165": 448, "1017": 448, "cbo9781107707405": 448, "blend": [449, 450, 612, 650], "rain_main": [449, 450], "alphakdp": 450, "betakdp": 450, "polynomi": 451, "develop": [451, 452, 608, 612, 618, 662, 673, 683], "mcgill": [451, 673], "doell": 451, "systemat": 451, "drop": [451, 611, 612, 618], "northern": [451, 610], "germani": 451, "seven": 451, "year": [451, 608, 610, 614, 617, 629, 630], "1998": 451, "1545": [451, 618], "1556": 451, "joss": 451, "switzerland": 451, "vdf": 451, "hochschulverlag": 451, "ag": [451, 457, 663], "eth": 451, "zurich": 451, "134": [451, 608], "min_val_us": [452, 662], "binary_clos": 452, "val_for_max_rad": [452, 662], "max_rad_km": [452, 662], "core_v": [452, 662], "bkgd_val": [452, 662], "feat_val": [452, 662], "overest_field": [452, 662], "underest_field": [452, 662], "featur": [452, 609, 610, 612, 616, 622, 627, 642, 657, 658, 661, 666, 673, 682], "2023": [452, 614, 673], "steiner": [452, 464, 618, 661, 662], "lauratomkin": [452, 591, 618], "overestim": [452, 661, 662], "feature_dict": [452, 662], "climatolog": [452, 464, 661, 662], "gaug": [452, 464, 661, 662], "1978": [452, 464, 661, 662], "2007": [452, 464, 661, 662], "miller": [452, 591, 642, 662], "2024": [452, 606, 615, 616, 662], "identif": [452, 591, 642, 662], "faint": [452, 662], "prep": [452, 662], "sonde_dset": 453, "time_kei": 453, "height_kei": 453, "nvar": 453, "vap": 453, "startard": 453, "ncvar": 453, "return_d": 453, "freq": 454, "hz": [454, 457, 648, 664], "freq_band": 454, "grid1": 455, "grid2": 455, "return_valu": 455, "displac": 455, "en": [455, 614, 618, 619, 673, 683, 684], "wikipedia": 455, "phase_correl": 455, "inspir": 455, "christoph": 455, "gohlk": 455, "lfd": 455, "uci": 455, "imreg": 455, "advect": [455, 456, 618], "trim_edg": 456, "shifted_grid": 456, "subset": [456, 602, 608, 610, 614, 618, 627, 657, 659], "hydro_nam": 457, "lr": [457, 663], "rp": [457, 663], "rn": [457, 663], "vi": [457, 663], "mh": [457, 663], "ih": [457, 663], "hdg": [457, 663], "var_nam": 457, "zh": 457, "relh": 457, "mass_cent": 457, "lapse_r": 457, "entropy_field": 457, "radar_freq": [457, 664], "compute_entropi": 457, "output_dist": 457, "ndarrai": [457, 578, 681], "centroid": 457, "nclass": 457, "nvariabl": 457, "h_iso0": 457, "decai": 457, "decreas": [457, 608, 658], "celsiu": 457, "entropi": 457, "hertz": 457, "fields_dict": 457, "directionari": 457, "hydro": [457, 663, 664], "aggreg": [457, 663, 664], "crystal": [457, 663, 664], "light": [457, 639, 663, 664], "rime": [457, 663], "particl": [457, 663], "wet": [457, 663, 664], "hail": [457, 614, 618, 663, 664], "densiti": [457, 608, 663, 664], "graupel": [457, 663, 664], "shannon": 457, "demix": 457, "propx": 457, "proport": [457, 458], "decomposit": 457, "gehr": 457, "praz": 457, "unravel": 457, "mixtur": 457, "4847": 457, "4866": 457, "suppli": [457, 664], "cg": 458, "backscatt": [458, 462], "clpf": 458, "length_scal": 458, "first_guess": 458, "finite_ord": 458, "fill_valu": [458, 459, 460, 464, 612, 664, 675, 676, 681], "psidp_field": [458, 459, 460, 663], "verbos": [458, 618, 619, 684], "maesaka": 458, "monoton": [458, 461, 639], "propag": [458, 459, 460], "notat": 458, "dr": 458, "analys": [458, 459, 460], "cost": [458, 618], "nonlinear": 458, "conjug": 458, "gradient": [458, 618, 639], "broyden": 458, "fletcher": 458, "goldfarb": 458, "shanno": 458, "bfg": 458, "100k": 458, "consider": [458, 614, 661, 662], "parameter": 458, "attentu": 458, "constraint": 458, "bring": [458, 608], "guess": 458, "root": [458, 683, 686], "signifi": [458, 464], "everywher": 458, "exactli": [458, 616, 633], "avoid": [458, 618, 621, 686], "converg": 458, "fact": [458, 460], "closer": [458, 615], "finit": 458, "accuraci": 458, "maxit": 458, "met": 458, "achiev": 458, "somewhat": 458, "arbitrari": 458, "parallel": [458, 459, 460], "thread": [458, 612], "cpu": 458, "multiprocess": 458, "capabl": [458, 611, 677, 681], "relev": [458, 615, 616, 622], "kdp_dict": [458, 459, 460], "phidpf_dict": 458, "phidpr_dict": [458, 459, 460], "forward": [458, 588, 589], "iwanami": 458, "maki": 458, "seventh": 458, "european": 458, "confer": 458, "hydrologi": 458, "rcov": 459, "pcov": 459, "prefilter_psidp": [459, 460], "filter_opt": [459, 460], "kalman": 459, "schneeb": 459, "psidp": [459, 460], "char": [459, 460], "capit": [459, 460], "intercept": 459, "slope": 459, "3x3": 459, "4x4": 459, "filter_psidp": [459, 460, 618], "enabl": [459, 460, 611, 614, 618], "kdp_std_dict": 459, "dev": [459, 611, 614, 616, 619, 679, 684], "ensembl": 459, "52": [459, 462, 608, 611, 656, 659], "5137": 459, "5149": 459, "1109": [459, 618], "tgr": 459, "2287017": 459, "windsiz": 460, "n_iter": 460, "vulpiani": [460, 618], "pre": [460, 615, 618, 619, 684], "advantag": 460, "eat": 460, "gianfranco": 460, "mario": 460, "montopoli": 460, "luca": 460, "delli": 460, "passeri": 460, "antonio": 460, "gioia": 460, "pietro": 460, "giordano": 460, "frank": 460, "marzano": 460, "On": [460, 609, 610], "dual": [460, 615, 618], "mountain": 460, "climatol": [460, 577, 661, 662], "51": [460, 608, 659], "405": [460, 618], "425": [460, 618], "05024": 460, "profile_field": 461, "height_field": 461, "3re": 461, "whole": [461, 618], "height_dict": 461, "profile_dict": 461, "desired_angl": [462, 618], "wanted_angl": 462, "dictonari": 462, "troemel": 462, "clim": [462, 611, 612], "2529": 462, "2548": 462, "meteorol": [462, 661, 662], "54": [462, 608, 610, 611, 630], "2344": 462, "2359": 462, "submit": [462, 612, 673], "work_level": 464, "3000": [464, 675, 679], "peak_rel": 464, "area_rel": 464, "medium": 464, "bkg_rad": 464, "11000": [464, 679], "use_intens": 464, "bright": [464, 608], "sgp": [464, 557], "peaked": 464, "eclass": 464, "z_want": [466, 467, 619, 665, 684], "valid_ray_min": [466, 619, 684], "velocity_azimuth_displai": [466, 619, 684], "one_sweep_radar": 466, "extract_sweep": [466, 614, 634, 658, 661, 662, 665], "vad": [466, 467, 618, 619, 627, 657, 666, 682, 684], "amount": [466, 611, 614, 619, 662, 679, 684], "_averag1d": [466, 619, 684], "idw": 466, "brown": [466, 618, 619, 684], "wexler": [466, 619, 684], "1968": [466, 619, 684], "105": [466, 619, 665, 684], "113": [466, 619, 659, 684], "linespac": 467, "michelson": [467, 618, 673], "andersson": 467, "koistinen": [467, 673], "collier": 467, "riedl": 467, "szturc": 467, "gjertsen": 467, "nielsen": 467, "overgaard": 467, "2000": [467, 608, 635, 679], "baltex": 467, "centr": 467, "smhi": 467, "swedish": 467, "hydrolog": 467, "institut": [467, 608, 681], "norrkop": 467, "suffix": 479, "tmp": 479, "dir": 479, "temporari": [479, 618], "my_cwd": 479, "getcwd": 479, "tmpdir": 479, "_": [479, 610, 614, 615, 616, 629, 630, 663], "txt": [479, 618, 683], "wt": 479, "assert": [479, 618, 619, 684], "isfil": 479, "path_to_fil": 556, "local": [556, 609, 610, 614, 615, 618, 619, 673, 683, 684], "without": [557, 571, 596, 608, 611, 618, 664, 683], "site": [557, 608, 610, 611, 612, 613, 614, 615, 616, 624, 630, 659, 676, 679, 683], "puls": [560, 611, 618, 677], "min_valu": 561, "max_valu": 561, "grid_len": 561, "sigma": [561, 562, 650, 651], "mu": [561, 562], "masked_boundari": 561, "gaussian": [561, 562, 618, 650], "dp_phase_shift": [563, 659, 675], "diff_phas": [563, 675], "differential_reflect": [563, 615, 629, 643, 650, 680, 681], "rectangular": [564, 565, 612, 618], "alia": [569, 570, 612, 618], "miscellan": 571, "depreci": [571, 618], "caution": [571, 658], "radian": [572, 574, 597, 608], "std": [574, 575, 593, 599], "convolut": 576, "ndimag": [576, 618, 650, 651], "generic_filt": 576, "pi": [576, 608, 677], "std_dev": 576, "azimuth_spread": 577, "spatial_spread": 577, "spatial_rang": 577, "sphere_dist": [577, 590], "for_azimuth": [577, 590], "get_sweep_rai": 577, "subset_field": 577, "assemble_column": 577, "murphi": 577, "columnar": 577, "cvp": [577, 618], "situ": 577, "37": [577, 608, 611, 633, 659, 662, 680], "1623": 577, "1642": 577, "0011": 577, "bukov\u010di\u0107": 577, "zrni\u0107": 577, "59": [577, 608, 611], "991": [577, 618], "1009": [577, 618], "19": [577, 608, 610, 611, 618, 661, 665, 666, 681, 682], "0140": 577, "stat": [578, 608, 618], "nvalid": 578, "az_tol": 579, "radar_rhi": 579, "target_elev": 580, "el_tol": 580, "radar_ppi": 580, "epoch": [581, 582, 583, 584, 585, 608], "max_offset": 586, "running_win_dt": 586, "deg_rng": 586, "consider_2pi_jump": 586, "is_ppi": 586, "wise": 586, "could": [586, 612, 616, 619, 630, 684], "strategi": [586, 608], "might": [586, 609, 675, 686], "goe": [586, 612], "shot": 586, "navg": 587, "nnoise_min": 587, "hildebrand": [587, 618], "sehkon": 587, "1974": 587, "spectral": [587, 608, 611, 618], "articl": 587, "peak": [587, 611, 677], "var": [587, 603, 604, 608], "varianc": [587, 634], "nnois": 587, "sekhon": [587, 618], "808": 587, "811": [587, 618], "target_latitud": [588, 601], "target_longitud": [588, 601], "bear": [588, 610], "alongitudeg": 588, "great": [588, 601], "circl": [588, 601, 661], "known": [588, 618, 619, 681, 684], "6371000": [588, 601], "calculatitude": 588, "degress": [588, 601], "further": [590, 609, 611, 615, 616], "get_column_rai": 590, "mute_field": [591, 642], "mute_threshold": [591, 642], "field_threshold": [591, 642], "discern": 591, "mute": [591, 618, 627, 638, 656, 661, 662, 682], "allen": [591, 642, 662], "5515": [591, 642, 662], "5525": [591, 642, 662], "interval_min": [592, 593], "interval_max": [592, 593], "endpoint": [592, 593], "to_vpt": 594, "90": [594, 608, 610, 611, 619, 684], "verticl": 594, "radar1": 595, "radar2": 595, "tup": 596, "guarante": 596, "broadcast": 596, "broadcasted_arrai": 596, "angles1": 597, "angles2": 597, "angle1": 598, "angle2": 598, "eg": 599, "ma": [599, 619, 633, 635, 658, 661, 662, 676, 680, 684], "sim_vel_field": 600, "kind": [600, 608, 616, 624], "slinear": 600, "quadrat": 600, "cubic": 600, "interp1d": [600, 619, 684], "sim_vel": [600, 619, 684], "rng_min": 602, "rng_max": 602, "ele_min": 602, "ele_max": 602, "azi_min": 602, "azi_max": 602, "coverag": [602, 608, 618, 619, 684], "11pt": 603, "stdev": 603, "texarrai": 603, "pyradarobj": 603, "tex": 604, "single_scan": 605, "is_vpt": 605, "mislabel": 605, "properli": [605, 619, 630, 684], "releas": [606, 613, 619, 622, 673, 676, 679, 683, 684], "post8": 606, "aug": 606, "29": [606, 608, 611], "guid": [606, 608, 609, 618, 673], "public": [606, 608, 612, 614, 616, 618, 619, 675, 676, 677, 679, 680, 681, 684], "broken": [606, 618], "aerosol": 608, "experi": 608, "depart": [608, 611, 612, 614, 675, 676, 677, 679, 680, 681], "energi": [608, 611, 612, 614, 675, 676, 677, 679, 680, 681], "iop": 608, "goal": 608, "studi": 608, "lifecycl": 608, "houston": [608, 629], "impact": [608, 614, 650], "uniqu": 608, "suit": [608, 618, 679], "seabreez": 608, "coast": [608, 612], "cleaner": [608, 680], "air": [608, 612, 616], "pollut": 608, "click": [608, 609, 616, 621], "post": [608, 610, 611, 612, 614, 616, 618, 621, 673], "overlai": 608, "texa": [608, 629], "lightn": 608, "csapr2": 608, "wildfir": 608, "smoke": 608, "entrain": 608, "juli": [608, 630], "we": [608, 610, 611, 612, 614, 616, 619, 622, 629, 630, 633, 639, 658, 659, 661, 662, 664, 669, 675, 676, 677, 679, 680, 681, 683, 684, 685, 686], "highlight": [608, 609, 612], "minut": [608, 610, 611, 615, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671], "pyart": [608, 610, 614, 616, 619, 621, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673, 675, 676, 677, 679, 680, 681, 683, 684, 686], "pyplot": [608, 609, 610, 611, 612, 614, 615, 616, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 675, 676, 677, 679, 680], "plt": [608, 609, 610, 611, 612, 614, 615, 616, 618, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 675, 676, 677, 679, 680], "xr": [608, 611], "s3f": 608, "ccr": [608, 610, 612, 614, 615, 616, 629, 630, 633, 634, 640, 641, 647, 654, 659, 661, 662, 669, 676, 677, 680], "panda": [608, 611, 614, 618, 686], "pd": [608, 610, 611, 614], "kdtree": 608, "inlin": [608, 615, 650, 651], "download": [608, 609, 611, 612, 616, 618, 619, 624, 625, 627, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673, 684, 686], "longwav": 608, "ensur": [608, 610, 618, 662], "c13": 608, "denot": [608, 634], "anonym": [608, 610], "credenti": 608, "s3filesystem": 608, "day_no": 608, "168": 608, "dai": [608, 614, 615], "16th": 608, "leap": 608, "hour": [608, 612, 614, 615, 629, 630], "goes16": 608, "abi": 608, "l1b": 608, "radc": 608, "02d": [608, 615], "fi": 608, "or_abi": 608, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 608, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 608, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 608, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 608, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 608, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 608, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 608, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 608, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 608, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 608, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 608, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 608, "goes_d": 608, "open_dataset": [608, 611], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 608, "lt": [608, 611], "gt": [608, 611], "1500": [608, 675], "2500": 608, "number_of_time_bound": 608, "number_of_image_bound": 608, "num_star_look": 608, "datetime64": [608, 611, 659], "07": [608, 610, 611, 630, 642, 656, 661, 662, 681, 682], "1282": 608, "1013": 608, "y_imag": 608, "08624": 608, "x_imag": 608, "03136": 608, "band_id": 608, "int8": 608, "band_wavelength": 608, "t_star_look": 608, "band_wavelength_star_look": 608, "rad": [608, 611], "dqf": 608, "time_bound": 608, "goes_imager_project": 608, "int32": [608, 681], "2147483647": 608, "y_image_bound": 608, "x_image_bound": 608, "algorithm_dynamic_input_data_contain": 608, "processing_parm_version_contain": 608, "algorithm_product_version_contain": 608, "star_id": 608, "channel_integration_tim": 608, "336": [608, 618], "channel_gain_field": 608, "naming_author": 608, "nesdi": 608, "standard_name_vocabulari": 608, "v35": 608, "commerc": 608, "production_sit": 608, "wcda": 608, "timeline_id": 608, "date_cr": 608, "12t20": 608, "09": [608, 610, 616, 626, 631, 661, 662, 666, 682], "3z": 608, "time_coverage_start": [608, 675, 681], "time_coverage_end": [608, 675], "08": [608, 656, 682], "7z": 608, "lut_filenam": 608, "spacelookparam": 608, "fm1a_cdrl79revp_pr_09_00_02": 608, "f45b564c": 608, "dcb9": 608, "498a": 608, "ac56": 608, "da80a1d735a5xarrai": 608, "datasetdimens": [608, 611], "1500x": 608, "2500number_of_time_bound": 608, "2number_of_image_bound": 608, "2band": 608, "1num_star_look": 608, "24coordin": 608, "j2000": 608, "mid": 608, "secondsstandard_nam": 608, "timeaxi": 608, "tbound": 608, "time_boundsarrai": 608, "x27": [608, 611], "537394048": 608, "float640": 608, "04432": 608, "04427unit": 608, "radaxi": 608, "ylong_nam": 608, "coordinatestandard_nam": 608, "projection_y_coordinatearrai": 608, "128212": 608, "128156": 608, "1281": 608, "04438": 608, "044324": 608, "044268": 608, "03856": 608, "03861unit": 608, "xlong_nam": 608, "projection_x_coordinatearrai": 608, "101332": 608, "101276": 608, "10122": 608, "0385": 608, "038556": 608, "038612": 608, "imagestandard_nam": 608, "projection_y_coordinateunit": 608, "yarrai": 608, "projection_x_coordinateunit": 608, "numberstandard_nam": 608, "sensor_band_identifierunit": 608, "1arrai": [608, 611], "wavelengthstandard_nam": 608, "sensor_band_central_radiation_wavelengthunit": 608, "umarrai": 608, "star": 608, "tarrai": 608, "01t11": 608, "43": [608, 611, 614], "000000000": [608, 611], "starstandard_nam": 608, "radiancesstandard_nam": 608, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 608, "12valid_rang": 608, "4094": 608, "mw": 608, "cm": [608, 651], "1resolut": 608, "000056": 608, "radgrid_map": 608, "goes_imager_projectioncell_method": 608, "pointancillary_vari": 608, "3750000": 608, "radianc": 608, "flagsstandard_nam": 608, "status_flagvalid_rang": 608, "1grid_map": 608, "pointflag_valu": 608, "flag_mean": 608, "good_pixel_qf": 608, "conditionally_usable_pixel_qf": 608, "out_of_range_pixel_qf": 608, "no_value_pixel_qf": 608, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 608, "5percent_good_pixel_qf": 608, "0percent_conditionally_usable_pixel_qf": 608, "0percent_out_of_range_pixel_qf": 608, "0percent_no_value_pixel_qf": 608, "0percent_focal_plane_temperature_threshold_exceeded_qf": 608, "00": [608, 610, 611, 614, 616, 618, 626, 631, 637, 656, 666, 667, 672, 682], "326423040": 608, "748365056": 608, "projectiongrid_mapping_nam": 608, "geostationaryperspective_point_height": 608, "35786023": 608, "0semi_major_axi": 608, "6378137": 608, "0semi_minor_axi": 608, "6356752": 608, "31414inverse_flatten": 608, "298": 608, "2572221latitude_of_projection_origin": 608, "0longitude_of_projection_origin": 608, "0sweep_angle_axi": 608, "south": [608, 612, 643], "extent": [608, 610, 611, 614, 615, 634, 636], "imageunit": 608, "radarrai": 608, "12824": 608, "04424": 608, "10136": 608, "03864": 608, "nominal_satellite_subpoint_lat": 608, "nomin": 608, "subpoint": 608, "standard_nam": [608, 661, 662, 664, 676, 681], "latitudeunit": [608, 611], "degrees_northarrai": 608, "nominal_satellite_subpoint_lon": 608, "longitudeunit": [608, 611], "degrees_eastarrai": 608, "199997": 608, "nominal_satellite_height": 608, "gr": 608, "80": [608, 610, 625, 654, 660], "ellipsoid": 608, "height_above_reference_ellipsoidunit": 608, "kmarrai": 608, "35786": 608, "023438": 608, "geospatial_lat_lon_ext": 608, "geospati": 608, "referencesgeospatial_westbound_longitud": 608, "152": [608, 662], "10928geospatial_northbound_latitud": 608, "76145geospatial_eastbound_longitud": 608, "94688geospatial_southbound_latitud": 608, "14": [608, 611, 612, 614, 616, 630, 639, 641, 669, 681], "57134geospatial_lat_cent": 608, "083002geospatial_lon_cent": 608, "096954geospatial_lat_nadir": 608, "0geospatial_lon_nadir": 608, "0geospatial_lat_unit": 608, "degrees_northgeospatial_lon_unit": 608, "96921e": 608, "yaw_flip_flag": 608, "spacecraft": 608, "yaw": 608, "flip": 608, "configurationvalid_rang": 608, "1flag_valu": 608, "truearrai": 608, "esun": 608, "bandpass": 608, "solar": 608, "irradi": 608, "sun": 608, "distancestandard_nam": 608, "toa_shortwave_irradiance_per_unit_wavelengthunit": 608, "um": 608, "1cell_method": 608, "meanarrai": 608, "kappa0": 608, "incom": 608, "d2": 608, "instantan": [608, 618], "divid": 608, "reflectanceunit": 608, "planck_fk1": 608, "wavenumb": 608, "c2": 608, "nu3": 608, "emiss": 608, "monochromat": 608, "nu": 608, "constantsunit": 608, "10803": 608, "299805": 608, "planck_fk2": 608, "karrai": 608, "1392": [608, 618], "73999": 608, "planck_bc1": 608, "bc_1": 608, "bc_2": 608, "planck_funct": 608, "wavenumberunit": 608, "0755": 608, "planck_bc2": 608, "99975": 608, "valid_pixel_count": 608, "condition": 608, "pixelsunit": 608, "countgrid_map": 608, "sum": [608, 617, 658], "comment": [608, 609, 651, 681], "3702838": 608, "missing_pixel_count": 608, "saturated_pixel_count": 608, "satur": 608, "radiometr": 608, "geoloc": 608, "undersaturated_pixel_count": 608, "undersatur": 608, "focal_plane_temperature_threshold_exceeded_count": 608, "exceed": 608, "thresholdunit": 608, "min_radiance_value_of_valid_pixel": 608, "pixelsstandard_nam": 608, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 608, "6443": 608, "185": 608, "5699": 608, "849287": 608, "max_radiance_value_of_valid_pixel": 608, "154": [608, 647], "23053": 608, "mean_radiance_value_of_valid_pixel": 608, "197975": 608, "std_dev_radiance_value_of_valid_pixel": 608, "toa_outgoing_radiance_per_unit_wavenumberunit": 608, "standard_devi": 608, "985853": 608, "maximum_focal_plane_temperatur": 608, "focal": 608, "valuevalid_rang": 608, "951939": 608, "focal_plane_temperature_threshold_increas": 608, "bound": [608, 611, 662], "81": [608, 610, 681], "focal_plane_temperature_threshold_decreas": 608, "percent_uncorrectable_l0_error": 608, "percent": 608, "l0": 608, "errorsvalid_rang": 608, "percentgrid_map": 608, "earth_sun_distance_anomaly_in_au": 608, "anomali": [608, 662], "astronom": 608, "unitsunit": 608, "uacell_method": 608, "016543": 608, "datainput_abi_l0_data": 608, "m6_g16_s20221932006173_e20221932008557_c": 608, "ncarrai": 608, "filenamesl1b_processing_parm_vers": 608, "parm": 608, "rad_g16_v01r00": 608, "ziparrai": 608, "packag": [608, 609, 610, 611, 612, 614, 616, 618, 619, 624, 630, 673, 676, 679, 683, 684, 686], "versionalgorithm_vers": 608, "alg": 608, "rad_v01r00": 608, "zipproduct_vers": 608, "v01r00arrai": 608, "stararrai": 608, "vnir": 608, "ir": 608, "telemetryunit": 608, "countarrai": 608, "gain": [608, 611], "noaaconvent": 608, "7standard_name_vocabulari": 608, "administr": [608, 612, 629], "servicesproject": 608, "goesproduction_sit": 608, "wcdasproduction_environ": 608, "oespatial_resolut": 608, "2km": 608, "nadirmetadata_convent": 608, "discoveri": [608, 616], "0orbital_slot": 608, "eastplatform_id": 608, "g16instrument_typ": 608, "baselin": 608, "scene_id": 608, "conusinstrument_id": 608, "fm1titl": 608, "radiancessummari": 608, "digit": 608, "outgo": 608, "engin": 608, "radiancekeywords_vocabulari": 608, "nasa": 608, "master": [608, 618, 621, 651], "gcmd": 608, "scienc": [608, 612, 614, 675, 676, 677, 679, 680, 681], "0iso_series_metadata_id": 608, "a70be540": 608, "c38b": 608, "11e0": 608, "962b": 608, "0800200c9a66licens": 608, "restrict": 608, "approv": 608, "processing_level": 608, "aeronaut": 608, "l1bcdm_data_typ": 608, "imagedataset_nam": 608, "ncproduction_data_sourc": 608, "realtimetimeline_id": 608, "6date_cr": 608, "3ztime_coverage_start": 608, "3ztime_coverage_end": 608, "7zlut_filenam": 608, "637827000": 608, "h5": [608, 618], "qtableband13": 608, "fm1a_cdrl79revh_do_08_00_00": 608, "582860861": 608, "caltargettimeinterv": 608, "fm1a_cdrl79revp_do_08_00_01": 608, "611906620": 608, "bandsaturationlimit": 608, "600000000": 608, "solarspacelookparam": 608, "fm1a_adr1233_pr_09_08_25": 608, "709281036": 608, "deadrowlistparam": 608, "mirror_record": 608, "fm1a_cdrl79revg_do_07_00_00": 608, "kalmanastroconst": 608, "xml": [608, 614], "kalmanfiltercontrol": 608, "fm1a_pr_09_08_02": 608, "677650371": 608, "kalmanmeasmaxsens": 608, "fmaa_int_only_do_09_01_00": 608, "652936814": 608, "kalmanpreprocessorcontrol": 608, "fm1a_cdrl79revj_pr_09_06_02": 608, "657795700": 608, "kalmanreferencedata": 608, "888": 608, "kalmanstarcatalog": 608, "abi_navigationrdp_band13": 608, "fm1a_cdrl79revj_do_07_00_00": 608, "abi_navigationparameters_band13": 608, "fm1a_cdrl79revh_do_07_00_00": 608, "abi_resamplingimplementation_band13": 608, "fm1a_cdrl79revh_do_07_02_00": 608, "602129336": 608, "abi_resamplingparameters_band13": 608, "starlookparam": 608, "stardetectionparam": 608, "resamplingscaledconvers": 608, "fmaa_int_only_do_08_00_00": 608, "1111": [608, 611, 618], "blockreleaseregion": 608, "2222": 608, "csv": [608, 610], "ir_retrievalparamet": 608, "fm1a_cdrl79revh_do_09_01_00": 608, "652936750": 608, "radiancelut_band13": 608, "fm1a_cdrl79reve_do_08_00_00": 608, "ict_record": 608, "fm1a_tmabi_18_159_pr_09_00_02": 608, "icm_conversionconst": 608, "fm1a_cdrl43": 608, "18_do_09_01_00": 608, "icm_sensorcoeffici": 608, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 608, "676949608": 608, "h5id": 608, "da80a1d735a5": 608, "team": 608, "bobbi": [608, 633], "jackson": [608, 633], "pug": 608, "l2": [608, 618], "file_id": 608, "def": [608, 610, 614, 615, 618, 619, 639, 662, 664, 684], "calculate_degre": 608, "x_coordinate_1d": 608, "y_coordinate_1d": 608, "projection_info": 608, "lon_origin": 608, "attr": 608, "longitude_of_projection_origin": 608, "perspective_point_height": 608, "semi_major_axi": 608, "r_eq": 608, "r_pol": 608, "semi_minor_axi": 608, "matric": 608, "x_coordinate_2d": 608, "y_coordinate_2d": 608, "meshgrid": [608, 633, 658], "lambda_0": 608, "a_var": 608, "b_var": 608, "c_var": 608, "r_": 608, "s_x": 608, "s_y": 608, "s_z": 608, "conu": 608, "seterr": 608, "abi_lat": 608, "arctan": 608, "abi_lon": 608, "crop": 608, "our": [608, 610, 613, 615, 629, 630, 633, 639, 640, 659, 661, 662, 669, 673], "circ": 608, "95": [608, 610, 659, 681], "nan_to_num": 608, "9999": [608, 681], "lat_rang": 608, "lon_rang": 608, "lat_min": 608, "lat_max": 608, "lat_min_bound": 608, "argmin": 608, "lat_max_bound": 608, "lon_min": 608, "lon_max": 608, "lon_min_bound": 608, "lon_max_bound": 608, "a1": [608, 611, 616, 647], "disoveri": 608, "toolkit": [608, 611, 612, 614, 616, 675, 676, 677, 679, 680, 681], "5439": [608, 611, 616], "1467901": 608, "page": [608, 613, 618, 621], "block": [608, 616, 618], "autom": [608, 614, 616], "catalogu": 608, "adam": [608, 618], "theisen": 608, "geometri": [608, 614, 618], "cell_track_info": 608, "read_csv": [608, 610], "raw": [608, 624, 625, 634], "githubusercont": 608, "com": [608, 619, 630, 651, 683, 684, 686], "adamtheisen": [608, 618], "cell": [608, 615, 616, 618, 650, 670], "houcsapr": 608, "20220617": 608, "index_col": 608, "parse_d": 608, "unnam": 608, "scan_mod": [608, 611, 618], "template_nam": 608, "azimuth_min": 608, "azimuth_max": 608, "elevation_min": 608, "elevation_max": 608, "range_min": 608, "range_max": 608, "cell_azimuth": 608, "cell_rang": 608, "cell_zh": 608, "ngates_gt_0": 608, "ngates_gt_10": 608, "ngates_gt_30": 608, "ngates_gt_50": 608, "ngates_gt_10_5km": 608, "ngates_gt40_5km": 608, "03": [608, 611, 629, 656, 666, 672, 682], "hou": 608, "303": [608, 618], "74450": 608, "637207": 608, "383545": 608, "109900": 608, "297": 608, "59216": 608, "307": [608, 618], "63367": 608, "021240": 608, "988037": 608, "910767": 608, "700": [608, 611, 614, 618, 647, 656, 682], "930866": 608, "78": 608, "302": 608, "64587": 608, "645874": 608, "1800": [608, 610, 675], "776333": 608, "55798": 608, "59094": 608, "97546": 608, "99744": 608, "975464": 608, "900": [608, 675], "972101": 608, "46": [608, 659], "2826": 608, "301": [608, 618], "48132": 608, "50330": 608, "648193": 608, "382324": 608, "503296": 608, "62400": 608, "327583": 608, "990": 608, "989": [608, 618], "210": [608, 662], "995": [608, 618, 640, 656, 682], "2827": 608, "305": [608, 618], "70007": 608, "404297": 608, "700073": 608, "13600": 608, "037998": 608, "2828": 608, "23510": 608, "26807": 608, "235107": 608, "459156": 608, "2829": 608, "296": [608, 618], "08704": 608, "306": [608, 618], "16150": 608, "999268": 608, "998291": 608, "646362": 608, "59100": 608, "882927": 608, "807": 608, "783": [608, 618], "27": [608, 612, 659], "63": [608, 681], "830": 608, "2830": 608, "05835": 608, "08032": 608, "058350": 608, "62800": 608, "198204": 608, "767": [608, 618], "76": 608, "773": [608, 618], "2831": 608, "notebook": [608, 610, 611, 615, 617, 618, 624, 625, 627, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 676, 679, 680, 686], "much": [608, 610, 611, 612, 614, 615, 616, 618, 658, 677, 679, 680], "frequent": 608, "start_hour": [608, 615], "end_hour": [608, 615], "utc": [608, 610, 611, 612, 615, 616, 629, 630, 653], "48": [608, 610, 636, 682], "04": [608, 611, 614, 615, 659, 672, 682], "38": [608, 611, 630], "57": [608, 661, 662], "rjackson": [608, 633], "paw": 608, "houcsapr2cfrs2": 608, "20220712": 608, "200714": 608, "easili": [608, 614], "eol": 608, "cgi": 608, "codiac": 608, "fgr_form": 608, "016": 608, "lma_d": 608, "lylout_220712_000000_86400_map500m": 608, "afternoon": 608, "203229": 608, "lylout_220617_000000_86400_map500m": 608, "radarmapdisplai": [608, 610, 614, 615, 616, 618, 629, 630, 633, 641, 647, 659, 669, 671, 675, 676, 677, 679, 680], "subplot": [608, 610, 611, 612, 614, 615, 616, 618, 629, 633, 639, 640, 641, 653, 658, 659, 660, 661, 662, 663, 664, 665, 669, 677], "subplot_kw": 608, "disp": 608, "graph": [608, 609, 610, 611, 612, 614, 615, 616, 618, 624, 625, 629, 630, 633, 634, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 669, 670, 671, 675, 676, 677, 679, 680], "150": [608, 609, 646, 664, 677], "plot_ppi_map": [608, 610, 614, 615, 616, 618, 629, 630, 633, 641, 647, 659, 669, 676, 677, 680], "flash_tim": 608, "squeez": [608, 675], "argwher": [608, 633], "logical_and": [608, 633], "flash_time_start": 608, "17t20": 608, "flash_center_longitud": 608, "flash_center_latitud": 608, "set_xlim": [608, 654, 658, 663], "96": [608, 610, 611, 633, 673, 680], "94": [608, 681], "set_ylim": [608, 654, 658, 663], "deprecationwarn": [608, 679], "escap": 608, "sequenc": [608, 612], "xf": 608, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 608, "ipykernel_41252": 608, "2371313213": 608, "opt": [608, 609, 611, 612, 618], "anaconda3": [608, 611, 612, 673, 676, 679, 683, 686], "env": [608, 609, 611, 612, 614, 616, 618, 624, 630, 673, 676, 679, 686], "pyart_env2": 608, "lib": [608, 611, 612, 614, 616, 624, 630, 676, 679, 683], "python3": [608, 611, 612, 614, 616, 617, 624, 630], "mpl": [608, 618, 663, 676, 679], "gridlin": [608, 612, 614, 641], "451": [608, 611], "userwarn": [608, 616, 624, 630], "xlabels_top": [608, 612], "deprec": [608, 612, 621, 676, 679], "top_label": [608, 614, 641], "toggl": [608, 618], "visibl": [608, 612, 618], "ylabels_right": [608, 612], "right_label": [608, 614, 641], "strike": 608, "overlaid": 608, "csapr_rhi": 608, "203012": 608, "flash_alt": 608, "flash_init_altitud": 608, "flash_lon": 608, "flash_init_longitud": 608, "flash_lat": 608, "flash_init_latitud": 608, "rhi_lon": 608, "flatten": [608, 633], "rhi_lat": 608, "rhi_alt": 608, "kdtree_data": 608, "stack": [608, 611, 614, 619, 683, 684], "inp_data": 608, "where_in_rhi": 608, "flash_rang": 608, "1e3": 608, "motiv": [609, 612], "blog": [609, 614, 618, 619, 684], "come": [609, 612, 661], "colorschem": 609, "vision": 609, "defici": 609, "illustr": 609, "collabor": 609, "contributor": [609, 621, 673, 685], "guidenc": 609, "ve": [609, 615], "trip": [609, 680], "me": 609, "assist": 609, "https_link_to_your_fork": 609, "unfamiliar": 609, "yml": [609, 618, 673, 686], "slightli": [609, 612, 641], "latest": [609, 618, 619, 673, 684], "button": [609, 613, 621], "kshrc": 609, "export": [609, 683, 686], "pip": [609, 619, 683, 684, 686], "checkout": [609, 619, 621, 684], "newblog_post": 609, "plot_ppi_mdv": [609, 646, 656, 682], "radardisplai": [609, 610, 611, 616, 618, 624, 625, 634, 639, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 655, 658, 660, 663, 664], "jonathan": [609, 624, 625, 635, 636, 643, 644, 646, 648, 652, 655, 686], "helmu": [609, 612, 614, 619, 624, 625, 635, 636, 643, 644, 646, 648, 652, 655, 673, 675, 676, 677, 679, 680, 681, 684, 686], "jhelmu": [609, 618, 624, 625, 635, 636, 643, 644, 646, 648, 652, 655], "anl": [609, 624, 625, 629, 630, 633, 635, 636, 639, 640, 641, 643, 644, 645, 646, 648, 650, 651, 652, 653, 655, 659, 660, 669, 670, 671], "licens": [609, 619, 624, 625, 629, 630, 633, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 665, 669, 670, 671, 673, 684], "bsd": [609, 619, 624, 625, 629, 630, 633, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 665, 669, 670, 671, 673, 684], "claus": [609, 619, 624, 625, 629, 630, 633, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 665, 669, 670, 671, 684], "get_test_data": [609, 624, 625, 633, 635, 636, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 669, 670, 671], "110635": [609, 635, 646, 679], "figsiz": [609, 610, 611, 612, 614, 615, 616, 624, 625, 629, 630, 633, 634, 639, 640, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 658, 660, 661, 662, 663, 664, 669, 676, 677, 679, 680], "add_subplot": [609, 624, 625, 634, 635, 636, 643, 644, 645, 646, 648, 649, 650, 651, 652, 655, 664], "111": [609, 610, 612, 615, 616, 633, 635, 636, 641, 644, 645, 646, 650, 651, 652, 659], "get_cmap": [609, 642, 661, 662], "jet": 609, "colorbind": 609, "pyart_homeyerrainbow": [609, 611, 633, 639, 640, 641, 646, 649, 653, 654, 660], "plot_rhi_cfradial_singlescan": [609, 649, 656, 682], "panel": [609, 616, 627, 638, 656, 658, 682], "sgpxsaprrhicmaci5": [609, 648, 649, 653, 658], "c0": [609, 624, 648, 649, 653, 658, 676], "20110524": [609, 648, 649, 653, 658], "015604_nc4": [609, 648, 649, 653, 658], "read_cfradi": [609, 624, 633, 636, 640, 648, 649, 653, 658, 663, 664, 665], "subplots_adjust": [609, 611, 639, 648, 649], "hspace": [609, 611, 648, 649], "xlabel": [609, 611, 633, 648, 649, 677], "ylabel": [609, 611, 633, 648, 649, 677], "stage": 609, "my": [609, 683], "untrack": [609, 619, 684], "blog_pr": 609, "restor": 609, "discard": 609, "_static": 609, "As": [609, 611, 615, 619, 675, 677, 679, 680, 684], "statement": [609, 615, 618, 619, 684], "hint": [609, 612, 620], "wait": [609, 612], "editor": [609, 617, 619, 684, 686], "enh": [609, 618], "abort": 609, "person": 609, "addition": [609, 612], "anyon": 609, "respond": 609, "walk": [610, 611, 614, 615, 616, 617], "septemb": 610, "2021": [610, 661, 662], "thunderstorm": 610, "southern": 610, "wisconsin": [610, 618], "illinoi": 610, "trail": 610, "damag": [610, 614], "milwauke": [610, 614], "madison": 610, "imageri": [610, 614], "russ": 610, "schumach": 610, "colorado": 610, "unvers": 610, "put": 610, "togeth": [610, 611, 612, 618], "hi": [610, 662], "glob": [610, 611, 614, 615, 616, 619, 684], "math": 610, "atan2": 610, "tempfil": 610, "cfeatur": [610, 612, 614, 615, 616], "mcolor": [610, 612, 642, 661, 662], "mdate": 610, "uscounti": [610, 614, 615], "imageio": 610, "pytz": [610, 618], "temploc": 610, "mkdtemp": 610, "filterwarn": [610, 611, 612, 614, 615, 633], "let": [610, 611, 612, 613, 615, 616, 618, 619, 629, 630, 633, 639, 641, 658, 659, 661, 662, 664, 669, 675, 677, 679, 680, 681, 684, 686], "machin": [610, 611, 614, 616, 686], "kmkx": [610, 614], "nexrad_path": 610, "level2": [610, 614, 615, 618, 629, 630, 642, 661, 662], "d_": 610, "kmkx20210907_170101_v06": 610, "kmkx20210907_170739_v06": 610, "kmkx20210907_171431_v06": 610, "kmkx20210907_172123_v06": 610, "kmkx20210907_172814_v06": 610, "kmkx20210907_173452_v06": 610, "kmkx20210907_174130_v06": 610, "kmkx20210907_174807_v06": 610, "kmkx20210907_175459_v06": 610, "kmkx20210907_175459_v06_mdm": 610, "read_nexrad_arch": [610, 614, 615, 629, 630, 642, 643, 644, 661, 662], "possibli": 610, "add_featur": [610, 612, 614, 615, 616], "pyart_chasespectr": [610, 614, 615, 616, 670, 671], "70": [610, 611, 614, 629, 633, 640, 671], "set_ext": 610, "easier": [610, 611, 612], "scroll": 610, "radar_id": 610, "timestamp": [610, 611], "tz_local": 610, "later": [610, 612, 676, 679], "interfac": [610, 616, 618], "conn": 610, "nexradawsinterfac": 610, "get_avail_scans_in_rang": 610, "len": [610, 615, 639, 653, 663, 675], "kmkx20210907_151132_v06": 610, "kmkx20210907_152621_v06": 610, "kmkx20210907_150152_v06": 610, "kmkx20210907_151622_v06": 610, "kmkx20210907_152121_v06": 610, "kmkx20210907_150642_v06": 610, "kmkx20210907_155424_v06_mdm": 610, "kmkx20210907_153610_v06": 610, "kmkx20210907_154814_v06": 610, "kmkx20210907_155424_v06": 610, "kmkx20210907_154205_v06": 610, "kmkx20210907_160034_v06": 610, "kmkx20210907_160607_v06": 610, "kmkx20210907_161141_v06": 610, "kmkx20210907_163532_v06": 610, "kmkx20210907_161714_v06": 610, "kmkx20210907_162924_v06": 610, "kmkx20210907_164816_v06": 610, "kmkx20210907_165433_v06": 610, "kmkx20210907_165433_v06_mdm": 610, "kmkx20210907_162247_v06": 610, "kmkx20210907_153134_v06": 610, "kmkx20210907_164149_v06": 610, "kmkx20210907_182057_v06": 610, "kmkx20210907_182749_v06": 610, "kmkx20210907_184048_v06": 610, "kmkx20210907_180841_v06": 610, "kmkx20210907_183440_v06": 610, "kmkx20210907_185431_v06_mdm": 610, "kmkx20210907_181448_v06": 610, "kmkx20210907_180150_v06": 610, "kmkx20210907_185431_v06": 610, "kmkx20210907_190109_v06": 610, "kmkx20210907_190703_v06": 610, "kmkx20210907_193238_v06": 610, "kmkx20210907_191951_v06": 610, "kmkx20210907_191327_v06": 610, "kmkx20210907_195642_v06": 610, "kmkx20210907_194459_v06": 610, "kmkx20210907_195642_v06_mdm": 610, "kmkx20210907_193849_v06": 610, "kmkx20210907_184739_v06": 610, "kmkx20210907_192614_v06": 610, "kmkx20210907_195056_v06": 610, "now": [610, 611, 612, 614, 615, 616, 618, 630, 633, 634, 639, 641, 659, 661, 662, 669, 675, 677, 683], "predict": 610, "tornado": [610, 614], "offic": [610, 612, 614, 675, 676, 677, 679, 680, 681], "acces": 610, "internet": 610, "wcm": 610, "2021_wind": 610, "read_spc_report": 610, "start_tim": 610, "end_tim": 610, "hazard": 610, "timezon": 610, "gmt": 610, "torn": 610, "df": 610, "datafram": 610, "conver": 610, "to_datetim": [610, 611, 614], "set_index": 610, "inplac": 610, "ambigu": 610, "nat": 610, "nonexist": 610, "shift_forward": 610, "tz_convert": 610, "timedelta": [610, 614, 615], "wind_report": 610, "tornado_report": 610, "hail_report": 610, "om": 610, "yr": 610, "mo": 610, "st": 610, "stf": 610, "stn": 610, "elon": 610, "wid": 610, "sn": 610, "sg": 610, "f1": 610, "f2": 610, "f3": 610, "f4": 610, "657521": 610, "tx": 610, "7500": [610, 675], "331": [610, 618], "657522": 610, "4300": 610, "657523": 610, "0500": 610, "167": 610, "657524": 610, "0200": 610, "657525": 610, "1595": 610, "663777": 610, "sc": 610, "0100": [610, 616], "663778": 610, "663779": 610, "2200": 610, "663780": 610, "1900": 610, "49": [610, 611], "663781": 610, "1100": [610, 618], "6261": 610, "gc_latlon_bear_dist": 610, "lat1": 610, "lon1": 610, "decim": 610, "lat2": 610, "lon2": 610, "lat1r": 610, "deg2rad": 610, "lon1r": 610, "bearr": 610, "lat2r": 610, "lon2r": 610, "rad2deg": [610, 665], "add_scale_lin": 610, "fontsiz": [610, 611, 612, 615, 616, 624, 625, 639, 641, 650, 651], "fontweight": 610, "zoom": [610, 611], "black": [610, 618, 640, 658, 659], "frac_lat": 610, "frac_lon": 610, "e1": 610, "get_ext": 610, "center_lon": 610, "center_lat": 610, "shorten": 610, "hash": [610, 621], "lat1a": 610, "lon1a": 610, "lat1b": 610, "lon1b": 610, "lat2a": 610, "lon2a": 610, "lat2b": 610, "lon2b": 610, "horizontalalign": 610, "verticalalign": 610, "enumer": [610, 615], "iter_success": 610, "mdm": [610, 615], "this_tim": 610, "open_pyart": 610, "map_panel_ax": [610, 654], "x_cut_panel_ax": [610, 654], "y_cut_panel_ax": [610, 654], "masking_data_with_gatefilt": [610, 618], "ax1": [610, 611, 616, 624, 625, 640, 654, 655, 658, 661, 662, 664, 669], "add_ax": [610, 654], "recogniz": 610, "with_scal": 610, "500k": 610, "grai": [610, 612, 614, 641, 642, 658], "plot_colorbar": 610, "pad": [610, 615], "plot_range_r": [610, 618, 634, 644, 645, 647], "dash": [610, 612, 651], "set_xtick": [610, 658, 676, 679], "arang": [610, 616, 619, 633, 647, 650, 651, 658, 659, 663, 664, 665, 684], "set_ytick": [610, 658, 676, 679], "wind_reports_now": 610, "slon": 610, "tolist": 610, "slat": 610, "facecolor": [610, 612, 614], "deepskyblu": 610, "tornado_reports_now": 610, "tab": [610, 621, 640], "red": [610, 650, 651, 664], "hail_reports_now": 610, "lawngreen": 610, "legend": [610, 614, 615, 616, 640], "savefig": [610, 612, 614, 615], "_dz_rpt": 610, "bbox_inch": [610, 615], "tight": [610, 615], "white": [610, 612, 650, 664], "mp4": 610, "map_imag": 610, "gif_titl": 610, "delet": [610, 618, 619, 641, 684], "gif": 610, "get_writ": 610, "fp": 610, "writer": [610, 618], "imread": 610, "append_data": 610, "ffmpeg_writ": 610, "divis": [610, 618], "macro_block_s": 610, "resiz": 610, "1930": 610, "1766": 610, "1936": 610, "1776": 610, "video": 610, "codec": 610, "player": 610, "incompat": [610, 618, 622], "ipython": [610, 614, 615, 617, 686], "browser": 610, "event": [610, 615, 616, 661, 662], "overview": [610, 613, 621], "retrospect": 610, "ecosystem": 611, "By": [611, 612, 616, 622], "learn": [611, 615, 673], "portal": [611, 612], "march": [611, 614, 629], "shown": [611, 615, 639], "offici": [611, 619, 684], "probe": 611, "millimet": 611, "ghz": 611, "purpos": [611, 612, 661, 662], "nearli": [611, 650], "bokeh": 611, "formatt": 611, "datetimetickformatt": 611, "hv": 611, "guckazrcfrgem1": 611, "20220314": [611, 664], "000003": 611, "0x7f7dbd517400": 611, "linear_depolarization_ratio": 611, "mean_doppler_velocity_crosspolar_v": 611, "reflectivity_crosspolar_v": 611, "signal_to_noise_ratio_copolar_h": [611, 616], "signal_to_noise_ratio_crosspolar_v": 611, "spectral_width": 611, "spectral_width_crosspolar_v": 611, "vertical": 611, "awai": [611, 612], "pyart_bal": [611, 612, 616, 633, 653, 669, 677], "substanti": 611, "211": [611, 655], "ax2": [611, 616, 624, 625, 633, 640, 654, 655, 658, 660, 661, 662, 664, 669, 677], "212": [611, 655], "pangeo": 611, "1736": 611, "600": [611, 671, 672, 675, 682], "r_calib": 611, "14t00": 611, "489e": 611, "806e": 611, "107": 611, "886e": 611, "command_lin": 611, "kazrcfr_ingest": 611, "guc": 611, "m1": 611, "process_vers": 611, "kazrcfr": 611, "el7": 611, "dod_vers": 611, "kazrcfrg": 611, "input_sourc": 611, "guckazrm1": 611, "kazr_moments_": 611, "site_id": 611, "software_vers": 611, "wed": 611, "mar": 611, "leachman": 611, "1498936": 611, "histori": [611, 681], "dsmgr": 611, "procnode2": 611, "1736rang": 611, "600frequenc": 611, "1sweep": 611, "1r_calib": 611, "1coordin": 611, "453818": 611, "startstandard_nam": 611, "timearrai": 611, "453818000": 611, "527426000": 611, "601027000": 611, "002026000": 611, "075634000": 611, "149219000": 611, "float323": 611, "10long_nam": 611, "transmit": [611, 677], "frequencyunit": 611, "hzstandard_nam": 611, "radiation_frequencymeta_group": 611, "instrument_parametersarrai": 611, "float32100": 611, "130": 611, "803e": 611, "04long_nam": 611, "volumeunit": 611, "mmeters_between_g": 611, "979246meters_to_center_of_first_g": 611, "679245spacing_is_const": 611, "truestandard_nam": 611, "projection_range_coordinateaxi": 611, "radial_range_coordinatearrai": 611, "679245": 611, "6585": 611, "160": [611, 665, 669, 672, 679, 682], "63774": 611, "17998": 611, "18028": 611, "268": 611, "18058": 611, "248": 611, "northunit": 611, "degreestandard_nam": 611, "sensor_to_target_azimuth_angleaxi": 611, "radial_azimuth_coordinatearrai": 611, "planeunit": 611, "sensor_to_target_elevation_angleaxi": 611, "radial_elevation_coordinatearrai": 611, "00long_nam": 611, "epochancillary_vari": 611, "time_offsetarrai": 611, "base_timeancillary_vari": 611, "base_timearrai": 611, "unspecifiedunit": 611, "dbstandard_nam": 611, "radar_linear_depolarization_ratiounpacking_detail": 611, "unpack": 611, "pack": [611, 618], "1041600": 611, "motion": 611, "instrumentunit": 611, "sstandard_nam": 611, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 611, "crosspolar": 611, "channelunit": 611, "factorunit": 611, "dbzstandard_nam": 611, "equivalent_reflectivity_factorunpacking_detail": 611, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 611, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 611, "widthunit": 611, "radar_doppler_spectrum_widthunpacking_detail": 611, "angleunit": 611, "degreearrai": 611, "n_sampl": 611, "momentsunit": 611, "1meta_group": 611, "instrument_parametersstandard_nam": 611, "number_of_samples_used_to_compute_momentsarrai": 611, "noise_figur": 611, "methodunit": 611, "dbarrai": 611, "67": [611, 661, 662], "8043": 611, "unambigu": [611, 681], "velocityunit": 611, "smeta_group": 611, "968252": 611, "repetit": 611, "timeunit": 611, "sarrai": 611, "00027": 611, "transmitt": 611, "r_calib_radar_constant_copol": 611, "copolarunit": 611, "dbmeta_group": 611, "radar_calibrationstandard_nam": 611, "calibrated_radar_constant_h_channelarrai": 611, "996191": 611, "r_calib_radar_constant_crosspol": 611, "crosspolarunit": 611, "405288": 611, "r_calib_two_way_radome_loss_h": 611, "radom": 611, "loss": 611, "radar_calibration_two_way_radome_loss_h_channelarrai": 611, "half": 611, "radar_measured_sky_noise_h": 611, "sky": 611, "dbmarrai": 611, "69": [611, 647], "03703": 611, "035995": 611, "0373": 611, "03814": 611, "05106": 611, "05984": 611, "radar_measured_sky_noise_v": 611, "radar_measured_transmit_pow": 611, "powerunit": 611, "dbmmeta_group": 611, "radar_transmit_powerarrai": 611, "143": [611, 665], "receiver_gain_copol": 611, "copolunit": 611, "sweepunit": 611, "1735": 611, "s22": 611, "basedunit": 611, "unambiguous_rang": [611, 681], "rangeunit": 611, "mmeta_group": 611, "unambiguous_rangearrai": 611, "40479": 611, "477": [611, 618], "degree_nstandard_nam": 611, "latitudevalid_min": 611, "0valid_max": 611, "0arrai": 611, "956158": 611, "degree_estandard_nam": 611, "longitudevalid_min": 611, "106": 611, "987854": 611, "altitudeunit": 611, "mstandard_nam": 611, "altitudearrai": 611, "2886": 611, "levelunit": 611, "heightarrai": 611, "m1convent": 611, "radar_calibrationprocess_vers": 611, "el7dod_vers": 611, "1input_sourc": 611, "kazr_moments_20220314": 611, "000005": 611, "datsite_id": 611, "gucplatform_id": 611, "kazrcfrgefacility_id": 611, "m1data_level": 611, "a1location_descript": 611, "laboratori": [611, 615], "sail": 611, "mt": 611, "crest": 611, "butt": [611, 612], "coloradodatastream": 611, "a1antenna_altitud": 611, "mantenna_diamet": 611, "mcomment": 611, "digital_rx_dec": 611, "24dualpol": 611, "0fft_len": 611, "512filter_length": 611, "67institut": 611, "radiat": [611, 612, 614, 616, 619, 673, 675, 676, 677, 679, 680, 681, 684], "research": [611, 612, 614, 619, 673, 675, 676, 677, 679, 680, 681, 684], "facilityn_g": 611, "1024num_spectral_averag": 611, "15pulse_compression_ratio": 611, "3range_gate_spacing_m": 611, "979246range_offset_ch1": 611, "mrange_offset_ch2": 611, "mscan_mod": 611, "pointingscan_nam": 611, "vptsoftware_vers": 611, "leachmantitl": 611, "momentsdoi": 611, "1498936histori": 611, "isel": 611, "coupl": [611, 616], "extra": [611, 614, 618], "won": [611, 615], "600rang": 611, "600coordin": 611, "395940000": 611, "469427000": 611, "542946000": 611, "360000": 611, "quadmesh": [611, 612], "0x7f7dad654f10": 611, "meant": [611, 613, 615], "popular": [611, 614], "jump": 611, "bar": 611, "hover": 611, "inspect": 611, "clabel": [611, 650, 651], "xformatt": 611, "ref_plot": 611, "7000": [611, 679], "platform_id": 611, "location_descript": 611, "xtick": [611, 676, 679], "ytick": [611, 676, 679], "vel_plot": 611, "prepar": [611, 612, 614, 616, 619, 675, 676, 677, 679, 680, 681, 684], "plot1": 611, "plot2": 611, "datashad": 611, "lazili": 611, "coars": 611, "intial": 611, "unfortun": 611, "ref_plot_rast": 611, "param": [611, 618], "dynamic_oper": 611, "outofboundsdatetim": 611, "nanosecond": 611, "54168": 611, "invok": 611, "x_rang": 611, "13t23": 611, "417014000": 611, "579705000": 611, "y_rang": 611, "traceback": 611, "recent": [611, 615, 618, 686], "mgrover": [611, 614, 616, 629, 633, 639, 640, 645, 653, 659, 660, 669, 670, 671], "277": [611, 618], "get_plot_fram": 611, "map_obj": 611, "1344": 611, "val": 611, "_execute_callback": 611, "tuple_kei": 611, "retval": 611, "callback": 611, "arg": 611, "708": [611, 682], "__call__": 611, "ret": 611, "__init__": [611, 619, 630, 684], "1043": [611, 618], "obj": 611, "resolv": [611, 618], "1032": [611, 618], "1044": 611, "1036": 611, "_process": 611, "1018": [611, 618], "process_el": 611, "194": 611, "_appli": 611, "141": 611, "1514": 611, "predic": [611, 616], "pipelined_fn": 611, "method_fn": 611, "1223": 611, "super": [611, 644, 676, 679], "710": [611, 618], "map_fn": 611, "214": 611, "1133": [611, 618], "astyp": 611, "int64": 611, "1497": [611, 618], "apply_ufunc": 611, "1159": 611, "apply_dataarray_vfunc": 611, "286": [611, 618], "result_var": 611, "data_var": 611, "750": [611, 618], "apply_variable_ufunc": 611, "as_compatible_data": 611, "234": 611, "_possibly_convert_object": 611, "178": 611, "asarrai": 611, "ravel": 611, "reshap": 611, "sanitize_arrai": 611, "567": [611, 618], "subarr": 611, "_try_cast": 611, "raise_cast_failur": 611, "726": [611, 618], "sanitize_to_nanosecond": 611, "arr": 611, "cast": 611, "1717": 611, "ensure_datetime64n": 611, "_lib": 611, "tslib": 611, "pyx": [611, 618], "257": 611, "np_datetim": 611, "120": [611, 675], "check_dts_bound": 611, "saw": 611, "few": [611, 618, 621, 686], "pro": 611, "con": 611, "thing": [611, 619, 684], "clear": [611, 616], "push": [611, 618, 619, 621, 684], "share": 611, "ran": [611, 619, 684], "shareabl": 611, "workflow": [611, 614, 618], "mb": [611, 626, 631, 637, 656, 666, 667, 672, 682], "difficult": [611, 633], "jupyterbook": 611, "jupyt": [611, 614, 618, 624, 625, 627, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 686], "campaign": [611, 616, 662], "twitter": 612, "nou": 612, "dryglick": 612, "notic": [612, 616, 618, 633, 641], "odd": 612, "directli": [612, 639], "grei": 612, "darker": 612, "moir\u00e9": 612, "ryan": 612, "dopplershift": [612, 618], "turbul": 612, "ncei": 612, "search": [612, 673, 683], "aw": [612, 614, 618, 627, 628, 630, 631, 682], "mention": [612, 618, 619, 673, 684, 686], "he": 612, "n0u": [612, 629], "elgin": 612, "panhandl": 612, "kevx": 612, "1458": 612, "octob": 612, "landfal": 612, "gulf": 612, "lookl": 612, "webpag": 612, "cart": 612, "sent": 612, "email": [612, 616, 618], "websit": 612, "ftp": 612, "unzip": [612, 614], "kmob_sdus54_n0uevx_201810101458": 612, "partli": [612, 614, 675, 676, 677, 679, 680, 681], "facil": [612, 614, 615, 616, 619, 673, 675, 676, 677, 679, 680, 681, 684], "cite": [612, 614, 616, 618, 675, 676, 677, 679, 680, 681], "jj": [612, 614, 675, 676, 677, 679, 680, 681], "sm": [612, 614, 675, 676, 677, 679, 680, 681], "colli": [612, 614, 619, 673, 675, 676, 677, 679, 680, 681, 684], "jor": [612, 614, 619, 673, 675, 676, 677, 679, 680, 681, 684], "5334": [612, 614, 619, 673, 675, 676, 677, 679, 680, 681, 684], "119": [612, 614, 619, 630, 673, 675, 676, 677, 679, 680, 681, 684], "read_level3": 612, "dark": 612, "dark_background": 612, "okai": 612, "88": [612, 614, 615, 659], "83": 612, "31msignatur": [612, 616], "0m": [612, 614, 616], "0mdisplai": 612, "34m": [612, 616], "0mplot_ppi_map": 612, "0mfield": 612, "0msweep": 612, "36m0": 612, "0mmask_tupl": 612, "32mnone": [612, 616], "0mvmin": 612, "0mvmax": 612, "0mcmap": 612, "0mnorm": 612, "0mmask_outsid": 612, "32mfals": 612, "0mtitl": 612, "0mtitle_flag": 612, "32mtrue": 612, "0mcolorbar_flag": 612, "0mcolorbar_label": 612, "0max": 612, "0mfig": 612, "0mlat_lin": 612, "0mlon_lin": 612, "0mproject": 612, "0mmin_lon": 612, "0mmax_lon": 612, "0mmin_lat": 612, "0mmax_lat": 612, "0mwidth": 612, "0mheight": 612, "0mlon_0": 612, "0mlat_0": 612, "0mresolut": 612, "0mshapefil": 612, "0mshapefile_kwarg": 612, "0medg": 612, "0mgatefilt": 612, "0mfilter_transit": 612, "0membelish": 612, "0mraster": 612, "0mtick": 612, "0mticklab": 612, "0malpha": 612, "31msourc": 612, "32mdef": 612, "0mself": 612, "embelish": [612, 618], "31m": 612, "0mparse_vmin_vmax": 612, "0m_radar": 612, "0mparse_cmap": 612, "32mif": 612, "32mi": 612, "0mnp": 612, "0marang": 612, "36m30": 612, "36m46": 612, "36m1": 612, "36m110": 612, "36m75": 612, "0mloc": 612, "0mdata": 612, "0m_get_data": 612, "0mx": 612, "0my": 612, "0m_get_x_i": 612, "0mma": 612, "0mmasked_outsid": 612, "0mplt": 612, "0mgcf": 612, "32mnot": 612, "0mhasattr": 612, "32mels": 612, "0mcartopi": 612, "0mcr": 612, "0mlambertconform": 612, "0mcentral_longitud": 612, "0mcentral_latitud": 612, "0mwarn": 612, "overrid": [612, 651], "lambert": [612, 618], "0muserwarn": 612, "0mset_ext": 612, "0mplatecarre": 612, "32melif": 612, "36m2": 612, "0mgrid_project": 612, "0mpm": 612, "0mpcolormesh": 612, "36m1000": 612, "0mtransform": 612, "graphic": 612, "0mset_raster": 612, "admin": [612, 619, 684], "0mstates_provinc": 612, "0mfeatur": 612, "0mnaturalearthfeatur": 612, "0mcategori": 612, "cultur": 612, "0mname": 612, "admin_1_states_provinces_lin": 612, "0mscale": 612, "0mfacecolor": 612, "0mcoastlin": 612, "0madd_featur": 612, "0medgecolor": 612, "pose": 612, "difficulti": 612, "spectif": 612, "32min": 612, "0mmercat": 612, "0mgl": 612, "0mgridlin": 612, "0mxloc": 612, "0myloc": 612, "0mdraw_label": 612, "0mxlabels_top": 612, "0mylabels_right": 612, "0misinst": 612, "0mfigur": 612, "0mcanva": 612, "0mdraw": 612, "maker": 612, "0mxaxi": 612, "0mset_major_formatt": 612, "0mmpl": 612, "0mlongitude_formatt": 612, "0myaxi": 612, "0mlatitude_formatt": 612, "0m_lambert_gridlin": 612, "0mlambert_xtick": 612, "0mlambert_ytick": 612, "32mfrom": 612, "0mio": 612, "0mshaperead": 612, "32mimport": 612, "0mreader": 612, "0madd_geometri": 612, "0mgeometri": 612, "0m_set_titl": 612, "0mplot": 612, "0mappend": 612, "0mplot_var": 612, "0mplot_colorbar": 612, "0mmappabl": 612, "0mlabel": 612, "32mreturn": 612, "31mfile": [612, 616], "git_repo": 612, "31mtype": [612, 616], "fashion": 612, "0marg": 612, "0mshade": 612, "0mantialias": 612, "0mkwarg": 612, "31mdocstr": [612, 616], "pseudocolor": 612, "signatur": [612, 614], "quadrilater": 612, "pcolor": 612, "prefer": [612, 618, 683], "ref": [612, 630, 654, 662], "shade": [612, 618], "flat": [612, 629], "gouraud": 612, "cari": 612, "expand": 612, "rc": 612, "regist": [612, 616], "canon": 612, "chosen": 612, "patch": [612, 650], "force_edgecolor": 612, "singular": [612, 615], "opaqu": 612, "solid": [612, 651], "quad": 612, "halfwai": 612, "galleri": [612, 618, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673, 682], "images_contours_and_field": 612, "pcolormesh_grid": 612, "snap": 612, "mesh": 612, "misc": [612, 618], "rasterization_demo": 612, "constructor": 612, "agg_filt": 612, "anim": 612, "antialias": [612, 650, 651], "aa": 612, "capstyl": 612, "clip_box": 612, "bbox": 612, "clip_on": 612, "clip_path": 612, "rgba": 612, "ec": 612, "fc": 612, "gid": 612, "hatch": 612, "in_layout": 612, "joinstyl": 612, "miter": 612, "bevel": 612, "thereof": 612, "offset_transform": 612, "path_effect": 612, "abstractpatheffect": 612, "picker": 612, "pickradiu": 612, "sketch_param": 612, "random": [612, 616], "zorder": 612, "imshow": [612, 618, 634, 635, 636, 639], "_ax": 612, "nrow": [612, 639], "ncolumn": 612, "_differ": 612, "li": 612, "handl": [612, 618], "polycollect": 612, "thu": [612, 621], "almost": 612, "slight": 612, "polygon": 612, "irrespect": 612, "One": [612, 615, 619, 675, 681, 684, 686], "masked_arrai": [612, 664, 675, 681], "1e": [612, 664, 675, 681], "next": [612, 614, 621, 629, 658], "get_gate_lat_lon_alt": [612, 616, 618], "565": [612, 618], "562763": 612, "560526": 612, "888458": 612, "886227": 612, "883991": 612, "562765": 612, "560532": 612, "892834": 612, "890606": 612, "888374": 612, "562769": 612, "56054": 612, "898003": 612, "89578": 612, "893553": 612, "562756": 612, "560509": 612, "880096": 612, "877857": 612, "875618": 612, "560513": 612, "881853": 612, "879616": 612, "877377": 612, "56276": 612, "560518": 612, "884874": 612, "88264": 612, "880404": 612, "92199": 612, "92222": 612, "92245": 612, "186806": 612, "18703": 612, "18723": 612, "922264": 612, "92254": 612, "2396": 612, "23986": 612, "24012": 612, "92231": 612, "92263": 612, "29231": 612, "29262": 612, "29292": 612, "92208": 612, "92218": 612, "02802": 612, "02811": 612, "0282": 612, "92212": 612, "92226": 612, "07571": 612, "07583": 612, "07595": 612, "922356": 612, "133934": 612, "1341": [612, 618], "13428": 612, "setup": [612, 616, 618, 629, 633, 639, 640, 645, 659, 673, 683], "geoaxi": 612, "border": [612, 650], "cbar": [612, 615, 641], "tick_param": [612, 664], "labels": 612, "set_label": [612, 615, 641], "gl": [612, 614, 641], "draw_label": [612, 614, 641], "xlabel_styl": [612, 641], "ylabel_styl": [612, 641], "kevz_velocity_2018_10_10_1458": 612, "specifici": 612, "pull": [612, 615, 618, 619, 620, 621, 630, 684], "pr": [612, 621], "importantli": 612, "api": [612, 618, 673], "abil": [612, 618, 673, 686], "arguement": 612, "appreci": [612, 673], "hello": 613, "welcom": 613, "narr": 613, "feedback": 613, "feel": 613, "know": [613, 615, 616, 686], "fridai": 614, "midwest": 614, "142": [614, 659, 666, 682], "368": [614, 618], "excess": 614, "65": [614, 615, 658, 664], "knot": 614, "mph": 614, "184": 614, "bing": 614, "inch": 614, "diamet": 614, "ifram": 614, "spc": [614, 618], "climo": 614, "gmf": 614, "php": 614, "rpt": 614, "230331_rpts_filter": 614, "walworth": 614, "counti": 614, "southeastern": [614, 633], "geneva": 614, "tourist": 614, "especi": [614, 616, 634], "live": 614, "chicagoland": 614, "confirm": [614, 629, 675], "assembl": 614, "summari": [614, 629], "grlevel": 614, "encourag": 614, "peopl": 614, "cookbook": [614, 618, 673, 685], "moor": 614, "focu": 614, "varieti": [614, 616, 619, 627, 628, 662, 684], "forg": [614, 618, 619, 673, 683, 684, 686], "arm_pyart": [614, 619, 621, 673, 683, 684, 686], "shaperead": 614, "shpreader": 614, "shapelyfeatur": 614, "miniforge3": 614, "tqdm": 614, "tqdmwarn": 614, "iprogress": 614, "ipywidget": 614, "readthedoc": 614, "stabl": 614, "user_instal": 614, "autonotebook": 614, "notebook_tqdm": 614, "credit": 614, "censu": 614, "mac": [614, 618, 673], "curl": 614, "linux": [614, 618, 619, 673, 684, 686], "wget": 614, "www2": 614, "geo": [614, 618], "tiger": 614, "tiger2016": 614, "primaryroad": 614, "tl_2016_us_primaryroad": 614, "zip": [614, 615, 624, 625, 627, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673], "xferd": 614, "dload": 614, "upload": [614, 618], "spent": 614, "7m": 614, "cpg": 614, "inflat": 614, "dbf": 614, "prj": 614, "shp": 614, "ea": 614, "iso": 614, "shx": 614, "reader": [614, 617, 618, 630], "geom": 614, "loop": [614, 618, 665], "rec": 614, "fullnam": 614, "interstate_featur": 614, "darkblu": 614, "clean": [614, 615, 618, 658, 669], "filesystem": [614, 615], "month": [614, 629, 630], "kmkx20230401_010517_v06": 614, "kmkx20230401_011057_v06": 614, "kmkx20230401_011638_v06": 614, "kmkx20230401_012219_v06": 614, "kmkx20230401_012759_v06": 614, "kmkx20230401_013341_v06": 614, "kmkx20230401_013922_v06": 614, "kmkx20230401_014502_v06": 614, "kmkx20230401_015042_v06": 614, "kmkx20230401_015623_v06": 614, "kmkx20230401_015928_v06": 614, "plot_configur": 614, "twilight_shift": [614, 669], "cross_correlation_ratio": [614, 615, 629, 642, 643, 661, 662, 680, 681], "plot_radar_ppi": 614, "left_field": 614, "right_field": 614, "plot_config": 614, "precip": 614, "vel_dealia": 614, "dealias_region_bas": [614, 618, 625, 658, 669, 677], "add_field": [614, 619, 624, 625, 658, 661, 662, 663, 664, 669, 676, 677, 684], "corrected_veloc": [614, 625, 658, 665, 669, 677, 680], "plot_numb": 614, "config": [614, 618, 675, 686], "121": [614, 616, 629, 633, 640, 660, 664, 669], "generate_titl": 614, "time_step": 614, "get_start_end": 614, "central_tim": 614, "astimezon": 614, "new_titl": 614, "cdt": 614, "sharon": 614, "Near": 614, "delavan": 614, "6105": 614, "60666": 614, "lightgrei": 614, "lavenderblush": 614, "ppi_velocity_reflectivity_": 614, "flexibl": [614, 618], "hope": 614, "concept": 615, "quickstart": 615, "basic": [615, 618, 673, 674, 676], "visual": [615, 616, 618, 639, 642, 650, 659, 662, 669], "compet": 615, "bytesio": 615, "pil": 615, "ipimag": 615, "repositori": [615, 619, 620, 621, 673, 683, 684, 686], "chicago": 615, "klot": 615, "june": 615, "5th": 615, "start_dat": 615, "yyyi": [615, 616, 617], "dd": [615, 616, 617], "hh": 615, "end_dat": 615, "argonn": 615, "lemont": 615, "il": 615, "sawmil": 615, "creek": 615, "darien": 615, "ie": 615, "slot": 615, "700937896518866": 615, "73884644555692": 615, "99578103231573": 615, "98744136114946": 615, "tower": 615, "scm": [615, 618, 619, 684], "magenta": 615, "cyan": [615, 664], "current_d": 615, "date_str": 615, "date_str_compact": 615, "hour_str": 615, "all_fil": 615, "filtered_fil": 615, "endswith": 615, "_mdm": 615, "although": 615, "pol": 615, "check_radar_field": 615, "file_path": 615, "rb": 615, "radar_data": 615, "klot20240605_040442_v06": 615, "clutter_filter_power_remov": [615, 629], "spectrum_width": [615, 629, 680, 681], "differential_phas": [615, 629, 643, 680, 681], "streamlin": 615, "read_radar_data": 615, "tell": [615, 664, 680], "halt": 615, "unabl": 615, "sometim": [615, 621, 675], "reduc": [615, 642, 662, 683], "nonmeteorolog": 615, "blob": [615, 651], "aforement": 615, "fit": 615, "pure": 615, "aesthet": 615, "decis": 615, "basenam": 615, "markers": 615, "tight_layout": [615, 616, 634, 655, 658], "046": 615, "radar_frame_": 615, "frame": 615, "someth": [615, 673], "rid": 615, "temporarili": 615, "abl": [615, 673, 683], "pillow": 615, "gif_filenam": 615, "radar_anim": 615, "save_al": 615, "append_imag": 615, "durat": 615, "704120": 615, "968328": 615, "frames_dir": 615, "makedir": 615, "exist_ok": 615, "radar_displai": 615, "notabl": [616, 617], "insight": [616, 617], "analyz": [616, 619, 673, 680, 684], "decid": 616, "quicklook": 616, "januari": [616, 619, 673, 684], "wettest": 616, "la": 616, "jolla": 616, "california": 616, "tarfil": 616, "download_arm_data": 616, "0mact": 616, "0mdiscoveri": 616, "0mdownload_arm_data": 616, "0musernam": 616, "0mtoken": 616, "0mdatastream": 616, "0mstartdat": 616, "0menddat": 616, "0mtime": 616, "0moutput": 616, "webservic": 616, "usernam": [616, 683], "log": [616, 618, 621], "adc": [616, 618], "datastream": 616, "acquir": 616, "startdat": 616, "yyyymmdd": 616, "thh": 616, "ss": 616, "15t12": 616, "enddat": 616, "15t13": 616, "hhmmss": 616, "programmat": 616, "rest": 616, "savedata": 616, "cron": 616, "job": 616, "workspac": 616, "disk": 616, "hpss": 616, "armliv": 616, "livedata": 616, "giansiracusa": 616, "giansiracumt": 616, "ornl": 616, "sgpmete13": 616, "jan": 616, "xxxxxxxxxxxxxxxx": 616, "download_data": 616, "mambaforg": 616, "epckasacrcfrs2": 616, "21t01": 616, "20240121": 616, "010020": 616, "010436": 616, "011116": 616, "012914": 616, "012503": 616, "011845": 616, "012257": 616, "010757": 616, "010118": 616, "011434": 616, "012708": 616, "011640": 616, "012051": 616, "hardin": 616, "isom": 616, "lindenmai": 616, "matthew": 616, "nelson": 616, "feng": 616, "deng": 616, "rocqu": 616, "castro": 616, "wendler": 616, "ka": 616, "kasacrcfr": 616, "1469302": 616, "trick": 616, "ones": [616, 639], "798": 616, "runtimewarn": 616, "encount": 616, "intersect": 616, "whic": 616, "ppi_fil": 616, "rhi_fil": 616, "elif": 616, "mainli": 616, "threshold_valu": 616, "suptitl": [616, 624, 625, 634, 653, 665], "too": [616, 618], "And": [616, 618], "remaind": 616, "fromnumer": [616, 624], "784": [616, 618], "maskedarrai": [616, 618, 624], "kth": [616, 624], "idea": [616, 675, 677], "0115": 616, "rhi_radar": 616, "ppi_radar": 616, "achiv": 616, "past": [617, 619, 684], "tag": [617, 618], "kernelspec": 617, "display_nam": 617, "ipykernel": 617, "languag": [617, 619, 673, 684], "language_info": 617, "codemirror_mod": 617, "file_extens": 617, "mimetyp": 617, "nbconvert_export": 617, "pygments_lex": 617, "ipython3": 617, "insert": 617, "nbformat": 617, "nbformat_minor": 617, "care": 617, "isilb": 618, "sinaram": 618, "1532": 618, "zssherman": 618, "get_azimuth": 618, "xradar": [618, 672, 682], "1547": 618, "mgrover1": 618, "1544": 618, "1542": 618, "1541": 618, "bridg": 618, "1537": 618, "columnsect": [618, 659], "1529": 618, "failur": 618, "wheel": 618, "1526": 618, "dep": 618, "bump": 618, "action": [618, 619, 621, 684], "group": [618, 619, 684], "1539": 618, "dependabot": 618, "epcap": 618, "1534": 618, "1530": 618, "1528": 618, "zdist_factor": 618, "1509": 618, "1524": 618, "1519": 618, "codeql": 618, "1515": 618, "pin": [618, 621], "ci": [618, 620, 621], "1507": 618, "xdrlib": 618, "1525": 618, "1518": 618, "1492": 618, "kmuehlbauer": 618, "rtanamachi": 618, "1504": 618, "1487": 618, "1478": 618, "jrobrien91": 618, "1503": 618, "1501": 618, "outdat": 618, "ipynb": [618, 624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671], "1490": 618, "1484": 618, "1482": 618, "1474": 618, "commit": [618, 619, 621, 684], "1506": 618, "1475": 618, "rainbow_wrl": 618, "happyxiaoanan": 618, "reclass": 618, "1495": 618, "rbhupi": 618, "1493": 618, "minor": [618, 634, 676, 679], "get_elev": 618, "1489": 618, "rescal": [618, 661, 662], "1486": 618, "1479": 618, "rcjackson": 618, "app": 618, "cmweather": 618, "1452": 618, "accessor": 618, "1457": 618, "syedhamidali": 618, "1456": 618, "typo": 618, "1471": 618, "isinst": 618, "1448": 618, "1472": 618, "1470": 618, "1469": 618, "instruct": [618, 673, 685], "1462": 618, "1473": 618, "1468": 618, "1450": 618, "scolli": 618, "dim": 618, "load_kazr": 618, "1446": 618, "1447": 618, "arm_vpt": 618, "1445": 618, "lint": [618, 619, 684], "1444": 618, "mnt": 618, "1440": [618, 675], "dedic": 618, "1442": 618, "1443": 618, "1437": 618, "algorith": 618, "1434": 618, "wolfidan": 618, "1430": 618, "1433": 618, "1428": 618, "neutrinocero": 618, "odim": 618, "1425": 618, "gatemapp": [618, 627, 632, 637, 682], "1418": 618, "hook": [618, 619, 684], "1419": 618, "sphinx": [618, 624, 625, 627, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671], "theme": 618, "1427": 618, "feet": 618, "1423": 618, "leak": 618, "mapper": 618, "1421": 618, "vforcel": 618, "1417": 618, "steepatticstair": 618, "1407": 618, "readm": [618, 683], "1397": 618, "1416": 618, "1413": 618, "1411": 618, "1409": 618, "1401": 618, "joshua": 618, "hampton": 618, "del": [618, 641], "old": 618, "conda_recip": 618, "1399": 618, "ruff": 618, "1388": 618, "wrong": 618, "1390": 618, "1385": 618, "1383": 618, "pkg_resourc": 618, "runtim": 618, "1394": 618, "mail": [618, 619, 673, 684], "1393": 618, "codeown": 618, "1391": 618, "1384": 618, "1382": 618, "1379": 618, "mismatch": 618, "1381": 618, "wrap": 618, "get_gate_area": 618, "1375": 618, "1380": [618, 675], "1372": 618, "exec_modul": 618, "load_modul": 618, "1369": 618, "badg": 618, "read_sigmet": 618, "1351": 618, "zouihao": 618, "unus": 618, "1343": 618, "1342": 618, "range_step": 618, "1338": 618, "max_num_g": 618, "1337": 618, "1327": 618, "revert": 618, "setuptool": 618, "unwant": 618, "cleanup": 618, "1357": 618, "1355": 618, "1339": 618, "1361": 618, "1335": 618, "manipul": [618, 641, 674], "1300": 618, "kylejgillett": 618, "melovato": 618, "tsbiscaro": 618, "1324": 618, "1319": 618, "1314": 618, "add_filt": 618, "1326": 618, "1320": [618, 675], "1325": 618, "jthielen": 618, "1303": 618, "jjhelmu": [618, 686], "wx4stg": 618, "antiviru": 618, "similiar": 618, "1307": 618, "1299": 618, "throw": 618, "convolve1d": 618, "1313": 618, "1306": 618, "1317": 618, "1311": 618, "jfigui": 618, "citat": [618, 619, 642, 673, 684], "1304": 618, "gamaanderson": 618, "hhuangwx": 618, "josephhardine": 618, "meteoswiss": [618, 663, 665], "mdr": 618, "ngui": 618, "tjlang": 618, "1294": 618, "1290": 618, "1285": 618, "1279": 618, "backward": [618, 622], "1278": 618, "1284": 618, "tracer": 618, "1296": 618, "1292": 618, "1287": 618, "cibuildwheel": 618, "1267": 618, "ocefpaf": 618, "1275": 618, "1276": 618, "1265": 618, "dcedgren": 618, "jilling": 618, "zhaobudaola": 618, "1263": 618, "1235": 618, "1215": 618, "1261": 618, "1241": 618, "1240": 618, "gatefi": 618, "1226": 618, "join_radar": 618, "repititon": 618, "iparam": 618, "1218": 618, "1216": 618, "trmm_rsl": 618, "1239": 618, "cftime": 618, "1211": 618, "incorrect": [618, 622, 677], "1231": 618, "ci_setup": 618, "1213": 618, "1264": 618, "1251": 618, "1234": 618, "1228": 618, "subset_radar": 618, "radar_util": 618, "1227": 618, "pyrad": 618, "1220": 618, "tst": 618, "1214": 618, "srbrodzik": 618, "1208": 618, "1204": 618, "1201": [618, 629], "1198": 618, "1196": 618, "catch": 618, "1191": 618, "1207": 618, "pypi": 618, "1206": 618, "unitest": 618, "1200": [618, 675], "1199": 618, "echoclass": 618, "1197": 618, "convv": 618, "awhil": 618, "back": 618, "1195": 618, "1190": 618, "dp": 618, "1184": 618, "solver": [618, 673], "1183": 618, "1176": 618, "1187": 618, "revis": 618, "270": [618, 619, 655, 684], "1185": 618, "1181": 618, "1178": 618, "1171": 618, "1180": 618, "1177": 618, "1173": 618, "sobitp59": 618, "rogu": 618, "1170": 618, "1160": 618, "1152": 618, "1151": 618, "mispel": 618, "1158": 618, "1148": 618, "1167": 618, "1154": 618, "unittest": 618, "1153": 618, "1136": 618, "trigger": 618, "1126": 618, "1118": 618, "1115": 618, "maco": 618, "1147": 618, "prune": 618, "1143": 618, "1141": 618, "1140": [618, 675], "1139": 618, "1137": 618, "1131": 618, "1130": 618, "1129": 618, "1128": 618, "1127": 618, "1125": 618, "1124": 618, "1123": 618, "1120": 618, "1119": 618, "dpr": 618, "1116": 618, "postcard": 618, "1104": 618, "1103": 618, "1122": 618, "gridmapdisplai": [618, 627, 638, 640, 656, 661, 662, 670, 679, 682], "1099": 618, "quick": [618, 629], "1146": 618, "contribut": [618, 619, 684, 685], "1106": 618, "1117": 618, "1113": 618, "submodul": [618, 679], "1110": 618, "forgotten": 618, "1108": 618, "test_echo_class": 618, "1107": 618, "1101": 618, "1098": 618, "1097": 618, "1094": 618, "1080": [618, 675], "registri": 618, "1087": 618, "1096": 618, "1093": 618, "1090": 618, "1089": 618, "1088": 618, "1085": 618, "1084": 618, "analyt": 618, "1081": 618, "1079": 618, "1077": 618, "pmi": 618, "csp": 618, "ritvj": 618, "doesn": [618, 675], "mandat": 618, "1014": 618, "reallynicegui": 618, "hasattr": 618, "1034": 618, "overlap": [618, 641, 650], "mapdisplai": 618, "1029": 618, "azimuth_rhi_plot": 618, "1025": 618, "1019": 618, "rxm25": 618, "1075": 618, "1064": 618, "mute_radar": 618, "1033": 618, "1030": 618, "radxgrid": 618, "1027": 618, "1026": 618, "roadmap": 618, "repo": [618, 619, 684], "1059": 618, "sidebar": 618, "1074": 618, "datetime_util": 618, "1072": 618, "1071": 618, "pydata": 618, "1069": 618, "1068": 618, "1067": 618, "1066": 618, "1063": 618, "codecov": 618, "1061": 618, "1060": 618, "1058": 618, "1056": 618, "1055": 618, "1053": 618, "1051": 618, "1050": 618, "1048": 618, "branch": [618, 619, 621, 684, 686], "1040": 618, "1039": 618, "1038": 618, "1031": 618, "1024": 618, "1020": [618, 675], "humphreyscart": 618, "tkralph": 618, "1003": 618, "997": 618, "1007": 618, "1001": 618, "1010": 618, "travi": 618, "sty": [618, 619, 684], "pep8": [618, 619, 684], "1005": 618, "988": 618, "quba1": 618, "984": 618, "tdwr": 618, "969": 618, "956": 618, "994": 618, "979": 618, "h5py": [618, 673], "978": [618, 639, 656, 662, 666, 682], "june1st": 618, "switch": [618, 619, 684], "973": 618, "maint": [618, 619, 684], "966": 618, "983": 618, "amarouan": 618, "abdelhak": 618, "bmgxyz": 618, "address": [618, 664], "962": 618, "mwilson14": 618, "963": 618, "nonetyp": 618, "regard": 618, "959": 618, "964": 618, "176": 618, "919": 618, "rda": 618, "903": 618, "add_gate_area": 618, "950": 618, "blotchi": 618, "947": 618, "946": 618, "944": 618, "694": 618, "938": 618, "vlouf": 618, "934": [618, 631], "925": 618, "924": 618, "917": 618, "appveyor": 618, "937": 618, "927": 618, "liter": 618, "said": 618, "949": 618, "948": 618, "929": 618, "926": 618, "920": 618, "915": 618, "911": 618, "grwise1": 618, "jsignel": 618, "rumpki": 618, "broke": 618, "913": 618, "msg29": 618, "909": 618, "907": 618, "framework": 618, "910": 618, "912": 618, "napoleon": 618, "902": [618, 642, 656, 682], "rtd": 618, "893": 618, "892": 618, "odimh5": 618, "898": 618, "895": 618, "896": 618, "864": 618, "louiswick": 618, "hilderbrand": 618, "877": 618, "886": 618, "crash": 618, "878": 618, "891": 618, "zflamig": 618, "futur": [618, 619, 622, 684], "890": 618, "889": 618, "885": 618, "dstex": 618, "880": 618, "soon": 618, "879": 618, "plot_grid": [618, 640, 654, 661, 662, 670, 679], "to_xarrai": 618, "873": 618, "876": 618, "elementwis": 618, "anaconda": [618, 619, 621, 673, 683, 684], "faq": 618, "868": 618, "mvanlierwalq": 618, "848": 618, "grid_io": 618, "846": 618, "jhemedin": 618, "841": 618, "nbin": 618, "865": 618, "856": 618, "840": [618, 675], "caus": 618, "852": 618, "849": 618, "get_dataset": 618, "845": 618, "docstr": 618, "838": 618, "836": 618, "cheatsheet": 618, "fortran": 618, "bit": [618, 683], "environ": [618, 673, 683, 685], "contr": 618, "843": 618, "spell": 618, "835": 618, "read_d3r_gcpex_nc": 618, "842": 618, "eccc": 618, "837": 618, "taylbm": 618, "kenkeho": 618, "swnesbitt": 618, "827": [618, 653, 656, 682], "822": 618, "806": 618, "804": 618, "800": [618, 658], "778": 618, "688": [618, 659], "incomplet": 618, "msg5": 618, "832": 618, "820": 618, "812": 618, "deal": 618, "809": 618, "contiuum": 618, "gh": 618, "795": 618, "explicit": 618, "py2": 618, "790": 618, "sh": 618, "kai": 618, "muehlbauer": 618, "789": 618, "777": 618, "indexerror": 618, "check_outli": 618, "776": 618, "juhi24": 618, "770": 618, "imp": 618, "newer": [618, 683], "675": 618, "824": 618, "minu": 618, "803": 618, "738": 618, "799": 618, "792": 618, "favor": 618, "791": 618, "786": 618, "itself": [618, 681], "inc": 618, "794": 618, "rst": 618, "preformat": 618, "779": 618, "eaxmpl": 618, "834": 618, "833": [618, 637, 664], "elsewher": 618, "831": 618, "828": 618, "821": 618, "pytest": [618, 619, 673, 683, 684], "818": 618, "atteun": 618, "817": [618, 648, 656, 682], "simulated_veloc": [618, 680], "802": 618, "grab": [618, 653], "796": [618, 644, 656, 682], "793": 618, "787": 618, "781": 618, "cvd": 618, "775": 618, "774": 618, "769": 618, "nl2": 618, "765": 618, "miaoneng": 618, "gewitterblitz": 618, "liliaow567": 618, "764": 618, "coveral": 618, "messsag": 618, "761": 618, "757": 618, "set_raster": 618, "748": 618, "754": 618, "755": 618, "recompil": 618, "758": 618, "ngoldbaum": 618, "reciev": 618, "752": 618, "gate_id": [618, 680], "749": 618, "746": 618, "744": 618, "zxdawn": 618, "netcdftim": 618, "736": 618, "731": 618, "dot_product": 618, "729": 618, "test_rhi_elev": 618, "twice": [618, 662], "724": 618, "728": 618, "727": 618, "nosetest": 618, "715": 618, "vradh": 618, "vradv": 618, "quantiti": 618, "739": 618, "es5nhc": 618, "735": 618, "wave100": 618, "734": 618, "733": 618, "730": 618, "723": 618, "comp": 618, "721": 618, "cameron": 618, "homey": 618, "716": 618, "cameronhomey": 618, "jamessong": 618, "winash12": 618, "687": 618, "csnardi": 618, "645": [618, 650, 656, 682], "docbuild": 618, "709": 618, "mhpicel": 618, "705": 618, "fromstr": 618, "704": 618, "692": 618, "651": 618, "711": 618, "calculate_velocity_textur": [618, 669, 677], "retreiv": 618, "672": 618, "bucket": [618, 629], "673": 618, "653": 618, "638": 618, "635": 618, "frombuff": 618, "702": 618, "grid_mapp": 618, "707": 618, "706": 618, "goharkai": 618, "infinit": 618, "693": 618, "freemansw1": 618, "683": 618, "674": 618, "668": 618, "contact": 618, "land": 618, "667": [618, 675], "665": 618, "662": 618, "661": 618, "attributeerror": 618, "656": 618, "oserror": 618, "650": 618, "overflowerror": 618, "648": 618, "happier": 618, "647": 618, "640": 618, "639": 618, "634": 618, "620": 618, "itsjm": 618, "kirknorth": 618, "617": 618, "616": 618, "631": 618, "swap": 618, "el": 618, "plot_rai": 618, "618": 618, "_get_angl": 618, "613": 618, "607": 618, "linspac": [618, 619, 639, 642, 658, 661, 662, 675, 684], "603": 618, "627": 618, "623": 618, "596": 618, "595": 618, "632": 618, "630": 618, "625": [618, 661, 666, 682], "tulipasilva": 618, "622": 618, "normbw": 618, "q": 618, "quit": [618, 673], "614": 618, "git": [618, 619, 673, 683, 684, 686], "611": 618, "608": 618, "mrugna": 618, "605": 618, "bld": 618, "kludg": 618, "604": 618, "acknowledg": [618, 673], "602": 618, "qpe": [618, 662], "mustafaalicelik": 618, "580": 618, "577": 618, "576": 618, "575": 618, "azim": 618, "546": 618, "pickl": 618, "unpickl": 618, "543": 618, "vcp": 618, "541": 618, "noaaport": 618, "seper": 618, "540": [618, 675], "521": 618, "459": 618, "590": 618, "bugfix": 618, "l3": 618, "135": 618, "eet": 618, "585": [618, 670, 672, 682], "582": 618, "570": 618, "558": 618, "ctm": 618, "553": 618, "542": 618, "aux_io": 618, "read_gam": 618, "535": 618, "midnight": 618, "523": [618, 656], "importerror": 618, "522": 618, "519": 618, "512": 618, "510": 618, "phase_proc": 618, "zerodivis": 618, "494": 618, "485": 618, "unsupport": 618, "481": 618, "579": 618, "578": [618, 665, 666, 682], "568": 618, "563": 618, "559": 618, "549": 618, "547": 618, "gamicfil": 618, "gamic_hdf5": 618, "536": 618, "524": 618, "513": 618, "balltre": 618, "504": 618, "501": 618, "482": [618, 635, 637, 682], "479": 618, "594": 618, "561": 618, "despeckle_field": 618, "544": 618, "axislabel_flag": 618, "539": 618, "529": [618, 633, 637, 682], "_get_x_z": 618, "491": 618, "486": 618, "586": 618, "572": 618, "fixup": 618, "569": 618, "560": 618, "555": [618, 659], "recip": [618, 621], "554": 618, "nose_arg": 618, "548": 618, "538": 618, "532": 618, "531": 618, "528": 618, "output_to_geotiff": 618, "514": 618, "511": 618, "507": 618, "506": 618, "498": [618, 666], "libgfortran": 618, "497": 618, "495": 618, "493": 618, "489": 618, "488": 618, "argentinean": 618, "480": [618, 675], "bdolan44": 618, "dara74k": 618, "gavi": 618, "jacaicedob": 618, "wx": 618, "pfhein": 618, "tamisalex": 618, "469": 618, "468": 618, "467": 618, "luminos": 618, "464": 618, "455": 618, "hclass": 618, "447": 618, "439": 618, "434": 618, "433": 618, "427": 618, "411": 618, "404": 618, "388": 618, "cross_section_ppi": [618, 655], "380": 618, "472": 618, "471": 618, "470": 618, "prf": 618, "460": 618, "get_field_colormap": 618, "446": 618, "444": 618, "example_cfradial_rhi": 618, "441": 618, "417": 618, "struct": 618, "410": 618, "383": [618, 649, 656, 682], "unicod": 618, "382": 618, "gatefit": 618, "372": 618, "465": 618, "refactor": 618, "463": 618, "decor": 618, "416": 618, "392": 618, "radxcovert": 618, "clarifi": 618, "475": 618, "406": 618, "add_field_lik": [618, 633], "397": 618, "391": 618, "376": 618, "370": 618, "corner_to_point": 618, "473": [618, 625, 626, 682], "466": 618, "456": 618, "outstand": 618, "412": 618, "413": 618, "454": 618, "453": 618, "449": 618, "438": 618, "437": 618, "430": 618, "426": 618, "miniconda": [618, 619, 673, 684], "reactiv": 618, "422": 618, "plot_map_one_radar_to_grid": [618, 635, 637, 682], "420": [618, 675], "419": 618, "408": 618, "resilli": 618, "403": 618, "write_mdv_grid": 618, "402": 618, "401": 618, "399": 618, "395": 618, "documen": 618, "add_2d_latlon_axi": 618, "394": 618, "378": 618, "acess": 618, "377": 618, "373": 618, "deeplycloudi": 618, "358": [618, 619, 684], "edge_netcdf": 618, "read_edge_netcdf": 618, "357": [618, 619, 684], "dealias_fourdd": 618, "348": 618, "346": 618, "326": 618, "308": 618, "361": 618, "refl_filter_flag": 618, "map_gate_to_grid": 618, "334": 618, "region_dealia": 618, "327": 618, "libm": 618, "posix": 618, "319": 618, "unnecessari": 618, "inmemoryfil": 618, "365": 618, "359": [618, 619, 684], "354": [618, 645, 656, 682], "_rsl_interfac": 618, "342": 618, "binstar": 618, "337": 618, "320": 618, "317": 618, "362": 618, "plot_grid_three_panel": 618, "353": 618, "confus": 618, "363": 618, "340": 618, "externalis": 618, "339": 618, "333": 618, "332": 618, "47": [618, 665], "324": 618, "323": [618, 658, 666, 682], "271": 618, "binar": 618, "266": 618, "313": 618, "312": 618, "290": 618, "280": 618, "273": 618, "272": 618, "261": 618, "256": [618, 639, 663], "dealias_phase_unwrap": 618, "radarmapdispl": 618, "249": 618, "discontin": 618, "314": 618, "288": 618, "fault": 618, "276": 618, "dealias_unwrap_phas": 618, "275": 618, "corrupt": 618, "269": 618, "283": 618, "inconsist": 618, "274": 618, "254": [618, 662], "fallback": 618, "245": 618, "316": 618, "ngates_vart": 618, "310": 618, "py3": [618, 686], "nexrad_level2": 618, "nexrad_level3": 618, "309": 618, "1byte": 618, "datatyp": 618, "weathergod": 618, "293": 618, "292": 618, "289": 618, "291": 618, "138": 618, "284": 618, "alter": 618, "267": 618, "latlon": 618, "264": 618, "262": 618, "260": 618, "259": 618, "258": 618, "241": [618, 630, 635], "rebuild": 618, "237": 618, "scientif": [619, 673, 684], "e25": [619, 673, 684], "publish": [619, 684], "easiest": [619, 673, 684], "1st": [619, 673, 684], "Then": [619, 621, 673, 683, 684], "termin": [619, 673, 684, 686], "prompt": [619, 673, 684], "mamba": [619, 684], "openradar": [619, 684], "short": [619, 621, 684], "cours": [619, 633, 684], "ev": [619, 684], "pyart_short_cours": [619, 684], "youtub": [619, 684], "watch": [619, 684], "diip": [619, 684], "q3bkzw": [619, 684], "book": [619, 684], "rule": [619, 684], "pep": [619, 684], "0008": [619, 684], "afterward": [619, 684], "neccessari": [619, 684], "brief": [619, 620, 684], "parti": [619, 684], "explain": [619, 684], "_inverse_dist_squar": [619, 684], "_average1d": [619, 684], "seen": [619, 684], "explan": [619, 620, 684], "privat": [619, 684], "rerun": [619, 684], "test_vad": [619, 684], "test_radar": [619, 675, 684], "make_target_radar": [619, 684], "1000": [619, 636, 644, 650, 651, 658, 662, 679, 684], "ones_lik": [619, 684], "z_start": [619, 684], "z_end": [619, 684], "z_count": [619, 684], "vad_height": [619, 684], "vad_spe": [619, 684], "98665725": [619, 684], "94020686": [619, 684], "88107152": [619, 684], "81939374": [619, 684], "75851962": [619, 684], "vad_direct": [619, 684], "84659496": [619, 684], "30240553": [619, 684], "58658589": [619, 684], "81073051": [619, 684], "01353486": [619, 684], "01335138": [619, 684], "06014712": [619, 684], "12039762": [619, 684], "18410404": [619, 684], "24791911": [619, 684], "98663937": [619, 684], "9398407": [619, 684], "87958641": [619, 684], "81587601": [619, 684], "75205693": [619, 684], "assert_almost_equ": [619, 684], "pyarg": [619, 684], "test_cfradi": [619, 684], "cd": [619, 684], "fork": [619, 621, 684], "cartopy_map": [619, 684], "branch_nam": [619, 684], "task": [619, 627, 668, 684], "mind": [619, 633, 684], "simpli": [619, 661, 669, 677, 679, 683, 684, 686], "acronym": [619, 684], "finish": [619, 684, 686], "quotat": [619, 684], "hit": [619, 684], "depth": [619, 673, 681, 684], "acronymn": [619, 684], "gitwash": [619, 684], "development_workflow": [619, 684], "whitespac": [619, 684], "usual": [619, 630, 684], "vim": [619, 684], "fetch": [619, 634, 658, 662, 663, 664, 665, 684], "ff": [619, 684], "sit": [619, 684], "guidanc": [619, 684], "anyth": 621, "creator": 621, "draft": 621, "shortlog": 621, "uplod": 621, "feedstock": 621, "clone": [621, 673, 683], "meta": 621, "yaml": 621, "sha256": 621, "rerend": 621, "smithi": 621, "bot": 621, "awar": 621, "semant": 622, "earlier": 622, "ceas": 622, "Such": 622, "proceed": 622, "futurewarn": 622, "runner": [624, 630], "micromamba": [624, 630], "_core": 624, "870": 624, "__doc__": [624, 625, 629, 630, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 661, 662], "sgpcsaprsurcmaci7": [624, 676], "20110520": [624, 676], "095101": [624, 676], "pop": 624, "specific_attenu": [624, 659, 663, 675, 680], "corrected_reflectivity_horizont": [624, 636, 640, 659, 669, 671, 675], "calculate_attenu": 624, "131": [624, 661, 662], "132": [624, 661, 662], "ax3": [624, 625, 654, 658, 661, 662, 664], "133": [624, 659, 661, 662], "101": [624, 626, 670, 682], "plot_attenu": [624, 626, 682], "ial": 625, "095636": [625, 677], "sonde_fil": 625, "sgpinterpolatedsondec1": 625, "c1": [625, 664, 680], "20110510": 625, "000000": 625, "cdf": [625, 658, 662], "dt": 625, "read_arm_sonde_vap": 625, "exclude_transit": [625, 635, 636, 640, 660], "exclude_invalid": [625, 658], "exclude_outsid": [625, 658], "dealias_data": 625, "sixth": 625, "221": [625, 643], "223": [625, 643], "ax4": 625, "224": [625, 643], "plot_dealia": [625, 626, 682], "mem": [626, 631, 637, 656, 666, 667, 672, 682], "examples_python": 627, "examples_jupyt": 627, "grover": [629, 633, 639, 640, 645, 653, 659, 660, 669, 670, 671], "filepath": [629, 630], "organ": 629, "radarsit": [629, 630], "_v06": 629, "khgx": 629, "aws_nexrad_level2_fil": [629, 630], "khgx20220322_120125_v06": 629, "relect": 629, "z_": [629, 633, 641, 664], "v_": 629, "noq": 629, "level3": 629, "aws_nexrad_level3_velocity_fil": 629, "hgx_n0u_2022_03_22_12_01_25": 629, "aws_nexrad_level3_reflectivity_fil": 629, "hgx_n0q_2022_03_22_12_01_25": 629, "read_nexrad_level3": 629, "radar_level3_veloc": 629, "radar_level3_reflect": 629, "reflectivity_displai": 629, "velocity_displai": 629, "894": [629, 631, 682], "plot_nexrad_data_aw": [629, 631, 682], "zachari": 630, "sherman": 630, "zsherman": [630, 686], "tendenc": 630, "gz": 630, "handford": 630, "ca": 630, "khnx": 630, "0203": 630, "v06": 630, "khnx20060724_020338": 630, "nexrad_arch": 630, "231": [630, 662], "clearli": 630, "lucki": 630, "31417": 630, "63111": 630, "plote": [630, 647], "central_latitud": [630, 647, 661, 662, 676], "central_longitud": [630, 647, 661, 662, 676], "downloadwarn": 630, "naturalearth": 630, "amazonaw": 630, "10m_physic": 630, "ne_10m_coastlin": 630, "10m_cultur": 630, "ne_10m_admin_1_states_provinces_lin": 630, "040": [630, 631, 682], "plot_older_nexrad_data_aw": [630, 631, 682], "xsapr": [633, 636, 640], "xsapr_sw_fil": [633, 636, 640], "swx_20120520_0641": [633, 636, 639, 640, 641, 645, 655, 659, 660, 661, 662, 669, 670, 671], "xsapr_se_fil": [633, 636, 640], "sex_20120520_0641": [633, 636, 640], "radar_sw": [633, 636, 640], "radar_s": [633, 636, 640], "southwestern": 633, "gmapper": 633, "radar_sw_mapped_to_radar_s": 633, "disp1": 633, "98": [633, 659, 665, 680], "97": [633, 636, 640, 642, 654, 659, 661, 662, 675], "disp2": 633, "remap": 633, "eyebal": 633, "fortun": 633, "reflectivity_se_radar": 633, "reflectivity_sw_radar": 633, "reflectivity_differ": 633, "reflectivity_bia": 633, "southwest": 633, "xspar": 633, "southeast": 633, "neccessarili": 633, "incl_gat": 633, "refl_s": 633, "refl_sw": 633, "values_without_mask": 633, "hist": [633, 669, 677], "histogram2d": 633, "masked_wher": [633, 658, 662, 680], "log_": 633, "plot_compare_two_radars_gatemapp": [633, 637, 682], "solut": 634, "arguabl": 634, "overlook": 634, "neglig": 634, "ze": 634, "2nd": 634, "4th": 634, "purpl": 634, "truncat": 634, "ok": 634, "israel": 634, "silber": 634, "open_radar_data": [634, 658, 662, 663, 664, 665], "file_nam": 634, "example_plot_ppi_single_sweep": 634, "processed_field": 634, "reflectivity_at_cor": 634, "radar_obj": 634, "nnow": 634, "ax_ind": 634, "sweep_obj": 634, "fig2": 634, "1601": 634, "40000": [634, 636, 640, 647, 679], "set_titl": [634, 639, 658, 661, 662], "nuse": 634, "741": [634, 637, 682], "plot_grid_single_sweep_ppi": [634, 637, 682], "123000": 635, "xsarp": [636, 648, 649], "gatefilter_s": [636, 640], "exclude_abov": [636, 640, 669, 677], "gatefilter_sw": [636, 640], "201": [636, 661, 662, 679], "57861": [636, 640], "363611": [636, 640], "080": [636, 637, 682], "plot_map_two_radars_to_grid": [636, 637, 682], "helper": 639, "vstack": 639, "plot_color_gradi": 639, "cmap_categori": 639, "cmap_list": 639, "figh": 639, "99": 639, "cmap_nam": 639, "pyart_": 639, "va": 639, "transax": 639, "spine": 639, "set_axis_off": 639, "perceptu": [639, 642], "diverg": 639, "meaning": 639, "terrain": 639, "spectral_r": 639, "rememb": 639, "front": 639, "plot_choose_a_colormap": [639, 656, 682], "181": 640, "blue": [640, 650, 651], "plot_cross_sect": [640, 656, 682], "colobar": 641, "joe": 641, "brien": 641, "obrienj": 641, "perfect": 641, "coord": 641, "gca": 641, "set_major_loc": 641, "nullloc": 641, "axsb": 641, "ppi_map": 641, "set_tick": [641, 664], "038": [641, 656, 682], "plot_modify_colorbar": [641, 656, 682], "promin": [642, 662], "deemphas": 642, "depict": [642, 658], "ultim": 642, "misinterpret": 642, "lmtomkin": [642, 658, 661, 662], "ncsu": [642, 658, 661, 662], "nexrad_fil": [642, 661, 662], "kbgm": 642, "kbgm20200207_132642_v06": 642, "image_mute_radar": [642, 661, 662], "magma_cmap": 642, "magma_r": [642, 658, 661, 662], "grays_cmap": [642, 662], "gray_r": [642, 662], "nonmuted_cmap": 642, "linearsegmentedcolormap": [642, 661, 662], "from_list": [642, 661, 662], "muted_cmap": [642, 662], "nonmuted_reflect": [642, 661], "muted_reflect": [642, 662], "set_aspect": [642, 658, 661, 662, 663], "plot_nexrad_image_muted_reflect": [642, 656, 682], "katx20130717_195021_v06": [643, 681], "718": [643, 656, 682], "plot_nexrad_multiple_mo": [643, 656, 682], "level2_katx_20130717_1950": 644, "ar2v": 644, "plot_nexrad_reflect": [644, 656, 682], "plot_cross_hair": 645, "plot_ppi_cfradi": [645, 656, 682], "127": [646, 656, 682], "jason": [647, 654], "hemeding": [647, 654], "nsaxsaprppic1": 647, "20140201": 647, "184802": 647, "157": 647, "156": 647, "71": 647, "158": 647, "72": 647, "40km": 647, "plot_line_xi": 647, "20000": [647, 679], "200000": [647, 661, 662], "plot_point": 647, "plot_ppi_with_r": [647, 656, 682], "instrument_nam": [648, 649, 681], "agl": 648, "fac": 648, "nplot": [648, 649, 653], "snum": 648, "hsrhi": [648, 649], "3f": [648, 649], "time_start": 648, "num2dat": 648, "only_use_cftime_datetim": 648, "only_use_python_datetim": 648, "figure_titl": 648, "isoformat": 648, "plot_rhi_cfradi": [648, 656, 682], "differnenti": 650, "cori": [650, 651], "weber": [650, 651], "cweber": [650, 651], "220629": 650, "matplolib": 650, "visabl": 650, "flow": 650, "paramt": 650, "compens": 650, "00015": 650, "veri": [650, 658, 661, 662], "moir": 650, "001": 650, "get_start": [650, 651], "get_end": [650, 651], "blur": 650, "nice": [650, 683], "arbirarli": 650, "gaussian_filt": [650, 651], "ang": [650, 651], "levels_rain": 650, "levels_ic": 650, "contours_ic": 650, "contours_rain": 650, "fmt": [650, 651], "0000": [650, 651], "plot_rhi_contours_differential_reflect": [650, 656, 682], "spyi": 651, "034142": 651, "ramp": 651, "pyart_budrd18": 651, "coutour": 651, "dot": 651, "major": 651, "axhlin": [651, 658], "axvlin": 651, "00b4ff": 651, "ff6800": 651, "set_ylabel": [651, 658, 664, 665], "cp": 651, "159": [651, 656, 682], "plot_rhi_data_overlai": [651, 656, 682], "110041": 652, "850": [652, 656, 682], "plot_rhi_mdv": [652, 656, 682], "fields_to_plot": 653, "plot_num": 653, "u00b0": 653, "plot_rhi_two_panel": [653, 656, 682], "20110520100000_nexrad_grid": 654, "read_grid": [654, 658, 662], "plot_crosshair": 654, "plot_longitude_slic": 654, "plot_latitude_slic": [654, 679], "863": [654, 656, 682], "plot_three_panel_gridmapdisplai": [654, 656, 682], "225": 655, "xsect": 655, "371": [655, 656, 682], "plot_xsect": [655, 656, 682], "essenti": 658, "distinguish": 658, "insuffici": 658, "tenth": 658, "aggress": 658, "noisi": 658, "ref_data": 658, "ref_data_mask": 658, "masked_outsid": 658, "create_cfad": 658, "freq_norm_mask": 658, "masked_less_equ": [658, 662], "cfad_pm": 658, "plasma": 658, "set_xlabel": [658, 665], "8km": 658, "freq_norm2": 658, "freq_norm0": 658, "freq_norm2_mask": 658, "freq_norm0_mask": 658, "chart": 658, "14km": 658, "12km": 658, "swath": 658, "velocity_dealia": 658, "rdbu_r": 658, "bimod": 658, "reproduc": 658, "2c": 658, "demonstr": [658, 673], "ddop": 658, "910815": 658, "213931": 658, "altitude_data": 658, "field_data": 658, "maxdz": [658, 662], "vvel_data": 658, "w_wind": 658, "vvel_mask": 658, "masked_invalid": [658, 661], "field_data_mask": 658, "cont": 658, "plot_cfad": [658, 666, 682], "maxwel": [659, 660], "site_lon": 659, "73": 659, "site_lat": 659, "latitdu": 659, "pathcollect": 659, "0x7f22c01d65d0": 659, "get_field_loc": 659, "2kb": 659, "176b": 659, "350": 659, "818e": 659, "recalculated_diff_phas": [659, 675], "2778": 659, "unf_dp_phase_shift": [659, 675], "88b": 659, "145": [659, 662], "144": [659, 662], "diff_reflect": [659, 675], "8b": 659, "distance_from_radar": 659, "233": 659, "545": 659, "latitude_of_loc": 659, "longitude_of_loc": 659, "line2d": 659, "0x7f22c03df7d0": 659, "plot_column_subset": [659, 666, 682], "compz": 660, "composite_reflect": 660, "composite_displai": 660, "263": [660, 666, 682], "plot_composite_reflect": [660, 666, 682], "classifc": 661, "summer": [661, 662], "ian": [661, 662], "footprint": 661, "yield": 661, "smoother": 661, "curv": 661, "plot_convstrat_schem": 661, "pick": 661, "radii": 661, "dilat": 661, "conv_strat_yut": 661, "convsf_mask": 661, "masked_equ": [661, 662], "feature_detect": [661, 662], "convsf": [661, 662], "magma_r_cmap": [661, 662], "ref_cmap": [661, 662], "albersequalarea": [661, 662], "convsf_und": 661, "convsf_ov": 661, "uncertainti": [661, 662], "underest": [661, 662], "feature_und": [661, 662], "overest": [661, 662], "feature_ov": [661, 662], "ktbw": [661, 662], "ktbw20220928_190142_v06": [661, 662], "rasumussen": [661, 662], "2003": [661, 662], "reflecit": 661, "kokx": [661, 662], "kokx20210207_161413_v06": [661, 662], "nonmuted_ref": 661, "nonmuted_ref_linear": 661, "mm6": 661, "m3": 661, "snow_rat": [661, 662], "snow_rate_dict": 661, "40500": 661, "034": [661, 662], "ccotd": [661, 662], "rasmussen": [661, 662], "dixon": [661, 662, 673], "vasiloff": [661, 662], "hage": [661, 662], "knight": [661, 662], "vivekanandan": [661, 662], "xu": [661, 662], "nowcast": [661, 662], "accumul": [661, 662], "042": [661, 662], "3c0020": [661, 662], "snuart": [661, 662], "plot_convective_stratiform": [661, 666, 682], "heavili": 662, "customiz": 662, "manuscript": 662, "feature_mask": 662, "19990811": 662, "221202": 662, "convsf_cmap": 662, "140": 662, "253": 662, "csb": 662, "csb_mask": 662, "csl": 662, "convsf_lo": 662, "csl_mask": 662, "csh": 662, "convsf_hi": 662, "csh_mask": 662, "rpm": 662, "csbpm": 662, "set_yticklabel": [662, 664], "lo": 662, "cslpm": 662, "cshpm": 662, "csb_lt": 662, "csb_lt_mask": 662, "csu_lt": 662, "csu_lt_mask": 662, "cso_lt": 662, "cso_lt_mask": 662, "csupm": 662, "csopm": 662, "ztor": 662, "ref_field_ov": 662, "ref_field_und": 662, "2db": 662, "_overest": 662, "_underest": 662, "reflectivity_ov": 662, "reflectivity_und": 662, "snow_rate_ov": 662, "snow_rate_und": 662, "feature_estimate_dict": 662, "bpm": 662, "upm": 662, "opm": 662, "distinct": 662, "scalar_features_mask": 662, "cosine_features_mask": 662, "isol": 662, "faint_featur": 662, "faint_features_mask": 662, "features_faint_strong": 662, "features_faint_strong_mask": 662, "new_dict": 662, "comment_1": 662, "faint_strong_cmap": 662, "faint_strong": 662, "238": 662, "93": 662, "66": 662, "quickli": 662, "quick_image_mut": 662, "muted_ref": 662, "nonmuted_field": 662, "muted_field": 662, "snow_rate_nonmut": 662, "snow_rate_mut": 662, "features_nonmut": 662, "features_mut": 662, "srpm": 662, "srpmm": 662, "csbpmm": 662, "plot_feature_detect": [662, 666, 682], "daniel": [663, 665], "wolfensberg": [663, 665], "mll2217907250u": 663, "003": 663, "preinterpol": 663, "20220628072500_savevol_cosmo_lookup_temp": 663, "nwp_temp": 663, "calculate_attenuation_zphi": 663, "uncorrected_differential_phas": 663, "pia": 663, "pida": 663, "corrected_reflect": [663, 664, 680], "corrected_differential_reflect": [663, 664, 680], "kdp_maesaka": 663, "specific_differential_phas": [663, 680], "hydroclass_semisupervis": [663, 664], "uncorrected_cross_correlation_ratio": 663, "radar_echo_classif": 663, "boundarynorm": 663, "496": [663, 666, 682], "plot_hydrometeor": [663, 666, 682], "gucxprecipradarcmacppis2": 664, "025840": 664, "pyart_carbone42": 664, "corrected_specific_diff_phas": [664, 680], "hydromet_class": 664, "filtered_corrected_specific_diff_phas": [664, 680], "sounding_temperatur": [664, 680], "hydro_classif": 664, "2e9": 664, "pipelin": 664, "hid_color": 664, "lightblu": 664, "mediumblu": 664, "darkorang": 664, "lightpink": 664, "darkgrai": 664, "lime": 664, "yellow": 664, "cmaphid": 664, "listedcolormap": 664, "cmapmeth": 664, "cmapmeth_trop": 664, "adjust_fhc_colorbar_for_pyart": 664, "hd": 664, "adjust_meth_colorbar_for_pyart": 664, "zrain": 664, "z_all": 664, "z_c": 664, "two_panel_plot": 664, "var1": 664, "vmin1": 664, "vmax1": 664, "cmap1": 664, "rdylbu_r": 664, "units1": 664, "var2": 664, "vmin2": 664, "vmax2": 664, "cmap2": 664, "units2": 664, "return_flag": 664, "lim": 664, "093": [664, 666, 682], "plot_hydrometeor_class_x_band": [664, 666, 682], "2682": 665, "5470354519784": 665, "447328651323915": 665, "5273": 665, "055615736172": 665, "7533807586878538": 665, "7815": 665, "51210340485": 665, "341798234730959": 665, "10403": 665, "798749463633": 665, "977668723091483": 665, "14259": 665, "735154148191": 665, "905980195850134": 665, "18533": 665, "70608163625": 665, "262251073494554": 665, "22800": [665, 675], "97541932203": 665, "613871516659856": 665, "27060": [665, 675], "25919727981": 665, "959520922973752": 665, "31310": 665, "269606200978": 665, "29787217825651": 665, "35549": 665, "73140401952": 665, "62760841473937": 665, "39777": 665, "36820153147": 665, "94740904122591": 665, "43991": 665, "90973467566": 665, "25595719181001": 665, "50263": 665, "42219179496": 665, "671291364356875": 665, "58621": 665, "52730140835": 665, "22838316485286": 665, "71003": 665, "14627731778": 665, "68": 665, "92013945430517": 665, "87118": 665, "5253265705": 665, "4666496720165": 665, "106741": 665, "22752280161": 665, "65626102685928": 665, "125477": 665, "00644101389": 665, "124": 665, "97631322406232": 665, "143293": 665, "15816160105": 665, "38701202347875": 665, "160000": 665, "28993562795": 665, "68618156574667": 665, "mla2119412050u": 665, "zlevel": 665, "5000": [665, 679], "u_allsweep": 665, "v_allsweep": 665, "idx": 665, "radar_1sweep": 665, "vad_brown": 665, "u_avg": 665, "nanmean": 665, "v_avg": 665, "sharei": 665, "plot_vad": [665, 666, 682], "000": 667, "xd": [669, 670, 671], "open_cfradial1_datatre": [669, 670, 671], "to_radar": [669, 670, 671], "sweep_0": 669, "vel_textur": [669, 677], "velocity_textur": [669, 677, 680], "At": [669, 677], "velocity_dealias": [669, 677], "plot_dealias_xradar": [669, 672, 682], "10_000": 670, "50_000": 670, "plot_grid_xradar": [670, 672, 682], "plot_xradar": [671, 672, 682], "345": 672, "conceptu": 673, "projectpythia": 673, "understand": 673, "maik": 673, "heistermann": 673, "bam": 673, "kellei": 673, "peura": 673, "pfaff": 673, "wolff": 673, "emerg": 673, "bull": 673, "amer": 673, "soc": 673, "117": 673, "128": 673, "00240": 673, "sophist": 673, "tutori": 673, "materi": 673, "erad": 673, "asr": 673, "asm": 673, "Or": 673, "pyart_env": [673, 676, 679, 686], "wish": 673, "unreleas": 673, "charg": 673, "resourc": [673, 683], "lassen": 673, "radtec": 673, "rsl_path": [673, 683], "usr": 673, "wrapper": 673, "fastest": 673, "cbc": 673, "glpk": 673, "coincbc": [673, 683, 686], "coin_install_dir": [673, 683, 686], "ask": [673, 686], "hypothet": 675, "dict_kei": [675, 680], "rain_rate_a": [675, 680], "volume_numb": 675, "platform_typ": 675, "instrument_typ": 675, "primary_axi": 675, "make_empty_ppi_radar": 675, "59416667": 675, "isn": 675, "240": 675, "660": 675, "720": 675, "780": 675, "960": 675, "1260": 675, "1560": 675, "1620": 675, "1680": 675, "1740": 675, "1860": 675, "1920": 675, "1980": 675, "2040": 675, "2100": 675, "2160": 675, "2220": 675, "2280": 675, "2340": 675, "2400": 675, "2460": 675, "2520": 675, "2580": 675, "2640": 675, "2700": 675, "2760": 675, "2820": 675, "2880": 675, "2940": 675, "3060": 675, "3120": 675, "3180": 675, "3240": 675, "3300": 675, "3360": 675, "3420": 675, "3480": 675, "3540": 675, "3600": 675, "3660": 675, "3720": 675, "3780": 675, "3840": 675, "3900": 675, "3960": 675, "4020": 675, "4080": 675, "4140": 675, "4200": 675, "4260": 675, "4320": 675, "4380": 675, "4440": 675, "4500": 675, "4560": 675, "4620": 675, "4680": 675, "4740": 675, "4800": 675, "4860": 675, "4920": 675, "4980": 675, "5040": 675, "5100": 675, "5160": 675, "5220": 675, "5280": 675, "5340": 675, "5400": 675, "5460": 675, "5520": 675, "5580": 675, "5640": 675, "5700": 675, "5760": 675, "5820": 675, "5880": 675, "5940": 675, "6000": [675, 679], "6060": 675, "6120": 675, "6180": 675, "6240": 675, "6300": 675, "6360": 675, "6420": 675, "6480": 675, "6540": 675, "6600": 675, "6660": 675, "6720": 675, "6780": 675, "6840": 675, "6900": 675, "6960": 675, "7020": 675, "7080": 675, "7140": 675, "7200": [675, 681], "7260": 675, "7320": 675, "7380": 675, "7440": 675, "7560": 675, "7620": 675, "7680": 675, "7740": 675, "7800": 675, "7860": 675, "7920": 675, "7980": 675, "8040": 675, "8100": 675, "8160": 675, "8220": 675, "8280": 675, "8340": 675, "8400": 675, "8460": 675, "8520": 675, "8580": 675, "8640": 675, "8700": 675, "8760": 675, "8820": 675, "8880": 675, "8940": 675, "9000": [675, 679], "9060": 675, "9120": 675, "9180": 675, "9240": 675, "9300": 675, "9360": 675, "9420": 675, "9480": 675, "9540": 675, "9600": 675, "9660": 675, "9720": 675, "9780": 675, "9840": 675, "9900": 675, "9960": 675, "10020": 675, "10080": 675, "10140": 675, "10200": 675, "10260": 675, "10320": 675, "10380": 675, "10440": 675, "10500": 675, "10560": 675, "10620": 675, "10680": 675, "10740": 675, "10800": 675, "10860": 675, "10920": 675, "10980": 675, "11040": 675, "11100": 675, "11160": 675, "11220": 675, "11280": 675, "11340": 675, "11400": 675, "11460": 675, "11520": 675, "11580": 675, "11640": 675, "11700": 675, "11760": 675, "11820": 675, "11880": 675, "11940": 675, "12060": 675, "12120": 675, "12180": 675, "12240": 675, "12300": 675, "12360": 675, "12420": 675, "12480": 675, "12540": 675, "12600": 675, "12660": 675, "12720": 675, "12780": 675, "12840": 675, "12900": 675, "12960": 675, "13020": 675, "13080": 675, "13140": 675, "13200": 675, "13260": 675, "13320": 675, "13380": 675, "13440": 675, "13500": 675, "13560": 675, "13620": 675, "13680": 675, "13740": 675, "13800": 675, "13860": 675, "13920": 675, "13980": 675, "14040": 675, "14100": 675, "14160": 675, "14220": 675, "14280": 675, "14340": 675, "14400": 675, "14460": 675, "14520": 675, "14580": 675, "14640": 675, "14700": 675, "14760": 675, "14820": 675, "14880": 675, "14940": 675, "15060": 675, "15120": 675, "15180": 675, "15240": 675, "15300": 675, "15360": 675, "15420": 675, "15480": 675, "15540": 675, "15600": 675, "15660": 675, "15720": 675, "15780": 675, "15840": 675, "15900": 675, "15960": 675, "16020": 675, "16080": 675, "16140": 675, "16200": 675, "16260": 675, "16320": 675, "16380": 675, "16440": 675, "16500": 675, "16560": 675, "16620": 675, "16680": 675, "16740": 675, "16800": 675, "16860": 675, "16920": 675, "16980": 675, "17040": 675, "17100": 675, "17160": 675, "17220": 675, "17280": 675, "17340": 675, "17400": 675, "17460": 675, "17520": 675, "17580": 675, "17640": 675, "17700": 675, "17760": 675, "17820": 675, "17880": 675, "17940": 675, "18000": [675, 679], "18060": 675, "18120": 675, "18180": 675, "18240": 675, "18300": 675, "18360": 675, "18420": 675, "18480": 675, "18540": 675, "18600": 675, "18660": 675, "18720": 675, "18780": 675, "18840": 675, "18900": 675, "18960": 675, "19020": 675, "19080": 675, "19140": 675, "19200": 675, "19260": 675, "19320": 675, "19380": 675, "19440": 675, "19500": 675, "19560": 675, "19620": 675, "19680": 675, "19740": 675, "19800": 675, "19860": 675, "19920": 675, "19980": 675, "20040": 675, "20100": 675, "20160": 675, "20220": 675, "20280": 675, "20340": 675, "20400": 675, "20460": 675, "20520": 675, "20580": 675, "20640": 675, "20700": 675, "20760": 675, "20820": 675, "20880": 675, "20940": 675, "21000": [675, 679], "21060": 675, "21120": 675, "21180": 675, "21240": 675, "21300": 675, "21360": 675, "21420": 675, "21480": 675, "21540": 675, "21600": 675, "21660": 675, "21720": 675, "21780": 675, "21840": 675, "21900": 675, "21960": 675, "22020": 675, "22080": 675, "22140": 675, "22200": 675, "22260": 675, "22320": 675, "22380": 675, "22440": 675, "22500": 675, "22560": 675, "22620": 675, "22680": 675, "22740": 675, "22860": 675, "22920": 675, "22980": 675, "23040": 675, "23100": 675, "23160": 675, "23220": 675, "23280": 675, "23340": 675, "23400": 675, "23460": 675, "23520": 675, "23580": 675, "23640": 675, "23700": 675, "23760": 675, "23820": 675, "23880": 675, "23940": 675, "24000": [675, 679], "24060": 675, "24120": 675, "24180": 675, "24240": 675, "24300": 675, "24360": 675, "24420": 675, "24480": 675, "24540": 675, "24600": 675, "24660": 675, "24720": 675, "24780": 675, "24840": 675, "24900": 675, "24960": 675, "25020": 675, "25080": 675, "25140": 675, "25200": 675, "25260": 675, "25320": 675, "25380": 675, "25440": 675, "25500": 675, "25560": 675, "25620": 675, "25680": 675, "25740": 675, "25800": 675, "25860": 675, "25920": 675, "25980": 675, "26040": 675, "26100": 675, "26160": 675, "26220": 675, "26280": 675, "26340": 675, "26400": 675, "26460": 675, "26520": 675, "26580": 675, "26640": 675, "26700": 675, "26760": 675, "26820": 675, "26880": 675, "26940": 675, "27000": [675, 679], "27120": 675, "27180": 675, "27240": 675, "27300": 675, "27360": 675, "27420": 675, "27480": 675, "27540": 675, "27600": 675, "27660": 675, "27720": 675, "27780": 675, "27840": 675, "27900": 675, "27960": 675, "28020": 675, "28080": 675, "28140": 675, "28200": 675, "28260": 675, "28320": 675, "28380": 675, "28440": 675, "28500": 675, "28560": 675, "28620": 675, "28680": 675, "28740": 675, "28800": 675, "28860": 675, "28920": 675, "28980": 675, "29040": 675, "29100": 675, "29160": 675, "29220": 675, "29280": 675, "29340": 675, "29400": 675, "29460": 675, "29520": 675, "29580": 675, "29640": 675, "29700": 675, "29760": 675, "29820": 675, "29880": 675, "29940": 675, "30000": [675, 679], "30060": 675, "30120": 675, "30180": 675, "30240": 675, "30300": 675, "30360": 675, "30420": 675, "30480": 675, "30540": 675, "30600": 675, "30660": 675, "30720": 675, "30780": 675, "30840": 675, "30900": 675, "30960": 675, "31020": 675, "31080": 675, "31140": 675, "31200": 675, "31260": 675, "31320": 675, "31380": 675, "31440": 675, "31500": 675, "31560": 675, "31620": 675, "31680": 675, "31740": 675, "31800": 675, "31860": 675, "31920": 675, "31980": 675, "32040": 675, "32100": 675, "32160": 675, "32220": 675, "32280": 675, "32340": 675, "32400": 675, "32460": 675, "32520": 675, "32580": 675, "32640": 675, "32700": 675, "32760": 675, "32820": 675, "32880": 675, "32940": 675, "33000": [675, 679], "33060": 675, "33120": 675, "33180": 675, "33240": 675, "33300": 675, "33360": 675, "33420": 675, "33480": 675, "33540": 675, "33600": 675, "33660": 675, "33720": 675, "33780": 675, "33840": 675, "33900": 675, "33960": 675, "34020": 675, "34080": 675, "34140": 675, "34200": 675, "34260": 675, "34320": 675, "34380": 675, "34440": 675, "34500": 675, "34560": 675, "34620": 675, "34680": 675, "34740": 675, "34800": 675, "34860": 675, "34920": 675, "34980": 675, "35040": 675, "35100": 675, "35160": 675, "35220": 675, "35280": 675, "35340": 675, "35400": 675, "35460": 675, "35520": 675, "35580": 675, "35640": 675, "35700": 675, "35760": 675, "35820": 675, "35880": 675, "35940": 675, "36000": [675, 679], "36060": 675, "36120": 675, "36180": 675, "36240": 675, "36300": 675, "36360": 675, "36420": 675, "36480": 675, "36540": 675, "36600": 675, "36660": 675, "36720": 675, "36780": 675, "36840": 675, "36900": 675, "36960": 675, "37020": 675, "37080": 675, "37140": 675, "37200": 675, "37260": 675, "37320": 675, "37380": 675, "37440": 675, "37500": 675, "37560": 675, "37620": 675, "37680": 675, "37740": 675, "37800": 675, "37860": 675, "37920": 675, "37980": 675, "38040": 675, "38100": 675, "38160": 675, "38220": 675, "38280": 675, "38340": 675, "38400": 675, "38460": 675, "38520": 675, "38580": 675, "38640": 675, "38700": 675, "38760": 675, "38820": 675, "38880": 675, "38940": 675, "39000": [675, 679], "39060": 675, "39120": 675, "39180": 675, "39240": 675, "39300": 675, "39360": 675, "39420": 675, "39480": 675, "39540": 675, "39600": 675, "39660": 675, "39720": 675, "39780": 675, "39840": 675, "39900": 675, "39960": 675, "59416776": 675, "59416886": 675, "59489769": 675, "59489879": 675, "5948999": 675, "59415662": 675, "59414657": 675, "5874659": 675, "58745576": 675, "58744563": 675, "59414621": 675, "59412575": 675, "5805231": 675, "58050246": 675, "58048182": 675, "59419881": 675, "59423095": 675, "61560159": 675, "61563401": 675, "61566644": 675, "59418877": 675, "59421087": 675, "6089062": 675, "6089285": 675, "60895079": 675, "59417836": 675, "59419005": 675, "60196382": 675, "60197561": 675, "60198741": 675, "get_metadata": 675, "ref_dict": 675, "reflecitivity_horizont": 675, "21875": 675, "34375": 675, "0078125": 675, "2109375": 675, "1171875": 675, "59375": 675, "421875": 675, "5625": 675, "7109375": 675, "609375": 675, "5078125": 675, "3828125": 675, "6875": 675, "328125": 675, "3203125": 675, "859375": 675, "6484375": 675, "8515625": 675, "9375": [675, 681], "0234375": 675, "6328125": 675, "2890625": 675, "546875": 675, "578125": 675, "6796875": 675, "ref_gt_0": 676, "mask_dict": 676, "reflectivity_mask": 676, "coolwarm": 676, "sherm": [676, 679], "782": [676, 679], "matplotlibdeprecationwarn": [676, 679], "position": [676, 679], "829": [676, 679], "write_cfradi": 676, "new_radar": 676, "2pi": 677, "wave": 677, "3pi": 677, "erron": 677, "phenomena": [677, 681], "maximium": 677, "unambi": 677, "preprocess": 677, "thankfulli": [677, 679], "surround": [677, 679], "presenc": 677, "524973": 677, "vleociti": 677, "realist": 677, "characterist": 679, "100000": 679, "gates_to_grid": 679, "99000": 679, "98000": 679, "97000": 679, "96000": 679, "95000": 679, "94000": 679, "93000": 679, "92000": 679, "91000": 679, "90000": 679, "89000": 679, "88000": 679, "87000": 679, "86000": 679, "85000": 679, "84000": 679, "83000": 679, "82000": 679, "81000": 679, "80000": 679, "79000": 679, "78000": 679, "77000": 679, "76000": 679, "75000": 679, "74000": 679, "73000": 679, "72000": 679, "71000": 679, "70000": 679, "69000": 679, "68000": 679, "67000": 679, "66000": 679, "65000": 679, "64000": 679, "63000": 679, "62000": 679, "61000": 679, "59000": 679, "58000": 679, "57000": 679, "56000": 679, "55000": 679, "54000": 679, "53000": 679, "52000": 679, "51000": 679, "49000": 679, "48000": 679, "47000": 679, "46000": 679, "45000": 679, "44000": 679, "43000": 679, "42000": 679, "41000": 679, "38000": 679, "37000": 679, "35000": 679, "34000": 679, "32000": 679, "31000": 679, "29000": 679, "28000": 679, "26000": 679, "23000": 679, "22000": 679, "19000": 679, "16000": 679, "14000": 679, "13000": 679, "8000": 679, "longitudn": 679, "latitudn": 679, "suffer": 679, "artifici": 679, "feather": 679, "grid_bett": 679, "1750": 679, "sgpxsaprcmacsuri5": 680, "20171004": 680, "203018": 680, "total_pow": 680, "xsapr_clutt": 680, "signal_to_noise_ratio": 680, "unfolded_differential_phas": 680, "corrected_differential_phas": 680, "filtered_corrected_differential_phas": 680, "path_integrated_attenu": 680, "specific_differential_attenu": 680, "path_integrated_differential_attenu": 680, "nonhydrometeor": 680, "exclude_equ": 680, "refl_arrai": 680, "reflectivity_w_mask": 680, "iter_slic": [680, 681], "9344453454202706": 680, "620691732853737": 680, "3756584054113996": 680, "597935968662154": 680, "696735014111216": 680, "061894569912447": 680, "721673265240488": 680, "086695918593689": 680, "33930700509078": 680, "599363169483158": 680, "836875745223637": 680, "051601529570966": 680, "22435547210836": 680, "378109469982695": 680, "553820234067336": 680, "648943841665002": 680, "837593740986444": 680, "049614721040282": 680, "331202567459613": 680, "585432697375357": 680, "87002341270722": 680, "993012637722325": 680, "061966001642219": 680, "122799449619672": 680, "861035552720102": 680, "74608994279257": 680, "148801770281325": 680, "70860719727862": 680, "989513966551444": 680, "188644935344827": 680, "89301878240611": 680, "172644371021923": 680, "79879842243138": 680, "912806090219976": 680, "766281467013889": 680, "920522471877334": 680, "898600907318164": 680, "971026055481874": 680, "110503947133682": 680, "094456418731509": 680, "0822160050675675": 680, "036430544969512": 680, "259332430219459": 680, "2438254054588604": 680, "473482666015625": 680, "574283685503023": 680, "866719139946832": 680, "771468742643597": 680, "beam_azimuth_angl": 681, "azimuth_angle_from_true_north": 681, "radial_azimuth_coordin": 681, "beam_elevation_angl": 681, "elevation_angle_from_horizontal_plan": 681, "radial_elevation_coordin": 681, "1832": 681, "log_differential_reflectivity_hv": 681, "875": 681, "differential_phase_hv": 681, "equivalent_reflectivity_factor": 681, "cross_correlation_ratio_hv": 681, "correlation_ratio": 681, "meters_per_second": 681, "doppler_spectrum_width": 681, "radial_velocity_of_scatterers_away_from_instru": 681, "target_fixed_angl": 681, "degrees_north": 681, "degrees_east": 681, "projection_range_coordin": 681, "range_to_measurement_volum": 681, "radial_range_coordin": 681, "spacing_is_const": 681, "meters_to_center_of_first_g": 681, "2125": 681, "meters_between_g": 681, "s20": 681, "unitless": 681, "coplan": 681, "vertical_point": 681, "idl": 681, "azimuth_surveil": 681, "elevation_surveil": 681, "sunscan": 681, "manual_ppi": 681, "manual_rhi": 681, "17t19": 681, "21z": 681, "time_in_seconds_since_volume_start": 681, "calendar": 681, "gregorian": 681, "katx": 681, "original_contain": 681, "vcp_pattern": 681, "7470703": 681, "7196045": 681, "6893921": 681, "511719": 681, "get_slic": 681, "sweep_1": 681, "52734375": 681, "indici": 681, "slice_indic": 681, "9066728410400056": 681, "478547577741713": 681, "587792083929423": 681, "871031288639269": 681, "971692217963673": 681, "830616390843327": 681, "108188248095756": 681, "483419908190385": 681, "88976917057903": 681, "852766685681688": 681, "410455582269897": 681, "66444787446138": 681, "997862391449566": 681, "172098402018502": 681, "489752513534416": 681, "712565619531706": 681, "commonli": 681, "9x": 683, "10x": 683, "11x": 683, "But": 683, "bash": 683, "pythonpath": 683, "pth": 683, "build_ext": 683, "segfault": 683, "Theres": 683, "proper": 683, "reinstal": 683, "remedi": 683, "fno": 683, "protector": 683, "d_fortify_sourc": 683, "cflag": 683, "makefil": 683, "troubl": 683, "define_macro": 683, "macro": 683, "extra_compile_arg": 683, "m32": 683, "extra_link_arg": 683, "m64": 683, "proj_lib": 683, "plai": 683, "xx": 683, "xxx": 683, "mpl_toolkit": 683, "conflict": 686, "exit": 686, "led": 686, "manag": 686, "deactiv": 686, "enviro": 686, "scratch": 686, "spyder": 686, "though": 686, "yourusernam": 686, "youranacondadir": 686, "gitter": 686, "im": 686}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [127, 1, 0, "-", "correct"], [175, 1, 0, "-", "exceptions"], [176, 1, 0, "-", "filters"], [211, 1, 0, "-", "graph"], [368, 1, 0, "-", "io"], [389, 1, 0, "-", "lazydict"], [413, 1, 0, "-", "map"], [426, 1, 0, "-", "retrieve"], [468, 1, 0, "-", "testing"], [571, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_antenna"], [122, 0, 1, "", "cartesian_to_geographic"], [123, 0, 1, "", "cartesian_to_geographic_aeqd"], [124, 0, 1, "", "cartesian_vectors_to_geographic"], [125, 0, 1, "", "geographic_to_cartesian"], [126, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[128, 2, 1, "", "GateFilter"], [158, 0, 1, "", "calc_cloud_mask"], [159, 0, 1, "", "calc_noise_floor"], [160, 0, 1, "", "calculate_attenuation"], [161, 0, 1, "", "calculate_attenuation_philinear"], [162, 0, 1, "", "calculate_attenuation_zphi"], [163, 0, 1, "", "cloud_threshold"], [164, 0, 1, "", "correct_bias"], [165, 0, 1, "", "correct_noise_rhohv"], [166, 0, 1, "", "dealias_fourdd"], [167, 0, 1, "", "dealias_region_based"], [168, 0, 1, "", "dealias_unwrap_phase"], [169, 0, 1, "", "despeckle_field"], [170, 0, 1, "", "find_objects"], [171, 0, 1, "", "moment_based_gate_filter"], [172, 0, 1, "", "phase_proc_lp"], [173, 0, 1, "", "phase_proc_lp_gf"], [174, 0, 1, "", "range_correction"]], "pyart.correct.GateFilter": [[129, 3, 1, "", "copy"], [130, 3, 1, "", "exclude_above"], [131, 3, 1, "", "exclude_above_toa"], [132, 3, 1, "", "exclude_all"], [133, 3, 1, "", "exclude_below"], [134, 3, 1, "", "exclude_equal"], [135, 3, 1, "", "exclude_gates"], [136, 3, 1, "", "exclude_inside"], [137, 3, 1, "", "exclude_invalid"], [138, 3, 1, "", "exclude_last_gates"], [139, 3, 1, "", "exclude_masked"], [140, 3, 1, "", "exclude_none"], [141, 3, 1, "", "exclude_not_equal"], [142, 3, 1, "", "exclude_outside"], [143, 3, 1, "", "exclude_transition"], [144, 4, 1, "", "gate_excluded"], [145, 4, 1, "", "gate_included"], [146, 3, 1, "", "include_above"], [147, 3, 1, "", "include_all"], [148, 3, 1, "", "include_below"], [149, 3, 1, "", "include_equal"], [150, 3, 1, "", "include_gates"], [151, 3, 1, "", "include_inside"], [152, 3, 1, "", "include_none"], [153, 3, 1, "", "include_not_equal"], [154, 3, 1, "", "include_not_masked"], [155, 3, 1, "", "include_not_transition"], [156, 3, 1, "", "include_outside"], [157, 3, 1, "", "include_valid"]], "pyart.filters": [[177, 2, 1, "", "GateFilter"], [207, 0, 1, "", "iso0_based_gate_filter"], [208, 0, 1, "", "moment_and_texture_based_gate_filter"], [209, 0, 1, "", "moment_based_gate_filter"], [210, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[178, 3, 1, "", "copy"], [179, 3, 1, "", "exclude_above"], [180, 3, 1, "", "exclude_above_toa"], [181, 3, 1, "", "exclude_all"], [182, 3, 1, "", "exclude_below"], [183, 3, 1, "", "exclude_equal"], [184, 3, 1, "", "exclude_gates"], [185, 3, 1, "", "exclude_inside"], [186, 3, 1, "", "exclude_invalid"], [187, 3, 1, "", "exclude_last_gates"], [188, 3, 1, "", "exclude_masked"], [189, 3, 1, "", "exclude_none"], [190, 3, 1, "", "exclude_not_equal"], [191, 3, 1, "", "exclude_outside"], [192, 3, 1, "", "exclude_transition"], [193, 4, 1, "", "gate_excluded"], [194, 4, 1, "", "gate_included"], [195, 3, 1, "", "include_above"], [196, 3, 1, "", "include_all"], [197, 3, 1, "", "include_below"], [198, 3, 1, "", "include_equal"], [199, 3, 1, "", "include_gates"], [200, 3, 1, "", "include_inside"], [201, 3, 1, "", "include_none"], [202, 3, 1, "", "include_not_equal"], [203, 3, 1, "", "include_not_masked"], [204, 3, 1, "", "include_not_transition"], [205, 3, 1, "", "include_outside"], [206, 3, 1, "", "include_valid"]], "pyart.graph": [[212, 2, 1, "", "AirborneRadarDisplay"], [242, 2, 1, "", "GridMapDisplay"], [258, 2, 1, "", "GridMapDisplayBasemap"], [272, 2, 1, "", "RadarDisplay"], [301, 2, 1, "", "RadarMapDisplay"], [334, 2, 1, "", "RadarMapDisplayBasemap"], [367, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[213, 3, 1, "", "generate_az_rhi_title"], [214, 3, 1, "", "generate_filename"], [215, 3, 1, "", "generate_ray_title"], [216, 3, 1, "", "generate_title"], [217, 3, 1, "", "generate_vpt_title"], [218, 3, 1, "", "label_xaxis_r"], [219, 3, 1, "", "label_xaxis_rays"], [220, 3, 1, "", "label_xaxis_time"], [221, 3, 1, "", "label_xaxis_x"], [222, 3, 1, "", "label_yaxis_field"], [223, 3, 1, "", "label_yaxis_y"], [224, 3, 1, "", "label_yaxis_z"], [225, 3, 1, "", "plot"], [226, 3, 1, "", "plot_azimuth_to_rhi"], [227, 3, 1, "", "plot_colorbar"], [228, 3, 1, "", "plot_cr_raster"], [229, 3, 1, "", "plot_cross_hair"], [230, 3, 1, "", "plot_grid_lines"], [231, 3, 1, "", "plot_label"], [232, 3, 1, "", "plot_labels"], [233, 3, 1, "", "plot_ppi"], [234, 3, 1, "", "plot_range_ring"], [235, 3, 1, "", "plot_range_rings"], [236, 3, 1, "", "plot_ray"], [237, 3, 1, "", "plot_rhi"], [238, 3, 1, "", "plot_sweep_grid"], [239, 3, 1, "", "plot_vpt"], [240, 3, 1, "", "set_aspect_ratio"], [241, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[243, 3, 1, "", "cartopy_coastlines"], [244, 3, 1, "", "cartopy_political_boundaries"], [245, 3, 1, "", "cartopy_states"], [246, 3, 1, "", "generate_filename"], [247, 3, 1, "", "generate_grid_title"], [248, 3, 1, "", "generate_latitudinal_level_title"], [249, 3, 1, "", "generate_longitudinal_level_title"], [250, 3, 1, "", "plot_colorbar"], [251, 3, 1, "", "plot_cross_section"], [252, 3, 1, "", "plot_crosshairs"], [253, 3, 1, "", "plot_grid"], [254, 3, 1, "", "plot_latitude_slice"], [255, 3, 1, "", "plot_latitudinal_level"], [256, 3, 1, "", "plot_longitude_slice"], [257, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[259, 3, 1, "", "generate_filename"], [260, 3, 1, "", "generate_grid_title"], [261, 3, 1, "", "generate_latitudinal_level_title"], [262, 3, 1, "", "generate_longitudinal_level_title"], [263, 3, 1, "", "get_basemap"], [264, 3, 1, "", "plot_basemap"], [265, 3, 1, "", "plot_colorbar"], [266, 3, 1, "", "plot_crosshairs"], [267, 3, 1, "", "plot_grid"], [268, 3, 1, "", "plot_latitude_slice"], [269, 3, 1, "", "plot_latitudinal_level"], [270, 3, 1, "", "plot_longitude_slice"], [271, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[273, 3, 1, "", "generate_az_rhi_title"], [274, 3, 1, "", "generate_filename"], [275, 3, 1, "", "generate_ray_title"], [276, 3, 1, "", "generate_title"], [277, 3, 1, "", "generate_vpt_title"], [278, 3, 1, "", "label_xaxis_r"], [279, 3, 1, "", "label_xaxis_rays"], [280, 3, 1, "", "label_xaxis_time"], [281, 3, 1, "", "label_xaxis_x"], [282, 3, 1, "", "label_yaxis_field"], [283, 3, 1, "", "label_yaxis_y"], [284, 3, 1, "", "label_yaxis_z"], [285, 3, 1, "", "plot"], [286, 3, 1, "", "plot_azimuth_to_rhi"], [287, 3, 1, "", "plot_colorbar"], [288, 3, 1, "", "plot_cr_raster"], [289, 3, 1, "", "plot_cross_hair"], [290, 3, 1, "", "plot_grid_lines"], [291, 3, 1, "", "plot_label"], [292, 3, 1, "", "plot_labels"], [293, 3, 1, "", "plot_ppi"], [294, 3, 1, "", "plot_range_ring"], [295, 3, 1, "", "plot_range_rings"], [296, 3, 1, "", "plot_ray"], [297, 3, 1, "", "plot_rhi"], [298, 3, 1, "", "plot_vpt"], [299, 3, 1, "", "set_aspect_ratio"], [300, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[302, 3, 1, "", "generate_az_rhi_title"], [303, 3, 1, "", "generate_filename"], [304, 3, 1, "", "generate_ray_title"], [305, 3, 1, "", "generate_title"], [306, 3, 1, "", "generate_vpt_title"], [307, 3, 1, "", "label_xaxis_r"], [308, 3, 1, "", "label_xaxis_rays"], [309, 3, 1, "", "label_xaxis_time"], [310, 3, 1, "", "label_xaxis_x"], [311, 3, 1, "", "label_yaxis_field"], [312, 3, 1, "", "label_yaxis_y"], [313, 3, 1, "", "label_yaxis_z"], [314, 3, 1, "", "plot"], [315, 3, 1, "", "plot_azimuth_to_rhi"], [316, 3, 1, "", "plot_colorbar"], [317, 3, 1, "", "plot_cr_raster"], [318, 3, 1, "", "plot_cross_hair"], [319, 3, 1, "", "plot_grid_lines"], [320, 3, 1, "", "plot_label"], [321, 3, 1, "", "plot_labels"], [322, 3, 1, "", "plot_line_geo"], [323, 3, 1, "", "plot_line_xy"], [324, 3, 1, "", "plot_point"], [325, 3, 1, "", "plot_ppi"], [326, 3, 1, "", "plot_ppi_map"], [327, 3, 1, "", "plot_range_ring"], [328, 3, 1, "", "plot_range_rings"], [329, 3, 1, "", "plot_ray"], [330, 3, 1, "", "plot_rhi"], [331, 3, 1, "", "plot_vpt"], [332, 3, 1, "", "set_aspect_ratio"], [333, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[335, 3, 1, "", "generate_az_rhi_title"], [336, 3, 1, "", "generate_filename"], [337, 3, 1, "", "generate_ray_title"], [338, 3, 1, "", "generate_title"], [339, 3, 1, "", "generate_vpt_title"], [340, 3, 1, "", "label_xaxis_r"], [341, 3, 1, "", "label_xaxis_rays"], [342, 3, 1, "", "label_xaxis_time"], [343, 3, 1, "", "label_xaxis_x"], [344, 3, 1, "", "label_yaxis_field"], [345, 3, 1, "", "label_yaxis_y"], [346, 3, 1, "", "label_yaxis_z"], [347, 3, 1, "", "plot"], [348, 3, 1, "", "plot_azimuth_to_rhi"], [349, 3, 1, "", "plot_colorbar"], [350, 3, 1, "", "plot_cr_raster"], [351, 3, 1, "", "plot_cross_hair"], [352, 3, 1, "", "plot_grid_lines"], [353, 3, 1, "", "plot_label"], [354, 3, 1, "", "plot_labels"], [355, 3, 1, "", "plot_line_geo"], [356, 3, 1, "", "plot_line_xy"], [357, 3, 1, "", "plot_point"], [358, 3, 1, "", "plot_ppi"], [359, 3, 1, "", "plot_ppi_map"], [360, 3, 1, "", "plot_range_ring"], [361, 3, 1, "", "plot_range_rings"], [362, 3, 1, "", "plot_ray"], [363, 3, 1, "", "plot_rhi"], [364, 3, 1, "", "plot_vpt"], [365, 3, 1, "", "set_aspect_ratio"], [366, 3, 1, "", "set_limits"]], "pyart.io": [[369, 0, 1, "", "prepare_for_read"], [370, 0, 1, "", "read"], [371, 0, 1, "", "read_arm_sonde"], [372, 0, 1, "", "read_arm_sonde_vap"], [373, 0, 1, "", "read_cfradial"], [374, 0, 1, "", "read_chl"], [375, 0, 1, "", "read_grid"], [376, 0, 1, "", "read_grid_mdv"], [377, 0, 1, "", "read_mdv"], [378, 0, 1, "", "read_nexrad_archive"], [379, 0, 1, "", "read_nexrad_cdm"], [380, 0, 1, "", "read_nexrad_level3"], [381, 0, 1, "", "read_rsl"], [382, 0, 1, "", "read_sigmet"], [383, 0, 1, "", "read_uf"], [384, 0, 1, "", "write_cfradial"], [385, 0, 1, "", "write_grid"], [386, 0, 1, "", "write_grid_geotiff"], [387, 0, 1, "", "write_grid_mdv"], [388, 0, 1, "", "write_uf"]], "pyart.lazydict": [[390, 2, 1, "", "LazyLoadDict"], [403, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[391, 3, 1, "", "clear"], [392, 3, 1, "", "copy"], [393, 3, 1, "", "get"], [394, 3, 1, "", "has_key"], [395, 3, 1, "", "items"], [396, 3, 1, "", "keys"], [397, 3, 1, "", "pop"], [398, 3, 1, "", "popitem"], [399, 3, 1, "", "set_lazy"], [400, 3, 1, "", "setdefault"], [401, 3, 1, "", "update"], [402, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[404, 3, 1, "", "clear"], [405, 3, 1, "", "get"], [406, 3, 1, "", "items"], [407, 3, 1, "", "keys"], [408, 3, 1, "", "pop"], [409, 3, 1, "", "popitem"], [410, 3, 1, "", "setdefault"], [411, 3, 1, "", "update"], [412, 3, 1, "", "values"]], "pyart.map": [[414, 2, 1, "", "GateMapper"], [418, 0, 1, "", "example_roi_func_constant"], [419, 0, 1, "", "example_roi_func_dist"], [420, 0, 1, "", "example_roi_func_dist_beam"], [421, 0, 1, "", "grid_from_radars"], [422, 0, 1, "", "grid_ppi_sweeps"], [423, 0, 1, "", "grid_rhi_sweeps"], [424, 0, 1, "", "map_gates_to_grid"], [425, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[415, 4, 1, "", "distance_tolerance"], [416, 3, 1, "", "mapped_radar"], [417, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[427, 0, 1, "", "ZtoR"], [428, 0, 1, "", "calculate_snr_from_reflectivity"], [429, 0, 1, "", "calculate_velocity_texture"], [430, 0, 1, "", "composite_reflectivity"], [431, 0, 1, "", "compute_cdr"], [432, 0, 1, "", "compute_evp"], [433, 0, 1, "", "compute_l"], [434, 0, 1, "", "compute_noisedBZ"], [435, 0, 1, "", "compute_qvp"], [436, 0, 1, "", "compute_rqvp"], [437, 0, 1, "", "compute_snr"], [438, 0, 1, "", "compute_svp"], [439, 0, 1, "", "compute_ts_along_coord"], [440, 0, 1, "", "compute_vp"], [441, 0, 1, "", "conv_strat_raut"], [442, 0, 1, "", "conv_strat_yuter"], [443, 0, 1, "", "create_cfad"], [444, 0, 1, "", "dealias_spectra"], [445, 0, 1, "", "est_rain_rate_a"], [446, 0, 1, "", "est_rain_rate_hydro"], [447, 0, 1, "", "est_rain_rate_kdp"], [448, 0, 1, "", "est_rain_rate_z"], [449, 0, 1, "", "est_rain_rate_za"], [450, 0, 1, "", "est_rain_rate_zkdp"], [451, 0, 1, "", "est_rain_rate_zpoly"], [452, 0, 1, "", "feature_detection"], [453, 0, 1, "", "fetch_radar_time_profile"], [454, 0, 1, "", "get_freq_band"], [455, 0, 1, "", "grid_displacement_pc"], [456, 0, 1, "", "grid_shift"], [457, 0, 1, "", "hydroclass_semisupervised"], [458, 0, 1, "", "kdp_maesaka"], [459, 0, 1, "", "kdp_schneebeli"], [460, 0, 1, "", "kdp_vulpiani"], [461, 0, 1, "", "map_profile_to_gates"], [462, 0, 1, "", "quasi_vertical_profile"], [463, 0, 1, "", "spectra_moments"], [464, 0, 1, "", "steiner_conv_strat"], [465, 0, 1, "", "texture_of_complex_phase"], [466, 0, 1, "", "vad_browning"], [467, 0, 1, "", "vad_michelson"]], "pyart.testing": [[469, 2, 1, "", "Grid"], [479, 2, 1, "", "InTemporaryDirectory"], [481, 2, 1, "", "Radar"], [510, 2, 1, "", "RadarSpectra"], [555, 0, 1, "", "get_metadata"], [556, 0, 1, "", "get_test_data"], [557, 0, 1, "", "make_empty_grid"], [558, 0, 1, "", "make_empty_ppi_radar"], [559, 0, 1, "", "make_empty_rhi_radar"], [560, 0, 1, "", "make_empty_spectra_radar"], [561, 0, 1, "", "make_gaussian_storm_grid"], [562, 0, 1, "", "make_normal_storm"], [563, 0, 1, "", "make_single_ray_radar"], [564, 0, 1, "", "make_storm_grid"], [565, 0, 1, "", "make_target_grid"], [566, 0, 1, "", "make_target_radar"], [567, 0, 1, "", "make_target_rhi_radar"], [568, 0, 1, "", "make_target_spectra_radar"], [569, 0, 1, "", "make_velocity_aliased_radar"], [570, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[470, 3, 1, "", "add_field"], [471, 3, 1, "", "get_point_longitude_latitude"], [472, 3, 1, "", "get_projparams"], [473, 3, 1, "", "init_point_altitude"], [474, 3, 1, "", "init_point_longitude_latitude"], [475, 3, 1, "", "init_point_x_y_z"], [476, 4, 1, "", "projection_proj"], [477, 3, 1, "", "to_xarray"], [478, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[480, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[482, 3, 1, "", "add_field"], [483, 3, 1, "", "add_field_like"], [484, 3, 1, "", "add_filter"], [485, 3, 1, "", "check_field_exists"], [486, 3, 1, "", "extract_sweeps"], [487, 3, 1, "", "get_azimuth"], [488, 3, 1, "", "get_elevation"], [489, 3, 1, "", "get_end"], [490, 3, 1, "", "get_field"], [491, 3, 1, "", "get_gate_area"], [492, 3, 1, "", "get_gate_lat_lon_alt"], [493, 3, 1, "", "get_gate_x_y_z"], [494, 3, 1, "", "get_nyquist_vel"], [495, 3, 1, "", "get_slice"], [496, 3, 1, "", "get_start"], [497, 3, 1, "", "get_start_end"], [498, 3, 1, "", "info"], [499, 3, 1, "", "init_gate_altitude"], [500, 3, 1, "", "init_gate_longitude_latitude"], [501, 3, 1, "", "init_gate_x_y_z"], [502, 3, 1, "", "init_rays_per_sweep"], [503, 3, 1, "", "iter_azimuth"], [504, 3, 1, "", "iter_elevation"], [505, 3, 1, "", "iter_end"], [506, 3, 1, "", "iter_field"], [507, 3, 1, "", "iter_slice"], [508, 3, 1, "", "iter_start"], [509, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[511, 4, 1, "", "altitude"], [512, 4, 1, "", "azimuth"], [513, 3, 1, "", "check_field_exists"], [514, 4, 1, "", "elevation"], [515, 4, 1, "", "fields"], [516, 4, 1, "", "fixed_angle"], [517, 4, 1, "", "gate_altitude"], [518, 4, 1, "", "gate_latitude"], [519, 4, 1, "", "gate_longitude"], [520, 4, 1, "", "gate_x"], [521, 4, 1, "", "gate_y"], [522, 4, 1, "", "gate_z"], [523, 3, 1, "", "get_end"], [524, 3, 1, "", "get_slice"], [525, 3, 1, "", "get_start"], [526, 3, 1, "", "get_start_end"], [527, 3, 1, "", "init_gate_altitude"], [528, 3, 1, "", "init_gate_longitude_latitude"], [529, 3, 1, "", "init_gate_x_y_z"], [530, 3, 1, "", "init_rays_per_sweep"], [531, 3, 1, "", "iter_azimuth"], [532, 3, 1, "", "iter_elevation"], [533, 3, 1, "", "iter_end"], [534, 3, 1, "", "iter_field"], [535, 3, 1, "", "iter_slice"], [536, 3, 1, "", "iter_start"], [537, 3, 1, "", "iter_start_end"], [538, 4, 1, "", "latitude"], [539, 4, 1, "", "longitude"], [540, 4, 1, "", "ngates"], [541, 4, 1, "", "npulses_max"], [542, 4, 1, "", "nrays"], [543, 4, 1, "", "nsweeps"], [544, 4, 1, "", "projection"], [545, 4, 1, "", "range"], [546, 4, 1, "", "rays_per_sweep"], [547, 4, 1, "", "scan_type"], [548, 4, 1, "", "sweep_end_ray_index"], [549, 4, 1, "", "sweep_mode"], [550, 4, 1, "", "sweep_number"], [551, 4, 1, "", "sweep_start_ray_index"], [552, 4, 1, "", "time"], [553, 3, 1, "", "to_vpt"], [554, 4, 1, "", "velocity_bins"]], "pyart.util": [[572, 0, 1, "", "angular_mean"], [573, 0, 1, "", "angular_mean_deg"], [574, 0, 1, "", "angular_std"], [575, 0, 1, "", "angular_std_deg"], [576, 0, 1, "", "angular_texture_2d"], [577, 0, 1, "", "column_vertical_profile"], [578, 0, 1, "", "compute_directional_stats"], [579, 0, 1, "", "cross_section_ppi"], [580, 0, 1, "", "cross_section_rhi"], [581, 0, 1, "", "datetime_from_dataset"], [582, 0, 1, "", "datetime_from_grid"], [583, 0, 1, "", "datetime_from_radar"], [584, 0, 1, "", "datetimes_from_dataset"], [585, 0, 1, "", "datetimes_from_radar"], [586, 0, 1, "", "determine_sweeps"], [587, 0, 1, "", "estimate_noise_hs74"], [588, 0, 1, "", "for_azimuth"], [589, 0, 1, "", "get_column_rays"], [590, 0, 1, "", "get_field_location"], [591, 0, 1, "", "image_mute_radar"], [592, 0, 1, "", "interval_mean"], [593, 0, 1, "", "interval_std"], [594, 0, 1, "", "is_vpt"], [595, 0, 1, "", "join_radar"], [596, 0, 1, "", "ma_broadcast_to"], [597, 0, 1, "", "mean_of_two_angles"], [598, 0, 1, "", "mean_of_two_angles_deg"], [599, 0, 1, "", "rolling_window"], [600, 0, 1, "", "simulated_vel_from_profile"], [601, 0, 1, "", "sphere_distance"], [602, 0, 1, "", "subset_radar"], [603, 0, 1, "", "texture"], [604, 0, 1, "", "texture_along_ray"], [605, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 609, 611, 612, 615, 618], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 465], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 555], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 634, 635, 636, 640, 670, 679], "add_field": [32, 46, 470, 482], "get_point_longitude_latitud": [33, 471], "get_projparam": [34, 472], "init_point_altitud": [35, 473], "init_point_longitude_latitud": [36, 474], "init_point_x_y_z": [37, 475], "projection_proj": [38, 476], "to_xarrai": [39, 477], "write": [40, 478], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 610, 611, 615, 616, 619, 621, 633, 635, 636, 659, 673, 676, 681, 684], "add_field_lik": [47, 483], "add_filt": [48, 484], "check_field_exist": [49, 77, 485, 513], "extract_sweep": [50, 486], "get_azimuth": [51, 487], "get_elev": [52, 488], "get_end": [53, 87, 489, 523], "get_field": [54, 490], "get_gate_area": [55, 491], "get_gate_lat_lon_alt": [56, 492], "get_gate_x_y_z": [57, 493], "get_nyquist_vel": [58, 494], "get_slic": [59, 88, 495, 524], "get_start": [60, 89, 496, 525], "get_start_end": [61, 90, 497, 526], "info": [62, 498], "init_gate_altitud": [63, 91, 499, 527], "init_gate_longitude_latitud": [64, 92, 500, 528], "init_gate_x_y_z": [65, 93, 501, 529], "init_rays_per_sweep": [66, 94, 502, 530], "iter_azimuth": [67, 95, 503, 531], "iter_elev": [68, 96, 504, 532], "iter_end": [69, 97, 505, 533], "iter_field": [70, 98, 506, 534], "iter_slic": [71, 99, 507, 535], "iter_start": [72, 100, 508, 536], "iter_start_end": [73, 101, 509, 537], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554], "altitud": [75, 511], "azimuth": [76, 512], "elev": [78, 514], "field": [79, 515, 676], "fixed_angl": [80, 516], "gate_altitud": [81, 517], "gate_latitud": [82, 518], "gate_longitud": [83, 519], "gate_x": [84, 520], "gate_i": [85, 521], "gate_z": [86, 522], "latitud": [102, 538, 630], "longitud": [103, 539, 630], "ngate": [104, 540], "npulses_max": [105, 541], "nrai": [106, 542], "nsweep": [107, 543], "project": [108, 544], "rang": [109, 545, 615], "rays_per_sweep": [110, 546], "scan_typ": [111, 547], "sweep_end_ray_index": [112, 548], "sweep_mod": [113, 549], "sweep_numb": [114, 550], "sweep_start_ray_index": [115, 551], "time": [116, 552, 611, 615, 626, 631, 637, 656, 666, 667, 672, 682], "to_vpt": [117, 553, 605], "velocity_bin": [118, 554], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_antenna": 121, "cartesian_to_geograph": 122, "cartesian_to_geographic_aeqd": 123, "cartesian_vectors_to_geograph": 124, "geographic_to_cartesian": 125, "geographic_to_cartesian_aeqd": 126, "correct": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 616, 623, 624, 627], "gatefilt": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 680], "copi": [129, 178, 392], "exclude_abov": [130, 179], "exclude_above_toa": [131, 180], "exclude_al": [132, 181], "exclude_below": [133, 182], "exclude_equ": [134, 183], "exclude_g": [135, 184], "exclude_insid": [136, 185], "exclude_invalid": [137, 186], "exclude_last_g": [138, 187], "exclude_mask": [139, 188], "exclude_non": [140, 189], "exclude_not_equ": [141, 190], "exclude_outsid": [142, 191], "exclude_transit": [143, 192], "gate_exclud": [144, 193], "gate_includ": [145, 194], "include_abov": [146, 195], "include_al": [147, 196], "include_below": [148, 197], "include_equ": [149, 198], "include_g": [150, 199], "include_insid": [151, 200], "include_non": [152, 201], "include_not_equ": [153, 202], "include_not_mask": [154, 203], "include_not_transit": [155, 204], "include_outsid": [156, 205], "include_valid": [157, 206], "calc_cloud_mask": 158, "calc_noise_floor": 159, "calculate_attenu": 160, "calculate_attenuation_philinear": 161, "calculate_attenuation_zphi": 162, "cloud_threshold": 163, "correct_bia": 164, "correct_noise_rhohv": 165, "dealias_fourdd": 166, "dealias_region_bas": 167, "dealias_unwrap_phas": 168, "despeckle_field": 169, "find_object": 170, "moment_based_gate_filt": [171, 209], "phase_proc_lp": 172, "phase_proc_lp_gf": 173, "range_correct": 174, "except": 175, "filter": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "iso0_based_gate_filt": 207, "moment_and_texture_based_gate_filt": 208, "temp_based_gate_filt": 210, "graph": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "airborneradardisplai": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "generate_az_rhi_titl": [213, 273, 302, 335], "generate_filenam": [214, 246, 259, 274, 303, 336], "generate_ray_titl": [215, 275, 304, 337], "generate_titl": [216, 276, 305, 338], "generate_vpt_titl": [217, 277, 306, 339], "label_xaxis_r": [218, 278, 307, 340], "label_xaxis_rai": [219, 279, 308, 341], "label_xaxis_tim": [220, 280, 309, 342], "label_xaxis_x": [221, 281, 310, 343], "label_yaxis_field": [222, 282, 311, 344], "label_yaxis_i": [223, 283, 312, 345], "label_yaxis_z": [224, 284, 313, 346], "plot": [225, 285, 314, 347, 610, 611, 612, 614, 615, 616, 627, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 660, 663, 665, 671], "plot_azimuth_to_rhi": [226, 286, 315, 348], "plot_colorbar": [227, 250, 265, 287, 316, 349], "plot_cr_rast": [228, 288, 317, 350], "plot_cross_hair": [229, 289, 318, 351], "plot_grid_lin": [230, 290, 319, 352], "plot_label": [231, 232, 291, 292, 320, 321, 353, 354], "plot_ppi": [233, 293, 325, 358], "plot_range_r": [234, 235, 294, 295, 327, 328, 360, 361], "plot_rai": [236, 296, 329, 362], "plot_rhi": [237, 297, 330, 363], "plot_sweep_grid": 238, "plot_vpt": [239, 298, 331, 364], "set_aspect_ratio": [240, 299, 332, 365], "set_limit": [241, 300, 333, 366], "gridmapdisplai": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 654], "cartopy_coastlin": 243, "cartopy_political_boundari": 244, "cartopy_st": 245, "generate_grid_titl": [247, 260], "generate_latitudinal_level_titl": [248, 261], "generate_longitudinal_level_titl": [249, 262], "plot_cross_sect": 251, "plot_crosshair": [252, 266], "plot_grid": [253, 267], "plot_latitude_slic": [254, 268], "plot_latitudinal_level": [255, 269], "plot_longitude_slic": [256, 270], "plot_longitudinal_level": [257, 271], "gridmapdisplaybasemap": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "get_basemap": 263, "plot_basemap": 264, "radardisplai": [272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "radarmapdisplai": [301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 612], "plot_line_geo": [322, 355], "plot_line_xi": [323, 356], "plot_point": [324, 357], "plot_ppi_map": [326, 359, 612], "radarmapdisplaybasemap": [334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366], "plot_convstrat_schem": 367, "io": [368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388], "prepare_for_read": 369, "read": [370, 610, 611, 612, 615, 616, 629, 630], "read_arm_sond": 371, "read_arm_sonde_vap": 372, "read_cfradi": 373, "read_chl": 374, "read_grid": 375, "read_grid_mdv": 376, "read_mdv": 377, "read_nexrad_arch": 378, "read_nexrad_cdm": 379, "read_nexrad_level3": 380, "read_rsl": 381, "read_sigmet": 382, "read_uf": 383, "write_cfradi": 384, "write_grid": 385, "write_grid_geotiff": 386, "write_grid_mdv": 387, "write_uf": 388, "lazydict": [389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "lazyloaddict": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "clear": [391, 404], "get": [393, 405, 673], "has_kei": 394, "item": [395, 406], "kei": [396, 407, 611], "pop": [397, 408], "popitem": [398, 409], "set_lazi": 399, "setdefault": [400, 410], "updat": [401, 411, 621], "valu": [402, 412], "mutablemap": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "map": [413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 615, 627, 632, 634, 635, 636, 647, 679], "gatemapp": [414, 415, 416, 417, 633], "distance_toler": 415, "mapped_radar": 416, "time_toler": 417, "example_roi_func_const": 418, "example_roi_func_dist": 419, "example_roi_func_dist_beam": 420, "grid_from_radar": 421, "grid_ppi_sweep": 422, "grid_rhi_sweep": 423, "map_gates_to_grid": 424, "map_to_grid": 425, "retriev": [426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 616, 627, 657], "ztor": 427, "calculate_snr_from_reflect": 428, "calculate_velocity_textur": 429, "composite_reflect": 430, "compute_cdr": 431, "compute_evp": 432, "compute_l": 433, "compute_noisedbz": 434, "compute_qvp": 435, "compute_rqvp": 436, "compute_snr": 437, "compute_svp": 438, "compute_ts_along_coord": 439, "compute_vp": 440, "conv_strat_raut": 441, "conv_strat_yut": 442, "create_cfad": 443, "dealias_spectra": 444, "est_rain_rate_a": 445, "est_rain_rate_hydro": 446, "est_rain_rate_kdp": 447, "est_rain_rate_z": 448, "est_rain_rate_za": 449, "est_rain_rate_zkdp": 450, "est_rain_rate_zpoli": 451, "feature_detect": 452, "fetch_radar_time_profil": 453, "get_freq_band": 454, "grid_displacement_pc": 455, "grid_shift": 456, "hydroclass_semisupervis": 457, "usag": 457, "kdp_maesaka": 458, "kdp_schneeb": 459, "kdp_vulpiani": 460, "map_profile_to_g": 461, "quasi_vertical_profil": 462, "spectra_mo": 463, "paramet": [463, 612], "steiner_conv_strat": 464, "vad_brown": 466, "vad_michelson": 467, "test": [468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 619, 684], "intemporarydirectori": [479, 480], "cleanup": 480, "get_test_data": 556, "make_empty_grid": 557, "make_empty_ppi_radar": 558, "make_empty_rhi_radar": 559, "make_empty_spectra_radar": 560, "make_gaussian_storm_grid": 561, "make_normal_storm": 562, "make_single_ray_radar": 563, "make_storm_grid": 564, "make_target_grid": 565, "make_target_radar": 566, "make_target_rhi_radar": 567, "make_target_spectra_radar": 568, "make_velocity_aliased_radar": 569, "make_velocity_aliased_rhi_radar": 570, "util": [571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605], "angular_mean": 572, "angular_mean_deg": 573, "angular_std": 574, "angular_std_deg": 575, "angular_texture_2d": 576, "column_vertical_profil": 577, "compute_directional_stat": 578, "cross_section_ppi": 579, "cross_section_rhi": 580, "datetime_from_dataset": 581, "datetime_from_grid": 582, "datetime_from_radar": 583, "datetimes_from_dataset": 584, "datetimes_from_radar": 585, "determine_sweep": 586, "estimate_noise_hs74": 587, "for_azimuth": 588, "assumpt": [588, 601], "get_column_rai": 589, "get_field_loc": 590, "image_mute_radar": 591, "interval_mean": 592, "interval_std": 593, "is_vpt": 594, "join_radar": 595, "ma_broadcast_to": 596, "mean_of_two_angl": 597, "mean_of_two_angles_deg": 598, "rolling_window": 599, "simulated_vel_from_profil": 600, "sphere_dist": 601, "subset_radar": 602, "textur": 603, "texture_along_rai": 604, "api": [606, 616], "refer": [606, 616, 661, 662], "manual": 606, "blog": [607, 615, 617], "blend": 608, "observ": 608, "from": [608, 610, 615, 616, 629, 640, 643, 645, 646, 648, 649, 650, 651, 652, 655, 683], "tracer": 608, "us": [608, 610, 611, 612, 615, 616, 625, 633, 634, 654, 669, 670, 671], "py": [608, 609, 610, 615, 616, 618, 619, 620, 621, 669, 670, 671, 673, 680, 681, 683, 684], "art": [608, 609, 610, 615, 616, 618, 619, 620, 621, 669, 670, 671, 673, 680, 681, 683, 684], "import": [608, 610, 611, 612, 614, 619, 684], "goe": 608, "data": [608, 610, 611, 612, 614, 615, 616, 629, 630, 670, 679, 680], "access": [608, 610, 612, 614, 615], "csapr": 608, "load": [608, 611], "lma": 608, "flash": 608, "june": 608, "17th": 608, "case": 608, "17": [608, 618], "rhi": [608, 616, 648, 649, 650, 651, 652, 653], "activ": 609, "develop": [609, 622], "submit": 609, "pull": 609, "request": 609, "pr": [609, 618], "first": 609, "you": [609, 616], "have": 609, "done": 609, "so": 609, "alreadi": 609, "need": 609, "fork": 609, "github": [609, 619, 621, 684], "repositori": 609, "second": 609, "termin": 609, "clone": 609, "your": [609, 615, 616, 639, 641], "remot": 609, "git": [609, 621], "command": 609, "third": 609, "creat": [609, 610, 611, 615, 621, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 658, 675, 686], "doc": [609, 613], "conda": [609, 621], "environ": [609, 686], "fourth": 609, "we": [609, 615], "instal": [609, 619, 673, 683, 684], "trmm": 609, "rsl": 609, "librari": 609, "lastli": 609, "python": [609, 619, 673, 684], "script": 609, "within": [609, 615], "okai": 609, "should": 609, "now": 609, "readi": 609, "make": [609, 621], "chang": 609, "sourc": [609, 683], "code": [609, 615, 619, 684], "1": [609, 615, 618, 662], "new": [609, 613], "branch": 609, "our": [609, 611, 612, 614, 616], "2": [609, 615, 618, 629, 630, 662], "push": 609, "To": 609, "let": 609, "commit": 609, "after": 609, "thi": [609, 615, 618], "i": [609, 616, 673], "what": [609, 673], "look": 609, "like": 609, "hope": 609, "help": [609, 673], "hail": 610, "storm": 610, "visual": [610, 611, 614], "panda": 610, "motiv": [610, 614, 616, 617], "nexrad": [610, 612, 614, 615, 629, 630, 643, 644], "fsspec": 610, "setup": [610, 614, 619, 620, 684], "filesystem": 610, "bucket": 610, "file": [610, 615, 619, 643, 645, 646, 648, 649, 650, 651, 652, 675, 676, 684], "dataset": 610, "nexradaw": 610, "configur": 610, "search": [610, 616], "download": [610, 614], "spc": 610, "report": 610, "function": [610, 614], "loop": [610, 615], "through": [610, 615, 616], "helper": 610, "scale": 610, "bar": 610, "an": [610, 642, 650, 651, 686], "anim": [610, 615], "imag": [610, 614, 642], "view": [610, 611], "final": [610, 611], "conclus": [610, 612, 614, 616, 617], "work": [611, 661, 662], "vertic": 611, "point": [611, 615, 659], "xarrai": 611, "hvplot": 611, "overview": [611, 615], "ka": 611, "band": 611, "arm": [611, 616, 619, 673, 684], "zenith": 611, "kazr": 611, "instrument": 611, "clean": [611, 616], "up": [611, 612, 615, 686], "bit": 611, "analysi": 611, "subset": 611, "reflect": [611, 624, 642, 644, 650, 651, 660], "veloc": [611, 616, 625, 658, 669, 677], "quick": 611, "extract": [611, 659], "date": [611, 614, 615], "inform": [611, 686], "label": 611, "holoview": 611, "try": [611, 612], "raster": 611, "takeawai": 611, "fix": [612, 618, 630], "weird": 612, "pattern": 612, "when": 612, "level": [612, 615, 629, 630], "3": [612, 615, 618, 629, 654], "The": [612, 614, 616, 617, 619, 673, 681, 684], "recreat": 612, "issu": [612, 630], "set": [612, 615, 664, 686], "matplotlib": 612, "style": [612, 619, 684], "without": 612, "alpha": 612, "add": [612, 614], "argument": 612, "dig": 612, "investig": [612, 614, 616], "pcolormesh": 612, "edgecolor": 612, "modifi": [612, 641], "default": 612, "solut": [612, 616, 617], "sever": 614, "weather": 614, "wisconsin": 614, "outbreak": 614, "focus": 614, "southern": 614, "reproduc": 614, "event": 614, "road": 614, "interst": 614, "featur": [614, 615, 618, 662], "avail": 614, "run": 614, "gif": 615, "post": [615, 617], "cover": 615, "aw": [615, 629], "how": [615, 621, 661, 662], "acquir": 615, "prerequisit": 615, "s3": 615, "filysystem": 615, "select": 615, "station": 615, "period": 615, "option": [615, 673, 683, 686], "individu": 615, "locat": 615, "gener": 615, "list": 615, "check": 615, "plottabl": 615, "product": 615, "ad": [615, 686], "custom": [615, 664], "counti": 615, "zoom": 615, "colorbar": [615, 641], "note": [615, 621], "full": 615, "block": 615, "construct": 615, "properli": 615, "creation": 615, "whole": 615, "summari": [615, 661, 662], "scan": 616, "cloud": [616, 629], "epcap": 616, "problem": [616, 617], "dq": 616, "browser": 616, "act": 616, "token": 616, "live": 616, "pass": 616, "credenti": 616, "take": 616, "peak": 616, "strategi": 616, "sort": 616, "all": 616, "ppi": [616, 634, 645, 646, 647, 655, 671], "appli": 616, "explor": 616, "threshold": 616, "snr": 616, "revis": 616, "where": 616, "slice": 616, "frame": 616, "templat": 617, "changelog": 618, "18": 618, "enhanc": 618, "made": 618, "bug": 618, "other": 618, "merg": 618, "contributor": [618, 619, 684], "releas": [618, 621], "0": 618, "document": [618, 621], "improv": 618, "16": 618, "mainten": 618, "upkeep": 618, "15": 618, "v1": 618, "14": 618, "6": 618, "5": 618, "4": 618, "13": 618, "12": 618, "7": 618, "11": 618, "8": 618, "deprec": 618, "10": 618, "9": 618, "picasso": 618, "": [619, 622, 684], "guid": [619, 622, 684, 685], "toolkit": [619, 673, 684], "link": [619, 684], "cite": [619, 673, 684], "resourc": [619, 684], "continu": 620, "integr": 620, "tag": 621, "prepar": 621, "trigger": 621, "pypi": 621, "upload": 621, "packag": 621, "forg": 621, "announc": 621, "open": 621, "forum": 621, "version": 622, "moment": [623, 627, 643], "exampl": [623, 627, 628, 632, 638, 657, 658, 661, 668], "attenu": 624, "dealia": [625, 669], "doppler": 625, "region": 625, "base": 625, "algorithm": [625, 661, 662], "comput": [626, 631, 637, 656, 666, 667, 672, 682], "galleri": [627, 674], "input": [627, 628], "output": [627, 628], "xradar": [627, 668, 669, 670, 671], "older": 630, "compar": 633, "two": [633, 636, 653], "singl": [634, 635], "sweep": 634, "cartesian": [634, 635, 636, 679], "2d": 634, "weight": 634, "choos": 639, "colormap": 639, "cross": [640, 655], "section": [640, 655], "mute": 642, "multipl": [643, 648, 649], "cfradial": 645, "mdv": [646, 650, 651, 652], "cartopi": 647, "panel": [648, 649, 653, 654], "cf": [648, 649], "radial": [648, 649, 669], "contour": [650, 651], "line": [650, 651], "volum": 655, "cfad": 658, "diagram": 658, "valid": 658, "column": 659, "abov": 659, "calcul": [660, 663, 665], "composit": 660, "convect": [661, 662], "stratiform": [661, 662], "classif": [661, 662, 663, 664], "recommend": [661, 662], "best": [661, 662], "practic": [661, 662], "detect": 662, "part": 662, "warm": 662, "season": 662, "cool": 662, "hydrometeor": [663, 664], "frequenc": 664, "vad": 665, "profil": 665, "can": 673, "do": 673, "short": 673, "cours": 673, "depend": [673, 683, 686], "contribut": 673, "notebook": 674, "basic": 675, "ingest": 675, "netcdf": 675, "manipul": 676, "save": 676, "object": [676, 681], "dealias": 677, "mask": 680, "With": 680, "index": 681, "build": 683, "requir": 683, "obtain": 683, "latest": 683, "frequent": 683, "ask": 683, "question": 683, "user": 685, "anaconda": 686, "channel": 686, "path": 686, "more": 686}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[121, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[122, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[123, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[124, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[125, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[126, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[127, "pyart-correct"]], "pyart.correct.GateFilter": [[128, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[129, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[130, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_above_toa": [[131, "pyart-correct-gatefilter-exclude-above-toa"]], "pyart.correct.GateFilter.exclude_all": [[132, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[133, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[134, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[135, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[136, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[137, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_last_gates": [[138, "pyart-correct-gatefilter-exclude-last-gates"]], "pyart.correct.GateFilter.exclude_masked": [[139, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[140, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[141, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[142, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[143, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[144, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[145, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[146, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[147, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[148, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[149, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[150, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[151, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[152, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[153, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[154, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[155, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[156, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[157, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calc_cloud_mask": [[158, "pyart-correct-calc-cloud-mask"]], "pyart.correct.calc_noise_floor": [[159, "pyart-correct-calc-noise-floor"]], "pyart.correct.calculate_attenuation": [[160, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[161, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[162, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.cloud_threshold": [[163, "pyart-correct-cloud-threshold"]], "pyart.correct.correct_bias": [[164, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[165, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[166, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[167, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[168, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[169, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[170, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[171, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[172, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[173, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.range_correction": [[174, "pyart-correct-range-correction"]], "pyart.exceptions": [[175, "pyart-exceptions"]], "pyart.filters": [[176, "pyart-filters"]], "pyart.filters.GateFilter": [[177, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[178, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[179, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_above_toa": [[180, "pyart-filters-gatefilter-exclude-above-toa"]], "pyart.filters.GateFilter.exclude_all": [[181, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[182, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[183, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[184, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[185, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[186, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_last_gates": [[187, "pyart-filters-gatefilter-exclude-last-gates"]], "pyart.filters.GateFilter.exclude_masked": [[188, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[189, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[190, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[191, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[192, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[193, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[194, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[195, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[196, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[197, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[198, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[199, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[200, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[201, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[202, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[203, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[204, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[205, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[206, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[207, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[208, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[209, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[210, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[211, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[212, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[213, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[214, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[215, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[216, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[217, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[218, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[219, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[220, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[221, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[222, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[223, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[224, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[225, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[226, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[227, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[228, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[229, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[230, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[231, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[232, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[233, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[234, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[235, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[236, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[237, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[238, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[239, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[240, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[241, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[242, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[243, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[244, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[245, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[246, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[247, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[248, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[249, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[250, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[251, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[252, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[253, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[254, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[255, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[256, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[257, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[258, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[259, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[260, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[261, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[262, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[263, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[264, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[265, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[266, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[267, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[268, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[269, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[270, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[271, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[272, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[273, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[274, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[275, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[276, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[277, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[278, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[279, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[280, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[281, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[282, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[283, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[284, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[285, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[286, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[287, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[288, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[289, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[290, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[291, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[292, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[293, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[294, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[295, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[296, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[297, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[298, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[299, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[300, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[301, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[302, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[303, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[304, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[305, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[306, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[307, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[308, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[309, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[310, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[311, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[312, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[313, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[314, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[315, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[316, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[317, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[318, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[319, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[320, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[321, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[322, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[323, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[324, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[325, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[326, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[327, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[328, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[329, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[330, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[331, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[332, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[333, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[334, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[335, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[336, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[337, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[338, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[339, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[340, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[341, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[342, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[343, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[344, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[345, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[346, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[347, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[348, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[349, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[350, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[351, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[352, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[353, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[354, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[355, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[356, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[357, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[358, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[359, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[360, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[361, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[362, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[363, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[364, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[365, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[366, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[367, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[368, "pyart-io"]], "pyart.io.prepare_for_read": [[369, "pyart-io-prepare-for-read"]], "pyart.io.read": [[370, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[371, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[372, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[373, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[374, "pyart-io-read-chl"]], "pyart.io.read_grid": [[375, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[376, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[377, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[378, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[379, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[380, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[381, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[382, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[383, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[384, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[385, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[386, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[387, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[388, "pyart-io-write-uf"]], "pyart.lazydict": [[389, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[390, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[391, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[392, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[393, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[394, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[395, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[396, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[397, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[398, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[399, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[400, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[401, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[402, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[403, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[404, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[405, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[406, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[407, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[408, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[409, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[410, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[411, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[412, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[413, "pyart-map"]], "pyart.map.GateMapper": [[414, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[415, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[416, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[417, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[418, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[419, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[420, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[421, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[422, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[423, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[424, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[425, "pyart-map-map-to-grid"]], "pyart.retrieve": [[426, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[427, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[428, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[429, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[430, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[431, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_evp": [[432, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_l": [[433, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[434, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_qvp": [[435, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_rqvp": [[436, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_snr": [[437, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_svp": [[438, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[439, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vp": [[440, "pyart-retrieve-compute-vp"]], "pyart.retrieve.conv_strat_raut": [[441, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[442, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.create_cfad": [[443, "pyart-retrieve-create-cfad"]], "pyart.retrieve.dealias_spectra": [[444, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[445, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[446, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[447, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[448, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[449, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[450, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[451, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[452, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[453, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[454, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[455, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[456, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[457, "pyart-retrieve-hydroclass-semisupervised"]], "Usage": [[457, "usage"]], "pyart.retrieve.kdp_maesaka": [[458, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[459, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[460, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[461, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[462, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[463, "pyart-retrieve-spectra-moments"]], "Parameter": [[463, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[464, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[465, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[466, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[467, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[468, "pyart-testing"]], "pyart.testing.Grid": [[469, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[470, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[471, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[472, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[473, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[474, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[475, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[476, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[477, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[478, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[479, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[480, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[481, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[482, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[483, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[484, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[485, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[486, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[487, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[488, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[489, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[490, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[491, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[492, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[493, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[494, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[495, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[496, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[497, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[498, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[499, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[500, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[501, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[502, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[503, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[504, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[505, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[506, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[507, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[508, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[509, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[510, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[511, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[512, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[513, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[514, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[515, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[516, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[517, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[518, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[519, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[520, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[521, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[522, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[523, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[524, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[525, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[526, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[527, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[528, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[529, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[530, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[531, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[532, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[533, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[534, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[535, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[536, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[537, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[538, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[539, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[540, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[541, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[542, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[543, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[544, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[545, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[546, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[547, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[548, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[549, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[550, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[551, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[552, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[553, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[554, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[555, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[556, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[557, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[558, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[559, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[560, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[561, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[562, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[563, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[564, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[565, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[566, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_rhi_radar": [[567, "pyart-testing-make-target-rhi-radar"]], "pyart.testing.make_target_spectra_radar": [[568, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[569, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[570, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[571, "pyart-util"]], "pyart.util.angular_mean": [[572, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[573, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[574, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[575, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[576, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[577, "pyart-util-column-vertical-profile"]], "pyart.util.compute_directional_stats": [[578, "pyart-util-compute-directional-stats"]], "pyart.util.cross_section_ppi": [[579, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[580, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[581, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[582, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[583, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[584, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[585, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[586, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[587, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[588, "pyart-util-for-azimuth"]], "Assumptions": [[588, "assumptions"], [601, "assumptions"]], "pyart.util.get_column_rays": [[589, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[590, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[591, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[592, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[593, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[594, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[595, "pyart-util-join-radar"]], "pyart.util.ma_broadcast_to": [[596, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[597, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[598, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[599, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[600, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[601, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[602, "pyart-util-subset-radar"]], "pyart.util.texture": [[603, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[604, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[605, "pyart-util-to-vpt"]], "API Reference Manual": [[606, "api-reference-manual"]], "Blog": [[607, "blog"]], "Blending Observations from TRACER using Py-ART": [[608, "blending-observations-from-tracer-using-py-art"]], "Imports": [[608, "imports"], [610, "imports"], [611, "imports"], [612, "imports"], [614, "imports"]], "GOES data access": [[608, "goes-data-access"]], "CSAPR data access": [[608, "csapr-data-access"]], "Load LMA Flash data": [[608, "load-lma-flash-data"]], "June 17th case": [[608, "june-17th-case"]], "June 17 RHI": [[608, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[609, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[609, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[609, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[609, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[609, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[609, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[609, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[609, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[609, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[609, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[609, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[609, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[610, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[610, "motivation"], [614, "motivation"], [616, "motivation"], [617, "motivation"]], "NEXRAD Data Access - fsspec": [[610, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[610, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[610, "read-in-a-file"]], "Visualize the Dataset": [[610, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[610, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[610, "configure-the-search"]], "Search and Download the Data": [[610, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[610, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[610, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[610, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[610, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[610, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[610, "create-an-animation-of-the-images"]], "View the Final Animation": [[610, "view-the-final-animation"]], "Conclusion": [[610, "conclusion"], [612, "conclusion"], [614, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[611, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[611, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[611, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[611, "plot-using-pyart"]], "Load in the data using pyart": [[611, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[611, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[611, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[611, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[611, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[611, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[611, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[611, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[611, "create-our-holoviews-plots"]], "View the Final Visualization": [[611, "view-the-final-visualization"]], "Try Using Rasterize": [[611, "try-using-rasterize"]], "Key Takeaways": [[611, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[612, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[612, "the-data"]], "Data Access": [[612, "data-access"]], "Recreate the Issue Using PyART": [[612, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[612, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[612, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[612, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[612, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[612, "add-in-the-alpha-argument"]], "Dig into the Issue": [[612, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[612, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[612, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[612, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[612, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[612, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[612, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[612, "fixing-the-issue-in-pyart"]], "New Docs": [[613, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[614, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[614, "the-outbreak"]], "Focusing on Southern Wisconsin": [[614, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[614, "reproducing-event-images"]], "Visualizing the Event": [[614, "visualizing-the-event"]], "Access the Data": [[614, "access-the-data"]], "Download the Road Data": [[614, "download-the-road-data"]], "Add the Interstate Date as a feature": [[614, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[614, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[614, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[614, "run-our-plotting-functions"]], "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART": [[615, "creating-animated-gifs-with-nexrad-level-2-radar-data-using-py-art"]], "Overview": [[615, "overview"]], "Within this blog post, we will cover:": [[615, "within-this-blog-post-we-will-cover"]], "1: Accessing NEXRAD data from AWS": [[615, "accessing-nexrad-data-from-aws"]], "2: How to read the data into Py-ART and create plots": [[615, "how-to-read-the-data-into-py-art-and-create-plots"]], "3: How to create animated gifs with acquired radar data from Py-ART": [[615, "how-to-create-animated-gifs-with-acquired-radar-data-from-py-art"]], "Prerequisites": [[615, "prerequisites"]], "Set up the AWS S3 filysystem": [[615, "set-up-the-aws-s3-filysystem"]], "Selecting your date, station, and time period": [[615, "selecting-your-date-station-and-time-period"]], "OPTIONAL* setting up individual locations to be plotted on your map": [[615, "optional-setting-up-individual-locations-to-be-plotted-on-your-map"]], "Generating your file list": [[615, "generating-your-file-list"]], "Checking your plottable radar products": [[615, "checking-your-plottable-radar-products"]], "Reading the data into PyART": [[615, "reading-the-data-into-pyart"]], "Looping through the radar data": [[615, "looping-through-the-radar-data"]], "Plotting code with added features and plotted points": [[615, "plotting-code-with-added-features-and-plotted-points"]], "Customizing the range of plotted data": [[615, "customizing-the-range-of-plotted-data"]], "Counties": [[615, "counties"]], "Location plotting": [[615, "location-plotting"]], "Zooming": [[615, "zooming"]], "Colorbar": [[615, "colorbar"]], "NOTE": [[615, "note"]], "Full code block constructed properly within the for loop.": [[615, "full-code-block-constructed-properly-within-the-for-loop"]], "GIF creation": [[615, "gif-creation"]], "Code in whole": [[615, "code-in-whole"]], "Summary": [[615, "summary"]], "Investigating ARM Scanning Cloud Radar Data from EPCAPE": [[616, "investigating-arm-scanning-cloud-radar-data-from-epcape"]], "The Problem": [[616, "the-problem"], [617, "the-problem"]], "The Solution": [[616, "the-solution"], [617, "the-solution"]], "Searching for data through the DQ Plot Browser": [[616, "searching-for-data-through-the-dq-plot-browser"]], "Use ACT to retrieve data from EPCAPE": [[616, "use-act-to-retrieve-data-from-epcape"]], "Retrieve you API token from ARM Live": [[616, "retrieve-you-api-token-from-arm-live"]], "Pass your Credentials into the Search": [[616, "pass-your-credentials-into-the-search"]], "Read the Data into Py-ART": [[616, "read-the-data-into-py-art"]], "Take a Peak at the Scan Strategy": [[616, "take-a-peak-at-the-scan-strategy"]], "Sort the Scans by Scan Strategy": [[616, "sort-the-scans-by-scan-strategy"]], "Plot all of the PPI Scans": [[616, "plot-all-of-the-ppi-scans"]], "Plot all the RHI Scans": [[616, "plot-all-the-rhi-scans"]], "Apply Corrections to the Velocity Data": [[616, "apply-corrections-to-the-velocity-data"]], "Explore a Threshold for SNR": [[616, "explore-a-threshold-for-snr"]], "Plot our Revised, Cleaned Data": [[616, "plot-our-revised-cleaned-data"]], "Plot where the RHI scan is slicing through using the PPI for a frame of reference": [[616, "plot-where-the-rhi-scan-is-slicing-through-using-the-ppi-for-a-frame-of-reference"]], "Conclusions": [[616, "conclusions"], [617, "conclusions"]], "Blog Post Template": [[617, "blog-post-template"]], "Changelog": [[618, "changelog"]], "Py-ART 1.18.1": [[618, "py-art-1-18-1"]], "Enhancements made": [[618, "enhancements-made"], [618, "id1"], [618, "id5"], [618, "id9"], [618, "id14"], [618, "id29"], [618, "id35"], [618, "id46"], [618, "id49"], [618, "id54"], [618, "id59"], [618, "id62"], [618, "id66"], [618, "id79"], [618, "id89"], [618, "id99"], [618, "id105"], [618, "id111"], [618, "id119"], [618, "id132"], [618, "id136"], [618, "id140"], [618, "id146"], [618, "id152"], [618, "id161"], [618, "id168"], [618, "id175"], [618, "id181"], [618, "id188"], [618, "id194"], [618, "id200"]], "Bugs fixed": [[618, "bugs-fixed"], [618, "id2"], [618, "id6"], [618, "id10"], [618, "id15"], [618, "id22"], [618, "id26"], [618, "id30"], [618, "id36"], [618, "id41"], [618, "id50"], [618, "id55"], [618, "id60"], [618, "id67"], [618, "id72"], [618, "id76"], [618, "id80"], [618, "id85"], [618, "id90"], [618, "id95"], [618, "id100"], [618, "id106"], [618, "id112"], [618, "id116"], [618, "id120"], [618, "id124"], [618, "id129"], [618, "id133"], [618, "id137"], [618, "id141"], [618, "id147"], [618, "id153"], [618, "id157"], [618, "id162"], [618, "id169"], [618, "id176"], [618, "id182"], [618, "id189"], [618, "id195"]], "Other merged PRs": [[618, "other-merged-prs"], [618, "id3"], [618, "id7"], [618, "id12"], [618, "id17"], [618, "id20"], [618, "id24"], [618, "id27"], [618, "id32"], [618, "id37"], [618, "id44"], [618, "id47"], [618, "id52"], [618, "id57"], [618, "id64"], [618, "id70"], [618, "id74"], [618, "id77"], [618, "id83"], [618, "id87"], [618, "id93"], [618, "id97"], [618, "id103"], [618, "id109"], [618, "id114"], [618, "id122"], [618, "id127"], [618, "id134"], [618, "id144"], [618, "id150"], [618, "id155"], [618, "id159"], [618, "id166"], [618, "id173"], [618, "id179"], [618, "id186"], [618, "id192"], [618, "id198"]], "Contributors to this release": [[618, "contributors-to-this-release"], [618, "id4"], [618, "id8"], [618, "id13"], [618, "id18"], [618, "id21"], [618, "id25"], [618, "id28"], [618, "id33"], [618, "id34"], [618, "id38"], [618, "id40"], [618, "id45"], [618, "id48"], [618, "id53"], [618, "id58"], [618, "id61"], [618, "id65"], [618, "id71"], [618, "id75"], [618, "id78"], [618, "id84"], [618, "id88"], [618, "id94"], [618, "id98"], [618, "id104"], [618, "id110"], [618, "id115"], [618, "id118"], [618, "id123"], [618, "id128"], [618, "id131"], [618, "id135"], [618, "id139"], [618, "id145"], [618, "id151"], [618, "id156"], [618, "id160"], [618, "id167"], [618, "id174"], [618, "id180"], [618, "id187"], [618, "id193"], [618, "id199"], [618, "id202"]], "Py-ART 1.18.0": [[618, "py-art-1-18-0"]], "Py-ART 1.17.0": [[618, "py-art-1-17-0"]], "Documentation improvements": [[618, "documentation-improvements"], [618, "id11"], [618, "id16"], [618, "id43"], [618, "id51"], [618, "id56"], [618, "id69"], [618, "id82"], [618, "id92"], [618, "id102"], [618, "id108"], [618, "id126"], [618, "id138"], [618, "id143"], [618, "id149"], [618, "id154"], [618, "id158"], [618, "id164"], [618, "id171"], [618, "id178"], [618, "id184"], [618, "id191"], [618, "id197"]], "Py-ART 1.16.1": [[618, "py-art-1-16-1"]], "Py-ART 1.16.0": [[618, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[618, "maintenance-and-upkeep-improvements"], [618, "id19"], [618, "id23"], [618, "id31"], [618, "id39"], [618, "id42"], [618, "id63"], [618, "id68"], [618, "id73"], [618, "id81"], [618, "id86"], [618, "id91"], [618, "id96"], [618, "id101"], [618, "id107"], [618, "id113"], [618, "id117"], [618, "id121"], [618, "id125"], [618, "id130"], [618, "id142"], [618, "id148"], [618, "id163"], [618, "id170"], [618, "id177"], [618, "id183"], [618, "id190"], [618, "id196"], [618, "id201"]], "Py-ART 1.15.2": [[618, "py-art-1-15-2"]], "Py-ART 1.15.1": [[618, "py-art-1-15-1"]], "Py-ART v1.15.0": [[618, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[618, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[618, "py-art-v1-14-5"]], "Merged PRs": [[618, "merged-prs"]], "Py-ART v1.14.4": [[618, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[618, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[618, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[618, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[618, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[618, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[618, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[618, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[618, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[618, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[618, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[618, "py-art-v1-12-5"]], "PyART v1.12.4": [[618, "pyart-v1-12-4"]], "PyART v1.12.2": [[618, "pyart-v1-12-2"]], "PyART v1.12.0": [[618, "pyart-v1-12-0"]], "PyART v1.11.8": [[618, "pyart-v1-11-8"]], "Deprecated features": [[618, "deprecated-features"], [618, "id165"], [618, "id172"], [618, "id185"]], "PyART v1.11.6": [[618, "pyart-v1-11-6"]], "PyART v1.11.5": [[618, "pyart-v1-11-5"]], "PyART v1.11.3": [[618, "pyart-v1-11-3"]], "PyART v1.11.2": [[618, "pyart-v1-11-2"]], "PyART v1.11.1": [[618, "pyart-v1-11-1"]], "PyART v1.11.0": [[618, "pyart-v1-11-0"]], "PyART v1.10.4": [[618, "pyart-v1-10-4"]], "PyART v1.10.3": [[618, "pyart-v1-10-3"]], "PyART v1.10.2": [[618, "pyart-v1-10-2"]], "PyART v1.10.1": [[618, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[618, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[618, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[618, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[618, "pyart-v1-8-0"]], "PyART v1.7.0": [[618, "pyart-v1-7-0"]], "PyART v1.6.0": [[618, "pyart-v1-6-0"]], "PyART v1.5.0": [[618, "pyart-v1-5-0"]], "PyART v1.4.0": [[618, "pyart-v1-4-0"]], "PyART v1.3.0": [[618, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[619, "contributor-s-guide"], [684, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[619, "the-python-arm-radar-toolkit-py-art"], [684, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[619, "important-links"], [684, "important-links"]], "Citing": [[619, "citing"], [684, "citing"]], "Install": [[619, "install"], [673, "install"], [684, "install"]], "Resources": [[619, "resources"], [684, "resources"]], "Code Style": [[619, "code-style"], [684, "code-style"]], "Python File Setup": [[619, "python-file-setup"], [684, "python-file-setup"]], "Testing": [[619, "testing"], [684, "testing"]], "GitHub": [[619, "github"], [684, "github"]], "Py-ART Continuous Integration Setup": [[620, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[621, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[621, "make-the-tagged-git-release"]], "Prepare the release notes": [[621, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[621, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[621, "documentation"]], "Create conda packages on conda-forge": [[621, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[621, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[622, "developer-s-guide"]], "Versions": [[622, "versions"]], "Moment correction examples": [[623, "moment-correction-examples"], [627, "moment-correction-examples"]], "Correct reflectivity attenuation": [[624, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[625, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[626, "computation-times"], [631, "computation-times"], [637, "computation-times"], [656, "computation-times"], [666, "computation-times"], [667, "computation-times"], [672, "computation-times"], [682, "computation-times"]], "Example Gallery": [[627, "example-gallery"]], "Input/Output Examples": [[627, "input-output-examples"], [628, "input-output-examples"]], "Mapping examples": [[627, "mapping-examples"], [632, "mapping-examples"]], "Plotting examples": [[627, "plotting-examples"], [638, "plotting-examples"]], "Retrieval Examples": [[627, "retrieval-examples"], [657, "retrieval-examples"]], "Xradar Examples": [[627, "xradar-examples"], [668, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[629, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[629, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[629, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[630, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[630, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[633, "compare-two-radars-using-gatemapper"]], "Map a single PPI sweep to a Cartesian grid using 2D weighting": [[634, "map-a-single-ppi-sweep-to-a-cartesian-grid-using-2d-weighting"]], "Map a single radar to a Cartesian grid": [[635, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[636, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[639, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[640, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[641, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[642, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[643, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[644, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[645, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[646, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[647, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[648, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [649, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[650, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [651, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[652, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[653, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[654, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[655, "plot-a-cross-section-from-a-ppi-volume"]], "Creating a CFAD diagram": [[658, "creating-a-cfad-diagram"]], "Velocity example": [[658, "velocity-example"]], "Validation": [[658, "validation"]], "Extract a radar column above a point": [[659, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[660, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[661, "convective-stratiform-classification"]], "How the algorithm works": [[661, "how-the-algorithm-works"], [662, "how-the-algorithm-works"]], "Examples": [[661, "examples"]], "Summary of recommendations and best practices": [[661, "summary-of-recommendations-and-best-practices"], [662, "summary-of-recommendations-and-best-practices"]], "References": [[661, "references"], [662, "references"]], "Feature Detection classification": [[662, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[662, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[662, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[663, "calculate-and-plot-hydrometeor-classification"]], "Hydrometeor Classification with Custom Frequency Settings": [[664, "hydrometeor-classification-with-custom-frequency-settings"]], "Calculate and Plot VAD profile": [[665, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[669, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[670, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[671, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[673, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[673, "what-is-py-art"]], "Citing Py-ART": [[673, "citing-py-art"]], "What can Py-ART do?": [[673, "what-can-py-art-do"]], "Short Courses": [[673, "short-courses"]], "Dependencies": [[673, "dependencies"]], "Optional Dependences": [[673, "optional-dependences"]], "Getting help": [[673, "getting-help"]], "Contributing": [[673, "contributing"]], "Notebook Gallery": [[674, "notebook-gallery"]], "Notebooks": [[674, null]], "Creating a basic ingest of a NetCDF file": [[675, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[676, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[677, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[679, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[680, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[681, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[683, "building-and-installing-py-art"]], "Required Dependencies": [[683, "required-dependencies"]], "Optional Dependencies": [[683, "optional-dependencies"]], "Obtaining the latest source": [[683, "obtaining-the-latest-source"]], "Installing from Source": [[683, "installing-from-source"]], "Frequently asked questions": [[683, "frequently-asked-questions"]], "User Guide": [[685, "user-guide"]], "Setting up an Environment": [[686, "setting-up-an-environment"]], "Anaconda": [[686, "anaconda"]], "Setting a Channel": [[686, "setting-a-channel"]], "Creating an Environment": [[686, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[686, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[686, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [127, "module-pyart.correct"], [175, "module-pyart.exceptions"], [176, "module-pyart.filters"], [211, "module-pyart.graph"], [368, "module-pyart.io"], [389, "module-pyart.lazydict"], [413, "module-pyart.map"], [426, "module-pyart.retrieve"], [468, "module-pyart.testing"], [571, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[121, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[123, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[124, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[126, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[127, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[128, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[141, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[142, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[144, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[145, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[155, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[156, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[157, "pyart.correct.GateFilter.include_valid"]], "calc_cloud_mask() (in module pyart.correct)": [[158, "pyart.correct.calc_cloud_mask"]], "calc_noise_floor() (in module pyart.correct)": [[159, "pyart.correct.calc_noise_floor"]], "calculate_attenuation() (in module pyart.correct)": [[160, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[161, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[162, "pyart.correct.calculate_attenuation_zphi"]], "cloud_threshold() (in module pyart.correct)": [[163, "pyart.correct.cloud_threshold"]], "correct_bias() (in module pyart.correct)": [[164, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[165, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[166, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[167, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[168, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[169, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[170, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[171, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[172, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[173, "pyart.correct.phase_proc_lp_gf"]], "range_correction() (in module pyart.correct)": [[174, "pyart.correct.range_correction"]], "pyart.exceptions": [[175, "module-pyart.exceptions"]], "pyart.filters": [[176, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[177, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[184, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[193, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[194, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[198, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[199, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[200, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[201, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[202, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[203, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[204, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[205, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[206, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[207, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[208, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[209, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[210, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[211, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[212, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[219, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[221, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[225, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[233, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[234, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[235, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[236, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[237, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[238, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[239, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[240, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[241, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[242, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[254, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[255, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[256, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[257, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[258, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[268, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[269, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[270, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[271, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[272, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[279, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[280, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[281, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[289, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[290, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[291, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[292, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[293, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[294, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[295, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[296, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[297, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[298, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[299, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[300, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[301, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[308, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[309, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[318, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[319, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[325, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[326, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[327, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[328, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[329, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[330, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[331, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[332, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[333, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[334, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[341, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[342, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[361, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[362, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[363, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[364, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[365, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[366, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[367, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[368, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[369, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[370, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[371, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[372, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[373, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[374, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[375, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[376, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[377, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[378, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[379, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[380, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[381, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[382, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[383, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[384, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[385, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[386, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[387, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[388, "pyart.io.write_uf"]], "pyart.lazydict": [[389, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[390, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[394, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[395, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[396, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[397, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[398, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[399, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[400, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[401, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[403, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[404, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[405, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[406, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[407, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[408, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[409, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[410, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[411, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[412, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[413, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[414, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[415, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[416, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[417, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[418, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[419, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[420, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[421, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[422, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[423, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[424, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[425, "pyart.map.map_to_grid"]], "pyart.retrieve": [[426, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[427, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[428, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[429, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[430, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[431, "pyart.retrieve.compute_cdr"]], "compute_evp() (in module pyart.retrieve)": [[432, "pyart.retrieve.compute_evp"]], "compute_l() (in module pyart.retrieve)": [[433, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[434, "pyart.retrieve.compute_noisedBZ"]], "compute_qvp() (in module pyart.retrieve)": [[435, "pyart.retrieve.compute_qvp"]], "compute_rqvp() (in module pyart.retrieve)": [[436, "pyart.retrieve.compute_rqvp"]], "compute_snr() (in module pyart.retrieve)": [[437, "pyart.retrieve.compute_snr"]], "compute_svp() (in module pyart.retrieve)": [[438, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[439, "pyart.retrieve.compute_ts_along_coord"]], "compute_vp() (in module pyart.retrieve)": [[440, "pyart.retrieve.compute_vp"]], "conv_strat_raut() (in module pyart.retrieve)": [[441, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[442, "pyart.retrieve.conv_strat_yuter"]], "create_cfad() (in module pyart.retrieve)": [[443, "pyart.retrieve.create_cfad"]], "dealias_spectra() (in module pyart.retrieve)": [[444, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[445, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[446, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[447, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[448, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[449, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[450, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[451, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[452, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[453, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[454, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[455, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[456, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[457, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[458, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[459, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[460, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[461, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[462, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[463, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[464, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[465, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[466, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[467, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[468, "module-pyart.testing"]], "grid (class in pyart.testing)": [[469, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[470, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[471, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[472, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[473, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[474, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[475, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[476, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[477, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[478, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[479, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[480, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[481, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[482, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[483, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[484, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[491, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[492, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[493, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[494, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[495, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[496, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[497, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[498, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[499, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[500, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[501, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[502, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[503, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[504, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[505, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[506, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[507, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[508, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[509, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[510, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[511, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[512, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[513, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[514, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[515, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[516, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[517, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[518, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[519, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[520, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[521, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[522, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[523, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[524, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[525, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[526, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[527, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[528, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[529, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[530, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[531, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[532, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[533, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[534, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[535, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[536, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[537, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[538, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[539, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[540, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[541, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[542, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[543, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[544, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[545, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[546, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[547, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[548, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[549, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[550, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[551, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[552, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[553, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[554, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[555, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[556, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[557, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[558, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[559, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[560, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[561, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[562, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[563, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[564, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[565, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[566, "pyart.testing.make_target_radar"]], "make_target_rhi_radar() (in module pyart.testing)": [[567, "pyart.testing.make_target_rhi_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[568, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[569, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[570, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[571, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[572, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[573, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[574, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[575, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[576, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[577, "pyart.util.column_vertical_profile"]], "compute_directional_stats() (in module pyart.util)": [[578, "pyart.util.compute_directional_stats"]], "cross_section_ppi() (in module pyart.util)": [[579, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[580, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[581, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[582, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[583, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[584, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[585, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[586, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[587, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[588, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[589, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[590, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[591, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[592, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[593, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[594, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[595, "pyart.util.join_radar"]], "ma_broadcast_to() (in module pyart.util)": [[596, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[597, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[598, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[599, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[600, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[601, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[602, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[603, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[604, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[605, "pyart.util.to_vpt"]]}})