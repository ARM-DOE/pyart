Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_snr", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"stream": [0, 62, 364, 479], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 198, 199, 200, 201, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 384, 392, 395, 396, 402, 405, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 460, 462, 465, 473, 474, 491, 557, 558, 569, 577, 579, 587, 589, 591, 593, 594, 615, 624, 634, 635, 653, 656], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 212, 214, 215, 216, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 313, 314, 315, 317, 318, 325, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 390, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 587, 588, 589, 591, 593, 594, 596, 599, 600, 602, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645, 647, 648, 649, 651, 652, 653, 656, 658], "print": [0, 62, 155, 166, 167, 233, 249, 373, 439, 443, 479, 585, 587, 588, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 634, 635, 648, 652, 653], "out": [0, 62, 163, 167, 198, 201, 375, 376, 377, 378, 379, 419, 434, 479, 587, 588, 589, 591, 593, 594, 609, 610, 614, 625, 633, 636, 645, 651, 655, 656, 657], "version": [0, 12, 31, 202, 407, 450, 550, 585, 586, 592, 593, 594, 596, 645, 653, 655, 656, 658], "statu": [0, 586, 594, 656], "inform": [0, 24, 31, 45, 62, 74, 140, 152, 155, 160, 166, 167, 183, 195, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 365, 373, 376, 439, 445, 450, 462, 479, 491, 585, 589, 592, 593, 594, 597, 605, 625, 645, 656], "debug": [0, 155, 160, 166, 167, 233, 249, 373, 439, 593], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 121, 123, 124, 131, 140, 141, 142, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 174, 183, 184, 185, 198, 199, 200, 201, 216, 242, 276, 292, 305, 317, 325, 338, 350, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 392, 394, 402, 405, 407, 413, 414, 418, 419, 424, 433, 434, 439, 440, 441, 445, 447, 450, 452, 462, 464, 465, 468, 469, 471, 473, 474, 475, 491, 543, 555, 556, 564, 565, 569, 572, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 604, 605, 608, 609, 613, 614, 615, 616, 619, 625, 632, 634, 635, 641, 645, 647, 648, 649, 651, 652, 653, 655, 656, 658], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 417, 424, 433, 438, 439, 440, 441, 442, 445, 446, 449, 459, 462, 479, 491, 537, 577, 585, 586, 588, 589, 591, 593, 596, 599, 601, 602, 604, 605, 606, 609, 611, 612, 613, 616, 618, 621, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 652, 653, 654, 655, 658], "can": [0, 12, 16, 29, 45, 54, 57, 74, 121, 123, 124, 127, 140, 152, 156, 157, 160, 163, 165, 170, 183, 195, 198, 199, 200, 201, 216, 276, 305, 338, 360, 367, 368, 370, 373, 377, 378, 379, 413, 414, 433, 439, 440, 441, 443, 448, 462, 471, 474, 491, 585, 586, 587, 588, 589, 591, 593, 594, 596, 604, 605, 608, 613, 632, 634, 635, 641, 647, 648, 649, 651, 652, 653, 655, 656, 658], "run": [0, 229, 424, 433, 449, 564, 586, 588, 593, 594, 595, 596, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645, 655, 656, 658], "script": [0, 29, 593, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 122, 125, 127, 131, 133, 140, 141, 147, 152, 155, 156, 157, 159, 160, 161, 162, 165, 166, 167, 169, 170, 174, 176, 183, 184, 190, 195, 198, 199, 200, 201, 203, 217, 218, 219, 224, 227, 228, 229, 230, 233, 241, 242, 244, 246, 248, 249, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 314, 316, 317, 320, 321, 322, 325, 339, 340, 341, 347, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 390, 392, 395, 402, 404, 407, 409, 410, 411, 413, 414, 417, 418, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 441, 442, 443, 445, 446, 447, 448, 450, 453, 458, 462, 464, 467, 471, 472, 473, 474, 491, 543, 555, 556, 557, 558, 564, 565, 566, 567, 568, 569, 570, 571, 572, 577, 586, 588, 589, 591, 593, 594, 596, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 618, 621, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 651, 652, 653, 654, 656, 658], "directori": [0, 29, 460, 583, 585, 586, 592, 593, 594, 604, 655, 656], "report": [0, 1, 292, 325, 372, 448, 591, 593, 594, 645, 656], "dependeci": 0, "befor": [0, 31, 56, 160, 164, 167, 405, 424, 433, 447, 450, 473, 587, 588, 589, 594, 608, 634, 645, 649, 653, 656], "build": [0, 121, 123, 124, 127, 131, 133, 140, 147, 152, 170, 174, 176, 183, 190, 195, 379, 587, 591, 593, 594, 596, 645, 656, 657], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 121, 122, 123, 124, 125, 127, 140, 152, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 203, 205, 207, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 296, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 329, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 405, 412, 413, 414, 416, 417, 419, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 462, 464, 471, 473, 474, 491, 543, 550, 555, 556, 557, 558, 564, 565, 572, 577, 579, 580, 581, 582, 586, 590, 591, 592, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 607, 611, 612, 613, 614, 616, 619, 620, 622, 623, 624, 625, 626, 630, 632, 634, 635, 640, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 658], "python": [0, 29, 377, 585, 587, 588, 589, 591, 592, 593, 596, 599, 600, 602, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 647, 648, 649, 651, 652, 653, 655, 658], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 417, 418, 424, 433, 436, 437, 438, 439, 440, 441, 442, 445, 446, 450, 462, 491, 550, 556, 567, 568, 577, 583, 588, 589, 591, 592, 597, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 640, 644, 646, 647, 648, 649, 651, 654, 657, 658], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 459, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 479, 491, 494, 536, 537, 538, 539, 540, 541, 551, 552, 553, 554, 555, 556, 557, 558, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 585, 587, 588, 593, 594, 628, 634, 635, 648, 649, 651, 653, 655, 656], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 121, 122, 124, 125, 161, 162, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 386, 387, 397, 398, 419, 479, 546, 547, 548, 549, 551, 552, 553, 554, 565, 570, 587, 588, 589, 592, 593, 594, 604, 605, 608, 645, 647, 649, 651, 656], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 127, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 198, 199, 200, 201, 203, 218, 233, 241, 244, 249, 256, 263, 278, 292, 307, 317, 325, 340, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 386, 387, 390, 393, 397, 398, 403, 405, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 443, 444, 446, 447, 448, 449, 450, 451, 458, 459, 463, 464, 465, 467, 468, 469, 471, 479, 488, 516, 534, 538, 539, 540, 541, 543, 556, 564, 565, 567, 568, 569, 572, 573, 576, 579, 581, 582, 585, 586, 588, 589, 591, 593, 594, 604, 608, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 628, 632, 634, 635, 636, 645, 646, 647, 651, 652, 656], "sy": 0, "stdout": [0, 62, 479], "descript": [1, 16, 18, 30, 126, 168, 169, 202, 359, 380, 404, 415, 449, 550, 577, 589, 594, 596, 645, 656], "addit": [1, 2, 7, 8, 12, 14, 19, 160, 161, 162, 164, 216, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 358, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 405, 412, 414, 424, 433, 569, 585, 587, 588, 593, 596, 602, 604, 631, 634, 635, 645], "class": [1, 18, 19, 30, 31, 41, 45, 74, 126, 127, 169, 170, 202, 203, 233, 244, 249, 263, 292, 317, 325, 380, 381, 394, 404, 405, 406, 408, 413, 438, 449, 450, 460, 462, 491, 583, 587, 588, 589, 593, 594, 645, 651, 652, 656], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 126, 164, 165, 169, 198, 199, 200, 201, 202, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 276, 277, 284, 288, 289, 292, 305, 306, 316, 321, 322, 325, 338, 339, 349, 354, 355, 358, 359, 361, 364, 367, 368, 374, 377, 404, 405, 409, 410, 411, 413, 414, 415, 419, 424, 433, 439, 441, 447, 449, 473, 550, 556, 568, 569, 572, 576, 577, 582, 583, 588, 589, 593, 594, 613, 632, 634, 635, 641, 645, 649, 651, 653, 655, 656], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 127, 141, 142, 170, 184, 185, 217, 228, 277, 288, 306, 321, 339, 354, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 585, 591, 593, 599, 600, 602, 603, 606, 608, 609, 610, 613, 614, 615, 616, 619, 621, 624, 625, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645, 647, 648, 649, 651, 652, 653, 654], "write": [1, 15, 359, 375, 376, 377, 378, 379, 449, 460, 592, 593, 602, 603, 648], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 131, 140, 152, 158, 159, 160, 161, 162, 174, 183, 195, 203, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 258, 260, 262, 263, 277, 279, 284, 287, 288, 289, 292, 306, 308, 316, 317, 320, 321, 322, 325, 339, 341, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 404, 405, 412, 414, 416, 419, 425, 428, 433, 434, 439, 440, 441, 443, 444, 445, 448, 450, 451, 462, 463, 464, 467, 468, 469, 471, 472, 473, 474, 475, 484, 485, 487, 491, 512, 513, 515, 537, 543, 564, 569, 579, 582, 593, 594, 599, 600, 602, 603, 606, 608, 609, 610, 612, 613, 614, 615, 616, 618, 619, 621, 622, 623, 624, 625, 627, 629, 631, 632, 634, 635, 637, 640, 641, 643, 644, 645, 646, 647, 648, 649, 653, 654, 656], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 163, 164, 166, 167, 216, 220, 224, 225, 227, 228, 229, 230, 242, 276, 280, 284, 285, 287, 288, 289, 305, 309, 316, 317, 318, 320, 321, 322, 338, 342, 349, 350, 351, 353, 354, 355, 359, 364, 371, 377, 378, 412, 413, 414, 422, 437, 439, 441, 450, 462, 468, 469, 471, 472, 473, 474, 475, 491, 538, 539, 540, 541, 556, 564, 565, 582, 585, 588, 589, 591, 594, 596, 597, 613, 615, 645, 653, 656], "format": [1, 12, 13, 39, 40, 45, 74, 205, 207, 217, 219, 224, 227, 228, 229, 230, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 359, 361, 370, 372, 374, 375, 376, 378, 458, 459, 462, 491, 585, 587, 588, 589, 593, 596, 625, 645, 647], "These": [1, 29, 127, 160, 170, 255, 377, 414, 587, 594, 604, 613, 634, 645, 652, 655, 656], "auxiliari": 1, "input": [1, 166, 167, 377, 433, 437, 438, 441, 564, 569, 585, 587, 634, 635, 652], "output": [1, 13, 62, 159, 377, 419, 438, 479, 566, 586, 588, 591, 593, 645], "routin": [1, 12, 169, 375, 413, 593, 645], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 122, 125, 140, 152, 155, 156, 157, 160, 161, 162, 164, 165, 167, 169, 183, 195, 198, 199, 200, 201, 202, 217, 223, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 277, 283, 284, 288, 289, 306, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 345, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 383, 411, 412, 413, 414, 416, 418, 419, 424, 426, 427, 428, 430, 431, 433, 439, 441, 445, 450, 462, 473, 475, 491, 539, 540, 541, 557, 558, 565, 566, 570, 571, 578, 582, 585, 586, 587, 588, 589, 591, 592, 593, 594, 596, 600, 602, 604, 605, 608, 613, 615, 616, 624, 627, 632, 634, 635, 645, 647, 648, 649, 651, 652, 653, 655, 656, 658], "well": [1, 163, 165, 198, 199, 200, 201, 350, 369, 371, 414, 585, 587, 593, 594, 605, 614, 635, 645, 651, 652, 656], "polish": 1, "those": [1, 48, 55, 141, 142, 161, 162, 184, 185, 373, 413, 465, 472, 583, 589, 591, 658], "io": [1, 127, 170, 412, 585, 586, 587, 588, 589, 591, 593, 594, 599, 600, 604, 605, 606, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645, 648, 649, 651, 652, 653, 654, 655, 656, 658], "thei": [1, 4, 58, 131, 133, 140, 160, 161, 162, 164, 174, 176, 183, 350, 365, 373, 379, 439, 475, 589, 591, 594, 634, 656], "mai": [1, 29, 131, 133, 140, 147, 152, 160, 161, 174, 176, 183, 190, 195, 292, 325, 369, 371, 377, 381, 414, 441, 550, 589, 591, 596, 634, 645], "requir": [1, 31, 45, 74, 121, 123, 124, 160, 163, 164, 373, 377, 414, 447, 450, 462, 491, 565, 585, 586, 593, 594, 605, 645, 656, 658], "depend": [1, 156, 157, 414, 427, 585, 589, 593, 594, 596, 656], "beyond": [1, 655], "standard": [1, 40, 45, 62, 74, 119, 120, 160, 375, 376, 377, 419, 440, 459, 462, 479, 491, 553, 554, 571, 585, 589, 593, 594, 647, 648, 649, 656], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 417, 418, 424, 433, 436, 437, 438, 439, 440, 441, 442, 445, 446, 450, 462, 491, 550, 556, 567, 568, 577, 583, 589, 591, 597, 599, 600, 602, 603, 604, 605, 612, 613, 615, 632, 635, 640, 644, 646, 647, 648, 649, 651, 654, 657, 658], "instal": [1, 10, 121, 123, 124, 163, 164, 377, 588, 591, 593, 596, 657, 658], "non": [1, 121, 123, 124, 162, 373, 375, 424, 433, 439, 441, 589, 593, 634], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 202, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 435, 438, 439, 440, 441, 442, 445, 446, 450, 451, 462, 463, 464, 466, 471, 479, 491, 494, 537, 550, 569, 577, 581, 585, 588, 589, 591, 592, 593, 604, 635, 648, 653], "support": [1, 244, 317, 350, 361, 368, 369, 370, 371, 372, 380, 381, 405, 439, 587, 589, 591, 593, 594, 624, 645, 647, 648, 649, 651, 652, 653, 655, 656], "fulli": [1, 367, 591, 655], "test": [1, 12, 160, 364, 369, 371, 381, 586, 589, 593, 595, 596, 599, 600, 608, 609, 610, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 641, 642, 643, 645, 647], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 127, 130, 137, 140, 144, 149, 152, 160, 161, 162, 164, 165, 166, 167, 170, 173, 180, 183, 187, 192, 195, 200, 217, 223, 224, 227, 228, 229, 230, 244, 277, 283, 284, 287, 288, 289, 306, 312, 316, 317, 320, 321, 322, 339, 345, 349, 350, 353, 354, 355, 358, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 382, 394, 395, 412, 413, 414, 418, 424, 433, 434, 437, 439, 441, 450, 452, 462, 465, 473, 474, 491, 565, 583, 585, 586, 587, 588, 589, 590, 593, 594, 596, 602, 613, 632, 633, 634, 637, 645, 653, 654, 656, 658], "pleas": [1, 56, 292, 325, 473, 585, 586, 589, 591, 594, 645, 647, 648, 649, 651, 652, 653, 656], "your": [1, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587, 588, 589, 592, 594, 596, 602, 612, 614, 630, 634, 635, 645, 654, 655, 656, 658], "own": [1, 12, 588, 596, 613, 645, 655], "risk": [1, 587], "bug": [1, 588, 594, 597, 645, 655, 656], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 127, 131, 141, 142, 159, 160, 161, 162, 167, 170, 174, 184, 185, 203, 243, 257, 317, 350, 358, 359, 360, 373, 376, 378, 379, 413, 414, 424, 433, 439, 440, 441, 443, 445, 447, 448, 450, 462, 464, 471, 491, 564, 565, 589, 592, 593, 594, 596, 613, 634, 645, 655, 656, 658], "fix": [1, 585, 588, 594, 595, 597, 602, 603, 606, 627, 647, 654, 655, 656, 658], "them": [1, 4, 5, 6, 56, 160, 161, 162, 163, 233, 249, 317, 350, 364, 373, 414, 473, 588, 594, 596, 613, 645, 656, 658], "prioriti": [1, 658], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 205, 237, 250, 265, 294, 317, 327, 350, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 459, 585, 586, 587, 589, 593, 594, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 656], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 158, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 451, 463, 464, 466, 471, 487, 494, 515, 579, 608, 651], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 129, 131, 133, 139, 140, 141, 142, 143, 145, 147, 152, 153, 155, 160, 161, 162, 166, 167, 170, 172, 174, 176, 182, 183, 184, 185, 186, 188, 190, 195, 196, 205, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 277, 279, 284, 287, 288, 289, 294, 306, 308, 316, 317, 320, 321, 322, 327, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 413, 414, 418, 424, 427, 430, 433, 439, 440, 441, 443, 451, 452, 459, 460, 463, 464, 465, 468, 469, 471, 473, 474, 475, 548, 549, 559, 560, 561, 562, 563, 564, 572, 582, 585, 587, 588, 589, 591, 593, 594, 615, 622, 624, 625, 627, 634, 635, 647, 648, 652, 653, 656], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 465, 593], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 160, 161, 162, 216, 217, 218, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 276, 277, 278, 284, 288, 289, 305, 306, 307, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 340, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 412, 413, 414, 439, 559, 560, 561, 562, 563, 588, 589, 593], "d3r": [2, 593], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 362, 363, 364, 366, 370, 375, 376, 434, 459, 559, 562, 585, 593, 645, 646], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 40, 45, 46, 47, 49, 54, 74, 77, 121, 123, 124, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 438, 439, 440, 441, 442, 445, 446, 450, 451, 459, 462, 463, 464, 466, 471, 491, 494, 537, 569, 577, 579, 581, 587, 589, 591, 593], "odim_h5": [2, 8, 593], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 121, 123, 124, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 203, 263, 292, 317, 325, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 381, 413, 414, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 444, 445, 446, 450, 451, 453, 458, 462, 463, 491, 577, 585, 589, 647], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 122, 123, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 170, 174, 176, 183, 190, 195, 217, 224, 228, 229, 230, 232, 242, 244, 246, 248, 255, 258, 260, 262, 277, 284, 288, 289, 291, 306, 314, 315, 316, 317, 318, 321, 322, 324, 339, 347, 348, 349, 350, 354, 355, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 445, 446, 448, 450, 451, 452, 459, 462, 463, 464, 465, 468, 469, 471, 473, 474, 479, 491, 557, 558, 565, 572, 577, 581, 582, 588, 589, 593, 634, 653], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 121, 123, 124, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 385, 412, 413, 414, 417, 418, 424, 426, 427, 428, 429, 430, 431, 432, 433, 442, 444, 445, 446, 450, 451, 462, 463, 464, 466, 491, 494, 536, 577, 605, 635, 648, 653], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 122, 125, 222, 244, 255, 282, 292, 311, 313, 314, 315, 317, 318, 325, 344, 346, 347, 348, 350, 351, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 392, 402, 419, 442, 450, 462, 491, 585, 587, 588, 589, 591, 593, 594, 608, 611, 612, 614, 615, 630, 632, 634, 635, 642, 645, 646, 654, 656], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 217, 218, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 276, 277, 278, 279, 284, 287, 288, 289, 292, 293, 294, 295, 296, 297, 302, 305, 306, 307, 308, 316, 317, 320, 321, 322, 325, 326, 327, 328, 329, 330, 335, 338, 339, 340, 341, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 458, 462, 463, 464, 465, 466, 471, 474, 487, 491, 494, 515, 538, 539, 540, 541, 543, 546, 547, 548, 549, 555, 556, 568, 569, 577, 579, 580, 581, 585, 587, 588, 589, 591, 593, 594, 599, 602, 604, 608, 609, 610, 613, 614, 616, 627, 631, 632, 633, 634, 635, 636, 641, 643, 645, 646, 647, 649, 651, 652, 653, 656], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 126, 127, 140, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 202, 203, 216, 217, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 276, 277, 282, 284, 288, 289, 292, 305, 306, 311, 314, 316, 317, 321, 322, 325, 338, 339, 344, 347, 349, 350, 354, 355, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 404, 405, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 458, 491, 534, 539, 540, 541, 543, 546, 547, 548, 549, 556, 557, 558, 561, 563, 564, 566, 567, 568, 569, 572, 573, 577, 578, 579, 580, 581, 582, 585, 586, 589, 591, 593, 598, 599, 600, 602, 603, 604, 605, 607, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 633, 634, 635, 636, 637, 638, 641, 642, 643, 646, 647, 649, 651, 652, 654, 657], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 121, 123, 124, 140, 152, 158, 160, 163, 164, 165, 183, 195, 199, 200, 205, 207, 217, 218, 223, 224, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 283, 284, 288, 289, 294, 296, 306, 307, 312, 315, 316, 317, 321, 322, 327, 329, 339, 340, 345, 348, 349, 350, 354, 355, 358, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 388, 392, 399, 402, 414, 418, 424, 426, 427, 428, 430, 431, 433, 434, 439, 440, 441, 442, 445, 450, 451, 462, 464, 465, 466, 473, 491, 494, 555, 557, 558, 565, 579, 586, 588, 589, 590, 591, 594, 596, 634, 645, 647, 648, 649, 651, 652, 653, 655, 656, 658], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 161, 162, 203, 263, 292, 325, 361, 365, 367, 368, 369, 370, 372, 373, 374, 378, 379, 427, 439, 462, 491, 534, 586, 589, 593, 594, 635, 645, 653, 656], "found": [2, 7, 8, 12, 14, 29, 163, 361, 365, 367, 368, 369, 370, 372, 373, 374, 388, 399, 412, 413, 414, 419, 434, 585, 587, 589, 591, 593, 594, 596, 605, 645, 655, 656, 658], "doe": [2, 7, 8, 12, 14, 49, 77, 121, 123, 124, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 466, 494, 582, 587, 589, 593, 594, 596, 625, 647, 655, 656, 658], "appear": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 572, 589], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 159, 160, 205, 237, 249, 250, 265, 294, 325, 327, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 385, 392, 402, 404, 427, 430, 431, 462, 491, 543, 565, 581, 586, 588, 589, 591, 594, 596, 604, 613, 634, 645, 651, 653, 655, 656, 658], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 121, 122, 123, 124, 125, 127, 129, 131, 132, 133, 135, 138, 140, 143, 145, 146, 147, 150, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 178, 181, 183, 186, 188, 189, 190, 193, 195, 197, 198, 199, 200, 201, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 306, 307, 308, 310, 313, 314, 315, 316, 317, 319, 320, 321, 322, 339, 340, 341, 343, 346, 347, 348, 349, 350, 352, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 394, 399, 400, 413, 414, 416, 418, 419, 422, 424, 427, 430, 431, 433, 436, 438, 439, 440, 441, 445, 447, 450, 462, 465, 491, 539, 540, 541, 555, 564, 565, 569, 570, 571, 585, 587, 588, 589, 593, 594, 605, 608, 613, 616, 632, 633, 634, 635, 641, 648, 649, 652, 656], "place": [2, 7, 8, 12, 14, 218, 222, 223, 241, 243, 256, 257, 278, 282, 283, 307, 311, 312, 340, 344, 345, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 582, 593, 651, 655], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 122, 125, 127, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 198, 199, 200, 201, 203, 233, 242, 249, 263, 292, 315, 325, 348, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 380, 381, 394, 412, 413, 414, 418, 419, 424, 426, 433, 438, 439, 440, 441, 443, 445, 446, 447, 448, 450, 462, 464, 491, 556, 569, 585, 589, 593, 594, 616, 634, 635, 639, 645, 656], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 224, 227, 228, 229, 230, 232, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 284, 287, 288, 289, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 316, 317, 320, 321, 322, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 349, 350, 353, 354, 355, 357, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 384, 396, 414, 416, 417, 419, 424, 427, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 450, 462, 468, 469, 471, 473, 474, 479, 491, 539, 540, 541, 564, 565, 577, 586, 587, 593, 594, 624, 625, 634, 635, 645, 655, 656, 658], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 121, 123, 124, 155, 156, 157, 160, 163, 165, 166, 167, 198, 199, 200, 201, 222, 223, 227, 282, 283, 287, 311, 312, 320, 344, 345, 353, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 379, 413, 414, 418, 438, 439, 445, 450, 462, 491, 555, 556, 585, 588, 589, 592, 593, 614, 615, 632, 634], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 417, 424, 433, 438, 439, 440, 441, 442, 445, 446, 577, 585, 586, 589, 591, 593, 594, 604, 608, 633, 641, 656], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 450, 468, 469, 471, 472, 473, 474, 475, 556, 593, 594, 633, 634, 635, 636, 637, 638, 641, 649, 654, 656], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 155, 156, 157, 160, 161, 162, 166, 167, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 417, 419, 439, 440, 441, 442, 446, 450, 451, 462, 463, 464, 491, 536, 538, 543, 577, 592, 593, 605, 622, 623, 627, 653], "dure": [2, 7, 8, 12, 14, 19, 140, 152, 159, 160, 161, 162, 183, 195, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 424, 432, 439, 445, 585, 635, 655, 658], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 121, 122, 123, 124, 125, 129, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 172, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 199, 200, 205, 207, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 279, 282, 283, 284, 287, 288, 289, 292, 294, 296, 306, 307, 308, 311, 312, 316, 317, 320, 321, 322, 325, 327, 329, 339, 340, 341, 344, 345, 349, 350, 353, 354, 355, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 392, 394, 399, 400, 402, 405, 412, 413, 414, 416, 418, 419, 424, 426, 427, 430, 431, 433, 434, 438, 439, 440, 441, 445, 447, 450, 451, 452, 462, 464, 465, 472, 473, 474, 475, 479, 491, 543, 555, 557, 558, 564, 565, 566, 569, 572, 578, 579, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 593, 594, 596, 599, 604, 605, 608, 613, 614, 615, 616, 619, 624, 625, 632, 634, 635, 647, 648, 649, 651, 652, 653, 655, 656, 658], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 131, 133, 140, 141, 142, 147, 152, 155, 156, 157, 160, 161, 162, 163, 165, 166, 167, 174, 176, 183, 184, 185, 190, 195, 199, 200, 292, 325, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 414, 419, 438, 463, 464, 538, 582, 586, 590, 597, 647], "success": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 596], "unless": [2, 7, 8, 12, 14, 58, 121, 123, 124, 162, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 475, 589], "explicitli": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 127, 131, 133, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 169, 170, 174, 176, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 413, 414, 437, 447, 462, 467, 473, 474, 491, 556, 586, 588, 589, 591, 592, 593, 594, 596, 604, 608, 627, 645, 652, 655, 656], "introduct": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 594, 656], "specif": [2, 7, 8, 12, 14, 140, 152, 155, 156, 157, 183, 195, 325, 350, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 414, 426, 427, 428, 430, 431, 434, 438, 439, 440, 441, 569, 587, 589, 593, 594, 599, 613, 634, 635, 645, 656, 658], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 121, 123, 124, 131, 133, 147, 160, 161, 162, 169, 174, 176, 190, 217, 219, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 277, 279, 284, 288, 289, 306, 308, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 346, 347, 348, 349, 350, 351, 354, 355, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 388, 399, 405, 413, 414, 439, 440, 441, 450, 462, 465, 473, 474, 491, 577, 581, 587, 588, 589, 593, 600, 604, 651, 652, 655], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 131, 133, 140, 147, 152, 155, 160, 161, 162, 166, 167, 170, 174, 176, 183, 190, 195, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 412, 414, 418, 424, 427, 430, 431, 433, 439, 440, 441, 443, 445, 451, 452, 459, 463, 464, 465, 468, 469, 471, 473, 474, 475, 572, 582, 589], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 123, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 412, 413, 414, 418, 424, 427, 430, 431, 433, 439, 440, 441, 445, 450, 451, 452, 459, 460, 462, 463, 464, 465, 468, 469, 471, 473, 474, 475, 491, 548, 549, 564, 572, 582, 585, 586, 587, 588, 589, 591, 593, 594, 615, 622, 623, 624, 625, 634, 635, 637, 641, 648, 649, 653, 656], "mdv": [2, 8, 12, 14, 367, 368, 378, 586, 593, 600, 602, 609, 612, 630, 645, 649, 651, 654], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 121, 123, 124, 140, 152, 160, 162, 183, 195, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 587, 588, 589, 591, 593, 594, 604, 605, 608, 625, 656], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 418, 585, 586, 587, 588, 589, 591, 593, 599, 608], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 122, 125, 155, 156, 157, 158, 160, 161, 162, 163, 198, 201, 222, 242, 282, 311, 344, 350, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 405, 406, 407, 408, 412, 413, 414, 416, 418, 419, 422, 423, 424, 433, 436, 438, 439, 440, 441, 445, 447, 450, 462, 491, 537, 550, 551, 552, 555, 564, 565, 570, 571, 577, 579, 581, 585, 586, 587, 588, 593, 596, 602, 605, 616, 627, 634, 635, 646, 649, 652, 655], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 141, 142, 155, 156, 157, 159, 160, 162, 166, 167, 184, 185, 217, 228, 244, 277, 288, 306, 317, 321, 339, 350, 354, 361, 365, 367, 368, 369, 370, 371, 372, 373, 414, 439, 447, 467, 473, 474, 557, 558, 572, 579, 585, 586, 587, 589, 591, 593, 594, 597, 608, 615, 625, 634, 635, 648, 649, 651, 656], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 131, 133, 140, 147, 152, 155, 156, 157, 160, 174, 176, 183, 190, 195, 217, 228, 249, 277, 288, 306, 317, 321, 339, 354, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 424, 433, 436, 452, 462, 465, 473, 491, 585, 587, 588, 589, 590, 591, 593, 594, 604, 605, 632, 634, 635, 645, 651, 655, 656, 657, 658], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 121, 123, 124, 160, 161, 162, 317, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 383, 385, 388, 389, 390, 392, 394, 399, 400, 402, 413, 414, 434, 450, 451, 462, 463, 464, 491, 543, 587, 589, 647, 648, 652], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 203, 219, 223, 226, 249, 263, 279, 283, 286, 292, 308, 312, 319, 325, 341, 345, 352, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 407, 414, 434, 437, 465, 556, 557, 558, 567, 588, 589, 591, 592, 593, 594, 596, 604, 645, 656, 657], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 149, 152, 155, 156, 157, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 192, 195, 198, 199, 200, 201, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 439, 440, 441, 443, 447, 448, 465, 600, 609, 652], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 158, 161, 162, 164, 165, 166, 167, 199, 200, 217, 218, 224, 227, 228, 229, 230, 241, 256, 277, 278, 284, 287, 288, 289, 306, 307, 316, 317, 320, 321, 322, 339, 340, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 405, 412, 414, 419, 424, 427, 433, 462, 465, 491, 565, 587, 588, 589, 591, 593, 604, 613, 624, 634, 635, 641, 649], "after": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 439, 585, 587, 589, 593, 594, 596, 605, 634, 655, 656, 658], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 231, 232, 242, 244, 277, 279, 284, 287, 288, 289, 290, 291, 306, 308, 316, 317, 320, 321, 322, 323, 324, 339, 341, 349, 350, 353, 354, 355, 356, 357, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 386, 387, 390, 391, 397, 398, 401, 414, 426, 427, 428, 430, 431, 439, 440, 441, 450, 462, 473, 474, 475, 491, 539, 540, 541, 548, 549, 555, 564, 574, 575, 586, 587, 593, 594, 605, 608, 614, 621, 624, 625, 628, 629, 634, 635, 641, 645, 649, 655, 656, 657], "you": [2, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585, 588, 589, 590, 591, 592, 594, 596, 604, 634, 635, 645, 647, 648, 649, 651, 652, 653, 655, 656, 658], "want": [2, 586, 588, 589, 591, 594, 605, 645, 652, 653, 656, 658], "altitud": [2, 31, 45, 56, 74, 166, 167, 203, 414, 419, 445, 450, 462, 473, 491, 566, 578, 585, 588, 593, 625, 637, 647, 651, 653], "provid": [2, 6, 45, 48, 74, 160, 202, 223, 283, 312, 317, 345, 363, 364, 365, 370, 373, 377, 378, 379, 381, 386, 387, 393, 394, 397, 398, 403, 405, 462, 465, 491, 569, 577, 583, 585, 588, 589, 591, 592, 594, 605, 632, 634, 645, 652, 655, 656], "np": [2, 405, 422, 448, 576, 585, 587, 588, 589, 591, 593, 594, 608, 609, 613, 616, 621, 624, 625, 627, 632, 634, 635, 636, 637, 647, 648, 649, 651, 652, 653, 656], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 164, 170, 174, 176, 183, 184, 185, 190, 195, 203, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 288, 289, 292, 306, 307, 308, 313, 314, 316, 317, 321, 322, 325, 339, 340, 341, 346, 347, 349, 350, 354, 355, 405, 413, 414, 422, 424, 425, 433, 438, 440, 441, 442, 447, 448, 450, 452, 458, 464, 468, 469, 471, 472, 473, 474, 475, 551, 552, 553, 554, 555, 562, 563, 565, 570, 571, 574, 575, 576, 585, 589, 593, 594, 608, 621, 634, 635, 637, 647, 648, 649, 651, 652, 653, 656], "295": [2, 593], "dtype": [2, 412, 414, 585, 588, 589, 593, 647, 649, 653], "float64": [2, 413, 414, 585, 588, 632, 653], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 128, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 198, 199, 200, 201, 204, 205, 206, 207, 208, 237, 238, 239, 240, 250, 251, 252, 253, 264, 265, 266, 267, 268, 293, 294, 295, 296, 297, 326, 327, 328, 329, 330, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 388, 389, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 453, 460, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 484, 485, 486, 487, 488, 489, 490, 504, 505, 506, 507, 512, 513, 514, 515, 516, 517, 518, 534, 536, 537, 538, 539, 540, 541, 543, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 581, 585, 587, 588, 589, 593, 594, 632, 634, 635, 648, 651, 653, 656], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 232, 277, 284, 287, 288, 289, 291, 306, 316, 317, 320, 321, 322, 324, 339, 349, 350, 353, 354, 355, 357, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 394, 412, 413, 414, 416, 417, 418, 419, 424, 426, 427, 428, 429, 430, 431, 432, 433, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 462, 463, 467, 468, 469, 471, 472, 473, 474, 475, 491, 555, 556, 557, 558, 564, 568, 577, 579, 582, 585, 586, 589, 593, 594, 605, 617, 618, 635, 645, 647, 648, 651, 653, 655, 656, 658], "edg": [3, 33, 57, 120, 123, 160, 161, 162, 163, 164, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 437, 441, 452, 474, 587, 588, 589, 624, 625, 634], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 379, 588, 593], "gamic": [4, 593], "hdf5": [4, 8, 593, 645], "unlik": [4, 5, 6, 364], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 160, 161, 162, 163, 164, 165, 200, 217, 219, 224, 227, 228, 229, 230, 244, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 366, 369, 371, 373, 377, 405, 414, 424, 433, 443, 447, 450, 458, 462, 491, 539, 540, 541, 587, 588, 589, 594, 634, 635, 645, 647, 655, 656, 658], "still": [4, 5, 6, 160, 292, 325, 364, 379, 414, 572, 591, 593, 594, 604, 656], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 218, 222, 223, 224, 227, 228, 229, 230, 233, 241, 244, 246, 248, 249, 255, 256, 258, 260, 262, 277, 278, 282, 283, 284, 287, 288, 289, 306, 307, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 360, 361, 363, 364, 369, 370, 373, 374, 376, 377, 378, 379, 381, 409, 410, 411, 412, 413, 414, 417, 418, 434, 438, 439, 440, 441, 445, 446, 447, 450, 452, 462, 467, 471, 484, 485, 487, 488, 491, 512, 513, 515, 516, 555, 556, 557, 558, 565, 567, 568, 569, 570, 571, 577, 581, 585, 586, 587, 588, 589, 591, 593, 594, 596, 600, 604, 605, 608, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 632, 635, 641, 642, 643, 645, 649, 651, 653, 655, 656], "renam": [4, 5, 6, 29, 364, 374, 593], "uniform": [4, 5, 6, 58, 161, 162, 364, 372, 418, 475, 593, 613, 616, 645, 647], "forc": [4, 5, 6, 364, 374, 418, 589, 593], "extract": [4, 217, 277, 306, 339, 373, 434, 556, 557, 558, 568, 591, 593, 602, 608, 629, 631, 634, 635, 638, 645, 654], "valid": [4, 31, 45, 74, 154, 155, 160, 197, 218, 241, 256, 278, 307, 340, 369, 378, 379, 414, 450, 462, 491, 556, 557, 558, 565, 593, 594, 656], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 157, 203, 217, 219, 224, 225, 226, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 263, 277, 279, 284, 285, 286, 288, 289, 292, 306, 308, 316, 317, 318, 319, 321, 322, 325, 339, 341, 349, 350, 351, 352, 354, 355, 372, 422, 439, 441, 462, 472, 474, 491, 556, 564, 579, 585, 587, 588, 589, 593, 613, 618, 621, 627, 637, 647, 653], "valid_min": [4, 160, 161, 162, 365, 593, 634, 635, 653], "valid_max": [4, 160, 161, 162, 365, 634, 635, 653], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 166, 167, 174, 176, 183, 184, 185, 190, 195, 217, 224, 228, 229, 230, 244, 249, 277, 284, 288, 289, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 369, 370, 372, 373, 375, 379, 381, 405, 414, 418, 427, 430, 431, 439, 440, 441, 447, 449, 450, 462, 463, 464, 468, 469, 471, 473, 474, 491, 565, 586, 587, 588, 591, 593, 594, 595, 596, 597, 613, 634, 635, 645, 648, 649, 652, 655, 656, 658], "present": [4, 29, 31, 45, 74, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 392, 402, 414, 450, 462, 491, 589, 647, 652], "unit": [4, 55, 121, 122, 123, 124, 125, 161, 162, 209, 212, 213, 214, 215, 222, 242, 269, 272, 273, 274, 275, 282, 298, 301, 302, 303, 304, 311, 331, 334, 335, 336, 337, 344, 365, 367, 416, 433, 436, 449, 472, 543, 565, 585, 589, 591, 593, 594, 595, 622, 627, 634, 635, 645, 648, 653, 656], "avail": [4, 16, 45, 56, 57, 58, 74, 140, 152, 155, 156, 157, 164, 183, 195, 202, 242, 244, 246, 248, 258, 260, 262, 367, 377, 462, 473, 474, 475, 491, 585, 587, 588, 589, 593, 596, 602, 604, 613, 645], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 122, 125, 438, 447, 448, 585, 587, 588, 589, 590, 591, 593, 594, 605, 637, 647, 648, 649, 651, 652, 653, 656], "k": [5, 125, 221, 222, 223, 225, 226, 227, 281, 282, 283, 285, 286, 287, 310, 311, 312, 318, 319, 320, 343, 344, 345, 351, 352, 353, 384, 388, 389, 391, 392, 396, 399, 400, 401, 402, 439, 447, 587, 591, 594, 614, 621, 624, 625, 656], "band": [5, 9, 155, 157, 159, 377, 426, 428, 435, 439, 440, 441, 445, 585, 593, 635], "arm": [5, 6, 40, 362, 363, 375, 376, 434, 459, 538, 543, 585, 587, 589, 591, 593, 596, 610, 625, 647, 648, 649, 651, 652, 653, 655, 658], "zenith": 5, "kazr": [5, 6, 593], "ingest": [5, 588, 593, 645, 646], "spectra": [6, 74, 117, 425, 444, 491, 534, 541, 547, 565, 593], "radar_spectra": 6, "delay_field_load": [6, 361, 364, 367, 368, 369, 372, 374], "delai": [6, 361, 364, 367, 368, 369, 372, 593], "load": [6, 29, 361, 364, 367, 368, 369, 372, 380, 381, 390, 593, 653], "until": [6, 29, 161, 361, 364, 367, 368, 369, 372, 596], "particular": [6, 361, 364, 367, 368, 369, 372, 414, 588, 596, 645], "access": [6, 19, 31, 45, 56, 57, 74, 141, 142, 184, 185, 361, 364, 367, 368, 369, 372, 381, 450, 462, 473, 474, 491, 537, 588, 604, 605, 651, 653], "In": [6, 121, 123, 124, 162, 164, 359, 361, 364, 367, 368, 369, 371, 372, 392, 402, 405, 416, 419, 439, 448, 555, 556, 585, 587, 588, 589, 591, 594, 599, 600, 605, 634, 635, 645, 648, 649, 651, 652, 655, 656], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 140, 141, 142, 152, 160, 183, 184, 185, 195, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 367, 368, 369, 372, 375, 376, 379, 450, 453, 454, 455, 456, 462, 473, 474, 480, 481, 482, 483, 491, 508, 509, 510, 511, 585, 588, 589, 591, 632, 647, 653], "radarspectra": [6, 444, 541], "lazyloaddict": [6, 31, 45, 74, 361, 364, 367, 368, 369, 372, 450, 462, 491], "speedup": [6, 244, 317, 350, 364, 589, 593], "where": [6, 15, 56, 57, 119, 122, 125, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 165, 167, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 217, 224, 227, 228, 229, 230, 243, 257, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 358, 364, 419, 424, 433, 442, 448, 473, 474, 557, 558, 566, 569, 581, 585, 586, 589, 591, 593, 604, 605, 608, 613, 616, 632, 634, 645, 648, 652, 658], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 284, 288, 289, 292, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 364, 369, 370, 371, 372, 405, 412, 413, 414, 439, 440, 441, 442, 443, 447, 448, 462, 472, 473, 474, 491, 539, 540, 541, 555, 556, 567, 568, 585, 589, 593, 600, 605, 608, 609, 610, 614, 647, 649, 651, 652, 653], "vari": [6, 364, 367, 634, 635], "between": [6, 33, 45, 56, 57, 74, 120, 122, 123, 140, 152, 160, 161, 163, 164, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 358, 364, 369, 372, 378, 379, 405, 424, 427, 433, 452, 462, 473, 474, 491, 550, 564, 578, 585, 587, 588, 589, 594, 596, 608, 614, 624, 634, 649, 651, 656, 658], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 140, 152, 155, 156, 157, 160, 161, 162, 164, 167, 183, 195, 199, 204, 206, 210, 211, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 264, 266, 270, 271, 277, 284, 287, 288, 289, 293, 295, 299, 300, 306, 316, 317, 320, 321, 322, 326, 328, 332, 333, 339, 349, 350, 353, 354, 355, 363, 364, 369, 372, 373, 405, 418, 422, 447, 462, 470, 473, 474, 475, 476, 477, 478, 491, 504, 505, 506, 507, 539, 540, 541, 543, 556, 561, 563, 567, 581, 582, 588, 589, 594, 609, 647, 653, 656], "ngates_vari": [6, 364], "recommend": [6, 29, 45, 74, 160, 162, 350, 364, 373, 414, 424, 433, 439, 462, 491, 555, 594, 596, 613, 645, 655, 656, 657, 658], "noxp": [7, 593], "iphex": [7, 593], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 317, 350, 369, 371, 434, 556, 559, 562, 568, 585, 588, 589, 593, 604, 632, 635, 636, 637, 645, 647], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 129, 131, 132, 133, 134, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 160, 165, 172, 174, 175, 176, 177, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 199, 200, 217, 222, 223, 242, 243, 245, 246, 247, 248, 257, 259, 260, 261, 262, 277, 282, 283, 306, 311, 312, 313, 314, 339, 344, 345, 346, 347, 388, 399, 405, 413, 414, 438, 442, 450, 452, 462, 468, 469, 470, 471, 474, 475, 476, 477, 478, 491, 504, 505, 506, 507, 536, 556, 564, 567, 568, 570, 571, 577, 585, 589, 632, 634, 645], "dataset1": 8, "dataset2": 8, "pattern": [9, 624], "project": [9, 16, 31, 34, 45, 74, 121, 122, 123, 124, 125, 222, 233, 244, 255, 282, 292, 311, 317, 344, 350, 367, 376, 377, 414, 450, 453, 462, 491, 585, 587, 589, 591, 593, 604, 605, 608, 614, 615, 621, 628, 632, 634, 635, 641, 645, 648, 649, 651, 652, 655], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 203, 212, 217, 219, 222, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 263, 272, 277, 279, 282, 284, 287, 288, 289, 291, 292, 301, 306, 308, 311, 314, 316, 320, 321, 322, 324, 325, 334, 339, 341, 344, 347, 349, 353, 354, 355, 357, 405, 409, 410, 411, 412, 413, 414, 418, 424, 426, 433, 435, 436, 437, 439, 440, 441, 445, 450, 456, 458, 474, 482, 510, 538, 555, 585, 588, 589, 592, 593, 597, 608, 614, 615, 624, 625, 634, 635, 651, 652, 653], "radx_dir": 10, "first": [10, 45, 58, 74, 160, 162, 242, 362, 363, 372, 375, 405, 414, 424, 433, 439, 440, 441, 445, 462, 475, 491, 559, 561, 574, 575, 585, 587, 588, 589, 591, 594, 596, 600, 604, 605, 618, 627, 632, 634, 635, 641, 649, 651, 652, 653, 656], "convert": [10, 13, 39, 416, 424, 433, 458, 572, 582, 585, 587, 589, 593, 634, 635], "cf": [10, 13, 45, 74, 364, 375, 376, 434, 462, 491, 585, 586, 587, 588, 602, 612, 630, 645, 653, 654], "radial": [10, 13, 45, 74, 160, 161, 364, 375, 418, 439, 462, 491, 555, 577, 586, 588, 589, 591, 593, 598, 602, 604, 612, 630, 640, 644, 645, 649, 653, 654], "radxconvert": 10, "path": [10, 15, 156, 157, 162, 460, 537, 586, 587, 589, 591, 593, 594, 604, 605, 645, 655, 656], "radx": [10, 593], "grid": [11, 24, 45, 74, 202, 219, 221, 229, 233, 237, 243, 244, 245, 247, 249, 250, 255, 257, 258, 259, 261, 279, 281, 308, 310, 341, 343, 359, 366, 367, 376, 377, 378, 409, 410, 411, 412, 413, 414, 424, 433, 436, 437, 445, 462, 491, 538, 542, 544, 545, 560, 579, 585, 589, 593, 602, 607, 611, 612, 615, 625, 628, 630, 634, 635, 640, 644, 645, 646, 654], "produc": [11, 163, 366, 375, 377, 381, 443, 448, 589, 591, 594, 635, 645, 656], "radx2grid": 11, "within": [11, 29, 47, 48, 127, 160, 161, 162, 163, 167, 170, 202, 412, 413, 414, 418, 438, 464, 465, 550, 556, 557, 558, 566, 568, 570, 571, 583, 587, 589, 590, 591, 593, 594, 604, 605, 615, 616, 645, 649, 651, 656, 658], "lrose": 11, "must": [11, 155, 156, 157, 160, 317, 363, 366, 367, 372, 378, 436, 439, 440, 441, 577, 589, 594, 634, 645, 655, 656], "been": [11, 12, 131, 133, 140, 147, 152, 159, 160, 174, 176, 183, 190, 195, 249, 325, 364, 366, 369, 370, 371, 373, 565, 586, 591, 594, 604, 634, 645, 651, 655, 656], "write_grid": [11, 366], "ident": [11, 161, 162, 366, 413, 635], "layout": [11, 33, 366, 452, 593], "rainbow": 12, "rainbow5": [12, 593], "5": [12, 31, 155, 157, 160, 163, 164, 165, 166, 200, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 376, 413, 414, 424, 427, 433, 438, 450, 564, 572, 585, 586, 587, 588, 589, 591, 592, 594, 599, 600, 605, 613, 616, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 632, 634, 635, 636, 637, 641, 642, 647, 649, 652, 653, 656], "22": [12, 585, 587, 591, 593, 604, 613, 621, 630, 632, 654], "3": [12, 45, 74, 119, 120, 160, 161, 198, 199, 201, 229, 367, 371, 377, 412, 414, 418, 424, 433, 462, 491, 538, 556, 585, 586, 587, 588, 591, 592, 594, 599, 600, 602, 605, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 632, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 658], "34": [12, 433, 445, 585, 634, 635], "16": [12, 426, 447, 583, 585, 586, 587, 589, 594, 599, 600, 608, 620, 626, 633, 649, 653, 656], "35": [12, 162, 166, 167, 585, 587, 588, 613, 622, 624, 625, 652], "1": [12, 31, 45, 55, 74, 119, 122, 125, 140, 160, 162, 166, 167, 183, 263, 364, 369, 370, 371, 376, 413, 414, 416, 421, 424, 427, 433, 438, 439, 441, 450, 462, 472, 491, 556, 564, 565, 576, 583, 585, 587, 588, 589, 591, 594, 596, 597, 599, 600, 604, 608, 609, 610, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 627, 628, 629, 632, 634, 636, 637, 642, 645, 647, 648, 649, 651, 653, 656], "sinc": [12, 419, 439, 585, 587, 588, 589, 634, 635, 648, 651, 653], "evolv": [12, 585], "constantli": 12, "guaranti": 12, "work": [12, 122, 125, 244, 292, 317, 325, 350, 369, 371, 445, 586, 587, 589, 591, 593, 594, 596, 597, 605, 645, 647, 648, 649, 651, 652, 653, 655, 656, 658], "necessari": [12, 585], "user": [12, 29, 48, 156, 157, 163, 350, 377, 465, 556, 581, 585, 588, 589, 591, 593, 594, 645, 647, 648, 649, 651, 652, 653, 655, 656, 658], "adapt": [12, 119, 585, 658], "code": [12, 29, 160, 436, 447, 585, 587, 591, 593, 597, 599, 600, 602, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645, 655, 658], "accord": [12, 159, 373, 414, 421, 426, 427, 428, 430, 431], "its": [12, 439, 587, 588, 591, 593, 594, 596, 597, 645, 655, 656, 658], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 361, 372, 388, 389, 399, 400, 450, 451, 463, 464, 466, 475, 494, 588, 589, 593], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 135, 160, 161, 162, 163, 165, 166, 167, 178, 198, 199, 200, 201, 203, 222, 282, 311, 344, 350, 373, 376, 377, 393, 403, 405, 412, 413, 414, 418, 434, 450, 458, 462, 464, 465, 468, 469, 475, 484, 485, 486, 487, 488, 489, 490, 491, 512, 513, 514, 515, 516, 517, 518, 536, 538, 539, 540, 541, 555, 558, 562, 563, 570, 571, 580, 582, 585, 586, 588, 589, 591, 593, 594, 596, 597, 602, 605, 608, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 632, 634, 635, 641, 642, 643, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657], "issu": [12, 29, 292, 325, 373, 376, 588, 592, 593, 594, 602, 603, 606, 645, 654, 655, 656, 658], "upstream": [12, 586, 594, 596, 656], "reflect": [12, 47, 117, 127, 141, 142, 155, 156, 157, 158, 163, 165, 166, 167, 170, 184, 185, 199, 200, 219, 279, 308, 341, 358, 405, 416, 417, 419, 422, 423, 424, 427, 429, 430, 431, 432, 433, 438, 439, 445, 464, 534, 546, 548, 549, 569, 585, 586, 587, 591, 593, 598, 600, 601, 602, 604, 605, 608, 609, 610, 612, 613, 614, 615, 617, 620, 623, 626, 627, 629, 630, 631, 632, 634, 635, 638, 641, 643, 645, 647, 648, 649, 651, 652, 653, 654], "dbz": [12, 155, 159, 166, 167, 416, 422, 423, 424, 433, 445, 586, 588, 591, 604, 608, 615, 622, 623, 629, 634, 635, 653], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 160, 161, 162, 418, 425, 436, 447, 448, 475, 534, 555, 577, 589, 591, 593, 594, 598, 601, 602, 604, 613, 617, 625, 627, 640, 644, 645, 646, 652, 653, 654, 656], "v": [12, 41, 42, 44, 388, 389, 392, 399, 400, 402, 447, 448, 587, 594, 624, 625, 635, 637, 656], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 565, 653], "width": [12, 243, 257, 317, 350, 414, 587, 588, 589, 591, 593, 653], "w": [12, 62, 162, 479, 585, 636], "wu": [12, 412, 651], "wv": 12, "wvu": 12, "differenti": [12, 17, 155, 156, 157, 166, 167, 199, 428, 431, 438, 439, 440, 441, 443, 446, 593, 617, 645], "zdr": [12, 156, 157, 159, 199, 420], "zdru": 12, "co": [12, 119, 122, 125, 424, 433, 585, 587, 634, 635], "polar": [12, 367, 368, 441, 588], "correl": [12, 165, 199, 200, 436, 438, 569, 591, 616, 617, 633, 634, 635], "coeffici": [12, 155, 156, 157, 166, 167, 416, 438, 569, 585, 593, 616, 617, 633], "rhohv": [12, 159, 165, 199, 200, 420, 421, 593, 616, 653], "rhohvu": 12, "phase": [12, 17, 155, 156, 157, 162, 166, 167, 199, 428, 431, 436, 438, 439, 440, 441, 443, 446, 593, 617, 645, 649], "phidp": [12, 156, 157, 166, 167, 199, 439, 593, 645], "uphidp": 12, "uphidpu": 12, "kdp": [12, 166, 167, 428, 431, 439, 440, 441, 593, 636, 645], "ukdp": 12, "ukdpu": 12, "signal": [12, 159, 165, 200, 417, 565, 588], "qualiti": [12, 159, 165, 200, 428, 440, 441, 585, 591, 604], "sqi": [12, 593], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 156, 157, 201, 438, 585, 636], "temp": [12, 593], "posit": [12, 45, 74, 122, 125, 156, 157, 160, 419, 439, 462, 491, 588, 593, 608, 613, 615, 653], "bin": [12, 45, 74, 119, 120, 157, 372, 425, 462, 491, 565, 585, 593, 608, 649, 653], "respect": [12, 45, 74, 424, 433, 445, 462, 491, 589], "iso0": [12, 156, 198], "cfradial_outfil": 13, "head": [13, 45, 74, 203, 462, 491], "ridgelin": 13, "instrument": [13, 45, 74, 140, 152, 165, 183, 195, 199, 200, 379, 462, 491, 593, 649, 653], "rxm": [13, 593], "25": [13, 585, 587, 591, 593, 604, 608, 624, 625, 628, 632, 635, 638, 647, 652, 654], "rli": 13, "here": [13, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 255, 585, 586, 587, 588, 589, 591, 592, 596, 608, 634, 635, 641, 645, 647, 652, 655, 658], "float": [13, 24, 58, 122, 125, 131, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 217, 219, 220, 224, 225, 227, 228, 229, 230, 242, 243, 244, 245, 246, 247, 248, 255, 257, 258, 259, 260, 261, 262, 263, 264, 277, 279, 280, 284, 285, 287, 288, 289, 292, 293, 306, 308, 309, 315, 316, 317, 318, 320, 321, 322, 325, 326, 339, 341, 342, 348, 349, 350, 351, 353, 354, 355, 358, 377, 405, 406, 408, 409, 410, 411, 412, 414, 416, 417, 418, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 435, 436, 437, 439, 440, 441, 442, 443, 445, 475, 538, 551, 552, 553, 554, 555, 556, 557, 558, 564, 565, 566, 567, 568, 569, 570, 571, 572, 578, 579, 589], "offset": [13, 155, 166, 167, 203, 263, 292, 315, 325, 348, 424, 433, 564, 572, 585, 588, 589, 635], "exist": [13, 28, 32, 46, 47, 49, 77, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 199, 200, 373, 439, 451, 460, 463, 464, 466, 494, 536, 582, 587, 588, 589, 593, 596, 599, 645, 647], "enter": [13, 586, 589, 594, 656], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 166, 167, 201, 203, 217, 222, 223, 242, 243, 245, 247, 255, 257, 259, 261, 263, 277, 282, 283, 292, 306, 311, 312, 315, 317, 325, 339, 344, 345, 348, 350, 447, 452, 472, 473, 552, 554, 556, 557, 558, 566, 567, 568, 572, 575, 578, 587, 589, 593, 594, 629, 632, 653, 656], "sinarame_h5": [14, 15, 593], "take": [15, 47, 161, 413, 414, 417, 439, 464, 587, 588, 589, 594, 604, 605, 608, 615, 634, 635, 656], "everi": [15, 440, 441, 595, 645], "one": [15, 25, 31, 39, 40, 45, 47, 74, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 200, 375, 376, 378, 405, 412, 413, 414, 419, 439, 440, 441, 447, 450, 458, 459, 462, 464, 491, 557, 558, 564, 569, 573, 577, 586, 588, 589, 591, 592, 593, 594, 596, 602, 607, 608, 613, 645, 648, 653, 656, 658], "volum": [15, 45, 74, 160, 162, 163, 317, 350, 369, 370, 371, 379, 405, 434, 462, 491, 557, 558, 560, 579, 582, 585, 588, 589, 591, 593, 602, 612, 630, 654], "folder": [15, 585, 594, 656], "cfradial": [15, 364, 586, 593, 602, 612, 613, 627, 629, 630, 643, 647, 654], "each": [15, 31, 39, 41, 45, 55, 74, 155, 156, 157, 161, 162, 163, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 373, 377, 379, 405, 412, 413, 414, 438, 447, 450, 458, 462, 472, 491, 539, 540, 541, 585, 588, 589, 593, 594, 604, 609, 624, 627, 634, 635, 652, 653, 656], "act": [16, 427, 430, 431, 585, 593, 634, 647], "commun": [16, 585, 594, 645, 656, 658], "softwar": [16, 229, 370, 377, 589, 591, 594, 645, 647, 648, 649, 651, 652, 653, 655, 656], "namespac": [16, 593], "current": [16, 27, 33, 131, 133, 140, 147, 152, 160, 174, 176, 183, 190, 195, 205, 207, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 265, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 296, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 327, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 368, 406, 408, 439, 452, 564, 585, 586, 588, 589, 591, 594, 656], "extens": [16, 205, 237, 250, 265, 294, 327, 377, 588, 596, 655], "wradlib": [16, 593, 645], "http": [16, 369, 370, 371, 416, 419, 424, 428, 429, 433, 436, 556, 569, 585, 587, 589, 591, 594, 605, 616, 625, 634, 635, 645, 655, 656, 658], "org": [16, 416, 419, 424, 428, 429, 433, 436, 556, 569, 593, 594, 616, 634, 635, 645, 656], "phidp_field": [17, 155, 156, 157, 166, 167, 439, 440, 441, 446, 599, 636], "phidp_texture_field": [17, 446], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 123, 127, 141, 142, 155, 156, 157, 165, 166, 167, 170, 184, 185, 198, 199, 200, 201, 203, 263, 292, 325, 413, 414, 417, 418, 424, 433, 436, 443, 444, 446, 447, 448, 450, 452, 462, 473, 474, 491, 555, 556, 564, 565, 566, 567, 568, 578, 585, 593, 594, 599, 602, 608, 624, 625, 631, 634, 638, 641, 645, 649, 652, 654, 656], "textur": [17, 199, 418, 446, 555, 581, 593, 641, 645, 649], "real": [17, 160, 446, 602, 612, 634, 635, 658], "part": [17, 426, 446, 588, 589, 591, 593, 604, 645, 647, 648, 649, 651, 652, 653], "complex": [17, 446], "shift": [17, 166, 167, 203, 263, 292, 325, 437, 440, 446, 564, 593, 649], "texture_field": [17, 446], "refer": [17, 31, 45, 47, 74, 119, 122, 125, 155, 156, 157, 159, 160, 161, 162, 166, 167, 369, 370, 371, 412, 416, 419, 422, 424, 426, 428, 429, 432, 433, 438, 439, 440, 441, 443, 445, 446, 447, 448, 450, 462, 464, 491, 556, 565, 569, 586, 591, 593, 594, 645, 653, 656], "gourlei": [17, 159, 446], "j": [17, 122, 125, 162, 166, 167, 419, 424, 433, 438, 440, 441, 443, 445, 446, 447, 448, 556, 586, 589, 594, 599, 600, 609, 610, 617, 618, 620, 622, 626, 629, 634, 635, 645, 656], "p": [17, 20, 22, 28, 119, 122, 125, 412, 426, 443, 446, 536, 556, 565, 588, 594, 645, 656], "tabari": [17, 446], "parent": [17, 446], "du": [17, 446], "chatelet": [17, 446], "fuzzi": [17, 446], "logic": [17, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 446], "algorithm": [17, 127, 160, 161, 162, 170, 412, 414, 424, 433, 439, 445, 446, 585, 593, 594, 598, 601, 602, 641, 645, 654, 656], "separ": [17, 436, 445, 446, 565, 569, 604, 616, 635, 658], "precipit": [17, 416, 428, 432, 438, 446, 569, 585, 587, 589, 593, 594, 608, 616, 634, 635, 645, 656], "nonprecipit": [17, 446], "echo": [17, 424, 433, 438, 446, 634, 635, 652], "polarimetr": [17, 155, 156, 157, 159, 166, 167, 427, 428, 438, 443, 446, 556, 593, 599], "observ": [17, 119, 424, 433, 439, 446, 634, 635], "journal": [17, 160, 162, 412, 426, 428, 446, 565, 594, 645, 656], "atmospher": [17, 45, 74, 119, 120, 160, 161, 414, 426, 442, 446, 462, 491, 585, 588, 589, 591, 594, 604, 645, 647, 648, 649, 651, 652, 653, 656], "ocean": [17, 160, 166, 167, 424, 426, 432, 433, 443, 446, 556, 585, 589, 604, 634, 635], "technologi": [17, 160, 426, 446], "24": [17, 446, 585, 587, 593, 605, 606, 637], "8": [17, 62, 155, 160, 166, 199, 242, 244, 246, 248, 258, 260, 262, 446, 479, 585, 587, 588, 589, 591, 596, 605, 608, 614, 624, 628, 632, 635, 641, 647, 648, 649, 651, 652, 653], "1439": [17, 446], "1451": [17, 446], "filetyp": [19, 25, 589], "need": [19, 45, 54, 56, 57, 74, 377, 424, 433, 462, 471, 473, 474, 491, 566, 578, 587, 588, 589, 592, 593, 594, 596, 604, 608, 613, 634, 635, 645, 647, 648, 649, 651, 652, 653, 655, 656, 658], "being": [19, 21, 160, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 414, 419, 441, 570, 571, 587, 589, 591, 593, 625, 655], "keep": [19, 160, 373, 579, 589, 594, 608, 634, 635, 656, 658], "string": [19, 31, 45, 74, 219, 222, 223, 227, 230, 243, 257, 279, 282, 283, 287, 289, 308, 311, 312, 313, 314, 315, 318, 320, 322, 341, 344, 345, 346, 347, 348, 351, 353, 355, 413, 414, 434, 436, 440, 441, 443, 447, 448, 450, 462, 491, 587, 588, 589, 593, 594, 613, 656], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 127, 160, 161, 170, 203, 263, 292, 325, 381, 454, 455, 456, 480, 481, 482, 483, 508, 509, 510, 511, 589, 593, 615], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 131, 140, 141, 142, 152, 167, 174, 183, 184, 185, 195, 373, 439, 440, 441, 443, 447, 448, 450, 462, 486, 489, 490, 491, 514, 517, 518, 567, 585, 587, 589, 593, 604, 621], "dic": [22, 31, 45, 46, 74, 381, 450, 462, 463, 491], "colormap": [23, 202, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 588, 589, 593, 602, 612, 616, 630, 635, 636, 654], "select": [24, 50, 59, 88, 162, 467, 476, 505, 585, 588, 591, 593, 596], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 122, 125, 127, 152, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 170, 195, 198, 199, 200, 201, 203, 216, 217, 224, 227, 228, 229, 230, 231, 244, 258, 263, 276, 277, 284, 287, 288, 289, 290, 292, 305, 306, 315, 316, 317, 320, 321, 322, 323, 325, 338, 339, 348, 349, 350, 353, 354, 355, 356, 373, 377, 405, 413, 414, 417, 419, 424, 427, 429, 430, 431, 433, 437, 438, 439, 440, 443, 445, 447, 448, 452, 462, 467, 468, 469, 471, 472, 473, 474, 475, 491, 564, 572, 585, 586, 587, 588, 589, 591, 594, 596, 597, 599, 600, 601, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 647, 648, 649, 651, 652, 653, 654, 655, 656], "limit": [24, 160, 161, 165, 166, 167, 198, 199, 200, 201, 219, 232, 255, 279, 291, 308, 324, 341, 357, 367, 378, 439, 579, 588, 589, 593, 609, 610, 614, 651], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 140, 152, 160, 161, 162, 164, 165, 183, 195, 199, 200, 205, 207, 216, 217, 219, 224, 228, 229, 230, 265, 267, 276, 277, 279, 284, 288, 289, 294, 296, 305, 306, 308, 316, 317, 321, 322, 327, 329, 338, 339, 341, 349, 350, 354, 355, 369, 370, 371, 373, 405, 418, 447, 462, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 484, 485, 486, 487, 488, 489, 490, 491, 504, 505, 506, 507, 512, 513, 514, 515, 516, 517, 518, 539, 540, 557, 558, 564, 585, 586, 588, 589, 591, 593, 600, 604, 608, 624, 625, 627, 632, 634, 635, 637, 641, 649, 652, 653], "get": [24, 234, 235, 236, 254, 381, 391, 401, 405, 585, 586, 588, 589, 591, 593, 594, 605, 624, 625, 634, 635, 647, 649, 652, 653, 655, 656, 657, 658], "relat": [24, 157, 202, 378, 416, 424, 427, 430, 431, 432, 433, 440, 445, 556, 588, 593, 594, 634, 635, 645, 655, 656], "instac": 24, "nyquist": [24, 58, 160, 161, 162, 418, 475, 555, 593, 641, 649, 653], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 140, 152, 157, 160, 161, 163, 164, 166, 167, 183, 195, 199, 205, 206, 207, 216, 220, 224, 225, 227, 228, 229, 237, 238, 239, 240, 242, 244, 250, 251, 252, 253, 255, 258, 265, 266, 267, 276, 280, 284, 285, 287, 288, 294, 295, 296, 305, 309, 316, 317, 318, 320, 321, 327, 328, 329, 338, 342, 349, 350, 351, 353, 354, 377, 414, 418, 422, 424, 433, 439, 441, 447, 450, 452, 462, 468, 469, 471, 472, 473, 474, 475, 491, 539, 540, 541, 555, 556, 565, 567, 581, 587, 589, 593, 594, 656], "consid": [24, 155, 163, 164, 358, 424, 433, 557, 558, 564, 565, 572, 634], "vmin": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 585, 586, 587, 588, 589, 591, 593, 599, 600, 604, 605, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 641, 642, 643, 648, 649, 651, 652], "vmax": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 585, 586, 587, 588, 589, 591, 593, 599, 600, 604, 605, 608, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 641, 642, 643, 648, 649, 651, 652], "2": [24, 119, 122, 162, 163, 164, 199, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 308, 311, 312, 316, 319, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 352, 353, 354, 355, 357, 369, 370, 371, 373, 389, 400, 405, 412, 414, 418, 424, 433, 439, 447, 538, 555, 569, 585, 587, 588, 589, 591, 594, 597, 601, 606, 608, 614, 615, 620, 621, 624, 625, 628, 632, 634, 636, 637, 641, 645, 647, 648, 649, 651, 652, 653, 656], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 381, 414, 450, 464, 465, 467, 468, 469, 471, 582, 588, 592, 593, 635, 648], "field_map": 25, "anoth": [25, 405, 569, 588, 589, 593, 608, 647, 652, 655, 658], "fill": [27, 155, 156, 157, 445, 589, 593, 635, 647, 648], "empti": [28, 389, 400, 440, 441, 536, 538, 541, 586, 593, 647], "control": [29, 160, 373, 375, 376, 414, 439, 591, 651], "singl": [29, 161, 162, 163, 164, 222, 223, 225, 227, 282, 283, 285, 287, 311, 312, 318, 320, 344, 345, 351, 353, 377, 414, 543, 564, 582, 585, 588, 589, 591, 593, 594, 602, 604, 607, 608, 611, 632, 654, 656], "self": [29, 166, 167, 588, 589, 594, 648, 651, 656], "descrip": 29, "exampl": [29, 47, 127, 170, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 381, 405, 409, 410, 411, 413, 414, 447, 460, 464, 564, 585, 586, 587, 588, 589, 590, 593, 594, 599, 600, 601, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 649, 652, 653, 654, 656, 658], "default_config": 29, "modifi": [29, 45, 74, 163, 462, 491, 586, 593, 594, 602, 612, 630, 654, 656], "environment": [29, 585, 586, 645, 655], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 203, 233, 249, 263, 292, 325, 375, 376, 405, 427, 434, 438, 439, 442, 443, 450, 458, 459, 462, 472, 491, 565, 585, 587, 588, 593, 604, 608, 632, 634, 635, 645, 647, 648, 653, 655], "pyart_config": 29, "point": [29, 31, 33, 47, 123, 155, 156, 157, 167, 220, 225, 242, 243, 257, 280, 285, 292, 309, 314, 315, 318, 342, 347, 348, 351, 367, 368, 371, 373, 377, 412, 413, 414, 424, 433, 445, 450, 452, 464, 538, 565, 568, 572, 582, 585, 587, 589, 591, 593, 596, 602, 614, 621, 631, 634, 638, 641, 645, 649, 651, 653, 654], "new": [29, 47, 48, 50, 131, 133, 140, 147, 152, 163, 174, 176, 183, 190, 195, 425, 437, 443, 447, 464, 465, 467, 569, 579, 591, 593, 594, 596, 597, 608, 632, 635, 636, 641, 645, 648, 649, 656, 658], "execut": [29, 593, 601, 606, 611, 630, 638, 639, 644, 654], "full": [29, 62, 163, 164, 373, 479, 591, 593, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643], "permiss": 29, "secur": 29, "do": [29, 45, 74, 160, 165, 199, 200, 377, 378, 462, 491, 589, 591, 593, 594, 605, 634, 635, 647, 648, 649, 651, 652, 655, 656, 658], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 127, 131, 133, 140, 147, 152, 155, 157, 166, 167, 170, 174, 176, 183, 190, 195, 229, 242, 378, 379, 381, 392, 394, 402, 413, 434, 439, 440, 441, 447, 450, 464, 471, 473, 474, 564, 565, 583, 588, 589, 593, 594, 596, 599, 619, 641, 642, 643, 645, 652, 656], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 141, 142, 160, 184, 185, 372, 381, 450, 460, 462, 464, 468, 469, 471, 473, 491, 550, 585, 587, 589, 593, 594, 595, 596, 597, 634, 635, 648, 651, 653, 655, 656], "home": [29, 591, 594, 599, 605, 656, 658], "make": [29, 31, 450, 538, 542, 544, 545, 587, 588, 589, 591, 592, 593, 594, 595, 597, 608, 615, 624, 634, 641, 645, 647, 648, 655, 656, 658], "adjust": [29, 122, 232, 291, 324, 357, 589, 593, 613, 616, 624, 635], "login": 29, "": [29, 31, 45, 58, 62, 74, 119, 120, 122, 125, 161, 162, 166, 167, 205, 207, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 265, 267, 277, 284, 288, 289, 294, 296, 306, 316, 321, 322, 327, 329, 339, 349, 354, 355, 386, 387, 393, 397, 398, 403, 405, 407, 412, 424, 426, 427, 433, 435, 436, 439, 440, 441, 443, 445, 448, 450, 462, 475, 479, 491, 565, 569, 585, 586, 587, 588, 589, 591, 593, 595, 596, 604, 605, 608, 613, 615, 616, 625, 632, 634, 635, 637, 641, 645, 647, 648, 649, 651, 652, 653, 657], "also": [29, 45, 74, 131, 174, 202, 218, 241, 256, 278, 307, 340, 370, 371, 375, 377, 379, 391, 401, 405, 424, 433, 462, 491, 585, 586, 587, 588, 589, 591, 593, 594, 604, 608, 634, 635, 645, 647, 651, 653, 655, 656, 657, 658], "shell": 29, "session": 29, "modif": [29, 47, 464, 593], "last": [29, 45, 74, 160, 217, 218, 224, 228, 229, 230, 241, 246, 248, 249, 256, 258, 260, 262, 277, 278, 284, 288, 289, 306, 307, 316, 317, 321, 322, 325, 339, 340, 349, 350, 354, 355, 462, 491, 588, 589, 591, 592, 593, 609, 635, 653], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 155, 156, 157, 161, 162, 167, 242, 470, 478, 486, 490, 504, 507, 514, 518, 585, 587, 588, 589, 591, 593, 594, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645, 656], "interact": [30, 585, 588], "weather": [30, 119, 160, 412, 439, 587, 589, 593, 594, 604, 613, 645, 647, 648, 649, 651, 652, 653, 656], "time": [31, 39, 40, 45, 74, 160, 205, 207, 217, 219, 224, 228, 229, 230, 265, 267, 277, 279, 284, 288, 289, 294, 296, 306, 308, 316, 317, 321, 322, 327, 329, 339, 341, 349, 350, 354, 355, 362, 363, 373, 375, 376, 405, 408, 414, 434, 436, 450, 458, 459, 462, 491, 559, 562, 585, 586, 587, 589, 591, 593, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 647, 653, 658], "origin_latitud": [31, 450], "origin_longitud": [31, 450], "origin_altitud": [31, 450], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 203, 205, 214, 217, 219, 222, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 263, 265, 274, 277, 279, 282, 284, 287, 288, 289, 291, 292, 294, 303, 306, 308, 311, 314, 316, 320, 321, 322, 324, 325, 327, 336, 339, 341, 344, 347, 349, 353, 354, 355, 357, 405, 409, 410, 411, 412, 413, 414, 424, 433, 436, 437, 445, 450, 456, 458, 474, 482, 510, 538, 585, 587, 588, 589, 597, 608, 614, 615, 624, 625, 632, 634, 635], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 155, 157, 166, 167, 215, 275, 304, 337, 367, 377, 378, 409, 410, 411, 412, 413, 414, 416, 419, 424, 427, 430, 431, 432, 433, 436, 450, 456, 458, 462, 474, 482, 491, 510, 538, 599, 622, 624, 625, 634, 635, 648], "radar_latitud": [31, 450, 566, 578], "radar_longitud": [31, 450, 566, 578], "radar_altitud": [31, 450], "radar_tim": [31, 450], "radar_nam": [31, 450], "store": [31, 45, 74, 160, 161, 162, 381, 414, 419, 450, 462, 491, 585, 587, 589, 593, 604, 632, 645, 648, 651, 653, 658], "rectilinear": [31, 450], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 367, 404, 405, 412, 413, 414, 450, 452, 458, 462, 491, 602, 607, 611, 614, 645, 646, 654], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 376, 404, 405, 407, 412, 414, 450, 452, 458, 462, 473, 491, 538, 555, 585, 587, 588, 589, 593, 598, 602, 605, 607, 608, 609, 610, 632, 645, 651, 653], "section": [31, 45, 47, 74, 217, 242, 277, 306, 339, 414, 450, 462, 464, 491, 557, 558, 585, 589, 590, 592, 593, 594, 602, 612, 630, 634, 635, 645, 654, 656], "To": [31, 47, 165, 198, 199, 200, 201, 375, 376, 378, 450, 464, 582, 587, 594, 596, 635, 645, 648, 651, 655, 656, 658], "creat": [31, 42, 45, 47, 50, 74, 160, 161, 162, 163, 165, 198, 199, 200, 201, 202, 203, 216, 230, 233, 249, 263, 276, 289, 292, 305, 317, 322, 325, 338, 350, 355, 370, 375, 376, 377, 378, 379, 413, 414, 443, 448, 450, 460, 462, 464, 467, 491, 576, 577, 579, 585, 589, 591, 593, 594, 599, 600, 602, 605, 608, 609, 610, 612, 613, 615, 629, 630, 634, 635, 643, 645, 646, 648, 651, 654, 656], "legaci": [31, 419, 450], "from_legacy_paramet": [31, 450], "ax": [31, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 356, 357, 409, 410, 411, 424, 433, 437, 445, 450, 585, 586, 587, 588, 589, 591, 593, 599, 600, 604, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 637, 641, 649], "moment": [31, 39, 45, 74, 117, 159, 160, 161, 162, 165, 199, 200, 369, 370, 371, 414, 444, 450, 458, 462, 491, 534, 565, 588, 593, 605, 612, 630, 645, 652, 654], "describ": [31, 45, 74, 165, 198, 199, 200, 201, 243, 257, 433, 450, 462, 491, 591, 634, 635], "geograph": [31, 45, 56, 74, 121, 122, 123, 124, 125, 292, 317, 325, 350, 376, 414, 450, 462, 473, 491, 589, 645], "origin": [31, 39, 160, 161, 162, 203, 263, 292, 325, 373, 375, 376, 381, 383, 412, 414, 433, 450, 458, 557, 558, 585, 586, 587, 589, 593, 594, 608, 609, 610, 633, 634, 635, 656], "distanc": [31, 39, 57, 119, 120, 217, 228, 277, 288, 306, 321, 339, 354, 405, 406, 409, 410, 411, 413, 414, 422, 436, 441, 450, 458, 474, 556, 557, 558, 566, 567, 568, 578, 585, 586, 587, 608, 617, 622, 623, 624], "axi": [31, 39, 45, 74, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 307, 308, 309, 310, 311, 312, 316, 317, 319, 320, 321, 322, 324, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 357, 367, 377, 450, 458, 462, 491, 585, 588, 589, 599, 614, 625, 634, 637, 653], "dimension": [31, 39, 160, 162, 412, 433, 445, 450, 458, 608, 634, 635], "space": [31, 45, 74, 123, 219, 279, 308, 341, 378, 414, 424, 433, 436, 450, 462, 491, 585, 588, 605, 634, 647], "along": [31, 161, 164, 242, 245, 246, 247, 248, 259, 260, 261, 262, 450, 556, 557, 558, 567, 568, 579, 581, 587, 588, 589, 593, 634, 641], "three": [31, 162, 165, 200, 377, 433, 445, 450, 588, 596, 634, 635], "repeat": [31, 450], "throughout": [31, 450], "nz": [31, 450], "nx": [31, 450], "ny": [31, 450], "dimens": [31, 160, 367, 414, 418, 419, 424, 433, 434, 436, 439, 441, 445, 450, 555, 579, 585, 588, 589, 593, 632, 634, 635, 647, 651, 653], "transform": [31, 45, 74, 121, 122, 123, 124, 125, 222, 229, 282, 292, 311, 325, 344, 350, 376, 414, 450, 462, 491, 587, 589, 593, 613, 634, 635], "proj": [31, 45, 74, 121, 123, 124, 255, 325, 450, 462, 491, 593], "pyart_aeqd": [31, 45, 74, 121, 123, 124, 450, 462, 491], "nativ": [31, 45, 74, 121, 123, 124, 361, 414, 419, 450, 462, 491, 593], "azimuth": [31, 45, 51, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 203, 204, 217, 219, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 264, 277, 279, 282, 284, 288, 289, 292, 293, 306, 308, 311, 316, 317, 321, 322, 325, 326, 339, 341, 344, 349, 350, 354, 355, 373, 377, 419, 441, 447, 448, 450, 462, 468, 472, 474, 484, 491, 512, 556, 557, 558, 564, 566, 567, 582, 588, 589, 593, 594, 627, 629, 632, 647, 653, 656], "equidist": [31, 45, 74, 121, 122, 123, 124, 125, 222, 282, 311, 344, 350, 377, 414, 450, 462, 491, 589], "pyproj": [31, 45, 74, 121, 123, 124, 450, 462, 491, 593, 655], "projparam": [31, 34, 45, 74, 121, 123, 124, 450, 453, 462, 491], "special": [31, 45, 74, 450, 462, 491, 589], "_include_lon_0_lat_0": [31, 45, 74, 450, 462, 491], "remov": [31, 45, 56, 57, 74, 155, 156, 157, 160, 165, 198, 199, 200, 201, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 382, 388, 389, 395, 399, 400, 424, 433, 450, 462, 473, 474, 491, 587, 589, 593, 594, 599, 609, 615, 624, 634, 649, 652, 656], "interpret": [31, 45, 74, 161, 162, 376, 450, 462, 491, 570, 571, 589], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 247, 248, 255, 257, 259, 261, 262, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 414, 450, 452, 455, 458, 462, 473, 491, 556, 566, 567, 568, 578, 585, 587, 588, 589, 602, 603, 606, 614, 621, 628, 632, 634, 635, 647, 648, 653, 654], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 246, 247, 255, 257, 259, 260, 261, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 414, 450, 452, 455, 458, 462, 473, 491, 556, 566, 567, 568, 578, 585, 587, 588, 589, 602, 603, 606, 614, 621, 628, 632, 634, 635, 647, 648, 653, 654], "ad": [31, 45, 47, 74, 164, 166, 167, 249, 315, 348, 413, 424, 433, 450, 462, 464, 491, 586, 588, 591, 593, 594, 624, 625, 647, 648, 655, 656], "lon_0": [31, 45, 74, 122, 125, 317, 350, 450, 462, 491, 621], "lat_0": [31, 45, 74, 122, 125, 317, 350, 450, 462, 491, 621], "get_projparam": [31, 450], "evalu": [31, 381, 383, 428, 450, 591, 593], "locat": [31, 33, 45, 55, 56, 57, 74, 203, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 292, 306, 307, 308, 311, 312, 314, 316, 317, 318, 319, 321, 322, 325, 339, 340, 341, 344, 345, 347, 349, 350, 351, 352, 354, 355, 369, 370, 372, 378, 405, 412, 413, 414, 450, 452, 462, 472, 473, 474, 491, 538, 550, 556, 566, 567, 568, 585, 586, 587, 589, 591, 593, 594, 619, 621, 632, 641, 642, 643, 645, 651, 655, 656], "up": [31, 45, 74, 131, 133, 140, 147, 152, 156, 157, 174, 176, 183, 190, 195, 416, 419, 427, 430, 431, 442, 450, 462, 491, 555, 586, 587, 591, 592, 593, 596, 634, 649, 653, 657], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 242, 373, 379, 434, 450, 462, 477, 478, 489, 490, 491, 506, 507, 517, 518, 560, 585, 586, 587, 588, 589, 591, 594, 604, 613, 614, 624, 625, 645, 647, 656, 657], "collect": [31, 140, 152, 183, 195, 363, 369, 370, 371, 373, 404, 413, 414, 450, 588, 589, 594, 604, 618, 632, 645, 656, 657, 658], "nradar": [31, 450], "whose": [31, 372, 411, 450, 585], "wa": [31, 56, 57, 140, 161, 162, 183, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 450, 473, 474, 569, 585, 587, 589, 591, 593, 645, 658], "projection_proj": [31, 450], "instanc": [31, 42, 48, 160, 161, 162, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 378, 379, 419, 450, 465, 569, 573, 577, 587, 589, 593], "valueerror": [31, 32, 46, 47, 450, 451, 463, 464, 589], "point_z": [31, 376, 450], "point_x": [31, 376, 450], "point_i": [31, 376, 450], "func": [31, 450, 588, 593], "init_point_x_y_z": [31, 450], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 450, 455, 456, 462, 473, 481, 482, 483, 491, 509, 510, 511, 652], "point_latitud": [31, 376, 450], "point_longitud": [31, 376, 450], "perform": [31, 45, 56, 57, 58, 74, 131, 133, 140, 147, 152, 159, 160, 161, 162, 164, 174, 176, 183, 190, 195, 217, 222, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 282, 284, 287, 288, 289, 306, 311, 316, 317, 320, 321, 322, 325, 339, 344, 349, 350, 353, 354, 355, 369, 372, 377, 433, 439, 450, 462, 473, 474, 475, 491, 582, 588, 589, 598, 599, 600, 602, 609, 610, 614, 645], "invers": [31, 45, 74, 447, 450, 462, 491, 585], "rel": [31, 45, 74, 156, 198, 229, 315, 348, 450, 462, 491, 585, 593, 594, 635, 653, 656], "init_point_longitude_latitud": [31, 450], "point_altitud": [31, 35, 376, 450, 454], "init_point_altitud": [31, 450], "init": [31, 233, 249, 381, 450, 566, 593], "field_dict": [32, 451], "replace_exist": [32, 46, 47, 48, 451, 463, 464, 465, 591, 593, 594, 634, 635, 641, 648, 649, 656], "add": [32, 46, 47, 163, 167, 217, 219, 224, 227, 228, 229, 230, 242, 243, 244, 246, 248, 255, 257, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 451, 463, 464, 586, 587, 588, 593, 594, 608, 613, 614, 615, 624, 625, 627, 632, 634, 635, 636, 641, 649, 655, 656, 658], "replac": [32, 46, 47, 48, 131, 133, 140, 147, 152, 161, 162, 174, 176, 183, 190, 195, 451, 463, 464, 465, 584, 593], "overwrit": [32, 451], "alreadi": [32, 46, 47, 451, 463, 464], "level": [33, 39, 41, 42, 45, 62, 74, 156, 157, 237, 238, 239, 240, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 369, 370, 371, 377, 378, 436, 445, 447, 452, 458, 462, 479, 491, 565, 585, 587, 588, 593, 594, 624, 625, 628, 633, 642, 645, 651, 653, 656], "height": [33, 39, 41, 42, 156, 157, 198, 244, 258, 317, 350, 414, 417, 424, 433, 434, 442, 445, 447, 448, 452, 458, 577, 585, 588, 589, 591, 593, 594, 613, 622, 632, 637, 652, 656], "determin": [33, 45, 74, 160, 161, 162, 242, 244, 246, 248, 255, 258, 260, 262, 317, 350, 358, 361, 369, 370, 373, 378, 379, 418, 424, 426, 427, 428, 430, 431, 433, 445, 447, 452, 462, 491, 564, 565, 572, 577, 580, 588, 589, 594, 634, 641, 656], "same": [33, 45, 47, 55, 56, 57, 74, 122, 125, 133, 147, 160, 176, 190, 229, 317, 350, 367, 373, 377, 378, 379, 414, 424, 433, 436, 442, 452, 462, 464, 472, 473, 474, 491, 566, 578, 582, 585, 589, 594, 604, 624, 625, 634, 635, 647, 652, 656, 658], "interpol": [33, 57, 120, 123, 217, 224, 228, 229, 230, 242, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 363, 369, 413, 414, 434, 441, 442, 447, 452, 474, 577, 589, 593, 594, 605, 634, 635, 651, 656], "extrapol": [33, 120, 123, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 452, 589], "boundari": [33, 120, 123, 164, 235, 236, 255, 350, 441, 452, 589, 636], "center": [33, 45, 57, 74, 119, 120, 122, 123, 125, 161, 217, 222, 224, 228, 229, 230, 243, 245, 246, 247, 248, 257, 258, 259, 260, 261, 262, 277, 282, 284, 288, 289, 292, 306, 311, 316, 317, 321, 322, 339, 344, 349, 350, 354, 355, 369, 371, 409, 410, 411, 452, 462, 474, 491, 538, 555, 585, 587, 588, 589, 591, 613, 641, 649, 653], "2d": [33, 55, 56, 57, 120, 367, 377, 438, 441, 452, 472, 473, 474, 555, 585, 589, 608, 653], "point_": [36, 37, 455, 456], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 141, 142, 184, 185, 406, 408, 447, 457, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 585, 589, 594, 656], "xarrai": [39, 233, 242, 244, 458, 556, 568, 585, 593, 628, 632, 641, 645, 655], "netcdf4": [40, 370, 375, 376, 459, 585, 586, 593, 622, 645, 647, 655, 658], "arm_time_vari": [40, 375, 376, 459], "arm_alt_lat_lon_vari": [40, 376, 459], "save": [40, 205, 217, 219, 224, 228, 229, 230, 237, 250, 265, 277, 279, 284, 288, 289, 294, 306, 308, 316, 317, 321, 322, 327, 339, 341, 349, 350, 354, 355, 376, 378, 459, 589, 591, 645, 646], "netcdf4_class": [40, 375, 376, 459], "netcdf3_class": [40, 375, 376, 459], "netcdf3_64bit": [40, 375, 376, 459], "base_tim": [40, 375, 376, 459, 588, 632], "time_offset": [40, 375, 376, 459, 588, 632], "alt": [40, 56, 376, 459, 473, 588, 589, 593], "lat": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 459, 473, 585, 588, 589, 593, 614, 615, 628, 651], "lon": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 459, 473, 585, 588, 589, 593, 615, 628], "speed": [41, 42, 414, 447, 448, 555, 588, 589, 591, 594, 637, 656], "direct": [41, 62, 373, 439, 447, 448, 479, 593, 594, 637, 656], "horizont": [41, 42, 43, 44, 45, 74, 155, 158, 159, 160, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 362, 363, 447, 462, 491, 577, 587, 588, 591, 593, 594, 615, 625, 642, 653, 656], "wind": [41, 42, 43, 44, 160, 161, 362, 363, 447, 448, 577, 587, 588, 589, 591, 593, 594, 637, 656], "profil": [41, 160, 362, 363, 434, 440, 441, 442, 443, 556, 577, 593, 594, 600, 602, 631, 638, 654, 656], "1d": [41, 42, 120, 123, 438, 585, 593, 653], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 203, 263, 292, 314, 317, 325, 347, 350, 405, 406, 408, 409, 410, 411, 412, 413, 414, 417, 424, 433, 436, 439, 442, 445, 447, 473, 474, 475, 538, 566, 578, 588, 589, 593, 594, 608, 637, 651, 653, 656], "abov": [41, 42, 45, 47, 74, 129, 143, 155, 156, 157, 160, 163, 164, 165, 166, 167, 172, 186, 198, 199, 200, 201, 222, 223, 282, 283, 311, 312, 344, 345, 358, 414, 417, 424, 433, 447, 462, 464, 491, 556, 565, 567, 568, 585, 586, 587, 588, 593, 594, 596, 602, 608, 623, 625, 631, 637, 638, 641, 645, 647, 649, 654, 656, 658], "sea": [41, 42, 45, 74, 447, 462, 491, 588, 593, 594, 656], "were": [41, 42, 131, 133, 140, 174, 176, 183, 447, 587, 589, 591, 594, 656], "sampl": [41, 42, 447, 448, 449, 542, 544, 545, 565, 585, 587, 588, 593, 594, 604, 605, 613, 633, 636, 637, 645, 656], "per": [41, 42, 43, 44, 58, 160, 414, 447, 475, 539, 540, 541, 594, 656], "second": [41, 42, 43, 44, 47, 58, 119, 160, 373, 381, 405, 441, 447, 464, 475, 564, 574, 575, 585, 588, 591, 594, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 652, 653, 656], "north": [41, 45, 74, 242, 244, 255, 317, 350, 462, 491, 556, 568, 585, 588, 589, 617, 653], "east": [41, 217, 228, 242, 277, 288, 306, 321, 339, 354, 556, 568, 585, 588, 589, 617], "u_wind": [41, 42, 447, 448, 594, 637, 656], "compon": [41, 42, 43, 44, 588, 594, 656], "v_wind": [41, 42, 447, 448, 594, 637, 656], "classmethod": 42, "_rang": [45, 74, 422, 462, 491], "scan_typ": [45, 74, 203, 216, 263, 276, 292, 305, 325, 338, 462, 491, 653], "sweep_numb": [45, 74, 462, 491, 588, 593, 622, 647, 653], "sweep_mod": [45, 74, 462, 491, 588, 593, 647, 653], "fixed_angl": [45, 74, 203, 263, 292, 325, 462, 491, 588, 593, 622, 623, 627, 647, 653], "sweep_start_ray_index": [45, 74, 462, 491, 588, 647, 653], "sweep_end_ray_index": [45, 74, 462, 491, 588, 647, 653], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 203, 217, 219, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 373, 441, 462, 469, 474, 485, 491, 513, 558, 564, 572, 585, 588, 589, 591, 593, 608, 633, 647, 653], "altitude_agl": [45, 74, 462, 491, 588, 653], "target_scan_r": [45, 74, 462, 491, 593, 653], "rays_are_index": [45, 74, 462, 491], "ray_angle_r": [45, 74, 462, 491], "scan_rat": [45, 74, 379, 462, 491, 593, 653], "antenna_transit": [45, 56, 57, 74, 140, 152, 183, 195, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 462, 473, 474, 491, 589, 653], "instrument_paramet": [45, 74, 160, 379, 462, 491, 588, 591, 649, 653], "radar_calibr": [45, 74, 462, 491, 653], "rotat": [45, 74, 203, 462, 491], "tilt": [45, 74, 203, 229, 317, 350, 443, 462, 491, 589, 593, 605, 621, 628], "roll": [45, 74, 203, 373, 462, 491, 576, 581], "drift": [45, 74, 203, 462, 491], "pitch": [45, 74, 203, 462, 491], "georefs_appli": [45, 74, 462, 491], "antenna": [45, 56, 57, 74, 119, 120, 140, 152, 183, 195, 198, 201, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 419, 462, 473, 474, 491, 589, 593, 598, 602, 607, 608, 609, 610, 645, 651, 653], "structur": [45, 74, 379, 433, 445, 462, 491, 604, 634, 635, 652], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 127, 161, 162, 165, 170, 198, 199, 200, 201, 230, 289, 322, 355, 377, 411, 413, 414, 424, 433, 439, 462, 467, 468, 469, 471, 472, 473, 474, 475, 491, 569, 587, 588, 589, 593, 594, 598, 601, 602, 604, 641, 645, 649, 652, 653, 654, 656], "global": [45, 74, 462, 491, 585, 653, 655], "4": [45, 74, 119, 120, 364, 367, 412, 416, 442, 462, 491, 585, 586, 587, 588, 592, 594, 604, 605, 613, 622, 623, 624, 625, 627, 628, 634, 635, 637, 641, 645, 652, 656], "repres": [45, 74, 160, 438, 462, 491, 539, 540, 582, 593, 635], "under": [45, 74, 160, 161, 162, 414, 462, 491, 593, 594, 634, 635, 645, 655, 656], "sub": [45, 74, 462, 491, 585, 593], "convent": [45, 74, 160, 462, 491, 585, 588, 589, 604, 645, 653], "meta_group": [45, 74, 462, 491, 653], "scan": [45, 74, 117, 160, 161, 162, 163, 203, 216, 217, 219, 230, 263, 276, 277, 279, 289, 292, 305, 306, 308, 322, 325, 338, 339, 341, 355, 369, 419, 462, 491, 534, 539, 540, 564, 566, 572, 577, 582, 585, 586, 587, 588, 593, 605, 608, 618, 619, 629], "ppi": [45, 74, 161, 162, 163, 164, 216, 220, 224, 276, 280, 284, 305, 309, 316, 317, 338, 342, 349, 350, 441, 462, 491, 539, 540, 543, 546, 548, 557, 558, 564, 585, 586, 589, 593, 602, 612, 615, 616, 628, 630, 640, 642, 644, 645, 653, 654], "rhi": [45, 74, 216, 217, 228, 276, 277, 288, 305, 306, 321, 338, 339, 354, 441, 462, 491, 540, 549, 557, 558, 564, 586, 593, 602, 612, 630, 645, 653, 654], "sector": [45, 74, 462, 491, 585, 593, 653], "multipl": [45, 74, 462, 491, 586, 587, 593, 594, 602, 607, 612, 624, 630, 652, 654, 656, 658], "mode": [45, 62, 74, 360, 462, 479, 491, 585, 588, 593, 594, 653, 655, 656], "ground": [45, 74, 419, 462, 491, 588, 589, 604], "target": [45, 74, 377, 462, 491, 542, 544, 545, 546, 547, 548, 549, 556, 566, 567, 568, 578, 588, 653], "angl": [45, 51, 52, 74, 119, 120, 203, 217, 229, 263, 277, 292, 306, 325, 339, 441, 443, 462, 468, 469, 491, 551, 552, 553, 554, 556, 557, 558, 564, 566, 567, 574, 575, 582, 585, 588, 593, 627, 629, 637, 647, 653], "thr": [45, 74, 462, 491], "index": [45, 60, 74, 89, 165, 200, 230, 244, 246, 248, 258, 260, 262, 289, 322, 355, 377, 405, 419, 443, 462, 477, 491, 506, 585, 587, 588, 589, 591, 593, 646], "rays_per_sweep": [45, 66, 74, 94, 462, 483, 491, 511, 539, 540], "upon": [45, 74, 165, 198, 199, 200, 201, 462, 491, 587, 591, 593], "prior": [45, 47, 74, 164, 166, 167, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 373, 462, 464, 491, 589, 596, 605, 645], "init_rays_per_sweep": [45, 74, 462, 491], "intend": [45, 74, 462, 491], "rate": [45, 74, 416, 424, 426, 427, 428, 429, 430, 431, 432, 433, 462, 491, 593, 634, 635], "whether": [45, 74, 131, 174, 412, 462, 491, 588, 589, 652], "regular": [45, 74, 378, 462, 491, 589, 613], "angular": [45, 74, 462, 491, 555, 574, 575], "resolut": [45, 74, 217, 219, 220, 224, 225, 228, 229, 230, 255, 277, 279, 280, 284, 285, 288, 289, 306, 308, 309, 316, 317, 318, 321, 322, 339, 341, 342, 349, 350, 351, 354, 355, 369, 424, 433, 439, 445, 462, 491, 587, 588, 589, 605, 618, 621, 641, 642, 649, 651, 652], "express": [45, 74, 462, 491], "360": [45, 74, 163, 164, 318, 351, 462, 491, 564, 593, 605, 606, 637, 647, 653, 654], "represent": [45, 74, 462, 491], "forbidden": [45, 74, 462, 491], "plane": [45, 74, 377, 462, 491, 585, 653], "180": [45, 74, 122, 462, 491, 564, 585, 587, 588, 594, 635, 647, 656], "gate_z": [45, 57, 74, 462, 474, 491], "gate_x": [45, 57, 74, 462, 474, 491], "gate_i": [45, 57, 74, 462, 474, 491], "system": [45, 74, 121, 122, 123, 166, 167, 360, 369, 377, 407, 412, 462, 491, 593, 594, 655, 656], "assum": [45, 74, 119, 120, 160, 163, 436, 439, 441, 442, 462, 491, 564, 587, 591], "earth": [45, 74, 119, 120, 122, 125, 462, 491, 566, 578, 585, 589], "radiu": [45, 74, 119, 120, 122, 125, 409, 410, 411, 412, 413, 414, 424, 433, 445, 462, 491, 566, 578, 634, 651], "model": [45, 74, 119, 120, 161, 370, 376, 462, 491, 588, 636], "init_gate_x_y_z": [45, 74, 462, 491], "gate_latitud": [45, 56, 64, 74, 92, 462, 473, 481, 491, 509, 585], "gate_longitud": [45, 56, 64, 74, 92, 462, 473, 481, 491, 509, 585, 647], "init_gate_longitude_latitud": [45, 74, 462, 491, 647], "gate_altitud": [45, 56, 63, 74, 91, 462, 473, 480, 491, 508, 585], "init_gate_altitud": [45, 74, 462, 491, 647], "actual": [45, 74, 373, 377, 412, 462, 491, 658], "flag": [45, 74, 160, 263, 373, 440, 441, 443, 445, 462, 491, 572, 585, 593, 658], "transit": [45, 56, 57, 74, 140, 152, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 440, 462, 473, 474, 491, 589, 593], "ye": [45, 74, 160, 462, 491], "about": [45, 74, 462, 491, 585, 587, 592, 593], "aircraft": [45, 74, 229, 373, 462, 491, 556], "longitudin": [45, 74, 229, 240, 248, 252, 253, 262, 462, 491], "vertic": [45, 74, 159, 160, 217, 218, 219, 224, 228, 229, 230, 238, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 377, 436, 443, 462, 491, 556, 572, 582, 585, 587, 593, 625, 636, 637, 642], "orthogon": [45, 74, 462, 491], "platform": [45, 74, 462, 491, 585, 596], "right": [45, 74, 462, 491, 587, 590, 591, 593, 613, 614, 645], "wing": [45, 74, 462, 491], "down": [45, 74, 462, 491, 583, 587], "track": [45, 74, 462, 491, 585, 589], "compass": [45, 74, 462, 491], "clockwis": [45, 74, 462, 491], "nose": [45, 74, 462, 491, 593], "had": [45, 74, 378, 462, 491, 593, 604, 658], "georefer": [45, 74, 462, 491], "lead": [45, 74, 462, 491, 589, 608], "centric": [45, 74, 462, 491], "avaiabl": [45, 74, 462, 491], "radar_paramet": [45, 74, 462, 491, 588], "subconvent": [45, 74, 462, 491], "calibr": [45, 74, 426, 462, 491, 588], "ngate": [45, 55, 74, 462, 472, 491, 539, 540, 541, 585, 593, 647, 653], "nrai": [45, 55, 74, 422, 462, 472, 491, 541, 567, 593, 647, 653], "nsweep": [45, 74, 462, 491, 539, 540, 622, 623, 637, 653], "loos": [46, 47, 463, 464], "existing_field_nam": [47, 464], "note": [47, 119, 131, 133, 140, 147, 152, 160, 164, 174, 176, 183, 190, 195, 244, 317, 364, 367, 368, 378, 436, 439, 447, 464, 564, 586, 589, 593, 594, 604, 605, 615, 634, 635, 655, 656], "made": [47, 375, 418, 464, 582, 586, 588, 589, 594, 595, 656], "done": [47, 160, 164, 445, 464, 594, 596, 647, 655, 656, 658], "both": [47, 160, 165, 200, 361, 436, 437, 464, 585, 589, 593, 594, 605, 608, 610, 614, 629, 635, 645, 651, 652, 655, 656], "numpi": [47, 133, 147, 176, 190, 464, 585, 587, 588, 589, 591, 593, 594, 596, 599, 608, 609, 613, 616, 621, 624, 625, 627, 632, 634, 635, 636, 637, 645, 647, 648, 649, 651, 652, 653, 655, 656, 658], "see": [47, 120, 127, 160, 170, 216, 230, 242, 245, 247, 255, 259, 261, 276, 289, 305, 317, 322, 338, 350, 355, 367, 375, 376, 414, 424, 433, 436, 445, 464, 585, 587, 589, 591, 593, 594, 604, 605, 613, 634, 635, 645, 647, 649, 651, 652, 656], "how": [47, 373, 375, 376, 464, 585, 586, 587, 588, 589, 591, 593, 595, 604, 605, 613, 614, 615, 645, 648, 651, 652, 658], "reflectivity_copi": [47, 464], "gatefilt": [48, 155, 156, 157, 160, 161, 162, 163, 164, 165, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 405, 413, 414, 419, 439, 440, 441, 443, 447, 448, 465, 585, 587, 589, 591, 593, 594, 600, 608, 609, 610, 614, 633, 641, 646, 649, 656], "updat": [48, 465, 564, 586, 590, 591, 593, 594, 615, 634, 645, 656], "mask": [48, 131, 133, 136, 140, 147, 151, 152, 160, 161, 162, 163, 165, 174, 176, 179, 183, 190, 194, 195, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 369, 370, 371, 414, 419, 442, 465, 569, 589, 593, 599, 608, 609, 634, 635, 641, 646, 647, 648, 653], "filter": [48, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 164, 165, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 405, 413, 414, 418, 439, 440, 441, 465, 585, 587, 589, 591, 593, 600, 608, 609, 610, 614, 633, 641, 649, 652], "equal": [48, 121, 123, 124, 132, 133, 138, 146, 147, 150, 161, 175, 176, 181, 189, 190, 193, 350, 367, 378, 445, 447, 465, 564, 589, 616, 634, 635, 636, 652], "condit": [48, 127, 131, 133, 140, 147, 152, 160, 170, 174, 176, 183, 190, 195, 378, 428, 465, 585, 600, 648, 652], "append": [48, 465, 591, 593, 637], "filtered_": [48, 465], "prefix": [48, 460, 465], "check": [49, 58, 77, 161, 162, 163, 164, 372, 418, 442, 466, 475, 494, 566, 578, 582, 587, 588, 591, 593, 594, 596, 645, 655, 656, 657], "keyerror": [49, 77, 388, 389, 399, 400, 466, 494, 655], "array_lik": [50, 467, 571], "view": [51, 52, 54, 381, 386, 387, 393, 397, 398, 403, 468, 469, 471, 585, 614, 649, 651, 653], "possibl": [51, 52, 54, 373, 468, 469, 471, 565, 589, 591, 593, 597, 613, 634, 635, 649, 651], "underli": [51, 52, 54, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 468, 469, 471, 589, 645], "get_gate_x_y_z": [54, 471, 624, 625], "obtain": [54, 57, 471, 474, 594, 637, 647, 656], "plot": [54, 57, 202, 203, 204, 205, 206, 207, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 443, 448, 471, 474, 585, 586, 593, 599, 600, 604, 605, 608, 609, 610, 630, 631, 632, 634, 635, 638, 640, 641, 644, 645, 647, 648, 649, 651, 652, 654], "correct": [54, 57, 170, 198, 199, 200, 201, 367, 434, 439, 471, 474, 543, 585, 587, 591, 593, 594, 597, 600, 601, 605, 615, 636, 641, 645, 649, 654, 656], "spatial": [54, 57, 160, 471, 474, 585, 651], "context": [54, 57, 471, 474, 587, 632], "request": [54, 123, 369, 413, 414, 437, 471, 589, 593, 594, 595, 596, 645, 656], "area": [55, 217, 219, 224, 228, 229, 230, 231, 277, 279, 284, 288, 289, 290, 306, 308, 316, 317, 321, 322, 323, 339, 341, 349, 350, 354, 355, 356, 441, 445, 472, 569, 585, 587, 589, 591], "squar": [55, 418, 436, 439, 447, 472], "assumpt": [55, 439, 472], "size": [55, 157, 160, 161, 163, 164, 199, 220, 280, 309, 342, 411, 413, 414, 418, 424, 432, 433, 439, 441, 472, 555, 581, 588, 615, 628, 634, 635], "m": [55, 58, 162, 198, 201, 205, 265, 294, 327, 412, 418, 422, 426, 433, 436, 438, 439, 440, 443, 445, 472, 475, 555, 556, 569, 579, 585, 587, 588, 589, 591, 593, 594, 596, 604, 616, 625, 634, 635, 637, 641, 645, 655, 656], "reset_gate_coord": [56, 473], "filter_transit": [56, 57, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 473, 474, 589], "With": [56, 57, 473, 474, 645, 646, 647], "therefor": [56, 57, 439, 473, 474, 585, 649, 653], "more": [56, 57, 62, 161, 164, 377, 412, 413, 414, 419, 424, 433, 445, 473, 474, 479, 557, 558, 585, 586, 587, 588, 589, 590, 593, 594, 608, 613, 624, 625, 645, 649, 653, 656], "effici": [56, 57, 413, 473, 474, 645, 649], "than": [56, 57, 161, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 424, 433, 439, 473, 474, 564, 569, 587, 588, 589, 634, 658], "through": [56, 57, 242, 438, 473, 474, 588, 589, 591, 592, 594, 608, 613, 656], "No": [56, 57, 162, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 377, 414, 473, 474, 589], "get_field": [57, 474, 624, 625], "check_uniform": [58, 475], "lookuperror": [58, 475], "except": [58, 377, 394, 475, 589, 593, 651], "skip": [58, 161, 162, 372, 418, 475, 587, 593, 594, 656], "nyquist_veloc": [58, 161, 162, 379, 475, 588, 591, 649, 653], "slice": [59, 71, 88, 99, 245, 246, 247, 248, 259, 260, 261, 262, 476, 488, 505, 516, 628, 651, 653], "_io": [62, 479], "textiowrapp": [62, 479], "encod": [62, 378, 479, 593], "utf": [62, 479], "compact": [62, 479], "c": [62, 119, 122, 125, 155, 157, 159, 160, 162, 255, 350, 426, 428, 435, 439, 440, 441, 443, 448, 479, 543, 585, 589, 591, 593, 594, 608, 635, 645, 648, 651, 655, 656, 658], "f": [62, 255, 350, 392, 402, 479, 585, 586, 587, 588, 589, 591, 605, 613, 627, 634, 635, 645, 658], "minim": [62, 439, 445, 479], "everyth": [62, 479, 589, 594, 605, 656], "screen": [62, 479], "gate_": [65, 93, 482, 510], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 392, 402, 439, 441, 484, 485, 486, 487, 488, 489, 490, 512, 513, 514, 515, 516, 517, 518, 591, 653], "over": [69, 72, 73, 97, 100, 101, 160, 161, 198, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 424, 433, 486, 489, 490, 514, 517, 518, 565, 585, 589, 591, 593, 608, 634, 635, 637, 645, 648, 653], "npulses_max": [74, 491, 541], "velocity_bin": [74, 491], "simpl": [117, 405, 534, 593, 648, 649], "vpt": [117, 208, 216, 230, 268, 276, 289, 297, 305, 322, 330, 338, 355, 534, 572, 588, 593], "mean": [117, 119, 447, 534, 551, 552, 565, 570, 574, 575, 585, 588, 593, 594, 597, 604, 605, 652, 653, 656], "kilomet": [119, 424, 433], "equat": [119, 439, 565, 585, 593], "28": [119, 585, 587, 589, 593, 634, 635, 637], "b": [119, 358, 416, 424, 433, 440, 448, 585, 586, 587, 588, 593, 594, 635, 645, 656], "doviak": 119, "zrnic": 119, "sqrt": [119, 122, 585, 624, 625, 637], "r": [119, 121, 122, 123, 124, 125, 160, 162, 166, 167, 209, 222, 223, 243, 257, 269, 282, 283, 298, 311, 312, 313, 314, 331, 344, 345, 346, 347, 416, 424, 427, 430, 431, 432, 433, 445, 447, 565, 569, 585, 594, 604, 616, 624, 625, 634, 635, 656], "sin": [119, 122, 125, 585, 587], "theta_": 119, "arcsin": [119, 122, 587], "frac": 119, "theta_a": 119, "arc": [119, 566], "length": [119, 166, 167, 439, 587, 589, 593], "effect": [119, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 229, 413, 414, 587, 624], "taken": [119, 166, 167, 217, 277, 306, 339, 543, 557, 558, 565, 570, 571, 617], "6371": [119, 122, 125, 566, 578, 587], "km": [119, 122, 125, 203, 220, 225, 226, 232, 263, 280, 285, 286, 291, 292, 309, 318, 319, 324, 325, 342, 350, 351, 352, 357, 422, 424, 433, 439, 566, 578, 586, 587, 588, 589, 617, 622, 623, 625, 632, 642, 651], "doppler": [119, 160, 161, 162, 447, 565, 588, 594, 598, 601, 602, 617, 627, 645, 653, 654, 656], "edit": [119, 592, 593, 594, 656], "1993": 119, "21": [119, 432, 585, 587, 591, 601], "vector": [120, 123, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 422, 436, 585, 587, 589, 593], "util": [120, 157, 160, 161, 229, 426, 449, 588, 593, 594, 605, 616, 629, 632, 634, 635, 645, 656], "antenna_to_cartesian": [120, 593], "detail": [120, 127, 160, 170, 242, 255, 317, 350, 375, 376, 412, 414, 424, 433, 585, 587, 589, 591, 594, 595, 596, 634, 635, 645, 653, 656], "cartograph": [121, 122, 123, 124, 125, 325], "differ": [121, 123, 124, 160, 358, 405, 424, 427, 433, 439, 586, 587, 588, 589, 593, 594, 602, 604, 608, 634, 635, 640, 651, 655, 656], "pass": [121, 123, 124, 160, 161, 162, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 360, 361, 369, 371, 412, 414, 439, 587, 589, 593, 596, 604, 605, 648, 651], "desir": [121, 123, 124, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 381, 424, 433, 447, 537, 579, 587, 588, 632, 652], "6370997": [122, 125], "rho": 122, "arctan2": [122, 637], "correspond": [122, 125, 141, 142, 184, 185, 216, 244, 258, 276, 305, 338, 362, 388, 399, 414, 556, 565, 567, 587, 589, 594, 604, 616, 649, 653, 656], "typic": [122, 125, 127, 131, 133, 140, 147, 152, 161, 170, 174, 176, 183, 190, 195, 377, 412, 413, 658], "snyder": [122, 125], "manual": [122, 125, 593, 596], "geolog": [122, 125], "survei": [122, 125], "profession": [122, 125], "paper": [122, 125, 645], "1395": [122, 125, 593], "1987": [122, 125], "pp": [122, 125], "191": [122, 125], "202": [122, 125], "find": [123, 161, 164, 405, 412, 413, 414, 433, 434, 585, 589, 591, 593, 605, 635, 645, 658], "arcco": 125, "exclude_bas": [127, 170], "boolean": [127, 133, 141, 142, 147, 170, 176, 184, 185, 190, 358, 424, 433, 443, 593, 652], "variou": [127, 163, 165, 170, 198, 199, 200, 201, 556, 568, 587, 593, 602, 631, 645], "exclude_below": [127, 170, 585, 587, 591, 608, 633, 641, 652], "suggest": [127, 170, 586, 593], "begin": [127, 160, 161, 162, 166, 167, 170, 205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 367, 368, 371, 373, 593], "import": [127, 170, 443, 447, 448, 460, 586, 593, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 647, 648, 649, 651, 652, 653, 655], "radar_fil": [127, 170, 600, 613, 615], "nc": [127, 170, 585, 586, 588, 593, 599, 608, 610, 613, 614, 615, 619, 621, 622, 623, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 647, 648, 652], "10": [127, 163, 166, 167, 170, 412, 414, 424, 428, 429, 433, 438, 440, 441, 556, 569, 585, 587, 588, 589, 591, 594, 600, 605, 608, 609, 613, 616, 617, 619, 621, 624, 625, 628, 634, 635, 637, 641, 644, 645, 647, 648, 649, 651, 652, 653, 654, 656], "normalized_coherent_pow": [127, 170, 585, 652], "75": [127, 170, 231, 290, 323, 356, 377, 424, 433, 438, 585, 591, 608, 624, 634, 647, 651, 652], "exclude_mask": [129, 131, 132, 133, 134, 135, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 609], "op": [129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 588], "inclus": [129, 131, 134, 139, 143, 145, 148, 153, 172, 174, 177, 182, 186, 188, 191, 196, 412, 414, 538, 593, 613], "below": [131, 145, 160, 163, 165, 166, 167, 174, 188, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 413, 414, 424, 427, 430, 431, 433, 439, 565, 585, 586, 587, 588, 589, 613, 634, 647, 649, 652, 657], "compar": [131, 160, 174, 419, 555, 594, 602, 607, 611, 613, 634, 635, 654, 656], "against": [131, 160, 174, 595, 596, 624], "mark": [131, 140, 141, 142, 152, 160, 174, 183, 184, 185, 195, 586], "exclus": [131, 174], "oper": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 373, 412, 428, 432, 433, 441, 445, 585, 588, 589, 594, 634, 635, 655, 656], "merg": [131, 133, 140, 147, 152, 161, 174, 176, 183, 190, 195, 363, 594, 596, 656], "AND": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195], "OR": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 585], "gener": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 204, 205, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 242, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 264, 265, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 294, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 327, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 376, 379, 394, 405, 413, 414, 434, 439, 587, 589, 590, 593, 596, 599, 600, 602, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645], "meet": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 375, 645], "result": [131, 133, 140, 147, 152, 160, 161, 162, 174, 176, 183, 190, 195, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 360, 376, 381, 414, 419, 443, 448, 576, 587, 588, 589, 594, 605, 635, 636, 645, 651, 656], "previous": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 604, 634], "becaus": [131, 133, 140, 174, 176, 183, 439, 634, 658], "invalid": [131, 133, 135, 140, 165, 174, 176, 178, 183, 198, 199, 200, 201, 585], "shape": [133, 147, 176, 190, 367, 442, 585, 588, 589, 591, 593, 594, 634, 647, 651, 652, 653, 656], "v1": [134, 139, 148, 153, 177, 182, 191, 196, 585, 586, 596, 655], "v2": [134, 139, 148, 153, 177, 182, 191, 196, 594, 656], "insid": [134, 148, 177, 191, 648], "interv": [134, 139, 148, 153, 161, 165, 177, 182, 191, 196, 200, 555, 570, 571, 585, 593], "occur": [135, 154, 164, 178, 197, 369, 370, 585, 649, 653], "nan": [135, 154, 160, 165, 178, 197, 200, 441, 585, 588, 593, 632], "inf": [135, 154, 165, 178, 197, 200, 593], "outsid": [139, 153, 165, 182, 196, 200, 224, 227, 229, 230, 242, 244, 246, 248, 258, 260, 262, 284, 287, 289, 316, 317, 320, 322, 349, 350, 353, 355, 589, 593, 594, 656], "trans_valu": [140, 152, 183, 195], "construct": [140, 152, 183, 195, 414, 588], "element": [141, 142, 160, 161, 162, 163, 164, 184, 185, 379, 413, 414, 418, 442, 555, 570, 571, 574, 575, 587, 588, 589], "NOT": [141, 142, 184, 185], "gate_includ": [141, 184, 652], "lost": [141, 142, 184, 185, 441, 582, 585, 651], "again": [141, 142, 184, 185, 589, 596, 605, 615, 635, 655], "gate_exclud": [142, 185, 652], "z_offset": 155, "doc": [155, 156, 157, 167, 585, 589, 593, 594, 596, 599, 605, 645, 655, 656, 658], "15": [155, 439, 569, 585, 586, 587, 588, 599, 600, 605, 613, 616, 622, 623, 624, 625, 628, 629, 632, 635, 637, 649, 653], "fzl": [155, 156, 157, 166, 167], "4000": [155, 166, 167, 651], "rhv_min": 155, "ncp_min": 155, "a_coef": [155, 157], "06": [155, 585, 587, 591], "beta": [155, 157, 426, 427, 428, 429, 430, 431], "refl_field": [155, 156, 157, 165, 166, 167, 199, 200, 414, 417, 423, 424, 427, 429, 430, 431, 432, 438, 445, 599, 634, 636], "ncp_field": [155, 165, 166, 167, 200, 599], "rhv_field": [155, 165, 166, 167, 199, 200, 438, 599, 636], "spec_at_field": [155, 156, 157], "corr_refl_field": [155, 156, 157], "attenu": [155, 156, 157, 426, 427, 430, 593, 598, 601, 602, 636, 645, 654], "phi": [155, 157, 166, 593, 599], "copol_coeff": [155, 543, 599, 632, 633, 647], "norm_coherent_pow": [155, 543, 599, 647], "proc_dp_phase_shift": [155, 599, 632, 647], "reflectivity_horizont": [155, 160, 543, 586, 599, 608, 613, 615, 619, 621, 622, 623, 627, 629, 632, 633, 634, 635, 642, 647, 648], "supress": [155, 233, 244, 249, 317, 350, 589, 593], "freez": [155, 156, 157], "layer": [155, 156, 157, 198, 201, 377, 427, 439, 443], "combin": [155, 156, 157, 573, 585, 587, 588, 594, 596, 656], "minimum": [155, 165, 166, 167, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 412, 414, 424, 433, 538, 565, 585, 587, 589, 593, 634, 651], "normal": [155, 165, 166, 167, 200, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 589, 624], "coher": [155, 165, 166, 167, 200], "power": [155, 157, 165, 166, 167, 200, 426, 427, 428, 429, 430, 431, 585, 588], "zdr_field": [155, 156, 157, 159, 199, 420, 438, 636], "spec_at": [155, 156, 157, 599, 636], "cor_z": [155, 156, 157, 599, 636], "gu": [155, 157], "et": [155, 157, 159, 424, 428, 432, 433, 438, 439, 445, 634, 635], "al": [155, 157, 159, 424, 428, 432, 433, 438, 439, 440, 445, 634, 635], "heavi": [155, 157, 569, 587, 616, 624, 635], "rain": [155, 157, 426, 427, 428, 429, 432, 433, 445, 593, 616, 624, 634, 635, 636], "jamc": [155, 157, 441, 556], "2011": [155, 157, 632], "50": [155, 157, 555, 585, 586, 587, 588, 591, 610, 628, 632, 636, 651, 653], "39": [155, 157, 585, 587, 632], "58": [155, 157, 588, 632], "pia_coef": 156, "pida_coef": 156, "temp_field": [156, 157, 201, 438, 636], "iso0_field": [156, 157, 198], "pia_field": [156, 157], "spec_diff_at_field": [156, 157], "pida_field": [156, 157], "corr_zdr_field": [156, 157], "temp_ref": [156, 157, 636], "linear": [156, 166, 167, 242, 369, 424, 433, 441, 565, 577, 588, 589, 593, 634, 635, 645], "dependec": 156, "comput": [156, 157, 159, 199, 420, 421, 422, 423, 424, 433, 439, 440, 441, 551, 552, 553, 554, 555, 570, 571, 574, 575, 581, 585, 588, 593, 636, 637, 645], "either": [156, 157, 160, 161, 162, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 320, 321, 322, 339, 340, 341, 349, 353, 354, 355, 363, 392, 402, 427, 430, 431, 594, 634, 655, 656], "frequenc": [156, 157, 379, 426, 427, 428, 430, 431, 435, 439, 440, 441, 588], "refl": [156, 157, 622], "integr": [156, 157, 585, 588], "pida_coeff": 156, "0c": [156, 157], "isotherm": [156, 157], "height_over_iso0": [156, 157, 652], "fixed_fzl": [156, 157], "pia_dict": [156, 157], "spec_diff_at": [156, 157, 636], "pida_dict": [156, 157], "cor_zdr": [156, 157, 636], "smooth_window_len": 157, "d": [157, 162, 205, 265, 294, 327, 381, 382, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 441, 448, 556, 585, 587, 588, 589, 594, 632, 645, 656], "smooth": [157, 164, 439, 566, 578, 589, 624, 625, 651], "window": [157, 160, 166, 167, 199, 418, 441, 447, 555, 564, 576, 581, 593, 594, 645, 656], "expon": [157, 166, 167, 416, 426, 427, 428, 429, 430, 431], "law": [157, 426, 427, 428, 429, 430, 431], "ryzhkov": [157, 426, 443, 556], "potenti": [157, 426, 585], "rainfal": [157, 426, 427, 428, 429, 430, 431, 432, 439, 441], "estim": [157, 198, 201, 219, 279, 308, 341, 422, 426, 427, 428, 429, 430, 431, 432, 439, 440, 441, 443, 556, 565, 588, 593, 634, 635], "mitig": [157, 426], "partial": [157, 426, 593], "beam": [157, 411, 413, 414, 426, 588], "blockag": [157, 426], "network": [157, 161, 371, 426, 587], "jaot": [157, 159], "2014": [157, 426, 440, 443, 645], "31": [157, 369, 426, 585, 587, 588, 591, 605, 632], "599": [157, 426], "619": [157, 426, 593], "bia": [158, 593], "magnitud": [158, 439, 637, 653], "corrected_field": 158, "urhohv_field": 159, "snr_field": [159, 417, 423], "nh_field": 159, "nv_field": 159, "rhohv_field": [159, 420, 421], "nois": [159, 417, 422, 423, 565, 588, 593, 649], "eq": [159, 622], "6": [159, 199, 427, 585, 587, 588, 605, 608, 613, 614, 618, 621, 632, 633, 636, 637, 638, 647, 649, 652, 653], "2006": [159, 605], "subtract": [159, 424, 433], "uncorrect": [159, 585, 641], "snr": [159, 417, 423, 593], "channel": [159, 377, 585, 588, 593, 596], "meteo": 159, "franc": 159, "23": [159, 585, 587, 588], "1340": 159, "1356": [159, 593], "last_radar": 160, "sonde_profil": 160, "filt": 160, "rsl_badval": 160, "131072": 160, "keep_origin": [160, 161, 162], "set_limit": [160, 161, 162, 586, 616, 617, 618, 620, 622, 623, 624, 625, 627], "vel_field": [160, 161, 162, 418, 448, 641, 649], "corr_vel_field": [160, 161, 162], "last_vel_field": 160, "max_shear": 160, "05": [160, 413, 414, 585, 587, 628, 630, 632, 644, 654], "sign": [160, 593, 624, 625], "dealia": [160, 161, 162, 425, 591, 593, 598, 601, 602, 640, 644, 649, 654], "4dd": [160, 593], "univers": [160, 374, 432, 585, 593, 645], "washington": 160, "previou": [160, 317, 350, 589, 593, 596], "sound": [160, 593], "For": [160, 245, 247, 259, 261, 367, 377, 413, 439, 585, 586, 588, 589, 593, 594, 597, 604, 608, 636, 645, 652, 653, 656, 658], "best": [160, 587], "argument": [160, 161, 162, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 277, 284, 288, 289, 306, 313, 314, 315, 316, 317, 318, 321, 322, 339, 346, 347, 348, 349, 350, 351, 354, 355, 369, 371, 379, 381, 412, 414, 440, 441, 593, 594, 656], "_fourdd_interfac": 160, "fourdd_dealia": 160, "fine": 160, "tune": [160, 634, 635], "behavior": [160, 317, 350, 367, 381, 589, 593, 597], "fourdd": 160, "document": [160, 245, 247, 255, 259, 261, 317, 350, 370, 375, 376, 577, 583, 586, 588, 589, 590, 594, 595, 645, 651, 656], "dealias": [160, 161, 162, 425, 593, 594, 600, 604, 641, 645, 646, 656], "mean_doppler_veloc": [160, 588, 627, 632, 641, 647], "successfulli": 160, "greatli": 160, "improv": [160, 440, 441, 569, 589, 596, 616, 635], "final": [160, 440, 441, 585, 586, 592, 596, 634], "horizontalwindprofil": [160, 362, 363, 448, 577, 593, 594, 656], "sond": [160, 161, 362, 363, 434, 593, 600], "moment_based_gate_filt": [160, 161, 162, 414, 587], "bergen": 160, "alber": 160, "bad": [160, 439, 440, 441, 445], "rsl": [160, 361, 372, 373, 593, 645, 655], "procedur": [160, 161, 162], "fail": [160, 161, 162, 367, 377, 593, 594, 656], "otherwis": [160, 388, 399, 427, 430, 431, 436, 596], "maxshear": 160, "maximum": [160, 161, 165, 166, 167, 198, 199, 200, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 358, 377, 412, 414, 419, 424, 427, 430, 431, 433, 439, 538, 555, 564, 572, 585, 587, 589, 633, 634, 641, 653], "shear": 160, "incorpor": [160, 433, 634], "match": [160, 163, 164, 203, 263, 292, 325, 373, 405, 593, 608, 615, 635], "toward": 160, "neg": [160, 217, 228, 277, 288, 306, 321, 339, 354, 439, 564, 585, 593, 613], "compthresh": 160, "fraction": [160, 587, 634, 653], "threshold": [160, 163, 164, 165, 198, 199, 200, 201, 358, 424, 427, 430, 431, 433, 565, 569, 585, 587, 591, 634, 641, 649, 652], "continu": [160, 162, 588, 593, 594, 656], "unfold": [160, 161, 166, 167, 439], "compthresh2": 160, "thresh": [160, 427, 430, 431], "adjac": [160, 589], "count": [160, 608, 649, 653], "assign": [160, 587, 593, 634], "question": [160, 359, 414, 589, 645], "ckval": 160, "absolut": [160, 555, 635], "stdthresh": 160, "deviat": [160, 553, 554, 571, 585, 649], "portion": [160, 591, 651], "epsilon": 160, "miss": [160, 439, 440, 441, 445, 585, 593, 605], "maxcount": 160, "allow": [160, 163, 164, 216, 276, 305, 338, 405, 556, 564, 586, 589, 593, 597, 608, 653, 658], "fold": [160, 161, 604], "pass2": 160, "retain": [160, 161, 162, 165, 198, 199, 200, 201, 582], "rm": 160, "what": [160, 169, 414, 585, 588, 589, 591, 592, 593, 594, 604, 613, 641, 647, 649, 652, 656, 658], "left": [160, 315, 348, 587, 589, 591, 613, 615], "proxim": 160, "side": 160, "doubl": [160, 377, 634], "captur": [160, 641], "suffici": 160, "good": [160, 161, 585, 586, 596], "mingood": 160, "ba_mincount": 160, "neighbor": [160, 369, 414, 585, 593, 651], "ba_edgecount": 160, "usuccess": 160, "radialvelvolum": 160, "lastvelvolum": 160, "unfoldedvolum": 160, "sondvolum": 160, "vr_corr": 160, "due": [160, 419, 585, 587, 589, 593, 608, 649, 655, 658], "call": [160, 163, 216, 217, 219, 224, 228, 229, 230, 244, 276, 277, 279, 284, 288, 289, 305, 306, 308, 316, 317, 321, 322, 338, 339, 341, 349, 350, 354, 355, 372, 377, 381, 556, 568, 586, 588, 589, 594, 596, 649, 653, 656, 658], "999": [160, 381, 585, 593], "long": [160, 428, 593, 635, 648, 653], "n": [160, 418, 438, 555, 585, 587, 588, 589, 591, 594, 604, 608, 616, 627, 629, 632, 634, 635, 639, 645, 656, 658], "jame": 160, "houz": [160, 358, 424, 433, 445, 634, 635], "jr": [160, 424, 433, 445, 634, 635], "four": [160, 369, 370, 372], "dealis": 160, "scheme": [160, 358, 412, 424, 433, 439, 586, 634], "2001": 160, "18": [160, 585, 587, 614, 625], "1674": 160, "ref_vel_field": 161, "interval_split": 161, "interval_limit": 161, "skip_between_rai": 161, "100": [161, 163, 165, 200, 220, 225, 242, 280, 285, 309, 342, 379, 448, 585, 587, 588, 589, 591, 610, 614, 624, 625, 637], "skip_along_rai": 161, "nyquist_vel": [161, 162, 591, 641, 649], "check_nyquist_uniform": [161, 162, 418], "rays_wrap_around": [161, 162], "region": [161, 167, 255, 317, 350, 419, 569, 585, 587, 588, 589, 591, 593, 594, 598, 601, 602, 604, 616, 634, 635, 641, 652, 654, 656], "similar": [161, 588, 589, 608, 651], "pair": [161, 242, 369, 381, 389, 394, 400, 587, 647], "accomplish": [161, 373, 602, 640], "problem": [161, 166, 167, 292, 325, 414, 605], "dynam": [161, 585], "reduct": 161, "anchor": 161, "onc": [161, 589, 594, 596, 634, 655, 656, 658], "complet": [161, 593], "simul": [161, 577, 593], "simulated_vel_from_profil": [161, 594, 656], "segment": [161, 313, 314, 346, 347, 593], "split": [161, 569, 585], "larger": [161, 589, 634], "longer": [161, 564, 587, 593, 594, 645, 655, 656], "process": [161, 166, 167, 585, 588, 591, 593, 594, 596, 604, 635, 645, 656], "better": [161, 220, 225, 280, 285, 309, 318, 342, 351, 593, 635, 645, 649], "seem": 161, "compromis": 161, "artifact": [161, 649, 651], "free": [161, 590, 591, 645], "cover": [161, 585], "entir": [161, 162, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 414, 579, 585, 588, 589], "join": [161, 460, 593], "gap": [161, 163, 164, 651], "connect": [161, 162], "disabl": [161, 162, 165, 198, 199, 200, 201], "across": [161, 587, 593, 633], "so": [161, 217, 228, 277, 288, 306, 321, 339, 354, 373, 414, 585, 588, 589, 591, 593, 594, 604, 605, 634, 645, 656, 658], "averag": [161, 358, 424, 433, 565, 570, 591, 634, 635, 637], "individu": [161, 162, 414], "attempt": [161, 162, 375, 376, 593], "de": [161, 162, 348, 548, 549], "alias": [161, 162, 548, 549, 591, 593, 649, 653], "corr_vel": [161, 162], "unwrap_unit": 162, "skip_check": [162, 593], "multi": [162, 593], "unwrap": [162, 166, 167, 593], "independ": 162, "often": [162, 419], "give": [162, 377, 589, 595, 596, 641, 642, 643, 645, 649, 652], "superior": 162, "lower": [162, 242, 244, 246, 248, 258, 260, 262, 588, 609, 610], "contamin": [162, 445], "clutter": [162, 649, 652], "poor": 162, "verif": [162, 556, 593], "appropi": [162, 216, 276, 305, 338], "offer": [162, 586], "extrem": 162, "miguel": 162, "arevallilo": 162, "herraez": 162, "david": [162, 589], "burton": 162, "michael": [162, 589], "lalor": 162, "munther": 162, "gdeisat": 162, "fast": 162, "two": [162, 379, 412, 424, 433, 436, 437, 445, 573, 574, 575, 587, 588, 589, 591, 593, 594, 596, 602, 607, 611, 612, 614, 629, 630, 648, 651, 654, 656], "sort": [162, 587, 591, 592, 593], "reliabl": 162, "follow": [162, 165, 199, 200, 375, 376, 378, 379, 392, 402, 413, 414, 438, 439, 585, 587, 588, 589, 591, 594, 596, 597, 604, 632, 645, 655, 656], "noncontinu": 162, "optic": 162, "vol": 162, "41": [162, 587, 632, 637, 651], "2002": 162, "7437": 162, "abdul": 162, "rahman": 162, "h": [162, 205, 255, 265, 294, 327, 350, 443, 565, 585, 587, 588, 608, 615], "osten": 162, "gorecki": 162, "e": [162, 164, 166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 362, 377, 392, 402, 424, 433, 439, 445, 569, 585, 586, 588, 589, 594, 604, 616, 634, 635, 655, 656], "l": [162, 166, 167, 221, 225, 226, 255, 281, 285, 286, 310, 319, 343, 350, 352, 421, 433, 569, 585, 589, 616, 635], "novak": 162, "ed": 162, "metrologi": 162, "2005": [162, 424, 433, 634, 635], "32": [162, 585, 593, 613, 617, 618, 619, 629, 632, 635, 637, 653], "40": [162, 255, 585, 588, 600, 610, 615, 619, 621, 624, 634, 635, 641], "intern": [162, 589], "societi": [162, 416, 419, 428], "photon": 162, "label_dict": [163, 164], "delta": [163, 164, 440], "despeckl": [163, 593], "identifi": [163, 164, 358, 424, 433, 565, 585, 589, 591, 616, 634, 635, 652], "small": [163, 164, 424, 433, 445, 593, 608, 624], "investig": [163, 164, 443, 604], "scipi": [163, 164, 439, 577, 585, 593, 594, 624, 625, 645, 655, 656, 658], "core": [163, 164, 358, 377, 405, 414, 424, 433, 440, 441, 556, 568, 588, 593, 594, 599, 634, 656], "queri": [163, 164, 414, 585, 589], "speckl": [163, 634], "find_object": 163, "tupl": [163, 164, 217, 219, 222, 223, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 277, 279, 282, 283, 284, 287, 288, 289, 291, 306, 308, 311, 312, 316, 317, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 353, 354, 355, 357, 389, 400, 412, 414, 418, 436, 437, 538, 555, 589, 593], "contigu": [163, 164], "perman": 163, "deg": [163, 164, 198, 201, 439, 579, 585, 637], "label": [164, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 282, 283, 284, 287, 288, 289, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 312, 315, 316, 317, 320, 321, 322, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 344, 345, 348, 349, 350, 353, 354, 355, 582, 585, 587, 589, 591, 593, 608, 614, 615, 624, 625, 629, 636], "period": [164, 564, 585, 588, 649], "account": [164, 593], "g": [164, 377, 412, 433, 439, 441, 448], "examin": [164, 360, 373, 376, 588, 591, 594, 645, 656], "box": [164, 377, 636], "alwai": [164, 361, 373, 424, 433, 439, 589, 593, 597, 645], "readi": 164, "min_ncp": [165, 166, 200], "min_rhv": [165, 166, 199, 200], "min_refl": [165, 200], "20": [165, 199, 200, 443, 556, 585, 586, 587, 588, 589, 591, 604, 605, 608, 614, 615, 616, 619, 621, 622, 623, 624, 625, 627, 633, 634, 635, 638, 642, 643, 647, 651, 653, 654], "max_refl": [165, 200], "undesir": [165, 198, 199, 200, 201, 414], "cross": [165, 199, 200, 217, 220, 242, 277, 280, 306, 309, 339, 342, 557, 558, 585, 588, 591, 593, 602, 612, 621, 630, 634, 653, 654], "ratio": [165, 199, 200, 231, 290, 323, 356, 417, 420, 585, 588, 591, 653], "min_rhi": [165, 200], "criteria": [165, 198, 199, 200, 201, 414, 439, 445], "built": [165, 198, 199, 200, 201, 413, 414], "lowest": [165, 198, 199, 200, 201, 419, 442, 591, 604, 608, 632, 634, 635], "greatest": [165, 200], "self_const": [166, 167], "60000": [166, 167, 610, 614, 651], "low_z": [166, 167], "high_z": [166, 167], "53": [166, 167, 585, 587, 591], "min_phidp": [166, 167], "01": [166, 167, 315, 348, 439, 585, 587, 588, 591, 601, 611, 613, 630, 654], "sys_phas": 166, "overide_sys_phas": 166, "nowrap": [166, 167], "really_verbos": [166, 167], "lp_solver": [166, 167], "pyglpk": [166, 167, 593, 645, 655], "kdp_field": [166, 167, 427, 428, 430, 431, 438, 439, 440, 441, 636], "unf_field": [166, 167], "window_len": [166, 167], "proc": [166, 167, 439, 593], "coef": [166, 167, 593], "914": [166, 167, 593], "lp": [166, 167, 593, 645], "consist": [166, 167, 593, 651], "factor": [166, 167, 379, 419, 426, 427, 428, 429, 430, 431, 555, 585, 586, 588, 615, 623, 629, 651], "low": [166, 167, 369, 439, 616], "high": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 439, 588, 589, 591, 636], "copolar": [166, 167, 438, 633], "automat": [166, 373, 378, 379, 414, 418, 445, 587, 589, 593, 594, 596, 619, 645, 656], "lpx": [166, 167], "messag": [166, 167, 233, 249, 369, 586, 593, 596, 605], "suppress": [166, 167, 439], "cvxopt": [166, 167, 593, 645, 655], "cylp": [166, 167, 593, 645, 655, 658], "cylp_mp": [166, 167], "modul": [166, 167, 543, 583, 589, 593, 594, 604, 605, 645, 648, 649, 651, 652, 653, 655, 656], "solv": [166, 167, 592, 593], "horizon": [166, 167, 438], "sobel": [166, 167], "worker": [166, 167], "link": [166, 167, 587, 588, 591, 593], "1z": [166, 167], "reproc_phas": [166, 167], "sob_kdp": [166, 167], "recalcul": [166, 167, 647], "giangrand": [166, 167, 645], "mcgraw": [166, 167], "lei": [166, 167], "applic": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 424, 433, 576, 589, 591, 594, 656], "program": [166, 167, 593, 594, 645, 656], "atmo": [166, 167, 432, 438, 443, 556, 569, 594, 616, 635, 656], "tech": [166, 167, 438, 569, 616, 635], "2013": [166, 167, 440, 443, 653], "30": [166, 167, 424, 433, 585, 587, 588, 589, 608, 615, 619, 621, 634, 635, 649], "1716": [166, 167], "system_phas": 167, "ncpt": 167, "first_gate_sysp": 167, "carri": 167, "smaller": [167, 350, 585, 588, 589, 594, 634, 656], "off": [167, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 437, 443, 585, 589, 613, 634, 635], "custom": [168, 216, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 276, 277, 278, 279, 284, 288, 289, 305, 306, 307, 308, 316, 317, 321, 322, 338, 339, 340, 341, 349, 350, 354, 355, 413, 589, 651], "max_h_iso0": 198, "thick": [198, 201], "400": [198, 201, 593, 647], "beamwidth": [198, 201], "primarili": [198, 201], "melt": [198, 201, 427, 439, 443, 569, 616, 634, 635, 636], "db": [198, 201, 417, 624, 653], "phi_field": 199, "textzdr_field": 199, "textrhv_field": 199, "textphi_field": 199, "textrefl_field": 199, "wind_siz": [199, 418, 581, 649], "7": [199, 367, 447, 581, 585, 587, 588, 589, 591, 594, 596, 605, 609, 614, 616, 628, 652, 653, 656], "max_textphi": 199, "max_textrhv": 199, "max_textzdr": 199, "85": [199, 585, 589, 637], "max_textrefl": 199, "move": [199, 565, 587, 591, 593, 608], "highest": 199, "min_temp": 201, "There": [202, 587, 589, 591, 596, 613, 655, 658], "colorblind": [202, 586, 591, 613], "friendli": [202, 586, 591, 593, 613], "revers": [202, 217, 228, 277, 288, 306, 321, 339, 354, 373, 439, 593], "_r": 202, "matplotlib": [202, 217, 219, 222, 223, 224, 228, 229, 230, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 288, 289, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 377, 585, 586, 587, 588, 591, 593, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 645, 647, 648, 649, 651, 652, 655, 658], "pyart_colormap": 202, "bluebrown10": [202, 613], "bluebrown11": [202, 613], "brbu10": [202, 613], "brbu12": [202, 613], "bu10": [202, 613], "bu7": [202, 613], "budor12": [202, 613], "budor18": [202, 613], "budrd12": [202, 613], "budrd18": [202, 613], "bugr14": [202, 613], "bugy8": [202, 613], "buor10": [202, 613], "buor12": [202, 613], "buor8": [202, 613], "buorr14": [202, 613], "carbone11": [202, 613], "carbone17": [202, 613], "carbone42": [202, 613], "cat12": [202, 613], "ewilson17": [202, 613], "grmg16": [202, 613], "gray5": [202, 613], "gray9": [202, 613], "nwsref": [202, 613], "nwsvel": [202, 613], "nws_spw": [202, 613], "pd17": [202, 613], "rrate11": [202, 613], "rdylbu11b": [202, 613], "refdiff": [202, 613], "scook18": [202, 613], "stepseq25": [202, 613], "symgray12": [202, 613], "theodore16": [202, 613], "wild25": [202, 613], "langrainbow12": [202, 613], "homeyerrainbow": [202, 593, 613], "balanc": [202, 593, 613], "chasespectr": [202, 613], "spectralextend": [202, 613], "displai": [203, 217, 219, 224, 228, 229, 230, 232, 263, 277, 279, 284, 288, 289, 291, 292, 306, 308, 316, 317, 321, 322, 324, 325, 339, 341, 349, 350, 354, 355, 357, 377, 419, 447, 448, 586, 587, 588, 589, 591, 593, 594, 599, 600, 604, 605, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 647, 648, 649, 651, 652, 656], "airborn": [203, 593], "plot_var": [203, 263, 292, 325], "order": [203, 263, 292, 325, 358, 373, 378, 379, 405, 424, 433, 439, 555, 585, 593, 594, 599, 634, 635, 645, 656], "cb": [203, 263, 292, 325, 615, 635], "colorbar": [203, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 249, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 316, 317, 320, 321, 322, 325, 339, 340, 341, 349, 350, 353, 354, 355, 585, 587, 588, 589, 593, 602, 608, 612, 613, 629, 630, 635, 654], "loc": [203, 263, 292, 325, 585, 587, 591, 614], "titl": [204, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 238, 239, 240, 242, 244, 246, 248, 251, 252, 253, 258, 260, 262, 264, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 586, 587, 588, 589, 591, 592, 593, 599, 600, 608, 615, 617, 618, 620, 622, 623, 627, 653], "ext": [205, 237, 250, 265, 294, 327], "png": [205, 237, 250, 265, 294, 327, 586, 587, 589, 591], "datetime_format": [205, 207, 265, 267, 294, 296, 327, 329], "use_sweep_tim": [205, 207, 265, 267, 294, 296, 327, 329], "form": [205, 219, 237, 250, 265, 279, 294, 308, 327, 341, 585, 589, 593], "radar_name_field_sweep_tim": [205, 265, 294, 327], "datetim": [205, 207, 224, 228, 230, 265, 267, 284, 288, 289, 294, 296, 316, 321, 322, 327, 329, 349, 354, 355, 362, 363, 379, 559, 560, 561, 562, 563, 587, 591, 593], "strftime": [205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 587, 588], "suitabl": [205, 237, 250, 265, 294, 327, 589], "xaxi": [209, 212, 269, 272, 298, 301, 331, 334, 615], "static": [210, 211, 220, 221, 225, 231, 232, 270, 271, 280, 281, 285, 290, 291, 299, 300, 309, 310, 323, 324, 332, 333, 342, 343, 356, 357, 586], "yaxi": [210, 211, 213, 214, 215, 270, 271, 273, 274, 275, 299, 300, 302, 303, 304, 332, 333, 335, 336, 337], "keyword": [216, 276, 305, 317, 338, 350, 369, 371, 585, 589, 593, 648, 651], "plot_ppi": [216, 276, 305, 338, 593, 600, 636, 641, 643, 647], "plot_sweep_grid": [216, 593], "target_azimuth": [217, 277, 306, 339, 557], "mask_tupl": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 589], "norm": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 439, 589, 593, 615, 636], "cmap": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 585, 586, 587, 588, 589, 591, 608, 613, 614, 615, 616, 620, 623, 625, 627, 628, 633, 634, 635, 641, 642, 643, 648, 649], "mask_outsid": [217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 586, 589, 593, 622, 623], "title_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 589, 627], "axislabel": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 586, 617, 622, 623], "axislabels_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 593, 634, 635], "colorbar_flag": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587, 589], "colorbar_label": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 586, 589, 591, 599, 600, 604, 617, 618, 622, 623, 624, 625, 629, 641], "colorbar_ori": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 591, 593], "reverse_xaxi": [217, 228, 277, 288, 306, 321, 339, 354], "fig": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 585, 586, 587, 588, 589, 591, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 633, 635, 636, 637, 641, 649, 651, 652], "tick": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 589, 593, 613, 615, 634, 635, 636], "ticklab": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 589, 593, 634, 635, 636], "raster": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 589, 593], "pseudo": [217, 277, 306, 339, 593], "associ": [217, 277, 306, 339, 394, 585, 596], "pcolormesh": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585, 593, 608, 624, 634, 635], "integ": [217, 277, 306, 339, 379, 418, 436, 437], "ncp": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 589], "lumin": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589], "scale": [217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 413, 414, 421, 439, 440, 585, 588, 589, 616], "west": [217, 228, 277, 288, 306, 321, 339, 354, 585, 589, 617], "leav": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587, 589], "orient": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 587, 589, 590, 636, 637], "treat": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 589], "themselv": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 589], "figur": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 586, 587, 588, 589, 591, 592, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 633, 634, 635, 641, 648, 649, 651, 652], "render": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 588, 589], "rather": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589], "larg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 439, 445, 589, 591, 593], "Be": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589, 596], "sure": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 588, 589, 592, 593, 594, 596, 608, 615, 634, 655, 656, 658], "dpi": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587, 589, 591], "pdf": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589], "ep": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589], "svg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 589], "mappabl": [218, 241, 249, 256, 278, 307, 340], "cax": [218, 241, 256, 278, 307, 340, 636], "imag": [218, 241, 256, 278, 307, 340, 437, 555, 569, 585, 586, 588, 589, 593, 602, 612, 630, 632, 634, 635, 654], "contourset": [218, 241, 249, 256, 278, 307, 340], "etc": [218, 241, 244, 249, 256, 278, 307, 317, 340, 350, 376, 433, 587, 589, 593], "onto": [218, 241, 256, 258, 278, 307, 317, 340, 350, 405, 412, 414, 442, 589], "drawn": [218, 241, 256, 278, 307, 340, 589], "target_rang": [219, 279, 308, 341], "delta_x": [219, 279, 308, 341], "delta_i": [219, 279, 308, 341], "az_limit": [219, 279, 308, 341], "el_limit": [219, 279, 308, 341], "corner": [219, 279, 308, 315, 341, 348, 589, 590, 593], "reflector": [219, 279, 308, 341, 593], "griddata": [219, 279, 308, 341], "min": [219, 279, 308, 341, 585, 589, 637], "max": [219, 279, 308, 341, 377, 585, 589, 593, 604, 608, 613, 614, 619, 627, 637, 641, 642, 643], "npt": [220, 225, 280, 285, 309, 318, 342, 351], "hair": [220, 280, 309, 342, 621], "higher": [220, 225, 280, 285, 309, 318, 342, 351, 588, 649, 651], "col": [221, 225, 226, 281, 285, 286, 310, 319, 343, 352, 588], "line": [221, 227, 243, 244, 255, 257, 281, 287, 310, 313, 314, 317, 318, 320, 343, 346, 347, 350, 351, 353, 377, 439, 586, 587, 588, 589, 593, 594, 596, 602, 612, 614, 630, 632, 654, 655, 656, 658], "color": [221, 222, 223, 225, 226, 243, 281, 282, 283, 285, 286, 310, 311, 312, 314, 317, 318, 319, 343, 344, 345, 350, 352, 377, 586, 587, 588, 589, 591, 614, 615, 616, 624, 625, 632, 634, 635, 636], "linestyl": [221, 225, 226, 243, 281, 285, 286, 310, 319, 343, 352, 587, 589, 591, 614, 615, 625], "symbol": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348], "text_color": [222, 223, 282, 283, 311, 312, 344, 345], "text": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348, 460, 587, 592, 593, 596, 613, 622, 637, 645, 649], "just": [222, 223, 282, 283, 311, 312, 344, 345, 367, 593, 594, 613, 616, 647, 653, 656, 658], "marker": [222, 223, 227, 243, 257, 282, 283, 287, 311, 312, 320, 344, 345, 353, 585, 587], "title_datetime_format": [224, 228, 284, 288, 316, 321, 349, 354], "title_use_sweep_tim": [224, 228, 284, 288, 316, 321, 349, 354], "range_ring_location_km": [225, 285, 318, 351], "lw": [225, 226, 285, 286, 319, 352, 589, 591], "ring": [225, 226, 285, 286, 318, 319, 351, 352, 587, 609, 621], "range_r": [226, 286, 319, 352], "seri": [226, 286, 319, 352, 585, 588], "draw": [226, 244, 255, 286, 317, 319, 350, 352, 587, 589], "format_str": [227, 287, 320, 353], "ray_min": [227, 287, 320, 353], "ray_max": [227, 287, 320, 353], "style": [227, 243, 257, 287, 313, 314, 318, 320, 346, 347, 351, 353, 377, 593], "ignoretilt": 229, "antenna_to_cartesian_track_rel": 229, "slant": 229, "ncar": 229, "soloii": 229, "time_axis_flag": [230, 289, 322, 355, 588], "date_time_form": [230, 289, 322, 355], "tz": [230, 289, 322, 355, 587], "zone": [230, 289, 322, 355], "info": [230, 289, 317, 322, 350, 355, 589, 593, 636, 653], "aspect_ratio": [231, 290, 323, 356], "aspect": [231, 290, 323, 356, 613], "xlim": [232, 291, 324, 357, 585, 586, 589, 591, 618, 620, 624, 625, 651], "ylim": [232, 291, 324, 357, 585, 586, 588, 589, 591, 618, 620, 622, 623, 624, 625, 627, 629], "cartopi": [233, 234, 235, 236, 244, 292, 317, 585, 587, 589, 591, 593, 594, 602, 604, 605, 608, 612, 614, 615, 628, 630, 632, 634, 635, 641, 645, 648, 649, 651, 652, 654, 655, 656, 658], "coastlin": [234, 244, 317, 350, 585, 589], "polit": 235, "state": [236, 440, 587, 589, 591, 593], "grid_name_field_level_tim": [237, 250], "latitudin": [239, 246, 260], "step": [242, 377, 586, 588, 596, 604, 624, 625, 634, 658], "interp_typ": 242, "x_axi": [242, 614], "metpi": [242, 587, 589, 591], "design": [242, 569, 585, 594, 624, 634, 635, 645, 656], "geodes": 242, "nearest": [242, 369, 414, 434, 557, 558, 577, 585, 589, 593, 651], "dataarrai": 242, "interp": [242, 441], "ex": [242, 441, 587, 591, 592, 613], "upper": [242, 244, 246, 248, 258, 260, 262, 587, 591, 614], "colormesh": [242, 244, 246, 248, 258, 260, 262], "64": [242, 244, 246, 248, 258, 260, 262, 586, 613, 618, 619, 620, 624, 626, 628, 629, 632, 652, 655], "linewidth": [243, 257, 587, 589, 591, 615, 624, 625], "crosshair": [243, 257, 589], "lat_lin": [244, 255, 317, 350, 587, 589, 608, 621, 632], "lon_lin": [244, 255, 317, 350, 587, 589, 608, 621, 632], "embellish": [244, 317, 350, 587, 615], "add_grid_lin": [244, 317, 587], "reason": [244, 255, 589], "america": [244, 255, 317, 350, 589], "cr": [244, 292, 317, 585, 587, 589, 591, 604, 605, 608, 614, 615, 621, 628, 632, 634, 635, 636, 641, 648, 649, 652], "subsequ": [244, 317, 589], "geoax": [244, 317, 589, 648, 651], "platecarre": [244, 317, 585, 587, 589, 591, 604, 608, 614, 615, 628, 632, 634, 635, 641, 649, 652], "shapefil": [244, 317, 350, 589], "certain": [244, 317, 359, 437, 569, 589, 593, 634, 635, 652], "plot_latitudinal_level": [245, 259], "y_index": [246, 260], "basemap": [246, 248, 249, 254, 255, 258, 260, 262, 325, 346, 347, 348, 350, 351, 593, 645, 655], "plot_longitudinal_level": [247, 261], "x_index": [248, 262], "top": [249, 414, 442, 585, 587, 590, 593, 594, 613, 632, 651, 656], "veric": 251, "area_thresh": [255, 350], "10000": [255, 350, 448, 614, 634, 635, 651], "auto_rang": 255, "min_lon": [255, 317, 350, 587, 589, 608, 621, 652], "92": [255, 622, 632], "max_lon": [255, 317, 350, 587, 589, 608, 621, 652], "86": [255, 589], "min_lat": [255, 317, 350, 587, 589, 608, 621, 652], "max_lat": [255, 317, 350, 587, 589, 608, 621, 652], "44": [255, 424, 433, 585, 587, 634, 635, 655], "databas": [255, 350, 591], "merc": [255, 350], "mercat": 255, "line_styl": [257, 313, 314, 318, 346, 347, 351, 621], "plot_rhi": [276, 305, 338, 585], "plot_vpt": [276, 305, 338, 588], "grid_project": [292, 413, 414, 589], "progress": [292, 325], "some": [292, 325, 389, 400, 441, 460, 586, 587, 588, 589, 591, 592, 593, 605, 613, 614, 632, 634, 645, 649, 651, 655], "correctli": [292, 325, 593], "github": [292, 325, 587, 590, 593, 625, 645, 655, 658], "tracker": [292, 325, 594, 645, 656], "azimuthalequidist": 292, "line_lon": [313, 346], "line_lat": [313, 346], "compat": [313, 314, 315, 318, 346, 347, 348, 351, 374, 587, 593, 597, 658], "line_x": [314, 347], "line_i": [314, 347], "ro": [315, 348], "label_text": [315, 348], "label_offset": [315, 348], "bottom": [315, 348, 587, 589, 613, 615], "110m": [317, 589], "shapefile_kwarg": [317, 589], "alpha": [317, 350, 426, 427, 428, 429, 430, 431, 587, 591, 615, 624], "edgecolor": [317, 350, 587, 591, 624], "face": [317, 350, 589], "reson": [317, 350, 589], "lambertconform": [317, 589, 605, 621, 648], "domain": [317, 350, 585, 589, 608], "neither": [317, 350, 381, 589], "extend": [317, 350, 373, 589], "word": [317, 589], "10m": [317, 587, 589, 605, 621], "50m": [317, 589, 641, 649, 652], "naturalearthfeatur": [317, 589], "tranpar": [317, 350, 589], "overplot": [317, 350, 589], "pixel": [317, 350, 436, 437, 585, 589], "lcc": 350, "cylindr": 350, "mill": 350, "exhibit": 350, "distort": 350, "aea": 350, "laea": 350, "conform": [350, 589, 645, 647], "tmerc": 350, "stere": 350, "aeqd": 350, "cass": 350, "even": [350, 441, 591, 593, 624, 645, 651, 658], "cyl": [350, 593], "cannot": [350, 361, 587, 589], "lake": [350, 591], "esri": 350, "background": [350, 358, 424, 433, 445, 589, 592, 621, 628, 634, 635], "untest": 350, "always_core_thr": [358, 424, 433, 634, 635], "use_cosin": [358, 424, 433, 634, 635], "max_diff": [358, 424, 433, 634, 635], "zero_diff_cos_v": [358, 424, 433, 634, 635], "use_addit": [358, 424, 433, 634, 635], "scalar_diff": [358, 424, 433, 634, 635], "convect": [358, 424, 433, 445, 585, 593, 602, 631, 638, 654], "stratiform": [358, 424, 433, 445, 593, 602, 631, 638, 654], "classif": [358, 424, 427, 433, 438, 445, 593, 602, 631, 638, 654], "cosin": [358, 424, 433, 634, 635], "scalar": [358, 424, 433, 587, 589, 593, 634], "classifi": [358, 424, 433, 438, 593, 634, 635, 636], "eqn": [358, 424, 433], "b1": [358, 424, 433], "yuter": [358, 424, 433, 445, 569, 616, 634, 635], "1997": [358, 424, 433, 634, 635], "zero": [358, 375, 424, 433, 437, 439, 577, 593, 634, 635, 648, 652], "multipli": [358, 424, 433, 588, 634, 647], "most": [359, 367, 587, 588, 589, 593, 613, 635, 649, 651, 658], "storage_opt": [360, 369, 371], "anon": [360, 369, 371, 585, 587, 591], "open": [360, 369, 371, 460, 585, 588, 589, 591, 592, 593, 594, 618, 645, 647, 648, 649, 651, 652, 653, 656, 658], "binari": [360, 433, 585, 596], "transpar": [360, 587, 589, 593, 624], "decompress": [360, 593], "gzip": [360, 367, 368], "bzip2": [360, 593], "close": [360, 433, 439, 586, 587, 591, 593], "compress": [360, 367, 368, 589, 593], "backend": [360, 369], "googl": [360, 369, 593, 594, 656], "cloud": [360, 369, 439, 587, 588, 594, 596, 602, 603, 606, 645, 654, 656, 658], "storag": [360, 369, 537], "amazon": [360, 369, 585, 587, 589, 591, 604, 605], "web": [360, 369, 377, 585, 589, 591, 604, 605], "servic": [360, 369, 585, 587, 589, 591, 596, 604, 605, 613], "s3": [360, 369, 587, 591, 604, 605, 616, 634, 635], "file_lik": 360, "use_rsl": 361, "read_": 361, "trmm": [361, 373, 593, 645, 655], "librari": [361, 370, 373, 376, 377, 585, 587, 588, 589, 591, 593, 594, 595, 645, 647, 648, 649, 651, 652, 653, 655, 656], "choos": [361, 589, 602, 612, 630, 634, 635, 654, 658], "Not": [361, 368], "typeerror": [361, 593], "launch_datetim": 362, "date": [362, 363, 583, 587, 589, 592, 593, 604, 605], "radiosond": 362, "launch": 362, "record": [362, 591, 653], "target_datetim": 363, "closest": [363, 405], "profile_datetim": 363, "use_file_field_attribut": 365, "csu": [365, 593], "chill": 365, "chl": [365, 593], "field_file_nam": 365, "long_nam": [365, 585, 588, 634, 635, 648, 653], "zlib": [367, 368], "read_mdv": [367, 586, 600, 609, 620, 624, 625, 626], "interchang": 367, "vlevel": 367, "proj_polar_radar": 367, "9": [367, 429, 438, 565, 585, 587, 588, 589, 591, 592, 599, 605, 616, 625, 628, 632, 633, 634, 635, 645, 647, 652, 653], "proj_rhi_radar": 367, "13": [367, 565, 585, 588, 591, 605, 627, 645, 652, 653], "vlevel_typ": 367, "vert_type_z": 367, "vert_type_elev": 367, "vert_type_az": 367, "17": [367, 587, 588, 622, 627, 630], "vert_type_pressur": 367, "vert_type_theta": 367, "unknown": [367, 593], "station": [369, 370, 589, 605], "linear_interp": 369, "nexrad": [369, 370, 371, 372, 585, 593, 602, 603, 606, 612, 616, 630, 634, 635, 645, 653, 654], "archiv": [369, 587, 589, 591, 617, 645], "host": [369, 371, 587, 596], "noaa": [369, 371, 373, 585, 587, 589, 591, 604, 605, 616, 634, 635], "nation": [369, 371, 585, 587, 589, 591, 604, 613], "climat": [369, 371, 588, 589, 591, 593, 594, 645, 647, 648, 649, 651, 652, 653, 656], "ucar": [369, 370, 585], "thredd": [369, 370, 376], "server": [369, 370], "letter": [369, 370, 372], "icao": [369, 370, 593], "older": [369, 370, 593, 594, 602, 603, 606, 645, 654, 656], "mix": [369, 569, 616, 634, 635], "constant": [369, 409, 413, 414, 436, 439, 585, 588, 593, 605], "fsspec": [369, 371, 591, 593], "cut": [369, 370, 371, 437], "www": [369, 370, 371, 436, 587, 591, 594, 656], "ncdc": [369, 371], "gov": [369, 371, 585, 586, 587, 591, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 617, 618, 619, 620, 622, 624, 625, 626, 627, 629, 632, 633, 641, 642, 643], "edu": [369, 370, 436, 585, 616, 634, 635], "catalog": [369, 370, 585], "html": [369, 370, 436, 587, 591, 593, 594, 645, 655, 656], "common": [370, 588, 593, 645, 655], "cdm": [370, 376], "url": [370, 587, 589, 605], "java": [370, 376], "tool": [370, 376, 585, 588, 594, 645, 655, 656], "opendap": 370, "accept": [370, 440, 441, 589, 593, 594, 656], "compil": [370, 440, 593, 645, 655], "unidata": [370, 585, 604], "htm": 370, "product": [371, 373, 419, 448, 585, 589, 593], "nw": [371, 591], "wsr": 371, "88d": 371, "iii": 371, "distribut": [371, 424, 432, 433, 447, 551, 552, 553, 554, 570, 571, 593, 594, 634, 635, 645, 656], "roc": 371, "wsr88d": [371, 372], "level_iii": 371, "level3info": 371, "asp": 371, "radar_format": 372, "callid": 372, "skip_range_check": 372, "rsl_radar": 372, "id": [372, 377, 585, 593], "verifi": [372, 572, 582], "ioerror": 372, "time_ord": [373, 593], "full_xhdr": 373, "noaa_hh_hdr": 373, "ignore_xhdr": 373, "ignore_sweep_start_m": 373, "sigmet": [373, 593, 645], "iri": [373, 593, 645, 655], "sequenti": [373, 613], "re": [373, 587], "manner": 373, "determind": 373, "maintain": [373, 412, 593], "yet": [373, 604], "warn": [373, 376, 585, 587, 588, 589, 591, 593, 599, 605, 608, 651], "reverse_and_rol": 373, "strictli": 373, "increas": [373, 414, 439, 442, 585, 589, 594, 613, 651, 656], "becom": [373, 634, 648, 651], "thisopt": 373, "strict": 373, "header": [373, 593], "decod": [373, 593], "hurrican": [373, 589, 634, 635], "hunter": 373, "millisecond": 373, "precis": 373, "explic": 373, "read_rsl": [373, 655], "error": [373, 377, 440, 441, 585, 587, 589, 592, 593, 655], "uf": [374, 379, 593, 645], "introduc": [374, 441], "implement": [374, 381, 394, 413, 428, 436, 588, 589, 593, 594, 599, 635, 656], "time_refer": [375, 647], "compliant": 375, "mani": [375, 593, 594, 645, 651, 656, 658], "outlin": [375, 439, 565], "_zlib": [375, 376], "_deflatelevel": [375, 376], "_shuffl": [375, 376], "_fletcher32": [375, 376], "_contingu": [375, 376], "_chunksiz": [375, 376], "_endian": [375, 376], "_least_significant_digit": [375, 376], "_fillvalu": [375, 376, 593, 648, 653], "write_proj_coord_si": 376, "proj_coord_si": 376, "write_point_x_y_z": 376, "write_point_lon_lat_alt": 376, "projectioncoordinatesystem": 376, "toolsui": 376, "written": [376, 378, 379, 593, 596, 645], "appropri": [376, 565, 589, 597], "understood": 376, "rgb": 377, "viridi": [377, 634, 635], "color_level": 377, "warp": 377, "sld": 377, "use_doublequot": 377, "geotiff": [377, 593, 645], "wgs84": 377, "sphere": [377, 566, 578], "latter": [377, 589], "usabl": [377, 585], "byte": [377, 593], "former": 377, "gi": 377, "while": [377, 589, 645, 649, 658], "show": [377, 585, 586, 587, 589, 591, 592, 593, 594, 599, 600, 604, 605, 608, 609, 610, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 634, 635, 641, 647, 649, 651, 652, 653, 656], "lack": [377, 392, 402], "composit": [377, 419, 585, 588, 593, 602, 631, 638, 654], "gdal": [377, 593, 645], "via": [377, 587, 589, 596], "conda": [377, 591, 593, 594, 645, 655, 656, 658], "rbg": 377, "tabl": [377, 585], "column": [377, 556, 567, 568, 585, 587, 588, 589, 593, 602, 631, 638, 654], "categor": [377, 587, 636], "255": [377, 593, 635], "hydrometeor": [377, 427, 438, 593, 602, 631, 638, 649, 654], "gdalwarp": 377, "command": [377, 593, 594, 596, 645, 648, 656, 658], "o": [377, 460, 587, 589, 594, 615, 645, 655, 656], "az": [377, 587, 593, 622, 623], "descriptor": 377, "tiff": 377, "don": [377, 588, 589, 593, 608], "t": [377, 424, 433, 439, 440, 443, 448, 585, 588, 589, 593, 608, 634, 635, 645, 647], "quot": 377, "help": [377, 449, 587, 588, 589, 591, 594, 596, 608, 613, 634, 656, 658], "translat": 377, "sr": [377, 585], "instead": [377, 585, 587, 589, 593, 594, 605, 634, 651, 655, 656, 658], "mdv_field_nam": [378, 593], "field_write_ord": [378, 379], "sentinel": [378, 379], "float32": [378, 585, 588, 589, 593, 632, 647, 649, 653], "_write_as_dtyp": 378, "writabl": 378, "satisfi": 378, "xy": [378, 414], "irregular": 378, "exce": [378, 634, 635], "122": [378, 604, 608, 614, 633, 641], "uint8": 378, "uint16": 378, "scale_factor": [378, 588], "add_offset": [378, 588], "uncompress": 378, "sai": [378, 594, 656], "uf_field_nam": 379, "radar_field_nam": 379, "volume_start": 379, "templates_extra": 379, "radar_beam_width_h": [379, 588], "radar_beam_width_v": [379, 588], "radar_receiver_bandwidth": 379, "prt": [379, 588], "polarization_mod": 379, "round": [379, 589, 593], "_uf_scale_factor": 379, "charact": 379, "advanc": [379, 585], "usag": 379, "templat": [379, 593, 596], "mandatory_head": 379, "optional_head": 379, "field_head": 379, "lazi": [380, 381, 383, 390, 593], "set_lazi": 381, "callabl": [381, 390, 588, 589], "cach": 381, "tradit": 381, "supplement": 381, "syntax": [381, 593], "prevent": [381, 414, 587, 593, 594, 656], "comparison": [381, 593, 608, 635], "__cmp__": 381, "__ge__": 381, "__gt__": 381, "__le__": 381, "__lt__": 381, "__ne__": 381, "nor": 381, "viewitem": 381, "viewkei": 381, "viewvalu": 381, "fromkei": 381, "tradition": 381, "referenc": 381, "lazyloaddictionari": 381, "henc": 381, "key1": 381, "value1": 381, "key2": 381, "value2": 381, "lazy_func": 381, "lambda": 381, "lazykey1": 381, "item": [382, 392, 395, 402, 593], "els": [384, 385, 396, 588], "value_cal": 390, "concret": 394, "__getitem__": [394, 588], "__setitem__": 394, "__delitem__": 394, "__iter__": 394, "__len__": 394, "robust": 404, "src_radar": 405, "dest_radar": 405, "distance_toler": [405, 608], "500": [405, 413, 414, 587, 591, 608, 614, 618], "gatefilter_src": [405, 608], "time_toler": [405, 608], "60": [405, 585, 599, 604, 608, 610, 615, 642, 647, 649, 651], "kd": 405, "tree": [405, 414, 641, 642, 643], "physic": [405, 419, 424, 433, 634, 635], "easi": [405, 419, 645], "equival": [405, 586, 588, 593, 604, 615, 623, 629], "src_radar_i": 405, "src_radar_x": 405, "destin": [405, 407, 587, 591, 593, 608], "toler": [405, 406, 408, 557, 558, 593], "src_radar_tim": 405, "dest_radar_tim": 405, "gate_mapp": 405, "src": [405, 591], "dest": 405, "dest_index": 405, "radar_map": 405, "mapped_radar": [405, 608], "adequ": [405, 608], "getter": [406, 408], "field_list": [407, 437], "zg": [409, 410, 411], "yg": [409, 410, 411], "xg": [409, 410, 411], "roi": [409, 410, 411, 414, 593], "influenc": [409, 412, 413, 414, 651], "grow": [410, 411, 413, 414, 594, 656], "virtual": [411, 413, 414], "grid_shap": [412, 413, 414, 538, 609, 610, 614, 634, 635, 642, 651], "grid_limit": [412, 413, 414, 538, 609, 610, 614, 634, 635, 642, 651], "gridding_algo": 412, "map_gates_to_grid": [412, 593], "copy_field_dtyp": [412, 593], "map_to_grid": [412, 413, 593], "significantli": [412, 414], "faster": [412, 414, 589, 593], "barn": [412, 414, 593, 651], "1964": 412, "techniqu": [412, 635], "maxim": 412, "numer": [412, 593], "analysi": [412, 568, 589, 593], "meteorologi": [412, 416, 419, 439, 448, 565], "climatologi": [412, 448], "396": [412, 588], "409": [412, 593], "cressman": [412, 414, 651], "1959": 412, "monthli": 412, "review": [412, 586, 593], "87": [412, 585, 587], "367": 412, "374": [412, 593], "paulei": [412, 651], "1990": [412, 651], "theoret": 412, "discret": 412, "respons": 412, "118": 412, "1145": [412, 593], "1164": [412, 593], "grid_origin": [413, 414, 610, 614], "grid_origin_alt": [413, 414], "map_roi": [413, 414], "weighting_funct": [413, 414, 651], "barnes2": [413, 414, 593], "toa": [413, 414, 417, 442], "17000": [413, 414, 651], "roi_func": [413, 414, 593, 651], "dist_beam": [413, 414, 651], "constant_roi": [413, 414, 593], "z_factor": [413, 414], "xy_factor": [413, 414], "02": [413, 414, 585, 588, 616, 630, 634, 635, 638, 654], "min_radiu": [413, 414, 593, 651], "h_factor": [413, 414], "nb": [413, 414], "bsp": [413, 414], "weight": [413, 414, 438, 439, 447, 585, 593, 651], "linearli": 413, "roifunct": 413, "dist": [413, 414, 570, 571, 585, 587], "get_roi": 413, "cython": [413, 593], "grid_siz": [413, 414], "grid_from_radar": [413, 414, 609, 610, 614, 634, 635, 642, 651], "around": [413, 424, 433, 555, 591, 609, 624, 627, 634, 647, 649], "copy_field_data": 414, "kd_tree": 414, "leafsiz": 414, "nearbi": [414, 610], "coodin": 414, "azimut": 414, "similarili": 414, "example_roi_func_const": 414, "example_roi_func_dist": 414, "example_roi_func_dist_beam": 414, "altern": [414, 419, 589, 634], "foreach": 414, "metet": 414, "dist_mean": 414, "preserv": [414, 649], "less": [414, 424, 433, 441, 569, 634], "memori": [414, 593], "slower": [414, 439], "It": [414, 441, 555, 565, 587, 589, 594, 597, 608, 656, 658], "leaf": 414, "lookup": 414, "affect": 414, "optim": [414, 439, 593], "natur": [414, 589], "ref_field": [416, 635, 648], "300": [416, 585, 587, 588, 589, 591, 616, 617, 647], "save_nam": [416, 635], "nws_primary_pr": 416, "mm": [416, 592, 634, 635], "hr": [416, 634, 635], "author": [416, 419, 433, 569, 586, 592, 596, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643], "laura": [416, 433, 569, 616, 634, 635], "tomkin": [416, 433, 569, 616, 634, 635], "look": [416, 419, 443, 585, 587, 588, 589, 591, 592, 593, 604, 605, 608, 615, 645, 647, 649, 651, 653], "expect": [416, 441, 594, 656], "relationship": [416, 432], "american": [416, 419], "meteorolog": [416, 419, 428, 448, 589], "2022": [416, 419, 569, 585, 588, 592, 604, 616, 634, 635, 645], "glossari": [416, 419], "ametsoc": [416, 419], "wiki": [416, 419, 436], "r_relat": 416, "25000": [417, 651], "floor": 417, "measur": [417, 424, 426, 432, 433, 438, 439, 440, 441, 556, 588, 589, 591, 594, 634, 635, 645, 647, 648, 649, 651, 652, 653, 656], "nyq": [418, 591, 641, 649], "check_nyq_uniform": 418, "deriv": [418, 439, 441], "try": [418, 439, 587, 592, 651, 652], "vel_dict": 418, "entri": [418, 653], "am": [419, 591, 594, 645, 656], "dry": [419, 636], "world": [419, 602, 612], "aloft": 419, "oppos": [419, 616], "nwp": [419, 636], "why": [419, 589, 592, 594, 656], "would": [419, 585, 586, 587, 588, 591, 593, 594, 604, 605, 649, 651, 656], "think": 419, "turn": [419, 443, 613, 634, 635, 645], "spin": 419, "randi": [419, 591], "chase": [419, 591], "dopplerchas": [419, 593], "cdr_field": 420, "circular": [420, 570, 571, 593, 634], "depolar": [420, 588], "cdr": 420, "l_field": 421, "logarithm": 421, "log10": [421, 608], "l_field_out": 421, "noisedbz_v": 422, "ref_dist": 422, "noise_field": [422, 423], "noisedbz": 422, "dx": [424, 433, 445, 634, 635], "dy": [424, 433, 445, 587, 634, 635], "level_m": [424, 433, 635], "42": [424, 433, 445, 585, 587, 588, 591, 632, 634, 635], "bkg_rad_km": [424, 433, 634, 635], "11": [424, 433, 576, 585, 587, 600, 601, 605, 611, 614, 630, 632, 635, 642, 645, 652, 653, 654], "55": [424, 433, 585, 587, 628, 632, 634, 635], "calc_thr": [424, 433, 634, 635], "weak_echo_thr": [424, 433, 634, 635], "min_dbz_us": [424, 634], "db_averag": [424, 433, 634, 635], "remove_small_object": [424, 433, 634, 635], "min_km2_siz": [424, 433, 634, 635], "val_for_max_conv_rad": [424, 634], "max_conv_rad_km": [424, 634], "cs_core": 424, "nosfcecho": [424, 433, 634, 635], "weakecho": [424, 433, 634, 635], "sf": [424, 634], "conv": [424, 634], "estimate_flag": [424, 433, 634, 635], "estimate_offset": [424, 433, 634, 635], "partit": [424, 433, 445, 599], "pars": [424, 433, 588, 589, 593], "least": [424, 433, 634], "simpler": [424, 433, 634], "percentag": [424, 433], "weak": [424, 433, 634, 635], "surfac": [424, 433, 588, 634, 635], "snow": [424, 427, 433, 556, 569, 588, 616, 634, 635, 636], "underestim": [424, 433, 634, 635], "wih": [424, 433], "convsf_dict": [424, 634, 635], "raindrop": [424, 433, 634, 635], "pacif": [424, 433, 634, 635], "warm": [424, 433, 439, 634], "pool": [424, 433, 634, 635], "implic": [424, 433, 634, 635], "appl": [424, 433, 441, 443, 445, 447, 556, 594, 634, 635, 656], "meteor": [424, 433, 441, 443, 445, 447, 556, 594, 634, 635, 645, 656], "36": [424, 433, 585, 605, 608, 610, 611, 614, 628, 632, 634, 635, 651, 654], "847": [424, 433, 593, 634, 635], "867": [424, 433, 593, 634, 635], "doi": [424, 428, 429, 433, 438, 440, 441, 556, 569, 585, 588, 589, 591, 594, 616, 634, 635, 645, 647, 648, 649, 651, 652, 653, 656], "1175": [424, 433, 441, 556, 593, 634, 635, 645], "1520": [424, 433, 634, 635], "0450": [424, 433, 634, 635], "036": [424, 433, 634, 635], "3c0847": [424, 433, 634, 635], "morsdo": [424, 433, 634, 635], "3e2": [424, 433, 634, 635], "smith": [424, 433, 634, 635], "wilheit": [424, 433, 634, 635], "zipser": [424, 433, 634, 635], "character": [424, 433, 445, 634, 635], "tropic": [424, 433, 634, 635], "kwajex": [424, 433, 634, 635], "385": [424, 433, 593, 634, 635], "415": [424, 433, 634, 635], "jam2206": [424, 433, 634, 635], "the_spectra": 425, "vel_bin": 425, "wavelength": [425, 585, 588], "left_limit": 425, "right_limit": 425, "new_spectra": 425, "new_bin": 425, "a_field": [426, 427, 430], "rr_field": [426, 427, 428, 429, 430, 431, 432], "go": [426, 427, 428, 430, 431, 579, 586, 587, 593, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 648], "diederich": 426, "simmer": [426, 443], "zhang": [426, 443, 556], "tromel": [426, 443], "2015": [426, 429, 443, 645], "wavelenght": 426, "hydrometeorologi": 426, "487": [426, 585], "502": [426, 593], "alphazr": 427, "0376": [427, 429, 430, 431], "betazr": 427, "6112": [427, 429, 430, 431], "alphaz": [427, 430, 431], "betaz": [427, 430, 431], "alphaa": [427, 430], "betaa": [427, 430], "mp_factor": 427, "hydro_field": [427, 438], "main_field": [427, 430, 431], "thresh_max": [427, 430, 431], "main": [427, 430, 431, 585, 587, 588, 589, 593, 594, 619, 656], "secondari": [427, 430, 431, 593], "figuera": [428, 438], "term": [428, 593], "monitor": 428, "french": 428, "sever": [428, 587, 593, 635], "quantit": 428, "ideal": [428, 588], "quarterli": 428, "royal": 428, "2012": [428, 439, 441], "1002": [428, 593], "qj": 428, "1934": 428, "fabri": 429, "fr\u00e9d\u00e9ric": 429, "meterologi": 429, "ch": [429, 636, 637], "pg": 429, "148": 429, "165": 429, "1017": 429, "cbo9781107707405": 429, "blend": [430, 431, 589, 624], "rain_main": [430, 431], "alphakdp": 431, "betakdp": 431, "polynomi": 432, "develop": [432, 433, 585, 589, 593, 635, 645, 655], "mcgill": [432, 645], "doell": 432, "systemat": 432, "variat": [432, 439, 593], "drop": [432, 588, 589, 593], "northern": [432, 587], "germani": 432, "seven": 432, "year": [432, 585, 587, 591, 592, 604, 605], "1998": 432, "technol": [432, 443, 556], "1545": 432, "1556": 432, "joss": 432, "switzerland": 432, "vdf": 432, "hochschulverlag": 432, "ag": [432, 636], "eth": 432, "zurich": 432, "134": [432, 585], "min_val_us": [433, 635], "binary_clos": 433, "val_for_max_rad": [433, 635], "max_rad_km": [433, 635], "core_v": [433, 635], "bkgd_val": [433, 635], "feat_val": [433, 635], "overest_field": [433, 635], "underest_field": [433, 635], "detect": [433, 589, 593, 602, 619, 631, 634, 638, 649, 654], "featur": [433, 586, 587, 589, 597, 602, 616, 631, 634, 638, 645, 654], "2023": [433, 591, 645], "steiner": [433, 445, 593, 634, 635], "1995": [433, 445, 634, 635], "lauratomkin": [433, 569, 593], "overestim": [433, 634, 635], "feature_dict": [433, 635], "climatolog": [433, 445, 634, 635], "storm": [433, 445, 542, 544, 585, 588, 589, 591, 616, 634, 635, 651], "gaug": [433, 445, 634, 635], "1978": [433, 445, 634, 635], "2007": [433, 445, 634, 635], "miller": [433, 569, 616, 635], "2024": [433, 583, 635], "identif": [433, 569, 616, 635], "faint": [433, 635], "strong": [433, 587, 635], "winter": [433, 616, 634, 635], "prep": [433, 635], "sonde_dset": 434, "time_kei": 434, "height_kei": 434, "nvar": 434, "vap": 434, "startard": 434, "ncvar": 434, "return_d": 434, "freq": 435, "hz": [435, 622], "freq_band": 435, "grid1": 436, "grid2": 436, "return_valu": 436, "displac": 436, "en": [436, 591, 593, 594, 645, 655, 656], "wikipedia": 436, "phase_correl": 436, "inspir": 436, "christoph": 436, "gohlk": 436, "lfd": 436, "uci": 436, "imreg": 436, "advect": [436, 437, 593], "trim_edg": 437, "shifted_grid": 437, "subset": [437, 579, 585, 587, 591, 593, 602, 631, 632], "mass_cent": 438, "approach": [438, 585, 588], "besic": 438, "2016": [438, 585, 588, 589, 591, 594, 645, 647, 648, 649, 651, 652, 653, 656], "ndarrai": [438, 653], "centroid": 438, "nclass": 438, "nvariabl": 438, "hydro": [438, 636], "ventura": 438, "grazioli": [438, 440], "gabella": 438, "germann": 438, "bern": [438, 440], "statist": [438, 593, 594, 656], "cluster": 438, "semi": 438, "supervis": 438, "mea": [438, 569, 616, 635], "4425": 438, "4445": 438, "5194": [438, 569, 616, 635], "amt": [438, 569, 616, 635], "cg": 439, "backscatt": [439, 443], "clpf": 439, "length_scal": 439, "first_guess": 439, "finite_ord": 439, "fill_valu": [439, 440, 441, 445, 589, 647, 648, 653], "psidp_field": [439, 440, 441, 636], "verbos": [439, 443, 593, 594, 656], "total": [439, 440, 441, 588, 591, 599, 600, 601, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 654], "maesaka": 439, "monoton": [439, 442, 613], "propag": [439, 440, 441], "notat": 439, "primari": [439, 588], "proport": 439, "dr": 439, "analys": [439, 440, 441], "cost": [439, 593], "nonlinear": 439, "conjug": 439, "gradient": [439, 593, 613], "broyden": 439, "fletcher": 439, "goldfarb": 439, "shanno": 439, "bfg": 439, "howev": [439, 589, 649], "100k": 439, "consider": [439, 591, 634, 635], "parameter": 439, "attentu": 439, "constraint": 439, "bring": [439, 585], "guess": 439, "root": [439, 655, 658], "signifi": [439, 445], "everywher": 439, "exactli": [439, 608], "avoid": [439, 593, 596, 658], "converg": 439, "fact": [439, 441], "closer": 439, "finit": 439, "accuraci": 439, "maxit": 439, "met": 439, "achiev": 439, "somewhat": 439, "arbitrari": 439, "parallel": [439, 440, 441], "thread": [439, 589], "cpu": 439, "multiprocess": 439, "capabl": [439, 588, 649, 653], "relev": [439, 597], "kdp_dict": [439, 440, 441], "phidpf_dict": 439, "phidpr_dict": [439, 440, 441], "forward": [439, 566, 567], "iwanami": 439, "maki": 439, "seventh": 439, "european": 439, "confer": 439, "hydrologi": 439, "rcov": 440, "pcov": 440, "prefilter_psidp": [440, 441], "filter_opt": [440, 441], "kalman": 440, "schneeb": 440, "psidp": [440, 441], "char": [440, 441], "capit": [440, 441], "intercept": 440, "slope": 440, "3x3": 440, "covari": 440, "matrix": [440, 589, 593], "4x4": 440, "filter_psidp": [440, 441, 593], "enabl": [440, 441, 588, 591, 593], "kdp_std_dict": 440, "dev": [440, 588, 591, 594, 651, 656], "ensembl": 440, "ieee": 440, "geosci": 440, "remot": [440, 587, 588, 589, 593, 594, 604, 656], "sen": 440, "52": [440, 443, 585, 588, 632], "5137": 440, "5149": 440, "1109": [440, 593], "tgr": 440, "2287017": 440, "windsiz": 441, "n_iter": 441, "vulpiani": [441, 593], "pre": [441, 593], "advantag": 441, "eat": 441, "gianfranco": 441, "mario": 441, "montopoli": 441, "luca": 441, "delli": 441, "passeri": 441, "antonio": 441, "gioia": 441, "pietro": 441, "giordano": 441, "frank": 441, "marzano": 441, "On": [441, 586, 587], "dual": [441, 593], "mountain": 441, "climatol": [441, 556, 634, 635], "51": [441, 585, 632], "405": [441, 593], "425": [441, 593], "05024": 441, "profile_field": 442, "height_field": 442, "3re": 442, "whole": [442, 593], "height_dict": 442, "profile_dict": 442, "desired_angl": [443, 593], "quasi": 443, "qvp": [443, 593], "wanted_angl": 443, "dictonari": 443, "quasai": 443, "troemel": 443, "kumjian": 443, "clim": [443, 588, 589], "2529": 443, "2548": 443, "meteorol": [443, 634, 635], "54": [443, 585, 587, 588, 605, 637], "2344": 443, "2359": 443, "reev": 443, "tschallen": 443, "wai": [443, 588, 594, 596, 608, 647, 656, 658], "submit": [443, 589, 645], "intens": 445, "work_level": 445, "3000": [445, 647, 651], "peak_rel": 445, "area_rel": 445, "medium": 445, "bkg_rad": 445, "11000": [445, 651], "use_intens": 445, "greater": [445, 589, 634], "bright": [445, 585], "sgp": [445, 538], "peaked": 445, "eclass": 445, "z_want": [447, 448, 594, 637, 656], "valid_ray_min": [447, 594, 656], "velocity_azimuth_displai": [447, 594, 656], "one_sweep_radar": 447, "extract_sweep": [447, 591, 634, 635, 637], "vad": [447, 448, 593, 594, 602, 631, 638, 654, 656], "amount": [447, 588, 591, 594, 635, 651, 656], "_averag1d": [447, 594, 656], "idw": 447, "brown": [447, 593, 594, 656], "wexler": [447, 594, 656], "1968": [447, 594, 656], "kinemat": [447, 594, 656], "105": [447, 594, 637, 656], "113": [447, 594, 632, 656], "linespac": 448, "michelson": [448, 593, 645], "andersson": 448, "koistinen": [448, 645], "collier": 448, "riedl": 448, "szturc": 448, "gjertsen": 448, "nielsen": 448, "overgaard": 448, "2000": [448, 585, 609, 651], "baltex": 448, "centr": 448, "methodologi": [448, 556, 649], "smhi": 448, "swedish": 448, "hydrolog": 448, "institut": [448, 585, 653], "norrkop": 448, "suffix": 460, "tmp": 460, "dir": 460, "temporari": [460, 593], "my_cwd": 460, "getcwd": 460, "tmpdir": 460, "_": [460, 587, 591, 604, 605, 636], "txt": [460, 593, 655], "wt": 460, "assert": [460, 593, 594, 656], "isfil": 460, "path_to_fil": 537, "local": [537, 586, 587, 591, 593, 594, 645, 655, 656], "without": [538, 550, 585, 588, 593, 655], "site": [538, 585, 587, 588, 589, 590, 591, 599, 605, 632, 648, 651, 655], "oklahoma": [538, 591], "puls": [541, 588, 593, 649], "sigma": [542, 624, 625], "mu": 542, "gaussian": [542, 624], "sapr": 543, "dp_phase_shift": [543, 632, 647], "diff_phas": [543, 647], "differential_reflect": [543, 604, 617, 624, 652, 653], "rectangular": [544, 545, 589, 593], "alia": [548, 549, 589, 593], "miscellan": 550, "depreci": [550, 593], "caution": 550, "radian": [551, 553, 574, 585], "std": [553, 554, 571, 576], "convolut": 555, "ndimag": [555, 593, 624, 625], "generic_filt": 555, "convers": [555, 588], "pi": [555, 585, 649], "std_dev": 555, "azimuth_spread": 556, "spatial_spread": 556, "spatial_rang": 556, "sphere_dist": [556, 568], "for_azimuth": [556, 568], "get_sweep_rai": 556, "subset_field": 556, "assemble_column": 556, "murphi": 556, "2020": [556, 589, 593, 594, 616, 645, 655, 656], "columnar": 556, "cvp": 556, "ic": [556, 624, 636], "situ": 556, "37": [556, 585, 588, 608, 632, 635, 637, 652], "1623": 556, "1642": 556, "jtech": 556, "0011": 556, "bukov\u010di\u0107": 556, "zrni\u0107": 556, "59": [556, 585, 588], "991": [556, 593], "1009": [556, 593], "19": [556, 585, 587, 588, 593, 637, 644, 653], "0140": 556, "az_tol": 557, "radar_rhi": 557, "target_elev": 558, "el_tol": 558, "radar_ppi": 558, "epoch": [559, 560, 561, 562, 563, 585], "max_offset": 564, "running_win_dt": 564, "deg_rng": 564, "is_ppi": 564, "wise": 564, "could": [564, 589, 594, 605, 656], "strategi": [564, 585], "might": [564, 586, 647, 658], "goe": [564, 589], "navg": 565, "nnoise_min": 565, "hildebrand": [565, 593], "sehkon": 565, "1974": 565, "spectral": [565, 585, 588, 593], "articl": 565, "peak": [565, 588, 649], "var": [565, 580, 581, 585], "varianc": 565, "nnois": 565, "sekhon": [565, 593], "808": 565, "811": [565, 593], "target_latitud": [566, 578], "target_longitud": [566, 578], "bear": [566, 587], "alongitudeg": 566, "great": [566, 578], "circl": [566, 578, 634], "known": [566, 593, 594, 653, 656], "6371000": [566, 578], "calculatitude": 566, "degress": [566, 578], "further": [568, 586, 588], "get_column_rai": 568, "mute_field": [569, 616], "mute_threshold": [569, 616], "field_threshold": [569, 616], "discern": 569, "mute": [569, 593, 602, 612, 630, 634, 635, 654], "allen": [569, 616, 635], "5515": [569, 616, 635], "5525": [569, 616, 635], "interval_min": [570, 571], "interval_max": [570, 571], "endpoint": [570, 571], "to_vpt": 572, "90": [572, 585, 587, 588, 594, 656], "verticl": 572, "radar1": 573, "radar2": 573, "angles1": 574, "angles2": 574, "angle1": 575, "angle2": 575, "eg": 576, "ma": [576, 594, 608, 609, 634, 635, 648, 652, 656], "interp_kind": 577, "sim_vel_field": 577, "kind": [577, 585, 599], "slinear": 577, "quadrat": 577, "cubic": 577, "interp1d": [577, 594, 656], "sim_vel": [577, 594, 656], "rng_min": 579, "rng_max": 579, "ele_min": 579, "ele_max": 579, "azi_min": 579, "azi_max": 579, "coverag": [579, 585, 593, 594, 656], "11pt": 580, "stdev": 580, "texarrai": 580, "pyradarobj": 580, "tex": 581, "single_scan": 582, "is_vpt": 582, "mislabel": 582, "properli": [582, 594, 605, 656], "releas": [583, 590, 594, 597, 645, 648, 651, 655, 656], "post13": 583, "jan": 583, "04": [583, 585, 588, 591, 632], "guid": [583, 585, 586, 593, 645], "public": [583, 585, 589, 591, 593, 594, 647, 648, 649, 651, 652, 653, 656], "broken": [583, 593], "aerosol": 585, "experi": 585, "depart": [585, 588, 589, 591, 647, 648, 649, 651, 652, 653], "energi": [585, 588, 589, 591, 647, 648, 649, 651, 652, 653], "iop": 585, "goal": 585, "studi": 585, "lifecycl": 585, "houston": [585, 604], "impact": [585, 591, 624], "uniqu": 585, "suit": [585, 593, 594, 651, 656], "seabreez": 585, "coast": [585, 589], "cleaner": [585, 652], "air": [585, 589], "pollut": 585, "click": [585, 586, 596], "post": [585, 587, 588, 589, 591, 593, 596, 645], "overlai": 585, "texa": [585, 604], "lightn": 585, "csapr2": 585, "wildfir": 585, "smoke": 585, "entrain": 585, "juli": [585, 605], "12": [585, 587, 588, 592, 599, 604, 605, 615, 622, 630, 632, 635, 645, 648, 652, 653], "we": [585, 587, 588, 589, 591, 594, 597, 604, 605, 608, 613, 632, 634, 635, 641, 647, 648, 649, 651, 652, 653, 655, 656, 657, 658], "highlight": [585, 586, 589], "minut": [585, 587, 588, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643], "pyart": [585, 587, 591, 594, 596, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645, 647, 648, 649, 651, 652, 653, 655, 656, 658], "pyplot": [585, 586, 587, 588, 589, 591, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 647, 648, 649, 651, 652], "plt": [585, 586, 587, 588, 589, 591, 593, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 647, 648, 649, 651, 652], "xr": [585, 588], "s3f": 585, "ccr": [585, 587, 589, 591, 604, 605, 608, 614, 615, 621, 628, 632, 634, 635, 641, 648, 649, 652], "panda": [585, 588, 591, 593, 658], "pd": [585, 587, 588, 591], "kdtree": 585, "inlin": [585, 624, 625], "satellit": 585, "download": [585, 586, 588, 589, 594, 599, 600, 602, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645, 656, 658], "longwav": 585, "infrar": 585, "ensur": [585, 587, 593, 635], "c13": 585, "denot": 585, "anonym": [585, 587], "credenti": 585, "s3filesystem": 585, "day_no": 585, "168": 585, "dai": [585, 591], "16th": 585, "leap": 585, "hour": [585, 589, 591, 604, 605], "goes16": 585, "abi": 585, "l1b": 585, "radc": 585, "02d": 585, "fi": 585, "or_abi": 585, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 585, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 585, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 585, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 585, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 585, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 585, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 585, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 585, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 585, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 585, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 585, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 585, "goes_d": 585, "open_dataset": [585, 588], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 585, "lt": [585, 588], "gt": [585, 588], "1500": [585, 647], "2500": 585, "number_of_time_bound": 585, "number_of_image_bound": 585, "num_star_look": 585, "datetime64": [585, 588, 632], "07": [585, 587, 588, 605, 611, 616, 634, 635, 653, 654], "1282": 585, "1013": 585, "y_imag": 585, "08624": 585, "x_imag": 585, "03136": 585, "band_id": 585, "int8": 585, "band_wavelength": 585, "33": [585, 588, 589, 635, 653, 654], "t_star_look": 585, "band_wavelength_star_look": 585, "rad": [585, 588], "dqf": 585, "time_bound": 585, "goes_imager_project": 585, "int32": [585, 653], "2147483647": 585, "y_image_bound": 585, "x_image_bound": 585, "algorithm_dynamic_input_data_contain": 585, "processing_parm_version_contain": 585, "algorithm_product_version_contain": 585, "star_id": 585, "channel_integration_tim": 585, "336": [585, 593], "channel_gain_field": 585, "naming_author": 585, "nesdi": 585, "standard_name_vocabulari": 585, "v35": 585, "commerc": 585, "production_sit": 585, "wcda": 585, "timeline_id": 585, "date_cr": 585, "12t20": 585, "09": [585, 587, 601, 606, 630, 634, 635, 654], "3z": 585, "time_coverage_start": [585, 647, 653], "time_coverage_end": [585, 647], "08": 585, "7z": 585, "lut_filenam": 585, "spacelookparam": 585, "fm1a_cdrl79revp_pr_09_00_02": 585, "f45b564c": 585, "dcb9": 585, "498a": 585, "ac56": 585, "da80a1d735a5xarrai": 585, "datasetdimens": [585, 588], "1500x": 585, "2500number_of_time_bound": 585, "2number_of_image_bound": 585, "2band": 585, "1num_star_look": 585, "24coordin": 585, "j2000": 585, "mid": 585, "secondsstandard_nam": 585, "timeaxi": 585, "tbound": 585, "time_boundsarrai": 585, "x27": [585, 588], "537394048": 585, "float640": 585, "04432": 585, "04427unit": 585, "radaxi": 585, "ylong_nam": 585, "coordinatestandard_nam": 585, "projection_y_coordinatearrai": 585, "128212": 585, "128156": 585, "1281": 585, "04438": 585, "044324": 585, "044268": 585, "03856": 585, "03861unit": 585, "xlong_nam": 585, "projection_x_coordinatearrai": 585, "101332": 585, "101276": 585, "10122": 585, "0385": 585, "038556": 585, "038612": 585, "imagestandard_nam": 585, "projection_y_coordinateunit": 585, "yarrai": 585, "projection_x_coordinateunit": 585, "numberstandard_nam": 585, "sensor_band_identifierunit": 585, "1arrai": [585, 588], "central": [585, 587, 591], "wavelengthstandard_nam": 585, "sensor_band_central_radiation_wavelengthunit": 585, "umarrai": 585, "star": 585, "tarrai": 585, "01t11": 585, "43": [585, 588, 591], "000000000": [585, 588], "starstandard_nam": 585, "radiancesstandard_nam": 585, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 585, "12valid_rang": 585, "4094": 585, "mw": 585, "cm": [585, 625], "1resolut": 585, "000056": 585, "radgrid_map": 585, "goes_imager_projectioncell_method": 585, "pointancillary_vari": 585, "3750000": 585, "radianc": 585, "flagsstandard_nam": 585, "status_flagvalid_rang": 585, "1grid_map": 585, "pointflag_valu": 585, "flag_mean": 585, "good_pixel_qf": 585, "conditionally_usable_pixel_qf": 585, "out_of_range_pixel_qf": 585, "no_value_pixel_qf": 585, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 585, "5percent_good_pixel_qf": 585, "0percent_conditionally_usable_pixel_qf": 585, "0percent_out_of_range_pixel_qf": 585, "0percent_no_value_pixel_qf": 585, "0percent_focal_plane_temperature_threshold_exceeded_qf": 585, "00": [585, 587, 588, 591, 593, 601, 606, 611, 630, 638, 639, 644, 654], "326423040": 585, "748365056": 585, "projectiongrid_mapping_nam": 585, "geostationaryperspective_point_height": 585, "35786023": 585, "0semi_major_axi": 585, "6378137": 585, "0semi_minor_axi": 585, "6356752": 585, "31414inverse_flatten": 585, "298": 585, "2572221latitude_of_projection_origin": 585, "0longitude_of_projection_origin": 585, "0sweep_angle_axi": 585, "south": [585, 589, 617], "extent": [585, 587, 588, 591, 610], "imageunit": 585, "radarrai": 585, "12824": 585, "04424": 585, "10136": 585, "03864": 585, "nominal_satellite_subpoint_lat": 585, "nomin": 585, "subpoint": 585, "standard_nam": [585, 634, 635, 648, 653], "latitudeunit": [585, 588], "degrees_northarrai": 585, "nominal_satellite_subpoint_lon": 585, "longitudeunit": [585, 588], "degrees_eastarrai": 585, "199997": 585, "nominal_satellite_height": 585, "gr": 585, "80": [585, 587, 600, 628, 633], "ellipsoid": 585, "height_above_reference_ellipsoidunit": 585, "kmarrai": 585, "35786": 585, "023438": 585, "geospatial_lat_lon_ext": 585, "geospati": 585, "referencesgeospatial_westbound_longitud": 585, "152": [585, 635], "10928geospatial_northbound_latitud": 585, "56": [585, 588, 632, 637, 638], "76145geospatial_eastbound_longitud": 585, "94688geospatial_southbound_latitud": 585, "14": [585, 588, 589, 591, 604, 605, 606, 613, 615, 641, 653, 654], "57134geospatial_lat_cent": 585, "083002geospatial_lon_cent": 585, "096954geospatial_lat_nadir": 585, "0geospatial_lon_nadir": 585, "0geospatial_lat_unit": 585, "degrees_northgeospatial_lon_unit": 585, "96921e": 585, "yaw_flip_flag": 585, "spacecraft": 585, "yaw": 585, "flip": 585, "configurationvalid_rang": 585, "1flag_valu": 585, "truearrai": 585, "esun": 585, "bandpass": 585, "solar": 585, "irradi": 585, "sun": 585, "distancestandard_nam": 585, "toa_shortwave_irradiance_per_unit_wavelengthunit": 585, "um": 585, "1cell_method": 585, "meanarrai": 585, "kappa0": 585, "incom": 585, "d2": 585, "instantan": [585, 593], "divid": 585, "reflectanceunit": 585, "planck_fk1": 585, "wavenumb": 585, "c2": 585, "nu3": 585, "emiss": 585, "monochromat": 585, "nu": 585, "constantsunit": 585, "10803": 585, "299805": 585, "planck_fk2": 585, "karrai": 585, "1392": [585, 593], "73999": 585, "planck_bc1": 585, "bc_1": 585, "bc_2": 585, "planck_funct": 585, "wavenumberunit": 585, "0755": 585, "planck_bc2": 585, "99975": 585, "valid_pixel_count": 585, "condition": 585, "pixelsunit": 585, "countgrid_map": 585, "sum": [585, 592], "comment": [585, 586, 625, 653], "3702838": 585, "missing_pixel_count": 585, "saturated_pixel_count": 585, "satur": 585, "radiometr": 585, "geoloc": 585, "undersaturated_pixel_count": 585, "undersatur": 585, "focal_plane_temperature_threshold_exceeded_count": 585, "exceed": 585, "thresholdunit": 585, "min_radiance_value_of_valid_pixel": 585, "pixelsstandard_nam": 585, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 585, "6443": 585, "185": 585, "5699": 585, "849287": 585, "max_radiance_value_of_valid_pixel": 585, "154": [585, 620, 621, 630, 654], "23053": 585, "mean_radiance_value_of_valid_pixel": 585, "197975": 585, "std_dev_radiance_value_of_valid_pixel": 585, "toa_outgoing_radiance_per_unit_wavenumberunit": 585, "standard_devi": 585, "985853": 585, "maximum_focal_plane_temperatur": 585, "focal": 585, "valuevalid_rang": 585, "951939": 585, "focal_plane_temperature_threshold_increas": 585, "bound": [585, 588, 635], "81": [585, 587, 653], "focal_plane_temperature_threshold_decreas": 585, "decreas": 585, "percent_uncorrectable_l0_error": 585, "percent": 585, "l0": 585, "errorsvalid_rang": 585, "percentgrid_map": 585, "earth_sun_distance_anomaly_in_au": 585, "anomali": [585, 635], "astronom": 585, "unitsunit": 585, "uacell_method": 585, "016543": 585, "datainput_abi_l0_data": 585, "m6_g16_s20221932006173_e20221932008557_c": 585, "ncarrai": 585, "filenamesl1b_processing_parm_vers": 585, "parm": 585, "rad_g16_v01r00": 585, "ziparrai": 585, "packag": [585, 586, 587, 588, 589, 591, 593, 594, 599, 605, 645, 648, 651, 655, 656, 658], "versionalgorithm_vers": 585, "alg": 585, "rad_v01r00": 585, "zipproduct_vers": 585, "v01r00arrai": 585, "stararrai": 585, "vnir": 585, "ir": 585, "telemetryunit": 585, "countarrai": 585, "gain": [585, 588], "noaaconvent": 585, "7standard_name_vocabulari": 585, "administr": [585, 589, 604], "servicesproject": 585, "goesproduction_sit": 585, "wcdasproduction_environ": 585, "oespatial_resolut": 585, "2km": 585, "nadirmetadata_convent": 585, "discoveri": 585, "0orbital_slot": 585, "eastplatform_id": 585, "g16instrument_typ": 585, "baselin": 585, "scene_id": 585, "conusinstrument_id": 585, "fm1titl": 585, "radiancessummari": 585, "digit": 585, "outgo": 585, "engin": 585, "radiancekeywords_vocabulari": 585, "nasa": 585, "master": [585, 593, 596, 625], "gcmd": 585, "scienc": [585, 589, 591, 647, 648, 649, 651, 652, 653], "0iso_series_metadata_id": 585, "a70be540": 585, "c38b": 585, "11e0": 585, "962b": 585, "0800200c9a66licens": 585, "unclassifi": 585, "restrict": 585, "approv": 585, "processing_level": 585, "aeronaut": 585, "l1bcdm_data_typ": 585, "imagedataset_nam": 585, "ncproduction_data_sourc": 585, "realtimetimeline_id": 585, "6date_cr": 585, "3ztime_coverage_start": 585, "3ztime_coverage_end": 585, "7zlut_filenam": 585, "637827000": 585, "h5": [585, 593], "qtableband13": 585, "fm1a_cdrl79revh_do_08_00_00": 585, "582860861": 585, "caltargettimeinterv": 585, "fm1a_cdrl79revp_do_08_00_01": 585, "611906620": 585, "bandsaturationlimit": 585, "600000000": 585, "solarspacelookparam": 585, "fm1a_adr1233_pr_09_08_25": 585, "709281036": 585, "deadrowlistparam": 585, "mirror_record": 585, "fm1a_cdrl79revg_do_07_00_00": 585, "kalmanastroconst": 585, "xml": [585, 591], "kalmanfiltercontrol": 585, "fm1a_pr_09_08_02": 585, "677650371": 585, "kalmanmeasmaxsens": 585, "fmaa_int_only_do_09_01_00": 585, "652936814": 585, "kalmanpreprocessorcontrol": 585, "fm1a_cdrl79revj_pr_09_06_02": 585, "657795700": 585, "kalmanreferencedata": 585, "888": 585, "kalmanstarcatalog": 585, "abi_navigationrdp_band13": 585, "fm1a_cdrl79revj_do_07_00_00": 585, "abi_navigationparameters_band13": 585, "fm1a_cdrl79revh_do_07_00_00": 585, "abi_resamplingimplementation_band13": 585, "fm1a_cdrl79revh_do_07_02_00": 585, "602129336": 585, "abi_resamplingparameters_band13": 585, "starlookparam": 585, "stardetectionparam": 585, "resamplingscaledconvers": 585, "fmaa_int_only_do_08_00_00": 585, "1111": [585, 588, 593], "blockreleaseregion": 585, "2222": 585, "csv": [585, 587], "ir_retrievalparamet": 585, "fm1a_cdrl79revh_do_09_01_00": 585, "652936750": 585, "radiancelut_band13": 585, "fm1a_cdrl79reve_do_08_00_00": 585, "ict_record": 585, "fm1a_tmabi_18_159_pr_09_00_02": 585, "icm_conversionconst": 585, "fm1a_cdrl43": 585, "18_do_09_01_00": 585, "icm_sensorcoeffici": 585, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 585, "676949608": 585, "h5id": 585, "da80a1d735a5": 585, "team": 585, "bobbi": [585, 608], "jackson": [585, 608], "pug": 585, "l2": [585, 593], "file_id": 585, "def": [585, 587, 591, 593, 594, 613, 635, 656], "calculate_degre": 585, "x_coordinate_1d": 585, "y_coordinate_1d": 585, "projection_info": 585, "lon_origin": 585, "attr": 585, "longitude_of_projection_origin": 585, "perspective_point_height": 585, "semi_major_axi": 585, "r_eq": 585, "r_pol": 585, "semi_minor_axi": 585, "matric": 585, "x_coordinate_2d": 585, "y_coordinate_2d": 585, "meshgrid": [585, 608], "lambda_0": 585, "a_var": 585, "b_var": 585, "c_var": 585, "r_": 585, "s_x": 585, "s_y": 585, "s_z": 585, "conu": 585, "seterr": 585, "abi_lat": 585, "arctan": 585, "abi_lon": 585, "crop": 585, "our": [585, 587, 590, 604, 605, 608, 613, 614, 632, 634, 635, 641, 645], "interest": [585, 587, 588, 589, 591, 608, 634], "circ": 585, "95": [585, 587, 632, 653], "nan_to_num": 585, "9999": [585, 653], "lat_rang": 585, "lon_rang": 585, "lat_min": 585, "lat_max": 585, "lat_min_bound": 585, "argmin": 585, "ab": 585, "lat_max_bound": 585, "lon_min": 585, "lon_max": 585, "lon_min_bound": 585, "lon_max_bound": 585, "a1": [585, 588, 621], "disoveri": 585, "toolkit": [585, 588, 589, 591, 647, 648, 649, 651, 652, 653], "5439": [585, 588], "1467901": 585, "page": [585, 590, 593, 596], "block": [585, 593], "autom": [585, 591], "catalogu": 585, "adam": [585, 593], "theisen": 585, "geometri": [585, 591, 593], "cell_track_info": 585, "read_csv": [585, 587], "raw": [585, 599, 600], "githubusercont": 585, "com": [585, 594, 605, 625, 655, 656, 658], "adamtheisen": [585, 593], "cell": [585, 593, 624, 642], "stat": [585, 593], "houcsapr": 585, "20220617": 585, "index_col": 585, "parse_d": 585, "unnam": 585, "scan_mod": [585, 588], "scan_nam": [585, 588, 593], "template_nam": 585, "azimuth_min": 585, "azimuth_max": 585, "elevation_min": 585, "elevation_max": 585, "range_min": 585, "range_max": 585, "cell_azimuth": 585, "cell_rang": 585, "cell_zh": 585, "ngates_gt_0": 585, "ngates_gt_10": 585, "ngates_gt_30": 585, "ngates_gt_50": 585, "ngates_gt_10_5km": 585, "ngates_gt40_5km": 585, "03": [585, 588, 604, 630, 638, 644, 654], "hou": 585, "303": [585, 593], "74450": 585, "637207": 585, "383545": 585, "109900": 585, "297": 585, "59216": 585, "307": [585, 593], "63367": 585, "021240": 585, "988037": 585, "910767": 585, "700": [585, 588, 591, 593], "930866": 585, "78": 585, "302": 585, "64587": 585, "645874": 585, "1800": [585, 587, 647], "776333": 585, "55798": 585, "59094": 585, "97546": 585, "99744": 585, "975464": 585, "900": [585, 647], "972101": 585, "46": [585, 632], "2826": 585, "301": [585, 593, 601], "48132": 585, "50330": 585, "648193": 585, "382324": 585, "503296": 585, "62400": 585, "327583": 585, "990": 585, "989": [585, 593], "210": [585, 635], "995": [585, 593], "2827": 585, "305": [585, 593], "70007": 585, "404297": 585, "700073": 585, "13600": 585, "29": [585, 588], "037998": 585, "2828": 585, "23510": 585, "26807": 585, "235107": 585, "459156": 585, "2829": 585, "296": [585, 593], "08704": 585, "306": [585, 593], "16150": 585, "999268": 585, "998291": 585, "646362": 585, "59100": 585, "882927": 585, "807": 585, "783": [585, 593], "27": [585, 589, 610, 611, 632, 654], "63": [585, 653], "830": 585, "2830": 585, "05835": 585, "08032": 585, "058350": 585, "62800": 585, "198204": 585, "767": [585, 593], "76": 585, "773": [585, 593, 600, 601, 654], "2831": 585, "row": [585, 587, 589], "notebook": [585, 587, 588, 592, 593, 599, 600, 602, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 648, 651, 652, 658], "focus": [585, 587, 588], "much": [585, 587, 588, 589, 591, 593, 649, 651, 652], "frequent": 585, "start_hour": 585, "end_hour": 585, "utc": [585, 587, 588, 589, 604, 605, 627], "48": [585, 587, 610], "26": 585, "38": [585, 588, 605], "57": [585, 634, 635], "rjackson": [585, 608], "paw": 585, "houcsapr2cfrs2": 585, "20220712": 585, "200714": 585, "easili": [585, 591], "eol": 585, "cgi": 585, "codiac": 585, "fgr_form": 585, "016": 585, "densiti": [585, 636], "lma_d": 585, "lylout_220712_000000_86400_map500m": 585, "afternoon": 585, "203229": 585, "lylout_220617_000000_86400_map500m": 585, "radarmapdisplai": [585, 587, 591, 593, 604, 605, 608, 615, 621, 632, 641, 643, 647, 648, 649, 651, 652], "subplot": [585, 587, 588, 589, 591, 593, 604, 608, 613, 614, 615, 627, 632, 633, 634, 635, 636, 637, 641, 649], "subplot_kw": 585, "disp": 585, "graph": [585, 586, 587, 588, 589, 591, 593, 599, 600, 604, 605, 608, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 641, 642, 643, 647, 648, 649, 651, 652], "150": [585, 586, 615, 620, 630, 649, 654], "plot_ppi_map": [585, 587, 591, 593, 604, 605, 608, 615, 621, 632, 641, 648, 649, 652], "flash_tim": 585, "squeez": [585, 647], "argwher": [585, 608], "logical_and": [585, 608], "flash_time_start": 585, "17t20": 585, "scatter": [585, 587, 591, 614, 632], "flash_center_longitud": 585, "flash_center_latitud": 585, "set_xlim": [585, 628, 636], "96": [585, 587, 588, 608, 645, 652], "94": [585, 653], "set_ylim": [585, 628, 636], "deprecationwarn": [585, 651], "escap": 585, "sequenc": [585, 589], "xf": 585, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 585, "ipykernel_41252": 585, "2371313213": 585, "opt": [585, 586, 588, 589, 593], "anaconda3": [585, 588, 589, 645, 648, 651, 655, 658], "env": [585, 586, 588, 589, 591, 593, 599, 605, 645, 648, 651, 658], "pyart_env2": 585, "lib": [585, 588, 589, 591, 599, 605, 648, 651, 655], "python3": [585, 588, 589, 591, 592, 599, 605], "mpl": [585, 593, 636, 648, 651], "gridlin": [585, 589, 591, 615], "451": [585, 588], "userwarn": [585, 599, 605], "xlabels_top": [585, 589], "deprec": [585, 589, 596, 648, 651], "top_label": [585, 591, 615], "toggl": [585, 593], "visibl": [585, 589, 593], "ylabels_right": [585, 589], "right_label": [585, 591, 615], "microphys": 585, "strike": 585, "overlaid": 585, "approxim": [585, 588, 593], "csapr_rhi": 585, "203012": 585, "flash_alt": 585, "flash_init_altitud": 585, "flash_lon": 585, "flash_init_longitud": 585, "flash_lat": 585, "flash_init_latitud": 585, "rhi_lon": 585, "flatten": [585, 608], "rhi_lat": 585, "rhi_alt": 585, "kdtree_data": 585, "stack": [585, 588, 591, 594, 655, 656], "inp_data": 585, "where_in_rhi": 585, "flash_rang": 585, "1e3": 585, "motiv": [586, 589], "blog": [586, 591, 593, 594, 656], "come": [586, 589, 634], "colorschem": 586, "vision": 586, "defici": 586, "illustr": 586, "collabor": 586, "contributor": [586, 596, 645, 657], "guidenc": 586, "ve": 586, "trip": [586, 652], "me": 586, "assist": 586, "https_link_to_your_fork": 586, "unfamiliar": 586, "yml": [586, 593, 645, 658], "slightli": [586, 589, 615], "latest": [586, 593, 594, 645, 656], "button": [586, 590, 596], "kshrc": 586, "export": [586, 655, 658], "pip": [586, 594, 655, 656, 658], "checkout": [586, 594, 596, 656], "newblog_post": 586, "plot_ppi_mdv": [586, 620, 630, 654], "radardisplai": [586, 587, 588, 593, 599, 600, 613, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 629, 633, 636], "jonathan": [586, 599, 600, 609, 610, 617, 618, 620, 622, 626, 629, 658], "helmu": [586, 589, 591, 594, 599, 600, 609, 610, 617, 618, 620, 622, 626, 629, 645, 647, 648, 649, 651, 652, 653, 656, 658], "jhelmu": [586, 593, 599, 600, 609, 610, 617, 618, 620, 622, 626, 629], "anl": [586, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 617, 618, 619, 620, 622, 624, 625, 626, 627, 629, 632, 633, 641, 642, 643], "licens": [586, 594, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645, 656], "bsd": [586, 594, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645, 656], "claus": [586, 594, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 656], "get_test_data": [586, 599, 600, 608, 609, 610, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 641, 642, 643], "110635": [586, 609, 620, 651], "figsiz": [586, 587, 588, 589, 591, 599, 600, 604, 605, 608, 613, 614, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 633, 634, 635, 636, 641, 648, 649, 651, 652], "add_subplot": [586, 599, 600, 609, 610, 617, 618, 619, 620, 622, 623, 624, 625, 626, 629], "111": [586, 587, 589, 608, 609, 610, 615, 618, 619, 620, 624, 625, 626, 632], "get_cmap": [586, 616, 634, 635], "jet": 586, "colorbind": 586, "pyart_homeyerrainbow": [586, 588, 608, 613, 614, 615, 620, 623, 627, 628, 633], "plot_rhi_cfradial_singlescan": [586, 623, 630, 654], "panel": [586, 602, 612, 630, 654], "sgpxsaprrhicmaci5": [586, 622, 623, 627], "c0": [586, 599, 622, 623, 627, 648], "20110524": [586, 622, 623, 627], "015604_nc4": [586, 622, 623, 627], "read_cfradi": [586, 599, 608, 610, 614, 622, 623, 627, 636, 637], "subplots_adjust": [586, 588, 613, 622, 623], "hspace": [586, 588, 622, 623], "xlabel": [586, 588, 608, 622, 623, 649], "ylabel": [586, 588, 608, 622, 623, 649], "stage": 586, "my": [586, 655], "untrack": [586, 594, 656], "blog_pr": 586, "restor": 586, "discard": 586, "_static": 586, "As": [586, 588, 594, 647, 649, 651, 652, 656], "statement": [586, 593, 594, 656], "hint": [586, 589, 595], "wait": [586, 589], "editor": [586, 592, 594, 656, 658], "enh": [586, 593], "abort": 586, "person": 586, "addition": [586, 589], "anyon": 586, "respond": 586, "walk": [587, 588, 591, 592], "septemb": 587, "2021": [587, 634, 635], "thunderstorm": 587, "southern": 587, "wisconsin": [587, 593], "illinoi": 587, "trail": 587, "damag": [587, 591], "milwauke": [587, 591], "madison": 587, "imageri": [587, 591], "russ": 587, "schumach": 587, "colorado": 587, "unvers": 587, "put": 587, "togeth": [587, 588, 589, 593], "hi": [587, 635], "glob": [587, 588, 591, 594, 656], "math": 587, "atan2": 587, "tempfil": 587, "cfeatur": [587, 589, 591], "mcolor": [587, 589, 616, 634, 635], "mdate": 587, "uscounti": [587, 591], "imageio": 587, "pytz": [587, 593], "temploc": 587, "mkdtemp": 587, "filterwarn": [587, 588, 589, 591, 608], "let": [587, 588, 589, 590, 593, 594, 604, 605, 608, 613, 615, 632, 634, 635, 641, 647, 649, 651, 652, 653, 656, 658], "machin": [587, 588, 591, 658], "kmkx": [587, 591], "nexrad_path": 587, "level2": [587, 591, 604, 605, 616, 634, 635], "d_": 587, "kmkx20210907_170101_v06": 587, "kmkx20210907_170739_v06": 587, "kmkx20210907_171431_v06": 587, "kmkx20210907_172123_v06": 587, "kmkx20210907_172814_v06": 587, "kmkx20210907_173452_v06": 587, "kmkx20210907_174130_v06": 587, "kmkx20210907_174807_v06": 587, "kmkx20210907_175459_v06": 587, "kmkx20210907_175459_v06_mdm": 587, "read_nexrad_arch": [587, 591, 604, 605, 616, 617, 618, 634, 635], "possibli": 587, "add_featur": [587, 589, 591], "pyart_chasespectr": [587, 591, 642, 643], "70": [587, 588, 591, 604, 608, 614, 643], "set_ext": 587, "easier": [587, 588, 589], "scroll": 587, "radar_id": 587, "timestamp": [587, 588], "tz_local": 587, "later": [587, 589, 648, 651], "interfac": [587, 593], "conn": 587, "nexradawsinterfac": 587, "get_avail_scans_in_rang": 587, "len": [587, 613, 627, 636, 647], "kmkx20210907_151132_v06": 587, "kmkx20210907_152621_v06": 587, "kmkx20210907_150152_v06": 587, "kmkx20210907_151622_v06": 587, "kmkx20210907_152121_v06": 587, "kmkx20210907_150642_v06": 587, "kmkx20210907_155424_v06_mdm": 587, "kmkx20210907_153610_v06": 587, "kmkx20210907_154814_v06": 587, "kmkx20210907_155424_v06": 587, "kmkx20210907_154205_v06": 587, "kmkx20210907_160034_v06": 587, "kmkx20210907_160607_v06": 587, "kmkx20210907_161141_v06": 587, "kmkx20210907_163532_v06": 587, "kmkx20210907_161714_v06": 587, "kmkx20210907_162924_v06": 587, "kmkx20210907_164816_v06": 587, "kmkx20210907_165433_v06": 587, "kmkx20210907_165433_v06_mdm": 587, "kmkx20210907_162247_v06": 587, "kmkx20210907_153134_v06": 587, "kmkx20210907_164149_v06": 587, "kmkx20210907_182057_v06": 587, "kmkx20210907_182749_v06": 587, "kmkx20210907_184048_v06": 587, "kmkx20210907_180841_v06": 587, "kmkx20210907_183440_v06": 587, "kmkx20210907_185431_v06_mdm": 587, "kmkx20210907_181448_v06": 587, "kmkx20210907_180150_v06": 587, "kmkx20210907_185431_v06": 587, "kmkx20210907_190109_v06": 587, "kmkx20210907_190703_v06": 587, "kmkx20210907_193238_v06": 587, "kmkx20210907_191951_v06": 587, "kmkx20210907_191327_v06": 587, "kmkx20210907_195642_v06": 587, "kmkx20210907_194459_v06": 587, "kmkx20210907_195642_v06_mdm": 587, "kmkx20210907_193849_v06": 587, "kmkx20210907_184739_v06": 587, "kmkx20210907_192614_v06": 587, "kmkx20210907_195056_v06": 587, "now": [587, 588, 589, 591, 593, 605, 608, 613, 615, 632, 634, 635, 641, 647, 649, 655], "predict": 587, "tornado": [587, 591], "offic": [587, 589, 591, 647, 648, 649, 651, 652, 653], "acces": 587, "internet": 587, "wcm": 587, "categori": 587, "2021_wind": 587, "read_spc_report": 587, "start_tim": 587, "end_tim": 587, "hazard": 587, "timezon": 587, "gmt": 587, "torn": 587, "df": 587, "datafram": 587, "conver": 587, "to_datetim": [587, 588, 591], "set_index": 587, "inplac": 587, "ambigu": 587, "nat": 587, "nonexist": 587, "shift_forward": 587, "tz_convert": 587, "timedelta": [587, 591], "wind_report": 587, "tornado_report": 587, "hail_report": 587, "om": 587, "yr": 587, "mo": 587, "st": 587, "stf": 587, "stn": 587, "elon": 587, "wid": 587, "sn": 587, "sg": 587, "f1": 587, "f2": 587, "f3": 587, "f4": 587, "657521": 587, "tx": 587, "7500": [587, 647], "331": [587, 593], "657522": 587, "4300": 587, "657523": 587, "0500": 587, "167": 587, "657524": 587, "0200": 587, "657525": 587, "1595": 587, "45": [587, 594, 616, 625, 634, 635, 656], "663777": 587, "sc": 587, "0100": 587, "663778": 587, "663779": 587, "2200": 587, "663780": 587, "1900": 587, "49": [587, 588], "663781": 587, "1100": [587, 593], "6261": 587, "gc_latlon_bear_dist": 587, "lat1": 587, "lon1": 587, "decim": 587, "lat2": 587, "lon2": 587, "lat1r": 587, "deg2rad": 587, "lon1r": 587, "bearr": 587, "lat2r": 587, "lon2r": 587, "rad2deg": [587, 637], "add_scale_lin": 587, "fontsiz": [587, 588, 589, 599, 600, 613, 615, 624, 625], "fontweight": 587, "zoom": [587, 588], "black": [587, 593, 614, 632], "frac_lat": 587, "frac_lon": 587, "e1": 587, "get_ext": 587, "center_lon": 587, "center_lat": 587, "shorten": 587, "hash": [587, 596], "lat1a": 587, "lon1a": 587, "lat1b": 587, "lon1b": 587, "lat2a": 587, "lon2a": 587, "lat2b": 587, "lon2b": 587, "horizontalalign": 587, "verticalalign": 587, "enumer": 587, "iter_success": 587, "mdm": 587, "this_tim": 587, "open_pyart": 587, "map_panel_ax": [587, 628], "x_cut_panel_ax": [587, 628], "y_cut_panel_ax": [587, 628], "masking_data_with_gatefilt": 587, "ax1": [587, 588, 599, 600, 614, 628, 629, 634, 635, 641], "add_ax": [587, 628], "recogniz": 587, "with_scal": 587, "500k": 587, "grai": [587, 589, 591, 615, 616], "plot_colorbar": 587, "pad": 587, "plot_range_r": [587, 593, 618, 619, 621], "dash": [587, 589, 625], "set_xtick": [587, 648, 651], "arang": [587, 594, 608, 621, 624, 625, 632, 636, 637, 656], "set_ytick": [587, 648, 651], "wind_reports_now": 587, "slon": 587, "tolist": 587, "slat": 587, "facecolor": [587, 589, 591], "deepskyblu": 587, "tornado_reports_now": 587, "tab": [587, 596, 614], "red": [587, 624, 625], "hail_reports_now": 587, "lawngreen": 587, "legend": [587, 591, 614], "savefig": [587, 589, 591], "_dz_rpt": 587, "bbox_inch": 587, "tight": 587, "white": [587, 589, 624], "mp4": 587, "map_imag": 587, "gif_titl": 587, "delet": [587, 593, 594, 615, 656], "gif": 587, "get_writ": 587, "fp": 587, "writer": [587, 593], "imread": 587, "append_data": 587, "ffmpeg_writ": 587, "divis": [587, 593], "macro_block_s": 587, "resiz": 587, "1930": 587, "1766": 587, "1936": 587, "1776": 587, "video": 587, "codec": 587, "player": 587, "incompat": [587, 593, 597], "ipython": [587, 591, 592, 658], "browser": 587, "event": [587, 634, 635], "overview": [587, 590, 596], "retrospect": 587, "ecosystem": 588, "By": [588, 589, 597], "learn": [588, 645], "portal": [588, 589], "march": [588, 591, 604], "shown": [588, 613], "offici": [588, 594, 656], "probe": 588, "millimet": 588, "ghz": 588, "purpos": [588, 589, 634, 635], "nearli": [588, 624], "bokeh": 588, "formatt": 588, "datetimetickformatt": 588, "hv": 588, "guckazrcfrgem1": 588, "20220314": 588, "000003": 588, "0x7f7dbd517400": 588, "linear_depolarization_ratio": 588, "mean_doppler_velocity_crosspolar_v": 588, "reflectivity_crosspolar_v": 588, "signal_to_noise_ratio_copolar_h": 588, "signal_to_noise_ratio_crosspolar_v": 588, "spectral_width": 588, "spectral_width_crosspolar_v": 588, "vertical": 588, "awai": [588, 589], "pyart_bal": [588, 589, 608, 627, 641, 649], "substanti": 588, "211": [588, 629], "ax2": [588, 599, 600, 608, 614, 628, 629, 633, 634, 635, 641, 649], "212": [588, 629], "pangeo": 588, "1736": 588, "600": [588, 647], "r_calib": 588, "14t00": 588, "489e": 588, "806e": 588, "107": 588, "886e": 588, "command_lin": 588, "kazrcfr_ingest": 588, "guc": 588, "m1": 588, "process_vers": 588, "kazrcfr": 588, "el7": 588, "dod_vers": 588, "kazrcfrg": 588, "input_sourc": 588, "guckazrm1": 588, "kazr_moments_": 588, "site_id": 588, "software_vers": 588, "wed": 588, "mar": 588, "leachman": 588, "1498936": 588, "histori": [588, 653], "dsmgr": 588, "procnode2": 588, "1736rang": 588, "600frequenc": 588, "1sweep": 588, "1r_calib": 588, "1coordin": 588, "453818": 588, "startstandard_nam": 588, "timearrai": 588, "453818000": 588, "527426000": 588, "601027000": 588, "002026000": 588, "075634000": 588, "149219000": 588, "float323": 588, "10long_nam": 588, "transmit": [588, 649], "frequencyunit": 588, "hzstandard_nam": 588, "radiation_frequencymeta_group": 588, "instrument_parametersarrai": 588, "float32100": 588, "130": 588, "803e": 588, "04long_nam": 588, "volumeunit": 588, "mmeters_between_g": 588, "979246meters_to_center_of_first_g": 588, "679245spacing_is_const": 588, "truestandard_nam": 588, "projection_range_coordinateaxi": 588, "radial_range_coordinatearrai": 588, "679245": 588, "6585": 588, "160": [588, 637, 651], "63774": 588, "17998": 588, "18028": 588, "268": 588, "18058": 588, "248": 588, "northunit": 588, "degreestandard_nam": 588, "sensor_to_target_azimuth_angleaxi": 588, "radial_azimuth_coordinatearrai": 588, "planeunit": 588, "sensor_to_target_elevation_angleaxi": 588, "radial_elevation_coordinatearrai": 588, "00long_nam": 588, "epochancillary_vari": 588, "time_offsetarrai": 588, "base_timeancillary_vari": 588, "base_timearrai": 588, "unspecifiedunit": 588, "dbstandard_nam": 588, "radar_linear_depolarization_ratiounpacking_detail": 588, "unpack": 588, "pack": [588, 593], "1041600": 588, "motion": 588, "instrumentunit": 588, "sstandard_nam": 588, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 588, "crosspolar": 588, "channelunit": 588, "factorunit": 588, "dbzstandard_nam": 588, "equivalent_reflectivity_factorunpacking_detail": 588, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 588, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 588, "widthunit": 588, "radar_doppler_spectrum_widthunpacking_detail": 588, "angleunit": 588, "degreearrai": 588, "n_sampl": 588, "momentsunit": 588, "1meta_group": 588, "instrument_parametersstandard_nam": 588, "number_of_samples_used_to_compute_momentsarrai": 588, "noise_figur": 588, "receiv": [588, 591, 593, 649], "methodunit": 588, "dbarrai": 588, "67": [588, 634, 635], "8043": 588, "unambigu": [588, 653], "velocityunit": 588, "smeta_group": 588, "968252": 588, "repetit": 588, "timeunit": 588, "sarrai": 588, "00027": 588, "transmitt": 588, "r_calib_radar_constant_copol": 588, "copolarunit": 588, "dbmeta_group": 588, "radar_calibrationstandard_nam": 588, "calibrated_radar_constant_h_channelarrai": 588, "996191": 588, "r_calib_radar_constant_crosspol": 588, "crosspolarunit": 588, "405288": 588, "r_calib_two_way_radome_loss_h": 588, "radom": 588, "loss": 588, "radar_calibration_two_way_radome_loss_h_channelarrai": 588, "half": 588, "radar_measured_sky_noise_h": 588, "sky": 588, "dbmarrai": 588, "69": [588, 621, 637], "03703": 588, "035995": 588, "0373": 588, "03814": 588, "05106": 588, "05984": 588, "radar_measured_sky_noise_v": 588, "radar_measured_transmit_pow": 588, "powerunit": 588, "dbmmeta_group": 588, "radar_transmit_powerarrai": 588, "143": [588, 637], "receiver_gain_copol": 588, "copolunit": 588, "sweepunit": 588, "1735": 588, "s22": 588, "basedunit": 588, "unambiguous_rang": [588, 653], "rangeunit": 588, "mmeta_group": 588, "unambiguous_rangearrai": 588, "40479": 588, "477": [588, 593], "degree_nstandard_nam": 588, "latitudevalid_min": 588, "0valid_max": 588, "0arrai": 588, "956158": 588, "degree_estandard_nam": 588, "longitudevalid_min": 588, "106": 588, "987854": 588, "altitudeunit": 588, "mstandard_nam": 588, "altitudearrai": 588, "2886": 588, "levelunit": 588, "heightarrai": 588, "m1convent": 588, "radar_calibrationprocess_vers": 588, "el7dod_vers": 588, "1input_sourc": 588, "kazr_moments_20220314": 588, "000005": 588, "datsite_id": 588, "gucplatform_id": 588, "kazrcfrgefacility_id": 588, "m1data_level": 588, "a1location_descript": 588, "laboratori": 588, "sail": 588, "mt": 588, "crest": 588, "butt": [588, 589], "coloradodatastream": 588, "a1antenna_altitud": 588, "mantenna_diamet": 588, "mcomment": 588, "digital_rx_dec": 588, "24dualpol": 588, "0fft_len": 588, "512filter_length": 588, "67institut": 588, "radiat": [588, 589, 591, 594, 645, 647, 648, 649, 651, 652, 653, 656], "research": [588, 589, 591, 594, 645, 647, 648, 649, 651, 652, 653, 656], "facilityn_g": 588, "1024num_spectral_averag": 588, "15pulse_compression_ratio": 588, "3range_gate_spacing_m": 588, "979246range_offset_ch1": 588, "mrange_offset_ch2": 588, "mscan_mod": 588, "pointingscan_nam": 588, "vptsoftware_vers": 588, "leachmantitl": 588, "momentsdoi": 588, "1498936histori": 588, "isel": 588, "coupl": 588, "extra": [588, 591, 593], "won": 588, "600rang": 588, "600coordin": 588, "395940000": 588, "469427000": 588, "542946000": 588, "360000": 588, "quadmesh": [588, 589], "0x7f7dad654f10": 588, "meant": [588, 590], "popular": [588, 591, 594, 656], "jump": 588, "bar": 588, "hover": 588, "inspect": 588, "clabel": [588, 624, 625], "xformatt": 588, "ref_plot": 588, "7000": [588, 651], "platform_id": 588, "location_descript": 588, "xtick": [588, 648, 651], "ytick": [588, 648, 651], "vel_plot": 588, "prepar": [588, 589, 591, 594, 647, 648, 649, 651, 652, 653, 656], "plot1": 588, "plot2": 588, "datashad": 588, "lazili": 588, "coars": 588, "intial": 588, "unfortun": 588, "ref_plot_rast": 588, "param": [588, 593], "dynamic_oper": 588, "outofboundsdatetim": 588, "nanosecond": 588, "54168": 588, "invok": 588, "x_rang": 588, "13t23": 588, "417014000": 588, "579705000": 588, "y_rang": 588, "traceback": 588, "recent": [588, 593, 658], "mgrover": [588, 591, 604, 608, 613, 614, 619, 627, 632, 633, 641, 642, 643], "277": [588, 593], "get_plot_fram": 588, "map_obj": 588, "1344": 588, "val": 588, "_execute_callback": 588, "tuple_kei": 588, "retval": 588, "callback": 588, "arg": 588, "708": 588, "__call__": 588, "ret": 588, "__init__": [588, 594, 605, 656], "1043": [588, 593], "obj": 588, "resolv": [588, 593], "1032": [588, 593], "1044": 588, "1036": 588, "_process": 588, "1018": [588, 593], "process_el": 588, "194": 588, "_appli": 588, "141": 588, "1514": 588, "predic": 588, "207": 588, "pipelined_fn": 588, "method_fn": 588, "1223": 588, "super": [588, 618, 648, 651], "710": [588, 593], "map_fn": 588, "214": 588, "1133": [588, 593], "astyp": 588, "int64": 588, "1497": 588, "apply_ufunc": 588, "1159": 588, "apply_dataarray_vfunc": 588, "286": [588, 593], "result_var": 588, "data_var": 588, "750": [588, 593], "apply_variable_ufunc": 588, "as_compatible_data": 588, "234": 588, "_possibly_convert_object": 588, "178": 588, "asarrai": 588, "ravel": 588, "reshap": 588, "sanitize_arrai": 588, "567": [588, 593], "subarr": 588, "_try_cast": 588, "raise_cast_failur": 588, "726": [588, 593], "sanitize_to_nanosecond": 588, "arr": 588, "cast": 588, "1717": 588, "ensure_datetime64n": 588, "_lib": 588, "tslib": 588, "pyx": [588, 593], "257": 588, "np_datetim": 588, "120": [588, 628, 630, 647, 654], "check_dts_bound": 588, "saw": 588, "few": [588, 593, 596, 658], "pro": 588, "con": 588, "thing": [588, 594, 656], "clear": 588, "push": [588, 593, 594, 596, 656], "share": 588, "ran": [588, 594, 656], "shareabl": 588, "workflow": [588, 591, 593], "mb": [588, 601, 606, 611, 630, 638, 639, 644, 654], "difficult": [588, 608], "jupyterbook": 588, "jupyt": [588, 591, 593, 599, 600, 602, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 658], "campaign": [588, 635], "twitter": 589, "nou": 589, "dryglick": 589, "notic": [589, 593, 608, 615], "odd": 589, "directli": [589, 613], "grei": 589, "darker": 589, "moir\u00e9": 589, "ryan": 589, "dopplershift": [589, 593], "turbul": 589, "forecast": 589, "ncei": 589, "search": [589, 645, 655], "aw": [589, 591, 593, 602, 603, 605, 606, 654], "2018": 589, "mention": [589, 593, 594, 645, 656, 658], "he": 589, "n0u": [589, 604], "elgin": 589, "panhandl": 589, "florida": 589, "kevx": 589, "1458": 589, "octob": 589, "landfal": 589, "gulf": 589, "lookl": 589, "webpag": 589, "cart": 589, "sent": 589, "email": [589, 593], "websit": 589, "ftp": 589, "unzip": [589, 591], "kmob_sdus54_n0uevx_201810101458": 589, "partli": [589, 591, 647, 648, 649, 651, 652, 653], "facil": [589, 591, 594, 645, 647, 648, 649, 651, 652, 653, 656], "cite": [589, 591, 593, 647, 648, 649, 651, 652, 653], "jj": [589, 591, 647, 648, 649, 651, 652, 653], "sm": [589, 591, 647, 648, 649, 651, 652, 653], "colli": [589, 591, 594, 645, 647, 648, 649, 651, 652, 653, 656], "jor": [589, 591, 594, 645, 647, 648, 649, 651, 652, 653, 656], "5334": [589, 591, 594, 645, 647, 648, 649, 651, 652, 653, 656], "119": [589, 591, 594, 605, 645, 647, 648, 649, 651, 652, 653, 656], "read_level3": 589, "dark": 589, "dark_background": 589, "okai": 589, "88": [589, 591, 632], "83": 589, "31msignatur": 589, "0m": [589, 591], "0mdisplai": 589, "34m": 589, "0mplot_ppi_map": 589, "0mfield": 589, "0msweep": 589, "36m0": 589, "0mmask_tupl": 589, "32mnone": 589, "0mvmin": 589, "0mvmax": 589, "0mcmap": 589, "0mnorm": 589, "0mmask_outsid": 589, "32mfals": 589, "0mtitl": 589, "0mtitle_flag": 589, "32mtrue": 589, "0mcolorbar_flag": 589, "0mcolorbar_label": 589, "0max": 589, "0mfig": 589, "0mlat_lin": 589, "0mlon_lin": 589, "0mproject": 589, "0mmin_lon": 589, "0mmax_lon": 589, "0mmin_lat": 589, "0mmax_lat": 589, "0mwidth": 589, "0mheight": 589, "0mlon_0": 589, "0mlat_0": 589, "0mresolut": 589, "0mshapefil": 589, "0mshapefile_kwarg": 589, "0medg": 589, "0mgatefilt": 589, "0mfilter_transit": 589, "0membelish": 589, "0mraster": 589, "0mtick": 589, "0mticklab": 589, "0malpha": 589, "31msourc": 589, "32mdef": 589, "0mself": 589, "embelish": [589, 593], "31m": 589, "0mparse_vmin_vmax": 589, "0m_radar": 589, "0mparse_cmap": 589, "32mif": 589, "32mi": 589, "0mnp": 589, "0marang": 589, "36m30": 589, "36m46": 589, "36m1": 589, "36m110": 589, "36m75": 589, "0mloc": 589, "0mdata": 589, "0m_get_data": 589, "0mx": 589, "0my": 589, "0m_get_x_i": 589, "0mma": 589, "0mmasked_outsid": 589, "0mplt": 589, "0mgcf": 589, "32mnot": 589, "0mhasattr": 589, "32mels": 589, "0mcartopi": 589, "0mcr": 589, "0mlambertconform": 589, "0mcentral_longitud": 589, "0mcentral_latitud": 589, "0mwarn": 589, "overrid": [589, 625], "lambert": [589, 593], "0muserwarn": 589, "0mset_ext": 589, "0mplatecarre": 589, "32melif": 589, "36m2": 589, "0mgrid_project": 589, "0mpm": 589, "0mpcolormesh": 589, "36m1000": 589, "0mtransform": 589, "graphic": 589, "0mset_raster": 589, "admin": [589, 594, 656], "0mstates_provinc": 589, "0mfeatur": 589, "0mnaturalearthfeatur": 589, "0mcategori": 589, "cultur": 589, "0mname": 589, "admin_1_states_provinces_lin": 589, "0mscale": 589, "0mfacecolor": 589, "0mcoastlin": 589, "0madd_featur": 589, "0medgecolor": 589, "pose": 589, "difficulti": 589, "spectif": 589, "32min": 589, "0mmercat": 589, "0mgl": 589, "0mgridlin": 589, "0mxloc": 589, "0myloc": 589, "0mdraw_label": 589, "0mxlabels_top": 589, "0mylabels_right": 589, "0misinst": 589, "0mfigur": 589, "0mcanva": 589, "0mdraw": 589, "maker": 589, "0mxaxi": 589, "0mset_major_formatt": 589, "0mmpl": 589, "0mlongitude_formatt": 589, "0myaxi": 589, "0mlatitude_formatt": 589, "0m_lambert_gridlin": 589, "0mlambert_xtick": 589, "0mlambert_ytick": 589, "32mfrom": 589, "0mio": 589, "0mshaperead": 589, "32mimport": 589, "0mreader": 589, "0madd_geometri": 589, "0mgeometri": 589, "0m_set_titl": 589, "0mplot": 589, "0mappend": 589, "0mplot_var": 589, "0mplot_colorbar": 589, "0mmappabl": 589, "0mlabel": 589, "32mreturn": 589, "31mfile": 589, "git_repo": 589, "31mtype": 589, "fashion": 589, "0marg": 589, "0mshade": 589, "0mantialias": 589, "0mkwarg": 589, "31mdocstr": 589, "pseudocolor": 589, "signatur": [589, 591], "quadrilater": 589, "pcolor": 589, "prefer": [589, 593, 655], "discuss": [589, 597], "ref": [589, 605, 628, 635], "shade": [589, 593], "flat": [589, 604], "gouraud": 589, "cari": 589, "expand": 589, "rc": 589, "regist": 589, "canon": 589, "chosen": 589, "patch": [589, 624], "force_edgecolor": 589, "singular": 589, "opaqu": 589, "auto": [589, 591, 613], "solid": [589, 625], "quad": 589, "halfwai": 589, "galleri": [589, 593, 599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643, 645, 654], "images_contours_and_field": 589, "pcolormesh_grid": 589, "snap": 589, "mesh": 589, "misc": [589, 593], "rasterization_demo": 589, "constructor": 589, "agg_filt": 589, "anim": 589, "antialias": [589, 624, 625], "aa": 589, "capstyl": 589, "clip_box": 589, "bbox": 589, "clip_on": 589, "clip_path": 589, "rgba": 589, "ec": 589, "fc": 589, "gid": 589, "hatch": 589, "in_layout": 589, "joinstyl": 589, "miter": 589, "bevel": 589, "thereof": 589, "offset_transform": 589, "path_effect": 589, "abstractpatheffect": 589, "picker": 589, "pickradiu": 589, "sketch_param": 589, "random": 589, "zorder": 589, "imshow": [589, 593, 609, 610, 613], "_ax": 589, "nrow": [589, 613], "ncolumn": 589, "_differ": 589, "li": 589, "handl": [589, 593], "polycollect": 589, "thu": [589, 596], "almost": 589, "slight": 589, "polygon": 589, "irrespect": 589, "One": [589, 594, 647, 653, 656, 658], "masked_arrai": [589, 647, 653], "1e": [589, 647, 653], "next": [589, 591, 596, 604], "get_gate_lat_lon_alt": [589, 593], "565": [589, 593], "562763": 589, "560526": 589, "888458": 589, "886227": 589, "883991": 589, "562765": 589, "560532": 589, "892834": 589, "890606": 589, "888374": 589, "562769": 589, "56054": 589, "898003": 589, "89578": 589, "893553": 589, "562756": 589, "560509": 589, "880096": 589, "877857": 589, "875618": 589, "560513": 589, "881853": 589, "879616": 589, "877377": 589, "56276": 589, "560518": 589, "884874": 589, "88264": 589, "880404": 589, "92199": 589, "92222": 589, "92245": 589, "186806": 589, "18703": 589, "18723": 589, "922264": 589, "92254": 589, "2396": 589, "23986": 589, "24012": 589, "92231": 589, "92263": 589, "29231": 589, "29262": 589, "29292": 589, "92208": 589, "92218": 589, "02802": 589, "02811": 589, "0282": 589, "92212": 589, "92226": 589, "07571": 589, "07583": 589, "07595": 589, "922356": 589, "133934": 589, "1341": [589, 593], "13428": 589, "setup": [589, 593, 604, 608, 613, 614, 619, 632, 645, 655], "geoaxi": 589, "border": [589, 624], "cbar": [589, 615], "tick_param": 589, "labels": 589, "set_label": [589, 615], "gl": [589, 591, 615], "draw_label": [589, 591, 615], "xlabel_styl": [589, 615], "ylabel_styl": [589, 615], "kevz_velocity_2018_10_10_1458": 589, "specifici": 589, "pull": [589, 593, 594, 595, 596, 605, 656], "pr": [589, 596], "importantli": 589, "api": [589, 593], "abil": [589, 593, 645, 658], "arguement": 589, "explor": [589, 591], "appreci": [589, 645], "hello": 590, "welcom": 590, "narr": 590, "feedback": 590, "feel": 590, "know": [590, 658], "fridai": 591, "midwest": 591, "142": 591, "368": [591, 593], "excess": 591, "65": 591, "knot": 591, "mph": 591, "184": 591, "hail": [591, 593, 636], "bing": 591, "inch": 591, "diamet": 591, "ifram": 591, "spc": [591, 593], "climo": 591, "gmf": 591, "php": 591, "rpt": 591, "230331_rpts_filter": 591, "walworth": 591, "counti": 591, "southeastern": [591, 608], "geneva": 591, "tourist": 591, "especi": 591, "live": 591, "chicagoland": 591, "confirm": [591, 604, 647], "assembl": 591, "summari": [591, 604], "grlevel": 591, "encourag": 591, "peopl": 591, "cookbook": [591, 593, 645, 657], "moor": 591, "focu": 591, "varieti": [591, 594, 602, 603, 635, 656], "forg": [591, 593, 594, 645, 655, 656, 658], "arm_pyart": [591, 594, 596, 645, 655, 656, 658], "shaperead": 591, "shpreader": 591, "shapelyfeatur": 591, "miniforge3": 591, "tqdm": 591, "tqdmwarn": 591, "iprogress": 591, "ipywidget": 591, "readthedoc": [591, 594, 656], "stabl": 591, "user_instal": 591, "autonotebook": 591, "notebook_tqdm": 591, "credit": 591, "censu": 591, "mac": [591, 593, 645], "curl": 591, "linux": [591, 593, 594, 645, 656, 658], "wget": 591, "www2": 591, "geo": [591, 593], "tiger": 591, "tiger2016": 591, "primaryroad": 591, "tl_2016_us_primaryroad": 591, "zip": [591, 602, 605, 613, 645], "xferd": 591, "dload": 591, "upload": [591, 593], "spent": 591, "7m": 591, "cpg": 591, "inflat": 591, "dbf": 591, "prj": 591, "shp": 591, "ea": 591, "iso": 591, "shx": 591, "reader": [591, 592, 593, 605], "geom": 591, "loop": [591, 593, 637], "rec": 591, "fullnam": 591, "interstate_featur": 591, "darkblu": 591, "clean": [591, 593, 641], "filesystem": 591, "month": [591, 604, 605], "kmkx20230401_010517_v06": 591, "kmkx20230401_011057_v06": 591, "kmkx20230401_011638_v06": 591, "kmkx20230401_012219_v06": 591, "kmkx20230401_012759_v06": 591, "kmkx20230401_013341_v06": 591, "kmkx20230401_013922_v06": 591, "kmkx20230401_014502_v06": 591, "kmkx20230401_015042_v06": 591, "kmkx20230401_015623_v06": 591, "kmkx20230401_015928_v06": 591, "plot_configur": 591, "twilight_shift": [591, 641], "cross_correlation_ratio": [591, 604, 616, 617, 634, 635, 652, 653], "plot_radar_ppi": 591, "left_field": 591, "right_field": 591, "plot_config": 591, "precip": 591, "vel_dealia": 591, "dealias_region_bas": [591, 593, 600, 641, 649], "add_field": [591, 594, 599, 600, 634, 635, 636, 641, 648, 649, 656], "corrected_veloc": [591, 600, 637, 641, 649, 652], "plot_numb": 591, "config": [591, 593, 647, 658], "121": [591, 604, 608, 614, 633, 641], "generate_titl": 591, "time_step": 591, "get_start_end": 591, "central_tim": 591, "astimezon": 591, "new_titl": 591, "cdt": 591, "sharon": 591, "Near": 591, "delavan": 591, "6105": 591, "60666": 591, "lightgrei": 591, "lavenderblush": 591, "ppi_velocity_reflectivity_": 591, "flexibl": 591, "hope": 591, "past": [592, 594, 656], "tag": [592, 593], "yyyi": 592, "dd": 592, "kernelspec": 592, "display_nam": 592, "ipykernel": 592, "languag": [592, 594, 645, 656], "language_info": 592, "codemirror_mod": 592, "file_extens": 592, "mimetyp": 592, "nbconvert_export": 592, "pygments_lex": 592, "ipython3": 592, "insert": 592, "nbformat": 592, "nbformat_minor": 592, "care": 592, "notabl": 592, "insight": 592, "cmweather": 593, "1452": 593, "zssherman": 593, "accessor": 593, "1457": 593, "syedhamidali": 593, "xradar": [593, 644, 654], "1456": 593, "mgrover1": 593, "1474": 593, "typo": 593, "1471": 593, "ci": [593, 595, 596], "isinst": 593, "1448": 593, "1472": 593, "1470": 593, "1469": 593, "outdat": 593, "instruct": [593, 645, 657], "1462": 593, "wheel": 593, "1473": 593, "1468": 593, "1450": 593, "app": 593, "scolli": 593, "dim": 593, "load_kazr": 593, "1446": 593, "isilb": 593, "1447": 593, "arm_vpt": 593, "1445": 593, "lint": 593, "1444": 593, "mnt": 593, "1440": [593, 647], "dedic": 593, "1442": 593, "1443": 593, "1437": 593, "minor": [593, 648, 651], "algorith": 593, "1434": 593, "wolfidan": 593, "pin": [593, 596], "1430": 593, "codeql": 593, "1433": 593, "1428": 593, "neutrinocero": 593, "odim": 593, "1425": 593, "gatemapp": [593, 602, 607, 611, 654], "1418": 593, "rcjackson": 593, "commit": [593, 594, 596, 656], "hook": 593, "1419": 593, "sphinx": [593, 599, 600, 602, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643], "theme": 593, "1427": 593, "feet": 593, "1423": 593, "leak": 593, "mapper": 593, "1421": 593, "vforcel": 593, "1417": 593, "steepatticstair": 593, "1407": 593, "readm": [593, 655], "1397": 593, "1416": 593, "visual": [593, 613, 616, 624, 632, 635, 641], "1413": 593, "1411": 593, "1409": 593, "1401": 593, "joshua": 593, "hampton": 593, "del": [593, 615], "old": 593, "conda_recip": 593, "1399": 593, "ruff": 593, "1388": 593, "wrong": 593, "1390": 593, "1385": 593, "jrobrien91": 593, "1383": 593, "pkg_resourc": 593, "runtim": 593, "1394": 593, "mail": [593, 594, 645, 656], "1393": 593, "codeown": 593, "1391": 593, "1384": 593, "kmuehlbauer": 593, "1382": 593, "1379": 593, "mismatch": 593, "1381": 593, "wrap": 593, "get_gate_area": 593, "1375": 593, "1380": [593, 647], "1372": 593, "exec_modul": 593, "load_modul": 593, "1369": 593, "badg": 593, "1363": 593, "read_sigmet": 593, "1351": 593, "zouihao": 593, "unus": 593, "1343": 593, "1342": 593, "range_step": 593, "1338": 593, "max_num_g": 593, "1337": 593, "1327": 593, "revert": 593, "setuptool": 593, "unwant": 593, "cleanup": 593, "And": 593, "1357": 593, "1355": 593, "1339": 593, "1361": 593, "1335": 593, "manipul": [593, 615, 646], "1300": 593, "kylejgillett": 593, "melovato": 593, "tsbiscaro": 593, "1324": 593, "1319": 593, "1314": 593, "add_filt": 593, "1326": 593, "1320": [593, 647], "1325": 593, "jthielen": 593, "1303": 593, "jjhelmu": [593, 658], "wx4stg": 593, "antiviru": 593, "similiar": 593, "1307": 593, "1299": 593, "throw": 593, "convolve1d": 593, "1313": 593, "1306": 593, "1317": 593, "1311": 593, "jfigui": 593, "citat": [593, 594, 616, 645, 656], "1304": 593, "gamaanderson": 593, "hhuangwx": 593, "josephhardine": 593, "meteoswiss": [593, 636, 637], "mdr": 593, "ngui": 593, "tjlang": 593, "1294": 593, "1290": 593, "1285": 593, "1279": 593, "backward": [593, 597], "1278": 593, "1284": 593, "tracer": 593, "1296": 593, "1292": 593, "1287": 593, "cibuildwheel": 593, "1267": 593, "ocefpaf": 593, "1275": 593, "1276": 593, "1265": 593, "dcedgren": 593, "jilling": 593, "zhaobudaola": 593, "1263": 593, "1235": 593, "1215": 593, "columnsect": [593, 632], "1261": 593, "1241": 593, "1240": 593, "gatefi": 593, "1226": 593, "join_radar": 593, "repititon": 593, "iparam": 593, "1218": 593, "1216": 593, "trmm_rsl": 593, "1239": 593, "cftime": 593, "1211": 593, "incorrect": [593, 597, 649], "1231": 593, "ci_setup": 593, "1213": 593, "1264": 593, "basic": [593, 645, 646, 648], "1251": 593, "1234": 593, "1228": 593, "subset_radar": 593, "radar_util": 593, "1227": 593, "pyrad": 593, "1220": 593, "tst": 593, "median": 593, "1214": 593, "srbrodzik": 593, "1208": 593, "1204": 593, "1201": [593, 604], "1198": 593, "1196": 593, "catch": 593, "1191": 593, "1207": 593, "pypi": 593, "1206": 593, "unitest": 593, "1200": [593, 647], "1199": 593, "echoclass": 593, "1197": 593, "convv": 593, "awhil": 593, "back": 593, "1195": 593, "1190": 593, "dp": 593, "1184": 593, "solver": [593, 645], "1183": 593, "1176": 593, "1187": 593, "revis": 593, "270": [593, 594, 629, 656], "1185": 593, "1181": 593, "1178": 593, "1171": 593, "1180": 593, "1177": 593, "1173": 593, "sobitp59": 593, "rogu": 593, "1170": 593, "1160": 593, "1152": 593, "1151": 593, "mispel": 593, "1158": 593, "1148": 593, "1167": 593, "1154": 593, "unittest": 593, "1153": 593, "scm": [593, 594, 656], "1136": 593, "trigger": 593, "1126": 593, "action": [593, 594, 596, 656], "1118": 593, "1115": 593, "maco": 593, "1147": 593, "prune": 593, "1143": 593, "1141": 593, "1140": [593, 647], "1139": 593, "1137": 593, "1131": 593, "1130": 593, "1129": 593, "1128": 593, "1127": 593, "1125": 593, "1124": 593, "1123": 593, "1120": 593, "1119": 593, "dpr": 593, "1116": 593, "postcard": 593, "1104": 593, "1103": 593, "1122": 593, "gridmapdisplai": [593, 602, 612, 614, 630, 634, 635, 642, 651, 654], "1099": 593, "quick": [593, 604], "1146": 593, "contribut": [593, 594, 656, 657], "1106": 593, "1117": 593, "1113": 593, "submodul": [593, 651], "1110": 593, "forgotten": 593, "1108": 593, "test_echo_class": 593, "1107": 593, "1101": 593, "1098": 593, "1097": 593, "1094": 593, "1080": [593, 647], "registri": 593, "1087": 593, "1096": 593, "1093": 593, "1090": 593, "1089": 593, "1088": 593, "1085": 593, "1084": 593, "analyt": 593, "1081": 593, "1079": 593, "1077": 593, "pmi": 593, "log": [593, 596], "csp": 593, "ritvj": 593, "doesn": [593, 647], "mandat": 593, "1014": 593, "reallynicegui": 593, "hasattr": 593, "1034": 593, "overlap": [593, 615, 624], "mapdisplai": 593, "1029": 593, "azimuth_rhi_plot": 593, "1025": 593, "1019": 593, "rxm25": 593, "1075": 593, "1064": 593, "mute_radar": 593, "1033": 593, "1030": 593, "radxgrid": 593, "1027": 593, "1026": 593, "roadmap": 593, "repo": 593, "1059": 593, "dep": 593, "sidebar": 593, "1074": 593, "datetime_util": 593, "1072": 593, "1071": 593, "rtanamachi": 593, "pydata": 593, "1069": 593, "adc": 593, "1068": 593, "1067": 593, "1066": 593, "1063": 593, "codecov": 593, "1061": 593, "1060": 593, "1058": 593, "1056": 593, "1055": 593, "1053": 593, "1051": 593, "1050": 593, "1048": 593, "branch": [593, 594, 596, 656, 658], "1040": 593, "1039": 593, "1038": 593, "1031": 593, "1024": 593, "1020": [593, 647], "humphreyscart": 593, "tkralph": 593, "1003": 593, "997": 593, "1007": 593, "1001": 593, "1010": 593, "travi": 593, "sty": [593, 594, 656], "pep8": [593, 594, 656], "1005": 593, "988": 593, "quba1": 593, "984": 593, "tdwr": 593, "969": 593, "956": 593, "994": 593, "979": 593, "h5py": [593, 645], "978": 593, "june1st": 593, "switch": [593, 594, 656], "973": 593, "maint": [593, 594, 656], "966": 593, "983": 593, "amarouan": 593, "abdelhak": 593, "bmgxyz": 593, "address": 593, "962": 593, "mwilson14": 593, "963": 593, "nonetyp": 593, "regard": 593, "959": 593, "964": 593, "176": 593, "919": 593, "rda": 593, "903": 593, "add_gate_area": 593, "950": 593, "blotchi": 593, "947": 593, "946": 593, "944": 593, "694": 593, "938": 593, "vlouf": 593, "934": 593, "925": 593, "924": 593, "917": 593, "appveyor": 593, "937": 593, "927": 593, "liter": 593, "said": 593, "949": 593, "948": 593, "929": [593, 604, 606, 654], "926": 593, "920": 593, "915": 593, "911": 593, "grwise1": 593, "jsignel": 593, "rumpki": 593, "broke": 593, "913": 593, "msg29": 593, "909": 593, "907": 593, "framework": 593, "910": 593, "912": 593, "napoleon": 593, "902": 593, "rtd": 593, "893": 593, "892": 593, "odimh5": 593, "898": 593, "895": 593, "896": 593, "864": [593, 627, 630, 654], "louiswick": 593, "hilderbrand": 593, "877": 593, "886": 593, "crash": 593, "878": 593, "891": 593, "zflamig": 593, "futur": [593, 594, 597, 656], "890": 593, "889": 593, "885": 593, "dstex": 593, "880": 593, "soon": 593, "879": 593, "plot_grid": [593, 614, 628, 634, 635, 642, 651], "to_xarrai": 593, "873": 593, "876": 593, "elementwis": 593, "anaconda": [593, 594, 596, 645, 655, 656], "faq": 593, "group": [593, 594, 656], "868": 593, "mvanlierwalq": 593, "848": 593, "grid_io": 593, "846": 593, "jhemedin": 593, "841": 593, "nbin": 593, "865": [593, 622, 630, 654], "856": 593, "840": [593, 647], "caus": 593, "852": 593, "849": [593, 630], "get_dataset": 593, "845": 593, "docstr": 593, "838": 593, "836": 593, "cheatsheet": 593, "fortran": 593, "bit": [593, 655], "environ": [593, 645, 655, 657], "contr": 593, "843": 593, "spell": 593, "835": 593, "read_d3r_gcpex_nc": 593, "842": 593, "eccc": 593, "837": 593, "taylbm": 593, "kenkeho": 593, "swnesbitt": 593, "827": 593, "822": [593, 637, 638, 654], "806": 593, "804": 593, "800": 593, "778": 593, "688": [593, 632], "incomplet": 593, "msg5": 593, "832": 593, "820": 593, "812": 593, "deal": 593, "809": 593, "contiuum": 593, "gh": 593, "795": 593, "explicit": 593, "py2": 593, "790": 593, "sh": 593, "kai": 593, "muehlbauer": 593, "789": 593, "777": 593, "indexerror": 593, "check_outli": 593, "776": 593, "juhi24": 593, "770": 593, "imp": 593, "newer": [593, 655], "675": 593, "824": 593, "minu": 593, "803": 593, "738": 593, "799": 593, "792": 593, "favor": 593, "791": 593, "786": 593, "784": 593, "itself": [593, 653], "inc": 593, "794": 593, "rst": 593, "preformat": 593, "779": 593, "eaxmpl": 593, "834": 593, "833": 593, "elsewher": 593, "831": 593, "828": 593, "821": 593, "pytest": [593, 594, 645, 655, 656], "818": 593, "atteun": 593, "817": 593, "simulated_veloc": [593, 652], "802": 593, "grab": [593, 627], "801": 593, "796": 593, "793": 593, "787": 593, "781": 593, "cvd": 593, "775": 593, "774": 593, "769": 593, "nl2": 593, "765": 593, "miaoneng": 593, "gewitterblitz": 593, "liliaow567": 593, "764": 593, "coveral": 593, "messsag": 593, "761": 593, "757": 593, "set_raster": 593, "748": 593, "754": 593, "755": 593, "recompil": 593, "758": 593, "ngoldbaum": 593, "reciev": 593, "752": 593, "maskedarrai": [593, 599], "gate_id": [593, 652], "749": 593, "746": 593, "744": 593, "zxdawn": 593, "netcdftim": 593, "736": 593, "731": 593, "dot_product": 593, "729": 593, "test_rhi_elev": 593, "twice": [593, 635], "724": 593, "728": 593, "727": 593, "nosetest": 593, "715": 593, "vradh": 593, "vradv": 593, "quantiti": 593, "739": 593, "es5nhc": 593, "735": 593, "wave100": 593, "734": 593, "733": 593, "730": 593, "723": 593, "comp": 593, "721": 593, "cameron": 593, "homey": 593, "716": 593, "cameronhomey": 593, "jamessong": 593, "winash12": 593, "687": 593, "csnardi": 593, "645": 593, "docbuild": 593, "failur": 593, "709": 593, "mhpicel": 593, "705": 593, "fromstr": 593, "704": 593, "692": 593, "651": 593, "711": 593, "calculate_velocity_textur": [593, 641, 649], "retreiv": 593, "672": 593, "bucket": [593, 604], "673": 593, "653": 593, "638": 593, "635": 593, "frombuff": 593, "702": 593, "grid_mapp": 593, "707": 593, "706": 593, "goharkai": 593, "infinit": 593, "693": 593, "freemansw1": 593, "683": 593, "674": 593, "668": 593, "contact": 593, "land": 593, "667": [593, 647], "665": 593, "662": 593, "661": 593, "attributeerror": 593, "656": 593, "oserror": 593, "650": 593, "overflowerror": 593, "too": 593, "648": 593, "happier": 593, "647": 593, "640": 593, "639": 593, "634": 593, "620": 593, "itsjm": 593, "kirknorth": 593, "617": 593, "616": 593, "631": [593, 643, 644, 654], "swap": 593, "el": 593, "plot_rai": 593, "618": 593, "_get_angl": 593, "613": 593, "607": 593, "linspac": [593, 594, 613, 616, 634, 635, 647, 656], "603": 593, "627": 593, "623": 593, "596": 593, "595": 593, "632": 593, "630": 593, "625": 593, "tulipasilva": 593, "622": 593, "normbw": 593, "q": 593, "quit": [593, 645], "614": 593, "git": [593, 594, 645, 655, 656, 658], "611": 593, "sinaram": 593, "608": [593, 617, 630, 654], "mrugna": 593, "605": 593, "bld": 593, "kludg": 593, "604": 593, "acknowledg": [593, 645], "602": 593, "qpe": [593, 635], "598": 593, "mustafaalicelik": 593, "580": 593, "577": 593, "576": 593, "575": 593, "562": 593, "azim": 593, "546": 593, "pickl": 593, "unpickl": 593, "543": 593, "vcp": 593, "541": 593, "noaaport": 593, "seper": 593, "540": [593, 647], "521": 593, "459": 593, "590": 593, "bugfix": 593, "l3": 593, "135": 593, "eet": 593, "585": 593, "582": 593, "574": 593, "570": 593, "558": 593, "ctm": 593, "553": 593, "542": 593, "aux_io": 593, "read_gam": 593, "535": 593, "midnight": 593, "523": 593, "importerror": 593, "522": 593, "519": [593, 635, 638, 654], "512": 593, "510": 593, "phase_proc": 593, "zerodivis": 593, "494": 593, "485": 593, "unsupport": 593, "481": 593, "579": 593, "578": 593, "568": 593, "563": 593, "559": 593, "549": 593, "547": 593, "gamicfil": 593, "gamic_hdf5": 593, "536": 593, "524": 593, "513": 593, "balltre": 593, "504": 593, "501": 593, "482": [593, 654], "479": 593, "594": 593, "561": 593, "despeckle_field": 593, "544": 593, "axislabel_flag": 593, "539": 593, "529": 593, "_get_x_z": 593, "491": 593, "486": 593, "586": 593, "583": 593, "572": 593, "fixup": 593, "569": 593, "560": 593, "rainbow_wrl": 593, "555": [593, 608, 611, 632, 654], "recip": [593, 596], "554": 593, "nose_arg": 593, "548": 593, "538": 593, "532": 593, "531": 593, "528": [593, 599, 601, 654], "output_to_geotiff": 593, "514": 593, "511": 593, "507": 593, "506": 593, "498": 593, "libgfortran": 593, "497": 593, "contour": [593, 602, 612, 630, 654], "495": 593, "493": 593, "489": 593, "488": 593, "argentinean": 593, "480": [593, 647], "bdolan44": 593, "dara74k": 593, "gavi": 593, "jacaicedob": 593, "wx": 593, "pfhein": 593, "tamisalex": 593, "469": 593, "468": 593, "467": 593, "luminos": 593, "464": [593, 610, 611, 654], "455": 593, "hclass": 593, "447": 593, "439": 593, "434": 593, "433": 593, "427": 593, "411": 593, "404": 593, "388": 593, "cross_section_ppi": [593, 629], "380": 593, "472": 593, "471": 593, "470": 593, "prf": 593, "460": 593, "get_field_colormap": 593, "446": [593, 641, 644, 654], "444": 593, "example_cfradial_rhi": 593, "441": 593, "417": 593, "struct": 593, "410": 593, "383": 593, "unicod": 593, "382": 593, "gatefit": 593, "372": [593, 629, 630, 654], "465": 593, "refactor": 593, "463": [593, 611], "decor": 593, "416": 593, "392": 593, "radxcovert": 593, "clarifi": 593, "475": 593, "406": [593, 634, 638, 654], "add_field_lik": [593, 608], "397": 593, "391": 593, "376": 593, "370": 593, "corner_to_point": 593, "473": 593, "466": 593, "456": 593, "outstand": 593, "412": 593, "413": 593, "454": 593, "453": 593, "449": 593, "438": 593, "437": 593, "430": 593, "426": 593, "miniconda": [593, 594, 645, 656], "reactiv": 593, "422": 593, "plot_map_one_radar_to_grid": [593, 609, 611, 654], "420": [593, 647], "419": 593, "408": 593, "resilli": 593, "403": 593, "write_mdv_grid": 593, "402": 593, "401": 593, "399": 593, "395": 593, "documen": 593, "add_2d_latlon_axi": 593, "394": 593, "378": 593, "acess": 593, "377": 593, "373": 593, "deeplycloudi": 593, "358": [593, 594, 656], "edge_netcdf": 593, "read_edge_netcdf": 593, "357": [593, 594, 656], "dealias_fourdd": 593, "348": [593, 625, 630, 654], "346": 593, "creation": 593, "330": 593, "326": 593, "308": 593, "361": 593, "refl_filter_flag": 593, "map_gate_to_grid": 593, "334": 593, "region_dealia": 593, "327": 593, "libm": 593, "posix": 593, "319": 593, "unnecessari": 593, "inmemoryfil": 593, "365": 593, "359": [593, 594, 656], "354": 593, "_rsl_interfac": 593, "342": 593, "binstar": 593, "337": 593, "320": 593, "317": 593, "362": 593, "plot_grid_three_panel": 593, "353": 593, "confus": 593, "363": 593, "340": 593, "externalis": 593, "339": 593, "333": 593, "332": 593, "47": [593, 637], "324": 593, "323": 593, "271": 593, "binar": 593, "266": 593, "313": 593, "312": 593, "290": 593, "280": 593, "273": 593, "272": 593, "261": 593, "256": [593, 613, 636], "dealias_phase_unwrap": 593, "radarmapdispl": 593, "249": 593, "discontin": 593, "315": 593, "314": 593, "288": 593, "fault": 593, "276": 593, "dealias_unwrap_phas": 593, "275": 593, "corrupt": 593, "269": 593, "283": 593, "inconsist": 593, "274": 593, "254": [593, 635], "fallback": 593, "245": 593, "316": 593, "ngates_vart": 593, "310": 593, "py3": [593, 658], "nexrad_level2": 593, "nexrad_level3": 593, "309": 593, "1byte": 593, "datatyp": 593, "weathergod": 593, "293": 593, "292": 593, "289": [593, 606], "291": 593, "138": 593, "284": 593, "alter": 593, "267": 593, "latlon": 593, "264": 593, "262": 593, "260": 593, "259": 593, "258": 593, "241": [593, 605, 609], "rebuild": 593, "237": 593, "scientif": [594, 645, 656], "analyz": [594, 645, 652, 656], "repositori": [594, 595, 596, 645, 655, 656, 658], "e25": [594, 645, 656], "publish": [594, 656], "easiest": [594, 645, 656], "januari": [594, 645, 656], "1st": [594, 645, 656], "Then": [594, 596, 645, 655, 656], "termin": [594, 645, 656, 658], "prompt": [594, 645, 656], "mamba": [594, 656], "openradar": [594, 656], "short": [594, 596, 656], "cours": [594, 608, 656], "ev": [594, 656], "pyart_short_cours": [594, 656], "youtub": [594, 656], "watch": [594, 656], "diip": [594, 656], "q3bkzw": [594, 656], "book": [594, 656], "pycodestyl": [594, 656], "pylint": [594, 656], "pep": [594, 656], "0008": [594, 656], "highli": [594, 656], "tast": [594, 656], "brief": [594, 595, 656], "third": [594, 656], "parti": [594, 656], "explain": [594, 656], "_inverse_dist_squar": [594, 656], "_average1d": [594, 656], "seen": [594, 656], "explan": [594, 595, 656], "privat": [594, 656], "rerun": [594, 656], "test_vad": [594, 656], "test_radar": [594, 647, 656], "make_target_radar": [594, 656], "1000": [594, 610, 618, 624, 625, 635, 651, 656], "200": [594, 656], "ones_lik": [594, 656], "z_start": [594, 656], "z_end": [594, 656], "z_count": [594, 656], "vad_height": [594, 656], "vad_spe": [594, 656], "98665725": [594, 656], "94020686": [594, 656], "88107152": [594, 656], "81939374": [594, 656], "75851962": [594, 656], "vad_direct": [594, 656], "84659496": [594, 656], "30240553": [594, 656], "58658589": [594, 656], "81073051": [594, 656], "01353486": [594, 656], "01335138": [594, 656], "06014712": [594, 656], "12039762": [594, 656], "18410404": [594, 656], "24791911": [594, 656], "98663937": [594, 656], "9398407": [594, 656], "87958641": [594, 656], "81587601": [594, 656], "75205693": [594, 656], "assert_almost_equ": [594, 656], "pyarg": [594, 656], "test_cfradi": [594, 656], "cd": [594, 656], "fork": [594, 596, 656], "cartopy_map": [594, 656], "branch_nam": [594, 656], "task": [594, 602, 640, 656], "mind": [594, 608, 656], "simpli": [594, 634, 641, 649, 651, 655, 656, 658], "acronym": [594, 656], "finish": [594, 656, 658], "quotat": [594, 656], "hit": [594, 656], "depth": [594, 645, 653, 656], "acronymn": [594, 656], "gitwash": [594, 656], "development_workflow": [594, 656], "whitespac": [594, 656], "usual": [594, 605, 656], "vim": [594, 656], "fetch": [594, 635, 636, 637, 656], "ff": [594, 656], "sit": [594, 656], "guidanc": [594, 656], "break": [595, 596], "anyth": 596, "creator": 596, "draft": 596, "shortlog": 596, "uplod": 596, "feedstock": 596, "clone": [596, 645, 655], "meta": 596, "yaml": 596, "sha256": 596, "rerend": 596, "smithi": 596, "bot": 596, "sometim": [596, 647], "awar": 596, "semant": 597, "earlier": 597, "ceas": 597, "Such": 597, "proceed": 597, "futurewarn": 597, "runner": [599, 605], "micromamba": [599, 605], "fromnumer": 599, "771": 599, "kth": 599, "__doc__": [599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 634, 635], "sgpcsaprsurcmaci7": [599, 648], "20110520": [599, 648], "095101": [599, 648], "pop": 599, "specific_attenu": [599, 632, 636, 647, 652], "corrected_reflectivity_horizont": [599, 610, 614, 632, 641, 643, 647], "calculate_attenu": 599, "131": [599, 634, 635], "132": [599, 634, 635], "ax3": [599, 600, 628, 634, 635], "133": [599, 632, 634, 635], "suptitl": [599, 600, 627, 637], "plot_attenu": [599, 601, 654], "ipynb": [599, 600, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 641, 642, 643], "ial": 600, "095636": [600, 649], "sonde_fil": 600, "sgpinterpolatedsondec1": 600, "c1": [600, 652], "20110510": 600, "000000": 600, "cdf": [600, 635], "dt": 600, "read_arm_sonde_vap": 600, "exclude_transit": [600, 609, 610, 614, 633], "exclude_invalid": 600, "exclude_outsid": 600, "dealias_data": 600, "sixth": 600, "221": [600, 617], "222": [600, 617], "223": [600, 617], "ax4": 600, "224": [600, 617], "plot_dealia": [600, 601, 654], "mem": [601, 606, 611, 630, 638, 639, 644, 654], "examples_python": 602, "examples_jupyt": 602, "grover": [604, 608, 613, 614, 619, 627, 632, 633, 641, 642, 643], "filepath": [604, 605], "organ": 604, "radarsit": [604, 605], "_v06": 604, "khgx": 604, "aws_nexrad_level2_fil": [604, 605], "khgx20220322_120125_v06": 604, "differential_phas": [604, 617, 652, 653], "spectrum_width": [604, 652, 653], "clutter_filter_power_remov": 604, "relect": 604, "z_": [604, 608, 615], "v_": 604, "noq": 604, "level3": 604, "aws_nexrad_level3_velocity_fil": 604, "hgx_n0u_2022_03_22_12_01_25": 604, "aws_nexrad_level3_reflectivity_fil": 604, "hgx_n0q_2022_03_22_12_01_25": 604, "read_nexrad_level3": 604, "radar_level3_veloc": 604, "radar_level3_reflect": 604, "reflectivity_displai": 604, "velocity_displai": 604, "plot_nexrad_data_aw": [604, 606, 654], "2008": 605, "zachari": 605, "sherman": 605, "zsherman": [605, 658], "tendenc": 605, "gz": 605, "handford": 605, "ca": 605, "khnx": 605, "0203": 605, "v06": 605, "khnx20060724_020338": 605, "nexrad_arch": 605, "231": [605, 635], "clearli": 605, "lucki": 605, "31417": 605, "63111": 605, "plote": [605, 621], "central_latitud": [605, 621, 634, 635, 648], "central_longitud": [605, 621, 634, 635, 648], "downloadwarn": 605, "naturalearth": 605, "amazonaw": 605, "10m_physic": 605, "ne_10m_coastlin": 605, "10m_cultur": 605, "ne_10m_admin_1_states_provinces_lin": 605, "plot_older_nexrad_data_aw": [605, 606, 654], "xsapr": [608, 610, 614], "xsapr_sw_fil": [608, 610, 614], "swx_20120520_0641": [608, 610, 613, 614, 615, 619, 629, 632, 633, 634, 635, 641, 642, 643], "xsapr_se_fil": [608, 610, 614], "sex_20120520_0641": [608, 610, 614], "radar_sw": [608, 610, 614], "radar_s": [608, 610, 614], "southwestern": 608, "gmapper": 608, "radar_sw_mapped_to_radar_s": 608, "disp1": 608, "98": [608, 632, 637, 652], "97": [608, 610, 614, 616, 628, 632, 634, 635, 647], "disp2": 608, "remap": 608, "eyebal": 608, "fortun": 608, "reflectivity_se_radar": 608, "reflectivity_sw_radar": 608, "reflectivity_differ": 608, "reflectivity_bia": 608, "southwest": 608, "xspar": 608, "southeast": 608, "histogram": [608, 649], "neccessarili": 608, "incl_gat": 608, "refl_s": 608, "refl_sw": 608, "values_without_mask": 608, "hist": [608, 641, 649], "histogram2d": 608, "masked_wher": [608, 635, 652], "log_": 608, "plot_compare_two_radars_gatemapp": [608, 611, 654], "123000": 609, "443": [609, 611, 654], "xsarp": [610, 622, 623], "gatefilter_s": [610, 614], "exclude_abov": [610, 614, 641, 649], "gatefilter_sw": [610, 614], "201": [610, 634, 635, 651], "50000": [610, 614, 634, 635, 651], "40000": [610, 614, 621, 651], "57861": [610, 614], "363611": [610, 614], "plot_map_two_radars_to_grid": [610, 611, 654], "helper": 613, "vstack": 613, "plot_color_gradi": 613, "cmap_categori": 613, "cmap_list": 613, "figh": 613, "99": 613, "set_titl": [613, 634, 635], "cmap_nam": 613, "pyart_": 613, "va": 613, "transax": 613, "spine": 613, "ones": 613, "set_axis_off": 613, "perceptu": [613, 616], "light": [613, 636], "diverg": 613, "meaning": 613, "terrain": 613, "spectral_r": 613, "rememb": 613, "front": 613, "996": [613, 630, 654], "plot_choose_a_colormap": [613, 630, 654], "181": 614, "blue": [614, 624, 625], "plot_cross_sect": [614, 630, 654], "013": [614, 630, 654], "colobar": 615, "joe": 615, "brien": 615, "obrienj": 615, "perfect": 615, "coord": 615, "gca": 615, "set_major_loc": 615, "nullloc": 615, "axsb": 615, "ppi_map": 615, "set_tick": 615, "plot_modify_colorbar": [615, 630, 654], "reduc": [616, 635, 655], "promin": [616, 635], "deemphas": 616, "depict": 616, "ultim": 616, "misinterpret": 616, "lmtomkin": [616, 634, 635], "ncsu": [616, 634, 635], "nexrad_fil": [616, 634, 635], "kbgm": 616, "kbgm20200207_132642_v06": 616, "image_mute_radar": [616, 634, 635], "magma_cmap": 616, "magma_r": [616, 634, 635], "grays_cmap": [616, 635], "gray_r": [616, 635], "nonmuted_cmap": 616, "linearsegmentedcolormap": [616, 634, 635], "from_list": [616, 634, 635], "muted_cmap": [616, 635], "nonmuted_reflect": [616, 634], "muted_reflect": [616, 635], "set_aspect": [616, 634, 635, 636], "975": [616, 630, 654], "plot_nexrad_image_muted_reflect": [616, 630, 654], "katx20130717_195021_v06": [617, 653], "plot_nexrad_multiple_mo": [617, 630, 654], "level2_katx_20130717_1950": 618, "ar2v": 618, "923": [618, 630, 654], "plot_nexrad_reflect": [618, 630, 654], "plot_cross_hair": 619, "355": [619, 630, 654], "plot_ppi_cfradi": [619, 630, 654], "jason": [621, 628], "hemeding": [621, 628], "nsaxsaprppic1": 621, "20140201": 621, "184802": 621, "157": 621, "156": 621, "71": 621, "158": 621, "72": 621, "40km": 621, "plot_line_xi": 621, "20000": [621, 651], "200000": [621, 634, 635], "plot_point": 621, "940": [621, 630, 654], "plot_ppi_with_r": [621, 630, 654], "instrument_nam": [622, 623, 653], "agl": 622, "fac": 622, "nplot": [622, 623, 627], "snum": 622, "hsrhi": [622, 623], "3f": [622, 623], "time_start": 622, "num2dat": 622, "only_use_cftime_datetim": 622, "only_use_python_datetim": 622, "figure_titl": 622, "isoformat": 622, "plot_rhi_cfradi": [622, 630, 654], "384": [623, 630, 654], "differnenti": 624, "cori": [624, 625], "weber": [624, 625], "cweber": [624, 625], "220629": 624, "matplolib": 624, "visabl": 624, "flow": 624, "paramt": 624, "compens": 624, "00015": 624, "veri": [624, 634, 635], "moir": 624, "001": 624, "get_start": [624, 625], "get_end": [624, 625], "blur": 624, "nice": [624, 655], "arbirarli": 624, "gaussian_filt": [624, 625], "ang": [624, 625], "levels_rain": 624, "levels_ic": 624, "contours_ic": 624, "contours_rain": 624, "fmt": [624, 625], "0000": [624, 625], "921": [624, 630, 654], "plot_rhi_contours_differential_reflect": [624, 630, 654], "spyi": 625, "034142": 625, "ramp": 625, "blob": 625, "pyart_budrd18": 625, "coutour": 625, "dot": 625, "major": 625, "axhlin": 625, "axvlin": 625, "00b4ff": 625, "ff6800": 625, "set_ylabel": [625, 637], "cp": 625, "plot_rhi_data_overlai": [625, 630, 654], "110041": 626, "859": [626, 630, 654], "plot_rhi_mdv": [626, 630, 654], "fields_to_plot": 627, "plot_num": 627, "u00b0": 627, "plot_rhi_two_panel": [627, 630, 654], "20110520100000_nexrad_grid": 628, "read_grid": [628, 635], "plot_crosshair": 628, "plot_longitude_slic": 628, "plot_latitude_slic": [628, 651], "plot_three_panel_gridmapdisplai": [628, 630, 654], "225": 629, "xsect": 629, "tight_layout": 629, "plot_xsect": [629, 630, 654], "maxwel": [632, 633], "site_lon": 632, "73": 632, "site_lat": 632, "latitdu": 632, "pathcollect": 632, "0x7f9b5a9ec2f0": 632, "get_field_loc": 632, "350": 632, "818e": 632, "recalculated_diff_phas": [632, 647], "2778": 632, "1806": 632, "unf_dp_phase_shift": [632, 647], "953": 632, "145": [632, 635], "144": [632, 635], "diff_reflect": [632, 647], "20t06": 632, "distance_from_radar": 632, "233": 632, "545": 632, "latitude_of_loc": 632, "longitude_of_loc": 632, "line2d": 632, "0x7f9b5ad44d40": 632, "162": [632, 638, 654], "plot_column_subset": [632, 638, 654], "compz": 633, "composite_reflect": 633, "composite_displai": 633, "155": [633, 638, 654], "plot_composite_reflect": [633, 638, 654], "classifc": 634, "summer": [634, 635], "ian": [634, 635], "footprint": 634, "yield": 634, "smoother": 634, "rescal": [634, 635], "curv": 634, "plot_convstrat_schem": 634, "pick": 634, "radii": 634, "dilat": 634, "conv_strat_yut": 634, "convsf_mask": 634, "masked_equ": [634, 635], "feature_detect": [634, 635], "convsf": [634, 635], "magma_r_cmap": [634, 635], "ref_cmap": [634, 635], "albersequalarea": [634, 635], "convsf_und": 634, "convsf_ov": 634, "uncertainti": [634, 635], "underest": [634, 635], "feature_und": [634, 635], "overest": [634, 635], "feature_ov": [634, 635], "ktbw": [634, 635], "ktbw20220928_190142_v06": [634, 635], "rasumussen": [634, 635], "2003": [634, 635], "reflecit": 634, "kokx": [634, 635], "kokx20210207_161413_v06": [634, 635], "nonmuted_ref": 634, "masked_invalid": 634, "nonmuted_ref_linear": 634, "mm6": 634, "m3": 634, "snow_rat": [634, 635], "snow_rate_dict": 634, "40500": 634, "034": [634, 635], "ccotd": [634, 635], "rasmussen": [634, 635], "dixon": [634, 635, 645], "vasiloff": [634, 635], "hage": [634, 635], "knight": [634, 635], "vivekanandan": [634, 635], "xu": [634, 635], "nowcast": [634, 635], "accumul": [634, 635], "042": [634, 635], "3c0020": [634, 635], "snuart": [634, 635], "plot_convective_stratiform": [634, 638, 654], "open_radar_data": [635, 636, 637], "heavili": 635, "customiz": 635, "manuscript": 635, "feature_mask": 635, "19990811": 635, "221202": 635, "convsf_cmap": 635, "140": 635, "253": 635, "maxdz": 635, "csb": 635, "csb_mask": 635, "masked_less_equ": 635, "csl": 635, "convsf_lo": 635, "csl_mask": 635, "csh": 635, "convsf_hi": 635, "csh_mask": 635, "rpm": 635, "csbpm": 635, "set_yticklabel": 635, "lo": 635, "cslpm": 635, "cshpm": 635, "csb_lt": 635, "csb_lt_mask": 635, "csu_lt": 635, "csu_lt_mask": 635, "cso_lt": 635, "cso_lt_mask": 635, "csupm": 635, "csopm": 635, "ztor": 635, "ref_field_ov": 635, "ref_field_und": 635, "2db": 635, "_overest": 635, "_underest": 635, "reflectivity_ov": 635, "reflectivity_und": 635, "snow_rate_ov": 635, "snow_rate_und": 635, "feature_estimate_dict": 635, "bpm": 635, "upm": 635, "opm": 635, "distinct": 635, "scalar_features_mask": 635, "cosine_features_mask": 635, "isol": 635, "faint_featur": 635, "faint_features_mask": 635, "features_faint_strong": 635, "features_faint_strong_mask": 635, "new_dict": 635, "comment_1": 635, "faint_strong_cmap": 635, "faint_strong": 635, "238": 635, "93": 635, "66": 635, "quickli": 635, "quick_image_mut": 635, "muted_ref": 635, "nonmuted_field": 635, "muted_field": 635, "snow_rate_nonmut": 635, "snow_rate_mut": 635, "features_nonmut": 635, "features_mut": 635, "srpm": 635, "srpmm": 635, "csbpmm": 635, "plot_feature_detect": [635, 638, 654], "daniel": [636, 637], "wolfensberg": [636, 637], "mll2217907250u": 636, "003": 636, "preinterpol": 636, "20220628072500_savevol_cosmo_lookup_temp": 636, "nwp_temp": 636, "calculate_attenuation_zphi": 636, "uncorrected_differential_phas": 636, "pia": 636, "pida": 636, "corrected_reflect": [636, 652], "corrected_differential_reflect": [636, 652], "kdp_maesaka": 636, "specific_differential_phas": [636, 652], "hydroclass_semisupervis": 636, "uncorrected_cross_correlation_ratio": 636, "radar_echo_classif": 636, "lr": 636, "rp": 636, "rn": 636, "vi": 636, "mh": 636, "ih": 636, "hdg": 636, "boundarynorm": 636, "aggreg": 636, "crystal": 636, "rime": 636, "particl": 636, "wet": 636, "graupel": 636, "414": [636, 638, 654], "plot_hydrometeor": [636, 638, 654], "2682": 637, "5272": 637, "7815": 637, "10403": 637, "14259": 637, "18533": 637, "22800": [637, 647], "27060": [637, 647], "31310": 637, "35549": 637, "39777": 637, "43991": 637, "50263": 637, "58621": 637, "71002": 637, "87118": 637, "106740": 637, "125476": 637, "124": 637, "143293": 637, "160000": 637, "mla2119412050u": 637, "zlevel": 637, "5000": [637, 651], "u_allsweep": 637, "v_allsweep": 637, "idx": 637, "radar_1sweep": 637, "vad_brown": 637, "u_avg": 637, "nanmean": 637, "v_avg": 637, "sharei": 637, "set_xlabel": 637, "plot_vad": [637, 638, 654], "478": 638, "000": 639, "xd": [641, 642, 643], "open_cfradial1_datatre": [641, 642, 643], "sweep_0": 641, "vel_textur": [641, 649], "velocity_textur": [641, 649, 652], "At": [641, 649], "velocity_dealias": [641, 649], "plot_dealias_xradar": [641, 644, 654], "101": 642, "10_000": 642, "50_000": 642, "025": [642, 644, 654], "plot_grid_xradar": [642, 644, 654], "plot_xradar": [643, 644, 654], "102": 644, "conceptu": 645, "understand": 645, "someth": 645, "demonstr": 645, "maik": 645, "heistermann": 645, "bam": 645, "kellei": 645, "peura": 645, "pfaff": 645, "wolff": 645, "emerg": 645, "bull": 645, "amer": 645, "soc": 645, "117": 645, "128": 645, "00240": 645, "ii": [645, 653], "abl": [645, 655], "sophist": 645, "tutori": 645, "materi": 645, "erad": 645, "asr": 645, "asm": 645, "Or": 645, "pyart_env": [645, 648, 651, 658], "wish": 645, "unreleas": 645, "charg": 645, "resourc": [645, 655], "lassen": 645, "radtec": 645, "rsl_path": [645, 655], "usr": 645, "wrapper": 645, "fastest": 645, "cbc": 645, "glpk": 645, "coincbc": [645, 655, 658], "coin_install_dir": [645, 655, 658], "ask": [645, 658], "hypothet": 647, "idea": [647, 649], "dict_kei": [647, 652], "rain_rate_a": [647, 652], "volume_numb": 647, "platform_typ": 647, "instrument_typ": 647, "primary_axi": 647, "make_empty_ppi_radar": 647, "59416667": 647, "isn": 647, "240": 647, "660": 647, "720": 647, "780": 647, "960": 647, "1260": 647, "1560": 647, "1620": 647, "1680": 647, "1740": 647, "1860": 647, "1920": 647, "1980": 647, "2040": 647, "2100": 647, "2160": 647, "2220": 647, "2280": 647, "2340": 647, "2400": 647, "2460": 647, "2520": 647, "2580": 647, "2640": 647, "2700": 647, "2760": 647, "2820": 647, "2880": 647, "2940": 647, "3060": 647, "3120": 647, "3180": 647, "3240": 647, "3300": 647, "3360": 647, "3420": 647, "3480": 647, "3540": 647, "3600": 647, "3660": 647, "3720": 647, "3780": 647, "3840": 647, "3900": 647, "3960": 647, "4020": 647, "4080": 647, "4140": 647, "4200": 647, "4260": 647, "4320": 647, "4380": 647, "4440": 647, "4500": 647, "4560": 647, "4620": 647, "4680": 647, "4740": 647, "4800": 647, "4860": 647, "4920": 647, "4980": 647, "5040": 647, "5100": 647, "5160": 647, "5220": 647, "5280": 647, "5340": 647, "5400": 647, "5460": 647, "5520": 647, "5580": 647, "5640": 647, "5700": 647, "5760": 647, "5820": 647, "5880": 647, "5940": 647, "6000": [647, 651], "6060": 647, "6120": 647, "6180": 647, "6240": 647, "6300": 647, "6360": 647, "6420": 647, "6480": 647, "6540": 647, "6600": 647, "6660": 647, "6720": 647, "6780": 647, "6840": 647, "6900": 647, "6960": 647, "7020": 647, "7080": 647, "7140": 647, "7200": [647, 653], "7260": 647, "7320": 647, "7380": 647, "7440": 647, "7560": 647, "7620": 647, "7680": 647, "7740": 647, "7800": 647, "7860": 647, "7920": 647, "7980": 647, "8040": 647, "8100": 647, "8160": 647, "8220": 647, "8280": 647, "8340": 647, "8400": 647, "8460": 647, "8520": 647, "8580": 647, "8640": 647, "8700": 647, "8760": 647, "8820": 647, "8880": 647, "8940": 647, "9000": [647, 651], "9060": 647, "9120": 647, "9180": 647, "9240": 647, "9300": 647, "9360": 647, "9420": 647, "9480": 647, "9540": 647, "9600": 647, "9660": 647, "9720": 647, "9780": 647, "9840": 647, "9900": 647, "9960": 647, "10020": 647, "10080": 647, "10140": 647, "10200": 647, "10260": 647, "10320": 647, "10380": 647, "10440": 647, "10500": 647, "10560": 647, "10620": 647, "10680": 647, "10740": 647, "10800": 647, "10860": 647, "10920": 647, "10980": 647, "11040": 647, "11100": 647, "11160": 647, "11220": 647, "11280": 647, "11340": 647, "11400": 647, "11460": 647, "11520": 647, "11580": 647, "11640": 647, "11700": 647, "11760": 647, "11820": 647, "11880": 647, "11940": 647, "12000": [647, 651], "12060": 647, "12120": 647, "12180": 647, "12240": 647, "12300": 647, "12360": 647, "12420": 647, "12480": 647, "12540": 647, "12600": 647, "12660": 647, "12720": 647, "12780": 647, "12840": 647, "12900": 647, "12960": 647, "13020": 647, "13080": 647, "13140": 647, "13200": 647, "13260": 647, "13320": 647, "13380": 647, "13440": 647, "13500": 647, "13560": 647, "13620": 647, "13680": 647, "13740": 647, "13800": 647, "13860": 647, "13920": 647, "13980": 647, "14040": 647, "14100": 647, "14160": 647, "14220": 647, "14280": 647, "14340": 647, "14400": 647, "14460": 647, "14520": 647, "14580": 647, "14640": 647, "14700": 647, "14760": 647, "14820": 647, "14880": 647, "14940": 647, "15000": [647, 651], "15060": 647, "15120": 647, "15180": 647, "15240": 647, "15300": 647, "15360": 647, "15420": 647, "15480": 647, "15540": 647, "15600": 647, "15660": 647, "15720": 647, "15780": 647, "15840": 647, "15900": 647, "15960": 647, "16020": 647, "16080": 647, "16140": 647, "16200": 647, "16260": 647, "16320": 647, "16380": 647, "16440": 647, "16500": 647, "16560": 647, "16620": 647, "16680": 647, "16740": 647, "16800": 647, "16860": 647, "16920": 647, "16980": 647, "17040": 647, "17100": 647, "17160": 647, "17220": 647, "17280": 647, "17340": 647, "17400": 647, "17460": 647, "17520": 647, "17580": 647, "17640": 647, "17700": 647, "17760": 647, "17820": 647, "17880": 647, "17940": 647, "18000": [647, 651], "18060": 647, "18120": 647, "18180": 647, "18240": 647, "18300": 647, "18360": 647, "18420": 647, "18480": 647, "18540": 647, "18600": 647, "18660": 647, "18720": 647, "18780": 647, "18840": 647, "18900": 647, "18960": 647, "19020": 647, "19080": 647, "19140": 647, "19200": 647, "19260": 647, "19320": 647, "19380": 647, "19440": 647, "19500": 647, "19560": 647, "19620": 647, "19680": 647, "19740": 647, "19800": 647, "19860": 647, "19920": 647, "19980": 647, "20040": 647, "20100": 647, "20160": 647, "20220": 647, "20280": 647, "20340": 647, "20400": 647, "20460": 647, "20520": 647, "20580": 647, "20640": 647, "20700": 647, "20760": 647, "20820": 647, "20880": 647, "20940": 647, "21000": [647, 651], "21060": 647, "21120": 647, "21180": 647, "21240": 647, "21300": 647, "21360": 647, "21420": 647, "21480": 647, "21540": 647, "21600": 647, "21660": 647, "21720": 647, "21780": 647, "21840": 647, "21900": 647, "21960": 647, "22020": 647, "22080": 647, "22140": 647, "22200": 647, "22260": 647, "22320": 647, "22380": 647, "22440": 647, "22500": 647, "22560": 647, "22620": 647, "22680": 647, "22740": 647, "22860": 647, "22920": 647, "22980": 647, "23040": 647, "23100": 647, "23160": 647, "23220": 647, "23280": 647, "23340": 647, "23400": 647, "23460": 647, "23520": 647, "23580": 647, "23640": 647, "23700": 647, "23760": 647, "23820": 647, "23880": 647, "23940": 647, "24000": [647, 651], "24060": 647, "24120": 647, "24180": 647, "24240": 647, "24300": 647, "24360": 647, "24420": 647, "24480": 647, "24540": 647, "24600": 647, "24660": 647, "24720": 647, "24780": 647, "24840": 647, "24900": 647, "24960": 647, "25020": 647, "25080": 647, "25140": 647, "25200": 647, "25260": 647, "25320": 647, "25380": 647, "25440": 647, "25500": 647, "25560": 647, "25620": 647, "25680": 647, "25740": 647, "25800": 647, "25860": 647, "25920": 647, "25980": 647, "26040": 647, "26100": 647, "26160": 647, "26220": 647, "26280": 647, "26340": 647, "26400": 647, "26460": 647, "26520": 647, "26580": 647, "26640": 647, "26700": 647, "26760": 647, "26820": 647, "26880": 647, "26940": 647, "27000": [647, 651], "27120": 647, "27180": 647, "27240": 647, "27300": 647, "27360": 647, "27420": 647, "27480": 647, "27540": 647, "27600": 647, "27660": 647, "27720": 647, "27780": 647, "27840": 647, "27900": 647, "27960": 647, "28020": 647, "28080": 647, "28140": 647, "28200": 647, "28260": 647, "28320": 647, "28380": 647, "28440": 647, "28500": 647, "28560": 647, "28620": 647, "28680": 647, "28740": 647, "28800": 647, "28860": 647, "28920": 647, "28980": 647, "29040": 647, "29100": 647, "29160": 647, "29220": 647, "29280": 647, "29340": 647, "29400": 647, "29460": 647, "29520": 647, "29580": 647, "29640": 647, "29700": 647, "29760": 647, "29820": 647, "29880": 647, "29940": 647, "30000": [647, 651], "30060": 647, "30120": 647, "30180": 647, "30240": 647, "30300": 647, "30360": 647, "30420": 647, "30480": 647, "30540": 647, "30600": 647, "30660": 647, "30720": 647, "30780": 647, "30840": 647, "30900": 647, "30960": 647, "31020": 647, "31080": 647, "31140": 647, "31200": 647, "31260": 647, "31320": 647, "31380": 647, "31440": 647, "31500": 647, "31560": 647, "31620": 647, "31680": 647, "31740": 647, "31800": 647, "31860": 647, "31920": 647, "31980": 647, "32040": 647, "32100": 647, "32160": 647, "32220": 647, "32280": 647, "32340": 647, "32400": 647, "32460": 647, "32520": 647, "32580": 647, "32640": 647, "32700": 647, "32760": 647, "32820": 647, "32880": 647, "32940": 647, "33000": [647, 651], "33060": 647, "33120": 647, "33180": 647, "33240": 647, "33300": 647, "33360": 647, "33420": 647, "33480": 647, "33540": 647, "33600": 647, "33660": 647, "33720": 647, "33780": 647, "33840": 647, "33900": 647, "33960": 647, "34020": 647, "34080": 647, "34140": 647, "34200": 647, "34260": 647, "34320": 647, "34380": 647, "34440": 647, "34500": 647, "34560": 647, "34620": 647, "34680": 647, "34740": 647, "34800": 647, "34860": 647, "34920": 647, "34980": 647, "35040": 647, "35100": 647, "35160": 647, "35220": 647, "35280": 647, "35340": 647, "35400": 647, "35460": 647, "35520": 647, "35580": 647, "35640": 647, "35700": 647, "35760": 647, "35820": 647, "35880": 647, "35940": 647, "36000": [647, 651], "36060": 647, "36120": 647, "36180": 647, "36240": 647, "36300": 647, "36360": 647, "36420": 647, "36480": 647, "36540": 647, "36600": 647, "36660": 647, "36720": 647, "36780": 647, "36840": 647, "36900": 647, "36960": 647, "37020": 647, "37080": 647, "37140": 647, "37200": 647, "37260": 647, "37320": 647, "37380": 647, "37440": 647, "37500": 647, "37560": 647, "37620": 647, "37680": 647, "37740": 647, "37800": 647, "37860": 647, "37920": 647, "37980": 647, "38040": 647, "38100": 647, "38160": 647, "38220": 647, "38280": 647, "38340": 647, "38400": 647, "38460": 647, "38520": 647, "38580": 647, "38640": 647, "38700": 647, "38760": 647, "38820": 647, "38880": 647, "38940": 647, "39000": [647, 651], "39060": 647, "39120": 647, "39180": 647, "39240": 647, "39300": 647, "39360": 647, "39420": 647, "39480": 647, "39540": 647, "39600": 647, "39660": 647, "39720": 647, "39780": 647, "39840": 647, "39900": 647, "39960": 647, "59416776": 647, "59416886": 647, "59489769": 647, "59489879": 647, "5948999": 647, "59415662": 647, "59414657": 647, "5874659": 647, "58745576": 647, "58744563": 647, "59414621": 647, "59412575": 647, "5805231": 647, "58050246": 647, "58048182": 647, "59419881": 647, "59423095": 647, "61560159": 647, "61563401": 647, "61566644": 647, "59418877": 647, "59421087": 647, "6089062": 647, "6089285": 647, "60895079": 647, "59417836": 647, "59419005": 647, "60196382": 647, "60197561": 647, "60198741": 647, "get_metadata": 647, "ref_dict": 647, "reflecitivity_horizont": 647, "21875": 647, "34375": 647, "0078125": 647, "2109375": 647, "1171875": 647, "59375": 647, "421875": 647, "5625": 647, "7109375": 647, "609375": 647, "5078125": 647, "3828125": 647, "6875": 647, "328125": 647, "3203125": 647, "859375": 647, "6484375": 647, "8515625": 647, "9375": [647, 653], "0234375": 647, "6328125": 647, "2890625": 647, "546875": 647, "578125": 647, "6796875": 647, "ref_gt_0": 648, "mask_dict": 648, "reflectivity_mask": 648, "coolwarm": 648, "sherm": [648, 651], "782": [648, 651], "matplotlibdeprecationwarn": [648, 651], "position": [648, 651], "829": [648, 651], "write_cfradi": 648, "new_radar": 648, "2pi": 649, "wave": 649, "3pi": 649, "erron": 649, "phenomena": [649, 653], "maximium": 649, "unambi": 649, "preprocess": 649, "thankfulli": [649, 651], "surround": [649, 651], "presenc": 649, "524973": 649, "elimin": [649, 651], "vleociti": 649, "realist": 649, "characterist": 651, "100000": 651, "gates_to_grid": 651, "99000": 651, "98000": 651, "97000": 651, "96000": 651, "95000": 651, "94000": 651, "93000": 651, "92000": 651, "91000": 651, "90000": 651, "89000": 651, "88000": 651, "87000": 651, "86000": 651, "85000": 651, "84000": 651, "83000": 651, "82000": 651, "81000": 651, "80000": 651, "79000": 651, "78000": 651, "77000": 651, "76000": 651, "75000": 651, "74000": 651, "73000": 651, "72000": 651, "71000": 651, "70000": 651, "69000": 651, "68000": 651, "67000": 651, "66000": 651, "65000": 651, "64000": 651, "63000": 651, "62000": 651, "61000": 651, "59000": 651, "58000": 651, "57000": 651, "56000": 651, "55000": 651, "54000": 651, "53000": 651, "52000": 651, "51000": 651, "49000": 651, "48000": 651, "47000": 651, "46000": 651, "45000": 651, "44000": 651, "43000": 651, "42000": 651, "41000": 651, "38000": 651, "37000": 651, "35000": 651, "34000": 651, "32000": 651, "31000": 651, "29000": 651, "28000": 651, "26000": 651, "23000": 651, "22000": 651, "19000": 651, "16000": 651, "14000": 651, "13000": 651, "8000": 651, "longitudn": 651, "latitudn": 651, "suffer": 651, "artifici": 651, "feather": 651, "grid_bett": 651, "1750": 651, "sgpxsaprcmacsuri5": 652, "20171004": 652, "203018": 652, "total_pow": 652, "xsapr_clutt": 652, "sounding_temperatur": 652, "signal_to_noise_ratio": 652, "unfolded_differential_phas": 652, "corrected_differential_phas": 652, "filtered_corrected_differential_phas": 652, "corrected_specific_diff_phas": 652, "filtered_corrected_specific_diff_phas": 652, "path_integrated_attenu": 652, "specific_differential_attenu": 652, "path_integrated_differential_attenu": 652, "nonhydrometeor": 652, "exclude_equ": 652, "tell": 652, "refl_arrai": 652, "reflectivity_w_mask": 652, "iter_slic": [652, 653], "9344453454202706": 652, "620691732853737": 652, "3756584054113996": 652, "597935968662154": 652, "696735014111216": 652, "061894569912447": 652, "721673265240488": 652, "086695918593689": 652, "33930700509078": 652, "599363169483158": 652, "836875745223637": 652, "051601529570966": 652, "22435547210836": 652, "378109469982695": 652, "553820234067336": 652, "648943841665002": 652, "837593740986444": 652, "049614721040282": 652, "331202567459613": 652, "585432697375357": 652, "87002341270722": 652, "993012637722325": 652, "061966001642219": 652, "122799449619672": 652, "861035552720102": 652, "74608994279257": 652, "148801770281325": 652, "70860719727862": 652, "989513966551444": 652, "188644935344827": 652, "89301878240611": 652, "172644371021923": 652, "79879842243138": 652, "912806090219976": 652, "766281467013889": 652, "920522471877334": 652, "898600907318164": 652, "971026055481874": 652, "110503947133682": 652, "094456418731509": 652, "0822160050675675": 652, "036430544969512": 652, "259332430219459": 652, "2438254054588604": 652, "473482666015625": 652, "574283685503023": 652, "866719139946832": 652, "771468742643597": 652, "beam_azimuth_angl": 653, "azimuth_angle_from_true_north": 653, "radial_azimuth_coordin": 653, "beam_elevation_angl": 653, "elevation_angle_from_horizontal_plan": 653, "radial_elevation_coordin": 653, "1832": 653, "log_differential_reflectivity_hv": 653, "875": 653, "differential_phase_hv": 653, "equivalent_reflectivity_factor": 653, "cross_correlation_ratio_hv": 653, "correlation_ratio": 653, "meters_per_second": 653, "doppler_spectrum_width": 653, "radial_velocity_of_scatterers_away_from_instru": 653, "target_fixed_angl": 653, "degrees_north": 653, "degrees_east": 653, "projection_range_coordin": 653, "range_to_measurement_volum": 653, "radial_range_coordin": 653, "spacing_is_const": 653, "meters_to_center_of_first_g": 653, "2125": 653, "meters_between_g": 653, "250": 653, "s20": 653, "unitless": 653, "coplan": 653, "vertical_point": 653, "idl": 653, "azimuth_surveil": 653, "elevation_surveil": 653, "sunscan": 653, "manual_ppi": 653, "manual_rhi": 653, "17t19": 653, "21z": 653, "time_in_seconds_since_volume_start": 653, "calendar": 653, "gregorian": 653, "katx": 653, "original_contain": 653, "vcp_pattern": 653, "7470703": 653, "7196045": 653, "6893921": 653, "511719": 653, "get_slic": 653, "sweep_1": 653, "52734375": 653, "indici": 653, "slice_indic": 653, "9066728410400056": 653, "478547577741713": 653, "587792083929423": 653, "871031288639269": 653, "971692217963673": 653, "830616390843327": 653, "108188248095756": 653, "483419908190385": 653, "88976917057903": 653, "852766685681688": 653, "410455582269897": 653, "66444787446138": 653, "997862391449566": 653, "172098402018502": 653, "489752513534416": 653, "712565619531706": 653, "commonli": 653, "9x": 655, "10x": 655, "11x": 655, "But": 655, "bash": 655, "pythonpath": 655, "pth": 655, "build_ext": 655, "segfault": 655, "Theres": 655, "proper": 655, "reinstal": 655, "remedi": 655, "fno": 655, "protector": 655, "d_fortify_sourc": 655, "cflag": 655, "makefil": 655, "troubl": 655, "define_macro": 655, "macro": 655, "extra_compile_arg": 655, "m32": 655, "extra_link_arg": 655, "m64": 655, "proj_lib": 655, "plai": 655, "xx": 655, "usernam": 655, "xxx": 655, "mpl_toolkit": 655, "conflict": 658, "exit": 658, "led": 658, "manag": 658, "activ": 658, "deactiv": 658, "enviro": 658, "scratch": 658, "spyder": 658, "enhanc": 658, "though": 658, "yourusernam": 658, "youranacondadir": 658, "gitter": 658, "im": 658}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [126, 1, 0, "-", "correct"], [168, 1, 0, "-", "exceptions"], [169, 1, 0, "-", "filters"], [202, 1, 0, "-", "graph"], [359, 1, 0, "-", "io"], [380, 1, 0, "-", "lazydict"], [404, 1, 0, "-", "map"], [415, 1, 0, "-", "retrieve"], [449, 1, 0, "-", "testing"], [550, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_geographic"], [122, 0, 1, "", "cartesian_to_geographic_aeqd"], [123, 0, 1, "", "cartesian_vectors_to_geographic"], [124, 0, 1, "", "geographic_to_cartesian"], [125, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[127, 2, 1, "", "GateFilter"], [155, 0, 1, "", "calculate_attenuation"], [156, 0, 1, "", "calculate_attenuation_philinear"], [157, 0, 1, "", "calculate_attenuation_zphi"], [158, 0, 1, "", "correct_bias"], [159, 0, 1, "", "correct_noise_rhohv"], [160, 0, 1, "", "dealias_fourdd"], [161, 0, 1, "", "dealias_region_based"], [162, 0, 1, "", "dealias_unwrap_phase"], [163, 0, 1, "", "despeckle_field"], [164, 0, 1, "", "find_objects"], [165, 0, 1, "", "moment_based_gate_filter"], [166, 0, 1, "", "phase_proc_lp"], [167, 0, 1, "", "phase_proc_lp_gf"]], "pyart.correct.GateFilter": [[128, 3, 1, "", "copy"], [129, 3, 1, "", "exclude_above"], [130, 3, 1, "", "exclude_all"], [131, 3, 1, "", "exclude_below"], [132, 3, 1, "", "exclude_equal"], [133, 3, 1, "", "exclude_gates"], [134, 3, 1, "", "exclude_inside"], [135, 3, 1, "", "exclude_invalid"], [136, 3, 1, "", "exclude_masked"], [137, 3, 1, "", "exclude_none"], [138, 3, 1, "", "exclude_not_equal"], [139, 3, 1, "", "exclude_outside"], [140, 3, 1, "", "exclude_transition"], [141, 4, 1, "", "gate_excluded"], [142, 4, 1, "", "gate_included"], [143, 3, 1, "", "include_above"], [144, 3, 1, "", "include_all"], [145, 3, 1, "", "include_below"], [146, 3, 1, "", "include_equal"], [147, 3, 1, "", "include_gates"], [148, 3, 1, "", "include_inside"], [149, 3, 1, "", "include_none"], [150, 3, 1, "", "include_not_equal"], [151, 3, 1, "", "include_not_masked"], [152, 3, 1, "", "include_not_transition"], [153, 3, 1, "", "include_outside"], [154, 3, 1, "", "include_valid"]], "pyart.filters": [[170, 2, 1, "", "GateFilter"], [198, 0, 1, "", "iso0_based_gate_filter"], [199, 0, 1, "", "moment_and_texture_based_gate_filter"], [200, 0, 1, "", "moment_based_gate_filter"], [201, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[171, 3, 1, "", "copy"], [172, 3, 1, "", "exclude_above"], [173, 3, 1, "", "exclude_all"], [174, 3, 1, "", "exclude_below"], [175, 3, 1, "", "exclude_equal"], [176, 3, 1, "", "exclude_gates"], [177, 3, 1, "", "exclude_inside"], [178, 3, 1, "", "exclude_invalid"], [179, 3, 1, "", "exclude_masked"], [180, 3, 1, "", "exclude_none"], [181, 3, 1, "", "exclude_not_equal"], [182, 3, 1, "", "exclude_outside"], [183, 3, 1, "", "exclude_transition"], [184, 4, 1, "", "gate_excluded"], [185, 4, 1, "", "gate_included"], [186, 3, 1, "", "include_above"], [187, 3, 1, "", "include_all"], [188, 3, 1, "", "include_below"], [189, 3, 1, "", "include_equal"], [190, 3, 1, "", "include_gates"], [191, 3, 1, "", "include_inside"], [192, 3, 1, "", "include_none"], [193, 3, 1, "", "include_not_equal"], [194, 3, 1, "", "include_not_masked"], [195, 3, 1, "", "include_not_transition"], [196, 3, 1, "", "include_outside"], [197, 3, 1, "", "include_valid"]], "pyart.graph": [[203, 2, 1, "", "AirborneRadarDisplay"], [233, 2, 1, "", "GridMapDisplay"], [249, 2, 1, "", "GridMapDisplayBasemap"], [263, 2, 1, "", "RadarDisplay"], [292, 2, 1, "", "RadarMapDisplay"], [325, 2, 1, "", "RadarMapDisplayBasemap"], [358, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[204, 3, 1, "", "generate_az_rhi_title"], [205, 3, 1, "", "generate_filename"], [206, 3, 1, "", "generate_ray_title"], [207, 3, 1, "", "generate_title"], [208, 3, 1, "", "generate_vpt_title"], [209, 3, 1, "", "label_xaxis_r"], [210, 3, 1, "", "label_xaxis_rays"], [211, 3, 1, "", "label_xaxis_time"], [212, 3, 1, "", "label_xaxis_x"], [213, 3, 1, "", "label_yaxis_field"], [214, 3, 1, "", "label_yaxis_y"], [215, 3, 1, "", "label_yaxis_z"], [216, 3, 1, "", "plot"], [217, 3, 1, "", "plot_azimuth_to_rhi"], [218, 3, 1, "", "plot_colorbar"], [219, 3, 1, "", "plot_cr_raster"], [220, 3, 1, "", "plot_cross_hair"], [221, 3, 1, "", "plot_grid_lines"], [222, 3, 1, "", "plot_label"], [223, 3, 1, "", "plot_labels"], [224, 3, 1, "", "plot_ppi"], [225, 3, 1, "", "plot_range_ring"], [226, 3, 1, "", "plot_range_rings"], [227, 3, 1, "", "plot_ray"], [228, 3, 1, "", "plot_rhi"], [229, 3, 1, "", "plot_sweep_grid"], [230, 3, 1, "", "plot_vpt"], [231, 3, 1, "", "set_aspect_ratio"], [232, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[234, 3, 1, "", "cartopy_coastlines"], [235, 3, 1, "", "cartopy_political_boundaries"], [236, 3, 1, "", "cartopy_states"], [237, 3, 1, "", "generate_filename"], [238, 3, 1, "", "generate_grid_title"], [239, 3, 1, "", "generate_latitudinal_level_title"], [240, 3, 1, "", "generate_longitudinal_level_title"], [241, 3, 1, "", "plot_colorbar"], [242, 3, 1, "", "plot_cross_section"], [243, 3, 1, "", "plot_crosshairs"], [244, 3, 1, "", "plot_grid"], [245, 3, 1, "", "plot_latitude_slice"], [246, 3, 1, "", "plot_latitudinal_level"], [247, 3, 1, "", "plot_longitude_slice"], [248, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[250, 3, 1, "", "generate_filename"], [251, 3, 1, "", "generate_grid_title"], [252, 3, 1, "", "generate_latitudinal_level_title"], [253, 3, 1, "", "generate_longitudinal_level_title"], [254, 3, 1, "", "get_basemap"], [255, 3, 1, "", "plot_basemap"], [256, 3, 1, "", "plot_colorbar"], [257, 3, 1, "", "plot_crosshairs"], [258, 3, 1, "", "plot_grid"], [259, 3, 1, "", "plot_latitude_slice"], [260, 3, 1, "", "plot_latitudinal_level"], [261, 3, 1, "", "plot_longitude_slice"], [262, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[264, 3, 1, "", "generate_az_rhi_title"], [265, 3, 1, "", "generate_filename"], [266, 3, 1, "", "generate_ray_title"], [267, 3, 1, "", "generate_title"], [268, 3, 1, "", "generate_vpt_title"], [269, 3, 1, "", "label_xaxis_r"], [270, 3, 1, "", "label_xaxis_rays"], [271, 3, 1, "", "label_xaxis_time"], [272, 3, 1, "", "label_xaxis_x"], [273, 3, 1, "", "label_yaxis_field"], [274, 3, 1, "", "label_yaxis_y"], [275, 3, 1, "", "label_yaxis_z"], [276, 3, 1, "", "plot"], [277, 3, 1, "", "plot_azimuth_to_rhi"], [278, 3, 1, "", "plot_colorbar"], [279, 3, 1, "", "plot_cr_raster"], [280, 3, 1, "", "plot_cross_hair"], [281, 3, 1, "", "plot_grid_lines"], [282, 3, 1, "", "plot_label"], [283, 3, 1, "", "plot_labels"], [284, 3, 1, "", "plot_ppi"], [285, 3, 1, "", "plot_range_ring"], [286, 3, 1, "", "plot_range_rings"], [287, 3, 1, "", "plot_ray"], [288, 3, 1, "", "plot_rhi"], [289, 3, 1, "", "plot_vpt"], [290, 3, 1, "", "set_aspect_ratio"], [291, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[293, 3, 1, "", "generate_az_rhi_title"], [294, 3, 1, "", "generate_filename"], [295, 3, 1, "", "generate_ray_title"], [296, 3, 1, "", "generate_title"], [297, 3, 1, "", "generate_vpt_title"], [298, 3, 1, "", "label_xaxis_r"], [299, 3, 1, "", "label_xaxis_rays"], [300, 3, 1, "", "label_xaxis_time"], [301, 3, 1, "", "label_xaxis_x"], [302, 3, 1, "", "label_yaxis_field"], [303, 3, 1, "", "label_yaxis_y"], [304, 3, 1, "", "label_yaxis_z"], [305, 3, 1, "", "plot"], [306, 3, 1, "", "plot_azimuth_to_rhi"], [307, 3, 1, "", "plot_colorbar"], [308, 3, 1, "", "plot_cr_raster"], [309, 3, 1, "", "plot_cross_hair"], [310, 3, 1, "", "plot_grid_lines"], [311, 3, 1, "", "plot_label"], [312, 3, 1, "", "plot_labels"], [313, 3, 1, "", "plot_line_geo"], [314, 3, 1, "", "plot_line_xy"], [315, 3, 1, "", "plot_point"], [316, 3, 1, "", "plot_ppi"], [317, 3, 1, "", "plot_ppi_map"], [318, 3, 1, "", "plot_range_ring"], [319, 3, 1, "", "plot_range_rings"], [320, 3, 1, "", "plot_ray"], [321, 3, 1, "", "plot_rhi"], [322, 3, 1, "", "plot_vpt"], [323, 3, 1, "", "set_aspect_ratio"], [324, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[326, 3, 1, "", "generate_az_rhi_title"], [327, 3, 1, "", "generate_filename"], [328, 3, 1, "", "generate_ray_title"], [329, 3, 1, "", "generate_title"], [330, 3, 1, "", "generate_vpt_title"], [331, 3, 1, "", "label_xaxis_r"], [332, 3, 1, "", "label_xaxis_rays"], [333, 3, 1, "", "label_xaxis_time"], [334, 3, 1, "", "label_xaxis_x"], [335, 3, 1, "", "label_yaxis_field"], [336, 3, 1, "", "label_yaxis_y"], [337, 3, 1, "", "label_yaxis_z"], [338, 3, 1, "", "plot"], [339, 3, 1, "", "plot_azimuth_to_rhi"], [340, 3, 1, "", "plot_colorbar"], [341, 3, 1, "", "plot_cr_raster"], [342, 3, 1, "", "plot_cross_hair"], [343, 3, 1, "", "plot_grid_lines"], [344, 3, 1, "", "plot_label"], [345, 3, 1, "", "plot_labels"], [346, 3, 1, "", "plot_line_geo"], [347, 3, 1, "", "plot_line_xy"], [348, 3, 1, "", "plot_point"], [349, 3, 1, "", "plot_ppi"], [350, 3, 1, "", "plot_ppi_map"], [351, 3, 1, "", "plot_range_ring"], [352, 3, 1, "", "plot_range_rings"], [353, 3, 1, "", "plot_ray"], [354, 3, 1, "", "plot_rhi"], [355, 3, 1, "", "plot_vpt"], [356, 3, 1, "", "set_aspect_ratio"], [357, 3, 1, "", "set_limits"]], "pyart.io": [[360, 0, 1, "", "prepare_for_read"], [361, 0, 1, "", "read"], [362, 0, 1, "", "read_arm_sonde"], [363, 0, 1, "", "read_arm_sonde_vap"], [364, 0, 1, "", "read_cfradial"], [365, 0, 1, "", "read_chl"], [366, 0, 1, "", "read_grid"], [367, 0, 1, "", "read_grid_mdv"], [368, 0, 1, "", "read_mdv"], [369, 0, 1, "", "read_nexrad_archive"], [370, 0, 1, "", "read_nexrad_cdm"], [371, 0, 1, "", "read_nexrad_level3"], [372, 0, 1, "", "read_rsl"], [373, 0, 1, "", "read_sigmet"], [374, 0, 1, "", "read_uf"], [375, 0, 1, "", "write_cfradial"], [376, 0, 1, "", "write_grid"], [377, 0, 1, "", "write_grid_geotiff"], [378, 0, 1, "", "write_grid_mdv"], [379, 0, 1, "", "write_uf"]], "pyart.lazydict": [[381, 2, 1, "", "LazyLoadDict"], [394, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[382, 3, 1, "", "clear"], [383, 3, 1, "", "copy"], [384, 3, 1, "", "get"], [385, 3, 1, "", "has_key"], [386, 3, 1, "", "items"], [387, 3, 1, "", "keys"], [388, 3, 1, "", "pop"], [389, 3, 1, "", "popitem"], [390, 3, 1, "", "set_lazy"], [391, 3, 1, "", "setdefault"], [392, 3, 1, "", "update"], [393, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[395, 3, 1, "", "clear"], [396, 3, 1, "", "get"], [397, 3, 1, "", "items"], [398, 3, 1, "", "keys"], [399, 3, 1, "", "pop"], [400, 3, 1, "", "popitem"], [401, 3, 1, "", "setdefault"], [402, 3, 1, "", "update"], [403, 3, 1, "", "values"]], "pyart.map": [[405, 2, 1, "", "GateMapper"], [409, 0, 1, "", "example_roi_func_constant"], [410, 0, 1, "", "example_roi_func_dist"], [411, 0, 1, "", "example_roi_func_dist_beam"], [412, 0, 1, "", "grid_from_radars"], [413, 0, 1, "", "map_gates_to_grid"], [414, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[406, 4, 1, "", "distance_tolerance"], [407, 3, 1, "", "mapped_radar"], [408, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[416, 0, 1, "", "ZtoR"], [417, 0, 1, "", "calculate_snr_from_reflectivity"], [418, 0, 1, "", "calculate_velocity_texture"], [419, 0, 1, "", "composite_reflectivity"], [420, 0, 1, "", "compute_cdr"], [421, 0, 1, "", "compute_l"], [422, 0, 1, "", "compute_noisedBZ"], [423, 0, 1, "", "compute_snr"], [424, 0, 1, "", "conv_strat_yuter"], [425, 0, 1, "", "dealias_spectra"], [426, 0, 1, "", "est_rain_rate_a"], [427, 0, 1, "", "est_rain_rate_hydro"], [428, 0, 1, "", "est_rain_rate_kdp"], [429, 0, 1, "", "est_rain_rate_z"], [430, 0, 1, "", "est_rain_rate_za"], [431, 0, 1, "", "est_rain_rate_zkdp"], [432, 0, 1, "", "est_rain_rate_zpoly"], [433, 0, 1, "", "feature_detection"], [434, 0, 1, "", "fetch_radar_time_profile"], [435, 0, 1, "", "get_freq_band"], [436, 0, 1, "", "grid_displacement_pc"], [437, 0, 1, "", "grid_shift"], [438, 0, 1, "", "hydroclass_semisupervised"], [439, 0, 1, "", "kdp_maesaka"], [440, 0, 1, "", "kdp_schneebeli"], [441, 0, 1, "", "kdp_vulpiani"], [442, 0, 1, "", "map_profile_to_gates"], [443, 0, 1, "", "quasi_vertical_profile"], [444, 0, 1, "", "spectra_moments"], [445, 0, 1, "", "steiner_conv_strat"], [446, 0, 1, "", "texture_of_complex_phase"], [447, 0, 1, "", "vad_browning"], [448, 0, 1, "", "vad_michelson"]], "pyart.testing": [[450, 2, 1, "", "Grid"], [460, 2, 1, "", "InTemporaryDirectory"], [462, 2, 1, "", "Radar"], [491, 2, 1, "", "RadarSpectra"], [536, 0, 1, "", "get_metadata"], [537, 0, 1, "", "get_test_data"], [538, 0, 1, "", "make_empty_grid"], [539, 0, 1, "", "make_empty_ppi_radar"], [540, 0, 1, "", "make_empty_rhi_radar"], [541, 0, 1, "", "make_empty_spectra_radar"], [542, 0, 1, "", "make_normal_storm"], [543, 0, 1, "", "make_single_ray_radar"], [544, 0, 1, "", "make_storm_grid"], [545, 0, 1, "", "make_target_grid"], [546, 0, 1, "", "make_target_radar"], [547, 0, 1, "", "make_target_spectra_radar"], [548, 0, 1, "", "make_velocity_aliased_radar"], [549, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[451, 3, 1, "", "add_field"], [452, 3, 1, "", "get_point_longitude_latitude"], [453, 3, 1, "", "get_projparams"], [454, 3, 1, "", "init_point_altitude"], [455, 3, 1, "", "init_point_longitude_latitude"], [456, 3, 1, "", "init_point_x_y_z"], [457, 4, 1, "", "projection_proj"], [458, 3, 1, "", "to_xarray"], [459, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[461, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[463, 3, 1, "", "add_field"], [464, 3, 1, "", "add_field_like"], [465, 3, 1, "", "add_filter"], [466, 3, 1, "", "check_field_exists"], [467, 3, 1, "", "extract_sweeps"], [468, 3, 1, "", "get_azimuth"], [469, 3, 1, "", "get_elevation"], [470, 3, 1, "", "get_end"], [471, 3, 1, "", "get_field"], [472, 3, 1, "", "get_gate_area"], [473, 3, 1, "", "get_gate_lat_lon_alt"], [474, 3, 1, "", "get_gate_x_y_z"], [475, 3, 1, "", "get_nyquist_vel"], [476, 3, 1, "", "get_slice"], [477, 3, 1, "", "get_start"], [478, 3, 1, "", "get_start_end"], [479, 3, 1, "", "info"], [480, 3, 1, "", "init_gate_altitude"], [481, 3, 1, "", "init_gate_longitude_latitude"], [482, 3, 1, "", "init_gate_x_y_z"], [483, 3, 1, "", "init_rays_per_sweep"], [484, 3, 1, "", "iter_azimuth"], [485, 3, 1, "", "iter_elevation"], [486, 3, 1, "", "iter_end"], [487, 3, 1, "", "iter_field"], [488, 3, 1, "", "iter_slice"], [489, 3, 1, "", "iter_start"], [490, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[492, 4, 1, "", "altitude"], [493, 4, 1, "", "azimuth"], [494, 3, 1, "", "check_field_exists"], [495, 4, 1, "", "elevation"], [496, 4, 1, "", "fields"], [497, 4, 1, "", "fixed_angle"], [498, 4, 1, "", "gate_altitude"], [499, 4, 1, "", "gate_latitude"], [500, 4, 1, "", "gate_longitude"], [501, 4, 1, "", "gate_x"], [502, 4, 1, "", "gate_y"], [503, 4, 1, "", "gate_z"], [504, 3, 1, "", "get_end"], [505, 3, 1, "", "get_slice"], [506, 3, 1, "", "get_start"], [507, 3, 1, "", "get_start_end"], [508, 3, 1, "", "init_gate_altitude"], [509, 3, 1, "", "init_gate_longitude_latitude"], [510, 3, 1, "", "init_gate_x_y_z"], [511, 3, 1, "", "init_rays_per_sweep"], [512, 3, 1, "", "iter_azimuth"], [513, 3, 1, "", "iter_elevation"], [514, 3, 1, "", "iter_end"], [515, 3, 1, "", "iter_field"], [516, 3, 1, "", "iter_slice"], [517, 3, 1, "", "iter_start"], [518, 3, 1, "", "iter_start_end"], [519, 4, 1, "", "latitude"], [520, 4, 1, "", "longitude"], [521, 4, 1, "", "ngates"], [522, 4, 1, "", "npulses_max"], [523, 4, 1, "", "nrays"], [524, 4, 1, "", "nsweeps"], [525, 4, 1, "", "projection"], [526, 4, 1, "", "range"], [527, 4, 1, "", "rays_per_sweep"], [528, 4, 1, "", "scan_type"], [529, 4, 1, "", "sweep_end_ray_index"], [530, 4, 1, "", "sweep_mode"], [531, 4, 1, "", "sweep_number"], [532, 4, 1, "", "sweep_start_ray_index"], [533, 4, 1, "", "time"], [534, 3, 1, "", "to_vpt"], [535, 4, 1, "", "velocity_bins"]], "pyart.util": [[551, 0, 1, "", "angular_mean"], [552, 0, 1, "", "angular_mean_deg"], [553, 0, 1, "", "angular_std"], [554, 0, 1, "", "angular_std_deg"], [555, 0, 1, "", "angular_texture_2d"], [556, 0, 1, "", "column_vertical_profile"], [557, 0, 1, "", "cross_section_ppi"], [558, 0, 1, "", "cross_section_rhi"], [559, 0, 1, "", "datetime_from_dataset"], [560, 0, 1, "", "datetime_from_grid"], [561, 0, 1, "", "datetime_from_radar"], [562, 0, 1, "", "datetimes_from_dataset"], [563, 0, 1, "", "datetimes_from_radar"], [564, 0, 1, "", "determine_sweeps"], [565, 0, 1, "", "estimate_noise_hs74"], [566, 0, 1, "", "for_azimuth"], [567, 0, 1, "", "get_column_rays"], [568, 0, 1, "", "get_field_location"], [569, 0, 1, "", "image_mute_radar"], [570, 0, 1, "", "interval_mean"], [571, 0, 1, "", "interval_std"], [572, 0, 1, "", "is_vpt"], [573, 0, 1, "", "join_radar"], [574, 0, 1, "", "mean_of_two_angles"], [575, 0, 1, "", "mean_of_two_angles_deg"], [576, 0, 1, "", "rolling_window"], [577, 0, 1, "", "simulated_vel_from_profile"], [578, 0, 1, "", "sphere_distance"], [579, 0, 1, "", "subset_radar"], [580, 0, 1, "", "texture"], [581, 0, 1, "", "texture_along_ray"], [582, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 586, 588, 589, 593], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 446], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 536], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 609, 610, 614, 642, 651], "add_field": [32, 46, 451, 463], "get_point_longitude_latitud": [33, 452], "get_projparam": [34, 453], "init_point_altitud": [35, 454], "init_point_longitude_latitud": [36, 455], "init_point_x_y_z": [37, 456], "projection_proj": [38, 457], "to_xarrai": [39, 458], "write": [40, 459], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 587, 588, 594, 596, 608, 609, 610, 632, 645, 648, 653, 656], "add_field_lik": [47, 464], "add_filt": [48, 465], "check_field_exist": [49, 77, 466, 494], "extract_sweep": [50, 467], "get_azimuth": [51, 468], "get_elev": [52, 469], "get_end": [53, 87, 470, 504], "get_field": [54, 471], "get_gate_area": [55, 472], "get_gate_lat_lon_alt": [56, 473], "get_gate_x_y_z": [57, 474], "get_nyquist_vel": [58, 475], "get_slic": [59, 88, 476, 505], "get_start": [60, 89, 477, 506], "get_start_end": [61, 90, 478, 507], "info": [62, 479], "init_gate_altitud": [63, 91, 480, 508], "init_gate_longitude_latitud": [64, 92, 481, 509], "init_gate_x_y_z": [65, 93, 482, 510], "init_rays_per_sweep": [66, 94, 483, 511], "iter_azimuth": [67, 95, 484, 512], "iter_elev": [68, 96, 485, 513], "iter_end": [69, 97, 486, 514], "iter_field": [70, 98, 487, 515], "iter_slic": [71, 99, 488, 516], "iter_start": [72, 100, 489, 517], "iter_start_end": [73, 101, 490, 518], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "altitud": [75, 492], "azimuth": [76, 493], "elev": [78, 495], "field": [79, 496, 648], "fixed_angl": [80, 497], "gate_altitud": [81, 498], "gate_latitud": [82, 499], "gate_longitud": [83, 500], "gate_x": [84, 501], "gate_i": [85, 502], "gate_z": [86, 503], "latitud": [102, 519, 605], "longitud": [103, 520, 605], "ngate": [104, 521], "npulses_max": [105, 522], "nrai": [106, 523], "nsweep": [107, 524], "project": [108, 525], "rang": [109, 526], "rays_per_sweep": [110, 527], "scan_typ": [111, 528], "sweep_end_ray_index": [112, 529], "sweep_mod": [113, 530], "sweep_numb": [114, 531], "sweep_start_ray_index": [115, 532], "time": [116, 533, 588, 601, 606, 611, 630, 638, 639, 644, 654], "to_vpt": [117, 534, 582], "velocity_bin": [118, 535], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_geograph": 121, "cartesian_to_geographic_aeqd": 122, "cartesian_vectors_to_geograph": 123, "geographic_to_cartesian": 124, "geographic_to_cartesian_aeqd": 125, "correct": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 598, 599, 602], "gatefilt": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 652], "copi": [128, 171, 383], "exclude_abov": [129, 172], "exclude_al": [130, 173], "exclude_below": [131, 174], "exclude_equ": [132, 175], "exclude_g": [133, 176], "exclude_insid": [134, 177], "exclude_invalid": [135, 178], "exclude_mask": [136, 179], "exclude_non": [137, 180], "exclude_not_equ": [138, 181], "exclude_outsid": [139, 182], "exclude_transit": [140, 183], "gate_exclud": [141, 184], "gate_includ": [142, 185], "include_abov": [143, 186], "include_al": [144, 187], "include_below": [145, 188], "include_equ": [146, 189], "include_g": [147, 190], "include_insid": [148, 191], "include_non": [149, 192], "include_not_equ": [150, 193], "include_not_mask": [151, 194], "include_not_transit": [152, 195], "include_outsid": [153, 196], "include_valid": [154, 197], "calculate_attenu": 155, "calculate_attenuation_philinear": 156, "calculate_attenuation_zphi": 157, "correct_bia": 158, "correct_noise_rhohv": 159, "dealias_fourdd": 160, "dealias_region_bas": 161, "dealias_unwrap_phas": 162, "despeckle_field": 163, "find_object": 164, "moment_based_gate_filt": [165, 200], "phase_proc_lp": 166, "phase_proc_lp_gf": 167, "except": 168, "filter": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "iso0_based_gate_filt": 198, "moment_and_texture_based_gate_filt": 199, "temp_based_gate_filt": 201, "graph": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "airborneradardisplai": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "generate_az_rhi_titl": [204, 264, 293, 326], "generate_filenam": [205, 237, 250, 265, 294, 327], "generate_ray_titl": [206, 266, 295, 328], "generate_titl": [207, 267, 296, 329], "generate_vpt_titl": [208, 268, 297, 330], "label_xaxis_r": [209, 269, 298, 331], "label_xaxis_rai": [210, 270, 299, 332], "label_xaxis_tim": [211, 271, 300, 333], "label_xaxis_x": [212, 272, 301, 334], "label_yaxis_field": [213, 273, 302, 335], "label_yaxis_i": [214, 274, 303, 336], "label_yaxis_z": [215, 275, 304, 337], "plot": [216, 276, 305, 338, 587, 588, 589, 591, 602, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 633, 636, 637, 643], "plot_azimuth_to_rhi": [217, 277, 306, 339], "plot_colorbar": [218, 241, 256, 278, 307, 340], "plot_cr_rast": [219, 279, 308, 341], "plot_cross_hair": [220, 280, 309, 342], "plot_grid_lin": [221, 281, 310, 343], "plot_label": [222, 223, 282, 283, 311, 312, 344, 345], "plot_ppi": [224, 284, 316, 349], "plot_range_r": [225, 226, 285, 286, 318, 319, 351, 352], "plot_rai": [227, 287, 320, 353], "plot_rhi": [228, 288, 321, 354], "plot_sweep_grid": 229, "plot_vpt": [230, 289, 322, 355], "set_aspect_ratio": [231, 290, 323, 356], "set_limit": [232, 291, 324, 357], "gridmapdisplai": [233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 628], "cartopy_coastlin": 234, "cartopy_political_boundari": 235, "cartopy_st": 236, "generate_grid_titl": [238, 251], "generate_latitudinal_level_titl": [239, 252], "generate_longitudinal_level_titl": [240, 253], "plot_cross_sect": 242, "plot_crosshair": [243, 257], "plot_grid": [244, 258], "plot_latitude_slic": [245, 259], "plot_latitudinal_level": [246, 260], "plot_longitude_slic": [247, 261], "plot_longitudinal_level": [248, 262], "gridmapdisplaybasemap": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "get_basemap": 254, "plot_basemap": 255, "radardisplai": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "radarmapdisplai": [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 589], "plot_line_geo": [313, 346], "plot_line_xi": [314, 347], "plot_point": [315, 348], "plot_ppi_map": [317, 350, 589], "radarmapdisplaybasemap": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "plot_convstrat_schem": 358, "io": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379], "prepare_for_read": 360, "read": [361, 587, 588, 589, 604, 605], "read_arm_sond": 362, "read_arm_sonde_vap": 363, "read_cfradi": 364, "read_chl": 365, "read_grid": 366, "read_grid_mdv": 367, "read_mdv": 368, "read_nexrad_arch": 369, "read_nexrad_cdm": 370, "read_nexrad_level3": 371, "read_rsl": 372, "read_sigmet": 373, "read_uf": 374, "write_cfradi": 375, "write_grid": 376, "write_grid_geotiff": 377, "write_grid_mdv": 378, "write_uf": 379, "lazydict": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "lazyloaddict": [381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "clear": [382, 395], "get": [384, 396, 645], "has_kei": 385, "item": [386, 397], "kei": [387, 398, 588], "pop": [388, 399], "popitem": [389, 400], "set_lazi": 390, "setdefault": [391, 401], "updat": [392, 402, 596], "valu": [393, 403], "mutablemap": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "map": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 602, 607, 609, 610, 621, 651], "gatemapp": [405, 406, 407, 408, 608], "distance_toler": 406, "mapped_radar": 407, "time_toler": 408, "example_roi_func_const": 409, "example_roi_func_dist": 410, "example_roi_func_dist_beam": 411, "grid_from_radar": 412, "map_gates_to_grid": 413, "map_to_grid": 414, "retriev": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 602, 631], "ztor": 416, "calculate_snr_from_reflect": 417, "calculate_velocity_textur": 418, "composite_reflect": 419, "compute_cdr": 420, "compute_l": 421, "compute_noisedbz": 422, "compute_snr": 423, "conv_strat_yut": 424, "dealias_spectra": 425, "est_rain_rate_a": 426, "est_rain_rate_hydro": 427, "est_rain_rate_kdp": 428, "est_rain_rate_z": 429, "est_rain_rate_za": 430, "est_rain_rate_zkdp": 431, "est_rain_rate_zpoli": 432, "feature_detect": 433, "fetch_radar_time_profil": 434, "get_freq_band": 435, "grid_displacement_pc": 436, "grid_shift": 437, "hydroclass_semisupervis": 438, "kdp_maesaka": 439, "kdp_schneeb": 440, "kdp_vulpiani": 441, "map_profile_to_g": 442, "quasi_vertical_profil": 443, "spectra_mo": 444, "paramet": [444, 589], "steiner_conv_strat": 445, "vad_brown": 447, "vad_michelson": 448, "test": [449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 594, 656], "intemporarydirectori": [460, 461], "cleanup": 461, "get_test_data": 537, "make_empty_grid": 538, "make_empty_ppi_radar": 539, "make_empty_rhi_radar": 540, "make_empty_spectra_radar": 541, "make_normal_storm": 542, "make_single_ray_radar": 543, "make_storm_grid": 544, "make_target_grid": 545, "make_target_radar": 546, "make_target_spectra_radar": 547, "make_velocity_aliased_radar": 548, "make_velocity_aliased_rhi_radar": 549, "util": [550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582], "angular_mean": 551, "angular_mean_deg": 552, "angular_std": 553, "angular_std_deg": 554, "angular_texture_2d": 555, "column_vertical_profil": 556, "cross_section_ppi": 557, "cross_section_rhi": 558, "datetime_from_dataset": 559, "datetime_from_grid": 560, "datetime_from_radar": 561, "datetimes_from_dataset": 562, "datetimes_from_radar": 563, "determine_sweep": 564, "estimate_noise_hs74": 565, "for_azimuth": 566, "assumpt": [566, 578], "get_column_rai": 567, "get_field_loc": 568, "image_mute_radar": 569, "interval_mean": 570, "interval_std": 571, "is_vpt": 572, "join_radar": 573, "mean_of_two_angl": 574, "mean_of_two_angles_deg": 575, "rolling_window": 576, "simulated_vel_from_profil": 577, "sphere_dist": 578, "subset_radar": 579, "textur": 580, "texture_along_rai": 581, "api": 583, "refer": [583, 634, 635], "manual": 583, "blog": [584, 592], "blend": 585, "observ": 585, "from": [585, 587, 604, 614, 617, 619, 620, 622, 623, 624, 625, 626, 629, 655], "tracer": 585, "us": [585, 587, 588, 589, 600, 608, 628, 641, 642, 643], "py": [585, 586, 587, 593, 594, 595, 596, 641, 642, 643, 645, 652, 653, 655, 656], "art": [585, 586, 587, 593, 594, 595, 596, 641, 642, 643, 645, 652, 653, 655, 656], "import": [585, 587, 588, 589, 591, 594, 656], "goe": 585, "data": [585, 587, 588, 589, 591, 604, 605, 642, 651, 652], "access": [585, 587, 589, 591], "csapr": 585, "load": [585, 588], "lma": 585, "flash": 585, "june": 585, "17th": 585, "case": 585, "17": 585, "rhi": [585, 622, 623, 624, 625, 626, 627], "activ": 586, "develop": [586, 597], "submit": 586, "pull": 586, "request": 586, "pr": [586, 593], "first": 586, "you": 586, "have": 586, "done": 586, "so": 586, "alreadi": 586, "need": 586, "fork": 586, "github": [586, 594, 596, 656], "repositori": 586, "second": 586, "termin": 586, "clone": 586, "your": [586, 613, 615], "remot": 586, "git": [586, 596], "command": 586, "third": 586, "creat": [586, 587, 588, 596, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 647, 658], "doc": [586, 590], "conda": [586, 596], "environ": [586, 658], "fourth": 586, "we": 586, "instal": [586, 594, 645, 655, 656], "trmm": 586, "rsl": 586, "librari": 586, "lastli": 586, "python": [586, 594, 645, 656], "script": 586, "within": 586, "okai": 586, "should": 586, "now": 586, "readi": 586, "make": [586, 596], "chang": 586, "sourc": [586, 655], "code": [586, 594, 656], "1": [586, 593, 635], "new": [586, 590], "branch": 586, "our": [586, 588, 589, 591], "2": [586, 593, 604, 605, 635], "push": 586, "To": 586, "let": 586, "commit": 586, "after": 586, "thi": [586, 593], "i": [586, 645], "what": [586, 645], "look": 586, "like": 586, "hope": 586, "help": [586, 645], "hail": 587, "storm": 587, "visual": [587, 588, 591], "panda": 587, "motiv": [587, 591, 592], "nexrad": [587, 589, 591, 604, 605, 617, 618], "fsspec": 587, "setup": [587, 591, 594, 595, 656], "filesystem": 587, "bucket": 587, "file": [587, 594, 617, 619, 620, 622, 623, 624, 625, 626, 647, 648, 656], "dataset": 587, "nexradaw": 587, "configur": 587, "search": 587, "download": [587, 591], "spc": 587, "report": 587, "function": [587, 591], "loop": 587, "through": 587, "helper": 587, "scale": 587, "bar": 587, "an": [587, 616, 624, 625, 658], "anim": 587, "imag": [587, 591, 616], "view": [587, 588], "final": [587, 588], "conclus": [587, 589, 591, 592], "work": [588, 634, 635], "vertic": 588, "point": [588, 632], "xarrai": 588, "hvplot": 588, "overview": 588, "ka": 588, "band": 588, "arm": [588, 594, 645, 656], "zenith": 588, "kazr": 588, "instrument": 588, "clean": 588, "up": [588, 589, 658], "bit": 588, "analysi": 588, "subset": 588, "reflect": [588, 599, 616, 618, 624, 625, 633], "veloc": [588, 600, 641, 649], "quick": 588, "extract": [588, 632], "date": [588, 591], "inform": [588, 658], "label": 588, "holoview": 588, "try": [588, 589], "raster": 588, "takeawai": 588, "fix": [589, 593, 605], "weird": 589, "pattern": 589, "when": 589, "level": [589, 604, 605], "3": [589, 593, 604, 628], "The": [589, 591, 592, 594, 645, 653, 656], "recreat": 589, "issu": [589, 605], "set": [589, 658], "matplotlib": 589, "style": [589, 594, 656], "without": 589, "alpha": 589, "add": [589, 591], "argument": 589, "dig": 589, "investig": [589, 591], "pcolormesh": 589, "edgecolor": 589, "modifi": [589, 615], "default": 589, "solut": [589, 592], "sever": 591, "weather": 591, "wisconsin": 591, "outbreak": 591, "focus": 591, "southern": 591, "reproduc": 591, "event": 591, "road": 591, "interst": 591, "featur": [591, 593, 635], "avail": 591, "run": 591, "post": 592, "templat": 592, "problem": 592, "changelog": 593, "16": 593, "enhanc": 593, "made": 593, "bug": 593, "document": [593, 596], "improv": 593, "other": 593, "merg": 593, "contributor": [593, 594, 656], "releas": [593, 596], "0": 593, "mainten": 593, "upkeep": 593, "15": 593, "v1": 593, "14": 593, "6": 593, "5": 593, "4": 593, "13": 593, "12": 593, "7": 593, "11": 593, "8": 593, "deprec": 593, "10": 593, "9": 593, "picasso": 593, "": [594, 597, 656], "guid": [594, 597, 656, 657], "toolkit": [594, 645, 656], "link": [594, 656], "cite": [594, 645, 656], "resourc": [594, 656], "continu": 595, "integr": 595, "how": [596, 634, 635], "tag": 596, "prepar": 596, "note": 596, "trigger": 596, "pypi": 596, "upload": 596, "packag": 596, "forg": 596, "announc": 596, "open": 596, "forum": 596, "version": 597, "moment": [598, 602, 617], "exampl": [598, 602, 603, 607, 612, 631, 634, 640], "attenu": 599, "dealia": [600, 641], "doppler": 600, "region": 600, "base": 600, "algorithm": [600, 634, 635], "comput": [601, 606, 611, 630, 638, 639, 644, 654], "galleri": [602, 646], "input": [602, 603], "output": [602, 603], "xradar": [602, 640, 641, 642, 643], "aw": 604, "cloud": 604, "older": 605, "compar": 608, "two": [608, 610, 627], "singl": 609, "cartesian": [609, 610, 651], "choos": 613, "colormap": 613, "cross": [614, 629], "section": [614, 629], "colorbar": 615, "mute": 616, "multipl": [617, 622, 623], "ppi": [619, 620, 621, 629, 643], "cfradial": 619, "mdv": [620, 624, 625, 626], "cartopi": 621, "panel": [622, 623, 627, 628], "cf": [622, 623], "radial": [622, 623, 641], "contour": [624, 625], "line": [624, 625], "volum": 629, "column": 632, "abov": 632, "calcul": [633, 636, 637], "composit": 633, "convect": [634, 635], "stratiform": [634, 635], "classif": [634, 635, 636], "summari": [634, 635], "recommend": [634, 635], "best": [634, 635], "practic": [634, 635], "detect": 635, "part": 635, "warm": 635, "season": 635, "cool": 635, "hydrometeor": 636, "vad": 637, "profil": 637, "can": 645, "do": 645, "short": 645, "cours": 645, "depend": [645, 655, 658], "option": [645, 655, 658], "contribut": 645, "notebook": 646, "basic": 647, "ingest": 647, "netcdf": 647, "manipul": 648, "save": 648, "object": [648, 653], "dealias": 649, "mask": 652, "With": 652, "index": 653, "build": 655, "requir": 655, "obtain": 655, "latest": 655, "frequent": 655, "ask": 655, "question": 655, "user": 657, "anaconda": 658, "channel": 658, "ad": 658, "path": 658, "more": 658}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[126, "pyart-correct"]], "pyart.correct.GateFilter": [[127, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[128, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[129, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[130, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[131, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[132, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[133, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[134, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[135, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[136, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[137, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[138, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[139, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[140, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[141, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[142, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[143, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[144, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[145, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[146, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[147, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[148, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[149, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[150, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[151, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[152, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[153, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[154, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[155, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[156, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[157, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[158, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[159, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[160, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[161, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[162, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[163, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[164, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[165, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[166, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[167, "pyart-correct-phase-proc-lp-gf"]], "pyart.exceptions": [[168, "pyart-exceptions"]], "pyart.filters": [[169, "pyart-filters"]], "pyart.filters.GateFilter": [[170, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[171, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[172, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[173, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[174, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[175, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[176, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[177, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[178, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[179, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[180, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[181, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[182, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[183, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[184, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[185, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[186, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[187, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[188, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[189, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[190, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[191, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[192, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[193, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[194, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[195, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[196, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[197, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[198, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[199, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[200, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[201, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[202, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[203, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[204, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[205, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[206, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[207, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[208, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[209, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[210, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[211, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[212, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[213, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[214, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[215, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[216, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[217, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[218, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[219, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[220, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[221, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[222, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[223, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[224, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[225, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[226, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[227, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[228, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[229, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[230, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[231, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[232, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[233, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[234, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[235, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[236, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[237, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[238, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[239, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[240, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[241, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[242, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[243, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[244, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[245, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[246, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[247, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[248, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[249, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[250, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[251, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[252, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[253, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[254, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[255, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[256, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[257, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[258, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[259, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[260, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[261, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[262, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[263, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[264, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[265, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[266, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[267, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[268, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[269, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[270, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[271, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[272, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[273, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[274, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[275, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[276, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[277, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[278, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[279, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[280, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[281, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[282, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[283, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[284, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[285, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[286, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[287, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[288, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[289, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[290, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[291, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[292, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[293, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[294, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[295, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[296, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[297, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[298, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[299, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[300, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[301, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[302, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[303, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[304, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[305, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[306, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[307, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[308, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[309, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[310, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[311, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[312, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[313, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[314, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[315, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[316, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[317, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[318, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[319, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[320, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[321, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[322, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[323, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[324, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[325, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[326, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[327, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[328, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[329, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[330, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[331, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[332, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[333, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[334, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[335, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[336, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[337, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[338, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[339, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[340, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[341, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[342, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[343, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[344, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[345, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[346, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[347, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[348, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[349, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[350, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[351, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[352, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[353, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[354, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[355, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[356, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[357, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[358, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[359, "pyart-io"]], "pyart.io.prepare_for_read": [[360, "pyart-io-prepare-for-read"]], "pyart.io.read": [[361, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[362, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[363, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[364, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[365, "pyart-io-read-chl"]], "pyart.io.read_grid": [[366, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[367, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[368, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[369, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[370, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[371, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[372, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[373, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[374, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[375, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[376, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[377, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[378, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[379, "pyart-io-write-uf"]], "pyart.lazydict": [[380, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[381, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[382, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[383, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[384, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[385, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[386, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[387, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[388, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[389, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[390, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[391, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[392, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[393, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[394, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[395, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[396, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[397, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[398, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[399, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[400, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[401, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[402, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[403, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[404, "pyart-map"]], "pyart.map.GateMapper": [[405, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[406, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[407, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[408, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[409, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[410, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[411, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[412, "pyart-map-grid-from-radars"]], "pyart.map.map_gates_to_grid": [[413, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[414, "pyart-map-map-to-grid"]], "pyart.retrieve": [[415, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[416, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[417, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[418, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[419, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[420, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_l": [[421, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[422, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_snr": [[423, "pyart-retrieve-compute-snr"]], "pyart.retrieve.conv_strat_yuter": [[424, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.dealias_spectra": [[425, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[426, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[427, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[428, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[429, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[430, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[431, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[432, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[433, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[434, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[435, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[436, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[437, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[438, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_maesaka": [[439, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[440, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[441, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[442, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[443, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[444, "pyart-retrieve-spectra-moments"]], "Parameter": [[444, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[445, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[446, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[447, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[448, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[449, "pyart-testing"]], "pyart.testing.Grid": [[450, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[451, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[452, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[453, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[454, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[455, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[456, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[457, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[458, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[459, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[460, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[461, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[462, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[463, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[464, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[465, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[466, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[467, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[468, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[469, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[470, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[471, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[472, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[473, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[474, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[475, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[476, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[477, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[478, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[479, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[480, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[481, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[482, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[483, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[484, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[485, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[486, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[487, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[488, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[489, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[490, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[491, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[492, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[493, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[494, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[495, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[496, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[497, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[498, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[499, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[500, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[501, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[502, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[503, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[504, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[505, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[506, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[507, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[508, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[509, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[510, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[511, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[512, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[513, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[514, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[515, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[516, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[517, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[518, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[519, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[520, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[521, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[522, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[523, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[524, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[525, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[526, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[527, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[528, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[529, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[530, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[531, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[532, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[533, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[534, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[535, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[536, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[537, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[538, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[539, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[540, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[541, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_normal_storm": [[542, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[543, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[544, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[545, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[546, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[547, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[548, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[549, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[550, "pyart-util"]], "pyart.util.angular_mean": [[551, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[552, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[553, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[554, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[555, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[556, "pyart-util-column-vertical-profile"]], "pyart.util.cross_section_ppi": [[557, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[558, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[559, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[560, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[561, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[562, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[563, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[564, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[565, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[566, "pyart-util-for-azimuth"]], "Assumptions": [[566, "assumptions"], [578, "assumptions"]], "pyart.util.get_column_rays": [[567, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[568, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[569, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[570, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[571, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[572, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[573, "pyart-util-join-radar"]], "pyart.util.mean_of_two_angles": [[574, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[575, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[576, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[577, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[578, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[579, "pyart-util-subset-radar"]], "pyart.util.texture": [[580, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[581, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[582, "pyart-util-to-vpt"]], "API Reference Manual": [[583, "api-reference-manual"]], "Blog": [[584, "blog"]], "Blending Observations from TRACER using Py-ART": [[585, "blending-observations-from-tracer-using-py-art"]], "Imports": [[585, "imports"], [587, "imports"], [588, "imports"], [589, "imports"], [591, "imports"]], "GOES data access": [[585, "goes-data-access"]], "CSAPR data access": [[585, "csapr-data-access"]], "Load LMA Flash data": [[585, "load-lma-flash-data"]], "June 17th case": [[585, "june-17th-case"]], "June 17 RHI": [[585, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[586, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[586, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[586, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[586, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[586, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[586, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[586, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[586, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[586, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[586, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[586, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[586, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[587, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[587, "motivation"], [591, "motivation"], [592, "motivation"]], "NEXRAD Data Access - fsspec": [[587, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[587, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[587, "read-in-a-file"]], "Visualize the Dataset": [[587, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[587, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[587, "configure-the-search"]], "Search and Download the Data": [[587, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[587, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[587, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[587, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[587, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[587, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[587, "create-an-animation-of-the-images"]], "View the Final Animation": [[587, "view-the-final-animation"]], "Conclusion": [[587, "conclusion"], [589, "conclusion"], [591, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[588, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[588, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[588, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[588, "plot-using-pyart"]], "Load in the data using pyart": [[588, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[588, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[588, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[588, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[588, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[588, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[588, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[588, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[588, "create-our-holoviews-plots"]], "View the Final Visualization": [[588, "view-the-final-visualization"]], "Try Using Rasterize": [[588, "try-using-rasterize"]], "Key Takeaways": [[588, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[589, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[589, "the-data"]], "Data Access": [[589, "data-access"]], "Recreate the Issue Using PyART": [[589, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[589, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[589, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[589, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[589, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[589, "add-in-the-alpha-argument"]], "Dig into the Issue": [[589, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[589, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[589, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[589, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[589, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[589, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[589, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[589, "fixing-the-issue-in-pyart"]], "New Docs": [[590, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[591, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[591, "the-outbreak"]], "Focusing on Southern Wisconsin": [[591, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[591, "reproducing-event-images"]], "Visualizing the Event": [[591, "visualizing-the-event"]], "Access the Data": [[591, "access-the-data"]], "Download the Road Data": [[591, "download-the-road-data"]], "Add the Interstate Date as a feature": [[591, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[591, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[591, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[591, "run-our-plotting-functions"]], "Blog Post Template": [[592, "blog-post-template"]], "The Problem": [[592, "the-problem"]], "The Solution": [[592, "the-solution"]], "Conclusions": [[592, "conclusions"]], "Changelog": [[593, "changelog"]], "Py-ART 1.16.1": [[593, "py-art-1-16-1"]], "Enhancements made": [[593, "enhancements-made"], [593, "id1"], [593, "id16"], [593, "id22"], [593, "id33"], [593, "id36"], [593, "id41"], [593, "id46"], [593, "id49"], [593, "id53"], [593, "id66"], [593, "id76"], [593, "id86"], [593, "id92"], [593, "id98"], [593, "id106"], [593, "id119"], [593, "id123"], [593, "id127"], [593, "id133"], [593, "id139"], [593, "id148"], [593, "id155"], [593, "id162"], [593, "id168"], [593, "id175"], [593, "id181"], [593, "id187"]], "Bugs fixed": [[593, "bugs-fixed"], [593, "id2"], [593, "id9"], [593, "id13"], [593, "id17"], [593, "id23"], [593, "id28"], [593, "id37"], [593, "id42"], [593, "id47"], [593, "id54"], [593, "id59"], [593, "id63"], [593, "id67"], [593, "id72"], [593, "id77"], [593, "id82"], [593, "id87"], [593, "id93"], [593, "id99"], [593, "id103"], [593, "id107"], [593, "id111"], [593, "id116"], [593, "id120"], [593, "id124"], [593, "id128"], [593, "id134"], [593, "id140"], [593, "id144"], [593, "id149"], [593, "id156"], [593, "id163"], [593, "id169"], [593, "id176"], [593, "id182"]], "Documentation improvements": [[593, "documentation-improvements"], [593, "id3"], [593, "id30"], [593, "id38"], [593, "id43"], [593, "id56"], [593, "id69"], [593, "id79"], [593, "id89"], [593, "id95"], [593, "id113"], [593, "id125"], [593, "id130"], [593, "id136"], [593, "id141"], [593, "id145"], [593, "id151"], [593, "id158"], [593, "id165"], [593, "id171"], [593, "id178"], [593, "id184"]], "Other merged PRs": [[593, "other-merged-prs"], [593, "id4"], [593, "id7"], [593, "id11"], [593, "id14"], [593, "id19"], [593, "id24"], [593, "id31"], [593, "id34"], [593, "id39"], [593, "id44"], [593, "id51"], [593, "id57"], [593, "id61"], [593, "id64"], [593, "id70"], [593, "id74"], [593, "id80"], [593, "id84"], [593, "id90"], [593, "id96"], [593, "id101"], [593, "id109"], [593, "id114"], [593, "id121"], [593, "id131"], [593, "id137"], [593, "id142"], [593, "id146"], [593, "id153"], [593, "id160"], [593, "id166"], [593, "id173"], [593, "id179"], [593, "id185"]], "Contributors to this release": [[593, "contributors-to-this-release"], [593, "id5"], [593, "id8"], [593, "id12"], [593, "id15"], [593, "id20"], [593, "id21"], [593, "id25"], [593, "id27"], [593, "id32"], [593, "id35"], [593, "id40"], [593, "id45"], [593, "id48"], [593, "id52"], [593, "id58"], [593, "id62"], [593, "id65"], [593, "id71"], [593, "id75"], [593, "id81"], [593, "id85"], [593, "id91"], [593, "id97"], [593, "id102"], [593, "id105"], [593, "id110"], [593, "id115"], [593, "id118"], [593, "id122"], [593, "id126"], [593, "id132"], [593, "id138"], [593, "id143"], [593, "id147"], [593, "id154"], [593, "id161"], [593, "id167"], [593, "id174"], [593, "id180"], [593, "id186"], [593, "id189"]], "Py-ART 1.16.0": [[593, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[593, "maintenance-and-upkeep-improvements"], [593, "id6"], [593, "id10"], [593, "id18"], [593, "id26"], [593, "id29"], [593, "id50"], [593, "id55"], [593, "id60"], [593, "id68"], [593, "id73"], [593, "id78"], [593, "id83"], [593, "id88"], [593, "id94"], [593, "id100"], [593, "id104"], [593, "id108"], [593, "id112"], [593, "id117"], [593, "id129"], [593, "id135"], [593, "id150"], [593, "id157"], [593, "id164"], [593, "id170"], [593, "id177"], [593, "id183"], [593, "id188"]], "Py-ART 1.15.2": [[593, "py-art-1-15-2"]], "Py-ART 1.15.1": [[593, "py-art-1-15-1"]], "Py-ART v1.15.0": [[593, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[593, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[593, "py-art-v1-14-5"]], "Merged PRs": [[593, "merged-prs"]], "Py-ART v1.14.4": [[593, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[593, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[593, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[593, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[593, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[593, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[593, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[593, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[593, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[593, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[593, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[593, "py-art-v1-12-5"]], "PyART v1.12.4": [[593, "pyart-v1-12-4"]], "PyART v1.12.2": [[593, "pyart-v1-12-2"]], "PyART v1.12.0": [[593, "pyart-v1-12-0"]], "PyART v1.11.8": [[593, "pyart-v1-11-8"]], "Deprecated features": [[593, "deprecated-features"], [593, "id152"], [593, "id159"], [593, "id172"]], "PyART v1.11.6": [[593, "pyart-v1-11-6"]], "PyART v1.11.5": [[593, "pyart-v1-11-5"]], "PyART v1.11.3": [[593, "pyart-v1-11-3"]], "PyART v1.11.2": [[593, "pyart-v1-11-2"]], "PyART v1.11.1": [[593, "pyart-v1-11-1"]], "PyART v1.11.0": [[593, "pyart-v1-11-0"]], "PyART v1.10.4": [[593, "pyart-v1-10-4"]], "PyART v1.10.3": [[593, "pyart-v1-10-3"]], "PyART v1.10.2": [[593, "pyart-v1-10-2"]], "PyART v1.10.1": [[593, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[593, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[593, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[593, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[593, "pyart-v1-8-0"]], "PyART v1.7.0": [[593, "pyart-v1-7-0"]], "PyART v1.6.0": [[593, "pyart-v1-6-0"]], "PyART v1.5.0": [[593, "pyart-v1-5-0"]], "PyART v1.4.0": [[593, "pyart-v1-4-0"]], "PyART v1.3.0": [[593, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[594, "contributor-s-guide"], [656, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[594, "the-python-arm-radar-toolkit-py-art"], [656, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[594, "important-links"], [656, "important-links"]], "Citing": [[594, "citing"], [656, "citing"]], "Install": [[594, "install"], [645, "install"], [656, "install"]], "Resources": [[594, "resources"], [656, "resources"]], "Code Style": [[594, "code-style"], [656, "code-style"]], "Python File Setup": [[594, "python-file-setup"], [656, "python-file-setup"]], "Testing": [[594, "testing"], [656, "testing"]], "GitHub": [[594, "github"], [656, "github"]], "Py-ART Continuous Integration Setup": [[595, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[596, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[596, "make-the-tagged-git-release"]], "Prepare the release notes": [[596, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[596, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[596, "documentation"]], "Create conda packages on conda-forge": [[596, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[596, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[597, "developer-s-guide"]], "Versions": [[597, "versions"]], "Moment correction examples": [[598, "moment-correction-examples"], [602, "moment-correction-examples"]], "Correct reflectivity attenuation": [[599, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[600, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[601, "computation-times"], [606, "computation-times"], [611, "computation-times"], [630, "computation-times"], [638, "computation-times"], [639, "computation-times"], [644, "computation-times"], [654, "computation-times"]], "Example Gallery": [[602, "example-gallery"]], "Input/Output Examples": [[602, "input-output-examples"], [603, "input-output-examples"]], "Mapping examples": [[602, "mapping-examples"], [607, "mapping-examples"]], "Plotting examples": [[602, "plotting-examples"], [612, "plotting-examples"]], "Retrieval Examples": [[602, "retrieval-examples"], [631, "retrieval-examples"]], "Xradar Examples": [[602, "xradar-examples"], [640, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[604, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[604, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[604, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[605, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[605, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[608, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[609, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[610, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[613, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[614, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[615, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[616, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[617, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[618, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[619, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[620, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[621, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[622, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [623, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[624, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [625, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[626, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[627, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[628, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[629, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[632, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[633, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[634, "convective-stratiform-classification"]], "How the algorithm works": [[634, "how-the-algorithm-works"], [635, "how-the-algorithm-works"]], "Examples": [[634, "examples"]], "Summary of recommendations and best practices": [[634, "summary-of-recommendations-and-best-practices"], [635, "summary-of-recommendations-and-best-practices"]], "References": [[634, "references"], [635, "references"]], "Feature Detection classification": [[635, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[635, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[635, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[636, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[637, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[641, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[642, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[643, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[645, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[645, "what-is-py-art"]], "Citing Py-ART": [[645, "citing-py-art"]], "What can Py-ART do?": [[645, "what-can-py-art-do"]], "Short Courses": [[645, "short-courses"]], "Dependencies": [[645, "dependencies"]], "Optional Dependences": [[645, "optional-dependences"]], "Getting help": [[645, "getting-help"]], "Contributing": [[645, "contributing"]], "Notebook Gallery": [[646, "notebook-gallery"]], "Notebooks": [[646, null]], "Creating a basic ingest of a NetCDF file": [[647, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[648, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[649, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[651, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[652, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[653, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[655, "building-and-installing-py-art"]], "Required Dependencies": [[655, "required-dependencies"]], "Optional Dependencies": [[655, "optional-dependencies"]], "Obtaining the latest source": [[655, "obtaining-the-latest-source"]], "Installing from Source": [[655, "installing-from-source"]], "Frequently asked questions": [[655, "frequently-asked-questions"]], "User Guide": [[657, "user-guide"]], "Setting up an Environment": [[658, "setting-up-an-environment"]], "Anaconda": [[658, "anaconda"]], "Setting a Channel": [[658, "setting-a-channel"]], "Creating an Environment": [[658, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[658, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[658, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [126, "module-pyart.correct"], [168, "module-pyart.exceptions"], [169, "module-pyart.filters"], [202, "module-pyart.graph"], [359, "module-pyart.io"], [380, "module-pyart.lazydict"], [404, "module-pyart.map"], [415, "module-pyart.retrieve"], [449, "module-pyart.testing"], [550, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[126, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[127, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[128, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[141, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[142, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[144, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[145, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[155, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[156, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[157, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[158, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[159, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[160, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[161, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[162, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[163, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[164, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[165, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[166, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[167, "pyart.correct.phase_proc_lp_gf"]], "pyart.exceptions": [[168, "module-pyart.exceptions"]], "pyart.filters": [[169, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[170, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[184, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[185, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[201, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[202, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[203, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[204, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[205, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[210, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[211, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[221, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[231, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[232, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[233, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[234, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[235, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[249, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[250, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[251, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[252, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[253, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[254, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[255, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[256, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[257, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[258, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[263, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[264, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[265, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[266, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[267, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[268, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[270, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[271, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[280, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[285, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[290, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[291, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[292, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[293, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[294, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[295, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[296, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[297, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[299, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[300, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[301, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[309, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[310, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[323, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[324, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[325, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[326, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[327, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[328, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[329, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[330, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[332, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[333, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[334, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[342, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[356, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[357, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[358, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[359, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[360, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[361, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[362, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[363, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[364, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[365, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[366, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[367, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[368, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[369, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[370, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[371, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[372, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[373, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[374, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[375, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[376, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[377, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[378, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[379, "pyart.io.write_uf"]], "pyart.lazydict": [[380, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[381, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[382, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[383, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[384, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[385, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[386, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[394, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[395, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[396, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[397, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[398, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[399, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[400, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[401, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[402, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[403, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[404, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[405, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[406, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[407, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[408, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[409, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[410, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[411, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[412, "pyart.map.grid_from_radars"]], "map_gates_to_grid() (in module pyart.map)": [[413, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[414, "pyart.map.map_to_grid"]], "pyart.retrieve": [[415, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[416, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[417, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[418, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[419, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[420, "pyart.retrieve.compute_cdr"]], "compute_l() (in module pyart.retrieve)": [[421, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[422, "pyart.retrieve.compute_noisedBZ"]], "compute_snr() (in module pyart.retrieve)": [[423, "pyart.retrieve.compute_snr"]], "conv_strat_yuter() (in module pyart.retrieve)": [[424, "pyart.retrieve.conv_strat_yuter"]], "dealias_spectra() (in module pyart.retrieve)": [[425, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[426, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[427, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[428, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[429, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[430, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[431, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[432, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[433, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[434, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[435, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[436, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[437, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[438, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[439, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[440, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[441, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[442, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[443, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[444, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[445, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[446, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[447, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[448, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[449, "module-pyart.testing"]], "grid (class in pyart.testing)": [[450, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[451, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[452, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[453, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[454, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[455, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[456, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[457, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[458, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[459, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[460, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[461, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[462, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[463, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[464, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[465, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[466, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[467, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[468, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[469, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[470, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[471, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[472, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[473, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[474, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[475, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[476, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[477, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[478, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[479, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[480, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[481, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[482, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[483, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[484, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[491, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[492, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[493, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[494, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[495, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[496, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[497, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[498, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[499, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[500, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[501, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[502, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[503, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[504, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[505, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[506, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[507, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[508, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[509, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[510, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[511, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[512, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[513, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[514, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[515, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[516, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[517, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[518, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[519, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[520, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[521, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[522, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[523, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[524, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[525, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[526, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[527, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[528, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[529, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[530, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[531, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[532, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[533, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[534, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[535, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[536, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[537, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[538, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[539, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[540, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[541, "pyart.testing.make_empty_spectra_radar"]], "make_normal_storm() (in module pyart.testing)": [[542, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[543, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[544, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[545, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[546, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[547, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[548, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[549, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[550, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[551, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[552, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[553, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[554, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[555, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[556, "pyart.util.column_vertical_profile"]], "cross_section_ppi() (in module pyart.util)": [[557, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[558, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[559, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[560, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[561, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[562, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[563, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[564, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[565, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[566, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[567, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[568, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[569, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[570, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[571, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[572, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[573, "pyart.util.join_radar"]], "mean_of_two_angles() (in module pyart.util)": [[574, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[575, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[576, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[577, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[578, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[579, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[580, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[581, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[582, "pyart.util.to_vpt"]]}})