Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_mmcr", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_above_toa", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_last_gates", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calc_cloud_mask", "API/generated/pyart.correct.calc_noise_floor", "API/generated/pyart.correct.calc_zdr_offset", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.cloud_threshold", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.range_correction", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_above_toa", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_last_gates", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_maxcappi", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.graph.plot_maxcappi", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.create_cappi", "API/generated/pyart.retrieve.create_cfad", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.storm_relative_velocity", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_rhi_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/2024/animated-gifs-with-pyart", "blog_posts/2024/epcape-blog-post", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_cloud_mask", "examples/correct/plot_dealias", "examples/correct/plot_zdr_check", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_nexrad_data_google_cloud", "examples/io/plot_older_nexrad_data_aws", "examples/io/plot_read_cfradial2", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_grid_single_sweep_ppi", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_cappi", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_corner_reflector", "examples/plotting/plot_cross_section", "examples/plotting/plot_max_cappi", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_cfad", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_hydrometeor_class_x_band", "examples/retrieve/plot_qpe", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/pyart_2_0", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_mmcr.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_above_toa.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_last_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calc_cloud_mask.rst", "API/generated/pyart.correct.calc_noise_floor.rst", "API/generated/pyart.correct.calc_zdr_offset.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.cloud_threshold.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.range_correction.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_above_toa.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_last_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_maxcappi.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.graph.plot_maxcappi.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.create_cappi.rst", "API/generated/pyart.retrieve.create_cfad.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.storm_relative_velocity.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_rhi_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/2024/animated-gifs-with-pyart.ipynb", "blog_posts/2024/epcape-blog-post.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_cloud_mask.rst", "examples/correct/plot_dealias.rst", "examples/correct/plot_zdr_check.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_nexrad_data_google_cloud.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/plot_read_cfradial2.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_grid_single_sweep_ppi.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_cappi.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_corner_reflector.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_max_cappi.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_cfad.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_hydrometeor_class_x_band.rst", "examples/retrieve/plot_qpe.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/pyart_2_0.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_mmcr", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_above_toa", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_last_gates", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calc_cloud_mask", "pyart.correct.calc_noise_floor", "pyart.correct.calc_zdr_offset", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.cloud_threshold", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.range_correction", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_above_toa", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_last_gates", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplay.plot_maxcappi", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.graph.plot_maxcappi", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vp", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.create_cappi", "pyart.retrieve.create_cfad", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.storm_relative_velocity", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_rhi_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.compute_directional_stats", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART", "Investigating ARM Scanning Cloud Radar Data from EPCAPE", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Calculating and Plotting a Cloud Mask", "Dealias doppler velocities using the Region Based Algorithm", "ZDR Bias Calculation", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading NEXRAD Data from Google Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Read and Plot Cfradial2/FM301 data Using Xradar and Py-ART", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single PPI sweep to a Cartesian grid using 2D weighting", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Compare PPI vs CAPPI", "Choose a Colormap for your Plot", "Plot a Corner Reflector", "Plot a Cross Section from a Grid", "Plot Max-CAPPI", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Creating a CFAD diagram", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Hydrometeor Classification with Custom Frequency Settings", "Radar-Based Quantitative Precipitation Estimation (QPE)", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Py-ART 2.0", "Setting up an Environment"], "terms": {"stream": [0, 63, 377, 504], "none": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 22, 25, 30, 32, 42, 46, 49, 57, 58, 75, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 209, 210, 211, 212, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397, 405, 408, 409, 415, 418, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 485, 487, 490, 498, 499, 516, 585, 586, 597, 606, 608, 616, 618, 620, 621, 622, 624, 625, 638, 654, 663, 674, 675, 678, 695, 698], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 223, 225, 226, 227, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 325, 326, 327, 329, 330, 337, 358, 359, 360, 362, 363, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 398, 403, 407, 408, 412, 413, 414, 415, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 616, 617, 618, 620, 624, 625, 627, 630, 631, 632, 633, 635, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 687, 689, 690, 691, 693, 694, 695, 698, 701], "print": [0, 63, 162, 174, 175, 244, 261, 386, 463, 504, 614, 616, 617, 621, 622, 625, 630, 631, 632, 633, 637, 638, 639, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 674, 675, 677, 678, 690, 694, 695, 698], "out": [0, 63, 161, 171, 175, 209, 212, 388, 389, 390, 391, 392, 434, 458, 504, 616, 617, 618, 620, 621, 622, 624, 625, 631, 645, 646, 652, 653, 664, 673, 676, 687, 693, 697, 698, 699], "version": [0, 13, 32, 213, 420, 462, 475, 577, 614, 615, 623, 624, 625, 627, 687, 695, 697, 698, 700, 701], "statu": [0, 615, 625, 698], "inform": [0, 25, 32, 46, 63, 75, 144, 156, 162, 168, 174, 175, 194, 206, 228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 377, 378, 386, 389, 462, 463, 469, 475, 487, 504, 516, 614, 618, 622, 623, 624, 625, 628, 639, 677, 687, 698], "debug": [0, 162, 168, 174, 175, 244, 261, 386, 463, 624], "thi": [0, 2, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 25, 30, 32, 34, 46, 48, 49, 52, 53, 55, 57, 58, 59, 75, 123, 125, 126, 134, 139, 144, 145, 146, 159, 161, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 175, 184, 189, 194, 195, 196, 209, 210, 211, 212, 227, 253, 288, 304, 317, 329, 337, 350, 362, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 405, 407, 415, 418, 420, 426, 427, 428, 429, 433, 434, 436, 439, 440, 442, 443, 444, 445, 446, 448, 457, 458, 462, 463, 464, 465, 469, 470, 472, 475, 477, 487, 489, 490, 493, 494, 496, 498, 499, 500, 516, 569, 582, 583, 592, 593, 597, 600, 611, 612, 613, 614, 616, 617, 618, 619, 620, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 637, 638, 639, 643, 644, 645, 649, 650, 651, 652, 653, 654, 655, 658, 671, 672, 674, 675, 677, 678, 683, 687, 689, 690, 691, 693, 694, 695, 697, 698, 700, 701], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 24, 25, 26, 27, 30, 41, 46, 63, 75, 162, 163, 164, 168, 169, 170, 173, 174, 175, 209, 210, 211, 212, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 432, 446, 457, 462, 463, 464, 465, 466, 469, 470, 471, 474, 484, 487, 504, 516, 562, 606, 614, 615, 617, 618, 620, 622, 624, 627, 630, 631, 634, 635, 637, 638, 639, 641, 644, 645, 647, 648, 649, 650, 653, 655, 657, 660, 666, 667, 668, 669, 673, 674, 675, 676, 678, 679, 680, 681, 684, 685, 686, 687, 688, 694, 695, 696, 697, 701], "can": [0, 13, 17, 30, 46, 55, 58, 75, 123, 125, 126, 129, 144, 156, 163, 164, 168, 171, 173, 179, 194, 206, 209, 210, 211, 212, 227, 288, 317, 350, 371, 373, 380, 381, 383, 386, 390, 391, 392, 428, 429, 436, 439, 440, 442, 443, 444, 448, 457, 462, 463, 464, 465, 467, 473, 487, 496, 499, 516, 602, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 627, 631, 637, 638, 639, 643, 650, 671, 672, 674, 675, 677, 678, 683, 689, 690, 691, 693, 694, 695, 697, 698, 700, 701], "run": [0, 240, 446, 457, 474, 592, 615, 617, 621, 624, 625, 626, 627, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 687, 697, 698, 701], "script": [0, 30, 622, 624, 625, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 698], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 24, 25, 26, 27, 30, 32, 35, 40, 43, 46, 48, 51, 55, 56, 57, 58, 75, 120, 121, 122, 124, 127, 129, 134, 136, 144, 145, 151, 156, 161, 162, 163, 164, 165, 167, 168, 169, 170, 173, 174, 175, 178, 179, 184, 186, 194, 195, 201, 206, 209, 210, 211, 212, 214, 228, 229, 230, 235, 238, 239, 240, 241, 244, 252, 253, 255, 257, 259, 261, 267, 268, 270, 272, 274, 275, 289, 290, 291, 296, 299, 300, 301, 304, 318, 319, 320, 326, 328, 329, 332, 333, 334, 337, 351, 352, 353, 359, 361, 362, 365, 366, 367, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 403, 405, 408, 415, 417, 420, 422, 423, 424, 428, 429, 432, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 469, 471, 472, 473, 475, 478, 483, 487, 489, 492, 496, 497, 498, 499, 516, 569, 582, 583, 585, 586, 592, 593, 594, 595, 596, 597, 598, 599, 600, 606, 615, 617, 618, 620, 624, 625, 627, 631, 632, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 657, 660, 666, 667, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 689, 693, 694, 695, 696, 698, 700, 701], "directori": [0, 30, 371, 485, 612, 614, 615, 621, 622, 623, 624, 625, 637, 638, 697, 698], "report": [0, 1, 304, 337, 385, 473, 620, 624, 687], "dependeci": 0, "befor": [0, 32, 57, 168, 172, 175, 418, 436, 439, 440, 442, 444, 446, 457, 472, 475, 498, 616, 617, 618, 625, 643, 674, 687, 691, 695, 698], "build": [0, 123, 125, 126, 129, 134, 136, 144, 151, 156, 179, 184, 186, 194, 201, 206, 392, 616, 620, 624, 625, 627, 675, 687, 698, 699], "us": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 15, 18, 20, 25, 30, 32, 34, 46, 48, 55, 57, 58, 75, 123, 124, 125, 126, 127, 129, 139, 144, 156, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 179, 189, 194, 206, 209, 210, 211, 212, 214, 216, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 261, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 308, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334, 336, 337, 339, 341, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 364, 365, 366, 367, 369, 370, 371, 372, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 418, 425, 426, 427, 428, 429, 431, 432, 434, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 487, 489, 496, 498, 499, 516, 569, 577, 582, 583, 584, 585, 586, 592, 593, 600, 602, 606, 608, 609, 610, 611, 615, 619, 620, 623, 624, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 641, 642, 647, 648, 649, 650, 652, 653, 655, 658, 659, 661, 662, 663, 664, 665, 669, 671, 672, 674, 675, 677, 678, 682, 686, 687, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701], "python": [0, 30, 390, 614, 616, 617, 618, 620, 621, 622, 623, 624, 627, 630, 631, 632, 633, 635, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 689, 690, 691, 693, 694, 695, 697, 701], "py": [0, 1, 2, 8, 9, 13, 15, 17, 18, 19, 30, 31, 32, 46, 75, 123, 125, 126, 129, 159, 160, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 209, 210, 211, 212, 228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 304, 318, 320, 328, 329, 333, 334, 337, 351, 353, 361, 362, 366, 367, 371, 378, 379, 380, 381, 385, 387, 390, 417, 432, 433, 445, 446, 447, 457, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 475, 487, 516, 567, 577, 583, 595, 596, 606, 612, 617, 618, 620, 623, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 686, 688, 689, 690, 691, 693, 696, 699, 701], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 29, 30, 32, 33, 34, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 63, 75, 78, 120, 121, 122, 123, 124, 125, 126, 127, 129, 134, 136, 144, 151, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 184, 186, 194, 201, 206, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 484, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 504, 516, 519, 561, 562, 563, 564, 565, 566, 567, 578, 579, 580, 581, 582, 583, 584, 585, 586, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 614, 616, 617, 622, 624, 625, 667, 674, 675, 677, 678, 690, 691, 693, 695, 697, 698], "like": [0, 2, 8, 9, 13, 15, 25, 42, 43, 63, 123, 124, 126, 127, 169, 170, 371, 373, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 399, 400, 410, 411, 434, 504, 572, 573, 574, 575, 576, 578, 579, 580, 581, 593, 598, 616, 617, 618, 621, 622, 623, 624, 625, 637, 638, 639, 643, 671, 687, 689, 691, 693, 698], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 32, 33, 40, 41, 47, 48, 49, 51, 52, 53, 55, 63, 72, 100, 118, 129, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 209, 210, 211, 212, 214, 229, 244, 252, 255, 261, 268, 275, 290, 304, 319, 329, 337, 352, 371, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 399, 400, 403, 406, 410, 411, 416, 418, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 467, 468, 470, 471, 472, 473, 474, 475, 476, 483, 484, 488, 489, 490, 492, 493, 494, 496, 504, 513, 541, 559, 563, 564, 565, 566, 569, 583, 592, 593, 595, 596, 597, 600, 601, 605, 608, 610, 611, 614, 615, 617, 618, 620, 621, 624, 625, 631, 637, 643, 649, 651, 653, 654, 655, 659, 660, 661, 662, 663, 664, 665, 666, 667, 672, 674, 675, 676, 677, 678, 687, 688, 689, 693, 694, 698], "sy": [0, 371, 447, 649, 653, 678], "stdout": [0, 63, 504], "descript": [1, 17, 19, 31, 128, 177, 178, 213, 372, 393, 417, 430, 474, 577, 606, 618, 625, 627, 678, 687, 698], "addit": [1, 2, 8, 9, 13, 15, 20, 168, 169, 170, 172, 227, 228, 235, 239, 240, 241, 253, 255, 256, 257, 258, 259, 270, 271, 272, 273, 274, 288, 289, 296, 300, 301, 317, 318, 325, 326, 327, 328, 329, 330, 333, 334, 350, 351, 358, 359, 360, 361, 362, 363, 366, 367, 370, 371, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 418, 425, 426, 427, 429, 446, 457, 597, 614, 616, 617, 621, 624, 627, 635, 637, 670, 674, 675, 687], "class": [1, 19, 20, 31, 32, 42, 46, 75, 128, 129, 178, 179, 213, 214, 244, 255, 261, 275, 304, 329, 337, 393, 394, 407, 417, 418, 419, 421, 428, 462, 474, 475, 485, 487, 516, 612, 616, 617, 618, 624, 625, 687, 693, 694, 698], "function": [1, 4, 5, 6, 7, 16, 17, 19, 30, 31, 57, 128, 159, 161, 164, 172, 173, 178, 209, 210, 211, 212, 213, 227, 228, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 288, 289, 296, 300, 301, 304, 317, 318, 328, 333, 334, 337, 350, 351, 361, 366, 367, 370, 371, 372, 374, 377, 380, 381, 387, 390, 417, 418, 422, 423, 424, 426, 427, 428, 429, 430, 434, 440, 445, 446, 448, 457, 462, 463, 465, 470, 472, 474, 498, 577, 583, 596, 597, 600, 605, 606, 611, 612, 617, 618, 621, 622, 624, 625, 631, 650, 671, 672, 674, 675, 677, 678, 683, 687, 691, 693, 695, 697, 698, 700], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 22, 129, 145, 146, 179, 195, 196, 228, 239, 289, 300, 318, 333, 351, 366, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 614, 620, 624, 630, 631, 632, 633, 635, 636, 641, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 658, 660, 663, 664, 666, 667, 668, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 687, 689, 690, 691, 693, 694, 695, 696, 700], "write": [1, 16, 372, 388, 389, 390, 391, 392, 474, 485, 623, 624, 635, 636, 690], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 25, 31, 32, 33, 46, 47, 48, 51, 52, 53, 55, 56, 57, 58, 59, 68, 69, 71, 75, 96, 97, 99, 134, 144, 156, 159, 160, 161, 165, 166, 167, 168, 169, 170, 176, 184, 194, 206, 214, 228, 230, 235, 238, 239, 240, 241, 244, 253, 255, 257, 259, 261, 270, 272, 274, 275, 289, 291, 296, 299, 300, 301, 304, 318, 320, 328, 329, 332, 333, 334, 337, 351, 353, 361, 362, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 417, 418, 425, 426, 427, 429, 431, 434, 436, 439, 440, 442, 443, 444, 445, 447, 448, 449, 452, 457, 458, 462, 463, 464, 465, 467, 468, 469, 470, 473, 475, 476, 487, 488, 489, 492, 493, 494, 496, 497, 498, 499, 500, 509, 510, 512, 516, 537, 538, 540, 562, 567, 569, 584, 592, 597, 608, 611, 624, 625, 630, 631, 632, 633, 635, 636, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 660, 661, 662, 663, 664, 666, 668, 670, 671, 672, 674, 675, 677, 678, 679, 682, 683, 685, 686, 687, 688, 689, 690, 691, 695, 696, 698, 700], "number": [1, 6, 30, 32, 46, 52, 53, 55, 56, 57, 58, 59, 75, 139, 162, 163, 164, 165, 168, 169, 171, 172, 174, 175, 189, 227, 231, 235, 236, 238, 239, 240, 241, 253, 288, 292, 296, 297, 299, 300, 301, 317, 321, 328, 329, 330, 332, 333, 334, 350, 354, 361, 362, 363, 365, 366, 367, 372, 377, 384, 390, 391, 425, 428, 429, 436, 438, 439, 440, 442, 448, 461, 463, 465, 475, 487, 493, 494, 496, 497, 498, 499, 500, 516, 563, 564, 565, 566, 567, 583, 584, 592, 593, 611, 614, 617, 618, 620, 625, 627, 628, 650, 654, 671, 687, 695, 698], "format": [1, 13, 14, 40, 41, 46, 75, 216, 218, 228, 230, 235, 238, 239, 240, 241, 277, 279, 289, 291, 296, 299, 300, 301, 306, 308, 318, 320, 328, 329, 332, 333, 334, 339, 341, 351, 353, 361, 362, 365, 366, 367, 371, 372, 374, 383, 385, 387, 388, 389, 391, 483, 484, 487, 516, 614, 616, 617, 618, 621, 622, 624, 625, 627, 633, 664, 687, 689, 698], "These": [1, 30, 129, 168, 179, 267, 390, 429, 616, 622, 625, 637, 650, 674, 687, 694, 697, 698, 700], "auxiliari": 1, "input": [1, 174, 175, 390, 426, 427, 457, 461, 462, 465, 592, 597, 614, 616, 624, 674, 675, 694], "output": [1, 14, 63, 167, 390, 426, 434, 445, 462, 504, 594, 615, 617, 620, 622, 624, 687], "routin": [1, 13, 178, 388, 428, 624, 687], "ar": [1, 2, 4, 5, 6, 7, 8, 9, 13, 15, 16, 30, 32, 46, 57, 59, 75, 124, 127, 144, 156, 161, 162, 163, 164, 168, 169, 170, 172, 173, 175, 178, 194, 206, 209, 210, 211, 212, 213, 228, 234, 235, 239, 240, 241, 253, 255, 257, 259, 267, 270, 272, 274, 289, 295, 296, 300, 301, 318, 324, 325, 326, 327, 328, 329, 330, 333, 334, 351, 357, 358, 359, 360, 361, 362, 363, 366, 367, 371, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 396, 424, 425, 428, 429, 431, 433, 434, 443, 445, 446, 448, 450, 451, 452, 454, 455, 457, 462, 463, 465, 469, 470, 475, 487, 498, 500, 516, 564, 565, 566, 585, 586, 593, 594, 598, 599, 607, 611, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 627, 631, 632, 633, 635, 637, 638, 639, 643, 644, 650, 654, 655, 663, 666, 671, 672, 674, 675, 677, 678, 687, 689, 690, 691, 693, 694, 695, 697, 698, 701], "well": [1, 171, 173, 209, 210, 211, 212, 362, 382, 384, 429, 614, 616, 621, 622, 624, 625, 639, 652, 675, 687, 693, 694, 698], "polish": 1, "those": [1, 49, 56, 145, 146, 169, 170, 195, 196, 386, 428, 429, 470, 490, 497, 612, 618, 620, 671, 701], "io": [1, 129, 179, 425, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 630, 632, 633, 637, 638, 639, 641, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 687, 690, 691, 693, 694, 695, 696, 697, 698, 701], "thei": [1, 4, 59, 134, 136, 144, 168, 169, 170, 172, 184, 186, 194, 362, 378, 386, 392, 443, 445, 463, 500, 618, 620, 621, 625, 674, 698], "mai": [1, 30, 134, 136, 144, 151, 156, 168, 169, 184, 186, 194, 201, 206, 304, 337, 382, 384, 390, 394, 429, 445, 465, 577, 618, 620, 621, 627, 674, 687], "requir": [1, 32, 46, 75, 123, 125, 126, 168, 171, 172, 386, 390, 426, 427, 429, 472, 475, 487, 516, 593, 614, 615, 621, 624, 625, 638, 639, 687, 698, 701], "depend": [1, 163, 164, 426, 429, 451, 614, 618, 624, 625, 627, 698], "beyond": [1, 697], "standard": [1, 41, 46, 63, 75, 120, 121, 168, 377, 388, 389, 390, 434, 464, 484, 487, 504, 516, 567, 580, 581, 599, 614, 618, 624, 625, 689, 690, 691, 698, 700], "art": [1, 2, 8, 9, 13, 15, 17, 18, 19, 30, 31, 32, 46, 75, 123, 125, 126, 129, 159, 160, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 209, 210, 211, 212, 228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 304, 318, 320, 328, 329, 333, 334, 337, 351, 353, 361, 362, 366, 367, 371, 378, 379, 380, 381, 385, 387, 390, 417, 432, 433, 445, 446, 447, 457, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 475, 487, 516, 567, 577, 583, 595, 596, 606, 612, 618, 620, 628, 630, 632, 635, 636, 637, 639, 641, 648, 650, 653, 654, 672, 675, 678, 682, 686, 688, 689, 690, 691, 693, 696, 699, 701], "instal": [1, 11, 123, 125, 126, 171, 172, 390, 617, 620, 624, 627, 638, 699, 700, 701], "non": [1, 123, 125, 126, 170, 386, 388, 445, 446, 457, 463, 465, 618, 624, 674], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 20, 22, 24, 25, 26, 27, 30, 32, 33, 46, 47, 48, 50, 55, 63, 75, 78, 134, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 184, 209, 210, 211, 212, 213, 228, 230, 235, 238, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 299, 300, 301, 318, 320, 328, 329, 332, 333, 334, 351, 353, 361, 362, 365, 366, 367, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 459, 462, 463, 464, 465, 466, 469, 470, 471, 475, 476, 487, 488, 489, 491, 496, 504, 516, 519, 562, 577, 597, 606, 610, 614, 617, 618, 620, 622, 623, 624, 637, 638, 675, 690, 695, 700], "support": [1, 255, 329, 362, 371, 374, 381, 382, 383, 384, 385, 393, 394, 418, 463, 616, 618, 620, 624, 625, 663, 687, 689, 690, 691, 693, 694, 695, 697, 698], "fulli": [1, 380, 620, 697], "test": [1, 13, 168, 377, 382, 384, 394, 615, 618, 624, 626, 627, 630, 632, 640, 643, 645, 646, 650, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 683, 684, 685, 687, 689], "all": [1, 2, 4, 5, 6, 7, 8, 9, 13, 15, 16, 32, 34, 46, 49, 57, 58, 75, 121, 129, 133, 141, 144, 148, 153, 156, 168, 169, 170, 172, 173, 174, 175, 179, 183, 191, 194, 198, 203, 206, 211, 228, 234, 235, 238, 239, 240, 241, 255, 289, 295, 296, 299, 300, 301, 318, 324, 328, 329, 332, 333, 334, 351, 357, 361, 362, 365, 366, 367, 370, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 407, 408, 425, 426, 427, 428, 429, 433, 436, 439, 440, 442, 444, 445, 446, 447, 457, 458, 461, 463, 465, 475, 477, 487, 490, 498, 499, 516, 593, 612, 614, 615, 616, 617, 618, 619, 621, 624, 625, 627, 635, 650, 671, 672, 673, 674, 679, 687, 695, 696, 698, 701], "pleas": [1, 57, 168, 304, 337, 498, 614, 615, 618, 620, 622, 625, 687, 689, 690, 691, 693, 694, 695, 698], "your": [1, 228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 616, 617, 618, 623, 625, 627, 635, 648, 652, 669, 674, 675, 687, 696, 697, 698, 701], "own": [1, 13, 617, 621, 622, 627, 650, 687, 697], "risk": [1, 616], "bug": [1, 617, 625, 628, 687, 697, 698], "should": [1, 4, 13, 22, 32, 46, 48, 55, 75, 129, 134, 145, 146, 167, 168, 169, 170, 175, 179, 184, 195, 196, 214, 254, 269, 329, 362, 370, 372, 373, 386, 389, 391, 392, 426, 427, 428, 429, 446, 457, 463, 464, 465, 467, 469, 470, 472, 473, 475, 487, 489, 496, 516, 592, 593, 618, 621, 623, 624, 625, 627, 631, 633, 650, 674, 677, 687, 697, 698, 701], "fix": [1, 443, 447, 614, 617, 625, 626, 628, 635, 636, 641, 666, 689, 696, 697, 698, 701], "them": [1, 4, 5, 6, 7, 57, 168, 169, 170, 171, 244, 261, 329, 362, 377, 386, 429, 498, 617, 622, 625, 627, 650, 678, 687, 698, 701], "prioriti": [1, 701], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 30, 41, 216, 248, 262, 277, 306, 329, 339, 362, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 484, 614, 615, 616, 618, 621, 624, 625, 631, 633, 640, 651, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 679, 683, 684, 685, 698, 700], "field_nam": [2, 4, 5, 6, 7, 8, 9, 13, 15, 20, 22, 33, 47, 48, 50, 55, 71, 78, 99, 166, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 436, 439, 440, 442, 443, 444, 476, 488, 489, 491, 496, 512, 519, 540, 608, 643, 693], "additional_metadata": [2, 4, 5, 6, 7, 8, 9, 13, 15, 20, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387], "file_field_nam": [2, 4, 5, 6, 7, 8, 9, 13, 15, 20, 22, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392], "fals": [2, 4, 5, 6, 7, 8, 9, 13, 15, 20, 33, 34, 41, 47, 48, 49, 52, 53, 55, 57, 58, 59, 121, 125, 129, 131, 132, 134, 136, 143, 144, 145, 146, 147, 149, 151, 156, 157, 162, 168, 169, 170, 174, 175, 179, 181, 182, 184, 186, 193, 194, 195, 196, 197, 199, 201, 206, 207, 216, 228, 230, 235, 238, 239, 240, 241, 244, 253, 255, 257, 259, 260, 261, 267, 270, 272, 274, 277, 289, 291, 296, 299, 300, 301, 306, 318, 320, 328, 329, 332, 333, 334, 339, 351, 353, 361, 362, 365, 366, 367, 370, 371, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 398, 428, 429, 433, 445, 446, 451, 454, 457, 462, 463, 464, 465, 476, 477, 484, 485, 488, 489, 490, 493, 494, 496, 498, 499, 500, 575, 576, 587, 588, 589, 590, 591, 592, 600, 611, 614, 616, 617, 618, 620, 621, 624, 625, 631, 653, 654, 661, 663, 664, 666, 674, 675, 677, 678, 689, 690, 694, 695, 698], "exclude_field": [2, 4, 5, 6, 7, 8, 9, 12, 13, 15, 20, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392], "include_field": [2, 4, 5, 6, 7, 8, 9, 13, 15, 20, 49, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 490, 624], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 168, 169, 170, 227, 228, 229, 235, 239, 240, 241, 253, 255, 256, 257, 258, 259, 260, 267, 270, 271, 272, 273, 274, 288, 289, 290, 296, 300, 301, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 350, 351, 352, 358, 359, 360, 361, 362, 363, 366, 367, 371, 374, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 425, 426, 427, 428, 429, 463, 587, 588, 589, 590, 591, 617, 618, 622, 624], "d3r": [2, 624], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 8, 10, 12, 14, 41, 375, 376, 377, 379, 383, 388, 389, 458, 484, 587, 590, 614, 622, 624, 678, 687, 688], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 25, 26, 30, 32, 33, 35, 41, 46, 47, 48, 50, 55, 75, 78, 123, 125, 126, 134, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 184, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 420, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 469, 471, 475, 476, 478, 484, 487, 488, 489, 491, 496, 516, 519, 562, 584, 597, 606, 608, 610, 616, 618, 620, 622, 624], "odim_h5": [2, 9, 624], "dict": [2, 4, 5, 6, 7, 8, 9, 13, 15, 18, 20, 23, 26, 32, 33, 35, 40, 46, 47, 75, 123, 125, 126, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 214, 275, 304, 329, 337, 371, 373, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 394, 428, 429, 433, 435, 437, 438, 441, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 476, 478, 483, 487, 488, 516, 606, 614, 618, 689], "option": [2, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 18, 25, 32, 33, 34, 41, 42, 46, 47, 48, 49, 52, 53, 55, 57, 58, 63, 75, 121, 124, 125, 127, 129, 134, 136, 144, 151, 156, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 179, 184, 186, 194, 201, 206, 228, 235, 239, 240, 241, 243, 253, 255, 257, 259, 267, 270, 272, 274, 289, 296, 300, 301, 303, 318, 326, 327, 328, 329, 330, 333, 334, 336, 351, 359, 360, 361, 362, 366, 367, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 429, 432, 433, 435, 437, 438, 441, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 473, 475, 476, 477, 484, 487, 488, 489, 490, 493, 494, 496, 498, 499, 504, 516, 585, 586, 593, 600, 606, 610, 611, 617, 618, 624, 674, 678, 695, 700], "dictionari": [2, 4, 5, 6, 7, 8, 9, 13, 15, 18, 20, 22, 23, 26, 29, 32, 33, 46, 47, 48, 50, 75, 78, 123, 125, 126, 162, 163, 164, 168, 169, 170, 171, 172, 174, 175, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 396, 398, 425, 428, 429, 432, 433, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 462, 466, 468, 469, 470, 471, 475, 476, 487, 488, 489, 491, 516, 519, 561, 606, 639, 675, 690, 695], "map": [2, 4, 5, 6, 7, 8, 9, 13, 15, 20, 26, 32, 46, 75, 124, 127, 233, 255, 267, 294, 304, 323, 325, 326, 327, 329, 330, 337, 356, 358, 359, 360, 362, 363, 371, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 405, 415, 434, 466, 475, 487, 516, 614, 616, 617, 618, 620, 624, 625, 643, 647, 648, 652, 653, 669, 672, 674, 675, 684, 687, 688, 696, 698, 700], "field": [2, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 18, 20, 22, 24, 25, 26, 27, 32, 33, 40, 46, 47, 48, 49, 50, 55, 58, 71, 75, 78, 99, 128, 129, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 147, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 224, 227, 228, 229, 230, 235, 238, 239, 240, 241, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 285, 288, 289, 290, 291, 296, 299, 300, 301, 304, 305, 306, 307, 308, 309, 314, 317, 318, 319, 320, 328, 329, 332, 333, 334, 337, 338, 339, 340, 341, 342, 347, 350, 351, 352, 353, 361, 362, 365, 366, 367, 371, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 420, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 483, 487, 488, 489, 490, 491, 496, 499, 512, 516, 519, 540, 563, 564, 565, 566, 567, 569, 572, 573, 574, 575, 576, 582, 583, 584, 596, 597, 606, 608, 609, 610, 614, 616, 617, 618, 620, 621, 622, 624, 625, 630, 631, 635, 637, 638, 640, 643, 644, 645, 646, 649, 650, 652, 653, 655, 666, 670, 671, 672, 673, 674, 675, 676, 683, 685, 687, 688, 689, 691, 693, 694, 695, 698], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 20, 22, 25, 31, 32, 40, 75, 118, 120, 121, 122, 128, 129, 144, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 194, 206, 209, 210, 211, 212, 213, 214, 227, 228, 233, 235, 239, 240, 241, 257, 259, 270, 272, 274, 275, 288, 289, 294, 296, 300, 301, 304, 317, 318, 323, 326, 328, 329, 333, 334, 337, 350, 351, 356, 359, 361, 362, 366, 367, 371, 372, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 417, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 483, 516, 559, 564, 565, 566, 569, 572, 573, 574, 575, 576, 583, 584, 585, 586, 589, 591, 592, 594, 595, 596, 597, 600, 601, 606, 607, 608, 609, 610, 611, 614, 615, 618, 620, 624, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 642, 644, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 675, 676, 677, 679, 680, 683, 684, 685, 688, 689, 691, 693, 694, 696, 699, 700], "If": [2, 7, 8, 9, 13, 14, 15, 30, 32, 33, 46, 48, 49, 50, 57, 75, 78, 123, 125, 126, 144, 156, 165, 166, 168, 171, 172, 173, 194, 206, 210, 211, 216, 218, 228, 229, 234, 235, 239, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 289, 290, 295, 296, 300, 301, 306, 308, 318, 319, 324, 327, 328, 329, 333, 334, 339, 341, 351, 352, 357, 360, 361, 362, 366, 367, 370, 371, 374, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 401, 405, 412, 415, 429, 433, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 454, 455, 457, 458, 462, 463, 464, 465, 466, 469, 470, 475, 476, 487, 489, 490, 491, 498, 516, 519, 582, 585, 586, 593, 608, 615, 617, 618, 619, 620, 622, 625, 627, 674, 678, 687, 689, 690, 691, 693, 694, 695, 697, 698, 701], "type": [2, 8, 9, 13, 15, 20, 26, 46, 75, 118, 169, 170, 214, 275, 304, 337, 374, 378, 380, 381, 382, 383, 385, 386, 387, 391, 392, 436, 439, 440, 442, 444, 445, 451, 462, 463, 487, 516, 559, 584, 592, 615, 618, 622, 624, 625, 675, 677, 687, 695, 698], "found": [2, 8, 9, 13, 15, 30, 164, 171, 374, 378, 380, 381, 382, 383, 385, 386, 387, 401, 412, 425, 428, 429, 434, 458, 614, 616, 618, 620, 622, 624, 625, 627, 639, 653, 687, 697, 698, 701], "doe": [2, 8, 9, 13, 15, 50, 78, 123, 125, 126, 168, 169, 170, 228, 230, 235, 238, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 299, 300, 301, 318, 320, 328, 329, 332, 333, 334, 351, 353, 361, 362, 365, 366, 367, 371, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 405, 415, 491, 519, 611, 616, 618, 624, 625, 627, 677, 689, 697, 698, 700, 701], "appear": [2, 8, 9, 13, 15, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 600, 618, 621, 622], "ha": [2, 8, 9, 13, 15, 16, 46, 75, 167, 168, 216, 248, 261, 262, 277, 306, 337, 339, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 391, 398, 405, 415, 417, 448, 451, 454, 455, 462, 487, 516, 569, 593, 610, 615, 617, 618, 620, 621, 622, 625, 627, 637, 650, 674, 687, 693, 695, 697, 698, 700, 701], "valu": [2, 4, 5, 6, 7, 8, 9, 13, 15, 25, 28, 30, 32, 46, 49, 75, 123, 124, 125, 126, 127, 129, 131, 132, 134, 135, 136, 138, 142, 144, 147, 149, 150, 151, 154, 156, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 181, 182, 184, 185, 186, 188, 192, 194, 197, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 228, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 252, 253, 255, 257, 259, 267, 268, 270, 272, 274, 289, 290, 291, 293, 296, 297, 298, 299, 300, 301, 318, 319, 320, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 351, 352, 353, 355, 358, 359, 360, 361, 362, 364, 365, 366, 367, 370, 371, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 401, 402, 407, 412, 413, 428, 429, 431, 433, 434, 436, 438, 439, 440, 442, 443, 444, 445, 446, 448, 451, 454, 455, 457, 460, 462, 463, 464, 465, 469, 470, 472, 475, 487, 490, 516, 564, 565, 566, 567, 582, 584, 592, 593, 597, 598, 599, 614, 616, 617, 618, 621, 622, 624, 625, 639, 643, 650, 655, 671, 672, 673, 674, 675, 683, 690, 691, 694, 698], "place": [2, 8, 9, 13, 15, 229, 233, 234, 252, 254, 268, 269, 290, 294, 295, 319, 323, 324, 352, 356, 357, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 611, 621, 622, 624, 693, 697], "A": [2, 8, 9, 12, 13, 15, 18, 20, 32, 46, 48, 75, 124, 127, 129, 159, 160, 162, 163, 164, 165, 168, 169, 170, 173, 174, 175, 179, 209, 210, 211, 212, 214, 244, 253, 261, 275, 304, 327, 337, 360, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 393, 394, 407, 425, 426, 427, 428, 429, 433, 434, 436, 437, 439, 445, 446, 447, 448, 450, 451, 457, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 475, 487, 489, 516, 567, 583, 597, 614, 618, 621, 622, 624, 625, 655, 671, 674, 675, 678, 681, 687, 698], "default": [2, 4, 7, 8, 9, 13, 15, 18, 26, 30, 32, 46, 52, 53, 55, 57, 58, 63, 75, 123, 124, 125, 126, 127, 129, 134, 136, 144, 151, 156, 162, 163, 164, 166, 168, 169, 170, 171, 173, 174, 175, 179, 184, 186, 194, 201, 206, 209, 210, 211, 212, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 235, 238, 239, 240, 241, 243, 252, 253, 255, 257, 259, 267, 268, 270, 272, 274, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 296, 299, 300, 301, 303, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 328, 329, 332, 333, 334, 336, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 361, 362, 365, 366, 367, 369, 371, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 397, 409, 429, 431, 432, 434, 443, 445, 446, 447, 448, 451, 454, 455, 457, 458, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 475, 487, 493, 494, 496, 498, 499, 504, 516, 564, 565, 566, 584, 592, 593, 606, 615, 616, 624, 625, 663, 664, 671, 674, 675, 677, 678, 687, 697, 698, 701], "defin": [2, 8, 9, 13, 15, 32, 46, 75, 123, 125, 126, 162, 163, 164, 168, 171, 173, 174, 175, 209, 210, 211, 212, 233, 234, 238, 294, 295, 299, 323, 324, 332, 356, 357, 365, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 392, 428, 429, 433, 440, 443, 462, 463, 469, 470, 475, 487, 516, 582, 583, 614, 617, 618, 621, 622, 623, 624, 652, 653, 654, 671, 672, 674, 700], "configur": [2, 8, 9, 13, 15, 18, 19, 24, 25, 27, 30, 162, 163, 164, 168, 169, 170, 173, 174, 175, 209, 210, 211, 212, 228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 432, 446, 457, 462, 463, 464, 465, 466, 469, 470, 471, 606, 614, 615, 618, 620, 624, 637, 638, 643, 673, 683], "retriev": [2, 8, 9, 13, 15, 21, 23, 32, 52, 53, 55, 56, 57, 58, 59, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 475, 493, 494, 496, 497, 498, 499, 500, 583, 621, 624, 625, 638, 649, 671, 673, 674, 675, 676, 677, 679, 680, 683, 691, 696, 698], "metadata": [2, 8, 9, 13, 15, 18, 20, 21, 23, 29, 30, 32, 33, 46, 47, 48, 75, 162, 163, 164, 168, 169, 170, 174, 175, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 391, 432, 434, 445, 463, 464, 465, 466, 471, 475, 476, 487, 488, 489, 516, 561, 563, 569, 606, 622, 623, 624, 639, 661, 662, 666, 695], "dure": [2, 8, 9, 13, 15, 20, 144, 156, 167, 168, 169, 170, 194, 206, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 446, 456, 463, 469, 614, 675, 697, 701], "i": [2, 4, 5, 6, 7, 8, 9, 13, 14, 15, 17, 25, 30, 32, 33, 34, 46, 48, 49, 56, 57, 58, 59, 63, 75, 120, 123, 124, 125, 126, 127, 131, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 181, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 206, 207, 210, 211, 216, 218, 228, 229, 230, 233, 234, 235, 238, 239, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 289, 290, 291, 294, 295, 296, 299, 300, 301, 304, 306, 308, 318, 319, 320, 323, 324, 328, 329, 332, 333, 334, 337, 339, 341, 351, 352, 353, 356, 357, 361, 362, 365, 366, 367, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 401, 402, 405, 407, 412, 413, 415, 418, 425, 426, 427, 428, 429, 431, 433, 434, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 454, 455, 457, 458, 462, 463, 464, 465, 469, 470, 472, 475, 476, 477, 487, 489, 490, 497, 498, 499, 500, 504, 516, 569, 582, 585, 586, 592, 593, 594, 597, 600, 602, 607, 608, 610, 611, 612, 614, 616, 617, 618, 619, 620, 621, 623, 624, 625, 627, 630, 637, 638, 639, 643, 644, 650, 651, 652, 653, 654, 655, 658, 663, 671, 672, 674, 675, 677, 678, 689, 690, 691, 693, 694, 695, 697, 698, 700, 701], "ani": [2, 6, 8, 9, 13, 15, 30, 47, 48, 134, 136, 144, 145, 146, 151, 156, 162, 163, 164, 168, 169, 170, 171, 173, 174, 175, 184, 186, 194, 195, 196, 201, 206, 210, 211, 304, 337, 371, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 426, 427, 429, 434, 448, 462, 488, 489, 563, 611, 615, 619, 621, 622, 628, 631, 671, 689], "success": [2, 8, 9, 13, 15, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 627], "unless": [2, 8, 9, 13, 15, 59, 123, 125, 126, 170, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 391, 500, 618], "explicitli": [2, 8, 9, 13, 15, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 426, 427], "includ": [2, 4, 5, 6, 7, 8, 9, 13, 15, 16, 20, 22, 46, 51, 57, 58, 75, 129, 134, 136, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 168, 169, 170, 171, 172, 173, 178, 179, 184, 186, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 228, 235, 239, 240, 241, 253, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 371, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 426, 427, 428, 429, 461, 472, 487, 492, 498, 499, 516, 583, 602, 615, 617, 618, 620, 621, 622, 623, 624, 625, 627, 637, 643, 666, 671, 678, 687, 694, 697, 698], "introduct": [2, 8, 9, 13, 15, 374, 378, 380, 381, 382, 383, 384, 385, 386, 625, 698], "specif": [2, 8, 9, 13, 15, 144, 156, 162, 163, 164, 194, 206, 337, 362, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 429, 450, 451, 452, 454, 455, 458, 462, 463, 464, 465, 597, 616, 618, 622, 624, 625, 630, 650, 674, 675, 677, 678, 687, 698, 701], "specifi": [2, 4, 5, 6, 7, 8, 9, 13, 14, 15, 32, 46, 49, 57, 58, 75, 123, 125, 126, 134, 136, 151, 168, 169, 170, 178, 184, 186, 201, 228, 230, 235, 239, 240, 241, 253, 255, 256, 257, 258, 259, 267, 270, 271, 272, 273, 274, 289, 291, 296, 300, 301, 318, 320, 325, 326, 327, 328, 329, 330, 333, 334, 351, 353, 358, 359, 360, 361, 362, 363, 366, 367, 371, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 401, 412, 418, 428, 429, 447, 463, 464, 465, 470, 475, 487, 490, 498, 499, 516, 606, 610, 616, 617, 618, 621, 624, 632, 637, 678, 693, 694, 697], "bool": [2, 4, 5, 6, 7, 8, 9, 13, 15, 20, 33, 34, 41, 47, 48, 49, 52, 53, 55, 57, 58, 59, 121, 125, 129, 134, 136, 144, 151, 156, 162, 168, 169, 170, 174, 175, 179, 184, 186, 194, 201, 206, 216, 218, 228, 230, 235, 238, 239, 240, 241, 244, 253, 255, 257, 259, 261, 267, 270, 272, 274, 277, 279, 289, 291, 296, 299, 300, 301, 306, 308, 318, 320, 328, 329, 332, 333, 334, 339, 341, 351, 353, 361, 362, 365, 366, 367, 370, 371, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 425, 426, 429, 433, 445, 446, 447, 451, 454, 455, 457, 462, 463, 464, 465, 469, 476, 477, 484, 488, 489, 490, 493, 494, 496, 498, 499, 500, 592, 600, 611, 618], "true": [2, 4, 5, 6, 7, 8, 9, 13, 15, 20, 32, 33, 34, 41, 46, 47, 48, 49, 52, 53, 55, 57, 58, 59, 75, 121, 125, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 162, 168, 169, 170, 174, 175, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 216, 218, 228, 230, 235, 238, 239, 240, 241, 244, 253, 255, 257, 259, 260, 261, 267, 270, 272, 274, 277, 279, 289, 291, 296, 299, 300, 301, 306, 308, 318, 320, 328, 329, 332, 333, 334, 339, 341, 351, 353, 361, 362, 365, 366, 367, 370, 371, 373, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 398, 425, 426, 428, 429, 433, 445, 446, 447, 451, 454, 455, 457, 462, 463, 464, 465, 469, 475, 476, 477, 484, 485, 487, 488, 489, 490, 493, 494, 496, 498, 499, 500, 516, 575, 576, 592, 600, 611, 614, 615, 616, 617, 618, 620, 621, 624, 625, 644, 653, 654, 661, 662, 663, 664, 671, 674, 675, 677, 678, 679, 683, 690, 691, 695, 698], "mdv": [2, 9, 13, 15, 380, 381, 391, 615, 624, 632, 635, 645, 648, 669, 687, 691, 693, 696], "case": [2, 4, 5, 6, 7, 8, 9, 13, 15, 25, 123, 125, 126, 144, 156, 168, 170, 194, 206, 372, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 405, 415, 616, 617, 618, 620, 622, 624, 625, 637, 638, 639, 643, 644, 698], "ignor": [2, 4, 5, 6, 7, 8, 9, 13, 15, 168, 169, 170, 228, 230, 235, 238, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 299, 300, 301, 318, 320, 328, 329, 332, 333, 334, 351, 353, 361, 362, 365, 366, 367, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 426, 427, 433, 462, 614, 615, 616, 617, 618, 620, 621, 622, 624, 643], "The": [2, 8, 9, 13, 15, 17, 30, 32, 46, 75, 120, 124, 127, 161, 162, 163, 164, 166, 168, 169, 170, 171, 209, 212, 233, 253, 294, 323, 356, 362, 371, 373, 374, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 418, 419, 420, 421, 425, 428, 429, 431, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 457, 460, 462, 463, 464, 465, 469, 472, 475, 487, 516, 562, 577, 578, 579, 582, 584, 592, 593, 598, 599, 602, 606, 608, 610, 614, 615, 616, 617, 621, 624, 627, 631, 633, 635, 638, 639, 644, 655, 666, 671, 674, 675, 677, 678, 688, 691, 694, 697, 700], "onli": [2, 8, 9, 13, 15, 16, 51, 57, 58, 145, 146, 162, 163, 164, 167, 168, 170, 174, 175, 195, 196, 228, 239, 255, 289, 300, 318, 329, 333, 351, 362, 366, 374, 378, 380, 381, 382, 383, 384, 385, 386, 426, 427, 429, 447, 463, 472, 492, 498, 499, 585, 586, 600, 602, 608, 614, 615, 616, 618, 620, 624, 625, 628, 638, 643, 644, 654, 664, 674, 675, 690, 691, 693, 698], "have": [2, 4, 5, 6, 7, 8, 9, 12, 13, 15, 34, 46, 49, 57, 75, 134, 136, 144, 151, 156, 161, 162, 163, 164, 168, 184, 186, 194, 201, 206, 228, 239, 261, 289, 300, 318, 329, 333, 351, 366, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 443, 446, 457, 460, 477, 487, 490, 498, 516, 567, 592, 614, 616, 617, 618, 619, 620, 622, 624, 625, 631, 637, 639, 671, 672, 674, 675, 677, 687, 693, 697, 698, 699, 700, 701], "kei": [2, 4, 5, 6, 7, 8, 9, 13, 15, 32, 33, 46, 47, 48, 75, 123, 125, 126, 168, 169, 170, 329, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 396, 398, 401, 402, 403, 405, 407, 412, 413, 415, 428, 429, 458, 462, 470, 475, 476, 487, 488, 489, 516, 569, 616, 618, 621, 622, 671, 689, 690, 694], "list": [2, 4, 5, 6, 7, 8, 9, 12, 13, 15, 20, 49, 214, 230, 234, 237, 261, 275, 291, 295, 298, 304, 320, 324, 331, 337, 353, 357, 364, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 420, 426, 427, 429, 436, 439, 440, 442, 443, 444, 447, 448, 458, 461, 490, 583, 585, 586, 595, 617, 618, 620, 622, 623, 624, 625, 627, 637, 638, 687, 698, 699], "exclud": [2, 4, 5, 6, 7, 8, 9, 12, 13, 15, 20, 49, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 156, 162, 163, 164, 173, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 203, 206, 209, 210, 211, 212, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 445, 463, 464, 465, 467, 472, 473, 490, 632, 645, 649, 653, 694], "appli": [2, 4, 5, 6, 7, 8, 9, 13, 15, 46, 49, 75, 166, 169, 170, 172, 173, 174, 175, 210, 211, 228, 229, 235, 238, 239, 240, 241, 252, 268, 289, 290, 296, 299, 300, 301, 318, 319, 328, 329, 332, 333, 334, 351, 352, 361, 362, 365, 366, 367, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 418, 425, 429, 434, 446, 447, 451, 457, 487, 490, 516, 593, 616, 617, 618, 620, 621, 624, 625, 631, 633, 637, 649, 650, 663, 674, 675, 677, 683, 691, 698], "after": [2, 4, 5, 6, 7, 8, 9, 13, 15, 168, 169, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 394, 463, 614, 616, 618, 624, 625, 627, 639, 674, 697, 698, 701], "set": [2, 4, 5, 6, 7, 8, 9, 13, 15, 30, 32, 46, 57, 58, 59, 75, 123, 124, 125, 126, 127, 129, 134, 136, 144, 151, 156, 161, 162, 163, 164, 168, 169, 170, 173, 174, 175, 179, 184, 186, 194, 201, 206, 209, 210, 211, 212, 228, 230, 235, 238, 239, 240, 241, 242, 243, 253, 255, 289, 291, 296, 299, 300, 301, 302, 303, 318, 320, 328, 329, 332, 333, 334, 335, 336, 351, 353, 361, 362, 365, 366, 367, 368, 369, 371, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 399, 400, 403, 404, 410, 411, 414, 429, 440, 445, 450, 451, 452, 454, 455, 463, 464, 465, 475, 487, 498, 499, 500, 516, 564, 565, 566, 575, 576, 582, 592, 603, 604, 615, 616, 622, 624, 625, 633, 635, 639, 643, 644, 651, 652, 660, 663, 664, 667, 668, 670, 671, 674, 675, 680, 683, 687, 691, 696, 697, 698, 699], "you": [2, 228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 462, 614, 617, 618, 619, 620, 621, 623, 625, 627, 637, 638, 674, 675, 678, 687, 689, 690, 691, 693, 694, 695, 697, 698, 701], "want": [2, 615, 617, 618, 620, 621, 633, 639, 671, 678, 687, 694, 695, 701], "altitud": [2, 32, 46, 57, 75, 174, 175, 214, 371, 426, 429, 434, 447, 448, 469, 475, 487, 498, 516, 594, 607, 614, 617, 624, 649, 664, 671, 678, 679, 689, 693, 695], "provid": [2, 6, 46, 49, 75, 168, 213, 234, 295, 324, 329, 357, 371, 376, 377, 378, 383, 386, 390, 391, 392, 394, 399, 400, 406, 407, 410, 411, 416, 418, 447, 462, 470, 487, 490, 516, 597, 606, 612, 614, 617, 618, 620, 621, 622, 623, 625, 639, 672, 674, 687, 694, 697, 698], "np": [2, 418, 438, 473, 605, 614, 616, 617, 618, 620, 622, 624, 625, 631, 643, 645, 650, 653, 655, 660, 663, 664, 666, 671, 672, 674, 675, 676, 677, 678, 679, 689, 690, 691, 693, 694, 695, 698], "arrai": [2, 32, 34, 40, 42, 43, 48, 52, 53, 55, 56, 57, 58, 59, 120, 121, 122, 123, 124, 125, 126, 127, 129, 134, 136, 144, 145, 146, 151, 156, 160, 165, 168, 169, 170, 172, 176, 179, 184, 186, 194, 195, 196, 201, 206, 214, 228, 229, 230, 235, 239, 240, 241, 252, 253, 255, 257, 259, 267, 268, 270, 272, 274, 275, 289, 290, 291, 296, 300, 301, 304, 318, 319, 320, 325, 326, 328, 329, 333, 334, 337, 351, 352, 353, 358, 359, 361, 362, 366, 367, 371, 418, 428, 429, 438, 446, 448, 449, 457, 462, 464, 465, 466, 470, 472, 473, 475, 477, 483, 489, 493, 494, 496, 497, 498, 499, 500, 578, 579, 580, 581, 582, 590, 591, 593, 598, 599, 602, 603, 604, 605, 614, 618, 624, 625, 643, 660, 671, 674, 675, 679, 689, 690, 691, 693, 694, 695, 698], "295": [2, 624], "dtype": [2, 425, 429, 614, 617, 618, 624, 631, 689, 691, 695], "float64": [2, 428, 429, 614, 617, 672, 695], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 209, 210, 211, 212, 215, 216, 217, 218, 219, 248, 249, 250, 251, 262, 263, 264, 265, 276, 277, 278, 279, 280, 305, 306, 307, 308, 309, 338, 339, 340, 341, 342, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 396, 401, 402, 412, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 477, 478, 485, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 509, 510, 511, 512, 513, 514, 515, 529, 530, 531, 532, 537, 538, 539, 540, 541, 542, 543, 559, 561, 562, 563, 564, 565, 566, 567, 569, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 606, 607, 608, 610, 614, 616, 617, 618, 621, 622, 624, 625, 653, 672, 674, 675, 677, 678, 690, 693, 695, 698], "contain": [2, 4, 6, 8, 9, 12, 13, 15, 18, 25, 30, 32, 33, 34, 46, 47, 51, 52, 53, 55, 56, 57, 58, 59, 75, 160, 162, 163, 164, 168, 169, 170, 172, 173, 174, 175, 176, 209, 210, 211, 212, 228, 235, 238, 239, 240, 241, 243, 289, 296, 299, 300, 301, 303, 318, 328, 329, 332, 333, 334, 336, 351, 361, 362, 365, 366, 367, 369, 371, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 394, 407, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 439, 442, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 487, 488, 492, 493, 494, 496, 497, 498, 499, 500, 516, 582, 583, 585, 586, 592, 596, 606, 608, 611, 614, 615, 618, 621, 624, 625, 639, 656, 657, 675, 678, 687, 689, 690, 693, 695, 697, 698, 701], "edg": [3, 34, 58, 121, 125, 168, 169, 170, 171, 172, 228, 235, 239, 240, 241, 257, 259, 270, 272, 274, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 448, 461, 465, 477, 499, 567, 616, 617, 618, 663, 664, 674], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 392, 617, 624], "gamic": [4, 624], "hdf5": [4, 9, 624, 687], "unlik": [4, 5, 6, 7, 377], "other": [4, 5, 6, 7, 12, 13, 17, 32, 40, 42, 46, 75, 168, 169, 170, 171, 172, 173, 211, 228, 230, 235, 238, 239, 240, 241, 255, 289, 291, 296, 299, 300, 301, 318, 320, 328, 329, 332, 333, 334, 351, 353, 361, 362, 365, 366, 367, 374, 377, 379, 382, 384, 386, 390, 418, 429, 446, 457, 467, 472, 475, 483, 487, 516, 564, 565, 566, 616, 617, 618, 622, 625, 671, 674, 675, 687, 689, 697, 698, 701], "still": [4, 5, 6, 7, 168, 304, 337, 377, 392, 429, 600, 620, 622, 624, 625, 637, 698, 700], "which": [4, 5, 6, 7, 14, 18, 32, 34, 42, 43, 46, 51, 55, 68, 69, 71, 72, 75, 96, 97, 99, 100, 129, 134, 136, 144, 151, 156, 168, 169, 170, 171, 173, 174, 175, 179, 184, 186, 194, 201, 206, 209, 210, 211, 212, 228, 229, 233, 234, 235, 238, 239, 240, 241, 244, 252, 255, 257, 259, 261, 267, 268, 270, 272, 274, 289, 290, 294, 295, 296, 299, 300, 301, 318, 319, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 373, 374, 376, 377, 382, 383, 386, 387, 389, 390, 391, 392, 394, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 440, 443, 447, 458, 462, 463, 464, 465, 469, 471, 472, 475, 477, 487, 492, 496, 509, 510, 512, 513, 516, 537, 538, 540, 541, 582, 583, 584, 585, 586, 593, 595, 596, 597, 598, 599, 606, 610, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 627, 632, 637, 638, 639, 640, 643, 650, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 671, 672, 675, 683, 684, 685, 687, 691, 693, 695, 697, 698], "renam": [4, 5, 6, 7, 30, 377, 387, 624], "uniform": [4, 5, 6, 7, 59, 169, 170, 377, 385, 433, 445, 500, 624, 650, 655, 678, 687, 689], "forc": [4, 5, 6, 7, 377, 387, 433, 618, 624], "extract": [4, 7, 161, 228, 289, 318, 351, 371, 386, 443, 445, 458, 583, 585, 586, 596, 620, 624, 635, 638, 643, 668, 670, 671, 674, 675, 678, 680, 687, 696], "valid": [4, 32, 46, 75, 158, 162, 168, 208, 229, 252, 268, 290, 319, 352, 382, 391, 392, 426, 427, 429, 436, 439, 440, 442, 462, 475, 487, 516, 583, 584, 585, 586, 593, 622, 624, 625, 644, 698], "rang": [4, 13, 46, 56, 58, 75, 120, 121, 122, 164, 176, 214, 228, 230, 235, 236, 237, 239, 240, 241, 253, 255, 257, 259, 267, 270, 272, 274, 275, 289, 291, 296, 297, 298, 300, 301, 304, 318, 320, 328, 329, 330, 331, 333, 334, 337, 351, 353, 361, 362, 363, 364, 366, 367, 371, 385, 426, 427, 429, 436, 438, 440, 442, 443, 445, 463, 465, 487, 497, 499, 516, 583, 584, 592, 608, 614, 616, 617, 618, 624, 631, 633, 644, 650, 653, 657, 660, 666, 678, 679, 689, 695], "valid_min": [4, 168, 169, 170, 378, 624, 674, 675, 695], "valid_max": [4, 168, 169, 170, 378, 674, 675, 695], "when": [4, 20, 32, 46, 47, 48, 52, 53, 55, 57, 58, 75, 134, 136, 139, 144, 145, 146, 151, 156, 168, 169, 170, 174, 175, 184, 186, 189, 194, 195, 196, 201, 206, 228, 235, 239, 240, 241, 255, 261, 289, 296, 300, 301, 318, 328, 329, 333, 334, 337, 351, 361, 362, 366, 367, 382, 383, 385, 386, 388, 392, 394, 418, 429, 433, 436, 439, 440, 442, 444, 451, 454, 455, 463, 464, 465, 472, 474, 475, 487, 488, 489, 493, 494, 496, 498, 499, 516, 593, 615, 616, 617, 620, 621, 624, 625, 626, 627, 628, 650, 671, 674, 675, 677, 687, 690, 691, 694, 697, 698, 701], "present": [4, 30, 32, 46, 75, 228, 235, 239, 240, 241, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 391, 392, 405, 415, 429, 462, 475, 487, 516, 618, 689, 694], "unit": [4, 56, 123, 124, 125, 126, 127, 169, 170, 220, 223, 224, 225, 226, 233, 253, 281, 284, 285, 286, 287, 294, 310, 313, 314, 315, 316, 323, 343, 346, 347, 348, 349, 356, 378, 380, 431, 457, 460, 470, 474, 497, 569, 593, 614, 618, 620, 624, 625, 626, 631, 661, 666, 674, 675, 677, 678, 687, 690, 695, 698], "avail": [4, 17, 46, 57, 58, 59, 75, 144, 156, 162, 163, 164, 172, 194, 206, 213, 253, 255, 257, 259, 270, 272, 274, 380, 390, 447, 487, 498, 499, 500, 516, 602, 614, 616, 617, 618, 621, 624, 627, 635, 637, 638, 650, 671, 687], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 42, 43, 44, 124, 127, 451, 462, 470, 472, 473, 614, 616, 617, 618, 619, 620, 621, 622, 624, 625, 639, 679, 689, 690, 691, 693, 694, 695, 698], "k": [5, 127, 159, 160, 165, 232, 233, 234, 236, 237, 238, 293, 294, 295, 297, 298, 299, 322, 323, 324, 330, 331, 332, 355, 356, 357, 363, 364, 365, 397, 401, 402, 404, 405, 409, 412, 413, 414, 415, 445, 463, 472, 616, 620, 622, 625, 652, 660, 663, 664, 678, 698], "band": [5, 10, 162, 164, 167, 390, 436, 450, 452, 459, 462, 463, 464, 465, 469, 614, 622, 624, 675, 677], "arm": [5, 6, 41, 159, 160, 165, 375, 376, 377, 388, 389, 429, 458, 484, 563, 569, 614, 616, 618, 620, 624, 627, 631, 646, 689, 690, 691, 693, 694, 695, 697, 700, 701], "zenith": 5, "kazr": [5, 6, 624, 631], "ingest": [5, 7, 617, 624, 687, 688], "spectra": [6, 75, 118, 449, 468, 516, 559, 566, 574, 593, 624], "radar_spectra": 6, "delay_field_load": [6, 374, 377, 380, 381, 382, 385, 387], "delai": [6, 374, 377, 380, 381, 382, 385, 624], "load": [6, 30, 374, 377, 380, 381, 382, 385, 393, 394, 403, 624, 644, 649, 653, 678, 695], "until": [6, 30, 169, 374, 377, 380, 381, 382, 385, 621, 627], "particular": [6, 374, 377, 380, 381, 382, 385, 429, 443, 617, 627, 671, 687], "access": [6, 20, 32, 46, 57, 58, 75, 145, 146, 195, 196, 374, 377, 380, 381, 382, 385, 394, 475, 487, 498, 499, 516, 562, 617, 622, 637, 638, 639, 693, 695, 700], "In": [6, 123, 125, 126, 170, 172, 372, 374, 377, 380, 381, 382, 384, 385, 405, 415, 418, 431, 434, 443, 448, 463, 473, 582, 583, 614, 616, 617, 618, 620, 621, 625, 630, 631, 632, 633, 639, 649, 671, 674, 675, 687, 690, 691, 693, 694, 697, 698, 700], "attribut": [6, 32, 35, 36, 37, 38, 46, 57, 58, 64, 65, 66, 67, 75, 92, 93, 94, 95, 144, 145, 146, 156, 168, 194, 195, 196, 206, 228, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 371, 374, 377, 378, 380, 381, 382, 385, 388, 389, 392, 475, 478, 479, 480, 481, 487, 498, 499, 505, 506, 507, 508, 516, 533, 534, 535, 536, 614, 617, 618, 620, 622, 672, 689, 695], "radarspectra": [6, 468, 566], "lazyloaddict": [6, 32, 46, 75, 374, 377, 380, 381, 382, 385, 475, 487, 516], "speedup": [6, 255, 329, 362, 377, 618, 624], "where": [6, 16, 57, 58, 120, 124, 127, 131, 134, 135, 136, 137, 138, 140, 142, 143, 144, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 163, 164, 168, 169, 170, 173, 175, 181, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 228, 235, 238, 239, 240, 241, 254, 269, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 370, 371, 377, 434, 436, 439, 440, 442, 443, 444, 446, 448, 457, 466, 470, 473, 498, 499, 585, 586, 594, 597, 610, 614, 615, 618, 620, 624, 637, 638, 639, 643, 650, 655, 671, 672, 674, 677, 678, 687, 690, 694, 701], "gate": [6, 46, 56, 57, 58, 75, 120, 121, 122, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 228, 235, 239, 240, 241, 257, 259, 270, 272, 274, 275, 289, 296, 300, 301, 304, 318, 328, 329, 333, 334, 337, 351, 361, 362, 366, 367, 377, 382, 383, 384, 385, 418, 425, 428, 429, 463, 464, 465, 466, 467, 472, 473, 487, 497, 498, 499, 516, 564, 565, 566, 582, 583, 595, 596, 614, 618, 624, 632, 643, 645, 646, 649, 652, 653, 689, 691, 693, 694, 695], "vari": [6, 377, 380, 445, 674, 675], "between": [6, 34, 46, 57, 58, 75, 121, 124, 125, 144, 156, 168, 169, 171, 172, 173, 194, 206, 210, 211, 228, 235, 239, 240, 241, 253, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 370, 377, 382, 385, 390, 391, 392, 418, 445, 446, 451, 457, 477, 487, 498, 499, 516, 577, 592, 607, 614, 616, 617, 618, 625, 627, 643, 651, 652, 663, 671, 674, 691, 693, 698, 701], "rai": [6, 46, 54, 57, 58, 59, 60, 61, 62, 75, 88, 89, 90, 91, 121, 139, 144, 156, 162, 163, 164, 168, 169, 170, 172, 175, 189, 194, 206, 210, 215, 217, 221, 222, 228, 235, 238, 239, 240, 241, 257, 259, 270, 272, 274, 276, 278, 282, 283, 289, 296, 299, 300, 301, 305, 307, 311, 312, 318, 328, 329, 332, 333, 334, 338, 340, 344, 345, 351, 361, 362, 365, 366, 367, 376, 377, 382, 385, 386, 418, 433, 438, 472, 487, 495, 498, 499, 500, 501, 502, 503, 516, 529, 530, 531, 532, 564, 565, 566, 569, 583, 584, 589, 591, 595, 610, 611, 617, 618, 625, 645, 653, 689, 695, 698], "ngates_vari": [6, 377], "recommend": [6, 30, 46, 75, 168, 170, 362, 377, 386, 429, 445, 446, 457, 463, 487, 516, 582, 625, 627, 650, 671, 687, 697, 698, 699, 700, 701], "mode_nam": 7, "mode_to_extract": 7, "millimet": [7, 617], "wavelength": [7, 449, 614, 617], "cloud": [7, 159, 160, 165, 373, 382, 445, 463, 616, 617, 625, 627, 629, 634, 635, 636, 641, 687, 696, 698, 701], "mmcr": 7, "b1": [7, 370, 446, 457, 622], "mode": [7, 46, 63, 75, 373, 435, 443, 487, 504, 516, 614, 617, 624, 625, 671, 695, 697, 698], "dimens": [7, 32, 168, 371, 380, 426, 427, 429, 433, 434, 446, 457, 458, 460, 463, 465, 469, 475, 582, 608, 614, 617, 618, 624, 644, 672, 674, 675, 689, 693, 695], "indic": [7, 22, 32, 46, 70, 73, 74, 75, 98, 101, 102, 134, 144, 145, 146, 156, 175, 184, 194, 195, 196, 206, 371, 386, 447, 463, 464, 465, 467, 472, 473, 475, 487, 511, 514, 515, 516, 539, 542, 543, 595, 614, 616, 618, 624, 637, 649, 660], "correspond": [7, 124, 127, 145, 146, 195, 196, 227, 255, 270, 288, 317, 350, 375, 401, 412, 426, 429, 583, 593, 595, 616, 618, 625, 637, 655, 678, 691, 695, 698], "abbrevi": [7, 470], "prt": [7, 392, 617], "radar_out": 7, "repres": [7, 46, 75, 168, 426, 427, 462, 487, 516, 564, 565, 611, 621, 624, 671, 675], "oper": [7, 134, 136, 144, 151, 156, 184, 186, 194, 201, 206, 386, 425, 429, 435, 452, 456, 457, 465, 469, 614, 617, 618, 625, 674, 675, 678, 697, 698], "noxp": [8, 624], "iphex": [8, 624], "include_dataset": 9, "exclude_dataset": 9, "dataset": [9, 139, 189, 329, 362, 371, 382, 384, 426, 427, 458, 583, 587, 590, 596, 614, 617, 618, 624, 625, 631, 633, 637, 638, 640, 644, 649, 651, 671, 672, 675, 676, 677, 678, 679, 689, 698], "given": [9, 22, 25, 26, 27, 29, 32, 34, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 75, 88, 89, 90, 91, 131, 132, 134, 135, 136, 137, 140, 142, 143, 147, 149, 150, 151, 152, 154, 155, 157, 168, 173, 181, 182, 184, 185, 186, 187, 190, 192, 193, 197, 199, 200, 201, 202, 204, 205, 207, 210, 211, 228, 233, 234, 253, 254, 256, 257, 258, 259, 269, 271, 272, 273, 274, 289, 294, 295, 318, 323, 324, 325, 326, 351, 356, 357, 358, 359, 401, 412, 418, 426, 427, 428, 429, 440, 462, 466, 475, 477, 487, 493, 494, 495, 496, 499, 500, 501, 502, 503, 516, 529, 530, 531, 532, 561, 583, 592, 595, 596, 598, 599, 606, 614, 618, 622, 671, 672, 674, 678, 687, 700], "dataset1": 9, "dataset2": 9, "pattern": [10, 567, 663, 671], "project": [10, 17, 32, 35, 46, 75, 123, 124, 125, 126, 127, 233, 244, 255, 260, 267, 294, 304, 323, 329, 356, 362, 371, 380, 389, 390, 429, 436, 439, 440, 442, 444, 475, 478, 487, 516, 614, 616, 618, 620, 621, 622, 624, 637, 639, 643, 644, 652, 654, 660, 667, 672, 674, 675, 683, 687, 690, 691, 693, 694, 697], "x": [10, 32, 38, 40, 58, 66, 94, 120, 121, 122, 123, 124, 125, 126, 127, 214, 223, 228, 230, 233, 235, 238, 239, 240, 241, 243, 253, 255, 257, 259, 270, 272, 274, 275, 284, 289, 291, 294, 296, 299, 300, 301, 303, 304, 313, 318, 320, 323, 326, 328, 332, 333, 334, 336, 337, 346, 351, 353, 356, 359, 361, 365, 366, 367, 369, 418, 422, 423, 424, 425, 426, 428, 429, 433, 446, 448, 450, 457, 459, 460, 461, 462, 463, 464, 465, 469, 475, 481, 483, 499, 507, 535, 563, 567, 582, 614, 617, 618, 621, 623, 624, 628, 643, 652, 654, 663, 664, 671, 674, 675, 677, 678, 693, 694, 695], "radx_dir": 11, "first": [11, 46, 59, 75, 168, 170, 253, 375, 376, 385, 388, 418, 429, 446, 457, 463, 464, 465, 469, 487, 500, 516, 587, 589, 592, 603, 604, 614, 616, 617, 618, 620, 621, 625, 627, 631, 632, 637, 638, 639, 657, 666, 671, 672, 674, 675, 683, 691, 693, 694, 695, 698], "convert": [11, 14, 40, 431, 446, 457, 483, 600, 611, 614, 616, 618, 624, 674, 675], "cf": [11, 14, 46, 75, 377, 388, 389, 458, 487, 516, 614, 615, 616, 617, 635, 648, 669, 687, 695, 696], "radial": [11, 14, 46, 75, 168, 169, 377, 388, 433, 463, 487, 516, 582, 606, 615, 617, 618, 620, 624, 629, 635, 637, 648, 669, 682, 686, 687, 691, 695, 696], "radxconvert": 11, "path": [11, 16, 163, 164, 170, 485, 562, 615, 616, 618, 620, 621, 624, 625, 637, 638, 639, 687, 697, 698], "radx": [11, 624], "grid": [12, 25, 46, 75, 213, 230, 232, 240, 244, 248, 254, 255, 256, 258, 261, 262, 267, 269, 270, 271, 273, 291, 293, 320, 322, 353, 355, 371, 372, 379, 380, 389, 390, 391, 422, 423, 424, 425, 426, 427, 428, 429, 436, 439, 440, 442, 444, 445, 446, 448, 457, 460, 461, 469, 487, 516, 563, 567, 568, 570, 571, 588, 608, 614, 618, 621, 624, 635, 642, 647, 648, 653, 654, 664, 667, 669, 671, 674, 675, 678, 682, 686, 687, 688, 696, 700], "produc": [12, 171, 379, 388, 390, 394, 467, 473, 618, 620, 625, 675, 687, 698], "radx2grid": 12, "within": [12, 30, 48, 49, 129, 168, 169, 170, 171, 175, 179, 213, 425, 428, 429, 433, 436, 439, 440, 442, 444, 462, 489, 490, 577, 583, 585, 586, 594, 596, 598, 599, 612, 616, 618, 619, 620, 622, 624, 625, 637, 638, 639, 653, 654, 655, 687, 691, 693, 698, 701], "lrose": 12, "must": [12, 162, 163, 164, 168, 329, 376, 379, 380, 385, 390, 391, 445, 460, 463, 464, 465, 606, 618, 625, 674, 678, 687, 697, 698], "been": [12, 13, 134, 136, 144, 151, 156, 167, 168, 184, 186, 194, 201, 206, 261, 337, 377, 379, 382, 383, 384, 386, 593, 615, 620, 625, 637, 674, 687, 693, 697, 698, 700], "write_grid": [12, 379], "ident": [12, 169, 170, 379, 428, 470, 675], "layout": [12, 34, 379, 477, 624], "rainbow": 13, "rainbow5": [13, 624], "5": [13, 32, 159, 162, 164, 168, 171, 172, 173, 174, 211, 228, 235, 238, 239, 240, 241, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 389, 445, 446, 451, 457, 462, 475, 567, 592, 600, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 630, 632, 633, 649, 650, 651, 655, 657, 658, 659, 662, 663, 664, 665, 666, 667, 671, 672, 674, 675, 676, 677, 678, 679, 683, 689, 691, 694, 695, 698], "22": [13, 614, 616, 620, 624, 637, 650, 672], "3": [13, 46, 75, 120, 121, 168, 169, 209, 210, 212, 240, 380, 384, 390, 425, 426, 427, 429, 433, 445, 446, 457, 462, 487, 516, 563, 567, 583, 614, 615, 616, 617, 620, 623, 625, 630, 631, 632, 633, 635, 638, 639, 640, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 686, 687, 689, 690, 691, 693, 694, 695, 696, 697, 698, 701], "34": [13, 457, 469, 614, 674, 675, 678], "16": [13, 445, 450, 472, 612, 614, 615, 616, 618, 622, 625, 630, 632, 643, 645, 647, 659, 665, 671, 673, 691, 695, 696, 698], "35": [13, 170, 174, 175, 614, 616, 617, 633, 634, 647, 650, 661, 663, 664, 671, 694, 696], "1": [13, 32, 46, 56, 75, 120, 124, 127, 144, 159, 160, 165, 168, 170, 174, 175, 194, 275, 377, 382, 383, 384, 389, 390, 428, 429, 431, 436, 437, 439, 440, 442, 443, 445, 446, 448, 451, 457, 462, 463, 465, 475, 487, 497, 516, 567, 583, 584, 592, 593, 605, 614, 616, 617, 618, 620, 622, 625, 627, 628, 630, 631, 633, 637, 640, 643, 644, 645, 646, 649, 650, 651, 652, 654, 656, 657, 658, 660, 661, 662, 663, 664, 666, 667, 668, 671, 672, 674, 676, 677, 678, 679, 684, 687, 689, 690, 691, 693, 695, 698, 700], "sinc": [13, 434, 463, 614, 616, 617, 618, 644, 674, 675, 690, 693, 695], "evolv": [13, 614], "constantli": 13, "guaranti": 13, "work": [13, 124, 127, 255, 304, 329, 337, 362, 382, 384, 469, 615, 616, 618, 620, 621, 622, 624, 625, 627, 628, 671, 687, 689, 690, 691, 693, 694, 695, 697, 698, 700, 701], "necessari": [13, 614, 621], "user": [13, 30, 49, 163, 164, 171, 362, 390, 445, 462, 490, 583, 610, 614, 617, 618, 620, 622, 624, 625, 677, 687, 689, 690, 691, 693, 694, 695, 697, 698, 700, 701], "adapt": [13, 120, 457, 614, 675, 701], "code": [13, 30, 168, 460, 472, 614, 616, 620, 622, 624, 628, 630, 631, 632, 633, 635, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 687, 697, 700, 701], "accord": [13, 167, 386, 429, 437, 450, 451, 452, 454, 455], "its": [13, 463, 602, 616, 617, 620, 621, 624, 625, 627, 628, 687, 697, 698, 701], "rais": [13, 32, 33, 47, 48, 50, 59, 78, 374, 385, 401, 402, 412, 413, 475, 476, 488, 489, 491, 500, 519, 617, 618, 621, 624, 678], "an": [13, 25, 29, 30, 32, 40, 46, 48, 49, 52, 53, 59, 68, 69, 70, 71, 72, 73, 74, 75, 96, 97, 98, 99, 100, 101, 102, 138, 159, 168, 169, 170, 171, 173, 174, 175, 188, 209, 210, 211, 212, 214, 233, 294, 323, 356, 362, 371, 386, 389, 390, 406, 416, 418, 425, 426, 428, 429, 433, 439, 442, 448, 458, 475, 483, 487, 489, 490, 493, 494, 500, 509, 510, 511, 512, 513, 514, 515, 516, 537, 538, 539, 540, 541, 542, 543, 561, 563, 564, 565, 566, 573, 582, 586, 590, 591, 598, 599, 609, 611, 614, 615, 617, 618, 620, 621, 622, 624, 625, 627, 628, 631, 635, 639, 640, 643, 644, 648, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 671, 672, 674, 675, 677, 678, 683, 684, 685, 687, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699], "issu": [13, 30, 304, 337, 386, 389, 617, 622, 623, 624, 625, 635, 636, 641, 677, 687, 696, 697, 698, 701], "upstream": [13, 615, 625, 627, 698], "reflect": [13, 48, 118, 129, 145, 146, 159, 160, 162, 163, 164, 166, 171, 173, 174, 175, 176, 179, 195, 196, 210, 211, 230, 291, 320, 353, 370, 418, 429, 431, 432, 434, 438, 441, 445, 446, 448, 451, 453, 454, 455, 456, 457, 462, 463, 469, 489, 559, 572, 573, 575, 576, 597, 614, 615, 616, 620, 621, 622, 624, 629, 631, 632, 633, 634, 635, 637, 638, 639, 640, 643, 644, 645, 646, 648, 649, 650, 652, 653, 654, 656, 659, 662, 665, 666, 668, 669, 670, 672, 674, 675, 678, 680, 683, 685, 687, 689, 690, 691, 693, 694, 695, 696], "dbz": [13, 162, 167, 174, 175, 431, 438, 441, 445, 446, 457, 462, 469, 615, 617, 620, 621, 633, 637, 640, 643, 654, 661, 662, 668, 671, 674, 675, 677, 678, 695], "dbuz": 13, "dbzv": 13, "dbuzv": 13, "veloc": [13, 25, 59, 118, 168, 169, 170, 433, 447, 448, 449, 460, 470, 472, 473, 500, 559, 582, 606, 618, 620, 621, 624, 625, 629, 634, 635, 637, 638, 650, 656, 664, 666, 677, 682, 686, 687, 688, 694, 695, 696, 698], "v": [13, 42, 43, 45, 401, 402, 405, 412, 413, 415, 435, 437, 445, 470, 472, 473, 616, 621, 622, 625, 635, 648, 663, 664, 669, 675, 679, 696, 698], "vu": 13, "vv": 13, "vvu": 13, "spectrum": [13, 593, 695], "width": [13, 254, 269, 329, 362, 371, 429, 616, 617, 618, 620, 624, 695], "w": [13, 63, 170, 445, 462, 504, 614, 676], "wu": [13, 425, 693], "wv": 13, "wvu": 13, "differenti": [13, 18, 162, 163, 164, 174, 175, 210, 448, 452, 455, 457, 462, 463, 464, 465, 467, 471, 624, 656, 671, 675, 687], "zdr": [13, 161, 163, 164, 167, 210, 435, 462, 629, 634, 635, 677, 696], "zdru": 13, "co": [13, 120, 124, 127, 435, 437, 446, 448, 457, 614, 616, 644, 671, 674, 675, 678], "polar": [13, 380, 381, 465, 617, 644], "correl": [13, 173, 210, 211, 460, 462, 597, 620, 633, 655, 656, 673, 674, 675], "coeffici": [13, 162, 163, 164, 174, 175, 431, 445, 462, 597, 614, 624, 655, 656, 673], "rhohv": [13, 167, 173, 210, 211, 435, 437, 462, 624, 633, 655, 677, 695], "rhohvu": 13, "phase": [13, 18, 162, 163, 164, 170, 174, 175, 210, 442, 452, 455, 460, 462, 463, 464, 465, 467, 471, 624, 656, 687, 691], "phidp": [13, 163, 164, 174, 175, 210, 463, 624, 687], "uphidp": 13, "uphidpu": 13, "kdp": [13, 174, 175, 452, 455, 462, 463, 464, 465, 624, 676, 677, 687], "ukdp": 13, "ukdpu": 13, "signal": [13, 167, 173, 211, 432, 593, 617, 622], "qualiti": [13, 159, 160, 165, 167, 173, 211, 452, 464, 465, 614, 620, 622, 637], "sqi": [13, 624], "sqiu": 13, "sqiv": 13, "sqivu": 13, "temperatur": [13, 163, 164, 212, 462, 614, 676], "temp": [13, 624], "posit": [13, 46, 75, 124, 127, 163, 164, 168, 371, 434, 447, 463, 487, 516, 617, 624, 643, 649, 650, 695], "bin": [13, 46, 75, 120, 121, 122, 164, 385, 436, 439, 440, 442, 444, 448, 449, 487, 516, 592, 593, 614, 624, 643, 671, 691, 695], "respect": [13, 46, 75, 446, 457, 462, 469, 487, 516, 618, 678], "iso0": [13, 163, 209, 462], "cfradial_outfil": 14, "head": [14, 46, 75, 214, 487, 516], "ridgelin": 14, "instrument": [14, 46, 75, 144, 156, 173, 194, 206, 210, 211, 392, 487, 516, 622, 624, 677, 691, 695], "rxm": [14, 624], "25": [14, 426, 427, 445, 614, 616, 620, 624, 637, 638, 643, 653, 663, 664, 667, 672, 677, 689, 694], "rli": 14, "here": [14, 134, 136, 144, 151, 156, 184, 186, 194, 201, 206, 267, 614, 615, 616, 617, 618, 620, 622, 623, 627, 633, 643, 671, 674, 675, 677, 683, 687, 689, 694, 697, 701], "float": [14, 25, 59, 124, 127, 134, 159, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 184, 209, 210, 211, 212, 214, 215, 228, 230, 231, 235, 236, 238, 239, 240, 241, 253, 254, 255, 256, 257, 258, 259, 267, 269, 270, 271, 272, 273, 274, 275, 276, 289, 291, 292, 296, 297, 299, 300, 301, 304, 305, 318, 320, 321, 327, 328, 329, 330, 332, 333, 334, 337, 338, 351, 353, 354, 360, 361, 362, 363, 365, 366, 367, 370, 371, 390, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 500, 563, 567, 578, 579, 580, 581, 582, 583, 585, 586, 592, 593, 594, 595, 596, 597, 598, 599, 600, 607, 608, 618, 622, 678], "offset": [14, 159, 162, 174, 175, 214, 275, 304, 327, 337, 360, 446, 457, 592, 600, 614, 617, 618, 675], "exist": [14, 29, 33, 47, 48, 50, 78, 134, 136, 144, 151, 156, 172, 173, 184, 186, 194, 201, 206, 210, 211, 386, 463, 476, 485, 488, 489, 491, 519, 561, 611, 616, 617, 618, 624, 625, 627, 630, 687, 689, 698], "enter": [14, 615, 618, 625, 698], "degre": [14, 34, 42, 56, 57, 120, 121, 122, 123, 124, 125, 126, 127, 174, 175, 212, 214, 228, 233, 234, 253, 254, 256, 258, 267, 269, 271, 273, 275, 289, 294, 295, 304, 318, 323, 324, 327, 329, 337, 351, 356, 357, 360, 362, 436, 442, 470, 472, 477, 497, 498, 579, 581, 583, 585, 586, 594, 595, 596, 600, 604, 607, 616, 618, 622, 624, 625, 668, 672, 678, 695, 698], "sinarame_h5": [15, 16, 624], "take": [16, 48, 169, 428, 429, 432, 463, 489, 616, 617, 618, 625, 631, 633, 637, 638, 639, 643, 654, 674, 675, 698], "everi": [16, 464, 465, 625, 626, 687, 698], "one": [16, 26, 32, 40, 41, 46, 48, 75, 134, 136, 144, 151, 156, 172, 173, 184, 186, 194, 201, 206, 211, 388, 389, 391, 418, 425, 428, 429, 434, 463, 464, 465, 472, 475, 483, 484, 487, 489, 516, 584, 585, 586, 592, 597, 601, 606, 615, 617, 618, 620, 621, 623, 624, 625, 627, 635, 642, 643, 644, 650, 671, 687, 690, 695, 698, 701], "volum": [16, 46, 75, 168, 170, 171, 329, 362, 382, 383, 384, 392, 418, 426, 427, 436, 439, 440, 442, 443, 444, 458, 462, 487, 516, 585, 586, 588, 608, 611, 614, 617, 618, 620, 622, 624, 635, 644, 648, 669, 678, 696], "folder": [16, 614, 622, 625, 698], "cfradial": [16, 377, 615, 624, 635, 648, 650, 666, 668, 669, 685, 689, 696], "each": [16, 32, 40, 42, 46, 56, 75, 139, 160, 161, 162, 163, 164, 165, 169, 170, 171, 189, 228, 235, 239, 240, 241, 257, 259, 270, 272, 274, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 386, 390, 392, 418, 425, 428, 429, 443, 448, 462, 472, 475, 483, 487, 497, 516, 564, 565, 566, 614, 617, 618, 621, 622, 624, 625, 637, 645, 653, 663, 666, 671, 674, 675, 678, 694, 695, 698, 700], "act": [17, 451, 454, 455, 614, 624, 671, 674, 689], "commun": [17, 614, 622, 625, 687, 698, 701], "softwar": [17, 240, 383, 390, 618, 620, 625, 687, 689, 690, 691, 693, 694, 695, 697, 698], "namespac": [17, 624], "current": [17, 28, 34, 134, 136, 144, 151, 156, 168, 184, 186, 194, 201, 206, 216, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 252, 253, 254, 255, 257, 259, 267, 268, 269, 270, 272, 274, 277, 279, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 306, 308, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 339, 341, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 369, 381, 419, 421, 436, 439, 440, 442, 443, 444, 463, 477, 592, 614, 615, 617, 618, 620, 622, 625, 638, 698], "extens": [17, 216, 248, 262, 277, 306, 339, 390, 617, 627, 697], "wradlib": [17, 624, 687], "http": [17, 159, 160, 165, 382, 383, 384, 431, 434, 435, 437, 446, 447, 448, 451, 452, 453, 457, 460, 462, 583, 597, 614, 616, 618, 620, 622, 625, 655, 671, 674, 675, 678, 687, 697, 698, 700, 701], "org": [17, 159, 160, 165, 431, 434, 435, 437, 446, 447, 448, 451, 452, 453, 457, 460, 462, 583, 597, 622, 624, 625, 655, 671, 674, 675, 678, 687, 698], "phidp_field": [18, 162, 163, 164, 174, 175, 463, 464, 465, 471, 630, 676], "phidp_texture_field": [18, 471], "calcul": [18, 32, 34, 46, 57, 58, 75, 120, 121, 125, 129, 145, 146, 159, 160, 161, 162, 163, 164, 165, 173, 174, 175, 179, 195, 196, 209, 210, 211, 212, 214, 275, 304, 337, 371, 428, 429, 432, 433, 445, 446, 457, 460, 467, 468, 470, 471, 472, 473, 475, 477, 487, 498, 499, 516, 582, 583, 592, 593, 594, 595, 596, 607, 614, 624, 625, 629, 630, 634, 635, 643, 644, 663, 664, 670, 674, 678, 680, 683, 687, 691, 694, 696, 698], "textur": [18, 210, 433, 471, 582, 610, 624, 683, 687, 691], "real": [18, 168, 471, 635, 648, 674, 675, 701], "part": [18, 159, 160, 165, 448, 450, 471, 592, 617, 618, 620, 624, 637, 638, 671, 687, 689, 690, 691, 693, 694, 695], "complex": [18, 471], "shift": [18, 174, 175, 214, 275, 304, 337, 461, 464, 471, 592, 624, 691], "texture_field": [18, 471], "refer": [18, 32, 46, 48, 75, 120, 124, 127, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 174, 175, 382, 383, 384, 425, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 456, 457, 462, 463, 464, 465, 467, 469, 471, 472, 473, 475, 487, 489, 516, 583, 593, 597, 615, 620, 624, 625, 655, 671, 678, 687, 695, 698], "gourlei": [18, 167, 471], "j": [18, 124, 127, 159, 160, 165, 170, 174, 175, 434, 435, 437, 445, 446, 451, 457, 462, 464, 465, 467, 469, 471, 472, 473, 583, 615, 618, 622, 625, 630, 632, 645, 646, 656, 657, 659, 661, 665, 668, 674, 675, 678, 687, 698], "p": [18, 21, 23, 29, 120, 124, 127, 159, 160, 165, 425, 439, 440, 442, 445, 450, 467, 471, 561, 583, 593, 617, 625, 687, 698], "tabari": [18, 471], "parent": [18, 471], "du": [18, 471], "chatelet": [18, 471], "fuzzi": [18, 471], "logic": [18, 134, 136, 144, 151, 156, 184, 186, 194, 201, 206, 471], "algorithm": [18, 129, 168, 169, 170, 179, 425, 429, 445, 446, 457, 462, 463, 469, 471, 614, 624, 625, 629, 634, 635, 683, 687, 696, 698, 700], "separ": [18, 426, 427, 445, 460, 469, 471, 593, 597, 637, 644, 655, 675, 701], "precipit": [18, 429, 431, 440, 442, 445, 452, 456, 462, 471, 597, 614, 616, 618, 624, 625, 635, 643, 655, 670, 674, 675, 677, 680, 687, 696, 698], "nonprecipit": [18, 471], "echo": [18, 445, 446, 457, 462, 471, 624, 671, 674, 675, 694], "polarimetr": [18, 162, 163, 164, 167, 174, 175, 436, 437, 439, 440, 442, 451, 452, 462, 467, 471, 583, 624, 630], "observ": [18, 120, 440, 442, 446, 457, 463, 471, 671, 674, 675], "journal": [18, 168, 170, 425, 450, 452, 471, 593, 625, 687, 698], "atmospher": [18, 46, 75, 120, 121, 168, 169, 429, 450, 466, 471, 487, 516, 614, 617, 618, 620, 622, 625, 637, 638, 687, 689, 690, 691, 693, 694, 695, 698], "ocean": [18, 159, 160, 165, 168, 174, 175, 435, 437, 446, 450, 456, 457, 467, 471, 583, 614, 618, 622, 637, 638, 674, 675], "technologi": [18, 168, 450, 471], "24": [18, 471, 614, 616, 624, 639, 680], "8": [18, 63, 162, 168, 174, 210, 253, 255, 257, 259, 270, 272, 274, 445, 462, 471, 504, 614, 616, 617, 618, 620, 621, 627, 632, 633, 639, 643, 652, 653, 663, 667, 671, 672, 675, 678, 683, 689, 690, 691, 693, 694, 695], "1439": [18, 471], "1451": [18, 471], "filetyp": [20, 26, 618], "need": [20, 46, 55, 57, 58, 75, 390, 446, 457, 487, 496, 498, 499, 516, 594, 607, 616, 617, 618, 621, 622, 623, 624, 625, 627, 637, 643, 674, 675, 687, 689, 690, 691, 693, 694, 695, 697, 698, 701], "being": [20, 22, 168, 228, 230, 235, 238, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 299, 300, 301, 318, 320, 328, 329, 332, 333, 334, 351, 353, 361, 362, 365, 366, 367, 429, 434, 465, 598, 599, 616, 618, 620, 621, 624, 625, 697, 698], "keep": [20, 168, 386, 608, 618, 625, 643, 674, 675, 698, 701], "string": [20, 32, 46, 75, 159, 160, 161, 176, 230, 233, 234, 238, 241, 254, 269, 291, 294, 295, 299, 301, 320, 323, 324, 325, 326, 327, 330, 332, 334, 353, 356, 357, 358, 359, 360, 363, 365, 367, 371, 428, 429, 458, 460, 464, 465, 467, 470, 472, 473, 475, 487, 516, 616, 617, 618, 624, 625, 698], "initi": [20, 36, 37, 38, 42, 64, 65, 66, 67, 92, 93, 94, 95, 129, 168, 169, 179, 214, 275, 304, 337, 394, 479, 480, 481, 505, 506, 507, 508, 533, 534, 535, 536, 618, 622, 624, 677], "dic": [23, 32, 46, 47, 75, 394, 475, 487, 488, 516], "colormap": [24, 213, 228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 371, 390, 617, 618, 624, 635, 648, 655, 669, 675, 676, 696, 700], "select": [25, 51, 60, 89, 170, 436, 439, 440, 442, 444, 492, 501, 530, 614, 617, 620, 624, 627, 677], "0": [25, 34, 46, 51, 52, 53, 55, 56, 57, 58, 59, 75, 124, 127, 129, 156, 159, 162, 163, 165, 166, 168, 169, 171, 172, 173, 174, 175, 179, 206, 209, 210, 211, 212, 214, 227, 228, 235, 238, 239, 240, 241, 242, 255, 270, 275, 288, 289, 296, 299, 300, 301, 302, 304, 317, 318, 327, 328, 329, 332, 333, 334, 335, 337, 350, 351, 360, 361, 362, 365, 366, 367, 368, 386, 390, 418, 426, 427, 428, 429, 432, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 453, 454, 455, 457, 461, 462, 463, 464, 467, 469, 470, 472, 473, 477, 487, 492, 493, 494, 496, 497, 498, 499, 500, 516, 567, 584, 592, 600, 612, 614, 615, 616, 617, 618, 620, 621, 622, 625, 627, 628, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699], "limit": [25, 168, 169, 173, 174, 175, 209, 210, 211, 212, 230, 243, 267, 291, 303, 320, 336, 353, 369, 371, 380, 391, 426, 427, 463, 608, 617, 618, 621, 624, 644, 645, 646, 652, 653, 671, 693], "sweep": [25, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 144, 156, 168, 169, 170, 172, 173, 194, 206, 210, 211, 216, 218, 227, 228, 230, 235, 239, 240, 241, 277, 279, 288, 289, 291, 296, 300, 301, 306, 308, 317, 318, 320, 328, 329, 333, 334, 339, 341, 350, 351, 353, 361, 362, 366, 367, 382, 383, 384, 386, 418, 426, 427, 433, 439, 442, 447, 472, 487, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 509, 510, 511, 512, 513, 514, 515, 516, 529, 530, 531, 532, 537, 538, 539, 540, 541, 542, 543, 564, 565, 585, 586, 592, 614, 615, 617, 618, 620, 621, 622, 624, 632, 635, 637, 642, 643, 647, 663, 664, 666, 671, 672, 674, 675, 677, 679, 683, 691, 694, 695, 696], "get": [25, 160, 176, 245, 246, 247, 266, 377, 394, 404, 414, 418, 614, 615, 617, 618, 620, 621, 624, 638, 639, 663, 664, 671, 674, 675, 677, 689, 691, 694, 695, 697, 699, 701], "relat": [25, 164, 213, 391, 431, 446, 451, 454, 455, 456, 457, 464, 469, 583, 617, 624, 625, 674, 675, 687, 697, 698], "instac": 25, "nyquist": [25, 59, 168, 169, 170, 433, 447, 500, 582, 624, 677, 683, 691, 695], "int": [25, 32, 34, 46, 52, 53, 55, 56, 57, 58, 59, 75, 144, 156, 159, 164, 165, 168, 169, 171, 172, 174, 175, 194, 206, 210, 216, 217, 218, 227, 231, 235, 236, 238, 239, 240, 248, 249, 250, 251, 253, 255, 262, 263, 264, 265, 267, 270, 277, 278, 279, 288, 292, 296, 297, 299, 300, 306, 307, 308, 317, 321, 328, 329, 330, 332, 333, 339, 340, 341, 350, 354, 361, 362, 363, 365, 366, 371, 390, 426, 427, 429, 433, 436, 438, 439, 440, 442, 446, 447, 457, 463, 465, 472, 475, 477, 487, 493, 494, 496, 497, 498, 499, 500, 516, 564, 565, 566, 567, 582, 583, 584, 593, 595, 610, 616, 618, 624, 625, 698], "consid": [25, 162, 171, 172, 370, 426, 427, 445, 446, 457, 584, 585, 586, 592, 593, 600, 644, 674, 678], "vmin": [25, 228, 230, 235, 238, 239, 240, 241, 253, 255, 257, 259, 260, 270, 272, 274, 289, 291, 296, 299, 300, 301, 318, 320, 328, 329, 332, 333, 334, 351, 353, 361, 362, 365, 366, 367, 371, 390, 614, 615, 616, 617, 618, 620, 621, 622, 624, 630, 632, 637, 639, 640, 643, 646, 649, 650, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 677, 683, 684, 685, 690, 691, 693, 694, 700], "vmax": [25, 228, 230, 235, 238, 239, 240, 241, 253, 255, 257, 259, 260, 270, 272, 274, 289, 291, 296, 299, 300, 301, 318, 320, 328, 329, 332, 333, 334, 351, 353, 361, 362, 365, 366, 367, 371, 390, 614, 615, 616, 617, 618, 620, 621, 622, 624, 630, 632, 637, 639, 640, 643, 646, 649, 650, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 677, 683, 684, 685, 690, 691, 693, 694, 700], "2": [25, 120, 124, 168, 170, 171, 172, 210, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 253, 254, 255, 257, 259, 269, 270, 272, 274, 289, 291, 294, 295, 296, 297, 298, 299, 300, 301, 303, 318, 320, 323, 324, 328, 331, 332, 333, 334, 336, 351, 353, 356, 357, 361, 362, 364, 365, 366, 367, 369, 382, 383, 384, 386, 402, 413, 418, 425, 426, 427, 429, 433, 435, 437, 440, 445, 446, 448, 457, 462, 463, 472, 563, 567, 582, 597, 612, 614, 616, 617, 618, 620, 622, 625, 628, 631, 633, 643, 644, 649, 651, 652, 654, 659, 660, 663, 664, 667, 671, 672, 674, 676, 677, 678, 679, 683, 687, 689, 690, 691, 693, 694, 695, 698, 699], "tuplet": 25, "minimun": 25, "maximun": 25, "teoric": 25, "copi": [26, 30, 32, 48, 49, 51, 52, 53, 55, 394, 429, 475, 489, 490, 492, 493, 494, 496, 611, 617, 623, 624, 631, 675, 690], "field_map": 26, "anoth": [26, 418, 436, 439, 440, 442, 444, 597, 617, 618, 624, 643, 689, 694, 697, 701], "fill": [28, 162, 163, 164, 469, 618, 622, 624, 675, 689, 690], "empti": [29, 402, 413, 464, 465, 561, 563, 566, 615, 624, 689], "control": [30, 159, 160, 165, 168, 386, 388, 389, 429, 462, 463, 620, 621, 622, 671, 693], "singl": [30, 169, 170, 171, 172, 233, 234, 236, 238, 294, 295, 297, 299, 323, 324, 330, 332, 356, 357, 363, 365, 390, 429, 569, 592, 611, 614, 617, 618, 620, 624, 625, 635, 637, 642, 643, 647, 672, 696, 698], "self": [30, 174, 175, 617, 618, 625, 690, 693, 698], "descrip": 30, "exampl": [30, 48, 129, 179, 228, 235, 238, 239, 240, 241, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 394, 418, 422, 423, 424, 428, 429, 470, 472, 485, 489, 592, 614, 615, 616, 617, 618, 619, 621, 622, 624, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 672, 673, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 689, 691, 694, 695, 696, 700, 701], "default_config": 30, "modifi": [30, 46, 75, 171, 487, 516, 615, 624, 625, 635, 648, 669, 696, 698], "environment": [30, 614, 615, 687, 697], "variabl": [30, 32, 40, 41, 42, 46, 56, 75, 161, 214, 244, 261, 275, 304, 337, 388, 389, 418, 426, 451, 458, 462, 463, 466, 467, 475, 483, 484, 487, 497, 516, 593, 614, 616, 617, 621, 624, 637, 643, 671, 672, 674, 675, 677, 687, 689, 690, 695, 697], "pyart_config": 30, "point": [30, 32, 34, 48, 125, 162, 163, 164, 165, 175, 231, 236, 253, 254, 269, 292, 297, 304, 321, 326, 327, 330, 354, 359, 360, 363, 380, 381, 384, 386, 390, 425, 428, 429, 436, 439, 440, 442, 444, 446, 448, 457, 469, 475, 477, 489, 563, 584, 593, 596, 600, 611, 614, 616, 618, 620, 624, 627, 633, 635, 652, 660, 670, 671, 674, 678, 680, 683, 687, 691, 693, 695, 696], "new": [30, 48, 49, 51, 134, 136, 144, 151, 156, 171, 184, 186, 194, 201, 206, 436, 439, 440, 442, 443, 444, 449, 461, 467, 472, 489, 490, 492, 597, 608, 620, 621, 624, 625, 627, 628, 631, 643, 653, 672, 675, 676, 683, 687, 690, 691, 698, 701], "execut": [30, 624, 634, 641, 647, 669, 680, 681, 686, 696], "full": [30, 63, 171, 172, 386, 504, 620, 622, 624, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685], "permiss": 30, "secur": 30, "do": [30, 46, 75, 168, 173, 210, 211, 390, 391, 487, 516, 618, 620, 621, 622, 624, 625, 639, 674, 675, 689, 690, 691, 693, 694, 697, 698, 701], "un": 30, "trust": 30, "method": [30, 32, 48, 55, 57, 58, 129, 134, 136, 144, 151, 156, 162, 164, 174, 175, 179, 184, 186, 194, 201, 206, 240, 253, 391, 392, 394, 405, 407, 415, 426, 427, 428, 445, 457, 458, 463, 464, 465, 472, 475, 489, 496, 498, 499, 592, 593, 612, 617, 618, 624, 625, 627, 630, 640, 658, 671, 675, 678, 683, 684, 685, 687, 694, 698, 700], "chang": [30, 32, 46, 48, 52, 53, 55, 57, 75, 145, 146, 168, 195, 196, 385, 394, 475, 485, 487, 489, 493, 494, 496, 498, 516, 577, 614, 616, 618, 621, 624, 625, 626, 627, 628, 671, 674, 675, 677, 690, 693, 695, 697, 698, 700], "home": [30, 620, 622, 625, 698, 701], "make": [30, 32, 475, 563, 567, 568, 570, 571, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 628, 643, 654, 663, 671, 674, 683, 687, 689, 690, 697, 698, 701], "adjust": [30, 124, 243, 303, 336, 369, 445, 618, 624, 650, 655, 663, 675], "login": [30, 622], "": [30, 32, 46, 59, 63, 75, 120, 121, 124, 127, 169, 170, 174, 175, 216, 218, 228, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 277, 279, 289, 296, 300, 301, 306, 308, 318, 328, 333, 334, 339, 341, 351, 361, 366, 367, 371, 399, 400, 406, 410, 411, 416, 418, 420, 425, 435, 439, 446, 448, 450, 451, 457, 459, 460, 463, 464, 465, 467, 469, 473, 475, 487, 500, 504, 516, 593, 597, 614, 615, 616, 617, 618, 620, 621, 622, 624, 626, 627, 631, 637, 638, 639, 643, 650, 653, 654, 655, 664, 671, 672, 674, 675, 677, 678, 679, 683, 687, 689, 690, 691, 693, 694, 695, 699, 700], "also": [30, 46, 75, 134, 184, 213, 229, 252, 268, 290, 319, 352, 383, 384, 388, 390, 392, 404, 414, 418, 426, 446, 457, 487, 516, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 637, 643, 671, 674, 675, 687, 689, 693, 695, 697, 698, 699, 701], "shell": 30, "session": 30, "modif": [30, 48, 489, 624], "last": [30, 46, 75, 168, 228, 229, 235, 239, 240, 241, 252, 257, 259, 261, 268, 270, 272, 274, 289, 290, 296, 300, 301, 318, 319, 328, 329, 333, 334, 337, 351, 352, 361, 362, 366, 367, 487, 516, 592, 617, 618, 620, 623, 624, 645, 653, 675, 695], "end": [30, 54, 62, 70, 74, 88, 91, 98, 102, 139, 162, 163, 164, 169, 170, 175, 189, 253, 495, 503, 511, 515, 529, 532, 539, 543, 614, 616, 617, 618, 620, 621, 622, 624, 625, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 687, 698], "interact": [31, 614, 617], "weather": [31, 120, 168, 425, 435, 436, 440, 463, 616, 618, 621, 624, 625, 637, 638, 650, 687, 689, 690, 691, 693, 694, 695, 698], "time": [32, 40, 41, 46, 75, 160, 165, 168, 216, 218, 228, 230, 235, 239, 240, 241, 277, 279, 289, 291, 296, 300, 301, 306, 308, 318, 320, 328, 329, 333, 334, 339, 341, 351, 353, 361, 362, 366, 367, 375, 376, 386, 388, 389, 418, 421, 429, 436, 439, 440, 442, 443, 444, 445, 458, 460, 475, 483, 484, 487, 516, 587, 590, 614, 615, 616, 618, 620, 622, 624, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 689, 695, 701], "origin_latitud": [32, 475], "origin_longitud": [32, 475], "origin_altitud": [32, 475], "y": [32, 38, 40, 58, 66, 94, 120, 121, 122, 123, 124, 125, 126, 127, 214, 216, 225, 228, 230, 233, 235, 238, 239, 240, 241, 243, 253, 255, 257, 259, 270, 272, 274, 275, 277, 286, 289, 291, 294, 296, 299, 300, 301, 303, 304, 306, 315, 318, 320, 323, 326, 328, 332, 333, 334, 336, 337, 339, 348, 351, 353, 356, 359, 361, 365, 366, 367, 369, 418, 422, 423, 424, 425, 426, 427, 428, 429, 435, 446, 457, 460, 461, 469, 475, 481, 483, 499, 507, 535, 563, 614, 616, 617, 618, 621, 622, 628, 643, 652, 653, 654, 663, 664, 671, 672, 674, 675, 678], "z": [32, 38, 40, 46, 58, 66, 75, 94, 120, 121, 122, 162, 164, 174, 175, 226, 287, 316, 349, 371, 380, 390, 391, 422, 423, 424, 425, 427, 428, 429, 431, 434, 445, 446, 451, 454, 455, 456, 457, 460, 475, 481, 483, 487, 499, 507, 516, 535, 563, 621, 630, 644, 661, 663, 664, 674, 675, 677, 678, 690], "radar_latitud": [32, 475, 594, 607], "radar_longitud": [32, 475, 594, 607], "radar_altitud": [32, 475], "radar_tim": [32, 475], "radar_nam": [32, 371, 475], "store": [32, 46, 75, 168, 169, 170, 394, 429, 434, 436, 439, 440, 442, 443, 444, 470, 475, 487, 516, 614, 616, 618, 622, 624, 637, 672, 687, 690, 693, 695, 701], "rectilinear": [32, 475], "cartesian": [32, 34, 40, 46, 75, 120, 121, 122, 123, 124, 125, 126, 127, 380, 417, 418, 425, 428, 429, 475, 477, 483, 487, 516, 635, 642, 647, 652, 653, 687, 688, 696], "coordin": [32, 34, 40, 46, 57, 75, 120, 121, 122, 123, 124, 125, 126, 127, 228, 235, 239, 240, 241, 257, 259, 270, 272, 274, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 371, 389, 417, 418, 420, 425, 429, 443, 448, 475, 477, 483, 487, 498, 516, 563, 582, 614, 616, 617, 618, 624, 629, 635, 639, 642, 643, 644, 645, 646, 672, 687, 693, 695], "section": [32, 46, 48, 75, 228, 253, 289, 318, 351, 427, 429, 475, 487, 489, 516, 585, 586, 614, 618, 619, 623, 624, 625, 635, 648, 669, 671, 674, 675, 687, 696, 698], "To": [32, 48, 173, 209, 210, 211, 212, 388, 389, 391, 475, 489, 611, 616, 621, 622, 625, 627, 675, 677, 687, 690, 693, 697, 698, 701], "creat": [32, 43, 46, 48, 51, 75, 168, 169, 170, 171, 173, 209, 210, 211, 212, 213, 214, 227, 241, 244, 261, 275, 288, 301, 304, 317, 329, 334, 337, 350, 362, 367, 371, 383, 388, 389, 390, 391, 392, 428, 429, 436, 439, 440, 442, 443, 444, 447, 467, 473, 475, 485, 487, 489, 492, 516, 605, 606, 608, 614, 618, 620, 624, 625, 630, 631, 632, 635, 638, 639, 643, 645, 646, 648, 649, 650, 653, 654, 668, 669, 670, 674, 675, 680, 685, 687, 688, 690, 693, 696, 698], "legaci": [32, 434, 475], "from_legacy_paramet": [32, 475], "ax": [32, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 252, 253, 254, 255, 257, 259, 267, 268, 269, 270, 272, 274, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362, 364, 365, 366, 367, 368, 369, 422, 423, 424, 446, 457, 461, 469, 475, 614, 615, 616, 617, 618, 620, 621, 622, 624, 630, 632, 633, 637, 643, 644, 645, 646, 649, 650, 652, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 667, 671, 672, 673, 674, 675, 676, 677, 679, 683, 691], "moment": [32, 40, 46, 75, 118, 161, 167, 168, 169, 170, 173, 210, 211, 382, 383, 384, 429, 468, 475, 483, 487, 516, 559, 593, 617, 624, 648, 669, 687, 694, 696], "describ": [32, 46, 75, 173, 209, 210, 211, 212, 254, 269, 457, 475, 487, 516, 620, 674, 675], "geograph": [32, 46, 57, 75, 123, 124, 125, 126, 127, 304, 329, 337, 362, 389, 429, 475, 487, 498, 516, 618, 687], "origin": [32, 40, 168, 169, 170, 214, 275, 304, 337, 386, 388, 389, 394, 396, 425, 429, 457, 470, 475, 483, 585, 586, 614, 615, 616, 618, 624, 625, 631, 643, 644, 645, 646, 671, 673, 674, 675, 698], "distanc": [32, 40, 58, 120, 121, 122, 228, 239, 289, 300, 318, 333, 351, 366, 418, 419, 422, 423, 424, 426, 427, 428, 429, 436, 438, 442, 460, 462, 465, 475, 483, 499, 583, 585, 586, 594, 595, 596, 607, 614, 615, 616, 643, 656, 661, 662, 663], "axi": [32, 40, 46, 75, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 252, 253, 254, 255, 257, 259, 267, 268, 269, 270, 272, 274, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 318, 319, 320, 321, 322, 323, 324, 328, 329, 331, 332, 333, 334, 336, 351, 352, 353, 354, 355, 356, 357, 361, 362, 364, 365, 366, 367, 369, 380, 390, 475, 483, 487, 516, 584, 614, 617, 618, 622, 652, 664, 671, 674, 679, 695], "dimension": [32, 40, 168, 170, 425, 448, 457, 469, 475, 483, 643, 671, 674, 675, 678], "space": [32, 46, 75, 125, 230, 291, 320, 353, 391, 429, 445, 446, 457, 460, 475, 487, 516, 614, 617, 674, 689], "along": [32, 161, 169, 172, 253, 256, 257, 258, 259, 271, 272, 273, 274, 443, 475, 583, 584, 585, 586, 595, 596, 608, 610, 616, 617, 618, 624, 674, 683], "three": [32, 170, 173, 211, 390, 448, 457, 469, 475, 617, 627, 671, 674, 675, 678], "repeat": [32, 475], "throughout": [32, 475, 671], "nz": [32, 475], "nx": [32, 475], "ny": [32, 475], "transform": [32, 46, 75, 123, 124, 125, 126, 127, 233, 240, 294, 304, 323, 337, 356, 362, 389, 429, 445, 462, 475, 487, 516, 616, 618, 621, 624, 650, 674, 675], "proj": [32, 46, 75, 123, 125, 126, 267, 337, 475, 487, 516, 624], "pyart_aeqd": [32, 46, 75, 123, 125, 126, 475, 487, 516], "nativ": [32, 46, 75, 123, 125, 126, 374, 429, 434, 475, 487, 516, 624], "azimuth": [32, 46, 52, 56, 58, 68, 75, 96, 120, 121, 122, 123, 124, 125, 126, 127, 214, 215, 228, 230, 233, 235, 239, 240, 241, 257, 259, 270, 272, 274, 275, 276, 289, 291, 294, 296, 300, 301, 304, 305, 318, 320, 323, 328, 329, 333, 334, 337, 338, 351, 353, 356, 361, 362, 366, 367, 386, 390, 427, 434, 436, 442, 443, 465, 472, 473, 475, 487, 493, 497, 499, 509, 516, 537, 583, 585, 586, 592, 594, 595, 611, 617, 618, 624, 625, 666, 668, 672, 678, 689, 695, 698], "equidist": [32, 46, 75, 123, 124, 125, 126, 127, 233, 294, 323, 356, 362, 390, 429, 475, 487, 516, 618], "pyproj": [32, 46, 75, 123, 125, 126, 475, 487, 516, 624, 697], "projparam": [32, 35, 46, 75, 123, 125, 126, 475, 478, 487, 516], "special": [32, 46, 75, 475, 487, 516, 618], "_include_lon_0_lat_0": [32, 46, 75, 475, 487, 516], "remov": [32, 46, 57, 58, 75, 162, 163, 164, 168, 173, 209, 210, 211, 212, 228, 235, 239, 240, 241, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 395, 401, 402, 408, 412, 413, 446, 448, 457, 475, 487, 498, 499, 516, 616, 618, 621, 622, 624, 625, 630, 645, 653, 654, 663, 671, 674, 691, 694, 698, 700], "interpret": [32, 46, 75, 169, 170, 389, 437, 475, 487, 516, 598, 599, 618, 671], "longitud": [32, 34, 37, 40, 42, 46, 57, 75, 123, 124, 125, 127, 214, 233, 234, 253, 254, 255, 256, 258, 259, 267, 269, 271, 273, 274, 275, 294, 295, 304, 323, 324, 325, 327, 329, 337, 356, 357, 358, 360, 362, 371, 429, 436, 442, 444, 475, 477, 480, 483, 487, 498, 516, 583, 594, 595, 596, 607, 614, 616, 617, 618, 621, 622, 635, 636, 641, 652, 660, 667, 672, 674, 675, 678, 689, 690, 695, 696], "latitud": [32, 34, 37, 40, 42, 46, 57, 75, 123, 124, 125, 127, 214, 233, 234, 253, 254, 255, 256, 257, 258, 267, 269, 271, 272, 273, 275, 294, 295, 304, 323, 324, 325, 327, 329, 337, 356, 357, 358, 360, 362, 371, 429, 436, 442, 444, 475, 477, 480, 483, 487, 498, 516, 583, 594, 595, 596, 607, 614, 616, 617, 618, 621, 622, 635, 636, 641, 652, 660, 667, 672, 674, 675, 678, 689, 690, 695, 696], "ad": [32, 46, 48, 75, 172, 174, 175, 261, 327, 360, 426, 428, 445, 446, 457, 475, 487, 489, 516, 567, 615, 617, 620, 622, 624, 625, 663, 664, 689, 690, 697, 698], "lon_0": [32, 46, 75, 124, 127, 329, 362, 475, 487, 516, 660], "lat_0": [32, 46, 75, 124, 127, 329, 362, 475, 487, 516, 660], "get_projparam": [32, 475], "evalu": [32, 394, 396, 452, 475, 620, 624], "locat": [32, 34, 46, 56, 57, 58, 75, 214, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 252, 253, 255, 257, 259, 267, 268, 270, 272, 274, 275, 289, 290, 291, 294, 295, 296, 297, 298, 300, 301, 304, 318, 319, 320, 323, 324, 326, 328, 329, 330, 331, 333, 334, 337, 351, 352, 353, 356, 357, 359, 361, 362, 363, 364, 366, 367, 382, 383, 385, 391, 418, 425, 428, 429, 475, 477, 487, 497, 498, 499, 516, 563, 577, 583, 594, 595, 596, 614, 615, 616, 618, 620, 624, 625, 640, 658, 660, 672, 678, 683, 684, 685, 687, 693, 697, 698], "up": [32, 46, 75, 134, 136, 144, 151, 156, 163, 164, 184, 186, 194, 201, 206, 426, 427, 431, 434, 440, 448, 451, 454, 455, 466, 475, 487, 516, 582, 615, 616, 620, 622, 623, 624, 627, 633, 651, 671, 674, 691, 695, 699], "start": [32, 46, 61, 62, 73, 74, 75, 90, 91, 101, 102, 253, 386, 392, 443, 458, 475, 487, 502, 503, 514, 515, 516, 531, 532, 542, 543, 588, 614, 615, 616, 617, 618, 620, 621, 622, 625, 637, 638, 650, 652, 663, 664, 687, 689, 698, 699], "collect": [32, 144, 156, 194, 206, 376, 382, 383, 384, 386, 417, 428, 429, 475, 617, 618, 625, 637, 638, 657, 672, 687, 698, 699, 701], "nradar": [32, 475], "whose": [32, 385, 424, 475, 614], "wa": [32, 57, 58, 144, 169, 170, 194, 228, 235, 239, 240, 241, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 475, 498, 499, 597, 614, 616, 618, 620, 621, 622, 624, 687, 701], "projection_proj": [32, 475], "instanc": [32, 43, 49, 168, 169, 170, 228, 235, 238, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 391, 392, 434, 475, 490, 597, 601, 606, 616, 618, 624], "valueerror": [32, 33, 47, 48, 475, 476, 488, 489, 618, 678], "point_z": [32, 389, 475, 671], "point_x": [32, 389, 475], "point_i": [32, 389, 475], "func": [32, 475, 617, 624], "init_point_x_y_z": [32, 475], "reset": [32, 37, 38, 46, 57, 65, 66, 67, 75, 93, 94, 95, 475, 480, 481, 487, 498, 506, 507, 508, 516, 534, 535, 536, 694], "point_latitud": [32, 389, 475], "point_longitud": [32, 389, 475], "perform": [32, 46, 57, 58, 59, 75, 134, 136, 144, 151, 156, 167, 168, 169, 170, 172, 184, 186, 194, 201, 206, 228, 233, 235, 238, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 294, 296, 299, 300, 301, 318, 323, 328, 329, 332, 333, 334, 337, 351, 356, 361, 362, 365, 366, 367, 382, 385, 390, 426, 427, 436, 439, 440, 442, 457, 463, 475, 487, 498, 499, 500, 516, 611, 617, 618, 629, 630, 632, 635, 645, 646, 652, 653, 687], "invers": [32, 46, 75, 472, 475, 487, 516, 614], "rel": [32, 46, 75, 163, 209, 240, 327, 360, 429, 470, 475, 487, 516, 614, 624, 625, 675, 695, 698], "init_point_longitude_latitud": [32, 475], "point_altitud": [32, 36, 389, 475, 479], "init_point_altitud": [32, 475], "init": [32, 244, 261, 394, 475, 594, 622, 624], "field_dict": [33, 462, 476], "replace_exist": [33, 47, 48, 49, 476, 488, 489, 490, 620, 624, 625, 674, 675, 677, 683, 690, 691, 698], "add": [33, 47, 48, 171, 175, 228, 230, 235, 238, 239, 240, 241, 253, 254, 255, 257, 259, 267, 269, 270, 272, 274, 289, 291, 296, 299, 300, 301, 318, 320, 328, 329, 332, 333, 334, 351, 353, 361, 362, 365, 366, 367, 371, 436, 439, 440, 442, 444, 462, 476, 488, 489, 615, 616, 617, 621, 624, 625, 643, 650, 652, 654, 663, 664, 666, 672, 674, 675, 676, 677, 683, 691, 697, 698, 700, 701], "replac": [33, 47, 48, 49, 134, 136, 144, 151, 156, 169, 170, 184, 186, 194, 201, 206, 476, 488, 489, 490, 613, 621, 622, 624], "overwrit": [33, 476, 592, 631], "alreadi": [33, 47, 48, 476, 488, 489], "level": [34, 40, 42, 43, 46, 63, 75, 163, 164, 248, 249, 250, 251, 255, 257, 259, 262, 263, 264, 265, 270, 272, 274, 382, 383, 384, 390, 391, 460, 469, 472, 477, 483, 487, 504, 516, 593, 614, 616, 617, 624, 625, 663, 664, 667, 671, 673, 678, 684, 687, 693, 695, 698, 700], "height": [34, 40, 42, 43, 159, 160, 161, 163, 164, 165, 176, 209, 255, 270, 329, 362, 426, 427, 429, 432, 436, 439, 440, 442, 444, 446, 447, 448, 457, 458, 462, 466, 469, 472, 473, 477, 483, 606, 614, 617, 618, 620, 624, 625, 649, 650, 661, 671, 672, 678, 679, 694, 698], "determin": [34, 46, 75, 159, 161, 168, 169, 170, 253, 255, 257, 259, 267, 270, 272, 274, 329, 362, 370, 371, 374, 382, 383, 386, 391, 392, 433, 446, 447, 450, 451, 452, 454, 455, 457, 469, 472, 477, 487, 516, 592, 593, 600, 606, 609, 617, 618, 624, 625, 674, 683, 698], "same": [34, 46, 48, 56, 57, 58, 75, 124, 127, 136, 151, 168, 186, 201, 240, 329, 362, 380, 386, 390, 391, 392, 429, 446, 447, 448, 457, 460, 466, 470, 477, 487, 489, 497, 498, 499, 516, 567, 592, 594, 607, 611, 614, 618, 621, 622, 625, 637, 663, 664, 671, 674, 675, 689, 694, 698, 701], "interpol": [34, 58, 121, 125, 228, 235, 239, 240, 241, 253, 257, 259, 270, 272, 274, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 376, 382, 428, 429, 436, 439, 440, 442, 444, 458, 465, 466, 472, 477, 499, 606, 618, 624, 625, 674, 675, 678, 693, 698], "extrapol": [34, 121, 125, 228, 235, 239, 240, 241, 257, 259, 270, 272, 274, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 477, 618], "boundari": [34, 121, 125, 172, 246, 247, 267, 362, 465, 477, 567, 618, 676], "center": [34, 46, 58, 75, 120, 121, 122, 124, 125, 127, 169, 228, 233, 235, 239, 240, 241, 254, 256, 257, 258, 259, 269, 270, 271, 272, 273, 274, 289, 294, 296, 300, 301, 304, 318, 323, 328, 329, 333, 334, 351, 356, 361, 362, 366, 367, 382, 384, 422, 423, 424, 436, 439, 440, 442, 444, 477, 487, 499, 516, 563, 567, 582, 614, 616, 617, 618, 620, 621, 650, 683, 691, 695], "2d": [34, 56, 57, 58, 121, 380, 390, 462, 465, 477, 497, 498, 499, 582, 614, 618, 631, 635, 642, 643, 647, 671, 695, 696], "point_": [37, 38, 480, 481], "properti": [39, 44, 45, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 145, 146, 195, 196, 419, 421, 472, 482, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 614, 618, 625, 698], "xarrai": [40, 244, 253, 255, 371, 426, 427, 483, 583, 596, 614, 624, 640, 667, 672, 678, 683, 687, 697], "netcdf4": [41, 383, 388, 389, 484, 614, 615, 624, 661, 687, 689, 697, 701], "arm_time_vari": [41, 388, 389, 484], "arm_alt_lat_lon_vari": [41, 389, 484], "save": [41, 216, 228, 230, 235, 239, 240, 241, 248, 262, 277, 289, 291, 296, 300, 301, 306, 318, 320, 328, 329, 333, 334, 339, 351, 353, 361, 362, 366, 367, 371, 389, 391, 484, 618, 620, 621, 678, 687, 688], "netcdf4_class": [41, 388, 389, 484], "netcdf3_class": [41, 388, 389, 484], "netcdf3_64bit": [41, 388, 389, 484], "base_tim": [41, 388, 389, 484, 617, 672, 678], "time_offset": [41, 388, 389, 484, 617, 672], "alt": [41, 57, 389, 484, 498, 617, 618, 622, 624], "lat": [41, 57, 123, 124, 125, 126, 127, 253, 254, 255, 256, 257, 258, 259, 269, 271, 272, 273, 274, 325, 327, 329, 358, 360, 389, 390, 436, 442, 444, 484, 498, 614, 617, 618, 621, 622, 624, 652, 654, 667, 693], "lon": [41, 57, 123, 124, 125, 126, 127, 253, 254, 255, 256, 257, 258, 259, 269, 271, 272, 273, 274, 325, 327, 329, 358, 360, 389, 390, 436, 442, 444, 484, 498, 614, 617, 618, 621, 622, 624, 654, 667], "speed": [42, 43, 429, 470, 472, 473, 582, 617, 618, 620, 624, 625, 679, 698], "direct": [42, 63, 386, 463, 470, 472, 473, 504, 624, 625, 679, 698], "horizont": [42, 43, 44, 45, 46, 75, 162, 166, 167, 168, 228, 229, 230, 235, 239, 240, 241, 252, 253, 255, 257, 259, 268, 270, 272, 274, 289, 290, 291, 296, 300, 301, 318, 319, 320, 328, 329, 333, 334, 351, 352, 353, 361, 362, 366, 367, 375, 376, 426, 427, 447, 472, 487, 516, 606, 616, 617, 620, 624, 625, 654, 664, 678, 684, 695, 698, 700], "wind": [42, 43, 44, 45, 168, 169, 375, 376, 472, 473, 606, 616, 617, 618, 620, 624, 625, 679, 698], "profil": [42, 161, 168, 375, 376, 436, 439, 440, 442, 444, 458, 464, 465, 466, 467, 583, 606, 624, 625, 632, 635, 670, 671, 678, 680, 696, 698], "1d": [42, 43, 121, 125, 462, 584, 614, 624, 695], "meter": [42, 43, 44, 45, 57, 58, 59, 120, 121, 122, 123, 124, 125, 126, 127, 161, 214, 275, 304, 326, 329, 337, 359, 362, 418, 419, 421, 422, 423, 424, 425, 428, 429, 432, 446, 447, 457, 460, 463, 466, 469, 472, 498, 499, 500, 563, 594, 607, 617, 618, 624, 625, 643, 649, 678, 679, 693, 695, 698], "abov": [42, 43, 46, 48, 75, 131, 132, 147, 162, 163, 164, 168, 171, 172, 173, 174, 175, 181, 182, 197, 209, 210, 211, 212, 233, 234, 294, 295, 323, 324, 356, 357, 370, 429, 432, 445, 446, 457, 472, 487, 489, 516, 583, 592, 593, 595, 596, 614, 615, 616, 617, 624, 625, 627, 635, 643, 662, 664, 670, 671, 679, 680, 683, 687, 689, 691, 696, 698, 701], "sea": [42, 43, 46, 75, 472, 487, 516, 617, 624, 625, 698], "were": [42, 43, 134, 136, 144, 184, 186, 194, 472, 616, 618, 620, 621, 625, 698, 700], "sampl": [42, 43, 160, 165, 472, 473, 474, 568, 570, 571, 593, 614, 616, 617, 622, 624, 625, 637, 638, 639, 649, 650, 673, 676, 679, 687, 698, 700], "per": [42, 43, 44, 45, 59, 168, 371, 429, 472, 500, 564, 565, 566, 625, 698], "second": [42, 43, 44, 45, 48, 59, 120, 168, 386, 394, 418, 465, 472, 489, 500, 592, 603, 604, 614, 617, 620, 625, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 694, 695, 698], "north": [42, 46, 75, 253, 255, 267, 329, 362, 470, 487, 516, 583, 596, 614, 617, 618, 656, 695], "east": [42, 228, 239, 253, 289, 300, 318, 333, 351, 366, 583, 596, 614, 617, 618, 656], "u_wind": [42, 43, 472, 473, 625, 679, 698], "compon": [42, 43, 44, 45, 445, 470, 617, 625, 644, 698], "v_wind": [42, 43, 472, 473, 625, 679, 698], "classmethod": 43, "_rang": [46, 75, 438, 487, 516], "scan_typ": [46, 75, 214, 227, 275, 288, 304, 317, 337, 350, 487, 516, 622, 695], "sweep_numb": [46, 75, 487, 516, 617, 624, 661, 689, 695], "sweep_mod": [46, 75, 377, 487, 516, 617, 624, 689, 695], "fixed_angl": [46, 75, 214, 275, 304, 337, 487, 516, 617, 622, 624, 661, 662, 666, 689, 695], "sweep_start_ray_index": [46, 75, 487, 516, 617, 689, 695], "sweep_end_ray_index": [46, 75, 487, 516, 617, 689, 695], "elev": [46, 53, 58, 69, 75, 97, 120, 121, 122, 214, 228, 230, 235, 239, 240, 241, 257, 259, 270, 272, 274, 275, 289, 291, 296, 300, 301, 304, 318, 320, 328, 329, 333, 334, 337, 351, 353, 361, 362, 366, 367, 386, 426, 439, 442, 443, 465, 487, 494, 499, 510, 516, 538, 586, 592, 600, 614, 617, 618, 620, 621, 624, 643, 644, 651, 673, 689, 695], "altitude_agl": [46, 75, 487, 516, 617, 695], "target_scan_r": [46, 75, 487, 516, 624, 695], "rays_are_index": [46, 75, 487, 516], "ray_angle_r": [46, 75, 487, 516], "scan_rat": [46, 75, 392, 487, 516, 624, 695], "antenna_transit": [46, 57, 58, 75, 144, 156, 194, 206, 228, 235, 239, 240, 241, 275, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 487, 498, 499, 516, 618, 695], "instrument_paramet": [46, 75, 168, 392, 462, 487, 516, 617, 620, 677, 691, 695], "radar_calibr": [46, 75, 487, 516, 695], "rotat": [46, 75, 214, 487, 516], "tilt": [46, 75, 214, 240, 329, 362, 467, 487, 516, 618, 624, 639, 660, 667], "roll": [46, 75, 214, 386, 487, 516, 605, 610], "drift": [46, 75, 214, 487, 516], "pitch": [46, 75, 214, 487, 516], "georefs_appli": [46, 75, 487, 516], "antenna": [46, 57, 58, 75, 120, 121, 122, 144, 156, 194, 206, 209, 212, 228, 235, 239, 240, 241, 275, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 434, 443, 487, 498, 499, 516, 618, 624, 629, 635, 642, 643, 644, 645, 646, 687, 693, 695], "structur": [46, 75, 392, 445, 457, 469, 487, 516, 622, 637, 674, 675, 678, 694], "base": [46, 51, 52, 53, 55, 56, 57, 58, 59, 75, 129, 164, 168, 169, 170, 173, 179, 209, 210, 211, 212, 241, 301, 334, 367, 371, 390, 424, 428, 429, 440, 445, 446, 457, 463, 487, 492, 493, 494, 496, 497, 498, 499, 500, 516, 597, 616, 617, 618, 621, 624, 625, 629, 633, 634, 635, 637, 638, 670, 680, 683, 687, 691, 694, 695, 696, 698, 700], "global": [46, 75, 487, 516, 614, 644, 695, 697], "4": [46, 75, 120, 121, 371, 377, 380, 425, 431, 445, 462, 466, 487, 516, 614, 615, 616, 617, 621, 623, 625, 634, 637, 638, 641, 644, 646, 647, 650, 660, 661, 662, 663, 664, 666, 667, 671, 674, 675, 677, 678, 679, 683, 684, 687, 694, 698], "under": [46, 75, 168, 169, 170, 429, 470, 487, 516, 621, 624, 625, 674, 675, 687, 697, 698], "sub": [46, 75, 487, 516, 614, 624], "convent": [46, 75, 168, 487, 516, 614, 617, 618, 637, 687, 695], "meta_group": [46, 75, 487, 516, 695], "scan": [46, 75, 118, 159, 160, 161, 165, 168, 169, 170, 171, 214, 227, 228, 230, 241, 275, 288, 289, 291, 301, 304, 317, 318, 320, 334, 337, 350, 351, 353, 367, 382, 426, 434, 487, 516, 559, 564, 565, 592, 594, 600, 606, 611, 614, 615, 616, 617, 621, 624, 633, 643, 657, 658, 668, 671, 678], "ppi": [46, 75, 169, 170, 171, 172, 227, 231, 235, 288, 292, 296, 317, 321, 328, 329, 350, 354, 361, 362, 426, 427, 439, 442, 465, 487, 516, 564, 565, 569, 572, 575, 585, 586, 592, 614, 615, 618, 621, 624, 635, 642, 647, 648, 655, 667, 669, 682, 684, 686, 687, 695, 696], "rhi": [46, 75, 227, 228, 239, 288, 289, 300, 317, 318, 333, 350, 351, 366, 427, 439, 442, 465, 487, 516, 565, 573, 576, 585, 586, 592, 615, 624, 635, 648, 669, 687, 695, 696], "sector": [46, 75, 487, 516, 614, 624, 695], "multipl": [46, 75, 445, 487, 516, 615, 616, 624, 625, 635, 642, 648, 663, 669, 678, 694, 696, 698, 701], "ground": [46, 75, 434, 440, 487, 516, 617, 618, 622, 637, 638], "target": [46, 75, 390, 487, 516, 568, 570, 571, 572, 573, 574, 575, 576, 583, 594, 595, 596, 607, 617, 695], "angl": [46, 52, 53, 75, 120, 121, 122, 214, 228, 240, 275, 289, 304, 318, 337, 351, 439, 442, 443, 465, 467, 487, 493, 494, 516, 578, 579, 580, 581, 583, 585, 586, 592, 594, 595, 603, 604, 611, 614, 617, 624, 644, 666, 668, 679, 689, 695], "thr": [46, 75, 487, 516], "index": [46, 61, 75, 90, 173, 211, 241, 255, 257, 259, 270, 272, 274, 301, 334, 367, 390, 418, 434, 447, 467, 487, 502, 516, 531, 614, 616, 617, 618, 620, 621, 624, 688], "rays_per_sweep": [46, 67, 75, 95, 487, 508, 516, 536, 564, 565], "upon": [46, 75, 173, 209, 210, 211, 212, 487, 516, 616, 620, 624], "prior": [46, 48, 75, 172, 174, 175, 228, 235, 238, 239, 240, 241, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 386, 487, 489, 516, 618, 627, 631, 639, 687], "init_rays_per_sweep": [46, 75, 487, 516], "intend": [46, 75, 440, 487, 516, 621], "rate": [46, 75, 431, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 462, 487, 516, 624, 674, 675, 678], "whether": [46, 75, 134, 184, 371, 377, 425, 447, 487, 516, 617, 618, 694], "regular": [46, 75, 391, 436, 439, 440, 442, 444, 487, 516, 618, 622, 650, 671], "angular": [46, 75, 487, 516, 582, 603, 604], "resolut": [46, 75, 228, 230, 231, 235, 236, 239, 240, 241, 267, 289, 291, 292, 296, 297, 300, 301, 318, 320, 321, 328, 329, 330, 333, 334, 351, 353, 354, 361, 362, 363, 366, 367, 382, 429, 436, 439, 440, 442, 444, 445, 446, 457, 463, 469, 487, 516, 567, 616, 617, 618, 622, 639, 657, 660, 678, 683, 684, 691, 693, 694, 700], "express": [46, 75, 487, 516], "360": [46, 75, 171, 172, 330, 363, 487, 516, 592, 624, 679, 689, 695], "represent": [46, 75, 487, 516], "forbidden": [46, 75, 487, 516], "plane": [46, 75, 390, 426, 427, 487, 516, 614, 695], "180": [46, 75, 122, 124, 487, 516, 592, 614, 616, 617, 625, 675, 689, 698], "gate_z": [46, 58, 75, 487, 499, 516], "gate_x": [46, 58, 75, 487, 499, 516], "gate_i": [46, 58, 75, 487, 499, 516], "system": [46, 75, 123, 124, 125, 174, 175, 373, 382, 390, 420, 425, 487, 516, 621, 624, 625, 638, 697, 698], "assum": [46, 75, 120, 121, 168, 171, 460, 463, 465, 466, 487, 516, 592, 616, 620], "earth": [46, 75, 120, 121, 124, 127, 487, 516, 594, 607, 614, 618], "radiu": [46, 75, 120, 121, 124, 127, 422, 423, 424, 425, 428, 429, 446, 457, 469, 487, 516, 594, 607, 674, 693], "model": [46, 75, 120, 121, 169, 383, 389, 445, 487, 516, 617, 676], "init_gate_x_y_z": [46, 75, 487, 516], "gate_latitud": [46, 57, 65, 75, 93, 487, 498, 506, 516, 534, 614], "gate_longitud": [46, 57, 65, 75, 93, 487, 498, 506, 516, 534, 614, 689], "init_gate_longitude_latitud": [46, 75, 487, 516, 689], "gate_altitud": [46, 57, 64, 75, 92, 487, 498, 505, 516, 533, 614], "init_gate_altitud": [46, 75, 487, 516, 689], "actual": [46, 75, 386, 390, 425, 445, 487, 516, 621, 701], "flag": [46, 75, 168, 275, 386, 464, 465, 469, 487, 516, 600, 614, 622, 624, 701], "transit": [46, 57, 58, 75, 144, 156, 173, 194, 206, 210, 211, 228, 235, 239, 240, 241, 275, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 440, 442, 464, 487, 498, 499, 516, 618, 624], "ye": [46, 75, 168, 487, 516], "about": [46, 75, 487, 516, 614, 616, 622, 623, 624], "aircraft": [46, 75, 240, 386, 487, 516, 583], "longitudin": [46, 75, 240, 251, 259, 264, 265, 274, 487, 516], "vertic": [46, 75, 161, 167, 168, 228, 229, 230, 235, 239, 240, 241, 249, 252, 253, 255, 257, 259, 268, 270, 272, 274, 289, 290, 291, 296, 300, 301, 318, 319, 320, 328, 329, 333, 334, 351, 352, 353, 361, 362, 366, 367, 390, 426, 427, 436, 439, 440, 442, 444, 448, 460, 462, 467, 487, 516, 583, 600, 611, 614, 616, 621, 624, 633, 664, 671, 676, 677, 678, 679, 684, 700], "orthogon": [46, 75, 487, 516], "platform": [46, 75, 487, 516, 614, 627], "right": [46, 75, 487, 516, 616, 619, 620, 621, 622, 624, 650, 652, 671, 687], "wing": [46, 75, 487, 516], "down": [46, 75, 487, 516, 612, 616], "track": [46, 75, 487, 516, 614, 618, 621, 624], "compass": [46, 75, 487, 516], "clockwis": [46, 75, 487, 516], "nose": [46, 75, 487, 516, 624], "had": [46, 75, 391, 487, 516, 622, 624, 637, 701], "georefer": [46, 75, 487, 516], "lead": [46, 75, 487, 516, 618, 643], "centric": [46, 75, 487, 516], "avaiabl": [46, 75, 487, 516], "radar_paramet": [46, 75, 487, 516, 617], "subconvent": [46, 75, 487, 516], "calibr": [46, 75, 450, 487, 516, 617], "ngate": [46, 56, 75, 487, 497, 516, 564, 565, 566, 614, 624, 689, 695], "nrai": [46, 56, 75, 438, 487, 497, 516, 566, 595, 624, 689, 695], "nsweep": [46, 75, 487, 516, 564, 565, 644, 661, 662, 679, 695], "loos": [47, 48, 488, 489, 602], "existing_field_nam": [48, 489], "note": [48, 120, 134, 136, 144, 151, 156, 164, 168, 172, 184, 186, 194, 201, 206, 255, 329, 371, 377, 380, 381, 391, 426, 427, 429, 445, 447, 460, 462, 463, 472, 489, 592, 615, 618, 622, 624, 625, 637, 639, 644, 654, 674, 675, 677, 678, 697, 698], "made": [48, 388, 433, 489, 611, 615, 617, 618, 621, 625, 626, 698], "done": [48, 168, 172, 469, 489, 625, 627, 689, 697, 698, 701], "both": [48, 168, 173, 211, 374, 460, 461, 462, 470, 489, 614, 618, 621, 624, 625, 639, 643, 644, 646, 649, 652, 668, 675, 678, 687, 693, 694, 697, 698], "numpi": [48, 136, 151, 165, 186, 201, 489, 602, 614, 616, 617, 618, 620, 622, 624, 625, 627, 631, 643, 645, 650, 653, 655, 660, 663, 664, 666, 671, 672, 674, 675, 676, 677, 678, 679, 687, 689, 690, 691, 693, 694, 695, 697, 698, 701], "see": [48, 121, 129, 168, 179, 227, 241, 253, 256, 258, 267, 271, 273, 288, 301, 317, 329, 334, 350, 362, 367, 380, 388, 389, 429, 445, 446, 457, 460, 469, 489, 614, 616, 618, 620, 622, 624, 625, 637, 639, 650, 655, 671, 674, 675, 687, 689, 691, 693, 694, 698], "how": [48, 386, 388, 389, 489, 614, 615, 616, 617, 618, 620, 622, 624, 626, 631, 633, 637, 638, 639, 649, 650, 651, 652, 653, 654, 671, 677, 687, 690, 693, 694, 701], "reflectivity_copi": [48, 489], "gatefilt": [49, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 175, 209, 210, 211, 212, 228, 235, 238, 239, 240, 241, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 418, 428, 429, 434, 447, 463, 464, 465, 467, 472, 473, 490, 614, 616, 618, 620, 622, 624, 625, 632, 633, 643, 645, 646, 649, 652, 653, 671, 673, 683, 688, 691, 698], "updat": [49, 159, 490, 592, 615, 619, 620, 624, 625, 654, 674, 678, 687, 698], "mask": [49, 134, 136, 140, 144, 151, 155, 156, 159, 168, 169, 170, 171, 173, 184, 186, 190, 194, 201, 205, 206, 209, 210, 211, 212, 228, 235, 238, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 382, 383, 384, 390, 429, 434, 436, 439, 440, 442, 444, 447, 448, 466, 490, 567, 597, 602, 618, 622, 624, 629, 634, 635, 643, 645, 653, 671, 674, 675, 677, 683, 688, 689, 690, 695, 696], "filter": [49, 129, 134, 136, 144, 151, 156, 161, 168, 169, 170, 171, 172, 173, 228, 235, 239, 240, 241, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 418, 428, 429, 433, 447, 463, 464, 465, 490, 614, 616, 618, 620, 622, 624, 631, 632, 633, 638, 643, 645, 646, 649, 652, 653, 671, 673, 683, 691, 694], "equal": [49, 123, 125, 126, 135, 136, 142, 150, 151, 154, 159, 169, 185, 186, 192, 200, 201, 204, 362, 380, 391, 445, 469, 470, 472, 490, 592, 618, 655, 671, 674, 675, 676, 694], "condit": [49, 129, 134, 136, 144, 151, 156, 168, 179, 184, 186, 194, 201, 206, 391, 452, 490, 614, 632, 690, 694], "append": [49, 490, 620, 621, 622, 624, 678, 679], "prefix": [49, 485, 490], "check": [50, 59, 78, 169, 170, 171, 172, 385, 433, 445, 466, 491, 500, 519, 594, 607, 611, 616, 617, 620, 622, 624, 625, 627, 687, 697, 698, 699], "keyerror": [50, 78, 401, 402, 412, 413, 491, 519, 697], "array_lik": [51, 492, 599], "view": [52, 53, 55, 394, 399, 400, 406, 410, 411, 416, 447, 493, 494, 496, 614, 622, 652, 691, 693, 695], "possibl": [52, 53, 55, 386, 493, 494, 496, 593, 618, 620, 622, 624, 628, 650, 671, 674, 675, 691, 693], "underli": [52, 53, 55, 228, 235, 239, 240, 241, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 374, 493, 494, 496, 618, 687], "get_gate_x_y_z": [55, 496, 663, 664], "obtain": [55, 58, 496, 499, 622, 625, 679, 689, 698], "plot": [55, 58, 213, 214, 215, 216, 217, 218, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 436, 439, 440, 442, 444, 467, 473, 496, 499, 614, 615, 624, 629, 630, 632, 633, 634, 636, 637, 638, 639, 641, 643, 644, 645, 646, 649, 669, 670, 671, 672, 674, 675, 677, 678, 680, 682, 683, 686, 687, 689, 690, 691, 693, 694, 696], "correct": [55, 58, 179, 209, 210, 211, 212, 380, 458, 463, 496, 499, 569, 614, 616, 620, 624, 625, 628, 631, 632, 633, 634, 639, 654, 671, 676, 683, 687, 691, 696, 698], "spatial": [55, 58, 168, 496, 499, 614, 678, 693], "context": [55, 58, 496, 499, 616, 653, 672], "request": [55, 125, 382, 428, 429, 461, 496, 618, 624, 625, 626, 627, 687, 698], "area": [56, 228, 230, 235, 239, 240, 241, 242, 289, 291, 296, 300, 301, 302, 318, 320, 328, 329, 333, 334, 335, 351, 353, 361, 362, 366, 367, 368, 445, 465, 469, 497, 597, 614, 616, 618, 620, 678], "squar": [56, 433, 460, 463, 472, 497], "assumpt": [56, 463, 497], "size": [56, 164, 165, 168, 169, 171, 172, 210, 231, 292, 321, 354, 424, 426, 427, 428, 429, 433, 446, 448, 456, 457, 463, 465, 497, 567, 582, 610, 617, 654, 667, 672, 674, 675], "m": [56, 59, 122, 170, 209, 212, 216, 277, 306, 339, 425, 429, 433, 436, 438, 439, 440, 442, 443, 444, 445, 450, 451, 457, 460, 462, 463, 464, 467, 469, 497, 500, 582, 583, 597, 608, 614, 616, 617, 618, 620, 621, 622, 624, 625, 627, 633, 637, 651, 653, 655, 664, 671, 674, 675, 677, 678, 679, 683, 687, 697, 698], "reset_gate_coord": [57, 498], "filter_transit": [57, 58, 228, 235, 239, 240, 241, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 498, 499, 618], "With": [57, 58, 498, 499, 687, 688, 689], "therefor": [57, 58, 463, 498, 499, 614, 633, 691, 695], "more": [57, 58, 63, 169, 172, 390, 425, 428, 429, 434, 445, 446, 457, 469, 498, 499, 504, 585, 586, 614, 615, 616, 617, 618, 619, 622, 624, 625, 631, 643, 650, 663, 671, 678, 687, 691, 695, 698], "effici": [57, 58, 428, 445, 498, 499, 687, 691], "than": [57, 58, 159, 169, 175, 228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 445, 446, 448, 457, 463, 498, 499, 592, 597, 616, 617, 618, 622, 671, 674, 701], "through": [57, 58, 253, 451, 462, 498, 499, 617, 618, 620, 623, 625, 643, 650, 698], "No": [57, 58, 170, 228, 235, 239, 240, 241, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 390, 429, 498, 499, 618, 621], "get_field": [58, 499, 663, 664], "check_uniform": [59, 500], "lookuperror": [59, 500], "except": [59, 390, 407, 500, 618, 621, 624, 653, 678, 693], "skip": [59, 169, 170, 385, 433, 500, 616, 621, 624, 625, 698], "nyquist_veloc": [59, 169, 170, 392, 500, 617, 620, 677, 691, 695], "slice": [60, 72, 89, 100, 256, 257, 258, 259, 271, 272, 273, 274, 501, 513, 530, 541, 667, 693, 695], "_io": [63, 504], "textiowrapp": [63, 504], "encod": [63, 391, 504, 624], "utf": [63, 504], "compact": [63, 504], "c": [63, 120, 124, 127, 162, 164, 167, 168, 170, 267, 362, 436, 439, 445, 450, 452, 459, 462, 463, 464, 465, 467, 473, 504, 569, 614, 618, 620, 622, 624, 625, 643, 675, 677, 687, 690, 693, 697, 698, 701], "f": [63, 267, 362, 405, 415, 504, 614, 615, 616, 617, 618, 620, 621, 622, 638, 644, 650, 653, 661, 662, 666, 671, 674, 675, 678, 687, 701], "minim": [63, 463, 469, 504], "everyth": [63, 504, 618, 621, 625, 639, 698], "screen": [63, 504], "gate_": [66, 94, 507, 535], "iter": [68, 69, 70, 71, 72, 73, 74, 96, 97, 98, 99, 100, 101, 102, 165, 405, 415, 463, 465, 509, 510, 511, 512, 513, 514, 515, 537, 538, 539, 540, 541, 542, 543, 620, 695], "over": [70, 73, 74, 98, 101, 102, 165, 168, 169, 209, 228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 445, 446, 457, 511, 514, 515, 539, 542, 543, 593, 614, 618, 620, 621, 624, 643, 674, 675, 679, 687, 690, 695], "npulses_max": [75, 516, 566], "velocity_bin": [75, 516], "simpl": [118, 418, 559, 624, 690, 691], "vpt": [118, 161, 219, 227, 241, 280, 288, 301, 309, 317, 334, 342, 350, 367, 559, 600, 617, 624, 633], "mean": [118, 120, 161, 436, 439, 440, 442, 472, 559, 567, 578, 579, 584, 593, 598, 603, 604, 614, 617, 624, 625, 628, 637, 638, 639, 671, 694, 695, 698], "kilomet": [120, 426, 446, 457, 678], "equat": [120, 463, 593, 614, 624], "28": [120, 614, 616, 618, 624, 674, 675, 679], "b": [120, 370, 431, 445, 446, 457, 464, 473, 614, 615, 616, 617, 622, 624, 625, 675, 687, 698], "doviak": 120, "zrnic": [120, 442], "sqrt": [120, 124, 614, 663, 664, 679], "r": [120, 123, 124, 125, 126, 127, 168, 170, 174, 175, 220, 233, 234, 254, 269, 281, 294, 295, 310, 323, 324, 325, 326, 343, 356, 357, 358, 359, 431, 436, 440, 445, 446, 448, 451, 454, 455, 456, 457, 469, 472, 593, 597, 614, 625, 637, 655, 663, 664, 671, 674, 675, 677, 678, 698], "sin": [120, 124, 127, 614, 616], "theta_": 120, "arcsin": [120, 124, 616], "frac": 120, "theta_a": 120, "arc": [120, 594], "length": [120, 174, 175, 463, 616, 618, 624, 677], "effect": [120, 134, 136, 144, 151, 156, 184, 186, 194, 201, 206, 240, 428, 429, 616, 644, 663, 671], "taken": [120, 174, 175, 228, 289, 318, 351, 569, 585, 586, 593, 598, 599, 656], "6371": [120, 124, 127, 594, 607, 616], "km": [120, 124, 127, 214, 231, 236, 237, 243, 275, 292, 297, 298, 303, 304, 321, 330, 331, 336, 337, 354, 362, 363, 364, 369, 371, 427, 438, 445, 446, 457, 462, 463, 567, 594, 607, 615, 616, 617, 618, 622, 644, 656, 661, 662, 664, 671, 672, 684, 693, 700], "doppler": [120, 168, 169, 170, 470, 472, 593, 617, 625, 629, 634, 635, 656, 666, 671, 687, 695, 696, 698], "edit": [120, 623, 624, 625, 698], "1993": 120, "21": [120, 435, 456, 614, 616, 620, 663, 669, 696], "vector": [121, 125, 228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 438, 447, 460, 462, 470, 614, 616, 618, 624], "util": [121, 164, 168, 169, 240, 450, 474, 617, 622, 624, 625, 639, 655, 668, 672, 674, 675, 678, 687, 698], "antenna_to_cartesian": [121, 624], "detail": [121, 129, 168, 179, 253, 267, 329, 362, 388, 389, 425, 429, 446, 457, 614, 616, 618, 620, 626, 627, 655, 671, 674, 675, 687, 695, 700], "cartograph": [123, 124, 125, 126, 127, 337], "differ": [123, 125, 126, 168, 370, 418, 426, 427, 445, 446, 451, 457, 463, 615, 616, 617, 618, 622, 624, 625, 635, 637, 643, 671, 674, 675, 682, 693, 697, 698], "pass": [123, 125, 126, 168, 169, 170, 227, 228, 235, 239, 240, 241, 253, 255, 257, 259, 267, 270, 272, 274, 288, 289, 296, 300, 301, 317, 318, 325, 326, 327, 328, 329, 330, 333, 334, 350, 351, 358, 359, 360, 361, 362, 363, 366, 367, 371, 373, 374, 382, 384, 425, 429, 463, 616, 618, 624, 627, 637, 638, 639, 653, 690, 693], "desir": [123, 125, 126, 134, 136, 144, 151, 156, 184, 186, 194, 201, 206, 394, 440, 446, 457, 472, 562, 608, 616, 617, 672, 694], "6370997": [124, 127], "rho": 124, "arctan2": [124, 679], "typic": [124, 127, 129, 134, 136, 144, 151, 156, 169, 179, 184, 186, 194, 201, 206, 390, 425, 428, 633, 644, 700, 701], "snyder": [124, 127], "manual": [124, 127, 621, 622, 624, 627, 687], "geolog": [124, 127], "survei": [124, 127], "profession": [124, 127], "paper": [124, 127, 687], "1395": [124, 127, 624], "1987": [124, 127], "pp": [124, 127, 436, 439, 440, 442], "191": [124, 127], "202": [124, 127], "find": [125, 169, 172, 418, 425, 428, 429, 457, 458, 614, 618, 620, 622, 624, 639, 675, 687, 701], "arcco": 127, "exclude_bas": [129, 179], "boolean": [129, 136, 145, 146, 151, 179, 186, 195, 196, 201, 370, 446, 457, 624, 694], "variou": [129, 171, 173, 179, 209, 210, 211, 212, 583, 596, 616, 624, 635, 670, 687], "exclude_below": [129, 179, 614, 616, 620, 622, 633, 643, 673, 683, 694], "suggest": [129, 179, 615, 624], "begin": [129, 168, 169, 170, 174, 175, 179, 216, 218, 235, 239, 277, 279, 296, 300, 306, 308, 328, 333, 339, 341, 361, 366, 380, 381, 384, 386, 624], "import": [129, 179, 467, 472, 473, 485, 615, 621, 622, 624, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 689, 690, 691, 693, 694, 695, 697, 700], "radar_fil": [129, 179, 621, 632, 650, 654], "nc": [129, 179, 614, 615, 617, 622, 624, 625, 630, 633, 640, 643, 644, 646, 650, 651, 652, 653, 654, 658, 660, 661, 662, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 679, 683, 684, 685, 689, 690, 694, 698, 700], "10": [129, 139, 159, 160, 164, 165, 171, 174, 175, 179, 189, 425, 429, 435, 436, 437, 442, 446, 448, 451, 452, 453, 457, 462, 464, 465, 583, 597, 614, 616, 617, 618, 620, 621, 622, 625, 632, 633, 638, 643, 644, 645, 649, 650, 653, 655, 656, 658, 660, 663, 664, 667, 671, 674, 675, 677, 678, 679, 683, 687, 689, 690, 691, 693, 694, 695, 698], "normalized_coherent_pow": [129, 179, 614, 694], "75": [129, 179, 242, 302, 335, 368, 390, 446, 457, 462, 614, 620, 643, 663, 671, 674, 689, 693, 694], "exclude_mask": [131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 144, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 181, 182, 184, 185, 186, 187, 188, 189, 192, 193, 194, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 645, 653], "op": [131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 617], "inclus": [131, 132, 134, 137, 143, 147, 149, 152, 157, 181, 182, 184, 187, 193, 197, 199, 202, 207, 425, 429, 563, 624, 650], "toa": [132, 182, 428, 429, 432, 466], "below": [134, 149, 168, 171, 173, 174, 175, 184, 199, 209, 210, 211, 212, 228, 235, 238, 239, 240, 241, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 428, 429, 445, 446, 451, 454, 455, 457, 463, 592, 593, 614, 615, 616, 617, 618, 621, 671, 674, 689, 691, 694, 699, 700], "compar": [134, 168, 184, 434, 582, 625, 635, 642, 647, 648, 650, 669, 671, 674, 675, 696, 698], "against": [134, 168, 184, 626, 627, 663], "mark": [134, 144, 145, 146, 156, 168, 184, 194, 195, 196, 206, 615, 621], "exclus": [134, 184, 644], "merg": [134, 136, 144, 151, 156, 169, 184, 186, 194, 201, 206, 376, 592, 625, 627, 698], "AND": [134, 136, 144, 151, 156, 184, 186, 194, 201, 206], "OR": [134, 136, 144, 151, 156, 184, 186, 194, 201, 206, 614], "gener": [134, 136, 144, 151, 156, 184, 186, 194, 201, 206, 215, 216, 217, 218, 219, 228, 230, 235, 238, 239, 240, 241, 248, 249, 250, 251, 253, 255, 257, 259, 262, 263, 264, 265, 270, 272, 274, 276, 277, 278, 279, 280, 289, 291, 296, 299, 300, 301, 305, 306, 307, 308, 309, 318, 320, 328, 329, 332, 333, 334, 338, 339, 340, 341, 342, 351, 353, 361, 362, 365, 366, 367, 371, 389, 392, 407, 418, 428, 429, 458, 463, 616, 618, 619, 622, 624, 627, 630, 631, 632, 633, 635, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 687], "meet": [134, 136, 144, 151, 156, 184, 186, 194, 201, 206, 388, 687], "result": [134, 136, 144, 151, 156, 165, 168, 169, 170, 184, 186, 194, 201, 206, 228, 235, 238, 239, 240, 241, 257, 259, 270, 272, 274, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 373, 389, 394, 426, 427, 429, 434, 467, 473, 584, 605, 616, 617, 618, 625, 633, 639, 644, 671, 675, 676, 678, 687, 693, 698], "previous": [134, 136, 144, 151, 156, 184, 186, 194, 201, 206, 637, 671, 674, 700], "becaus": [134, 136, 144, 184, 186, 194, 463, 674, 701], "invalid": [134, 136, 138, 144, 173, 184, 186, 188, 194, 209, 210, 211, 212, 614, 622], "shape": [136, 151, 186, 201, 380, 466, 602, 614, 617, 618, 620, 622, 624, 625, 674, 689, 693, 694, 695, 698], "v1": [137, 143, 152, 157, 187, 193, 202, 207, 614, 615, 627, 697], "v2": [137, 143, 152, 157, 187, 193, 202, 207, 625, 698], "insid": [137, 152, 187, 202, 690], "interv": [137, 143, 152, 157, 169, 173, 187, 193, 202, 207, 211, 371, 582, 598, 599, 614, 622, 624], "occur": [138, 158, 172, 188, 208, 382, 383, 614, 691, 695], "nan": [138, 158, 168, 173, 188, 208, 211, 465, 614, 617, 624, 631, 672], "inf": [138, 158, 173, 188, 208, 211, 624], "n_gate": [139, 189], "try": [139, 161, 189, 433, 463, 616, 621, 622, 623, 653, 678, 693, 694], "ring": [139, 189, 236, 237, 297, 298, 330, 331, 363, 364, 371, 616, 644, 645, 653, 660], "artifact": [139, 169, 189, 624, 691, 693], "some": [139, 189, 304, 337, 402, 413, 465, 485, 615, 616, 617, 618, 620, 621, 622, 623, 624, 639, 650, 652, 671, 672, 674, 677, 687, 691, 693, 697, 700], "outsid": [143, 157, 173, 193, 207, 211, 235, 238, 240, 241, 253, 255, 257, 259, 270, 272, 274, 296, 299, 301, 328, 329, 332, 334, 361, 362, 365, 367, 440, 445, 618, 624, 625, 671, 698, 700], "trans_valu": [144, 156, 194, 206], "construct": [144, 156, 194, 206, 429, 617], "element": [145, 146, 168, 169, 170, 171, 172, 195, 196, 392, 426, 427, 428, 429, 433, 466, 582, 598, 599, 603, 604, 616, 617, 618], "NOT": [145, 146, 195, 196], "gate_includ": [145, 195, 694], "lost": [145, 146, 195, 196, 465, 611, 614, 693], "again": [145, 146, 195, 196, 618, 627, 639, 654, 675, 677, 697], "gate_exclud": [146, 196, 694], "noise_threshold": 159, "45": [159, 567, 616, 625, 655, 664, 674, 675, 698], "threshold_offset": 159, "counts_threshold": 159, "12": [159, 427, 614, 616, 617, 621, 622, 623, 637, 638, 644, 654, 661, 671, 672, 675, 687, 690, 694, 695], "primari": [159, 463, 617], "threshold": [159, 165, 168, 171, 172, 173, 209, 210, 211, 212, 370, 445, 446, 451, 454, 455, 457, 593, 597, 614, 616, 620, 633, 671, 674, 675, 683, 691, 694], "nois": [159, 160, 165, 167, 176, 432, 438, 441, 593, 617, 622, 624, 631, 671, 691], "detect": [159, 457, 618, 624, 635, 658, 670, 674, 680, 691, 696], "greater": [159, 445, 469, 618, 674], "count": [159, 168, 448, 643, 691, 695], "kollia": [159, 160, 165], "jo": [159, 160, 165], "borqu": [159, 160, 165], "tatarev": [159, 160, 165], "lamer": [159, 160, 165], "n": [159, 160, 165, 168, 433, 445, 451, 462, 470, 582, 614, 616, 617, 618, 620, 622, 637, 643, 644, 655, 666, 668, 672, 674, 675, 681, 687, 701], "bharadwaj": [159, 160, 165, 622], "widen": [159, 160, 165, 671], "johnson": [159, 160, 165, 622], "e": [159, 160, 165, 170, 172, 174, 175, 228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 371, 375, 390, 405, 415, 443, 445, 446, 448, 457, 463, 469, 597, 614, 615, 617, 618, 621, 625, 637, 653, 655, 671, 674, 675, 678, 697, 698], "clothiaux": [159, 160, 165], "2014": [159, 160, 164, 165, 450, 464, 467, 687], "ii": [159, 160, 165, 448, 671, 687, 695], "process": [159, 160, 165, 169, 174, 175, 614, 617, 620, 621, 622, 624, 625, 627, 637, 653, 675, 677, 678, 687, 698], "atmo": [159, 160, 165, 174, 175, 435, 437, 445, 451, 456, 457, 462, 467, 583, 597, 621, 625, 655, 675, 698], "technol": [159, 160, 165, 435, 437, 456, 467, 583], "31": [159, 160, 164, 165, 382, 450, 614, 616, 617, 620, 639, 662, 669, 672, 678, 696], "583": [159, 160, 165, 435, 624], "598": [159, 160, 165, 624], "doi": [159, 160, 165, 435, 437, 446, 448, 451, 452, 453, 457, 462, 464, 465, 583, 597, 614, 617, 618, 620, 622, 625, 655, 671, 674, 675, 678, 687, 689, 690, 691, 693, 694, 695, 698], "1175": [159, 160, 165, 435, 437, 446, 448, 457, 465, 583, 624, 671, 674, 675, 678, 687], "jtech": [159, 160, 165, 439, 442, 583], "d": [159, 160, 164, 165, 170, 216, 277, 306, 339, 394, 395, 397, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 440, 442, 445, 465, 473, 583, 614, 616, 617, 618, 621, 622, 625, 653, 672, 678, 687, 698], "13": [159, 160, 165, 380, 593, 614, 617, 620, 637, 641, 649, 653, 656, 666, 669, 671, 677, 687, 694, 695, 696], "00045": [159, 160, 165], "floor": [160, 165, 176, 432, 631], "height_rang": [161, 633], "zdr_var": [161, 633], "bia": [161, 166, 624, 629, 634, 635, 696], "tupl": [161, 171, 172, 228, 230, 233, 234, 235, 238, 239, 240, 241, 243, 253, 255, 257, 259, 270, 272, 274, 289, 291, 294, 295, 296, 299, 300, 301, 303, 318, 320, 323, 324, 328, 329, 332, 333, 334, 336, 351, 353, 356, 357, 361, 362, 365, 366, 367, 369, 402, 413, 425, 426, 427, 429, 433, 460, 461, 563, 582, 602, 618, 624], "minimum": [161, 162, 173, 174, 175, 210, 211, 212, 228, 230, 235, 238, 239, 240, 241, 289, 291, 296, 299, 300, 301, 318, 320, 328, 329, 332, 333, 334, 351, 353, 361, 362, 365, 366, 367, 371, 390, 425, 429, 436, 439, 440, 442, 443, 445, 446, 448, 457, 563, 567, 584, 593, 614, 616, 618, 621, 622, 624, 671, 674, 678, 693], "maximum": [161, 168, 169, 173, 174, 175, 209, 210, 211, 228, 230, 235, 238, 239, 240, 241, 289, 291, 296, 299, 300, 301, 318, 320, 328, 329, 332, 333, 334, 351, 353, 361, 362, 365, 366, 367, 370, 371, 390, 425, 426, 427, 429, 434, 436, 439, 440, 442, 443, 444, 446, 451, 454, 455, 457, 463, 563, 567, 582, 592, 600, 614, 616, 618, 621, 671, 673, 674, 678, 683, 695], "automat": [161, 174, 371, 386, 391, 392, 429, 433, 469, 616, 618, 622, 624, 625, 627, 658, 687, 698], "z_offset": 162, "doc": [162, 163, 164, 175, 614, 618, 624, 625, 627, 687, 697, 698, 701], "15": [162, 463, 597, 614, 615, 616, 617, 622, 630, 632, 650, 655, 661, 662, 663, 664, 667, 668, 669, 671, 672, 675, 677, 679, 691, 695, 696], "fzl": [162, 163, 164, 174, 175], "4000": [162, 174, 175, 693], "rhv_min": 162, "ncp_min": 162, "a_coef": [162, 164], "06": [162, 614, 616, 620, 621, 647, 669, 696], "beta": [162, 164, 450, 451, 452, 453, 454, 455], "refl_field": [162, 163, 164, 173, 174, 175, 210, 211, 429, 432, 441, 445, 446, 451, 453, 454, 455, 456, 462, 469, 630, 674, 676, 677], "ncp_field": [162, 173, 174, 175, 211, 630], "rhv_field": [162, 173, 174, 175, 210, 211, 462, 630, 676, 677], "spec_at_field": [162, 163, 164], "corr_refl_field": [162, 163, 164], "attenu": [162, 163, 164, 450, 451, 454, 624, 629, 634, 635, 676, 687, 696], "phi": [162, 164, 174, 624, 630], "copol_coeff": [162, 569, 630, 672, 673, 689], "norm_coherent_pow": [162, 569, 630, 689], "proc_dp_phase_shift": [162, 630, 672, 689], "reflectivity_horizont": [162, 168, 569, 615, 630, 643, 650, 654, 658, 660, 661, 662, 666, 668, 671, 672, 673, 674, 675, 684, 689, 690, 700], "supress": [162, 244, 255, 261, 329, 362, 618, 624], "freez": [162, 163, 164, 436, 440], "layer": [162, 163, 164, 209, 212, 390, 451, 463, 467, 567], "combin": [162, 163, 164, 601, 614, 616, 617, 625, 627, 698], "normal": [162, 173, 174, 175, 211, 228, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 448, 462, 602, 618, 663, 671], "coher": [162, 173, 174, 175, 211], "power": [162, 164, 173, 174, 175, 211, 371, 440, 450, 451, 452, 453, 454, 455, 614, 617], "zdr_field": [162, 163, 164, 167, 210, 435, 462, 676, 677], "spec_at": [162, 163, 164, 630, 676], "cor_z": [162, 163, 164, 630, 676], "gu": [162, 164], "et": [162, 164, 167, 445, 446, 448, 452, 456, 457, 462, 463, 469, 655, 674, 675], "al": [162, 164, 167, 445, 446, 448, 452, 456, 457, 462, 463, 464, 469, 655, 674, 675], "heavi": [162, 164, 597, 616, 655, 663, 675], "rain": [162, 164, 436, 440, 445, 450, 451, 452, 453, 456, 457, 462, 469, 624, 633, 655, 663, 674, 675, 676, 677, 678], "jamc": [162, 164, 465, 583], "2011": [162, 164, 621, 672], "50": [162, 164, 371, 439, 443, 444, 462, 582, 614, 615, 616, 617, 620, 641, 646, 667, 671, 672, 676, 677, 693, 695], "39": [162, 164, 614, 616, 646, 647, 672, 696], "58": [162, 164, 445, 617, 669, 671, 672], "pia_coef": 163, "pida_coef": 163, "temp_field": [163, 164, 212, 462, 676, 677], "iso0_field": [163, 164, 209, 462], "pia_field": [163, 164], "spec_diff_at_field": [163, 164], "pida_field": [163, 164], "corr_zdr_field": [163, 164], "temp_ref": [163, 164, 462, 676], "linear": [163, 174, 175, 253, 382, 435, 446, 457, 465, 593, 606, 617, 618, 624, 674, 675, 687], "dependec": 163, "comput": [163, 164, 167, 210, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 457, 462, 463, 464, 465, 578, 579, 580, 581, 582, 584, 598, 599, 603, 604, 610, 614, 617, 624, 671, 676, 678, 679, 687], "either": [163, 164, 168, 169, 170, 228, 229, 230, 235, 238, 239, 240, 241, 252, 253, 255, 257, 259, 268, 270, 272, 274, 289, 290, 291, 296, 299, 300, 301, 318, 319, 320, 328, 332, 333, 334, 351, 352, 353, 361, 365, 366, 367, 376, 405, 415, 436, 439, 440, 442, 451, 454, 455, 462, 625, 671, 674, 697, 698], "frequenc": [163, 164, 392, 448, 450, 451, 452, 454, 455, 459, 462, 463, 464, 465, 617, 635, 670, 671, 680, 696], "refl": [163, 164, 661], "integr": [163, 164, 614, 617], "pida_coeff": 163, "0c": [163, 164], "isotherm": [163, 164], "height_over_iso0": [163, 164, 462, 694], "fixed_fzl": [163, 164], "pia_dict": [163, 164], "spec_diff_at": [163, 164, 676], "pida_dict": [163, 164], "cor_zdr": [163, 164, 676], "smooth_window_len": 164, "forumul": 164, "smooth": [164, 172, 463, 594, 607, 618, 663, 664, 693], "window": [164, 168, 174, 175, 210, 433, 465, 472, 582, 592, 605, 610, 624, 625, 687, 698], "expon": [164, 174, 175, 431, 450, 451, 452, 453, 454, 455], "law": [164, 450, 451, 452, 453, 454, 455], "ryzhkov": [164, 436, 437, 439, 450, 467, 583], "potenti": [164, 450, 614, 622], "rainfal": [164, 445, 450, 451, 452, 453, 454, 455, 456, 463, 465, 621], "estim": [164, 209, 212, 230, 291, 320, 353, 426, 435, 438, 450, 451, 452, 453, 454, 455, 456, 463, 464, 465, 467, 583, 593, 617, 624, 635, 670, 674, 675, 680, 696], "mitig": [164, 450], "partial": [164, 450, 624], "beam": [164, 424, 428, 429, 450, 617], "blockag": [164, 450], "network": [164, 169, 384, 450, 616], "jaot": [164, 167], "599": [164, 450], "619": [164, 450, 624], "n_avg": 165, "nfft": 165, "averag": [165, 169, 370, 436, 439, 440, 442, 446, 457, 584, 593, 598, 620, 633, 674, 675, 678, 679], "scalar": [165, 370, 446, 457, 616, 618, 624, 674], "magnitud": [166, 463, 679, 695], "corrected_field": 166, "urhohv_field": 167, "snr_field": [167, 432, 441], "nh_field": 167, "nv_field": 167, "rhohv_field": [167, 435, 437], "eq": [167, 661], "6": [167, 210, 445, 451, 462, 614, 616, 617, 621, 622, 639, 643, 644, 645, 650, 652, 657, 660, 671, 672, 673, 676, 677, 678, 679, 689, 691, 694, 695], "2006": [167, 639], "subtract": [167, 446, 457], "uncorrect": [167, 614, 683], "snr": [167, 432, 441, 624], "channel": [167, 390, 614, 617, 624, 627], "meteo": 167, "franc": 167, "23": [167, 614, 616, 617, 621, 675, 679, 680, 696], "1340": 167, "1356": [167, 624], "last_radar": 168, "sonde_profil": 168, "filt": 168, "rsl_badval": 168, "131072": 168, "keep_origin": [168, 169, 170], "set_limit": [168, 169, 170, 615, 631, 655, 656, 657, 659, 661, 662, 663, 664, 666, 671, 677], "vel_field": [168, 169, 170, 433, 447, 473, 671, 683, 691], "corr_vel_field": [168, 169, 170], "last_vel_field": 168, "max_shear": 168, "05": [168, 428, 429, 614, 616, 621, 634, 667, 671, 672, 696], "sign": [168, 624, 663, 664, 671], "deprec": [168, 614, 618, 627, 690, 693], "region": [168, 169, 175, 267, 329, 362, 434, 445, 597, 614, 616, 617, 618, 620, 622, 624, 625, 629, 633, 634, 635, 637, 655, 674, 675, 678, 683, 694, 696, 698, 700], "dealias": [168, 169, 170, 449, 624, 625, 632, 637, 683, 687, 688, 698, 700], "dealia": [168, 169, 170, 449, 620, 624, 629, 634, 635, 671, 682, 686, 691, 696], "4dd": [168, 624], "univers": [168, 387, 456, 614, 624, 687], "washington": 168, "previou": [168, 329, 362, 618, 622, 624, 627], "sound": [168, 624], "For": [168, 256, 258, 271, 273, 380, 390, 428, 462, 463, 614, 615, 617, 618, 621, 624, 625, 628, 637, 643, 671, 676, 687, 694, 695, 698, 700, 701], "best": [168, 616, 671], "argument": [168, 169, 170, 228, 235, 239, 240, 241, 253, 255, 256, 257, 258, 259, 270, 271, 272, 273, 274, 289, 296, 300, 301, 318, 325, 326, 327, 328, 329, 330, 333, 334, 351, 358, 359, 360, 361, 362, 363, 366, 367, 371, 382, 384, 392, 394, 425, 429, 464, 465, 624, 625, 698], "_fourdd_interfac": 168, "fourdd_dealia": 168, "fine": 168, "tune": [168, 674, 675], "behavior": [168, 329, 362, 380, 394, 618, 624, 628], "fourdd": 168, "document": [168, 256, 258, 267, 271, 273, 329, 362, 383, 388, 389, 606, 612, 615, 617, 618, 619, 622, 625, 626, 687, 693, 698], "mean_doppler_veloc": [168, 617, 622, 666, 671, 672, 683, 689], "successfulli": [168, 621], "greatli": 168, "improv": [168, 464, 465, 597, 618, 627, 655, 675], "final": [168, 464, 465, 614, 615, 622, 623, 627, 644, 671, 674], "horizontalwindprofil": [168, 375, 376, 473, 606, 624, 625, 698], "sond": [168, 169, 375, 376, 458, 624, 632], "moment_based_gate_filt": [168, 169, 170, 429, 616], "bergen": 168, "alber": 168, "bad": [168, 463, 464, 465, 469], "rsl": [168, 374, 385, 386, 624, 687, 697, 700], "procedur": [168, 169, 170], "fail": [168, 169, 170, 380, 390, 621, 624, 625, 698], "otherwis": [168, 401, 412, 436, 439, 440, 442, 443, 444, 451, 454, 455, 460, 602, 627], "maxshear": 168, "shear": 168, "incorpor": [168, 457, 674, 677], "match": [168, 171, 172, 176, 214, 275, 304, 337, 386, 418, 622, 624, 643, 654, 675], "toward": 168, "neg": [168, 228, 239, 289, 300, 318, 333, 351, 366, 463, 592, 614, 624, 650], "compthresh": 168, "fraction": [168, 426, 427, 448, 616, 621, 671, 674, 695], "continu": [168, 170, 617, 621, 624, 625, 698], "unfold": [168, 169, 174, 175, 463], "compthresh2": 168, "thresh": [168, 451, 454, 455], "adjac": [168, 618], "assign": [168, 390, 462, 616, 624, 674], "question": [168, 372, 429, 618, 687], "ckval": 168, "absolut": [168, 582, 675], "stdthresh": 168, "deviat": [168, 567, 580, 581, 599, 614, 691], "portion": [168, 620, 693], "epsilon": 168, "miss": [168, 462, 463, 464, 465, 469, 614, 624, 639, 677], "maxcount": 168, "allow": [168, 171, 172, 227, 288, 317, 350, 418, 445, 583, 592, 615, 618, 621, 622, 624, 628, 643, 695, 701], "fold": [168, 169, 637], "pass2": 168, "retain": [168, 169, 170, 173, 209, 210, 211, 212, 611], "rm": 168, "what": [168, 178, 429, 614, 617, 618, 620, 621, 622, 623, 624, 625, 637, 638, 650, 683, 689, 691, 694, 698, 701], "left": [168, 327, 360, 616, 618, 620, 622, 650, 654, 671], "proxim": 168, "side": [168, 622, 671], "doubl": [168, 390, 674], "captur": [168, 445, 683], "suffici": [168, 671], "good": [168, 169, 614, 615, 627], "mingood": 168, "ba_mincount": 168, "neighbor": [168, 382, 429, 614, 624, 644, 693], "ba_edgecount": 168, "usuccess": 168, "radialvelvolum": 168, "lastvelvolum": 168, "unfoldedvolum": 168, "sondvolum": 168, "vr_corr": 168, "due": [168, 434, 445, 614, 616, 618, 621, 624, 643, 691, 697, 701], "call": [168, 171, 227, 228, 230, 235, 239, 240, 241, 255, 288, 289, 291, 296, 300, 301, 317, 318, 320, 328, 329, 333, 334, 350, 351, 353, 361, 362, 366, 367, 385, 390, 394, 583, 596, 615, 617, 618, 621, 625, 627, 691, 695, 698, 701], "999": [168, 394, 614, 624], "long": [168, 452, 624, 675, 690, 695], "jame": 168, "houz": [168, 370, 446, 448, 457, 469, 671, 674, 675, 678], "jr": [168, 446, 457, 469, 674, 675, 678], "four": [168, 382, 383, 385], "dealis": 168, "scheme": [168, 370, 425, 446, 457, 463, 615, 674], "2001": [168, 437], "18": [168, 437, 614, 616, 652, 671, 674, 680, 696], "1674": 168, "ref_vel_field": 169, "interval_split": 169, "interval_limit": 169, "skip_between_rai": 169, "100": [169, 171, 173, 211, 231, 236, 253, 260, 292, 297, 321, 354, 371, 392, 429, 473, 614, 616, 617, 618, 620, 646, 652, 659, 663, 664, 669, 671, 678, 679, 696], "skip_along_rai": 169, "nyquist_vel": [169, 170, 620, 671, 683, 691], "check_nyquist_uniform": [169, 170, 433], "rays_wrap_around": [169, 170], "similar": [169, 617, 618, 643, 693], "pair": [169, 253, 382, 394, 402, 407, 413, 616, 689], "accomplish": [169, 386, 635, 682], "problem": [169, 174, 175, 304, 337, 429, 639], "dynam": [169, 614], "reduct": 169, "anchor": 169, "onc": [169, 618, 621, 625, 627, 674, 697, 698, 701], "complet": [169, 624], "simul": [169, 606, 624], "simulated_vel_from_profil": [169, 625, 698], "segment": [169, 325, 326, 358, 359, 624], "split": [169, 597, 614], "larger": [169, 618, 674], "longer": [169, 592, 616, 624, 625, 687, 697, 698], "better": [169, 231, 236, 292, 297, 321, 330, 354, 363, 621, 622, 624, 675, 687, 691], "seem": 169, "compromis": 169, "free": [169, 619, 620, 625, 687, 698], "cover": [169, 614], "entir": [169, 170, 228, 235, 239, 240, 241, 257, 259, 270, 272, 274, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 429, 608, 614, 617, 618, 622, 671], "join": [169, 485, 621, 624], "gap": [169, 171, 172, 693], "connect": [169, 170], "disabl": [169, 170, 173, 209, 210, 211, 212, 621], "across": [169, 371, 616, 624, 671, 673], "so": [169, 228, 239, 289, 300, 318, 333, 351, 366, 386, 429, 614, 617, 618, 620, 621, 622, 624, 625, 631, 637, 639, 671, 674, 687, 698, 701], "individu": [169, 170, 429, 622], "attempt": [169, 170, 388, 389, 624, 677], "de": [169, 170, 360, 575, 576], "alias": [169, 170, 575, 576, 620, 624, 691, 695], "corr_vel": [169, 170], "unwrap_unit": 170, "skip_check": [170, 624], "multi": [170, 624], "unwrap": [170, 174, 175, 624], "independ": 170, "often": [170, 434, 621], "give": [170, 390, 618, 622, 626, 627, 640, 683, 684, 685, 687, 691, 694], "superior": 170, "lower": [170, 253, 255, 257, 259, 270, 272, 274, 445, 617, 621, 622, 644, 645, 646], "contamin": [170, 469], "clutter": [170, 621, 622, 691, 694], "poor": 170, "verif": [170, 583, 624], "appropi": [170, 227, 288, 317, 350], "offer": [170, 615, 700], "extrem": [170, 671], "miguel": 170, "arevallilo": 170, "herraez": 170, "david": [170, 618], "burton": 170, "michael": [170, 618, 622], "lalor": 170, "munther": 170, "gdeisat": 170, "fast": 170, "two": [170, 392, 425, 443, 446, 457, 460, 461, 469, 567, 601, 603, 604, 616, 617, 618, 620, 621, 622, 624, 627, 635, 642, 647, 648, 652, 668, 669, 690, 693, 696], "sort": [170, 616, 620, 621, 623, 624, 653, 678], "reliabl": 170, "follow": [170, 173, 210, 211, 388, 389, 391, 392, 405, 415, 428, 429, 445, 462, 463, 614, 616, 617, 618, 620, 621, 622, 625, 627, 628, 637, 672, 687, 697, 698, 700], "noncontinu": 170, "optic": 170, "vol": [170, 436, 439, 440, 442], "41": [170, 616, 621, 672, 679, 693], "2002": 170, "7437": 170, "abdul": 170, "rahman": 170, "h": [170, 216, 267, 277, 306, 339, 362, 435, 439, 467, 593, 614, 616, 617, 643, 653, 654, 671, 678], "osten": 170, "gorecki": 170, "l": [170, 174, 175, 232, 236, 237, 267, 293, 297, 298, 322, 331, 355, 362, 364, 437, 457, 597, 614, 618, 655, 671, 675], "novak": 170, "ed": 170, "metrologi": 170, "2005": [170, 446, 457, 674, 675], "32": [170, 440, 445, 567, 614, 624, 650, 656, 657, 658, 660, 668, 672, 675, 679, 695], "40": [170, 267, 445, 614, 617, 622, 632, 644, 646, 654, 658, 660, 663, 671, 674, 675, 678, 683], "intern": [170, 618], "societi": [170, 431, 434, 452], "photon": 170, "label_dict": [171, 172], "delta": [171, 172, 464], "despeckl": [171, 624, 671], "identifi": [171, 172, 370, 446, 457, 593, 614, 618, 620, 655, 674, 675, 677, 694], "small": [171, 172, 445, 446, 457, 469, 624, 643, 644, 663], "investig": [171, 172, 467, 637, 638], "scipi": [171, 172, 463, 606, 614, 624, 625, 663, 664, 687, 697, 698, 701], "core": [171, 172, 370, 371, 390, 418, 429, 445, 446, 457, 464, 465, 583, 596, 617, 622, 624, 625, 674, 678, 698], "queri": [171, 172, 429, 614, 618, 622], "speckl": [171, 674], "find_object": 171, "contigu": [171, 172], "perman": 171, "deg": [171, 172, 209, 212, 230, 291, 320, 353, 436, 442, 443, 444, 462, 463, 608, 614, 651, 679], "label": [172, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 235, 238, 239, 240, 241, 252, 253, 255, 257, 259, 268, 270, 272, 274, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 294, 295, 296, 299, 300, 301, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 324, 327, 328, 329, 332, 333, 334, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 356, 357, 360, 361, 362, 365, 366, 367, 611, 614, 616, 618, 620, 621, 622, 624, 643, 652, 654, 663, 664, 668, 676], "period": [172, 592, 614, 617, 622, 691], "account": [172, 624], "g": [172, 371, 390, 425, 442, 457, 463, 465, 473], "examin": [172, 373, 386, 389, 617, 620, 625, 687, 698], "box": [172, 390, 631, 676], "alwai": [172, 374, 386, 445, 446, 457, 463, 618, 624, 628, 687], "readi": 172, "min_ncp": [173, 174, 211], "min_rhv": [173, 174, 210, 211], "min_refl": [173, 211], "20": [173, 210, 211, 467, 583, 614, 615, 616, 617, 618, 620, 622, 637, 639, 640, 643, 644, 652, 654, 655, 658, 660, 661, 662, 663, 664, 666, 669, 671, 673, 674, 675, 677, 678, 680, 684, 685, 689, 693, 695, 696, 700], "max_refl": [173, 211], "undesir": [173, 209, 210, 211, 212, 429], "cross": [173, 210, 211, 228, 231, 253, 289, 292, 318, 321, 351, 354, 427, 585, 586, 614, 617, 620, 624, 633, 635, 648, 660, 669, 671, 674, 687, 695, 696], "ratio": [173, 210, 211, 242, 302, 335, 368, 432, 435, 614, 617, 620, 622, 633, 695], "min_rhi": [173, 211], "criteria": [173, 209, 210, 211, 212, 429, 463, 469, 622], "built": [173, 209, 210, 211, 212, 428, 429, 621], "lowest": [173, 209, 210, 211, 212, 434, 466, 620, 621, 637, 643, 672, 674, 675], "greatest": [173, 211], "self_const": [174, 175], "60000": [174, 175, 646, 652, 693], "low_z": [174, 175], "high_z": [174, 175], "53": [174, 175, 614, 616, 620, 679, 696], "min_phidp": [174, 175], "01": [174, 175, 327, 360, 463, 614, 616, 617, 620, 622, 634, 641, 650, 669, 680, 696], "sys_phas": 174, "overide_sys_phas": 174, "nowrap": [174, 175], "really_verbos": [174, 175], "lp_solver": [174, 175], "cvxopt": [174, 175, 624, 687, 697], "kdp_field": [174, 175, 451, 452, 454, 455, 462, 463, 464, 465, 676, 677], "unf_field": [174, 175], "window_len": [174, 175], "proc": [174, 175, 463, 624], "coef": [174, 175, 624], "914": [174, 175, 624], "lp": [174, 175, 624, 687], "consist": [174, 175, 624, 671, 693, 700], "factor": [174, 175, 392, 434, 450, 451, 452, 453, 454, 455, 582, 614, 615, 617, 621, 624, 654, 662, 668, 693], "low": [174, 175, 382, 463, 621, 644, 655], "high": [174, 175, 228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 445, 462, 463, 617, 618, 620, 644, 676, 677], "copolar": [174, 175, 462, 673], "lpx": [174, 175], "messag": [174, 175, 244, 261, 382, 615, 621, 624, 627, 639], "suppress": [174, 175, 463], "pyglpk": [174, 175, 624, 687, 697], "cylp": [174, 175, 624, 687, 697, 701], "cylp_mp": [174, 175], "modul": [174, 175, 569, 612, 618, 624, 625, 637, 638, 639, 687, 690, 691, 693, 694, 695, 697, 698, 700], "solv": [174, 175, 623, 624], "horizon": [174, 175, 462], "sobel": [174, 175], "worker": [174, 175], "link": [174, 175, 616, 617, 620, 622, 624], "1z": [174, 175], "reproc_phas": [174, 175], "sob_kdp": [174, 175], "recalcul": [174, 175, 689], "giangrand": [174, 175, 687], "mcgraw": [174, 175], "lei": [174, 175], "applic": [174, 175, 228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 390, 446, 457, 605, 618, 620, 625, 698], "program": [174, 175, 624, 625, 687, 698], "tech": [174, 175, 451, 457, 462, 597, 655, 675], "2013": [174, 175, 464, 467, 695], "30": [174, 175, 439, 440, 445, 446, 457, 614, 616, 617, 618, 621, 622, 633, 643, 644, 653, 654, 658, 660, 671, 674, 675, 691], "1716": [174, 175], "system_phas": 175, "ncpt": 175, "first_gate_sysp": 175, "carri": 175, "smaller": [175, 362, 429, 614, 617, 618, 625, 674, 698], "off": [175, 228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 461, 614, 618, 650, 674, 675], "help": [176, 390, 474, 616, 617, 618, 620, 622, 625, 627, 643, 650, 674, 698, 701], "custom": [177, 227, 228, 229, 230, 235, 239, 240, 241, 252, 253, 255, 257, 259, 268, 270, 272, 274, 288, 289, 290, 291, 296, 300, 301, 317, 318, 319, 320, 328, 329, 333, 334, 350, 351, 352, 353, 361, 362, 366, 367, 371, 428, 445, 618, 635, 670, 680, 693, 696], "max_h_iso0": 209, "thick": [209, 212], "400": [209, 212, 624, 689], "beamwidth": [209, 212], "primarili": [209, 212], "melt": [209, 212, 451, 462, 463, 467, 597, 655, 674, 675, 676, 677], "db": [209, 212, 432, 622, 633, 663, 677, 695], "phi_field": 210, "textzdr_field": 210, "textrhv_field": 210, "textphi_field": 210, "textrefl_field": 210, "wind_siz": [210, 433, 610, 691], "7": [210, 380, 462, 472, 610, 614, 616, 617, 618, 620, 621, 625, 627, 638, 652, 655, 667, 671, 677, 694, 695, 698], "max_textphi": 210, "max_textrhv": 210, "max_textzdr": 210, "85": [210, 614, 618, 677, 679], "max_textrefl": 210, "move": [210, 593, 616, 620, 624, 643, 700], "highest": 210, "min_temp": 212, "There": [213, 616, 618, 620, 627, 650, 697, 701], "colorblind": [213, 615, 620, 650], "friendli": [213, 615, 620, 624, 650], "revers": [213, 228, 239, 289, 300, 318, 333, 351, 366, 386, 463, 624], "_r": 213, "matplotlib": [213, 228, 230, 233, 234, 235, 239, 240, 241, 253, 254, 255, 257, 259, 269, 270, 272, 274, 289, 291, 294, 295, 296, 300, 301, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 351, 353, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 371, 390, 614, 615, 616, 617, 620, 621, 622, 624, 630, 631, 632, 633, 637, 638, 639, 643, 644, 645, 646, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 687, 689, 690, 691, 693, 694, 697, 701], "bluebrown10": [213, 650], "bluebrown11": [213, 650], "brbu10": [213, 650], "brbu12": [213, 650], "bu10": [213, 650], "bu7": [213, 650], "budor12": [213, 650], "budor18": [213, 650], "budrd12": [213, 650], "budrd18": [213, 650], "bugr14": [213, 650], "bugy8": [213, 650], "buor10": [213, 650], "buor12": [213, 650], "buor8": [213, 650], "buorr14": [213, 650], "carbone11": [213, 650], "carbone17": [213, 650], "carbone42": [213, 650, 677], "cat12": [213, 650], "ewilson17": [213, 650], "grmg16": [213, 650], "gray5": [213, 650], "gray9": [213, 650], "nwsref": [213, 650], "nwsvel": [213, 650], "nws_spw": [213, 650], "pd17": [213, 650], "rrate11": [213, 650, 678], "rdylbu11b": [213, 650], "refdiff": [213, 650], "scook18": [213, 650], "stepseq25": [213, 650], "symgray12": [213, 650], "theodore16": [213, 650], "wild25": [213, 650], "langrainbow12": [213, 650], "homeyerrainbow": [213, 371, 624, 643, 650, 651, 652, 653, 654, 659, 662, 666, 667, 673], "balanc": [213, 624, 643, 650, 664, 666, 683], "chasespectr": [213, 616, 640, 650, 684, 685, 700], "spectralextend": [213, 650], "displai": [214, 228, 230, 235, 239, 240, 241, 243, 275, 289, 291, 296, 300, 301, 303, 304, 318, 320, 328, 329, 333, 334, 336, 337, 351, 353, 361, 362, 366, 367, 369, 371, 390, 434, 472, 473, 615, 616, 617, 618, 620, 621, 622, 624, 625, 630, 631, 632, 637, 638, 639, 640, 644, 650, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 679, 683, 684, 685, 689, 690, 691, 693, 694, 698, 700], "airborn": [214, 624], "plot_var": [214, 275, 304, 337], "order": [214, 275, 304, 337, 370, 386, 391, 392, 418, 446, 457, 462, 463, 582, 614, 621, 622, 624, 625, 674, 675, 687, 698], "cb": [214, 275, 304, 337, 654, 675, 677], "colorbar": [214, 228, 229, 230, 235, 238, 239, 240, 241, 252, 253, 255, 257, 259, 260, 261, 268, 270, 272, 274, 275, 289, 290, 291, 296, 299, 300, 301, 304, 318, 319, 320, 328, 329, 332, 333, 334, 337, 351, 352, 353, 361, 362, 365, 366, 367, 371, 614, 616, 617, 618, 624, 635, 643, 648, 650, 668, 669, 671, 675, 696], "loc": [214, 275, 304, 337, 614, 616, 620, 621, 622, 652], "titl": [215, 217, 218, 219, 228, 230, 235, 238, 239, 240, 241, 249, 250, 251, 253, 255, 257, 259, 260, 263, 264, 265, 270, 272, 274, 276, 278, 279, 280, 289, 291, 296, 299, 300, 301, 305, 307, 308, 309, 318, 320, 328, 329, 332, 333, 334, 338, 340, 341, 342, 351, 353, 361, 362, 365, 366, 367, 371, 615, 616, 617, 618, 620, 621, 623, 624, 630, 632, 643, 656, 657, 659, 661, 662, 666, 678, 695], "ext": [216, 248, 262, 277, 306, 339], "png": [216, 248, 262, 277, 306, 339, 371, 615, 616, 618, 620, 621], "datetime_format": [216, 218, 277, 279, 306, 308, 339, 341], "use_sweep_tim": [216, 218, 277, 279, 306, 308, 339, 341], "form": [216, 230, 248, 262, 277, 291, 306, 320, 339, 353, 614, 618, 624], "radar_name_field_sweep_tim": [216, 277, 306, 339], "datetim": [216, 218, 235, 239, 241, 277, 279, 296, 300, 301, 306, 308, 328, 333, 334, 339, 341, 361, 366, 367, 375, 376, 392, 436, 439, 440, 442, 443, 444, 587, 588, 589, 590, 591, 616, 620, 621, 624, 653, 678], "strftime": [216, 218, 235, 239, 277, 279, 296, 300, 306, 308, 328, 333, 339, 341, 361, 366, 616, 617, 621, 653, 678], "suitabl": [216, 248, 262, 277, 306, 339, 445, 618], "xaxi": [220, 223, 281, 284, 310, 313, 343, 346, 654], "static": [221, 222, 231, 232, 236, 242, 243, 282, 283, 292, 293, 297, 302, 303, 311, 312, 321, 322, 335, 336, 344, 345, 354, 355, 368, 369, 615], "yaxi": [221, 222, 224, 225, 226, 282, 283, 285, 286, 287, 311, 312, 314, 315, 316, 344, 345, 347, 348, 349], "keyword": [227, 288, 317, 329, 350, 362, 371, 382, 384, 614, 618, 624, 690, 693], "plot_ppi": [227, 288, 317, 350, 624, 632, 640, 649, 676, 677, 683, 685, 689], "plot_sweep_grid": [227, 624], "target_azimuth": [228, 289, 318, 351, 585], "mask_tupl": [228, 235, 238, 239, 240, 241, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 618], "norm": [228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 463, 618, 624, 654, 676], "cmap": [228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 260, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 371, 390, 614, 615, 616, 617, 618, 620, 621, 622, 640, 643, 650, 651, 652, 653, 654, 655, 659, 662, 664, 666, 667, 671, 673, 674, 675, 677, 678, 683, 684, 685, 690, 691, 700], "mask_outsid": [228, 235, 238, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 615, 618, 624, 661, 662, 671, 677], "title_flag": [228, 230, 235, 238, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 299, 300, 301, 318, 320, 328, 329, 332, 333, 334, 351, 353, 361, 362, 365, 366, 367, 618, 666], "axislabel": [228, 230, 235, 238, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 299, 300, 301, 318, 320, 328, 332, 333, 334, 351, 353, 361, 365, 366, 367, 615, 656, 661, 662], "axislabels_flag": [228, 230, 235, 238, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 299, 300, 301, 318, 320, 328, 332, 333, 334, 351, 353, 361, 365, 366, 367, 624, 674, 675], "colorbar_flag": [228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 616, 618, 621], "colorbar_label": [228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 615, 618, 620, 630, 632, 637, 656, 657, 661, 662, 663, 664, 668, 677, 683], "colorbar_ori": [228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 620, 624], "reverse_xaxi": [228, 239, 289, 300, 318, 333, 351, 366], "fig": [228, 229, 230, 235, 238, 239, 240, 241, 252, 253, 255, 257, 259, 268, 270, 272, 274, 289, 290, 291, 296, 299, 300, 301, 318, 319, 320, 328, 329, 332, 333, 334, 351, 352, 353, 361, 362, 365, 366, 367, 614, 615, 616, 617, 618, 620, 621, 622, 630, 632, 633, 637, 638, 639, 643, 644, 645, 646, 649, 650, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 671, 673, 675, 676, 677, 679, 683, 691, 693, 694], "tick": [228, 229, 230, 235, 239, 240, 241, 252, 253, 255, 257, 259, 268, 270, 272, 274, 289, 290, 291, 296, 300, 301, 318, 319, 320, 328, 329, 333, 334, 351, 352, 353, 361, 362, 366, 367, 618, 624, 650, 654, 674, 675, 676], "ticklab": [228, 229, 230, 235, 239, 240, 241, 252, 253, 255, 257, 259, 268, 270, 272, 274, 289, 290, 291, 296, 300, 301, 318, 319, 320, 328, 329, 333, 334, 351, 352, 353, 361, 362, 366, 367, 618, 624, 674, 675, 676], "raster": [228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 390, 618, 624], "pseudo": [228, 289, 318, 351, 624], "associ": [228, 289, 318, 351, 407, 445, 614, 627, 671, 700], "pcolormesh": [228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 371, 614, 624, 643, 663, 671, 674, 675], "integ": [228, 289, 318, 351, 392, 433, 460, 461], "ncp": [228, 235, 238, 239, 240, 241, 289, 296, 299, 300, 301, 318, 328, 329, 332, 333, 334, 351, 361, 362, 365, 366, 367, 618], "lumin": [228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 618], "scale": [228, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 371, 391, 392, 428, 429, 437, 445, 463, 464, 614, 617, 618, 655], "west": [228, 239, 289, 300, 318, 333, 351, 366, 614, 618, 656], "leav": [228, 230, 235, 239, 240, 241, 253, 255, 257, 259, 270, 272, 274, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 616, 618], "orient": [228, 229, 230, 235, 239, 240, 241, 252, 253, 255, 257, 259, 268, 270, 272, 274, 289, 290, 291, 296, 300, 301, 318, 319, 320, 328, 329, 333, 334, 351, 352, 353, 361, 362, 366, 367, 462, 616, 618, 619, 621, 676, 679], "treat": [228, 235, 239, 240, 241, 257, 259, 270, 272, 274, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 618], "themselv": [228, 235, 239, 240, 241, 257, 259, 270, 272, 274, 289, 296, 300, 301, 318, 328, 329, 333, 334, 351, 361, 362, 366, 367, 618], "figur": [228, 229, 230, 235, 238, 239, 240, 241, 252, 253, 255, 257, 259, 268, 270, 272, 274, 289, 290, 291, 296, 299, 300, 301, 318, 319, 320, 328, 329, 332, 333, 334, 351, 352, 353, 361, 362, 365, 366, 367, 615, 616, 617, 618, 620, 621, 622, 623, 630, 632, 637, 638, 639, 643, 644, 645, 646, 650, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 674, 675, 677, 683, 690, 691, 693, 694], "render": [228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 617, 618], "rather": [228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 618], "larg": [228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 463, 469, 618, 620, 621, 624], "Be": [228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 618, 627], "sure": [228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 617, 618, 621, 623, 624, 627, 643, 654, 674, 697, 701], "dpi": [228, 230, 235, 239, 240, 241, 260, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 371, 616, 618, 620], "pdf": [228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 618], "ep": [228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 618], "svg": [228, 230, 235, 239, 240, 241, 289, 291, 296, 300, 301, 318, 320, 328, 329, 333, 334, 351, 353, 361, 362, 366, 367, 618], "mappabl": [229, 252, 261, 268, 290, 319, 352, 621], "cax": [229, 252, 268, 290, 319, 352, 676], "imag": [229, 252, 268, 290, 319, 352, 445, 461, 582, 597, 614, 615, 617, 618, 621, 624, 635, 648, 669, 672, 674, 675, 696], "contourset": [229, 252, 261, 268, 290, 319, 352], "etc": [229, 252, 255, 261, 268, 290, 319, 329, 352, 362, 389, 436, 439, 440, 442, 444, 457, 470, 616, 618, 624, 671], "onto": [229, 252, 268, 270, 290, 319, 329, 352, 362, 418, 425, 429, 466, 618, 622, 678], "drawn": [229, 252, 268, 290, 319, 352, 618], "target_rang": [230, 291, 320, 353, 651], "delta_x": [230, 291, 320, 353], "delta_i": [230, 291, 320, 353], "az_limit": [230, 291, 320, 353], "el_limit": [230, 291, 320, 353, 651], "corner": [230, 291, 320, 327, 353, 360, 618, 619, 624, 635, 648, 669, 696], "reflector": [230, 291, 320, 353, 624, 635, 648, 669, 696], "griddata": [230, 291, 320, 353], "min": [230, 291, 320, 353, 614, 618, 679], "max": [230, 291, 320, 353, 371, 390, 614, 618, 624, 635, 637, 640, 643, 644, 648, 650, 651, 652, 658, 666, 669, 679, 683, 684, 685, 696], "npt": [231, 236, 292, 297, 321, 330, 354, 363], "hair": [231, 292, 321, 354, 660], "higher": [231, 236, 292, 297, 321, 330, 354, 363, 429, 617, 622, 671, 691, 693], "col": [232, 236, 237, 293, 297, 298, 322, 331, 355, 364, 617, 644], "line": [232, 238, 254, 255, 267, 269, 293, 299, 322, 325, 326, 329, 330, 332, 355, 358, 359, 362, 363, 365, 371, 390, 463, 615, 616, 617, 618, 621, 624, 625, 627, 635, 648, 652, 669, 671, 672, 678, 696, 697, 698, 701], "color": [232, 233, 234, 236, 237, 254, 293, 294, 295, 297, 298, 322, 323, 324, 326, 329, 330, 331, 355, 356, 357, 362, 364, 371, 390, 615, 616, 617, 618, 620, 621, 622, 652, 654, 655, 663, 664, 671, 672, 674, 675, 676, 677], "linestyl": [232, 236, 237, 254, 293, 297, 298, 322, 331, 355, 364, 616, 618, 620, 652, 654, 664], "symbol": [233, 234, 294, 295, 323, 324, 327, 356, 357, 360], "text_color": [233, 234, 294, 295, 323, 324, 356, 357], "text": [233, 234, 294, 295, 323, 324, 327, 356, 357, 360, 485, 616, 623, 624, 627, 650, 661, 679, 687, 691], "just": [233, 234, 294, 295, 323, 324, 356, 357, 380, 592, 622, 624, 625, 650, 655, 689, 695, 698, 701], "marker": [233, 234, 238, 254, 269, 294, 295, 299, 323, 324, 332, 356, 357, 365, 614, 616, 621], "title_datetime_format": [235, 239, 296, 300, 328, 333, 361, 366], "title_use_sweep_tim": [235, 239, 296, 300, 328, 333, 361, 366], "range_ring_location_km": [236, 297, 330, 363], "lw": [236, 237, 297, 298, 331, 364, 618, 620, 671], "range_r": [237, 260, 298, 331, 364, 371, 653], "seri": [237, 298, 331, 364, 443, 614, 617], "draw": [237, 255, 267, 298, 329, 331, 362, 364, 616, 618], "format_str": [238, 299, 332, 365], "ray_min": [238, 299, 332, 365], "ray_max": [238, 299, 332, 365], "style": [238, 254, 269, 299, 325, 326, 330, 332, 358, 359, 363, 365, 390, 624, 653], "ignoretilt": 240, "antenna_to_cartesian_track_rel": 240, "slant": [240, 426, 442], "ncar": 240, "soloii": 240, "time_axis_flag": [241, 301, 334, 367, 617], "date_time_form": [241, 301, 334, 367], "tz": [241, 301, 334, 367, 616], "zone": [241, 301, 334, 367], "info": [241, 301, 329, 334, 362, 367, 618, 624, 653, 676, 677, 678, 695], "aspect_ratio": [242, 302, 335, 368], "aspect": [242, 302, 335, 368, 650], "xlim": [243, 303, 336, 369, 614, 615, 618, 620, 621, 622, 631, 657, 659, 663, 664, 677, 693], "ylim": [243, 303, 336, 369, 614, 615, 617, 618, 620, 621, 622, 657, 659, 661, 662, 663, 664, 666, 668, 671, 677], "cartopi": [244, 245, 246, 247, 255, 304, 329, 371, 614, 616, 618, 620, 621, 622, 624, 625, 635, 637, 639, 643, 644, 648, 652, 654, 667, 669, 672, 674, 675, 683, 687, 690, 691, 693, 694, 696, 697, 698, 701], "coastlin": [245, 255, 329, 362, 614, 618], "polit": 246, "state": [247, 464, 616, 618, 620, 624], "grid_name_field_level_tim": [248, 262], "latitudin": [250, 257, 272], "step": [253, 390, 436, 439, 440, 442, 443, 444, 615, 617, 622, 627, 637, 638, 663, 664, 674, 701], "interp_typ": 253, "x_axi": [253, 652], "metpi": [253, 616, 618, 620, 621, 624, 687, 697], "design": [253, 597, 614, 625, 663, 674, 675, 687, 698], "geodes": 253, "nearest": [253, 382, 426, 429, 436, 439, 440, 442, 444, 458, 585, 586, 606, 614, 618, 624, 678, 693], "dataarrai": 253, "interp": [253, 465], "ex": [253, 465, 616, 620, 622, 623, 650], "upper": [253, 255, 257, 259, 270, 272, 274, 616, 620, 621, 622, 652], "colormesh": [253, 255, 257, 259, 270, 272, 274], "64": [253, 255, 257, 259, 270, 272, 274, 615, 650, 657, 658, 659, 663, 665, 667, 668, 672, 694, 697], "linewidth": [254, 269, 616, 618, 620, 621, 654, 663, 664], "crosshair": [254, 269, 618], "lat_lin": [255, 260, 267, 329, 362, 371, 616, 618, 643, 660, 672], "lon_lin": [255, 260, 267, 329, 362, 371, 616, 618, 643, 660, 672], "embellish": [255, 329, 362, 616, 654], "add_grid_lin": [255, 329, 616], "reason": [255, 267, 618], "america": [255, 267, 329, 362, 618], "cr": [255, 304, 329, 371, 462, 614, 616, 618, 620, 621, 622, 637, 639, 643, 644, 652, 654, 660, 667, 672, 674, 675, 676, 683, 690, 691, 694], "subsequ": [255, 329, 618], "geoax": [255, 329, 618, 690, 693], "platecarre": [255, 329, 614, 616, 618, 620, 621, 622, 637, 643, 652, 654, 667, 672, 674, 675, 683, 691, 694], "shapefil": [255, 329, 362, 618], "certain": [255, 329, 372, 461, 597, 618, 624, 674, 675, 694], "plot_latitudinal_level": [256, 271], "y_index": [257, 272], "basemap": [257, 259, 261, 266, 267, 270, 272, 274, 337, 358, 359, 360, 362, 363, 624, 687, 697], "plot_longitudinal_level": [258, 273], "x_index": [259, 274], "add_map": [260, 371], "savedir": [260, 371], "show_figur": [260, 371], "add_slogan": [260, 371, 653], "top": [261, 429, 466, 614, 616, 619, 624, 625, 650, 671, 672, 693, 698], "veric": 263, "area_thresh": [267, 362], "10000": [267, 362, 436, 439, 440, 442, 444, 473, 644, 652, 653, 674, 675, 693], "auto_rang": 267, "min_lon": [267, 329, 362, 616, 618, 643, 660, 694], "92": [267, 661, 672], "max_lon": [267, 329, 362, 616, 618, 643, 660, 694], "86": [267, 618], "min_lat": [267, 329, 362, 616, 618, 643, 660, 694], "max_lat": [267, 329, 362, 616, 618, 643, 660, 694], "44": [267, 446, 457, 614, 616, 674, 675, 696, 697], "databas": [267, 362, 620], "merc": [267, 362], "mercat": [267, 644], "line_styl": [269, 325, 326, 330, 358, 359, 363, 660], "plot_rhi": [288, 317, 350, 614], "plot_vpt": [288, 317, 350, 617], "grid_project": [304, 428, 429, 618], "progress": [304, 337, 621, 700], "correctli": [304, 337, 621, 624, 653], "github": [304, 337, 616, 619, 624, 687, 697, 700, 701], "tracker": [304, 337, 625, 687, 698], "azimuthalequidist": 304, "line_lon": [325, 358], "line_lat": [325, 358], "compat": [325, 326, 327, 330, 358, 359, 360, 363, 387, 616, 624, 628, 700, 701], "line_x": [326, 359], "line_i": [326, 359], "ro": [327, 360], "label_text": [327, 360], "label_offset": [327, 360], "bottom": [327, 360, 616, 618, 650, 654], "110m": [329, 618], "shapefile_kwarg": [329, 618], "alpha": [329, 362, 390, 450, 451, 452, 453, 454, 455, 616, 620, 654, 663, 671], "edgecolor": [329, 362, 616, 620, 663], "face": [329, 362, 618], "reson": [329, 362, 618], "lambertconform": [329, 618, 639, 660, 690], "domain": [329, 362, 614, 618, 643], "neither": [329, 362, 394, 618], "extend": [329, 362, 386, 618], "word": [329, 618], "10m": [329, 616, 618, 622, 639, 660], "50m": [329, 618, 683, 691, 694], "naturalearthfeatur": [329, 618], "tranpar": [329, 362, 618], "overplot": [329, 362, 618], "pixel": [329, 362, 390, 460, 461, 567, 614, 618], "lcc": 362, "cylindr": 362, "mill": 362, "exhibit": 362, "distort": 362, "aea": 362, "laea": 362, "conform": [362, 618, 687, 689], "tmerc": 362, "stere": 362, "aeqd": 362, "cass": 362, "even": [362, 445, 465, 620, 624, 663, 671, 687, 693, 701], "cyl": [362, 624], "cannot": [362, 374, 616, 618], "lake": [362, 620], "esri": 362, "background": [362, 370, 371, 390, 446, 457, 469, 618, 623, 660, 667, 674, 675], "untest": 362, "always_core_thr": [370, 446, 457, 674, 675], "use_cosin": [370, 446, 457, 674, 675], "max_diff": [370, 446, 457, 674, 675], "zero_diff_cos_v": [370, 446, 457, 674, 675], "use_addit": [370, 446, 457, 674, 675], "scalar_diff": [370, 446, 457, 674, 675], "convect": [370, 445, 446, 457, 469, 614, 621, 624, 635, 670, 678, 680, 696], "stratiform": [370, 445, 446, 457, 469, 624, 635, 670, 678, 680, 696], "classif": [370, 445, 446, 451, 457, 462, 469, 624, 635, 670, 680, 696], "cosin": [370, 446, 457, 674, 675], "classifi": [370, 445, 446, 457, 462, 624, 674, 675, 676], "eqn": [370, 446, 457], "yuter": [370, 446, 448, 457, 469, 597, 655, 671, 674, 675, 678], "1997": [370, 446, 457, 674, 675], "zero": [370, 388, 390, 446, 457, 461, 463, 606, 621, 624, 633, 671, 674, 675, 690, 694], "multipli": [370, 446, 457, 617, 674, 689], "constant": [371, 382, 422, 428, 429, 447, 460, 463, 614, 617, 624, 649], "plan": [371, 447, 649], "cappi": [371, 447, 635, 648, 669, 696], "ref": [371, 618, 653, 667, 675], "vel": 371, "dot": [371, 664], "inch": [371, 620], "slogan": 371, "It": [371, 429, 465, 582, 593, 616, 618, 622, 625, 628, 643, 698, 700, 701], "byte": [371, 390, 624], "decod": [371, 386, 624], "charact": [371, 392], "featur": [371, 457, 615, 616, 618, 622, 628, 635, 655, 670, 671, 674, 680, 687, 696], "author": [371, 431, 434, 448, 457, 597, 615, 622, 623, 627, 630, 631, 632, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 678, 679, 683, 684, 685], "hamid": [371, 447, 649, 653, 678], "ali": [371, 447, 649, 653, 678], "syedhamidali": [371, 447, 624], "most": [372, 380, 616, 617, 618, 624, 650, 671, 675, 691, 693, 701], "storage_opt": [373, 382, 384], "anon": [373, 382, 384, 614, 616, 620, 621, 653, 678], "open": [373, 382, 384, 485, 614, 617, 618, 620, 621, 623, 624, 625, 638, 657, 687, 689, 690, 691, 693, 694, 695, 698, 701], "binari": [373, 457, 614, 627], "transpar": [373, 390, 616, 618, 624, 663], "decompress": [373, 624], "gzip": [373, 380, 381], "bzip2": [373, 624], "close": [373, 457, 463, 615, 616, 620, 621, 622, 624, 633, 638], "compress": [373, 380, 381, 618, 624], "backend": [373, 382], "googl": [373, 382, 624, 625, 635, 636, 641, 696, 698], "storag": [373, 382, 562, 638], "amazon": [373, 382, 614, 616, 618, 620, 637, 639], "web": [373, 382, 390, 614, 618, 620, 622, 637, 639], "servic": [373, 382, 614, 616, 618, 620, 622, 627, 637, 638, 639, 650], "s3": [373, 382, 616, 620, 637, 639, 653, 655, 674, 675, 678], "file_lik": 373, "use_rsl": 374, "read_": 374, "trmm": [374, 386, 624, 687, 697], "librari": [374, 383, 386, 389, 390, 614, 616, 617, 618, 620, 624, 625, 626, 638, 687, 689, 690, 691, 693, 694, 695, 697, 698, 700], "choos": [374, 618, 635, 648, 669, 674, 675, 696, 701], "Not": [374, 381, 462], "typeerror": [374, 624], "launch_datetim": 375, "date": [375, 376, 612, 616, 618, 622, 623, 624, 637, 638, 639, 653, 678], "radiosond": 375, "launch": 375, "record": [375, 620, 622, 695], "target_datetim": 376, "closest": [376, 418, 436, 439, 440, 442, 444], "profile_datetim": 376, "use_arm_scan_nam": 377, "scan_nam": [377, 614, 617, 624], "use_file_field_attribut": 378, "csu": [378, 624], "chill": 378, "chl": [378, 624], "field_file_nam": 378, "long_nam": [378, 614, 617, 631, 674, 675, 677, 690, 695], "zlib": [380, 381], "read_mdv": [380, 615, 632, 645, 659, 663, 664, 665], "interchang": 380, "vlevel": 380, "proj_polar_radar": 380, "9": [380, 451, 453, 462, 593, 614, 616, 617, 618, 620, 621, 623, 655, 664, 672, 673, 674, 675, 677, 680, 683, 689, 694, 695], "proj_rhi_radar": 380, "vlevel_typ": 380, "vert_type_z": 380, "vert_type_elev": 380, "vert_type_az": 380, "17": [380, 457, 616, 617, 634, 661, 665, 666, 669, 675, 686, 696], "vert_type_pressur": 380, "vert_type_theta": 380, "unknown": [380, 624], "station": [382, 383, 618, 639], "linear_interp": 382, "nexrad": [382, 383, 384, 385, 614, 624, 635, 636, 641, 648, 653, 655, 669, 674, 675, 678, 687, 695, 696], "archiv": [382, 616, 618, 620, 622, 656, 687], "host": [382, 384, 616, 627], "noaa": [382, 384, 386, 614, 616, 618, 620, 621, 637, 638, 639, 653, 655, 674, 675, 678], "nation": [382, 384, 614, 616, 618, 620, 621, 637, 638, 650], "climat": [382, 384, 617, 618, 620, 624, 625, 687, 689, 690, 691, 693, 694, 695, 698], "ucar": [382, 383, 614], "thredd": [382, 383, 389], "server": [382, 383], "letter": [382, 383, 385], "icao": [382, 383, 624], "older": [382, 383, 624, 625, 635, 636, 641, 687, 696, 698], "mix": [382, 445, 597, 655, 674, 675], "fsspec": [382, 384, 620, 621, 624, 653, 678, 687, 697], "cut": [382, 383, 384, 461], "www": [382, 383, 384, 460, 616, 620, 625, 698], "ncdc": [382, 384], "gov": [382, 384, 614, 615, 616, 620, 622, 630, 632, 637, 639, 640, 643, 645, 646, 650, 651, 652, 654, 656, 657, 658, 659, 661, 663, 664, 665, 666, 668, 672, 673, 683, 684, 685], "edu": [382, 383, 460, 614, 649, 653, 674], "catalog": [382, 383, 614], "html": [382, 383, 460, 616, 620, 624, 625, 687, 697, 698], "common": [383, 617, 624, 644, 687, 697], "cdm": [383, 389], "url": [383, 616, 618, 622], "java": [383, 389], "tool": [383, 389, 614, 617, 622, 687, 697], "opendap": 383, "accept": [383, 436, 439, 440, 442, 464, 465, 470, 618, 622, 624, 625, 698], "compil": [383, 464, 621, 624, 687, 697], "unidata": [383, 614, 637], "htm": 383, "product": [384, 386, 434, 473, 614, 618, 624], "nw": [384, 620, 621], "wsr": 384, "88d": 384, "iii": 384, "distribut": [384, 446, 448, 456, 457, 472, 567, 578, 579, 580, 581, 598, 599, 624, 625, 671, 674, 675, 687, 698], "roc": 384, "wsr88d": [384, 385], "level_iii": 384, "level3info": 384, "asp": 384, "radar_format": 385, "callid": 385, "skip_range_check": 385, "rsl_radar": 385, "id": [385, 390, 614, 622, 624], "verifi": [385, 600, 611], "ioerror": 385, "time_ord": [386, 624], "full_xhdr": 386, "noaa_hh_hdr": 386, "ignore_xhdr": 386, "ignore_sweep_start_m": 386, "sigmet": [386, 624, 687], "iri": [386, 624, 687, 697], "sequenti": [386, 650], "re": [386, 445, 616, 625, 698], "manner": 386, "determind": 386, "maintain": [386, 425, 624], "yet": [386, 637, 644], "warn": [386, 389, 462, 614, 616, 617, 618, 620, 621, 622, 624, 643, 653, 677, 693], "reverse_and_rol": 386, "strictli": 386, "increas": [386, 429, 463, 466, 614, 618, 625, 650, 671, 678, 693, 698], "becom": [386, 674, 690, 693], "thisopt": 386, "strict": 386, "header": [386, 624], "hurrican": [386, 618, 674, 675], "hunter": 386, "millisecond": [386, 621], "precis": [386, 445], "explic": 386, "read_rsl": [386, 697], "error": [386, 390, 464, 465, 614, 616, 618, 621, 623, 624, 644, 653, 678, 697], "uf": [387, 392, 624, 687], "introduc": [387, 465], "implement": [387, 394, 407, 428, 452, 460, 617, 618, 621, 624, 625, 630, 675, 698], "time_refer": [388, 689], "compliant": 388, "mani": [388, 624, 625, 687, 693, 698, 701], "outlin": [388, 463, 593], "_zlib": [388, 389], "_deflatelevel": [388, 389], "_shuffl": [388, 389], "_fletcher32": [388, 389], "_contingu": [388, 389], "_chunksiz": [388, 389], "_endian": [388, 389], "_least_significant_digit": [388, 389], "_fillvalu": [388, 389, 624, 690, 695], "write_proj_coord_si": 389, "proj_coord_si": 389, "write_point_x_y_z": 389, "write_point_lon_lat_alt": 389, "projectioncoordinatesystem": 389, "toolsui": 389, "written": [389, 391, 392, 624, 627, 687], "appropri": [389, 593, 618, 628], "understood": 389, "rgb": 390, "viridi": [390, 674, 675], "color_level": 390, "warp": 390, "sld": 390, "use_doublequot": 390, "transparent_bg": 390, "opac": 390, "geotiff": [390, 624, 687], "wgs84": 390, "sphere": [390, 594, 607], "latter": [390, 618], "usabl": [390, 614], "former": 390, "gi": 390, "while": [390, 618, 621, 622, 644, 687, 691, 701], "show": [390, 614, 615, 616, 618, 620, 622, 623, 624, 625, 630, 631, 632, 633, 637, 638, 639, 643, 644, 645, 646, 649, 650, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 674, 675, 677, 678, 683, 689, 691, 693, 694, 695, 698], "lack": [390, 405, 415], "composit": [390, 434, 614, 617, 624, 635, 670, 680, 696], "gdal": [390, 624, 687], "via": [390, 426, 427, 616, 618, 627], "conda": [390, 620, 624, 625, 687, 697, 698, 701], "rbg": 390, "tabl": [390, 614], "column": [390, 583, 595, 596, 614, 616, 617, 618, 624, 635, 670, 678, 680, 696], "categor": [390, 616, 676, 678], "255": [390, 624, 675], "hydrometeor": [390, 451, 462, 624, 635, 670, 680, 691, 696], "gdalwarp": 390, "command": [390, 624, 625, 627, 687, 690, 698, 701], "o": [390, 485, 616, 618, 621, 625, 654, 687, 697, 698], "az": [390, 616, 624, 661, 662], "descriptor": 390, "tiff": 390, "don": [390, 617, 618, 621, 624, 643], "t": [390, 439, 445, 446, 457, 463, 464, 467, 473, 614, 617, 618, 621, 622, 624, 625, 643, 671, 674, 675, 687, 689, 698], "quot": 390, "translat": 390, "sr": [390, 614], "instead": [390, 614, 616, 618, 621, 622, 624, 625, 639, 671, 674, 693, 697, 698, 701], "opaqu": [390, 618], "mdv_field_nam": [391, 624], "field_write_ord": [391, 392], "sentinel": [391, 392], "float32": [391, 614, 617, 618, 624, 672, 689, 691, 695], "_write_as_dtyp": 391, "writabl": 391, "satisfi": 391, "xy": [391, 429], "irregular": 391, "exce": [391, 674, 675], "122": [391, 622, 637, 643, 652, 673, 677, 683], "uint8": 391, "uint16": 391, "scale_factor": [391, 617], "add_offset": [391, 617], "uncompress": 391, "sai": [391, 625, 698], "uf_field_nam": 392, "radar_field_nam": 392, "volume_start": 392, "templates_extra": 392, "radar_beam_width_h": [392, 617], "radar_beam_width_v": [392, 617], "radar_receiver_bandwidth": 392, "polarization_mod": 392, "round": [392, 426, 427, 618, 622, 624], "_uf_scale_factor": 392, "advanc": [392, 614], "usag": 392, "templat": [392, 624, 627], "mandatory_head": 392, "optional_head": 392, "field_head": 392, "lazi": [393, 394, 396, 403, 624], "set_lazi": 394, "callabl": [394, 403, 617, 618], "cach": 394, "tradit": 394, "supplement": 394, "syntax": [394, 624], "prevent": [394, 429, 616, 624, 625, 698], "comparison": [394, 624, 643, 649, 675], "__cmp__": 394, "__ge__": 394, "__gt__": 394, "__le__": 394, "__lt__": 394, "__ne__": 394, "nor": 394, "viewitem": 394, "viewkei": 394, "viewvalu": 394, "fromkei": 394, "tradition": 394, "referenc": 394, "lazyloaddictionari": 394, "henc": 394, "key1": 394, "value1": 394, "key2": 394, "value2": 394, "lazy_func": 394, "lambda": 394, "lazykey1": 394, "item": [395, 405, 408, 415, 624], "els": [397, 398, 409, 617, 621, 622, 653, 677, 678], "value_cal": 403, "concret": 407, "__getitem__": [407, 617], "__setitem__": 407, "__delitem__": 407, "__iter__": 407, "__len__": 407, "robust": [417, 445, 624], "src_radar": 418, "dest_radar": 418, "distance_toler": [418, 643], "500": [418, 616, 620, 643, 652, 657], "gatefilter_src": [418, 643], "time_toler": [418, 643], "60": [418, 614, 630, 637, 643, 646, 649, 654, 684, 689, 691, 693, 700], "kd": 418, "tree": [418, 429, 630, 633, 640, 683, 684, 685, 700], "physic": [418, 434, 446, 457, 674, 675], "easi": [418, 434, 687], "equival": [418, 615, 617, 621, 624, 637, 654, 662, 668], "src_radar_i": 418, "src_radar_x": 418, "destin": [418, 420, 616, 620, 624, 643], "toler": [418, 419, 421, 436, 439, 442, 443, 444, 585, 586, 624], "src_radar_tim": 418, "dest_radar_tim": 418, "gate_mapp": 418, "src": [418, 620], "dest": 418, "dest_index": 418, "radar_map": 418, "mapped_radar": [418, 643], "adequ": [418, 643], "getter": [419, 421], "field_list": [420, 461], "zg": [422, 423, 424], "yg": [422, 423, 424], "xg": [422, 423, 424], "roi": [422, 423, 424, 426, 427, 429, 624, 644], "influenc": [422, 425, 428, 429, 693], "grow": [423, 424, 428, 429, 625, 698], "virtual": [424, 428, 429], "grid_shap": [425, 426, 427, 428, 429, 563, 644, 645, 646, 652, 653, 674, 675, 684, 693, 700], "grid_limit": [425, 426, 427, 428, 429, 563, 644, 645, 646, 652, 653, 674, 675, 684, 693, 700], "gridding_algo": 425, "map_gates_to_grid": [425, 624], "copy_field_dtyp": [425, 624], "map_to_grid": [425, 428, 624], "significantli": [425, 429], "faster": [425, 429, 618, 624], "barn": [425, 429, 624, 693], "1964": 425, "techniqu": [425, 445, 447, 633, 675], "maxim": 425, "numer": [425, 624], "analysi": [425, 437, 445, 596, 618, 622, 624], "meteorologi": [425, 431, 434, 463, 473, 593], "climatologi": [425, 473], "396": [425, 617], "409": [425, 624], "cressman": [425, 429, 693], "1959": 425, "monthli": 425, "review": [425, 615, 624], "87": [425, 614, 616, 621], "367": 425, "374": [425, 624], "paulei": [425, 693], "1990": [425, 693], "theoret": [425, 437], "discret": 425, "respons": 425, "118": 425, "1145": [425, 624], "1164": [425, 624], "target_sweep": [426, 427], "grid_siz": [426, 427, 428, 429], "801": [426, 427, 624], "auto": [426, 427, 618, 620, 650], "max_z": [426, 427], "12000": [426, 427, 689, 693], "el_rounding_frac": 426, "add_grid_altitud": 426, "weight": [426, 427, 428, 429, 440, 462, 463, 472, 614, 624, 635, 642, 647, 693, 696], "grid_from_radar": [426, 427, 428, 429, 644, 645, 646, 652, 653, 674, 675, 684, 693, 700], "receiv": [426, 427, 435, 617, 620, 624, 691], "h_factor": [426, 427, 428, 429, 644], "dist_factor": [426, 427, 428, 644], "radar_d": [426, 427], "third": [426, 427, 625, 698], "az_rounding_frac": 427, "grid_origin": [428, 429, 646, 652], "grid_origin_alt": [428, 429], "map_roi": [428, 429], "weighting_funct": [428, 429, 693], "barnes2": [428, 429, 624], "17000": [428, 429, 693], "roi_func": [428, 429, 624, 693], "dist_beam": [428, 429, 693], "constant_roi": [428, 429, 624], "z_factor": [428, 429], "xy_factor": [428, 429], "02": [428, 429, 614, 617, 655, 669, 674, 675, 680, 696], "min_radiu": [428, 429, 624, 693], "250": [428, 429, 436, 442, 653, 695], "nb": [428, 429, 675], "bsp": [428, 429], "linearli": 428, "roifunct": 428, "dist": [428, 429, 598, 599, 614, 616], "get_roi": 428, "cython": [428, 624, 687, 697], "around": [428, 443, 446, 457, 567, 582, 620, 622, 645, 653, 663, 666, 671, 674, 678, 689, 691], "copy_field_data": 429, "kd_tree": 429, "leafsiz": 429, "nearbi": [429, 646], "coodin": 429, "azimut": 429, "similarili": 429, "example_roi_func_const": 429, "example_roi_func_dist": 429, "example_roi_func_dist_beam": 429, "altern": [429, 434, 618, 674], "foreach": 429, "metet": 429, "sacr": 429, "sapr": [429, 569], "dist_mean": 429, "preserv": [429, 622, 691], "less": [429, 445, 446, 448, 457, 465, 597, 622, 671, 674], "memori": [429, 624], "slower": [429, 463], "leaf": 429, "lookup": 429, "affect": 429, "optim": [429, 463, 624], "natur": [429, 445, 618], "ref_field": [431, 675, 690], "300": [431, 614, 616, 617, 618, 620, 621, 655, 656, 678, 689], "save_nam": [431, 675], "nws_primary_pr": 431, "mm": [431, 621, 622, 623, 674, 675, 678], "hr": [431, 674, 675], "laura": [431, 448, 457, 597, 655, 671, 674, 675], "tomkin": [431, 448, 457, 597, 655, 671, 674, 675], "lauramtomkin": [431, 448, 457, 597, 655, 671, 675], "gmail": [431, 448, 457, 597, 655, 671, 675], "com": [431, 448, 457, 597, 614, 625, 655, 671, 675, 678, 697, 698, 700, 701], "look": [431, 434, 439, 448, 467, 614, 616, 617, 618, 620, 622, 623, 624, 631, 637, 638, 639, 643, 644, 654, 687, 689, 691, 693, 695], "expect": [431, 465, 625, 698], "relationship": [431, 445, 456], "american": [431, 434], "meteorolog": [431, 434, 437, 447, 452, 473, 618], "2022": [431, 434, 597, 614, 617, 623, 637, 655, 674, 675, 678, 687], "glossari": [431, 434, 447], "ametsoc": [431, 434, 447], "wiki": [431, 434, 447, 460], "r_relat": 431, "25000": [432, 693], "measur": [432, 435, 446, 450, 451, 456, 457, 462, 463, 464, 465, 583, 617, 618, 620, 622, 625, 674, 675, 687, 689, 690, 691, 693, 694, 695, 698], "nyq": [433, 620, 683, 691], "check_nyq_uniform": 433, "deriv": [433, 463, 465], "vel_dict": 433, "entri": [433, 695], "am": [434, 620, 625, 687, 698], "dry": [434, 462, 676, 677], "world": [434, 635, 648], "aloft": 434, "oppos": [434, 655], "nwp": [434, 676], "why": [434, 618, 623, 625, 698], "would": [434, 614, 615, 616, 617, 620, 622, 624, 625, 637, 638, 639, 691, 693, 698], "think": 434, "turn": [434, 650, 674, 675, 687], "spin": [434, 622], "randi": [434, 620], "chase": [434, 620], "dopplerchas": [434, 624], "cdr_field": 435, "circular": [435, 598, 599, 624, 674], "depolar": [435, 617], "cdr": 435, "matrosov": 435, "2004": 435, "simultan": 435, "transmiss": 435, "574": [435, 624], "1520": [435, 437, 446, 448, 457, 624, 671, 674, 675, 678], "0426": [435, 437], "021": 435, "0574": 435, "deflha": 435, "ref_tim": [436, 439, 440, 442, 443, 444], "latlon_tol": [436, 442, 444], "0005": [436, 442, 444], "delta_rng": [436, 442], "15000": [436, 442, 671, 689, 693], "delta_azi": [436, 442], "hmax": [436, 439, 440, 442, 444], "hre": [436, 439, 440, 442, 444], "avg_typ": [436, 439, 440, 442, 584], "nvalid_min": [436, 439, 440, 442, 584], "interp_kind": [436, 439, 440, 442, 444, 606], "qvp": [436, 439, 440, 442, 444, 467, 624], "enhanc": [436, 677, 701], "interest": [436, 442, 444, 614, 616, 617, 618, 620, 622, 643, 674, 677, 678], "central": [436, 442, 614, 616, 620], "evp": [436, 442], "median": [436, 439, 440, 442, 584, 624], "regardless": [436, 439, 440, 442, 444], "elimin": [436, 439, 440, 442, 444, 622, 691, 693], "kaltenboeck": 436, "2016": [436, 439, 451, 462, 614, 617, 618, 620, 625, 638, 687, 689, 690, 691, 693, 694, 695, 698], "storm": [436, 457, 469, 470, 567, 568, 570, 614, 617, 618, 620, 655, 674, 675, 678, 693], "explor": [436, 618, 620], "methodologi": [436, 473, 583, 691], "meteorologisch": 436, "zeitschrift": 436, "26": [436, 614, 678, 696], "207": [436, 617, 633, 634, 696], "222": [436, 632, 656], "l_field": 437, "logarithm": 437, "log10": [437, 643], "l_field_out": 437, "covari": [437, 464], "matrix": [437, 464, 618, 624], "scatter": [437, 614, 616, 620, 621, 622, 652, 672], "315": [437, 624], "328": [437, 445], "018": 437, "0315": 437, "ioprcm": 437, "noisedbz_v": 438, "ref_dist": 438, "noise_field": [438, 441], "noisedbz": 438, "ang_tol": [439, 442, 443], "quasi": [439, 440, 467], "convers": [439, 442, 445, 582, 617], "zhang": [439, 442, 450, 467, 583], "reev": [439, 467], "kumjian": [439, 440, 467], "tschallen": [439, 467], "tr\u00f6mel": 439, "simmer": [439, 450, 467], "wai": [439, 467, 617, 625, 627, 643, 689, 698, 701], "33": [439, 614, 617, 618, 643, 647, 675, 678, 695, 696], "551": 439, "562": [439, 624], "rmax": 440, "50000": [440, 646, 652, 674, 675, 693], "weight_pow": 440, "ab": [440, 614], "grng": 440, "tobin": 440, "2017": [440, 442, 622], "surfac": [440, 446, 457, 617, 674, 675], "ic": [440, 442, 462, 583, 663, 676, 677], "pellet": 440, "forecast": [440, 618], "2065": 440, "2082": 440, "bukovc": 442, "winter": [442, 457, 655, 674, 675], "liquid": 442, "reveal": 442, "2dvd": 442, "oklahoma": [442, 563, 620], "56": [442, 614, 617, 679], "1345": 442, "1363": [442, 624], "along_azi": 443, "fixed_rang": 443, "fixed_azimuth": 443, "fixed_elev": 443, "rng_tol": 443, "value_start": 443, "value_stop": 443, "acoord": 443, "along_el": 443, "along_rng": 443, "stop": 443, "cappi_level": 445, "zr_a": 445, "200": [445, 625, 678, 698], "zr_b": 445, "core_wt_threshold": 445, "conv_wt_threshold": 445, "conv_scale_km": 445, "min_reflect": 445, "conv_min_refl": 445, "conv_core_threshold": 445, "42": [445, 446, 457, 469, 614, 616, 617, 620, 632, 634, 672, 674, 675, 696], "override_check": 445, "computation": 445, "\u00e0": 445, "trou": 445, "wavelet": 445, "atwt": 445, "multiresolut": 445, "focus": [445, 614, 616, 617], "raut": 445, "2008": [445, 639], "2020": [445, 583, 618, 622, 624, 625, 655, 687, 697, 698], "sensit": 445, "howev": [445, 463, 618, 691], "intermedi": 445, "signific": 445, "approxim": [445, 614, 617, 624, 633], "break": [445, 622, 626, 627, 700], "season": 445, "2018": [445, 462, 618], "discuss": [445, 618, 628, 687], "insensit": 445, "variat": [445, 456, 463, 624], "dyadic": 445, "scale_break_us": 445, "bypass": 445, "saniti": 445, "fall": 445, "categori": [445, 616, 622], "strong": [445, 457, 616, 675], "updraft": 445, "activ": [445, 701], "collis": 445, "coalesc": 445, "wide": [445, 671], "remain": 445, "intens": [445, 469, 567], "unclassifi": [445, 614], "karekar": 445, "puranik": 445, "infrar": [445, 614], "satellit": [445, 614], "ieee": [445, 464], "geosci": [445, 464], "remot": [445, 464, 616, 617, 618, 624, 625, 637, 638, 698], "sen": [445, 464], "lett": 445, "330": [445, 624], "seed": 445, "reeder": 445, "jakob": 445, "cascad": 445, "downscal": 445, "geophi": 445, "123": [445, 448, 671], "2050": 445, "2067": 445, "louf": 445, "gayatri": 445, "murugavel": 445, "konwar": 445, "prabhakaran": 445, "tran": 445, "5409": 445, "5415": 445, "dx": [446, 457, 469, 674, 675], "dy": [446, 457, 469, 616, 674, 675], "level_m": [446, 457, 675], "bkg_rad_km": [446, 457, 674, 675], "11": [446, 457, 462, 605, 614, 616, 622, 647, 672, 675, 684, 687, 694, 695, 700], "55": [446, 457, 614, 616, 631, 667, 674, 675], "calc_thr": [446, 457, 674, 675], "weak_echo_thr": [446, 457, 674, 675], "min_dbz_us": [446, 674], "db_averag": [446, 457, 674, 675], "remove_small_object": [446, 457, 674, 675], "min_km2_siz": [446, 457, 674, 675], "val_for_max_conv_rad": [446, 674], "max_conv_rad_km": [446, 674], "cs_core": 446, "nosfcecho": [446, 457, 674, 675], "weakecho": [446, 457, 674, 675], "sf": [446, 674], "conv": [446, 674], "estimate_flag": [446, 457, 674, 675], "estimate_offset": [446, 457, 674, 675], "partit": [446, 457, 469, 622], "pars": [446, 457, 617, 618, 624], "least": [446, 457, 674], "simpler": [446, 457, 674], "percentag": [446, 457], "weak": [446, 457, 674, 675], "snow": [446, 451, 457, 462, 583, 597, 617, 655, 674, 675, 676, 677], "underestim": [446, 457, 674, 675], "wih": [446, 457], "convsf_dict": [446, 674, 675], "raindrop": [446, 457, 633, 674, 675], "pacif": [446, 457, 674, 675], "warm": [446, 457, 463, 674], "pool": [446, 457, 674, 675], "implic": [446, 457, 674, 675], "appl": [446, 457, 465, 467, 469, 472, 583, 625, 674, 675, 678, 698], "meteor": [446, 457, 465, 467, 469, 472, 583, 625, 674, 675, 678, 687, 698], "36": [446, 457, 614, 639, 643, 646, 652, 667, 672, 674, 675, 679, 693], "847": [446, 457, 624, 674, 675], "867": [446, 457, 624, 674, 675], "0450": [446, 457, 674, 675, 678], "036": [446, 457, 674, 675], "3c0847": [446, 457, 674, 675], "morsdo": [446, 457, 674, 675], "3e2": [446, 448, 457, 671, 674, 675], "smith": [446, 457, 674, 675], "wilheit": [446, 457, 674, 675], "zipser": [446, 457, 674, 675], "character": [446, 457, 469, 674, 675, 678], "tropic": [446, 457, 674, 675, 677], "kwajex": [446, 457, 674, 675], "385": [446, 457, 624, 674, 675], "415": [446, 457, 674, 675], "jam2206": [446, 457, 674, 675], "2000": [447, 473, 614, 645, 649, 693], "same_nyquist": 447, "nyquist_vector_idx": 447, "stack": [447, 614, 617, 620, 625, 697, 698], "visual": [447, 621, 622, 624, 650, 655, 663, 672, 675, 678, 683, 700], "field_bin": [448, 671], "altitude_bin": [448, 671], "field_mask": [448, 671], "min_frac_thr": [448, 671], "contour": [448, 624, 635, 648, 669, 671, 696], "diagram": [448, 635, 670, 680, 696], "cfad": [448, 624, 635, 670, 680, 696], "1995": [448, 457, 469, 671, 674, 675, 678], "histogram": [448, 643, 671, 691], "largest": 448, "row": [448, 614, 616, 618, 671], "creation": [448, 624], "total": [448, 463, 464, 465, 617, 620, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 696], "freq_norm": [448, 671], "height_edg": [448, 671], "field_edg": [448, 671], "kinemat": [448, 472, 625, 671, 698], "microphys": [448, 614, 671], "evolut": [448, 671], "florida": [448, 618, 638, 671], "cumulonimbu": [448, 671], "mon": [448, 671], "wea": [448, 671], "rev": [448, 671], "1941": [448, 671], "1963": [448, 671], "0493": [448, 671], "3c1941": [448, 671], "tdkame": [448, 671], "the_spectra": 449, "vel_bin": 449, "left_limit": 449, "right_limit": 449, "new_spectra": 449, "new_bin": 449, "a_field": [450, 451, 454], "rr_field": [450, 451, 452, 453, 454, 455, 456], "go": [450, 451, 452, 454, 455, 462, 608, 615, 616, 621, 622, 624, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 690], "diederich": 450, "tromel": [450, 467], "2015": [450, 453, 467, 687], "wavelenght": 450, "hydrometeorologi": 450, "487": [450, 614], "502": [450, 624], "alphazr": 451, "0376": [451, 453, 454, 455], "betazr": 451, "6112": [451, 453, 454, 455], "alphaz": [451, 454, 455], "betaz": [451, 454, 455], "alphaa": [451, 454], "betaa": [451, 454], "mp_factor": 451, "hydro_field": [451, 462], "main_field": [451, 454, 455], "thresh_max": [451, 454, 455], "main": [451, 454, 455, 614, 616, 617, 618, 624, 625, 658, 698], "secondari": [451, 454, 455, 624], "besic": [451, 462], "figuera": [451, 452, 462], "ventura": [451, 462], "grazioli": [451, 462, 464], "gabella": [451, 462], "germann": [451, 462], "bern": [451, 462, 464], "statist": [451, 462, 584, 624, 625, 698], "cluster": [451, 462], "semi": [451, 462], "supervis": [451, 462], "approach": [451, 462, 614, 617, 644], "mea": [451, 457, 462, 597, 655, 675], "4425": [451, 462], "4445": [451, 462], "5194": [451, 457, 462, 597, 655, 675], "amt": [451, 457, 462, 597, 655, 675], "term": [452, 624], "monitor": 452, "french": 452, "sever": [452, 616, 624, 675], "quantit": [452, 635, 670, 680, 696], "ideal": [452, 617], "quarterli": 452, "royal": 452, "2012": [452, 463, 465], "1002": [452, 624], "qj": 452, "1934": 452, "fabri": 453, "fr\u00e9d\u00e9ric": 453, "meterologi": 453, "ch": [453, 676, 679], "pg": 453, "148": 453, "165": 453, "1017": 453, "cbo9781107707405": 453, "blend": [454, 455, 618, 663], "rain_main": [454, 455], "alphakdp": 455, "betakdp": 455, "polynomi": 456, "develop": [456, 457, 614, 618, 624, 675, 687, 697], "mcgill": [456, 687], "doell": 456, "systemat": 456, "drop": [456, 617, 618, 624], "northern": [456, 616], "germani": 456, "seven": 456, "year": [456, 614, 616, 620, 623, 637, 638, 639], "1998": 456, "1545": [456, 624], "1556": 456, "joss": 456, "switzerland": 456, "vdf": 456, "hochschulverlag": 456, "ag": [456, 462, 676], "eth": 456, "zurich": 456, "134": [456, 614], "min_val_us": [457, 675], "binary_clos": 457, "val_for_max_rad": [457, 675], "max_rad_km": [457, 675], "core_v": [457, 675], "bkgd_val": [457, 675], "feat_val": [457, 675], "overest_field": [457, 675], "underest_field": [457, 675], "2024": [457, 621, 622, 653, 675], "steiner": [457, 469, 624, 674, 675, 678], "overestim": [457, 674, 675], "feature_dict": [457, 675], "climatolog": [457, 469, 674, 675, 678], "gaug": [457, 469, 674, 675, 678], "1978": [457, 469, 674, 675, 678], "2007": [457, 469, 674, 675, 678], "miller": [457, 597, 655, 675], "dual": [457, 465, 621, 624, 675], "autom": [457, 614, 620, 622, 675], "faint": [457, 675], "3377": [457, 675], "3399": [457, 675], "sonde_dset": 458, "time_kei": 458, "height_kei": 458, "nvar": 458, "vap": 458, "startard": 458, "ncvar": 458, "return_d": 458, "freq": 459, "hz": [459, 462, 661, 677], "freq_band": 459, "grid1": 460, "grid2": 460, "return_valu": 460, "displac": 460, "en": [460, 620, 624, 625, 687, 697, 698], "wikipedia": 460, "phase_correl": 460, "inspir": 460, "christoph": 460, "gohlk": 460, "lfd": 460, "uci": 460, "imreg": 460, "advect": [460, 461, 624], "trim_edg": 461, "shifted_grid": 461, "subset": [461, 608, 614, 616, 620, 624, 635, 670, 672], "hydro_nam": 462, "lr": [462, 676], "rp": [462, 676], "rn": [462, 676], "vi": [462, 676], "mh": [462, 676], "ih": [462, 676], "hdg": [462, 676], "var_nam": 462, "zh": [462, 633], "relh": 462, "mass_cent": 462, "lapse_r": 462, "entropy_field": 462, "radar_freq": [462, 677], "compute_entropi": 462, "output_dist": 462, "ndarrai": [462, 584, 695], "centroid": 462, "nclass": 462, "nvariabl": 462, "h_iso0": 462, "decai": 462, "decreas": [462, 614, 671], "celsiu": 462, "entropi": 462, "hertz": 462, "fields_dict": 462, "directionari": 462, "hydro": [462, 676, 677], "aggreg": [462, 676, 677], "crystal": [462, 676, 677], "light": [462, 633, 650, 676, 677], "rime": [462, 676], "particl": [462, 676], "wet": [462, 676, 677], "hail": [462, 620, 624, 676, 677], "densiti": [462, 614, 676, 677], "graupel": [462, 676, 677], "shannon": 462, "demix": 462, "propx": 462, "proport": [462, 463], "decomposit": 462, "gehr": 462, "praz": 462, "unravel": 462, "mixtur": 462, "4847": 462, "4866": 462, "suppli": [462, 677], "cg": 463, "backscatt": [463, 467], "clpf": 463, "length_scal": 463, "first_guess": 463, "finite_ord": 463, "fill_valu": [463, 464, 465, 469, 618, 631, 677, 689, 690, 695], "psidp_field": [463, 464, 465, 676], "verbos": [463, 624, 625, 698], "maesaka": 463, "monoton": [463, 466, 650], "propag": [463, 464, 465], "notat": 463, "dr": 463, "analys": [463, 464, 465], "cost": [463, 624], "nonlinear": 463, "conjug": 463, "gradient": [463, 624, 650], "broyden": 463, "fletcher": 463, "goldfarb": 463, "shanno": 463, "bfg": 463, "100k": 463, "consider": [463, 620, 674, 675], "parameter": 463, "attentu": 463, "constraint": 463, "bring": [463, 614], "guess": 463, "root": [463, 697, 701], "signifi": [463, 469], "everywher": 463, "exactli": [463, 622, 643], "avoid": [463, 624, 627, 701], "converg": 463, "fact": [463, 465], "closer": [463, 621], "finit": 463, "accuraci": 463, "maxit": 463, "met": 463, "achiev": 463, "somewhat": 463, "arbitrari": 463, "parallel": [463, 464, 465], "thread": [463, 618], "cpu": 463, "multiprocess": 463, "capabl": [463, 617, 691, 695], "relev": [463, 621, 622, 628], "kdp_dict": [463, 464, 465], "phidpf_dict": 463, "phidpr_dict": [463, 464, 465], "forward": [463, 594, 595], "iwanami": 463, "maki": 463, "seventh": 463, "european": 463, "confer": 463, "hydrologi": 463, "rcov": 464, "pcov": 464, "prefilter_psidp": [464, 465], "filter_opt": [464, 465], "kalman": 464, "schneeb": 464, "psidp": [464, 465], "char": [464, 465], "capit": [464, 465], "intercept": 464, "slope": 464, "3x3": 464, "4x4": 464, "filter_psidp": [464, 465, 624], "enabl": [464, 465, 617, 620, 624], "kdp_std_dict": 464, "dev": [464, 617, 620, 622, 625, 693, 698], "ensembl": 464, "52": [464, 467, 614, 617, 672], "5137": 464, "5149": 464, "1109": [464, 624], "tgr": 464, "2287017": 464, "windsiz": 465, "n_iter": 465, "vulpiani": [465, 624], "pre": [465, 621, 624, 625, 698], "advantag": 465, "eat": 465, "gianfranco": 465, "mario": 465, "montopoli": 465, "luca": 465, "delli": 465, "passeri": 465, "antonio": 465, "gioia": 465, "pietro": 465, "giordano": 465, "frank": 465, "marzano": 465, "On": [465, 615, 616], "mountain": 465, "climatol": [465, 583, 674, 675], "51": [465, 614, 672], "405": [465, 624], "425": [465, 624], "05024": 465, "profile_field": 466, "height_field": 466, "3re": 466, "whole": [466, 624], "height_dict": 466, "profile_dict": 466, "desired_angl": [467, 624], "wanted_angl": 467, "dictonari": 467, "troemel": 467, "clim": [467, 617, 618], "2529": 467, "2548": 467, "meteorol": [467, 674, 675], "54": [467, 614, 616, 617, 639], "2344": 467, "2359": 467, "submit": [467, 618, 687], "work_level": 469, "3000": [469, 633, 689, 693], "peak_rel": 469, "area_rel": 469, "medium": 469, "bkg_rad": 469, "11000": [469, 693], "use_intens": 469, "bright": [469, 614], "sgp": [469, 563], "peaked": 469, "eclass": 469, "motion": [470, 617], "cardin": 470, "ordin": 470, "intercardin": 470, "se": 470, "sr_data": 470, "z_want": [472, 473, 625, 679, 698], "valid_ray_min": [472, 625, 698], "velocity_azimuth_displai": [472, 625, 698], "one_sweep_radar": 472, "extract_sweep": [472, 620, 644, 671, 674, 675, 679], "vad": [472, 473, 624, 625, 635, 670, 680, 696, 698], "amount": [472, 617, 620, 625, 675, 693, 698], "_averag1d": [472, 625, 698], "idw": 472, "brown": [472, 624, 625, 698], "wexler": [472, 625, 698], "1968": [472, 625, 698], "105": [472, 625, 679, 698], "113": [472, 625, 654, 669, 672, 696, 698], "linespac": 473, "michelson": [473, 624, 687], "andersson": 473, "koistinen": [473, 687], "collier": 473, "riedl": 473, "szturc": 473, "gjertsen": 473, "nielsen": 473, "overgaard": 473, "baltex": 473, "centr": 473, "smhi": 473, "swedish": 473, "hydrolog": 473, "institut": [473, 614, 695], "norrkop": 473, "suffix": 485, "tmp": 485, "dir": 485, "temporari": [485, 624], "my_cwd": 485, "getcwd": 485, "tmpdir": 485, "_": [485, 616, 620, 621, 622, 637, 638, 639, 676], "txt": [485, 624, 697], "wt": 485, "assert": [485, 624, 625, 698], "isfil": 485, "path_to_fil": 562, "local": [562, 615, 616, 620, 621, 624, 625, 653, 678, 687, 697, 698], "without": [563, 577, 602, 614, 617, 624, 631, 677, 697], "site": [563, 614, 616, 617, 618, 619, 620, 621, 622, 653, 672, 678, 690, 693, 697], "puls": [566, 617, 624, 691], "min_valu": 567, "max_valu": 567, "grid_len": 567, "sigma": [567, 568, 663, 664], "mu": [567, 568], "masked_boundari": 567, "gaussian": [567, 568, 624, 663], "dp_phase_shift": [569, 672, 689], "diff_phas": [569, 689], "differential_reflect": [569, 621, 633, 637, 638, 656, 663, 694, 695], "rectangular": [570, 571, 618, 624], "alia": [575, 576, 618, 624], "miscellan": 577, "depreci": [577, 624], "caution": [577, 671], "radian": [578, 580, 603, 614], "std": [580, 581, 599, 605], "convolut": 582, "ndimag": [582, 624, 663, 664], "generic_filt": 582, "pi": [582, 614, 691], "std_dev": 582, "azimuth_spread": [583, 678], "spatial_spread": [583, 678], "spatial_rang": 583, "sphere_dist": [583, 596], "for_azimuth": [583, 596], "get_sweep_rai": 583, "subset_field": 583, "assemble_column": 583, "murphi": 583, "columnar": [583, 678], "cvp": [583, 624], "situ": 583, "37": [583, 614, 617, 643, 672, 675, 694], "1623": 583, "1642": 583, "0011": 583, "bukov\u010di\u0107": 583, "zrni\u0107": 583, "59": [583, 614, 617], "991": [583, 624], "1009": [583, 624], "19": [583, 614, 616, 617, 624, 634, 679, 695], "0140": 583, "stat": [584, 614, 624], "nvalid": 584, "az_tol": 585, "radar_rhi": 585, "target_elev": 586, "el_tol": 586, "radar_ppi": 586, "epoch": [587, 588, 589, 590, 591, 614], "max_offset": 592, "running_win_dt": 592, "deg_rng": 592, "consider_2pi_jump": 592, "is_ppi": 592, "wise": 592, "could": [592, 618, 622, 625, 639, 698], "strategi": [592, 614], "might": [592, 615, 689, 701], "goe": [592, 618], "shot": 592, "navg": 593, "nnoise_min": 593, "hildebrand": [593, 624], "sehkon": 593, "1974": 593, "spectral": [593, 614, 617, 624], "articl": 593, "peak": [593, 617, 691], "var": [593, 609, 610, 614], "varianc": [593, 644], "nnois": 593, "sekhon": [593, 624], "808": 593, "811": [593, 624], "target_latitud": [594, 607], "target_longitud": [594, 607], "bear": [594, 616], "alongitudeg": 594, "great": [594, 607], "circl": [594, 607, 674], "known": [594, 624, 625, 695, 698], "6371000": [594, 607], "calculatitude": 594, "degress": [594, 607], "further": [596, 615, 617, 621, 622, 700], "get_column_rai": 596, "mute_field": [597, 655], "mute_threshold": [597, 655], "field_threshold": [597, 655], "discern": 597, "mute": [597, 624, 635, 648, 669, 674, 675, 696], "allen": [597, 655, 675], "identif": [597, 655, 675], "5515": [597, 655, 675], "5525": [597, 655, 675], "interval_min": [598, 599], "interval_max": [598, 599], "endpoint": [598, 599], "to_vpt": 600, "90": [600, 614, 616, 617, 625, 698], "verticl": 600, "radar1": 601, "radar2": 601, "tup": 602, "guarante": 602, "broadcast": 602, "broadcasted_arrai": 602, "angles1": 603, "angles2": 603, "angle1": 604, "angle2": 604, "eg": 605, "ma": [605, 625, 643, 645, 653, 671, 674, 675, 690, 694, 698], "sim_vel_field": 606, "kind": [606, 614, 622], "slinear": 606, "quadrat": 606, "cubic": 606, "interp1d": [606, 625, 698], "sim_vel": [606, 625, 698], "rng_min": 608, "rng_max": 608, "ele_min": 608, "ele_max": 608, "azi_min": 608, "azi_max": 608, "coverag": [608, 614, 624, 625, 678, 698], "11pt": 609, "stdev": 609, "texarrai": 609, "pyradarobj": 609, "tex": 610, "single_scan": 611, "is_vpt": 611, "mislabel": 611, "properli": [611, 625, 639, 698], "releas": [612, 619, 625, 628, 687, 690, 693, 697, 698, 700], "jun": 612, "2025": 612, "guid": [612, 614, 615, 624, 687, 700], "public": [612, 614, 618, 620, 622, 624, 625, 638, 689, 690, 691, 693, 694, 695, 698], "broken": [612, 624], "aerosol": 614, "experi": 614, "depart": [614, 617, 618, 620, 689, 690, 691, 693, 694, 695], "energi": [614, 617, 618, 620, 689, 690, 691, 693, 694, 695], "iop": 614, "goal": 614, "studi": 614, "lifecycl": 614, "houston": [614, 637], "impact": [614, 620, 663], "uniqu": 614, "suit": [614, 624, 693], "seabreez": 614, "coast": [614, 618], "cleaner": [614, 694], "air": [614, 618, 622], "pollut": 614, "click": [614, 615, 622, 627], "post": [614, 616, 617, 618, 620, 622, 624, 627, 687], "overlai": 614, "texa": [614, 637], "lightn": 614, "csapr2": 614, "wildfir": 614, "smoke": 614, "entrain": 614, "juli": [614, 639], "we": [614, 616, 617, 618, 620, 622, 625, 628, 631, 633, 637, 638, 639, 643, 649, 650, 671, 672, 674, 675, 677, 683, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701], "highlight": [614, 615, 618], "minut": [614, 616, 617, 621, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685], "pyart": [614, 616, 620, 622, 625, 627, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 687, 689, 690, 691, 693, 694, 695, 697, 698, 700, 701], "pyplot": [614, 615, 616, 617, 618, 620, 621, 622, 630, 631, 632, 633, 637, 638, 639, 643, 644, 645, 646, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 689, 690, 691, 693, 694], "plt": [614, 615, 616, 617, 618, 620, 621, 622, 624, 630, 631, 632, 633, 637, 638, 639, 643, 644, 645, 646, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 689, 690, 691, 693, 694], "xr": [614, 617, 640, 678], "s3f": [614, 687, 697], "ccr": [614, 616, 618, 620, 621, 622, 637, 639, 643, 644, 652, 654, 660, 667, 672, 674, 675, 683, 690, 691, 694], "panda": [614, 617, 620, 624, 687, 697, 701], "pd": [614, 616, 617, 620], "kdtree": 614, "inlin": [614, 621, 663, 664], "download": [614, 615, 617, 618, 622, 624, 625, 630, 631, 632, 633, 635, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 687, 698, 701], "longwav": 614, "ensur": [614, 616, 624, 633, 675, 700], "c13": 614, "denot": [614, 644], "anonym": [614, 616], "credenti": 614, "s3filesystem": 614, "day_no": 614, "168": 614, "dai": [614, 620, 621, 638], "16th": 614, "leap": 614, "hour": [614, 618, 620, 621, 637, 638, 639], "goes16": 614, "abi": 614, "l1b": 614, "radc": 614, "02d": [614, 621], "fi": 614, "or_abi": 614, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 614, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 614, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 614, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 614, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 614, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 614, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 614, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 614, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 614, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 614, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 614, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 614, "goes_d": 614, "open_dataset": [614, 617], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 614, "lt": [614, 617], "gt": [614, 617], "1500": [614, 689], "2500": 614, "number_of_time_bound": 614, "number_of_image_bound": 614, "num_star_look": 614, "datetime64": [614, 617, 672], "07": [614, 616, 617, 638, 639, 655, 669, 674, 675, 695, 696], "1282": 614, "1013": 614, "y_imag": 614, "08624": 614, "x_imag": 614, "03136": 614, "band_id": 614, "int8": 614, "band_wavelength": 614, "t_star_look": 614, "band_wavelength_star_look": 614, "rad": [614, 617], "dqf": 614, "time_bound": 614, "goes_imager_project": 614, "int32": [614, 695], "2147483647": 614, "y_image_bound": 614, "x_image_bound": 614, "algorithm_dynamic_input_data_contain": 614, "processing_parm_version_contain": 614, "algorithm_product_version_contain": 614, "star_id": 614, "channel_integration_tim": 614, "336": [614, 624], "channel_gain_field": 614, "naming_author": 614, "nesdi": 614, "standard_name_vocabulari": 614, "v35": 614, "commerc": 614, "production_sit": 614, "wcda": 614, "timeline_id": 614, "date_cr": 614, "12t20": 614, "09": [614, 616, 622, 674, 675, 680, 686, 696], "3z": 614, "time_coverage_start": [614, 689, 695], "time_coverage_end": [614, 689], "08": [614, 634, 641, 696], "7z": 614, "lut_filenam": 614, "spacelookparam": 614, "fm1a_cdrl79revp_pr_09_00_02": 614, "f45b564c": 614, "dcb9": 614, "498a": 614, "ac56": 614, "da80a1d735a5xarrai": 614, "datasetdimens": [614, 617], "1500x": 614, "2500number_of_time_bound": 614, "2number_of_image_bound": 614, "2band": 614, "1num_star_look": 614, "24coordin": 614, "j2000": 614, "mid": 614, "secondsstandard_nam": 614, "timeaxi": 614, "tbound": 614, "time_boundsarrai": 614, "x27": [614, 617], "537394048": 614, "float640": 614, "04432": 614, "04427unit": 614, "radaxi": 614, "ylong_nam": 614, "coordinatestandard_nam": 614, "projection_y_coordinatearrai": 614, "128212": 614, "128156": 614, "1281": 614, "04438": 614, "044324": 614, "044268": 614, "03856": 614, "03861unit": 614, "xlong_nam": 614, "projection_x_coordinatearrai": 614, "101332": 614, "101276": 614, "10122": 614, "0385": 614, "038556": 614, "038612": 614, "imagestandard_nam": 614, "projection_y_coordinateunit": 614, "yarrai": 614, "projection_x_coordinateunit": 614, "numberstandard_nam": 614, "sensor_band_identifierunit": 614, "1arrai": [614, 617], "wavelengthstandard_nam": 614, "sensor_band_central_radiation_wavelengthunit": 614, "umarrai": 614, "star": 614, "tarrai": 614, "01t11": 614, "43": [614, 617, 620], "000000000": [614, 617], "starstandard_nam": 614, "radiancesstandard_nam": 614, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 614, "12valid_rang": 614, "4094": 614, "mw": 614, "cm": 614, "1resolut": 614, "000056": 614, "radgrid_map": 614, "goes_imager_projectioncell_method": 614, "pointancillary_vari": 614, "3750000": 614, "radianc": 614, "flagsstandard_nam": 614, "status_flagvalid_rang": 614, "1grid_map": 614, "pointflag_valu": 614, "flag_mean": [614, 631], "good_pixel_qf": 614, "conditionally_usable_pixel_qf": 614, "out_of_range_pixel_qf": 614, "no_value_pixel_qf": 614, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 614, "5percent_good_pixel_qf": 614, "0percent_conditionally_usable_pixel_qf": 614, "0percent_out_of_range_pixel_qf": 614, "0percent_no_value_pixel_qf": 614, "0percent_focal_plane_temperature_threshold_exceeded_qf": 614, "00": [614, 616, 617, 620, 622, 624, 634, 641, 647, 669, 680, 681, 686, 696], "326423040": 614, "748365056": 614, "projectiongrid_mapping_nam": 614, "geostationaryperspective_point_height": 614, "35786023": 614, "0semi_major_axi": 614, "6378137": 614, "0semi_minor_axi": 614, "6356752": 614, "31414inverse_flatten": 614, "298": 614, "2572221latitude_of_projection_origin": 614, "0longitude_of_projection_origin": 614, "0sweep_angle_axi": 614, "south": [614, 618, 656], "extent": [614, 616, 617, 620, 621, 644, 646], "imageunit": 614, "radarrai": 614, "12824": 614, "04424": 614, "10136": 614, "03864": 614, "nominal_satellite_subpoint_lat": 614, "nomin": 614, "subpoint": 614, "standard_nam": [614, 674, 675, 677, 678, 690, 695], "latitudeunit": [614, 617], "degrees_northarrai": 614, "nominal_satellite_subpoint_lon": 614, "longitudeunit": [614, 617], "degrees_eastarrai": 614, "199997": 614, "nominal_satellite_height": 614, "gr": 614, "80": [614, 616, 632, 653, 667, 673], "ellipsoid": 614, "height_above_reference_ellipsoidunit": 614, "kmarrai": 614, "35786": 614, "023438": 614, "geospatial_lat_lon_ext": 614, "geospati": 614, "referencesgeospatial_westbound_longitud": 614, "152": [614, 675], "10928geospatial_northbound_latitud": 614, "76145geospatial_eastbound_longitud": 614, "94688geospatial_southbound_latitud": 614, "14": [614, 617, 618, 620, 622, 650, 654, 667, 669, 683, 695, 696], "57134geospatial_lat_cent": 614, "083002geospatial_lon_cent": 614, "096954geospatial_lat_nadir": 614, "0geospatial_lon_nadir": 614, "0geospatial_lat_unit": 614, "degrees_northgeospatial_lon_unit": 614, "96921e": 614, "yaw_flip_flag": 614, "spacecraft": 614, "yaw": 614, "flip": 614, "configurationvalid_rang": 614, "1flag_valu": 614, "truearrai": 614, "esun": 614, "bandpass": 614, "solar": 614, "irradi": 614, "sun": 614, "distancestandard_nam": 614, "toa_shortwave_irradiance_per_unit_wavelengthunit": 614, "um": 614, "1cell_method": 614, "meanarrai": 614, "kappa0": 614, "incom": 614, "d2": 614, "instantan": [614, 624], "divid": 614, "reflectanceunit": 614, "planck_fk1": 614, "wavenumb": 614, "c2": 614, "nu3": 614, "emiss": 614, "monochromat": 614, "nu": 614, "constantsunit": 614, "10803": 614, "299805": 614, "planck_fk2": 614, "karrai": 614, "1392": [614, 624], "73999": 614, "planck_bc1": 614, "bc_1": 614, "bc_2": 614, "planck_funct": 614, "wavenumberunit": 614, "0755": 614, "planck_bc2": 614, "99975": 614, "valid_pixel_count": 614, "condition": 614, "pixelsunit": 614, "countgrid_map": 614, "sum": [614, 623, 671], "comment": [614, 615, 631, 664, 695], "3702838": 614, "missing_pixel_count": 614, "saturated_pixel_count": 614, "satur": 614, "radiometr": 614, "geoloc": 614, "undersaturated_pixel_count": 614, "undersatur": 614, "focal_plane_temperature_threshold_exceeded_count": 614, "exceed": 614, "thresholdunit": 614, "min_radiance_value_of_valid_pixel": 614, "pixelsstandard_nam": 614, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 614, "6443": 614, "185": 614, "5699": 614, "849287": 614, "max_radiance_value_of_valid_pixel": 614, "154": [614, 660], "23053": 614, "mean_radiance_value_of_valid_pixel": 614, "197975": 614, "std_dev_radiance_value_of_valid_pixel": 614, "toa_outgoing_radiance_per_unit_wavenumberunit": 614, "standard_devi": 614, "985853": 614, "maximum_focal_plane_temperatur": 614, "focal": 614, "valuevalid_rang": 614, "951939": 614, "focal_plane_temperature_threshold_increas": 614, "bound": [614, 617, 675], "81": [614, 616, 695], "focal_plane_temperature_threshold_decreas": 614, "percent_uncorrectable_l0_error": 614, "percent": 614, "l0": 614, "errorsvalid_rang": 614, "percentgrid_map": 614, "earth_sun_distance_anomaly_in_au": 614, "anomali": [614, 675], "astronom": 614, "unitsunit": 614, "uacell_method": 614, "016543": 614, "datainput_abi_l0_data": 614, "m6_g16_s20221932006173_e20221932008557_c": 614, "ncarrai": 614, "filenamesl1b_processing_parm_vers": 614, "parm": 614, "rad_g16_v01r00": 614, "ziparrai": 614, "packag": [614, 615, 616, 617, 618, 620, 622, 624, 625, 639, 650, 687, 690, 693, 697, 698, 700, 701], "versionalgorithm_vers": 614, "alg": 614, "rad_v01r00": 614, "zipproduct_vers": 614, "v01r00arrai": 614, "stararrai": 614, "vnir": 614, "ir": 614, "telemetryunit": 614, "countarrai": 614, "gain": [614, 617], "noaaconvent": 614, "7standard_name_vocabulari": 614, "administr": [614, 618, 637, 638], "servicesproject": 614, "goesproduction_sit": 614, "wcdasproduction_environ": 614, "oespatial_resolut": 614, "2km": 614, "nadirmetadata_convent": 614, "discoveri": [614, 622], "0orbital_slot": 614, "eastplatform_id": 614, "g16instrument_typ": 614, "baselin": 614, "scene_id": 614, "conusinstrument_id": 614, "fm1titl": 614, "radiancessummari": 614, "digit": 614, "outgo": 614, "engin": 614, "radiancekeywords_vocabulari": 614, "nasa": 614, "master": [614, 624, 627], "gcmd": 614, "scienc": [614, 618, 620, 689, 690, 691, 693, 694, 695], "0iso_series_metadata_id": 614, "a70be540": 614, "c38b": 614, "11e0": 614, "962b": 614, "0800200c9a66licens": 614, "restrict": 614, "approv": 614, "processing_level": 614, "aeronaut": 614, "l1bcdm_data_typ": 614, "imagedataset_nam": 614, "ncproduction_data_sourc": 614, "realtimetimeline_id": 614, "6date_cr": 614, "3ztime_coverage_start": 614, "3ztime_coverage_end": 614, "7zlut_filenam": 614, "637827000": 614, "h5": [614, 624], "qtableband13": 614, "fm1a_cdrl79revh_do_08_00_00": 614, "582860861": 614, "caltargettimeinterv": 614, "fm1a_cdrl79revp_do_08_00_01": 614, "611906620": 614, "bandsaturationlimit": 614, "600000000": 614, "solarspacelookparam": 614, "fm1a_adr1233_pr_09_08_25": 614, "709281036": 614, "deadrowlistparam": 614, "mirror_record": 614, "fm1a_cdrl79revg_do_07_00_00": 614, "kalmanastroconst": 614, "xml": [614, 620], "kalmanfiltercontrol": 614, "fm1a_pr_09_08_02": 614, "677650371": 614, "kalmanmeasmaxsens": 614, "fmaa_int_only_do_09_01_00": 614, "652936814": 614, "kalmanpreprocessorcontrol": 614, "fm1a_cdrl79revj_pr_09_06_02": 614, "657795700": 614, "kalmanreferencedata": 614, "888": 614, "kalmanstarcatalog": 614, "abi_navigationrdp_band13": 614, "fm1a_cdrl79revj_do_07_00_00": 614, "abi_navigationparameters_band13": 614, "fm1a_cdrl79revh_do_07_00_00": 614, "abi_resamplingimplementation_band13": 614, "fm1a_cdrl79revh_do_07_02_00": 614, "602129336": 614, "abi_resamplingparameters_band13": 614, "starlookparam": 614, "stardetectionparam": 614, "resamplingscaledconvers": 614, "fmaa_int_only_do_08_00_00": 614, "1111": [614, 617, 624], "blockreleaseregion": 614, "2222": 614, "csv": [614, 616], "ir_retrievalparamet": 614, "fm1a_cdrl79revh_do_09_01_00": 614, "652936750": 614, "radiancelut_band13": 614, "fm1a_cdrl79reve_do_08_00_00": 614, "ict_record": 614, "fm1a_tmabi_18_159_pr_09_00_02": 614, "icm_conversionconst": 614, "fm1a_cdrl43": 614, "18_do_09_01_00": 614, "icm_sensorcoeffici": 614, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 614, "676949608": 614, "h5id": 614, "da80a1d735a5": 614, "team": 614, "bobbi": [614, 643], "jackson": [614, 643], "pug": 614, "l2": [614, 624, 638], "file_id": 614, "def": [614, 616, 620, 621, 624, 625, 650, 653, 675, 677, 678, 698], "calculate_degre": 614, "x_coordinate_1d": 614, "y_coordinate_1d": 614, "projection_info": 614, "lon_origin": 614, "attr": [614, 678], "longitude_of_projection_origin": 614, "perspective_point_height": 614, "semi_major_axi": 614, "r_eq": 614, "r_pol": 614, "semi_minor_axi": 614, "matric": 614, "x_coordinate_2d": 614, "y_coordinate_2d": 614, "meshgrid": [614, 643, 671], "lambda_0": 614, "a_var": 614, "b_var": 614, "c_var": 614, "r_": 614, "s_x": 614, "s_y": 614, "s_z": 614, "conu": 614, "seterr": 614, "abi_lat": 614, "arctan": 614, "abi_lon": 614, "crop": 614, "our": [614, 616, 619, 621, 631, 637, 638, 639, 643, 650, 652, 672, 674, 675, 683, 687, 700], "circ": 614, "95": [614, 616, 672, 695], "nan_to_num": 614, "9999": [614, 695], "lat_rang": 614, "lon_rang": 614, "lat_min": 614, "lat_max": 614, "lat_min_bound": 614, "argmin": 614, "lat_max_bound": 614, "lon_min": 614, "lon_max": 614, "lon_min_bound": 614, "lon_max_bound": 614, "a1": [614, 617, 622, 631, 633, 651, 660], "disoveri": 614, "toolkit": [614, 617, 618, 620, 622, 689, 690, 691, 693, 694, 695], "5439": [614, 617, 622], "1467901": 614, "page": [614, 619, 624, 627], "block": [614, 622, 624], "catalogu": 614, "adam": [614, 624, 631], "theisen": [614, 631], "geometri": [614, 620, 624], "cell_track_info": 614, "read_csv": [614, 616], "raw": [614, 630, 631, 632, 644], "githubusercont": 614, "adamtheisen": [614, 624], "cell": [614, 621, 622, 624, 663, 684, 700], "houcsapr": 614, "20220617": 614, "index_col": 614, "parse_d": 614, "unnam": 614, "scan_mod": [614, 617, 624], "template_nam": 614, "azimuth_min": 614, "azimuth_max": 614, "elevation_min": 614, "elevation_max": 614, "range_min": 614, "range_max": 614, "cell_azimuth": 614, "cell_rang": 614, "cell_zh": 614, "ngates_gt_0": 614, "ngates_gt_10": 614, "ngates_gt_30": 614, "ngates_gt_50": 614, "ngates_gt_10_5km": 614, "ngates_gt40_5km": 614, "03": [614, 617, 634, 637, 669, 680, 686, 696], "hou": 614, "303": [614, 624], "74450": 614, "637207": 614, "383545": 614, "109900": 614, "297": 614, "59216": 614, "307": [614, 624], "63367": 614, "021240": 614, "988037": 614, "910767": 614, "700": [614, 617, 620, 624], "930866": 614, "78": 614, "302": 614, "64587": 614, "645874": 614, "1800": [614, 616, 689], "776333": 614, "55798": 614, "59094": 614, "97546": 614, "99744": 614, "975464": 614, "900": [614, 689], "972101": 614, "46": [614, 672], "2826": 614, "301": [614, 624], "48132": 614, "50330": 614, "648193": 614, "382324": 614, "503296": 614, "62400": 614, "327583": 614, "990": 614, "989": [614, 624], "210": [614, 675], "995": [614, 624, 633], "2827": 614, "305": [614, 624], "70007": 614, "404297": 614, "700073": 614, "13600": 614, "29": [614, 617, 653], "037998": 614, "2828": 614, "23510": 614, "26807": 614, "235107": 614, "459156": 614, "2829": 614, "296": [614, 624], "08704": 614, "306": [614, 624], "16150": 614, "999268": 614, "998291": 614, "646362": 614, "59100": 614, "882927": 614, "807": 614, "783": [614, 624, 656, 669, 696], "27": [614, 618, 638, 641, 672, 696], "63": [614, 695], "830": 614, "2830": 614, "05835": 614, "08032": 614, "058350": 614, "62800": 614, "198204": 614, "767": [614, 624], "76": 614, "773": [614, 624], "2831": 614, "notebook": [614, 616, 617, 621, 623, 624, 630, 631, 632, 633, 635, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 690, 693, 694, 701], "much": [614, 616, 617, 618, 620, 621, 622, 624, 671, 691, 693, 694], "frequent": 614, "start_hour": [614, 621], "end_hour": [614, 621], "utc": [614, 616, 617, 618, 621, 622, 637, 638, 639, 653, 666, 678], "48": [614, 616, 646], "04": [614, 617, 620, 621, 647, 669, 672, 686, 696], "38": [614, 617, 639], "57": [614, 674, 675], "rjackson": [614, 643], "paw": 614, "houcsapr2cfrs2": 614, "20220712": 614, "200714": 614, "easili": [614, 620], "eol": 614, "cgi": 614, "codiac": 614, "fgr_form": 614, "016": 614, "lma_d": 614, "lylout_220712_000000_86400_map500m": 614, "afternoon": 614, "203229": 614, "lylout_220617_000000_86400_map500m": 614, "radarmapdisplai": [614, 616, 620, 621, 622, 624, 637, 638, 639, 640, 643, 649, 654, 660, 672, 683, 685, 689, 690, 691, 693, 694], "subplot": [614, 616, 617, 618, 620, 621, 622, 624, 633, 637, 643, 649, 650, 652, 654, 666, 671, 672, 673, 674, 675, 676, 677, 679, 683, 691], "subplot_kw": 614, "disp": 614, "graph": [614, 615, 616, 617, 618, 620, 621, 622, 624, 630, 631, 632, 637, 638, 639, 640, 643, 644, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 683, 684, 685, 689, 690, 691, 693, 694], "150": [614, 615, 659, 677, 691], "plot_ppi_map": [614, 616, 620, 621, 622, 624, 637, 638, 639, 643, 654, 660, 672, 683, 690, 691, 694], "flash_tim": 614, "squeez": [614, 689], "argwher": [614, 643], "logical_and": [614, 643], "flash_time_start": 614, "17t20": 614, "flash_center_longitud": 614, "flash_center_latitud": 614, "set_xlim": [614, 667, 671, 676], "96": [614, 616, 617, 643, 687, 694], "94": [614, 695], "set_ylim": [614, 667, 671, 676], "deprecationwarn": [614, 693], "escap": 614, "sequenc": [614, 618], "xf": 614, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 614, "ipykernel_41252": 614, "2371313213": 614, "opt": [614, 615, 617, 618, 624], "anaconda3": [614, 617, 618, 687, 690, 693, 697, 701], "env": [614, 615, 617, 618, 620, 622, 624, 687, 690, 693, 701], "pyart_env2": 614, "lib": [614, 617, 618, 620, 622, 690, 693, 697], "python3": [614, 617, 618, 620, 622, 623], "mpl": [614, 624, 676, 690, 693], "gridlin": [614, 618, 620, 654], "451": [614, 617], "userwarn": [614, 622], "xlabels_top": [614, 618], "top_label": [614, 620, 654], "toggl": [614, 624], "visibl": [614, 618, 624], "ylabels_right": [614, 618], "right_label": [614, 620, 654], "strike": 614, "overlaid": 614, "csapr_rhi": 614, "203012": 614, "flash_alt": 614, "flash_init_altitud": 614, "flash_lon": 614, "flash_init_longitud": 614, "flash_lat": 614, "flash_init_latitud": 614, "rhi_lon": 614, "flatten": [614, 643], "rhi_lat": 614, "rhi_alt": 614, "kdtree_data": 614, "inp_data": 614, "where_in_rhi": 614, "flash_rang": 614, "1e3": [614, 653], "motiv": [615, 618], "blog": [615, 620, 624, 625, 698], "come": [615, 618, 674], "colorschem": 615, "vision": 615, "defici": 615, "illustr": 615, "collabor": 615, "contributor": [615, 627, 687, 699, 700], "guidenc": 615, "ve": [615, 621], "trip": [615, 694], "me": 615, "assist": 615, "https_link_to_your_fork": 615, "unfamiliar": 615, "yml": [615, 624, 687, 701], "slightli": [615, 618, 654], "latest": [615, 624, 625, 687, 698], "button": [615, 619, 627], "kshrc": 615, "export": [615, 697, 701], "pip": [615, 625, 697, 698, 700, 701], "checkout": [615, 625, 627, 698], "newblog_post": 615, "plot_ppi_mdv": [615, 659, 669, 696], "radardisplai": [615, 616, 617, 622, 624, 630, 631, 632, 644, 650, 651, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 668, 671, 673, 676, 677], "jonathan": [615, 630, 632, 645, 646, 656, 657, 659, 661, 665, 668, 701], "helmu": [615, 618, 620, 625, 630, 632, 645, 646, 656, 657, 659, 661, 665, 668, 687, 689, 690, 691, 693, 694, 695, 698, 701], "jhelmu": [615, 624, 630, 632, 645, 646, 656, 657, 659, 661, 665, 668], "anl": [615, 630, 632, 637, 639, 640, 643, 645, 646, 650, 651, 652, 654, 656, 657, 658, 659, 661, 663, 664, 665, 666, 668, 672, 673, 683, 684, 685], "licens": [615, 625, 630, 631, 632, 637, 638, 639, 640, 643, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 678, 679, 683, 684, 685, 687, 698], "bsd": [615, 625, 630, 631, 632, 637, 638, 639, 640, 643, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 678, 679, 683, 684, 685, 687, 698], "claus": [615, 625, 630, 631, 632, 637, 638, 639, 640, 643, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 678, 679, 683, 684, 685, 698], "get_test_data": [615, 630, 632, 643, 645, 646, 650, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 683, 684, 685, 700], "110635": [615, 645, 659, 693], "figsiz": [615, 616, 617, 618, 620, 621, 622, 630, 632, 633, 637, 638, 639, 643, 644, 649, 650, 652, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 671, 673, 674, 675, 676, 677, 678, 683, 690, 691, 693, 694], "add_subplot": [615, 630, 632, 644, 645, 646, 656, 657, 658, 659, 661, 662, 663, 664, 665, 668, 677], "111": [615, 616, 618, 621, 622, 643, 645, 646, 654, 657, 658, 659, 663, 664, 665, 672], "get_cmap": [615, 655, 674, 675], "jet": 615, "colorbind": 615, "pyart_homeyerrainbow": [615, 617], "plot_rhi_cfradial_singlescan": [615, 662, 669, 696], "panel": [615, 622, 635, 648, 669, 671, 696], "sgpxsaprrhicmaci5": [615, 661, 662, 666, 671], "c0": [615, 630, 661, 662, 666, 671, 690], "20110524": [615, 661, 662, 666, 671], "015604_nc4": [615, 661, 662, 666, 671], "read_cfradi": [615, 643, 646, 652, 661, 662, 666, 671, 676, 677, 679], "subplots_adjust": [615, 617, 650, 661, 662], "hspace": [615, 617, 661, 662], "xlabel": [615, 617, 643, 661, 662, 678, 691], "ylabel": [615, 617, 643, 661, 662, 678, 691], "stage": 615, "my": [615, 697], "untrack": [615, 625, 698], "blog_pr": 615, "restor": 615, "discard": 615, "_static": 615, "As": [615, 617, 621, 625, 689, 691, 693, 694, 698], "statement": [615, 621, 624, 625, 698], "hint": [615, 618, 626], "wait": [615, 618], "editor": [615, 623, 625, 698, 701], "enh": [615, 624], "abort": 615, "person": 615, "addition": [615, 618], "anyon": 615, "respond": 615, "walk": [616, 617, 620, 621, 622, 623], "septemb": 616, "2021": [616, 674, 675], "thunderstorm": 616, "southern": 616, "wisconsin": [616, 624], "illinoi": 616, "trail": 616, "damag": [616, 620], "milwauke": [616, 620], "madison": 616, "imageri": [616, 620], "russ": 616, "schumach": 616, "colorado": 616, "unvers": 616, "put": 616, "togeth": [616, 617, 618, 624], "hi": [616, 675], "glob": [616, 617, 620, 621, 622, 625, 653, 678, 698], "math": 616, "atan2": 616, "tempfil": 616, "cfeatur": [616, 618, 620, 621, 622], "mcolor": [616, 618, 655, 674, 675], "mdate": 616, "uscounti": [616, 620, 621], "imageio": 616, "pytz": [616, 624, 653, 678], "temploc": 616, "mkdtemp": 616, "filterwarn": [616, 617, 618, 620, 621, 643], "let": [616, 617, 618, 619, 621, 622, 624, 625, 631, 637, 638, 639, 643, 650, 653, 654, 671, 672, 674, 675, 677, 683, 689, 691, 693, 694, 695, 698, 701], "machin": [616, 617, 620, 622, 701], "kmkx": [616, 620], "nexrad_path": [616, 653, 678], "level2": [616, 620, 621, 624, 637, 639, 653, 655, 674, 675, 678], "d_": [616, 653, 678], "kmkx20210907_170101_v06": 616, "kmkx20210907_170739_v06": 616, "kmkx20210907_171431_v06": 616, "kmkx20210907_172123_v06": 616, "kmkx20210907_172814_v06": 616, "kmkx20210907_173452_v06": 616, "kmkx20210907_174130_v06": 616, "kmkx20210907_174807_v06": 616, "kmkx20210907_175459_v06": 616, "kmkx20210907_175459_v06_mdm": 616, "read_nexrad_arch": [616, 620, 621, 637, 638, 639, 653, 655, 656, 657, 674, 675, 678], "possibli": 616, "add_featur": [616, 618, 620, 621, 622], "70": [616, 617, 620, 637, 640, 643, 652, 685], "set_ext": 616, "easier": [616, 617, 618], "scroll": 616, "radar_id": 616, "timestamp": [616, 617], "tz_local": 616, "later": [616, 618, 690, 693], "interfac": [616, 622, 624, 700], "conn": 616, "nexradawsinterfac": 616, "get_avail_scans_in_rang": 616, "len": [616, 621, 650, 666, 676, 689], "kmkx20210907_151132_v06": 616, "kmkx20210907_152621_v06": 616, "kmkx20210907_150152_v06": 616, "kmkx20210907_151622_v06": 616, "kmkx20210907_152121_v06": 616, "kmkx20210907_150642_v06": 616, "kmkx20210907_155424_v06_mdm": 616, "kmkx20210907_153610_v06": 616, "kmkx20210907_154814_v06": 616, "kmkx20210907_155424_v06": 616, "kmkx20210907_154205_v06": 616, "kmkx20210907_160034_v06": 616, "kmkx20210907_160607_v06": 616, "kmkx20210907_161141_v06": 616, "kmkx20210907_163532_v06": 616, "kmkx20210907_161714_v06": 616, "kmkx20210907_162924_v06": 616, "kmkx20210907_164816_v06": 616, "kmkx20210907_165433_v06": 616, "kmkx20210907_165433_v06_mdm": 616, "kmkx20210907_162247_v06": 616, "kmkx20210907_153134_v06": 616, "kmkx20210907_164149_v06": 616, "kmkx20210907_182057_v06": 616, "kmkx20210907_182749_v06": 616, "kmkx20210907_184048_v06": 616, "kmkx20210907_180841_v06": 616, "kmkx20210907_183440_v06": 616, "kmkx20210907_185431_v06_mdm": 616, "kmkx20210907_181448_v06": 616, "kmkx20210907_180150_v06": 616, "kmkx20210907_185431_v06": 616, "kmkx20210907_190109_v06": 616, "kmkx20210907_190703_v06": 616, "kmkx20210907_193238_v06": 616, "kmkx20210907_191951_v06": 616, "kmkx20210907_191327_v06": 616, "kmkx20210907_195642_v06": 616, "kmkx20210907_194459_v06": 616, "kmkx20210907_195642_v06_mdm": 616, "kmkx20210907_193849_v06": 616, "kmkx20210907_184739_v06": 616, "kmkx20210907_192614_v06": 616, "kmkx20210907_195056_v06": 616, "now": [616, 617, 618, 620, 621, 622, 624, 631, 639, 643, 644, 650, 654, 672, 674, 675, 683, 689, 691, 697, 700], "predict": 616, "tornado": [616, 620], "offic": [616, 618, 620, 689, 690, 691, 693, 694, 695], "acces": 616, "internet": 616, "wcm": 616, "2021_wind": 616, "read_spc_report": 616, "start_tim": 616, "end_tim": 616, "hazard": 616, "timezon": [616, 653, 678], "gmt": 616, "torn": 616, "df": 616, "datafram": 616, "conver": 616, "to_datetim": [616, 617, 620], "set_index": 616, "inplac": 616, "ambigu": 616, "nat": 616, "nonexist": 616, "shift_forward": 616, "tz_convert": 616, "timedelta": [616, 620, 621], "wind_report": 616, "tornado_report": 616, "hail_report": 616, "om": 616, "yr": 616, "mo": 616, "st": 616, "stf": 616, "stn": 616, "elon": 616, "wid": 616, "sn": 616, "sg": 616, "f1": 616, "f2": 616, "f3": 616, "f4": 616, "657521": 616, "tx": 616, "7500": [616, 689], "331": [616, 624], "657522": 616, "4300": 616, "657523": 616, "0500": 616, "167": 616, "657524": 616, "0200": 616, "657525": 616, "1595": 616, "663777": 616, "sc": 616, "0100": [616, 622], "663778": 616, "663779": 616, "2200": 616, "663780": 616, "1900": 616, "49": [616, 617], "663781": 616, "1100": [616, 624], "6261": 616, "gc_latlon_bear_dist": 616, "lat1": 616, "lon1": 616, "decim": 616, "lat2": 616, "lon2": 616, "lat1r": 616, "deg2rad": 616, "lon1r": 616, "bearr": 616, "lat2r": 616, "lon2r": 616, "rad2deg": [616, 679], "add_scale_lin": 616, "fontsiz": [616, 617, 618, 621, 622, 630, 632, 650, 654, 663, 664], "fontweight": 616, "zoom": [616, 617], "black": [616, 624, 652, 671, 672], "frac_lat": 616, "frac_lon": 616, "e1": 616, "get_ext": 616, "center_lon": 616, "center_lat": 616, "shorten": 616, "hash": [616, 627], "lat1a": 616, "lon1a": 616, "lat1b": 616, "lon1b": 616, "lat2a": 616, "lon2a": 616, "lat2b": 616, "lon2b": 616, "horizontalalign": 616, "verticalalign": 616, "enumer": [616, 621], "iter_success": 616, "mdm": [616, 621], "this_tim": 616, "open_pyart": 616, "map_panel_ax": [616, 667], "x_cut_panel_ax": [616, 667], "y_cut_panel_ax": [616, 667], "masking_data_with_gatefilt": [616, 624], "ax1": [616, 617, 622, 630, 632, 652, 667, 668, 671, 674, 675, 677, 683], "add_ax": [616, 667], "recogniz": 616, "with_scal": 616, "500k": 616, "grai": [616, 618, 620, 654, 655, 671], "plot_colorbar": 616, "pad": [616, 621], "plot_range_r": [616, 624, 644, 657, 658, 660], "dash": [616, 618, 664], "set_xtick": [616, 671, 690, 693], "arang": [616, 622, 625, 643, 660, 663, 664, 671, 672, 676, 677, 678, 679, 698], "set_ytick": [616, 671, 690, 693], "wind_reports_now": 616, "slon": 616, "tolist": 616, "slat": 616, "facecolor": [616, 618, 620], "deepskyblu": 616, "tornado_reports_now": 616, "tab": [616, 627, 652], "red": [616, 663, 677], "hail_reports_now": 616, "lawngreen": 616, "legend": [616, 620, 621, 622, 652], "savefig": [616, 618, 620, 621], "_dz_rpt": 616, "bbox_inch": [616, 621], "tight": [616, 621], "white": [616, 618, 663, 677], "mp4": 616, "map_imag": 616, "gif_titl": 616, "delet": [616, 624, 625, 654, 698], "gif": 616, "get_writ": 616, "fp": 616, "writer": [616, 624], "imread": 616, "append_data": 616, "ffmpeg_writ": 616, "divis": [616, 624], "macro_block_s": 616, "resiz": 616, "1930": 616, "1766": 616, "1936": 616, "1776": 616, "video": 616, "codec": 616, "player": 616, "incompat": [616, 624, 628], "ipython": [616, 620, 621, 623, 701], "browser": 616, "event": [616, 621, 622, 674, 675], "overview": [616, 619, 627], "retrospect": 616, "ecosystem": 617, "By": [617, 618, 622, 628], "learn": [617, 621, 687], "portal": [617, 618], "march": [617, 620, 637], "shown": [617, 621, 700], "offici": [617, 625, 698], "probe": 617, "ghz": 617, "purpos": [617, 618, 674, 675, 700], "nearli": [617, 663], "bokeh": 617, "formatt": 617, "datetimetickformatt": 617, "hv": 617, "guckazrcfrgem1": 617, "20220314": [617, 625, 677, 698], "000003": 617, "0x7f7dbd517400": 617, "linear_depolarization_ratio": 617, "mean_doppler_velocity_crosspolar_v": 617, "reflectivity_crosspolar_v": 617, "signal_to_noise_ratio_copolar_h": [617, 622], "signal_to_noise_ratio_crosspolar_v": 617, "spectral_width": 617, "spectral_width_crosspolar_v": 617, "vertical": 617, "awai": [617, 618, 651], "pyart_bal": [617, 618, 622, 691], "substanti": 617, "211": [617, 668], "ax2": [617, 622, 630, 632, 643, 652, 667, 668, 671, 673, 674, 675, 677, 683, 691], "212": [617, 668], "pangeo": 617, "1736": 617, "600": [617, 689], "r_calib": 617, "14t00": 617, "489e": 617, "806e": 617, "107": 617, "886e": 617, "command_lin": 617, "kazrcfr_ingest": 617, "guc": 617, "m1": 617, "process_vers": 617, "kazrcfr": 617, "el7": 617, "dod_vers": 617, "kazrcfrg": 617, "input_sourc": 617, "guckazrm1": 617, "kazr_moments_": 617, "site_id": 617, "software_vers": 617, "wed": 617, "mar": 617, "leachman": 617, "1498936": 617, "histori": [617, 695], "dsmgr": 617, "procnode2": 617, "1736rang": 617, "600frequenc": 617, "1sweep": 617, "1r_calib": 617, "1coordin": 617, "453818": 617, "startstandard_nam": 617, "timearrai": 617, "453818000": 617, "527426000": 617, "601027000": 617, "002026000": 617, "075634000": 617, "149219000": 617, "float323": 617, "10long_nam": 617, "transmit": [617, 691], "frequencyunit": 617, "hzstandard_nam": 617, "radiation_frequencymeta_group": 617, "instrument_parametersarrai": 617, "float32100": 617, "130": 617, "803e": 617, "04long_nam": 617, "volumeunit": 617, "mmeters_between_g": 617, "979246meters_to_center_of_first_g": 617, "679245spacing_is_const": 617, "truestandard_nam": 617, "projection_range_coordinateaxi": 617, "radial_range_coordinatearrai": 617, "679245": 617, "6585": 617, "160": [617, 672, 679, 680, 693, 696], "63774": 617, "17998": 617, "18028": 617, "268": 617, "18058": 617, "248": 617, "northunit": 617, "degreestandard_nam": 617, "sensor_to_target_azimuth_angleaxi": 617, "radial_azimuth_coordinatearrai": 617, "planeunit": 617, "sensor_to_target_elevation_angleaxi": 617, "radial_elevation_coordinatearrai": 617, "00long_nam": 617, "epochancillary_vari": 617, "time_offsetarrai": 617, "base_timeancillary_vari": 617, "base_timearrai": 617, "unspecifiedunit": 617, "dbstandard_nam": 617, "radar_linear_depolarization_ratiounpacking_detail": 617, "unpack": 617, "pack": [617, 624], "1041600": 617, "instrumentunit": 617, "sstandard_nam": 617, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 617, "crosspolar": 617, "channelunit": 617, "factorunit": 617, "dbzstandard_nam": 617, "equivalent_reflectivity_factorunpacking_detail": 617, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 617, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 617, "widthunit": 617, "radar_doppler_spectrum_widthunpacking_detail": 617, "angleunit": 617, "degreearrai": 617, "n_sampl": 617, "momentsunit": 617, "1meta_group": 617, "instrument_parametersstandard_nam": 617, "number_of_samples_used_to_compute_momentsarrai": 617, "noise_figur": 617, "methodunit": 617, "dbarrai": 617, "67": [617, 674, 675], "8043": 617, "unambigu": [617, 695], "velocityunit": 617, "smeta_group": 617, "968252": 617, "repetit": 617, "timeunit": 617, "sarrai": 617, "00027": 617, "transmitt": 617, "r_calib_radar_constant_copol": 617, "copolarunit": 617, "dbmeta_group": 617, "radar_calibrationstandard_nam": 617, "calibrated_radar_constant_h_channelarrai": 617, "996191": 617, "r_calib_radar_constant_crosspol": 617, "crosspolarunit": 617, "405288": 617, "r_calib_two_way_radome_loss_h": 617, "radom": 617, "loss": 617, "radar_calibration_two_way_radome_loss_h_channelarrai": 617, "half": 617, "radar_measured_sky_noise_h": 617, "sky": 617, "dbmarrai": 617, "69": [617, 633, 660], "03703": 617, "035995": 617, "0373": 617, "03814": 617, "05106": 617, "05984": 617, "radar_measured_sky_noise_v": 617, "radar_measured_transmit_pow": 617, "powerunit": 617, "dbmmeta_group": 617, "radar_transmit_powerarrai": 617, "143": [617, 679], "receiver_gain_copol": 617, "copolunit": 617, "sweepunit": 617, "1735": 617, "s22": 617, "basedunit": 617, "unambiguous_rang": [617, 695], "rangeunit": 617, "mmeta_group": 617, "unambiguous_rangearrai": 617, "40479": 617, "477": [617, 624], "degree_nstandard_nam": 617, "latitudevalid_min": 617, "0valid_max": 617, "0arrai": 617, "956158": 617, "degree_estandard_nam": 617, "longitudevalid_min": 617, "106": 617, "987854": 617, "altitudeunit": 617, "mstandard_nam": 617, "altitudearrai": 617, "2886": 617, "levelunit": 617, "heightarrai": 617, "m1convent": 617, "radar_calibrationprocess_vers": 617, "el7dod_vers": 617, "1input_sourc": 617, "kazr_moments_20220314": 617, "000005": 617, "datsite_id": 617, "gucplatform_id": 617, "kazrcfrgefacility_id": 617, "m1data_level": 617, "a1location_descript": 617, "laboratori": [617, 621], "sail": 617, "mt": 617, "crest": 617, "butt": [617, 618], "coloradodatastream": 617, "a1antenna_altitud": 617, "mantenna_diamet": 617, "mcomment": 617, "digital_rx_dec": 617, "24dualpol": 617, "0fft_len": 617, "512filter_length": 617, "67institut": 617, "radiat": [617, 618, 620, 622, 625, 687, 689, 690, 691, 693, 694, 695, 698], "research": [617, 618, 620, 625, 687, 689, 690, 691, 693, 694, 695, 698], "facilityn_g": 617, "1024num_spectral_averag": 617, "15pulse_compression_ratio": 617, "3range_gate_spacing_m": 617, "979246range_offset_ch1": 617, "mrange_offset_ch2": 617, "mscan_mod": 617, "pointingscan_nam": 617, "vptsoftware_vers": 617, "leachmantitl": 617, "momentsdoi": 617, "1498936histori": 617, "isel": 617, "coupl": [617, 622], "extra": [617, 620, 624], "won": [617, 621], "600rang": 617, "600coordin": 617, "395940000": 617, "469427000": 617, "542946000": 617, "360000": 617, "quadmesh": [617, 618], "0x7f7dad654f10": 617, "meant": [617, 619, 621], "popular": [617, 620], "jump": 617, "bar": 617, "hover": 617, "inspect": 617, "clabel": [617, 663, 664], "xformatt": 617, "ref_plot": 617, "7000": [617, 693], "platform_id": 617, "location_descript": 617, "xtick": [617, 690, 693], "ytick": [617, 690, 693], "vel_plot": 617, "prepar": [617, 618, 620, 622, 625, 689, 690, 691, 693, 694, 695, 698, 700], "plot1": 617, "plot2": 617, "datashad": 617, "lazili": 617, "coars": 617, "intial": 617, "unfortun": 617, "ref_plot_rast": 617, "param": [617, 624], "dynamic_oper": 617, "outofboundsdatetim": 617, "nanosecond": 617, "54168": 617, "invok": 617, "x_rang": 617, "13t23": 617, "417014000": 617, "579705000": 617, "y_rang": 617, "traceback": 617, "recent": [617, 621, 624, 701], "mgrover": [617, 620, 622, 637, 640, 643, 650, 651, 652, 658, 666, 672, 673, 683, 684, 685], "277": [617, 624], "get_plot_fram": 617, "map_obj": 617, "1344": 617, "val": 617, "_execute_callback": 617, "tuple_kei": 617, "retval": 617, "callback": 617, "arg": 617, "708": 617, "__call__": 617, "ret": 617, "__init__": [617, 625, 698], "1043": [617, 624], "obj": 617, "resolv": [617, 624], "1032": [617, 624], "1044": 617, "1036": 617, "_process": 617, "1018": [617, 624], "process_el": 617, "194": 617, "_appli": 617, "141": 617, "1514": 617, "predic": [617, 622], "pipelined_fn": 617, "method_fn": 617, "1223": 617, "super": [617, 657, 690, 693], "710": [617, 624], "map_fn": 617, "214": 617, "1133": [617, 624], "astyp": 617, "int64": [617, 631], "1497": [617, 624], "apply_ufunc": 617, "1159": 617, "apply_dataarray_vfunc": 617, "286": [617, 624], "result_var": 617, "data_var": 617, "750": [617, 624], "apply_variable_ufunc": 617, "as_compatible_data": 617, "234": 617, "_possibly_convert_object": 617, "178": 617, "asarrai": 617, "ravel": 617, "reshap": 617, "sanitize_arrai": 617, "567": [617, 624], "subarr": 617, "_try_cast": 617, "raise_cast_failur": 617, "726": [617, 624], "sanitize_to_nanosecond": 617, "arr": 617, "cast": 617, "1717": 617, "ensure_datetime64n": 617, "_lib": 617, "tslib": 617, "pyx": [617, 624], "257": 617, "np_datetim": 617, "120": [617, 689], "check_dts_bound": 617, "saw": 617, "few": [617, 624, 627, 701], "pro": 617, "con": 617, "thing": [617, 625, 698], "clear": [617, 622], "push": [617, 624, 625, 627, 698], "share": 617, "ran": [617, 625, 698], "shareabl": 617, "workflow": [617, 620, 624, 700], "mb": [617, 634, 641, 647, 669, 680, 681, 686, 696], "difficult": [617, 643], "jupyterbook": 617, "jupyt": [617, 620, 624, 630, 631, 632, 633, 635, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 701], "campaign": [617, 622, 675], "twitter": 618, "nou": 618, "dryglick": 618, "notic": [618, 622, 624, 643, 654], "odd": 618, "directli": [618, 700], "grei": 618, "darker": 618, "moir\u00e9": 618, "ryan": 618, "dopplershift": [618, 624], "turbul": 618, "ncei": 618, "search": [618, 687, 697], "aw": [618, 620, 624, 635, 636, 639, 641, 696], "mention": [618, 624, 625, 687, 698, 700, 701], "he": 618, "n0u": [618, 637], "elgin": 618, "panhandl": 618, "kevx": 618, "1458": 618, "octob": [618, 638], "landfal": 618, "gulf": 618, "lookl": 618, "webpag": 618, "cart": 618, "sent": 618, "email": [618, 622, 624], "websit": 618, "ftp": 618, "unzip": [618, 620], "kmob_sdus54_n0uevx_201810101458": 618, "partli": [618, 620, 689, 690, 691, 693, 694, 695], "facil": [618, 620, 621, 622, 625, 687, 689, 690, 691, 693, 694, 695, 698], "cite": [618, 620, 622, 624, 689, 690, 691, 693, 694, 695], "jj": [618, 620, 689, 690, 691, 693, 694, 695], "sm": [618, 620, 689, 690, 691, 693, 694, 695], "colli": [618, 620, 625, 687, 689, 690, 691, 693, 694, 695, 698], "jor": [618, 620, 625, 687, 689, 690, 691, 693, 694, 695, 698], "5334": [618, 620, 625, 687, 689, 690, 691, 693, 694, 695, 698], "119": [618, 620, 625, 639, 687, 689, 690, 691, 693, 694, 695, 698], "read_level3": 618, "dark": 618, "dark_background": [618, 653], "okai": 618, "88": [618, 620, 621, 672, 678], "83": 618, "31msignatur": [618, 622], "0m": [618, 620, 622], "0mdisplai": 618, "34m": [618, 622], "0mplot_ppi_map": 618, "0mfield": 618, "0msweep": 618, "36m0": 618, "0mmask_tupl": 618, "32mnone": [618, 622], "0mvmin": 618, "0mvmax": 618, "0mcmap": 618, "0mnorm": 618, "0mmask_outsid": 618, "32mfals": 618, "0mtitl": 618, "0mtitle_flag": 618, "32mtrue": 618, "0mcolorbar_flag": 618, "0mcolorbar_label": 618, "0max": 618, "0mfig": 618, "0mlat_lin": 618, "0mlon_lin": 618, "0mproject": 618, "0mmin_lon": 618, "0mmax_lon": 618, "0mmin_lat": 618, "0mmax_lat": 618, "0mwidth": 618, "0mheight": 618, "0mlon_0": 618, "0mlat_0": 618, "0mresolut": 618, "0mshapefil": 618, "0mshapefile_kwarg": 618, "0medg": 618, "0mgatefilt": 618, "0mfilter_transit": 618, "0membelish": 618, "0mraster": 618, "0mtick": 618, "0mticklab": 618, "0malpha": 618, "31msourc": 618, "32mdef": 618, "0mself": 618, "embelish": [618, 624], "31m": 618, "0mparse_vmin_vmax": 618, "0m_radar": 618, "0mparse_cmap": 618, "32mif": 618, "32mi": 618, "0mnp": 618, "0marang": 618, "36m30": 618, "36m46": 618, "36m1": 618, "36m110": 618, "36m75": 618, "0mloc": 618, "0mdata": 618, "0m_get_data": 618, "0mx": 618, "0my": 618, "0m_get_x_i": 618, "0mma": 618, "0mmasked_outsid": 618, "0mplt": 618, "0mgcf": 618, "32mnot": 618, "0mhasattr": 618, "32mels": 618, "0mcartopi": 618, "0mcr": 618, "0mlambertconform": 618, "0mcentral_longitud": 618, "0mcentral_latitud": 618, "0mwarn": 618, "overrid": [618, 664], "lambert": [618, 624], "0muserwarn": 618, "0mset_ext": 618, "0mplatecarre": 618, "32melif": 618, "36m2": 618, "0mgrid_project": 618, "0mpm": 618, "0mpcolormesh": 618, "36m1000": 618, "0mtransform": 618, "graphic": 618, "0mset_raster": 618, "admin": [618, 625, 698], "0mstates_provinc": 618, "0mfeatur": 618, "0mnaturalearthfeatur": 618, "0mcategori": 618, "cultur": 618, "0mname": 618, "admin_1_states_provinces_lin": 618, "0mscale": 618, "0mfacecolor": 618, "0mcoastlin": 618, "0madd_featur": 618, "0medgecolor": 618, "pose": 618, "difficulti": 618, "spectif": 618, "32min": 618, "0mmercat": 618, "0mgl": 618, "0mgridlin": 618, "0mxloc": 618, "0myloc": 618, "0mdraw_label": 618, "0mxlabels_top": 618, "0mylabels_right": 618, "0misinst": 618, "0mfigur": 618, "0mcanva": 618, "0mdraw": 618, "maker": 618, "0mxaxi": 618, "0mset_major_formatt": 618, "0mmpl": 618, "0mlongitude_formatt": 618, "0myaxi": 618, "0mlatitude_formatt": 618, "0m_lambert_gridlin": 618, "0mlambert_xtick": 618, "0mlambert_ytick": 618, "32mfrom": 618, "0mio": 618, "0mshaperead": 618, "32mimport": 618, "0mreader": 618, "0madd_geometri": 618, "0mgeometri": 618, "0m_set_titl": 618, "0mplot": 618, "0mappend": 618, "0mplot_var": 618, "0mplot_colorbar": 618, "0mmappabl": 618, "0mlabel": 618, "32mreturn": 618, "31mfile": [618, 622], "git_repo": 618, "31mtype": [618, 622], "fashion": 618, "0marg": 618, "0mshade": 618, "0mantialias": 618, "0mkwarg": 618, "31mdocstr": [618, 622], "pseudocolor": 618, "signatur": [618, 620], "quadrilater": 618, "pcolor": 618, "prefer": [618, 624, 697], "shade": [618, 624], "flat": [618, 637], "gouraud": 618, "cari": 618, "expand": [618, 678], "rc": 618, "regist": [618, 622], "canon": 618, "chosen": 618, "patch": [618, 663], "force_edgecolor": 618, "singular": [618, 621], "solid": [618, 664], "quad": 618, "halfwai": 618, "galleri": [618, 624, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 687, 696], "images_contours_and_field": 618, "pcolormesh_grid": 618, "snap": 618, "mesh": 618, "misc": [618, 624], "rasterization_demo": 618, "constructor": 618, "agg_filt": 618, "anim": 618, "antialias": [618, 663, 664], "aa": 618, "capstyl": 618, "clip_box": 618, "bbox": 618, "clip_on": 618, "clip_path": 618, "rgba": 618, "ec": 618, "fc": 618, "gid": 618, "hatch": 618, "in_layout": 618, "joinstyl": 618, "miter": 618, "bevel": 618, "thereof": 618, "offset_transform": 618, "path_effect": 618, "abstractpatheffect": 618, "picker": 618, "pickradiu": 618, "sketch_param": 618, "random": [618, 622], "zorder": 618, "imshow": [618, 624, 644, 645, 646, 650], "_ax": 618, "nrow": [618, 650], "ncolumn": 618, "_differ": 618, "li": 618, "handl": [618, 624], "polycollect": 618, "thu": [618, 627], "almost": 618, "slight": 618, "polygon": 618, "irrespect": 618, "One": [618, 621, 625, 689, 695, 698, 701], "masked_arrai": [618, 631, 677, 689, 695], "1e": [618, 677, 689, 695], "next": [618, 620, 627, 631, 637, 638, 671], "get_gate_lat_lon_alt": [618, 622, 624], "565": [618, 624], "562763": 618, "560526": 618, "888458": 618, "886227": 618, "883991": 618, "562765": 618, "560532": 618, "892834": 618, "890606": 618, "888374": 618, "562769": 618, "56054": 618, "898003": 618, "89578": 618, "893553": 618, "562756": 618, "560509": 618, "880096": 618, "877857": 618, "875618": 618, "560513": 618, "881853": 618, "879616": 618, "877377": 618, "56276": 618, "560518": 618, "884874": 618, "88264": 618, "880404": 618, "92199": 618, "92222": 618, "92245": 618, "186806": 618, "18703": 618, "18723": 618, "922264": 618, "92254": 618, "2396": 618, "23986": 618, "24012": 618, "92231": 618, "92263": 618, "29231": 618, "29262": 618, "29292": 618, "92208": 618, "92218": 618, "02802": 618, "02811": 618, "0282": 618, "92212": 618, "92226": 618, "07571": 618, "07583": 618, "07595": 618, "922356": 618, "133934": 618, "1341": [618, 624], "13428": 618, "setup": [618, 622, 624, 637, 643, 650, 652, 658, 672, 687, 697], "geoaxi": 618, "border": [618, 663], "cbar": [618, 621, 654], "tick_param": [618, 677], "labels": 618, "set_label": [618, 621, 654], "gl": [618, 620, 654], "draw_label": [618, 620, 654], "xlabel_styl": [618, 654], "ylabel_styl": [618, 654], "kevz_velocity_2018_10_10_1458": 618, "specifici": 618, "pull": [618, 621, 624, 625, 626, 627, 639, 698], "pr": [618, 625, 627, 698], "importantli": 618, "api": [618, 624, 687, 700], "abil": [618, 624, 687, 701], "arguement": 618, "appreci": [618, 687], "hello": 619, "welcom": [619, 700], "narr": 619, "feedback": [619, 700], "feel": [619, 625, 698], "know": [619, 621, 622, 701], "fridai": 620, "2023": [620, 687], "midwest": 620, "142": 620, "368": [620, 624], "excess": 620, "65": [620, 621, 671, 677], "knot": 620, "mph": 620, "184": 620, "bing": 620, "diamet": 620, "ifram": 620, "spc": [620, 624], "climo": 620, "gmf": 620, "php": 620, "rpt": 620, "230331_rpts_filter": 620, "walworth": 620, "counti": 620, "southeastern": [620, 643], "geneva": 620, "tourist": 620, "especi": [620, 622, 644], "live": 620, "chicagoland": 620, "confirm": [620, 637, 689], "assembl": 620, "summari": [620, 637, 638], "grlevel": 620, "encourag": 620, "peopl": 620, "cookbook": [620, 624, 687, 699], "moor": 620, "focu": 620, "varieti": [620, 622, 625, 635, 636, 675, 698], "forg": [620, 624, 625, 687, 697, 698, 701], "arm_pyart": [620, 625, 627, 687, 697, 698, 701], "shaperead": 620, "shpreader": 620, "shapelyfeatur": 620, "miniforge3": 620, "tqdm": 620, "tqdmwarn": 620, "iprogress": 620, "ipywidget": 620, "readthedoc": [620, 625, 698], "stabl": 620, "user_instal": 620, "autonotebook": 620, "notebook_tqdm": 620, "credit": 620, "censu": 620, "mac": [620, 624, 687], "curl": 620, "linux": [620, 624, 625, 687, 698, 701], "wget": 620, "www2": 620, "geo": [620, 624], "tiger": 620, "tiger2016": 620, "primaryroad": 620, "tl_2016_us_primaryroad": 620, "zip": [620, 621, 630, 631, 632, 633, 635, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685, 687], "xferd": 620, "dload": 620, "upload": [620, 624], "spent": 620, "7m": 620, "cpg": 620, "inflat": 620, "dbf": 620, "prj": 620, "shp": 620, "ea": 620, "iso": 620, "shx": 620, "reader": [620, 623, 624, 639, 653], "geom": 620, "loop": [620, 624, 679], "rec": 620, "fullnam": 620, "interstate_featur": 620, "darkblu": 620, "clean": [620, 621, 624, 671, 683], "filesystem": [620, 621, 653, 678], "month": [620, 637, 638, 639], "kmkx20230401_010517_v06": 620, "kmkx20230401_011057_v06": 620, "kmkx20230401_011638_v06": 620, "kmkx20230401_012219_v06": 620, "kmkx20230401_012759_v06": 620, "kmkx20230401_013341_v06": 620, "kmkx20230401_013922_v06": 620, "kmkx20230401_014502_v06": 620, "kmkx20230401_015042_v06": 620, "kmkx20230401_015623_v06": 620, "kmkx20230401_015928_v06": 620, "plot_configur": 620, "pyart_chasespectr": [620, 621, 622, 700], "twilight_shift": [620, 683], "cross_correlation_ratio": [620, 621, 637, 638, 655, 656, 674, 675, 694, 695], "plot_radar_ppi": 620, "left_field": 620, "right_field": 620, "plot_config": 620, "precip": 620, "vel_dealia": 620, "dealias_region_bas": [620, 624, 632, 671, 683, 691], "add_field": [620, 625, 630, 632, 671, 674, 675, 676, 677, 683, 690, 691, 698], "corrected_veloc": [620, 632, 671, 679, 683, 691, 694], "plot_numb": 620, "config": [620, 624, 689, 701], "121": [620, 622, 637, 643, 652, 673, 677, 683], "generate_titl": 620, "time_step": 620, "get_start_end": 620, "central_tim": 620, "astimezon": [620, 653, 678], "new_titl": 620, "cdt": 620, "sharon": 620, "Near": 620, "delavan": 620, "6105": 620, "60666": 620, "lightgrei": 620, "lavenderblush": 620, "ppi_velocity_reflectivity_": 620, "flexibl": [620, 624], "hope": 620, "concept": 621, "quickstart": 621, "basic": [621, 624, 687, 688, 690], "compet": 621, "bytesio": 621, "pil": 621, "ipimag": 621, "repositori": [621, 625, 626, 627, 687, 697, 698, 701], "chicago": 621, "klot": 621, "june": 621, "5th": 621, "start_dat": 621, "yyyi": [621, 622, 623], "dd": [621, 622, 623], "hh": 621, "end_dat": 621, "argonn": 621, "lemont": 621, "il": 621, "sawmil": 621, "creek": 621, "darien": 621, "ie": 621, "slot": 621, "700937896518866": 621, "73884644555692": 621, "99578103231573": 621, "98744136114946": 621, "tower": 621, "scm": [621, 624, 625, 698], "magenta": 621, "cyan": [621, 677], "current_d": 621, "date_str": 621, "date_str_compact": 621, "hour_str": 621, "all_fil": 621, "filtered_fil": 621, "endswith": [621, 653, 678], "_mdm": [621, 653, 678], "although": 621, "pol": 621, "check_radar_field": 621, "file_path": 621, "rb": 621, "radar_data": 621, "klot20240605_040442_v06": 621, "clutter_filter_power_remov": [621, 637], "spectrum_width": [621, 637, 638, 694, 695], "differential_phas": [621, 637, 638, 656, 694, 695], "streamlin": 621, "read_radar_data": 621, "tell": [621, 677, 694], "halt": 621, "unabl": 621, "sometim": [621, 627, 689], "reduc": [621, 655, 675, 697], "nonmeteorolog": 621, "blob": 621, "aforement": 621, "fit": [621, 625, 698], "pure": 621, "aesthet": 621, "decis": 621, "basenam": 621, "markers": 621, "tight_layout": [621, 622, 633, 644, 668, 671], "046": 621, "radar_frame_": 621, "frame": 621, "someth": [621, 687], "rid": 621, "temporarili": 621, "abl": [621, 687, 697], "pillow": 621, "gif_filenam": 621, "radar_anim": 621, "save_al": 621, "append_imag": 621, "durat": 621, "704120": 621, "968328": 621, "frames_dir": 621, "makedir": 621, "exist_ok": 621, "radar_displai": [621, 649], "notabl": [622, 623], "insight": [622, 623], "analyz": [622, 625, 687, 694, 698], "decid": 622, "quicklook": 622, "januari": [622, 625, 687, 698], "wettest": 622, "la": 622, "jolla": 622, "california": 622, "tarfil": [622, 638], "download_arm_data": 622, "0mact": 622, "0mdiscoveri": 622, "0mdownload_arm_data": 622, "0musernam": 622, "0mtoken": 622, "0mdatastream": 622, "0mstartdat": 622, "0menddat": 622, "0mtime": 622, "0moutput": 622, "webservic": 622, "usernam": [622, 697], "log": [622, 624, 627, 653, 678], "adc": [622, 624], "datastream": 622, "acquir": 622, "startdat": 622, "yyyymmdd": 622, "thh": 622, "ss": 622, "15t12": 622, "enddat": 622, "15t13": 622, "hhmmss": 622, "programmat": 622, "rest": 622, "savedata": 622, "cron": 622, "job": 622, "workspac": 622, "disk": 622, "hpss": 622, "armliv": 622, "livedata": 622, "giansiracusa": 622, "giansiracumt": 622, "ornl": 622, "sgpmete13": 622, "jan": 622, "xxxxxxxxxxxxxxxx": 622, "download_data": 622, "mambaforg": 622, "epckasacrcfrs2": 622, "21t01": 622, "20240121": 622, "010020": 622, "010436": 622, "011116": 622, "012914": 622, "012503": 622, "011845": 622, "012257": 622, "010757": 622, "010118": 622, "011434": 622, "012708": 622, "011640": 622, "012051": 622, "hardin": 622, "isom": 622, "lindenmai": 622, "matthew": 622, "nelson": 622, "feng": 622, "deng": 622, "rocqu": 622, "castro": 622, "wendler": 622, "ka": 622, "kasacrcfr": 622, "1469302": 622, "trick": 622, "ones": [622, 650], "798": 622, "runtimewarn": 622, "encount": 622, "intersect": 622, "whic": 622, "ppi_fil": 622, "rhi_fil": 622, "elif": 622, "mainli": 622, "threshold_valu": 622, "suptitl": [622, 630, 632, 644, 666, 679], "too": [622, 624], "And": [622, 624, 631], "remaind": 622, "fromnumer": 622, "784": [622, 624], "maskedarrai": [622, 624], "kth": 622, "idea": [622, 689, 691], "0115": 622, "rhi_radar": 622, "ppi_radar": 622, "achiv": 622, "past": [623, 625, 698], "tag": [623, 624], "kernelspec": 623, "display_nam": 623, "ipykernel": 623, "languag": [623, 625, 687, 698], "language_info": 623, "codemirror_mod": 623, "file_extens": 623, "mimetyp": 623, "nbconvert_export": 623, "pygments_lex": 623, "ipython3": 623, "insert": 623, "nbformat": 623, "nbformat_minor": 623, "care": 623, "isilb": 624, "sinaram": 624, "1532": 624, "zssherman": 624, "get_azimuth": 624, "xradar": [624, 630, 633, 636, 641, 686, 687, 696, 697, 700], "1547": 624, "mgrover1": 624, "1544": 624, "1542": 624, "1541": 624, "bridg": 624, "1537": 624, "columnsect": [624, 672], "1529": 624, "failur": 624, "wheel": 624, "1526": 624, "dep": 624, "bump": 624, "action": [624, 625, 627, 698], "group": [624, 625, 698], "1539": 624, "dependabot": 624, "epcap": 624, "1534": 624, "1530": 624, "1528": 624, "zdist_factor": 624, "1509": 624, "1524": 624, "1519": 624, "codeql": 624, "1515": 624, "pin": [624, 627], "ci": [624, 626, 627], "1507": 624, "xdrlib": [624, 687, 697], "1525": 624, "1518": 624, "1492": 624, "lauratomkin": 624, "kmuehlbauer": 624, "rtanamachi": 624, "1504": 624, "1487": 624, "1478": 624, "jrobrien91": 624, "1503": 624, "1501": 624, "outdat": 624, "ipynb": [624, 630, 631, 632, 633, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685], "1490": 624, "1484": 624, "1482": 624, "1474": 624, "commit": [624, 625, 627, 698], "1506": 624, "1475": 624, "rainbow_wrl": 624, "happyxiaoanan": 624, "reclass": 624, "1495": 624, "rbhupi": 624, "1493": 624, "minor": [624, 644, 690, 693], "get_elev": 624, "1489": 624, "rescal": [624, 674, 675], "1486": 624, "1479": 624, "rcjackson": 624, "app": 624, "cmweather": [624, 650, 687, 697, 700], "1452": 624, "accessor": 624, "1457": 624, "1456": 624, "typo": 624, "1471": 624, "isinst": 624, "1448": 624, "1472": 624, "1470": 624, "1469": 624, "instruct": [624, 687, 699], "1462": 624, "1473": 624, "1468": 624, "1450": 624, "scolli": 624, "dim": [624, 678], "load_kazr": 624, "1446": 624, "1447": 624, "arm_vpt": 624, "1445": 624, "lint": [624, 625, 698], "1444": 624, "mnt": 624, "1440": [624, 689], "dedic": [624, 700], "1442": 624, "1443": 624, "1437": 624, "algorith": 624, "1434": 624, "wolfidan": 624, "1430": 624, "1433": 624, "1428": 624, "neutrinocero": 624, "odim": 624, "1425": 624, "gatemapp": [624, 635, 642, 647, 696], "1418": 624, "hook": [624, 625, 698], "1419": 624, "sphinx": [624, 630, 631, 632, 633, 635, 637, 638, 639, 640, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 684, 685], "theme": 624, "1427": 624, "feet": 624, "1423": 624, "leak": 624, "mapper": 624, "1421": 624, "vforcel": 624, "1417": 624, "steepatticstair": 624, "1407": 624, "readm": [624, 697], "1397": 624, "1416": 624, "1413": 624, "1411": 624, "1409": 624, "1401": 624, "joshua": 624, "hampton": 624, "del": [624, 654], "old": 624, "conda_recip": 624, "1399": 624, "ruff": 624, "1388": 624, "wrong": 624, "1390": 624, "1385": 624, "1383": 624, "pkg_resourc": 624, "runtim": 624, "1394": 624, "mail": [624, 625, 687, 698], "1393": 624, "codeown": 624, "1391": 624, "1384": 624, "1382": 624, "1379": 624, "mismatch": 624, "1381": 624, "wrap": 624, "get_gate_area": 624, "1375": 624, "1380": [624, 689], "1372": 624, "exec_modul": 624, "load_modul": 624, "1369": 624, "badg": 624, "read_sigmet": 624, "1351": 624, "zouihao": 624, "unus": 624, "1343": 624, "1342": 624, "range_step": 624, "1338": 624, "max_num_g": 624, "1337": 624, "1327": 624, "revert": 624, "setuptool": [624, 687, 697], "unwant": [624, 649], "cleanup": 624, "1357": 624, "1355": 624, "1339": 624, "1361": 624, "1335": 624, "manipul": [624, 688], "1300": 624, "kylejgillett": 624, "melovato": 624, "tsbiscaro": 624, "1324": 624, "1319": 624, "1314": 624, "add_filt": 624, "1326": 624, "1320": [624, 689], "1325": 624, "jthielen": 624, "1303": 624, "jjhelmu": [624, 701], "wx4stg": 624, "antiviru": 624, "similiar": 624, "1307": 624, "1299": 624, "throw": 624, "convolve1d": 624, "1313": 624, "1306": 624, "1317": 624, "1311": 624, "jfigui": 624, "citat": [624, 625, 687, 698], "1304": 624, "gamaanderson": 624, "hhuangwx": 624, "josephhardine": 624, "meteoswiss": [624, 676, 679], "mdr": 624, "ngui": 624, "tjlang": 624, "1294": 624, "1290": 624, "1285": 624, "1279": 624, "backward": [624, 628], "1278": 624, "1284": 624, "tracer": 624, "1296": 624, "1292": 624, "1287": 624, "cibuildwheel": 624, "1267": 624, "ocefpaf": 624, "1275": 624, "1276": 624, "1265": 624, "dcedgren": 624, "jilling": 624, "zhaobudaola": 624, "1263": 624, "1235": 624, "1215": 624, "1261": 624, "1241": 624, "1240": 624, "gatefi": 624, "1226": 624, "join_radar": 624, "repititon": 624, "iparam": 624, "1218": 624, "1216": 624, "trmm_rsl": 624, "1239": 624, "cftime": 624, "1211": 624, "incorrect": [624, 628, 691], "1231": 624, "ci_setup": 624, "1213": 624, "1264": 624, "1251": 624, "1234": 624, "1228": 624, "subset_radar": 624, "radar_util": 624, "1227": 624, "pyrad": 624, "1220": 624, "tst": 624, "1214": 624, "srbrodzik": 624, "1208": 624, "1204": 624, "1201": [624, 637], "1198": 624, "1196": 624, "catch": 624, "1191": 624, "1207": 624, "pypi": 624, "1206": 624, "unitest": 624, "1200": [624, 689], "1199": 624, "echoclass": 624, "1197": 624, "convv": 624, "awhil": 624, "back": 624, "1195": 624, "1190": 624, "dp": 624, "1184": 624, "solver": [624, 687], "1183": 624, "1176": 624, "1187": 624, "revis": 624, "270": [624, 625, 645, 647, 668, 696, 698], "1185": 624, "1181": 624, "1178": 624, "1171": 624, "1180": 624, "1177": 624, "1173": 624, "sobitp59": 624, "rogu": 624, "1170": 624, "1160": 624, "1152": 624, "1151": 624, "mispel": 624, "1158": 624, "1148": 624, "1167": 624, "1154": 624, "unittest": 624, "1153": 624, "1136": 624, "trigger": 624, "1126": 624, "1118": 624, "1115": 624, "maco": 624, "1147": 624, "prune": 624, "1143": 624, "1141": 624, "1140": [624, 689], "1139": 624, "1137": 624, "1131": 624, "1130": 624, "1129": 624, "1128": 624, "1127": 624, "1125": 624, "1124": 624, "1123": 624, "1120": 624, "1119": 624, "dpr": 624, "1116": 624, "postcard": 624, "1104": 624, "1103": 624, "1122": 624, "gridmapdisplai": [624, 635, 648, 652, 653, 669, 674, 675, 684, 693, 696, 700], "1099": 624, "quick": [624, 637, 638], "1146": 624, "contribut": [624, 625, 698, 699], "1106": 624, "1117": 624, "1113": 624, "submodul": [624, 693], "1110": 624, "forgotten": 624, "1108": 624, "test_echo_class": 624, "1107": 624, "1101": 624, "1098": 624, "1097": 624, "1094": 624, "1080": [624, 689], "registri": 624, "1087": 624, "1096": 624, "1093": 624, "1090": 624, "1089": 624, "1088": 624, "1085": 624, "1084": 624, "analyt": 624, "1081": 624, "1079": 624, "1077": 624, "pmi": 624, "csp": 624, "ritvj": 624, "doesn": [624, 689], "mandat": 624, "1014": 624, "reallynicegui": 624, "hasattr": 624, "1034": 624, "overlap": [624, 654, 663], "mapdisplai": 624, "1029": 624, "azimuth_rhi_plot": 624, "1025": 624, "1019": 624, "rxm25": 624, "1075": 624, "1064": 624, "mute_radar": 624, "1033": 624, "1030": 624, "radxgrid": 624, "1027": 624, "1026": 624, "roadmap": 624, "repo": [624, 625, 698], "1059": 624, "sidebar": 624, "1074": 624, "datetime_util": 624, "1072": 624, "1071": 624, "pydata": 624, "1069": 624, "1068": 624, "1067": 624, "1066": 624, "1063": 624, "codecov": 624, "1061": 624, "1060": 624, "1058": 624, "1056": 624, "1055": 624, "1053": 624, "1051": 624, "1050": 624, "1048": 624, "branch": [624, 625, 627, 698, 701], "1040": 624, "1039": 624, "1038": 624, "1031": 624, "1024": 624, "1020": [624, 689], "humphreyscart": 624, "tkralph": 624, "1003": 624, "997": 624, "1007": 624, "1001": 624, "1010": 624, "travi": 624, "sty": [624, 625, 698], "pep8": [624, 625, 698], "1005": 624, "988": 624, "quba1": 624, "984": 624, "tdwr": 624, "969": 624, "956": 624, "994": 624, "979": 624, "h5py": [624, 687], "978": 624, "june1st": 624, "switch": [624, 625, 698], "973": 624, "maint": [624, 625, 698], "966": 624, "983": 624, "amarouan": 624, "abdelhak": 624, "bmgxyz": 624, "address": [624, 677], "962": 624, "mwilson14": 624, "963": 624, "nonetyp": 624, "regard": 624, "959": 624, "964": 624, "176": 624, "919": 624, "rda": 624, "903": 624, "add_gate_area": 624, "950": 624, "blotchi": 624, "947": 624, "946": 624, "944": 624, "694": 624, "938": 624, "vlouf": 624, "934": [624, 661, 669, 696], "925": 624, "924": 624, "917": 624, "appveyor": 624, "937": 624, "927": 624, "liter": 624, "said": 624, "949": 624, "948": 624, "929": 624, "926": 624, "920": 624, "915": 624, "911": 624, "grwise1": 624, "jsignel": 624, "rumpki": 624, "broke": 624, "913": 624, "msg29": 624, "909": 624, "907": 624, "framework": 624, "910": 624, "912": 624, "napoleon": 624, "902": 624, "rtd": 624, "893": 624, "892": 624, "odimh5": 624, "898": 624, "895": 624, "896": 624, "864": 624, "louiswick": 624, "hilderbrand": 624, "877": 624, "886": 624, "crash": 624, "878": 624, "891": 624, "zflamig": 624, "futur": [624, 625, 628, 698], "890": 624, "889": 624, "885": 624, "dstex": 624, "880": 624, "soon": 624, "879": 624, "plot_grid": [624, 652, 667, 674, 675, 684, 693, 700], "to_xarrai": 624, "873": 624, "876": 624, "elementwis": 624, "anaconda": [624, 625, 627, 687, 697, 698], "faq": 624, "868": 624, "mvanlierwalq": 624, "848": 624, "grid_io": 624, "846": 624, "jhemedin": 624, "841": 624, "nbin": 624, "865": 624, "856": 624, "840": [624, 689], "caus": 624, "852": 624, "849": 624, "get_dataset": 624, "845": 624, "docstr": [624, 625, 698], "838": 624, "836": 624, "cheatsheet": 624, "fortran": 624, "bit": [624, 697], "environ": [624, 687, 697, 699], "contr": 624, "843": 624, "spell": 624, "835": 624, "read_d3r_gcpex_nc": 624, "842": 624, "eccc": 624, "837": 624, "taylbm": 624, "kenkeho": 624, "swnesbitt": 624, "827": 624, "822": 624, "806": 624, "804": 624, "800": [624, 671], "778": 624, "688": [624, 672], "incomplet": 624, "msg5": 624, "832": 624, "820": 624, "812": 624, "deal": 624, "809": 624, "contiuum": 624, "gh": 624, "795": 624, "explicit": 624, "py2": 624, "790": 624, "sh": 624, "kai": 624, "muehlbauer": 624, "789": 624, "777": 624, "indexerror": 624, "check_outli": 624, "776": 624, "juhi24": 624, "770": 624, "imp": 624, "newer": [624, 697], "675": 624, "824": 624, "minu": 624, "803": 624, "738": 624, "799": 624, "792": 624, "favor": 624, "791": 624, "786": 624, "itself": [624, 695], "inc": 624, "794": 624, "rst": 624, "preformat": 624, "779": 624, "eaxmpl": 624, "834": 624, "833": [624, 677], "elsewher": 624, "831": 624, "828": 624, "821": 624, "pytest": [624, 625, 687, 697, 698], "818": 624, "atteun": 624, "817": 624, "simulated_veloc": [624, 694], "802": 624, "grab": [624, 625, 666, 698], "796": 624, "793": 624, "787": 624, "781": 624, "cvd": [624, 650], "775": 624, "774": 624, "769": 624, "nl2": 624, "765": 624, "miaoneng": 624, "gewitterblitz": 624, "liliaow567": 624, "764": 624, "coveral": 624, "messsag": 624, "761": 624, "757": 624, "set_raster": 624, "748": 624, "754": 624, "755": 624, "recompil": 624, "758": 624, "ngoldbaum": 624, "reciev": 624, "752": 624, "gate_id": [624, 694], "749": 624, "746": 624, "744": 624, "zxdawn": 624, "netcdftim": 624, "736": 624, "731": 624, "dot_product": 624, "729": 624, "test_rhi_elev": 624, "twice": [624, 675], "724": 624, "728": 624, "727": 624, "nosetest": 624, "715": 624, "vradh": 624, "vradv": 624, "quantiti": 624, "739": 624, "es5nhc": 624, "735": 624, "wave100": 624, "734": 624, "733": 624, "730": 624, "723": 624, "comp": 624, "721": 624, "cameron": 624, "homey": 624, "716": 624, "cameronhomey": 624, "jamessong": 624, "winash12": 624, "687": 624, "csnardi": 624, "645": 624, "docbuild": 624, "709": 624, "mhpicel": 624, "705": 624, "fromstr": 624, "704": 624, "692": 624, "651": 624, "711": 624, "calculate_velocity_textur": [624, 683, 691], "retreiv": 624, "672": 624, "bucket": [624, 637, 653, 678], "673": 624, "653": 624, "638": 624, "635": 624, "frombuff": 624, "702": 624, "grid_mapp": 624, "707": 624, "706": 624, "goharkai": 624, "infinit": 624, "693": 624, "freemansw1": 624, "683": 624, "674": 624, "668": 624, "contact": 624, "land": 624, "667": [624, 689], "665": 624, "662": 624, "661": 624, "attributeerror": 624, "656": 624, "oserror": 624, "650": 624, "overflowerror": 624, "648": 624, "happier": 624, "647": 624, "640": 624, "639": 624, "634": [624, 641], "620": 624, "itsjm": 624, "kirknorth": 624, "617": 624, "616": 624, "631": 624, "swap": 624, "el": 624, "plot_rai": 624, "618": 624, "_get_angl": 624, "613": 624, "607": 624, "linspac": [624, 625, 650, 655, 671, 674, 675, 689, 698], "603": 624, "627": 624, "623": 624, "596": 624, "595": 624, "632": 624, "630": 624, "625": 624, "tulipasilva": 624, "622": 624, "normbw": 624, "q": 624, "quit": [624, 687], "614": 624, "git": [624, 625, 687, 697, 698, 700, 701], "611": 624, "608": 624, "mrugna": 624, "605": 624, "bld": 624, "kludg": 624, "604": 624, "acknowledg": [624, 687], "602": 624, "qpe": [624, 635, 670, 675, 680, 696], "mustafaalicelik": 624, "580": 624, "577": 624, "576": 624, "575": 624, "azim": 624, "546": 624, "pickl": 624, "unpickl": 624, "543": 624, "vcp": 624, "541": 624, "noaaport": 624, "seper": 624, "540": [624, 689], "521": 624, "459": 624, "590": 624, "bugfix": 624, "l3": 624, "135": 624, "eet": 624, "585": 624, "582": 624, "570": 624, "558": 624, "ctm": 624, "553": [624, 671, 680, 696], "542": 624, "aux_io": [624, 631], "read_gam": 624, "535": 624, "midnight": 624, "523": 624, "importerror": 624, "522": 624, "519": 624, "512": 624, "510": 624, "phase_proc": 624, "zerodivis": 624, "494": 624, "485": 624, "unsupport": [624, 700], "481": 624, "579": [624, 655, 669, 696], "578": 624, "568": 624, "563": 624, "559": 624, "549": 624, "547": 624, "gamicfil": 624, "gamic_hdf5": 624, "536": 624, "524": 624, "513": 624, "balltre": 624, "504": 624, "501": 624, "482": 624, "479": 624, "594": 624, "561": 624, "despeckle_field": 624, "544": 624, "axislabel_flag": 624, "539": [624, 676, 680, 696], "529": 624, "_get_x_z": 624, "491": 624, "486": 624, "586": 624, "572": 624, "fixup": 624, "569": 624, "560": 624, "555": [624, 672], "recip": [624, 627], "554": 624, "nose_arg": 624, "548": 624, "538": 624, "532": 624, "531": 624, "528": 624, "output_to_geotiff": 624, "514": 624, "511": 624, "507": [624, 664, 669, 696], "506": 624, "498": 624, "libgfortran": 624, "497": 624, "495": 624, "493": 624, "489": 624, "488": 624, "argentinean": 624, "480": [624, 689], "bdolan44": 624, "dara74k": 624, "gavi": 624, "jacaicedob": 624, "wx": 624, "pfhein": 624, "tamisalex": 624, "469": 624, "468": 624, "467": 624, "luminos": 624, "464": 624, "455": 624, "hclass": 624, "447": 624, "439": 624, "434": 624, "433": 624, "427": 624, "411": 624, "404": 624, "388": 624, "cross_section_ppi": [624, 668], "380": 624, "472": 624, "471": 624, "470": 624, "prf": 624, "460": 624, "get_field_colormap": 624, "446": 624, "444": 624, "example_cfradial_rhi": 624, "441": [624, 653], "417": 624, "struct": 624, "410": 624, "383": 624, "unicod": 624, "382": 624, "gatefit": 624, "372": 624, "465": 624, "refactor": 624, "463": 624, "decor": 624, "416": 624, "392": 624, "radxcovert": 624, "clarifi": 624, "475": 624, "406": 624, "add_field_lik": [624, 631, 643], "397": 624, "391": 624, "376": 624, "370": 624, "corner_to_point": 624, "473": 624, "466": 624, "456": [624, 685, 686, 696], "outstand": 624, "412": 624, "413": 624, "454": 624, "453": 624, "449": 624, "438": 624, "437": 624, "430": 624, "426": 624, "miniconda": [624, 625, 687, 698], "reactiv": 624, "422": 624, "plot_map_one_radar_to_grid": [624, 645, 647, 696], "420": [624, 663, 669, 689, 696], "419": 624, "408": 624, "resilli": 624, "403": 624, "write_mdv_grid": 624, "402": 624, "401": 624, "399": 624, "395": 624, "documen": 624, "add_2d_latlon_axi": 624, "394": 624, "378": 624, "acess": 624, "377": 624, "373": 624, "deeplycloudi": 624, "358": [624, 625, 698], "edge_netcdf": 624, "read_edge_netcdf": 624, "357": [624, 625, 698], "dealias_fourdd": [624, 700], "348": 624, "346": 624, "326": 624, "308": 624, "361": 624, "refl_filter_flag": 624, "map_gate_to_grid": 624, "334": 624, "region_dealia": 624, "327": [624, 686], "libm": 624, "posix": 624, "319": 624, "unnecessari": 624, "inmemoryfil": 624, "365": 624, "359": [624, 625, 698], "354": 624, "_rsl_interfac": 624, "342": [624, 668, 669, 696], "binstar": 624, "337": 624, "320": 624, "317": 624, "362": 624, "plot_grid_three_panel": 624, "353": 624, "confus": 624, "363": 624, "340": 624, "externalis": 624, "339": 624, "333": 624, "332": 624, "47": [624, 679], "324": 624, "323": 624, "271": 624, "binar": 624, "266": 624, "313": 624, "312": 624, "290": 624, "280": 624, "273": 624, "272": 624, "261": 624, "256": [624, 650, 676], "dealias_phase_unwrap": 624, "radarmapdispl": 624, "249": 624, "discontin": 624, "314": 624, "288": 624, "fault": 624, "276": 624, "dealias_unwrap_phas": 624, "275": 624, "corrupt": 624, "269": 624, "283": 624, "inconsist": 624, "274": 624, "254": [624, 653, 669, 675, 696], "fallback": 624, "245": 624, "316": 624, "ngates_vart": 624, "310": 624, "py3": [624, 701], "nexrad_level2": 624, "nexrad_level3": 624, "309": 624, "1byte": 624, "datatyp": 624, "weathergod": 624, "293": 624, "292": 624, "289": 624, "291": 624, "138": 624, "284": 624, "alter": 624, "267": 624, "latlon": 624, "264": 624, "262": 624, "260": 624, "259": 624, "258": 624, "241": [624, 645], "rebuild": 624, "237": 624, "scientif": [625, 687, 698], "e25": [625, 687, 698], "publish": [625, 698], "easiest": [625, 687, 698], "1st": [625, 687, 698], "Then": [625, 627, 687, 697, 698], "termin": [625, 687, 698, 701], "prompt": [625, 687, 698], "mamba": [625, 698], "openradar": [625, 698], "short": [625, 627, 698], "cours": [625, 643, 698], "ev": [625, 698], "pyart_short_cours": [625, 698], "youtub": [625, 698], "watch": [625, 698], "diip": [625, 698], "q3bkzw": [625, 698], "book": [625, 698], "rule": [625, 698], "pep": [625, 698], "0008": [625, 698], "afterward": [625, 698], "neccessari": [625, 698], "brief": [625, 626, 698], "parti": [625, 698], "explain": [625, 698], "numpydoc": [625, 698], "_inverse_dist_squar": [625, 698], "_average1d": [625, 698], "seen": [625, 698], "explan": [625, 626, 698], "privat": [625, 698], "rerun": [625, 698], "test_vad": [625, 698], "test_radar": [625, 689, 698], "make_target_radar": [625, 698], "1000": [625, 633, 646, 657, 663, 664, 669, 671, 675, 678, 693, 696, 698], "ones_lik": [625, 698], "z_start": [625, 698], "z_end": [625, 698], "z_count": [625, 698], "vad_height": [625, 698], "vad_spe": [625, 698], "98665725": [625, 698], "94020686": [625, 698], "88107152": [625, 698], "81939374": [625, 698], "75851962": [625, 698], "vad_direct": [625, 698], "84659496": [625, 698], "30240553": [625, 698], "58658589": [625, 698], "81073051": [625, 698], "01353486": [625, 698], "01335138": [625, 698], "06014712": [625, 698], "12039762": [625, 698], "18410404": [625, 698], "24791911": [625, 698], "98663937": [625, 698], "9398407": [625, 698], "87958641": [625, 698], "81587601": [625, 698], "75205693": [625, 698], "assert_almost_equ": [625, 698], "pyarg": [625, 698], "test_cfradi": [625, 698], "cd": [625, 698], "open_radar_data": [625, 631, 633, 640, 644, 649, 651, 671, 675, 676, 677, 679, 698], "registry_fil": [625, 698], "fetch": [625, 631, 633, 640, 644, 649, 651, 671, 675, 676, 677, 679, 698], "gucxprecipradarcmacppis2": [625, 677, 698], "c1": [625, 632, 677, 694, 698], "025840": [625, 677, 698], "isn": [625, 689, 698], "fork": [625, 627, 698], "cartopy_map": [625, 698], "branch_nam": [625, 698], "task": [625, 635, 682, 698], "mind": [625, 643, 698], "simpli": [625, 674, 683, 691, 693, 697, 698, 701], "acronym": [625, 698], "finish": [625, 698, 701], "quotat": [625, 698], "hit": [625, 698], "depth": [625, 687, 695, 698], "acronymn": [625, 698], "gitwash": [625, 698], "development_workflow": [625, 698], "whitespac": [625, 698], "usual": [625, 639, 698], "vim": [625, 698], "ff": [625, 698], "sit": [625, 698], "guidanc": [625, 698], "anyth": 627, "creator": 627, "draft": 627, "shortlog": 627, "uplod": 627, "feedstock": 627, "clone": [627, 687, 697], "meta": 627, "yaml": 627, "sha256": 627, "rerend": 627, "smithi": 627, "bot": 627, "awar": 627, "semant": 628, "earlier": 628, "ceas": 628, "Such": 628, "proceed": 628, "futurewarn": 628, "__doc__": [630, 631, 632, 637, 638, 639, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 674, 675, 678], "xd": [630, 633, 683, 684, 685, 700], "sgpcsaprsurcmaci7": [630, 690], "20110520": [630, 690], "095101": [630, 690], "open_cfradial1_datatre": [630, 633, 683, 684, 685, 700], "to_radar": [630, 633, 640, 683, 684, 685, 700], "pop": 630, "specific_attenu": [630, 672, 676, 689, 694], "corrected_reflectivity_horizont": [630, 640, 646, 652, 672, 683, 685, 689], "calculate_attenu": 630, "131": [630, 674, 675], "132": [630, 674, 675], "ax3": [630, 632, 667, 671, 674, 675, 677], "133": [630, 672, 674, 675], "208": [630, 634, 696], "plot_attenu": [630, 634, 696], "zach": [631, 638], "sherman": [631, 638, 639], "sgpkazrgec1": 631, "20190529": 631, "000002": 631, "cdf": [631, 632, 671, 675], "read_kazr": 631, "reflectivity_copol": 631, "calc_cloud_mask": 631, "cloud_mask_radar": 631, "cloud_mask_2": 631, "ll": 631, "reflectivity_cloud_mask": 631, "flag_valu": 631, "no_cloud": 631, "999999": 631, "int16": 631, "762": [631, 634, 696], "plot_cloud_mask": [631, 634, 696], "ial": 632, "095636": [632, 691], "sonde_fil": 632, "sgpinterpolatedsondec1": 632, "20110510": 632, "000000": 632, "dt": 632, "read_arm_sonde_vap": 632, "exclude_transit": [632, 645, 646, 649, 652, 653, 673], "exclude_invalid": [632, 671], "exclude_outsid": [632, 653, 671], "dealias_data": 632, "sixth": 632, "221": [632, 656], "223": [632, 656], "ax4": 632, "224": [632, 656], "525": [632, 634, 696], "plot_dealia": [632, 634, 696], "birdbath": 633, "spheric": 633, "sgpxsaprcfrvpti4": 633, "20200205": 633, "100827": 633, "cross_correlation_ratio_hv": [633, 695], "exclude_abov": [633, 646, 652, 683, 691], "calc_zdr_offset": 633, "2f": 633, "profile_zdr": 633, "set_ylabel": [633, 664, 671, 677, 679], "set_xlabel": [633, 671, 679], "profile_reflect": 633, "profile_cross_correlation_ratio_hv": 633, "plot_zdr_check": [633, 634, 696], "701": 634, "mem": [634, 641, 647, 669, 680, 681, 686, 696], "cfradial2": [635, 636, 641, 696], "fm301": [635, 636, 641, 696], "examples_python": 635, "examples_jupyt": 635, "grover": [637, 640, 643, 650, 651, 652, 658, 666, 672, 673, 683, 684, 685], "filepath": [637, 638, 639], "organ": [637, 638], "radarsit": [637, 638, 639], "_v06": 637, "khgx": 637, "aws_nexrad_level2_fil": [637, 639], "khgx20220322_120125_v06": 637, "relect": 637, "z_": [637, 643, 654, 677], "v_": 637, "noq": 637, "level3": 637, "aws_nexrad_level3_velocity_fil": 637, "hgx_n0u_2022_03_22_12_01_25": 637, "aws_nexrad_level3_reflectivity_fil": 637, "hgx_n0q_2022_03_22_12_01_25": 637, "read_nexrad_level3": 637, "radar_level3_veloc": 637, "radar_level3_reflect": 637, "reflectivity_displai": 637, "velocity_displai": 637, "322": [637, 641, 696], "plot_nexrad_data_aw": [637, 641, 696], "gcsf": 638, "gcp": 638, "nws_nexrad_nxl2dpbl_": 638, "0000_": 638, "tar": 638, "miami": 638, "kamx": 638, "0401": 638, "gcs_path": 638, "nws_nexrad_nxl2dpbl_kamx_20161007040000_20161007045959": 638, "gcsfilesystem": 638, "member": 638, "getmemb": 638, "136": [638, 641, 696], "plot_nexrad_data_google_cloud": [638, 641, 696], "zachari": 639, "zsherman": [639, 701], "tendenc": 639, "gz": 639, "handford": 639, "ca": 639, "khnx": 639, "0203": 639, "v06": 639, "khnx20060724_020338": 639, "clearli": 639, "lucki": 639, "31417": 639, "63111": 639, "plote": [639, 660], "central_latitud": [639, 660, 674, 675, 690], "central_longitud": [639, 660, 674, 675, 690], "676": [639, 641, 696], "plot_older_nexrad_data_aw": [639, 641, 696], "cfrad2": 640, "20080604_002217_000_spol_v36_sur": 640, "open_datatre": 640, "499": [640, 641, 696], "plot_read_cfradial2": [640, 641, 696], "xsapr": [643, 646, 652], "xsapr_sw_fil": [643, 646, 652], "swx_20120520_0641": [643, 646, 650, 652, 654, 658, 668, 672, 673, 674, 675, 683, 684, 685, 700], "xsapr_se_fil": [643, 646, 652], "sex_20120520_0641": [643, 646, 652], "radar_sw": [643, 646, 652], "radar_s": [643, 646, 652], "southwestern": 643, "gmapper": 643, "radar_sw_mapped_to_radar_s": 643, "disp1": 643, "98": [643, 672, 679, 694], "97": [643, 646, 652, 655, 667, 672, 674, 675, 689], "disp2": 643, "remap": 643, "eyebal": 643, "fortun": 643, "reflectivity_se_radar": 643, "reflectivity_sw_radar": 643, "reflectivity_differ": 643, "reflectivity_bia": 643, "southwest": 643, "xspar": 643, "southeast": 643, "neccessarili": 643, "incl_gat": 643, "refl_s": 643, "refl_sw": 643, "values_without_mask": 643, "hist": [643, 683, 691], "histogram2d": 643, "masked_wher": [643, 671, 675, 694], "log_": 643, "462": [643, 647, 696], "plot_compare_two_radars_gatemapp": [643, 647, 696], "solut": 644, "arguabl": 644, "overlook": 644, "neglig": 644, "ze": 644, "2nd": 644, "4th": 644, "purpl": 644, "truncat": 644, "ok": 644, "israel": 644, "silber": 644, "file_nam": 644, "example_plot_ppi_single_sweep": 644, "processed_field": 644, "reflectivity_at_cor": 644, "radar_obj": 644, "nnow": 644, "ax_ind": 644, "sweep_obj": 644, "fig2": 644, "1601": 644, "40000": [644, 646, 652, 660, 693], "set_titl": [644, 649, 650, 671, 674, 675], "nuse": 644, "196": [644, 647, 696], "plot_grid_single_sweep_ppi": [644, 647, 696], "123000": 645, "xsarp": [646, 661, 662], "gatefilter_s": [646, 652], "gatefilter_sw": [646, 652], "201": [646, 674, 675, 693], "57861": [646, 652], "363611": [646, 652], "147": [646, 647, 696], "plot_map_two_radars_to_grid": [646, 647, 696], "074": 647, "demonstr": [649, 671, 687], "000": [649, 660, 681], "syed44": [649, 653], "purdu": [649, 653], "raw_na_000_125_20080411190016": 649, "create_cappi": 649, "cappi_displai": 649, "228": [649, 669, 696], "plot_cappi": [649, 669, 696], "helper": 650, "vstack": 650, "plot_color_gradi": 650, "cmap_categori": 650, "cmap_list": 650, "figh": 650, "99": 650, "cmap_nam": 650, "va": 650, "transax": 650, "spine": 650, "set_axis_off": 650, "perceptu": [650, 655], "diverg": 650, "meaning": 650, "terrain": 650, "spectral_r": 650, "928": [650, 669, 696], "plot_choose_a_colormap": [650, 669, 696], "sgpkasacrcrrasterc1": 651, "20130419": 651, "012153": 651, "478": 651, "plot_cr_rast": 651, "071": [651, 669, 696], "plot_corner_reflector": [651, 669, 696], "181": 652, "blue": [652, 663], "plot_cross_sect": [652, 669, 696], "857": [652, 669, 696], "grid_fil": 653, "20110520100000_nexrad_grid": [653, 667], "read_grid": [653, 667, 671, 675], "gdisplai": 653, "plot_maxcappi": 653, "download_nexrad": [653, 678], "local_d": [653, 678], "utc_dat": [653, 678], "phwa": 653, "nexrad_arch": 653, "3d": 653, "max_rang": 653, "ceil": 653, "font_manag": 653, "findfont": 653, "font": 653, "famili": 653, "courier": 653, "plot_max_cappi": [653, 669, 696], "colobar": 654, "joe": 654, "brien": 654, "obrienj": 654, "perfect": 654, "coord": [654, 678], "gca": 654, "set_major_loc": 654, "nullloc": 654, "axsb": 654, "ppi_map": 654, "set_tick": [654, 677], "plot_modify_colorbar": [654, 669, 696], "promin": [655, 675], "deemphas": 655, "depict": [655, 671], "ultim": 655, "misinterpret": 655, "nexrad_fil": [655, 674, 675], "kbgm": 655, "kbgm20200207_132642_v06": 655, "image_mute_radar": [655, 674, 675], "magma_cmap": 655, "magma_r": [655, 671, 674, 675], "grays_cmap": [655, 675], "gray_r": [655, 675], "nonmuted_cmap": 655, "linearsegmentedcolormap": [655, 674, 675], "from_list": [655, 674, 675], "muted_cmap": [655, 675], "nonmuted_reflect": [655, 674], "muted_reflect": [655, 675], "set_aspect": [655, 671, 674, 675, 676], "plot_nexrad_image_muted_reflect": [655, 669, 696], "katx20130717_195021_v06": [656, 695], "plot_nexrad_multiple_mo": [656, 669, 696], "level2_katx_20130717_1950": 657, "ar2v": 657, "666": [657, 669, 696], "plot_nexrad_reflect": [657, 669, 696], "plot_cross_hair": 658, "350": [658, 669, 672, 696], "plot_ppi_cfradi": [658, 669, 696], "jason": [660, 667], "hemeding": [660, 667], "nsaxsaprppic1": 660, "20140201": 660, "184802": 660, "157": 660, "156": 660, "71": 660, "158": 660, "72": 660, "40km": 660, "plot_line_xi": 660, "20000": [660, 693], "200000": [660, 674, 675], "plot_point": 660, "plot_ppi_with_r": [660, 669, 696], "instrument_nam": [661, 662, 695], "agl": 661, "fac": 661, "nplot": [661, 662, 666], "snum": 661, "hsrhi": [661, 662], "3f": [661, 662], "time_start": 661, "num2dat": 661, "only_use_cftime_datetim": 661, "only_use_python_datetim": 661, "figure_titl": 661, "isoformat": 661, "plot_rhi_cfradi": [661, 669, 696], "369": [662, 669, 696], "differnenti": 663, "cori": [663, 664], "weber": [663, 664], "cweber": [663, 664], "220629": 663, "matplolib": 663, "visabl": 663, "flow": 663, "paramt": 663, "compens": 663, "00015": 663, "veri": [663, 671, 674, 675], "moir": 663, "001": 663, "get_start": [663, 664], "get_end": [663, 664], "blur": 663, "nice": [663, 697], "arbirarli": 663, "gaussian_filt": [663, 664], "ang": [663, 664], "levels_rain": 663, "levels_ic": 663, "contours_ic": 663, "contours_rain": 663, "fmt": [663, 664], "0000": [663, 664], "plot_rhi_contours_differential_reflect": [663, 669, 696], "spyi": 664, "034142": 664, "coutour": 664, "major": 664, "axhlin": [664, 671], "axvlin": 664, "00b4ff": 664, "ff6800": 664, "cp": 664, "plot_rhi_data_overlai": [664, 669, 696], "110041": 665, "247": [665, 669, 696], "plot_rhi_mdv": [665, 669, 696], "fields_to_plot": 666, "plot_num": 666, "u00b0": 666, "858": [666, 669, 696], "plot_rhi_two_panel": [666, 669, 696], "plot_crosshair": 667, "plot_longitude_slic": 667, "plot_latitude_slic": [667, 693], "364": [667, 669, 696], "plot_three_panel_gridmapdisplai": [667, 669, 696], "225": 668, "xsect": 668, "plot_xsect": [668, 669, 696], "968": 669, "essenti": 671, "distinguish": 671, "insuffici": 671, "tenth": 671, "aggress": 671, "noisi": 671, "ref_data": 671, "ref_data_mask": 671, "masked_outsid": 671, "create_cfad": 671, "freq_norm_mask": 671, "masked_less_equ": [671, 675], "cfad_pm": 671, "plasma": 671, "8km": 671, "freq_norm2": 671, "freq_norm0": 671, "freq_norm2_mask": 671, "freq_norm0_mask": 671, "chart": 671, "14km": 671, "12km": 671, "swath": 671, "velocity_dealia": 671, "rdbu_r": 671, "bimod": 671, "reproduc": 671, "2c": 671, "ddop": 671, "910815": 671, "213931": 671, "altitude_data": 671, "field_data": 671, "maxdz": [671, 675], "vvel_data": 671, "w_wind": 671, "vvel_mask": 671, "masked_invalid": [671, 674], "field_data_mask": 671, "cont": 671, "plot_cfad": [671, 680, 696], "maxwel": [672, 673], "site_lon": 672, "73": 672, "site_lat": 672, "latitdu": 672, "pathcollect": 672, "0x7f07bc585310": 672, "get_field_loc": 672, "2kb": 672, "176b": 672, "818e": 672, "recalculated_diff_phas": [672, 689], "2778": 672, "unf_dp_phase_shift": [672, 689], "88b": 672, "145": [672, 675], "144": [672, 675], "diff_reflect": [672, 689], "8b": 672, "20t06": 672, "distance_from_radar": 672, "233": 672, "545": 672, "latitude_of_loc": 672, "longitude_of_loc": 672, "line2d": 672, "0x7f07aa79e710": 672, "plot_column_subset": [672, 680, 696], "compz": 673, "composite_reflect": 673, "composite_displai": 673, "019": [673, 680, 696], "plot_composite_reflect": [673, 680, 696], "classifc": 674, "summer": [674, 675], "ian": [674, 675], "lmtomkin": 674, "ncsu": 674, "footprint": 674, "yield": 674, "smoother": 674, "curv": 674, "plot_convstrat_schem": 674, "pick": 674, "radii": 674, "dilat": 674, "conv_strat_yut": 674, "convsf_mask": 674, "masked_equ": [674, 675], "feature_detect": [674, 675], "convsf": [674, 675], "magma_r_cmap": [674, 675], "ref_cmap": [674, 675], "albersequalarea": [674, 675], "convsf_und": 674, "convsf_ov": 674, "uncertainti": [674, 675], "underest": [674, 675], "feature_und": [674, 675], "overest": [674, 675], "feature_ov": [674, 675], "ktbw": [674, 675], "ktbw20220928_190142_v06": [674, 675], "rasumussen": [674, 675], "2003": [674, 675], "reflecit": 674, "kokx": [674, 675], "kokx20210207_161413_v06": [674, 675], "nonmuted_ref": 674, "nonmuted_ref_linear": 674, "mm6": 674, "m3": 674, "snow_rat": [674, 675], "snow_rate_dict": 674, "40500": 674, "034": [674, 675, 678], "ccotd": [674, 675, 678], "rasmussen": [674, 675], "dixon": [674, 675, 687], "vasiloff": [674, 675], "hage": [674, 675], "knight": [674, 675], "vivekanandan": [674, 675], "xu": [674, 675], "nowcast": [674, 675], "accumul": [674, 675], "042": [674, 675], "3c0020": [674, 675], "snuart": [674, 675], "027": [674, 680, 696], "plot_convective_stratiform": [674, 680, 696], "heavili": 675, "customiz": 675, "feature_mask": 675, "19990811": 675, "221202": 675, "convsf_cmap": 675, "140": 675, "253": 675, "231": 675, "csb": 675, "csb_mask": 675, "csl": 675, "convsf_lo": 675, "csl_mask": 675, "csh": 675, "convsf_hi": 675, "csh_mask": 675, "rpm": 675, "csbpm": 675, "set_yticklabel": [675, 677], "lo": 675, "cslpm": 675, "cshpm": 675, "csb_lt": 675, "csb_lt_mask": 675, "csu_lt": 675, "csu_lt_mask": 675, "cso_lt": 675, "cso_lt_mask": 675, "csupm": 675, "csopm": 675, "ztor": 675, "ref_field_ov": 675, "ref_field_und": 675, "2db": 675, "_overest": 675, "_underest": 675, "reflectivity_ov": 675, "reflectivity_und": 675, "snow_rate_ov": 675, "snow_rate_und": 675, "feature_estimate_dict": 675, "bpm": 675, "upm": 675, "opm": 675, "distinct": 675, "scalar_features_mask": 675, "cosine_features_mask": 675, "isol": 675, "faint_featur": 675, "faint_features_mask": 675, "features_faint_strong": 675, "features_faint_strong_mask": 675, "new_dict": 675, "comment_1": 675, "faint_strong_cmap": 675, "faint_strong": 675, "238": 675, "93": 675, "66": 675, "quickli": 675, "quick_image_mut": 675, "muted_ref": 675, "nonmuted_field": 675, "muted_field": 675, "snow_rate_nonmut": 675, "snow_rate_mut": 675, "features_nonmut": 675, "features_mut": 675, "srpm": 675, "srpmm": 675, "csbpmm": 675, "215": [675, 680, 696], "plot_feature_detect": [675, 680, 696], "daniel": [676, 679], "wolfensberg": [676, 679], "mll2217907250u": 676, "003": 676, "preinterpol": 676, "20220628072500_savevol_cosmo_lookup_temp": 676, "nwp_temp": 676, "calculate_attenuation_zphi": 676, "uncorrected_differential_phas": 676, "pia": 676, "pida": 676, "corrected_reflect": [676, 677, 694], "corrected_differential_reflect": [676, 677, 694], "kdp_maesaka": 676, "specific_differential_phas": [676, 694], "hydroclass_semisupervis": [676, 677], "uncorrected_cross_correlation_ratio": 676, "radar_echo_classif": 676, "boundarynorm": 676, "plot_hydrometeor": [676, 680, 696], "corrected_specific_diff_phas": [677, 694], "hydromet_class": 677, "filtered_corrected_specific_diff_phas": [677, 694], "sounding_temperatur": [677, 694], "hydro_classif": 677, "2e9": 677, "pipelin": 677, "hid_color": 677, "lightblu": 677, "mediumblu": 677, "darkorang": 677, "lightpink": 677, "darkgrai": 677, "lime": 677, "yellow": 677, "cmaphid": 677, "listedcolormap": 677, "cmapmeth": 677, "cmapmeth_trop": 677, "adjust_fhc_colorbar_for_pyart": 677, "hd": 677, "adjust_meth_colorbar_for_pyart": 677, "zrain": 677, "z_all": 677, "z_c": 677, "two_panel_plot": 677, "var1": 677, "vmin1": 677, "vmax1": 677, "cmap1": 677, "rdylbu_r": 677, "units1": 677, "var2": 677, "vmin2": 677, "vmax2": 677, "cmap2": 677, "units2": 677, "return_flag": 677, "lim": 677, "588": [677, 680, 696], "plot_hydrometeor_class_x_band": [677, 680, 696], "column_profil": 678, "rain_rate_categor": 678, "increment": 678, "rixvi": 678, "v_re": 678, "min_alt": 678, "max_alt": 678, "spread": 678, "col_prof": 678, "column_vertical_profil": 678, "new_height": 678, "interp_lik": 678, "conv_threshold": 678, "a_conv": 678, "b_conv": 678, "a_strat": 678, "b_strat": 678, "is_conv": 678, "rr": 678, "zeros_lik": 678, "kgwx": 678, "rain_rate_list": 678, "col_prof_interp": 678, "8000": [678, 693], "rain_rat": 678, "da_rain_r": 678, "concat": 678, "contourf": 678, "asl": 678, "sel": 678, "435": [678, 680, 696], "plot_qp": [678, 680, 696], "2682": 679, "5470354519784": 679, "447328651323915": 679, "5273": 679, "055615736172": 679, "7533807586878538": 679, "7815": 679, "51210340485": 679, "341798234730959": 679, "10403": 679, "798749463633": 679, "977668723091483": 679, "14259": 679, "735154148191": 679, "905980195850134": 679, "18533": 679, "70608163625": 679, "262251073494554": 679, "22800": [679, 689], "97541932203": 679, "613871516659856": 679, "27060": [679, 689], "25919727981": 679, "959520922973752": 679, "31310": 679, "269606200978": 679, "29787217825651": 679, "35549": 679, "73140401952": 679, "62760841473937": 679, "39777": 679, "36820153147": 679, "94740904122591": 679, "43991": 679, "90973467566": 679, "25595719181001": 679, "50263": 679, "42219179496": 679, "671291364356875": 679, "58621": 679, "52730140835": 679, "22838316485286": 679, "71003": 679, "14627731778": 679, "68": 679, "92013945430517": 679, "87118": 679, "5253265705": 679, "4666496720165": 679, "106741": 679, "22752280161": 679, "65626102685928": 679, "125477": 679, "00644101389": 679, "124": 679, "97631322406232": 679, "143293": 679, "15816160105": 679, "38701202347875": 679, "160000": 679, "28993562795": 679, "68618156574667": 679, "mla2119412050u": 679, "zlevel": 679, "5000": [679, 693], "u_allsweep": 679, "v_allsweep": 679, "idx": 679, "radar_1sweep": 679, "vad_brown": 679, "u_avg": 679, "nanmean": 679, "v_avg": 679, "sharei": 679, "805": [679, 680, 696], "plot_vad": [679, 680, 696], "341": 680, "sweep_0": 683, "vel_textur": [683, 691], "velocity_textur": [683, 691, 694], "At": [683, 691], "velocity_dealias": [683, 691], "591": [683, 686, 696], "plot_dealias_xradar": [683, 686, 696], "101": [684, 700], "10_000": [684, 700], "50_000": [684, 700], "279": [684, 686, 696], "plot_grid_xradar": [684, 686, 696], "plot_xradar": [685, 686, 696], "conceptu": 687, "projectpythia": 687, "understand": 687, "maik": 687, "heistermann": 687, "bam": 687, "kellei": 687, "peura": 687, "pfaff": 687, "wolff": 687, "emerg": 687, "bull": 687, "amer": 687, "soc": 687, "117": 687, "128": 687, "00240": 687, "sophist": 687, "tutori": 687, "materi": 687, "erad": 687, "asr": 687, "asm": 687, "Or": 687, "pyart_env": [687, 690, 693, 701], "wish": 687, "unreleas": 687, "pooch": [687, 697], "mda": [687, 697], "charg": 687, "resourc": [687, 697], "lassen": 687, "radtec": 687, "rsl_path": [687, 697], "usr": 687, "wrapper": 687, "fastest": 687, "cbc": 687, "glpk": 687, "coincbc": [687, 697, 701], "coin_install_dir": [687, 697, 701], "forum": 687, "ask": [687, 701], "hypothet": 689, "dict_kei": [689, 694], "rain_rate_a": [689, 694], "volume_numb": 689, "platform_typ": 689, "instrument_typ": 689, "primary_axi": 689, "make_empty_ppi_radar": 689, "59416667": 689, "240": 689, "660": 689, "720": 689, "780": 689, "960": 689, "1260": 689, "1560": 689, "1620": 689, "1680": 689, "1740": 689, "1860": 689, "1920": 689, "1980": 689, "2040": 689, "2100": 689, "2160": 689, "2220": 689, "2280": 689, "2340": 689, "2400": 689, "2460": 689, "2520": 689, "2580": 689, "2640": 689, "2700": 689, "2760": 689, "2820": 689, "2880": 689, "2940": 689, "3060": 689, "3120": 689, "3180": 689, "3240": 689, "3300": 689, "3360": 689, "3420": 689, "3480": 689, "3540": 689, "3600": 689, "3660": 689, "3720": 689, "3780": 689, "3840": 689, "3900": 689, "3960": 689, "4020": 689, "4080": 689, "4140": 689, "4200": 689, "4260": 689, "4320": 689, "4380": 689, "4440": 689, "4500": 689, "4560": 689, "4620": 689, "4680": 689, "4740": 689, "4800": 689, "4860": 689, "4920": 689, "4980": 689, "5040": 689, "5100": 689, "5160": 689, "5220": 689, "5280": 689, "5340": 689, "5400": 689, "5460": 689, "5520": 689, "5580": 689, "5640": 689, "5700": 689, "5760": 689, "5820": 689, "5880": 689, "5940": 689, "6000": [689, 693], "6060": 689, "6120": 689, "6180": 689, "6240": 689, "6300": 689, "6360": 689, "6420": 689, "6480": 689, "6540": 689, "6600": 689, "6660": 689, "6720": 689, "6780": 689, "6840": 689, "6900": 689, "6960": 689, "7020": 689, "7080": 689, "7140": 689, "7200": [689, 695], "7260": 689, "7320": 689, "7380": 689, "7440": 689, "7560": 689, "7620": 689, "7680": 689, "7740": 689, "7800": 689, "7860": 689, "7920": 689, "7980": 689, "8040": 689, "8100": 689, "8160": 689, "8220": 689, "8280": 689, "8340": 689, "8400": 689, "8460": 689, "8520": 689, "8580": 689, "8640": 689, "8700": 689, "8760": 689, "8820": 689, "8880": 689, "8940": 689, "9000": [689, 693], "9060": 689, "9120": 689, "9180": 689, "9240": 689, "9300": 689, "9360": 689, "9420": 689, "9480": 689, "9540": 689, "9600": 689, "9660": 689, "9720": 689, "9780": 689, "9840": 689, "9900": 689, "9960": 689, "10020": 689, "10080": 689, "10140": 689, "10200": 689, "10260": 689, "10320": 689, "10380": 689, "10440": 689, "10500": 689, "10560": 689, "10620": 689, "10680": 689, "10740": 689, "10800": 689, "10860": 689, "10920": 689, "10980": 689, "11040": 689, "11100": 689, "11160": 689, "11220": 689, "11280": 689, "11340": 689, "11400": 689, "11460": 689, "11520": 689, "11580": 689, "11640": 689, "11700": 689, "11760": 689, "11820": 689, "11880": 689, "11940": 689, "12060": 689, "12120": 689, "12180": 689, "12240": 689, "12300": 689, "12360": 689, "12420": 689, "12480": 689, "12540": 689, "12600": 689, "12660": 689, "12720": 689, "12780": 689, "12840": 689, "12900": 689, "12960": 689, "13020": 689, "13080": 689, "13140": 689, "13200": 689, "13260": 689, "13320": 689, "13380": 689, "13440": 689, "13500": 689, "13560": 689, "13620": 689, "13680": 689, "13740": 689, "13800": 689, "13860": 689, "13920": 689, "13980": 689, "14040": 689, "14100": 689, "14160": 689, "14220": 689, "14280": 689, "14340": 689, "14400": 689, "14460": 689, "14520": 689, "14580": 689, "14640": 689, "14700": 689, "14760": 689, "14820": 689, "14880": 689, "14940": 689, "15060": 689, "15120": 689, "15180": 689, "15240": 689, "15300": 689, "15360": 689, "15420": 689, "15480": 689, "15540": 689, "15600": 689, "15660": 689, "15720": 689, "15780": 689, "15840": 689, "15900": 689, "15960": 689, "16020": 689, "16080": 689, "16140": 689, "16200": 689, "16260": 689, "16320": 689, "16380": 689, "16440": 689, "16500": 689, "16560": 689, "16620": 689, "16680": 689, "16740": 689, "16800": 689, "16860": 689, "16920": 689, "16980": 689, "17040": 689, "17100": 689, "17160": 689, "17220": 689, "17280": 689, "17340": 689, "17400": 689, "17460": 689, "17520": 689, "17580": 689, "17640": 689, "17700": 689, "17760": 689, "17820": 689, "17880": 689, "17940": 689, "18000": [689, 693], "18060": 689, "18120": 689, "18180": 689, "18240": 689, "18300": 689, "18360": 689, "18420": 689, "18480": 689, "18540": 689, "18600": 689, "18660": 689, "18720": 689, "18780": 689, "18840": 689, "18900": 689, "18960": 689, "19020": 689, "19080": 689, "19140": 689, "19200": 689, "19260": 689, "19320": 689, "19380": 689, "19440": 689, "19500": 689, "19560": 689, "19620": 689, "19680": 689, "19740": 689, "19800": 689, "19860": 689, "19920": 689, "19980": 689, "20040": 689, "20100": 689, "20160": 689, "20220": 689, "20280": 689, "20340": 689, "20400": 689, "20460": 689, "20520": 689, "20580": 689, "20640": 689, "20700": 689, "20760": 689, "20820": 689, "20880": 689, "20940": 689, "21000": [689, 693], "21060": 689, "21120": 689, "21180": 689, "21240": 689, "21300": 689, "21360": 689, "21420": 689, "21480": 689, "21540": 689, "21600": 689, "21660": 689, "21720": 689, "21780": 689, "21840": 689, "21900": 689, "21960": 689, "22020": 689, "22080": 689, "22140": 689, "22200": 689, "22260": 689, "22320": 689, "22380": 689, "22440": 689, "22500": 689, "22560": 689, "22620": 689, "22680": 689, "22740": 689, "22860": 689, "22920": 689, "22980": 689, "23040": 689, "23100": 689, "23160": 689, "23220": 689, "23280": 689, "23340": 689, "23400": 689, "23460": 689, "23520": 689, "23580": 689, "23640": 689, "23700": 689, "23760": 689, "23820": 689, "23880": 689, "23940": 689, "24000": [689, 693], "24060": 689, "24120": 689, "24180": 689, "24240": 689, "24300": 689, "24360": 689, "24420": 689, "24480": 689, "24540": 689, "24600": 689, "24660": 689, "24720": 689, "24780": 689, "24840": 689, "24900": 689, "24960": 689, "25020": 689, "25080": 689, "25140": 689, "25200": 689, "25260": 689, "25320": 689, "25380": 689, "25440": 689, "25500": 689, "25560": 689, "25620": 689, "25680": 689, "25740": 689, "25800": 689, "25860": 689, "25920": 689, "25980": 689, "26040": 689, "26100": 689, "26160": 689, "26220": 689, "26280": 689, "26340": 689, "26400": 689, "26460": 689, "26520": 689, "26580": 689, "26640": 689, "26700": 689, "26760": 689, "26820": 689, "26880": 689, "26940": 689, "27000": [689, 693], "27120": 689, "27180": 689, "27240": 689, "27300": 689, "27360": 689, "27420": 689, "27480": 689, "27540": 689, "27600": 689, "27660": 689, "27720": 689, "27780": 689, "27840": 689, "27900": 689, "27960": 689, "28020": 689, "28080": 689, "28140": 689, "28200": 689, "28260": 689, "28320": 689, "28380": 689, "28440": 689, "28500": 689, "28560": 689, "28620": 689, "28680": 689, "28740": 689, "28800": 689, "28860": 689, "28920": 689, "28980": 689, "29040": 689, "29100": 689, "29160": 689, "29220": 689, "29280": 689, "29340": 689, "29400": 689, "29460": 689, "29520": 689, "29580": 689, "29640": 689, "29700": 689, "29760": 689, "29820": 689, "29880": 689, "29940": 689, "30000": [689, 693], "30060": 689, "30120": 689, "30180": 689, "30240": 689, "30300": 689, "30360": 689, "30420": 689, "30480": 689, "30540": 689, "30600": 689, "30660": 689, "30720": 689, "30780": 689, "30840": 689, "30900": 689, "30960": 689, "31020": 689, "31080": 689, "31140": 689, "31200": 689, "31260": 689, "31320": 689, "31380": 689, "31440": 689, "31500": 689, "31560": 689, "31620": 689, "31680": 689, "31740": 689, "31800": 689, "31860": 689, "31920": 689, "31980": 689, "32040": 689, "32100": 689, "32160": 689, "32220": 689, "32280": 689, "32340": 689, "32400": 689, "32460": 689, "32520": 689, "32580": 689, "32640": 689, "32700": 689, "32760": 689, "32820": 689, "32880": 689, "32940": 689, "33000": [689, 693], "33060": 689, "33120": 689, "33180": 689, "33240": 689, "33300": 689, "33360": 689, "33420": 689, "33480": 689, "33540": 689, "33600": 689, "33660": 689, "33720": 689, "33780": 689, "33840": 689, "33900": 689, "33960": 689, "34020": 689, "34080": 689, "34140": 689, "34200": 689, "34260": 689, "34320": 689, "34380": 689, "34440": 689, "34500": 689, "34560": 689, "34620": 689, "34680": 689, "34740": 689, "34800": 689, "34860": 689, "34920": 689, "34980": 689, "35040": 689, "35100": 689, "35160": 689, "35220": 689, "35280": 689, "35340": 689, "35400": 689, "35460": 689, "35520": 689, "35580": 689, "35640": 689, "35700": 689, "35760": 689, "35820": 689, "35880": 689, "35940": 689, "36000": [689, 693], "36060": 689, "36120": 689, "36180": 689, "36240": 689, "36300": 689, "36360": 689, "36420": 689, "36480": 689, "36540": 689, "36600": 689, "36660": 689, "36720": 689, "36780": 689, "36840": 689, "36900": 689, "36960": 689, "37020": 689, "37080": 689, "37140": 689, "37200": 689, "37260": 689, "37320": 689, "37380": 689, "37440": 689, "37500": 689, "37560": 689, "37620": 689, "37680": 689, "37740": 689, "37800": 689, "37860": 689, "37920": 689, "37980": 689, "38040": 689, "38100": 689, "38160": 689, "38220": 689, "38280": 689, "38340": 689, "38400": 689, "38460": 689, "38520": 689, "38580": 689, "38640": 689, "38700": 689, "38760": 689, "38820": 689, "38880": 689, "38940": 689, "39000": [689, 693], "39060": 689, "39120": 689, "39180": 689, "39240": 689, "39300": 689, "39360": 689, "39420": 689, "39480": 689, "39540": 689, "39600": 689, "39660": 689, "39720": 689, "39780": 689, "39840": 689, "39900": 689, "39960": 689, "59416776": 689, "59416886": 689, "59489769": 689, "59489879": 689, "5948999": 689, "59415662": 689, "59414657": 689, "5874659": 689, "58745576": 689, "58744563": 689, "59414621": 689, "59412575": 689, "5805231": 689, "58050246": 689, "58048182": 689, "59419881": 689, "59423095": 689, "61560159": 689, "61563401": 689, "61566644": 689, "59418877": 689, "59421087": 689, "6089062": 689, "6089285": 689, "60895079": 689, "59417836": 689, "59419005": 689, "60196382": 689, "60197561": 689, "60198741": 689, "get_metadata": 689, "ref_dict": 689, "reflecitivity_horizont": 689, "21875": 689, "34375": 689, "0078125": 689, "2109375": 689, "1171875": 689, "59375": 689, "421875": 689, "5625": 689, "7109375": 689, "609375": 689, "5078125": 689, "3828125": 689, "6875": 689, "328125": 689, "3203125": 689, "859375": 689, "6484375": 689, "8515625": 689, "9375": [689, 695], "0234375": 689, "6328125": 689, "2890625": 689, "546875": 689, "578125": 689, "6796875": 689, "ref_gt_0": 690, "mask_dict": 690, "reflectivity_mask": 690, "coolwarm": 690, "sherm": [690, 693], "782": [690, 693], "matplotlibdeprecationwarn": [690, 693], "position": [690, 693], "829": [690, 693], "write_cfradi": 690, "new_radar": 690, "2pi": 691, "wave": 691, "3pi": 691, "erron": 691, "phenomena": [691, 695], "maximium": 691, "unambi": 691, "preprocess": 691, "thankfulli": [691, 693], "surround": [691, 693], "presenc": 691, "524973": 691, "vleociti": 691, "realist": 691, "characterist": 693, "100000": 693, "gates_to_grid": 693, "99000": 693, "98000": 693, "97000": 693, "96000": 693, "95000": 693, "94000": 693, "93000": 693, "92000": 693, "91000": 693, "90000": 693, "89000": 693, "88000": 693, "87000": 693, "86000": 693, "85000": 693, "84000": 693, "83000": 693, "82000": 693, "81000": 693, "80000": 693, "79000": 693, "78000": 693, "77000": 693, "76000": 693, "75000": 693, "74000": 693, "73000": 693, "72000": 693, "71000": 693, "70000": 693, "69000": 693, "68000": 693, "67000": 693, "66000": 693, "65000": 693, "64000": 693, "63000": 693, "62000": 693, "61000": 693, "59000": 693, "58000": 693, "57000": 693, "56000": 693, "55000": 693, "54000": 693, "53000": 693, "52000": 693, "51000": 693, "49000": 693, "48000": 693, "47000": 693, "46000": 693, "45000": 693, "44000": 693, "43000": 693, "42000": 693, "41000": 693, "38000": 693, "37000": 693, "35000": 693, "34000": 693, "32000": 693, "31000": 693, "29000": 693, "28000": 693, "26000": 693, "23000": 693, "22000": 693, "19000": 693, "16000": 693, "14000": 693, "13000": 693, "longitudn": 693, "latitudn": 693, "suffer": 693, "artifici": 693, "feather": 693, "grid_bett": 693, "1750": 693, "sgpxsaprcmacsuri5": 694, "20171004": 694, "203018": 694, "total_pow": 694, "xsapr_clutt": 694, "signal_to_noise_ratio": 694, "unfolded_differential_phas": 694, "corrected_differential_phas": 694, "filtered_corrected_differential_phas": 694, "path_integrated_attenu": 694, "specific_differential_attenu": 694, "path_integrated_differential_attenu": 694, "nonhydrometeor": 694, "exclude_equ": 694, "refl_arrai": 694, "reflectivity_w_mask": 694, "iter_slic": [694, 695], "9344453454202706": 694, "620691732853737": 694, "3756584054113996": 694, "597935968662154": 694, "696735014111216": 694, "061894569912447": 694, "721673265240488": 694, "086695918593689": 694, "33930700509078": 694, "599363169483158": 694, "836875745223637": 694, "051601529570966": 694, "22435547210836": 694, "378109469982695": 694, "553820234067336": 694, "648943841665002": 694, "837593740986444": 694, "049614721040282": 694, "331202567459613": 694, "585432697375357": 694, "87002341270722": 694, "993012637722325": 694, "061966001642219": 694, "122799449619672": 694, "861035552720102": 694, "74608994279257": 694, "148801770281325": 694, "70860719727862": 694, "989513966551444": 694, "188644935344827": 694, "89301878240611": 694, "172644371021923": 694, "79879842243138": 694, "912806090219976": 694, "766281467013889": 694, "920522471877334": 694, "898600907318164": 694, "971026055481874": 694, "110503947133682": 694, "094456418731509": 694, "0822160050675675": 694, "036430544969512": 694, "259332430219459": 694, "2438254054588604": 694, "473482666015625": 694, "574283685503023": 694, "866719139946832": 694, "771468742643597": 694, "beam_azimuth_angl": 695, "azimuth_angle_from_true_north": 695, "radial_azimuth_coordin": 695, "beam_elevation_angl": 695, "elevation_angle_from_horizontal_plan": 695, "radial_elevation_coordin": 695, "1832": 695, "log_differential_reflectivity_hv": 695, "875": 695, "differential_phase_hv": 695, "equivalent_reflectivity_factor": 695, "correlation_ratio": 695, "meters_per_second": 695, "doppler_spectrum_width": 695, "radial_velocity_of_scatterers_away_from_instru": 695, "target_fixed_angl": 695, "degrees_north": 695, "degrees_east": 695, "projection_range_coordin": 695, "range_to_measurement_volum": 695, "radial_range_coordin": 695, "spacing_is_const": 695, "meters_to_center_of_first_g": 695, "2125": 695, "meters_between_g": 695, "s20": 695, "unitless": 695, "coplan": 695, "vertical_point": 695, "idl": 695, "azimuth_surveil": 695, "elevation_surveil": 695, "sunscan": 695, "manual_ppi": 695, "manual_rhi": 695, "17t19": 695, "21z": 695, "time_in_seconds_since_volume_start": 695, "calendar": 695, "gregorian": 695, "katx": 695, "original_contain": 695, "vcp_pattern": 695, "7470703": 695, "7196045": 695, "6893921": 695, "511719": 695, "get_slic": 695, "sweep_1": 695, "52734375": 695, "indici": 695, "slice_indic": 695, "9066728410400056": 695, "478547577741713": 695, "587792083929423": 695, "871031288639269": 695, "971692217963673": 695, "830616390843327": 695, "108188248095756": 695, "483419908190385": 695, "88976917057903": 695, "852766685681688": 695, "410455582269897": 695, "66444787446138": 695, "997862391449566": 695, "172098402018502": 695, "489752513534416": 695, "712565619531706": 695, "commonli": 695, "045": 696, "11x": 697, "12x": 697, "13x": 697, "But": 697, "bash": 697, "pythonpath": 697, "pth": 697, "build_ext": 697, "segfault": 697, "Theres": 697, "proper": 697, "reinstal": 697, "remedi": 697, "fno": 697, "protector": 697, "d_fortify_sourc": 697, "cflag": 697, "makefil": 697, "troubl": 697, "define_macro": 697, "macro": 697, "extra_compile_arg": 697, "m32": 697, "extra_link_arg": 697, "m64": 697, "proj_lib": 697, "plai": 697, "xx": 697, "xxx": 697, "mpl_toolkit": 697, "candid": 700, "cfradial1": 700, "conflict": 701, "exit": 701, "led": 701, "manag": 701, "deactiv": 701, "enviro": 701, "scratch": 701, "spyder": 701, "though": 701, "yourusernam": 701, "youranacondadir": 701, "gitter": 701, "im": 701}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [17, 1, 0, "-", "bridge"], [19, 1, 0, "-", "config"], [31, 1, 0, "-", "core"], [128, 1, 0, "-", "correct"], [177, 1, 0, "-", "exceptions"], [178, 1, 0, "-", "filters"], [213, 1, 0, "-", "graph"], [372, 1, 0, "-", "io"], [393, 1, 0, "-", "lazydict"], [417, 1, 0, "-", "map"], [430, 1, 0, "-", "retrieve"], [474, 1, 0, "-", "testing"], [577, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_mmcr"], [8, 0, 1, "", "read_noxp_iphex_nc"], [9, 0, 1, "", "read_odim_h5"], [10, 0, 1, "", "read_pattern"], [11, 0, 1, "", "read_radx"], [12, 0, 1, "", "read_radx_grid"], [13, 0, 1, "", "read_rainbow_wrl"], [14, 0, 1, "", "read_rxm25"], [15, 0, 1, "", "read_sinarame_h5"], [16, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[18, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[20, 2, 1, "", "FileMetadata"], [24, 0, 1, "", "get_field_colormap"], [25, 0, 1, "", "get_field_limits"], [26, 0, 1, "", "get_field_mapping"], [27, 0, 1, "", "get_field_name"], [28, 0, 1, "", "get_fillvalue"], [29, 0, 1, "", "get_metadata"], [30, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[21, 3, 1, "", "__call__"], [22, 3, 1, "", "get_field_name"], [23, 3, 1, "", "get_metadata"]], "pyart.core": [[32, 2, 1, "", "Grid"], [42, 2, 1, "", "HorizontalWindProfile"], [46, 2, 1, "", "Radar"], [75, 2, 1, "", "RadarSpectra"], [120, 0, 1, "", "antenna_to_cartesian"], [121, 0, 1, "", "antenna_vectors_to_cartesian"], [122, 0, 1, "", "cartesian_to_antenna"], [123, 0, 1, "", "cartesian_to_geographic"], [124, 0, 1, "", "cartesian_to_geographic_aeqd"], [125, 0, 1, "", "cartesian_vectors_to_geographic"], [126, 0, 1, "", "geographic_to_cartesian"], [127, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[33, 3, 1, "", "add_field"], [34, 3, 1, "", "get_point_longitude_latitude"], [35, 3, 1, "", "get_projparams"], [36, 3, 1, "", "init_point_altitude"], [37, 3, 1, "", "init_point_longitude_latitude"], [38, 3, 1, "", "init_point_x_y_z"], [39, 4, 1, "", "projection_proj"], [40, 3, 1, "", "to_xarray"], [41, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[43, 3, 1, "", "from_u_and_v"], [44, 4, 1, "", "u_wind"], [45, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[47, 3, 1, "", "add_field"], [48, 3, 1, "", "add_field_like"], [49, 3, 1, "", "add_filter"], [50, 3, 1, "", "check_field_exists"], [51, 3, 1, "", "extract_sweeps"], [52, 3, 1, "", "get_azimuth"], [53, 3, 1, "", "get_elevation"], [54, 3, 1, "", "get_end"], [55, 3, 1, "", "get_field"], [56, 3, 1, "", "get_gate_area"], [57, 3, 1, "", "get_gate_lat_lon_alt"], [58, 3, 1, "", "get_gate_x_y_z"], [59, 3, 1, "", "get_nyquist_vel"], [60, 3, 1, "", "get_slice"], [61, 3, 1, "", "get_start"], [62, 3, 1, "", "get_start_end"], [63, 3, 1, "", "info"], [64, 3, 1, "", "init_gate_altitude"], [65, 3, 1, "", "init_gate_longitude_latitude"], [66, 3, 1, "", "init_gate_x_y_z"], [67, 3, 1, "", "init_rays_per_sweep"], [68, 3, 1, "", "iter_azimuth"], [69, 3, 1, "", "iter_elevation"], [70, 3, 1, "", "iter_end"], [71, 3, 1, "", "iter_field"], [72, 3, 1, "", "iter_slice"], [73, 3, 1, "", "iter_start"], [74, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[76, 4, 1, "", "altitude"], [77, 4, 1, "", "azimuth"], [78, 3, 1, "", "check_field_exists"], [79, 4, 1, "", "elevation"], [80, 4, 1, "", "fields"], [81, 4, 1, "", "fixed_angle"], [82, 4, 1, "", "gate_altitude"], [83, 4, 1, "", "gate_latitude"], [84, 4, 1, "", "gate_longitude"], [85, 4, 1, "", "gate_x"], [86, 4, 1, "", "gate_y"], [87, 4, 1, "", "gate_z"], [88, 3, 1, "", "get_end"], [89, 3, 1, "", "get_slice"], [90, 3, 1, "", "get_start"], [91, 3, 1, "", "get_start_end"], [92, 3, 1, "", "init_gate_altitude"], [93, 3, 1, "", "init_gate_longitude_latitude"], [94, 3, 1, "", "init_gate_x_y_z"], [95, 3, 1, "", "init_rays_per_sweep"], [96, 3, 1, "", "iter_azimuth"], [97, 3, 1, "", "iter_elevation"], [98, 3, 1, "", "iter_end"], [99, 3, 1, "", "iter_field"], [100, 3, 1, "", "iter_slice"], [101, 3, 1, "", "iter_start"], [102, 3, 1, "", "iter_start_end"], [103, 4, 1, "", "latitude"], [104, 4, 1, "", "longitude"], [105, 4, 1, "", "ngates"], [106, 4, 1, "", "npulses_max"], [107, 4, 1, "", "nrays"], [108, 4, 1, "", "nsweeps"], [109, 4, 1, "", "projection"], [110, 4, 1, "", "range"], [111, 4, 1, "", "rays_per_sweep"], [112, 4, 1, "", "scan_type"], [113, 4, 1, "", "sweep_end_ray_index"], [114, 4, 1, "", "sweep_mode"], [115, 4, 1, "", "sweep_number"], [116, 4, 1, "", "sweep_start_ray_index"], [117, 4, 1, "", "time"], [118, 3, 1, "", "to_vpt"], [119, 4, 1, "", "velocity_bins"]], "pyart.correct": [[129, 2, 1, "", "GateFilter"], [159, 0, 1, "", "calc_cloud_mask"], [160, 0, 1, "", "calc_noise_floor"], [161, 0, 1, "", "calc_zdr_offset"], [162, 0, 1, "", "calculate_attenuation"], [163, 0, 1, "", "calculate_attenuation_philinear"], [164, 0, 1, "", "calculate_attenuation_zphi"], [165, 0, 1, "", "cloud_threshold"], [166, 0, 1, "", "correct_bias"], [167, 0, 1, "", "correct_noise_rhohv"], [168, 0, 1, "", "dealias_fourdd"], [169, 0, 1, "", "dealias_region_based"], [170, 0, 1, "", "dealias_unwrap_phase"], [171, 0, 1, "", "despeckle_field"], [172, 0, 1, "", "find_objects"], [173, 0, 1, "", "moment_based_gate_filter"], [174, 0, 1, "", "phase_proc_lp"], [175, 0, 1, "", "phase_proc_lp_gf"], [176, 0, 1, "", "range_correction"]], "pyart.correct.GateFilter": [[130, 3, 1, "", "copy"], [131, 3, 1, "", "exclude_above"], [132, 3, 1, "", "exclude_above_toa"], [133, 3, 1, "", "exclude_all"], [134, 3, 1, "", "exclude_below"], [135, 3, 1, "", "exclude_equal"], [136, 3, 1, "", "exclude_gates"], [137, 3, 1, "", "exclude_inside"], [138, 3, 1, "", "exclude_invalid"], [139, 3, 1, "", "exclude_last_gates"], [140, 3, 1, "", "exclude_masked"], [141, 3, 1, "", "exclude_none"], [142, 3, 1, "", "exclude_not_equal"], [143, 3, 1, "", "exclude_outside"], [144, 3, 1, "", "exclude_transition"], [145, 4, 1, "", "gate_excluded"], [146, 4, 1, "", "gate_included"], [147, 3, 1, "", "include_above"], [148, 3, 1, "", "include_all"], [149, 3, 1, "", "include_below"], [150, 3, 1, "", "include_equal"], [151, 3, 1, "", "include_gates"], [152, 3, 1, "", "include_inside"], [153, 3, 1, "", "include_none"], [154, 3, 1, "", "include_not_equal"], [155, 3, 1, "", "include_not_masked"], [156, 3, 1, "", "include_not_transition"], [157, 3, 1, "", "include_outside"], [158, 3, 1, "", "include_valid"]], "pyart.filters": [[179, 2, 1, "", "GateFilter"], [209, 0, 1, "", "iso0_based_gate_filter"], [210, 0, 1, "", "moment_and_texture_based_gate_filter"], [211, 0, 1, "", "moment_based_gate_filter"], [212, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[180, 3, 1, "", "copy"], [181, 3, 1, "", "exclude_above"], [182, 3, 1, "", "exclude_above_toa"], [183, 3, 1, "", "exclude_all"], [184, 3, 1, "", "exclude_below"], [185, 3, 1, "", "exclude_equal"], [186, 3, 1, "", "exclude_gates"], [187, 3, 1, "", "exclude_inside"], [188, 3, 1, "", "exclude_invalid"], [189, 3, 1, "", "exclude_last_gates"], [190, 3, 1, "", "exclude_masked"], [191, 3, 1, "", "exclude_none"], [192, 3, 1, "", "exclude_not_equal"], [193, 3, 1, "", "exclude_outside"], [194, 3, 1, "", "exclude_transition"], [195, 4, 1, "", "gate_excluded"], [196, 4, 1, "", "gate_included"], [197, 3, 1, "", "include_above"], [198, 3, 1, "", "include_all"], [199, 3, 1, "", "include_below"], [200, 3, 1, "", "include_equal"], [201, 3, 1, "", "include_gates"], [202, 3, 1, "", "include_inside"], [203, 3, 1, "", "include_none"], [204, 3, 1, "", "include_not_equal"], [205, 3, 1, "", "include_not_masked"], [206, 3, 1, "", "include_not_transition"], [207, 3, 1, "", "include_outside"], [208, 3, 1, "", "include_valid"]], "pyart.graph": [[214, 2, 1, "", "AirborneRadarDisplay"], [244, 2, 1, "", "GridMapDisplay"], [261, 2, 1, "", "GridMapDisplayBasemap"], [275, 2, 1, "", "RadarDisplay"], [304, 2, 1, "", "RadarMapDisplay"], [337, 2, 1, "", "RadarMapDisplayBasemap"], [370, 0, 1, "", "plot_convstrat_scheme"], [371, 0, 1, "", "plot_maxcappi"]], "pyart.graph.AirborneRadarDisplay": [[215, 3, 1, "", "generate_az_rhi_title"], [216, 3, 1, "", "generate_filename"], [217, 3, 1, "", "generate_ray_title"], [218, 3, 1, "", "generate_title"], [219, 3, 1, "", "generate_vpt_title"], [220, 3, 1, "", "label_xaxis_r"], [221, 3, 1, "", "label_xaxis_rays"], [222, 3, 1, "", "label_xaxis_time"], [223, 3, 1, "", "label_xaxis_x"], [224, 3, 1, "", "label_yaxis_field"], [225, 3, 1, "", "label_yaxis_y"], [226, 3, 1, "", "label_yaxis_z"], [227, 3, 1, "", "plot"], [228, 3, 1, "", "plot_azimuth_to_rhi"], [229, 3, 1, "", "plot_colorbar"], [230, 3, 1, "", "plot_cr_raster"], [231, 3, 1, "", "plot_cross_hair"], [232, 3, 1, "", "plot_grid_lines"], [233, 3, 1, "", "plot_label"], [234, 3, 1, "", "plot_labels"], [235, 3, 1, "", "plot_ppi"], [236, 3, 1, "", "plot_range_ring"], [237, 3, 1, "", "plot_range_rings"], [238, 3, 1, "", "plot_ray"], [239, 3, 1, "", "plot_rhi"], [240, 3, 1, "", "plot_sweep_grid"], [241, 3, 1, "", "plot_vpt"], [242, 3, 1, "", "set_aspect_ratio"], [243, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[245, 3, 1, "", "cartopy_coastlines"], [246, 3, 1, "", "cartopy_political_boundaries"], [247, 3, 1, "", "cartopy_states"], [248, 3, 1, "", "generate_filename"], [249, 3, 1, "", "generate_grid_title"], [250, 3, 1, "", "generate_latitudinal_level_title"], [251, 3, 1, "", "generate_longitudinal_level_title"], [252, 3, 1, "", "plot_colorbar"], [253, 3, 1, "", "plot_cross_section"], [254, 3, 1, "", "plot_crosshairs"], [255, 3, 1, "", "plot_grid"], [256, 3, 1, "", "plot_latitude_slice"], [257, 3, 1, "", "plot_latitudinal_level"], [258, 3, 1, "", "plot_longitude_slice"], [259, 3, 1, "", "plot_longitudinal_level"], [260, 3, 1, "", "plot_maxcappi"]], "pyart.graph.GridMapDisplayBasemap": [[262, 3, 1, "", "generate_filename"], [263, 3, 1, "", "generate_grid_title"], [264, 3, 1, "", "generate_latitudinal_level_title"], [265, 3, 1, "", "generate_longitudinal_level_title"], [266, 3, 1, "", "get_basemap"], [267, 3, 1, "", "plot_basemap"], [268, 3, 1, "", "plot_colorbar"], [269, 3, 1, "", "plot_crosshairs"], [270, 3, 1, "", "plot_grid"], [271, 3, 1, "", "plot_latitude_slice"], [272, 3, 1, "", "plot_latitudinal_level"], [273, 3, 1, "", "plot_longitude_slice"], [274, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[276, 3, 1, "", "generate_az_rhi_title"], [277, 3, 1, "", "generate_filename"], [278, 3, 1, "", "generate_ray_title"], [279, 3, 1, "", "generate_title"], [280, 3, 1, "", "generate_vpt_title"], [281, 3, 1, "", "label_xaxis_r"], [282, 3, 1, "", "label_xaxis_rays"], [283, 3, 1, "", "label_xaxis_time"], [284, 3, 1, "", "label_xaxis_x"], [285, 3, 1, "", "label_yaxis_field"], [286, 3, 1, "", "label_yaxis_y"], [287, 3, 1, "", "label_yaxis_z"], [288, 3, 1, "", "plot"], [289, 3, 1, "", "plot_azimuth_to_rhi"], [290, 3, 1, "", "plot_colorbar"], [291, 3, 1, "", "plot_cr_raster"], [292, 3, 1, "", "plot_cross_hair"], [293, 3, 1, "", "plot_grid_lines"], [294, 3, 1, "", "plot_label"], [295, 3, 1, "", "plot_labels"], [296, 3, 1, "", "plot_ppi"], [297, 3, 1, "", "plot_range_ring"], [298, 3, 1, "", "plot_range_rings"], [299, 3, 1, "", "plot_ray"], [300, 3, 1, "", "plot_rhi"], [301, 3, 1, "", "plot_vpt"], [302, 3, 1, "", "set_aspect_ratio"], [303, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[305, 3, 1, "", "generate_az_rhi_title"], [306, 3, 1, "", "generate_filename"], [307, 3, 1, "", "generate_ray_title"], [308, 3, 1, "", "generate_title"], [309, 3, 1, "", "generate_vpt_title"], [310, 3, 1, "", "label_xaxis_r"], [311, 3, 1, "", "label_xaxis_rays"], [312, 3, 1, "", "label_xaxis_time"], [313, 3, 1, "", "label_xaxis_x"], [314, 3, 1, "", "label_yaxis_field"], [315, 3, 1, "", "label_yaxis_y"], [316, 3, 1, "", "label_yaxis_z"], [317, 3, 1, "", "plot"], [318, 3, 1, "", "plot_azimuth_to_rhi"], [319, 3, 1, "", "plot_colorbar"], [320, 3, 1, "", "plot_cr_raster"], [321, 3, 1, "", "plot_cross_hair"], [322, 3, 1, "", "plot_grid_lines"], [323, 3, 1, "", "plot_label"], [324, 3, 1, "", "plot_labels"], [325, 3, 1, "", "plot_line_geo"], [326, 3, 1, "", "plot_line_xy"], [327, 3, 1, "", "plot_point"], [328, 3, 1, "", "plot_ppi"], [329, 3, 1, "", "plot_ppi_map"], [330, 3, 1, "", "plot_range_ring"], [331, 3, 1, "", "plot_range_rings"], [332, 3, 1, "", "plot_ray"], [333, 3, 1, "", "plot_rhi"], [334, 3, 1, "", "plot_vpt"], [335, 3, 1, "", "set_aspect_ratio"], [336, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[338, 3, 1, "", "generate_az_rhi_title"], [339, 3, 1, "", "generate_filename"], [340, 3, 1, "", "generate_ray_title"], [341, 3, 1, "", "generate_title"], [342, 3, 1, "", "generate_vpt_title"], [343, 3, 1, "", "label_xaxis_r"], [344, 3, 1, "", "label_xaxis_rays"], [345, 3, 1, "", "label_xaxis_time"], [346, 3, 1, "", "label_xaxis_x"], [347, 3, 1, "", "label_yaxis_field"], [348, 3, 1, "", "label_yaxis_y"], [349, 3, 1, "", "label_yaxis_z"], [350, 3, 1, "", "plot"], [351, 3, 1, "", "plot_azimuth_to_rhi"], [352, 3, 1, "", "plot_colorbar"], [353, 3, 1, "", "plot_cr_raster"], [354, 3, 1, "", "plot_cross_hair"], [355, 3, 1, "", "plot_grid_lines"], [356, 3, 1, "", "plot_label"], [357, 3, 1, "", "plot_labels"], [358, 3, 1, "", "plot_line_geo"], [359, 3, 1, "", "plot_line_xy"], [360, 3, 1, "", "plot_point"], [361, 3, 1, "", "plot_ppi"], [362, 3, 1, "", "plot_ppi_map"], [363, 3, 1, "", "plot_range_ring"], [364, 3, 1, "", "plot_range_rings"], [365, 3, 1, "", "plot_ray"], [366, 3, 1, "", "plot_rhi"], [367, 3, 1, "", "plot_vpt"], [368, 3, 1, "", "set_aspect_ratio"], [369, 3, 1, "", "set_limits"]], "pyart.io": [[373, 0, 1, "", "prepare_for_read"], [374, 0, 1, "", "read"], [375, 0, 1, "", "read_arm_sonde"], [376, 0, 1, "", "read_arm_sonde_vap"], [377, 0, 1, "", "read_cfradial"], [378, 0, 1, "", "read_chl"], [379, 0, 1, "", "read_grid"], [380, 0, 1, "", "read_grid_mdv"], [381, 0, 1, "", "read_mdv"], [382, 0, 1, "", "read_nexrad_archive"], [383, 0, 1, "", "read_nexrad_cdm"], [384, 0, 1, "", "read_nexrad_level3"], [385, 0, 1, "", "read_rsl"], [386, 0, 1, "", "read_sigmet"], [387, 0, 1, "", "read_uf"], [388, 0, 1, "", "write_cfradial"], [389, 0, 1, "", "write_grid"], [390, 0, 1, "", "write_grid_geotiff"], [391, 0, 1, "", "write_grid_mdv"], [392, 0, 1, "", "write_uf"]], "pyart.lazydict": [[394, 2, 1, "", "LazyLoadDict"], [407, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[395, 3, 1, "", "clear"], [396, 3, 1, "", "copy"], [397, 3, 1, "", "get"], [398, 3, 1, "", "has_key"], [399, 3, 1, "", "items"], [400, 3, 1, "", "keys"], [401, 3, 1, "", "pop"], [402, 3, 1, "", "popitem"], [403, 3, 1, "", "set_lazy"], [404, 3, 1, "", "setdefault"], [405, 3, 1, "", "update"], [406, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[408, 3, 1, "", "clear"], [409, 3, 1, "", "get"], [410, 3, 1, "", "items"], [411, 3, 1, "", "keys"], [412, 3, 1, "", "pop"], [413, 3, 1, "", "popitem"], [414, 3, 1, "", "setdefault"], [415, 3, 1, "", "update"], [416, 3, 1, "", "values"]], "pyart.map": [[418, 2, 1, "", "GateMapper"], [422, 0, 1, "", "example_roi_func_constant"], [423, 0, 1, "", "example_roi_func_dist"], [424, 0, 1, "", "example_roi_func_dist_beam"], [425, 0, 1, "", "grid_from_radars"], [426, 0, 1, "", "grid_ppi_sweeps"], [427, 0, 1, "", "grid_rhi_sweeps"], [428, 0, 1, "", "map_gates_to_grid"], [429, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[419, 4, 1, "", "distance_tolerance"], [420, 3, 1, "", "mapped_radar"], [421, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[431, 0, 1, "", "ZtoR"], [432, 0, 1, "", "calculate_snr_from_reflectivity"], [433, 0, 1, "", "calculate_velocity_texture"], [434, 0, 1, "", "composite_reflectivity"], [435, 0, 1, "", "compute_cdr"], [436, 0, 1, "", "compute_evp"], [437, 0, 1, "", "compute_l"], [438, 0, 1, "", "compute_noisedBZ"], [439, 0, 1, "", "compute_qvp"], [440, 0, 1, "", "compute_rqvp"], [441, 0, 1, "", "compute_snr"], [442, 0, 1, "", "compute_svp"], [443, 0, 1, "", "compute_ts_along_coord"], [444, 0, 1, "", "compute_vp"], [445, 0, 1, "", "conv_strat_raut"], [446, 0, 1, "", "conv_strat_yuter"], [447, 0, 1, "", "create_cappi"], [448, 0, 1, "", "create_cfad"], [449, 0, 1, "", "dealias_spectra"], [450, 0, 1, "", "est_rain_rate_a"], [451, 0, 1, "", "est_rain_rate_hydro"], [452, 0, 1, "", "est_rain_rate_kdp"], [453, 0, 1, "", "est_rain_rate_z"], [454, 0, 1, "", "est_rain_rate_za"], [455, 0, 1, "", "est_rain_rate_zkdp"], [456, 0, 1, "", "est_rain_rate_zpoly"], [457, 0, 1, "", "feature_detection"], [458, 0, 1, "", "fetch_radar_time_profile"], [459, 0, 1, "", "get_freq_band"], [460, 0, 1, "", "grid_displacement_pc"], [461, 0, 1, "", "grid_shift"], [462, 0, 1, "", "hydroclass_semisupervised"], [463, 0, 1, "", "kdp_maesaka"], [464, 0, 1, "", "kdp_schneebeli"], [465, 0, 1, "", "kdp_vulpiani"], [466, 0, 1, "", "map_profile_to_gates"], [467, 0, 1, "", "quasi_vertical_profile"], [468, 0, 1, "", "spectra_moments"], [469, 0, 1, "", "steiner_conv_strat"], [470, 0, 1, "", "storm_relative_velocity"], [471, 0, 1, "", "texture_of_complex_phase"], [472, 0, 1, "", "vad_browning"], [473, 0, 1, "", "vad_michelson"]], "pyart.testing": [[475, 2, 1, "", "Grid"], [485, 2, 1, "", "InTemporaryDirectory"], [487, 2, 1, "", "Radar"], [516, 2, 1, "", "RadarSpectra"], [561, 0, 1, "", "get_metadata"], [562, 0, 1, "", "get_test_data"], [563, 0, 1, "", "make_empty_grid"], [564, 0, 1, "", "make_empty_ppi_radar"], [565, 0, 1, "", "make_empty_rhi_radar"], [566, 0, 1, "", "make_empty_spectra_radar"], [567, 0, 1, "", "make_gaussian_storm_grid"], [568, 0, 1, "", "make_normal_storm"], [569, 0, 1, "", "make_single_ray_radar"], [570, 0, 1, "", "make_storm_grid"], [571, 0, 1, "", "make_target_grid"], [572, 0, 1, "", "make_target_radar"], [573, 0, 1, "", "make_target_rhi_radar"], [574, 0, 1, "", "make_target_spectra_radar"], [575, 0, 1, "", "make_velocity_aliased_radar"], [576, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[476, 3, 1, "", "add_field"], [477, 3, 1, "", "get_point_longitude_latitude"], [478, 3, 1, "", "get_projparams"], [479, 3, 1, "", "init_point_altitude"], [480, 3, 1, "", "init_point_longitude_latitude"], [481, 3, 1, "", "init_point_x_y_z"], [482, 4, 1, "", "projection_proj"], [483, 3, 1, "", "to_xarray"], [484, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[486, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[488, 3, 1, "", "add_field"], [489, 3, 1, "", "add_field_like"], [490, 3, 1, "", "add_filter"], [491, 3, 1, "", "check_field_exists"], [492, 3, 1, "", "extract_sweeps"], [493, 3, 1, "", "get_azimuth"], [494, 3, 1, "", "get_elevation"], [495, 3, 1, "", "get_end"], [496, 3, 1, "", "get_field"], [497, 3, 1, "", "get_gate_area"], [498, 3, 1, "", "get_gate_lat_lon_alt"], [499, 3, 1, "", "get_gate_x_y_z"], [500, 3, 1, "", "get_nyquist_vel"], [501, 3, 1, "", "get_slice"], [502, 3, 1, "", "get_start"], [503, 3, 1, "", "get_start_end"], [504, 3, 1, "", "info"], [505, 3, 1, "", "init_gate_altitude"], [506, 3, 1, "", "init_gate_longitude_latitude"], [507, 3, 1, "", "init_gate_x_y_z"], [508, 3, 1, "", "init_rays_per_sweep"], [509, 3, 1, "", "iter_azimuth"], [510, 3, 1, "", "iter_elevation"], [511, 3, 1, "", "iter_end"], [512, 3, 1, "", "iter_field"], [513, 3, 1, "", "iter_slice"], [514, 3, 1, "", "iter_start"], [515, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[517, 4, 1, "", "altitude"], [518, 4, 1, "", "azimuth"], [519, 3, 1, "", "check_field_exists"], [520, 4, 1, "", "elevation"], [521, 4, 1, "", "fields"], [522, 4, 1, "", "fixed_angle"], [523, 4, 1, "", "gate_altitude"], [524, 4, 1, "", "gate_latitude"], [525, 4, 1, "", "gate_longitude"], [526, 4, 1, "", "gate_x"], [527, 4, 1, "", "gate_y"], [528, 4, 1, "", "gate_z"], [529, 3, 1, "", "get_end"], [530, 3, 1, "", "get_slice"], [531, 3, 1, "", "get_start"], [532, 3, 1, "", "get_start_end"], [533, 3, 1, "", "init_gate_altitude"], [534, 3, 1, "", "init_gate_longitude_latitude"], [535, 3, 1, "", "init_gate_x_y_z"], [536, 3, 1, "", "init_rays_per_sweep"], [537, 3, 1, "", "iter_azimuth"], [538, 3, 1, "", "iter_elevation"], [539, 3, 1, "", "iter_end"], [540, 3, 1, "", "iter_field"], [541, 3, 1, "", "iter_slice"], [542, 3, 1, "", "iter_start"], [543, 3, 1, "", "iter_start_end"], [544, 4, 1, "", "latitude"], [545, 4, 1, "", "longitude"], [546, 4, 1, "", "ngates"], [547, 4, 1, "", "npulses_max"], [548, 4, 1, "", "nrays"], [549, 4, 1, "", "nsweeps"], [550, 4, 1, "", "projection"], [551, 4, 1, "", "range"], [552, 4, 1, "", "rays_per_sweep"], [553, 4, 1, "", "scan_type"], [554, 4, 1, "", "sweep_end_ray_index"], [555, 4, 1, "", "sweep_mode"], [556, 4, 1, "", "sweep_number"], [557, 4, 1, "", "sweep_start_ray_index"], [558, 4, 1, "", "time"], [559, 3, 1, "", "to_vpt"], [560, 4, 1, "", "velocity_bins"]], "pyart.util": [[578, 0, 1, "", "angular_mean"], [579, 0, 1, "", "angular_mean_deg"], [580, 0, 1, "", "angular_std"], [581, 0, 1, "", "angular_std_deg"], [582, 0, 1, "", "angular_texture_2d"], [583, 0, 1, "", "column_vertical_profile"], [584, 0, 1, "", "compute_directional_stats"], [585, 0, 1, "", "cross_section_ppi"], [586, 0, 1, "", "cross_section_rhi"], [587, 0, 1, "", "datetime_from_dataset"], [588, 0, 1, "", "datetime_from_grid"], [589, 0, 1, "", "datetime_from_radar"], [590, 0, 1, "", "datetimes_from_dataset"], [591, 0, 1, "", "datetimes_from_radar"], [592, 0, 1, "", "determine_sweeps"], [593, 0, 1, "", "estimate_noise_hs74"], [594, 0, 1, "", "for_azimuth"], [595, 0, 1, "", "get_column_rays"], [596, 0, 1, "", "get_field_location"], [597, 0, 1, "", "image_mute_radar"], [598, 0, 1, "", "interval_mean"], [599, 0, 1, "", "interval_std"], [600, 0, 1, "", "is_vpt"], [601, 0, 1, "", "join_radar"], [602, 0, 1, "", "ma_broadcast_to"], [603, 0, 1, "", "mean_of_two_angles"], [604, 0, 1, "", "mean_of_two_angles_deg"], [605, 0, 1, "", "rolling_window"], [606, 0, 1, "", "simulated_vel_from_profile"], [607, 0, 1, "", "sphere_distance"], [608, 0, 1, "", "subset_radar"], [609, 0, 1, "", "texture"], [610, 0, 1, "", "texture_along_ray"], [611, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 615, 617, 618, 621, 624], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_mmcr": 7, "read_noxp_iphex_nc": 8, "read_odim_h5": 9, "read_pattern": 10, "read_radx": 11, "read_radx_grid": 12, "read_rainbow_wrl": 13, "read_rxm25": 14, "read_sinarame_h5": 15, "write_sinarame_cfradi": 16, "bridg": [17, 18], "texture_of_complex_phas": [18, 471], "config": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "filemetadata": [20, 21, 22, 23], "__call__": 21, "get_field_nam": [22, 27], "get_metadata": [23, 29, 561], "get_field_colormap": 24, "get_field_limit": 25, "get_field_map": 26, "get_fillvalu": 28, "load_config": 30, "core": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "grid": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 644, 645, 646, 652, 684, 693], "add_field": [33, 47, 476, 488], "get_point_longitude_latitud": [34, 477], "get_projparam": [35, 478], "init_point_altitud": [36, 479], "init_point_longitude_latitud": [37, 480], "init_point_x_y_z": [38, 481], "projection_proj": [39, 482], "to_xarrai": [40, 483], "write": [41, 484], "horizontalwindprofil": [42, 43, 44, 45], "from_u_and_v": 43, "u_wind": 44, "v_wind": 45, "radar": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 616, 617, 621, 622, 625, 627, 643, 645, 646, 672, 678, 687, 690, 695, 698], "add_field_lik": [48, 489], "add_filt": [49, 490], "check_field_exist": [50, 78, 491, 519], "extract_sweep": [51, 492], "get_azimuth": [52, 493], "get_elev": [53, 494], "get_end": [54, 88, 495, 529], "get_field": [55, 496], "get_gate_area": [56, 497], "get_gate_lat_lon_alt": [57, 498], "get_gate_x_y_z": [58, 499], "get_nyquist_vel": [59, 500], "get_slic": [60, 89, 501, 530], "get_start": [61, 90, 502, 531], "get_start_end": [62, 91, 503, 532], "info": [63, 504], "init_gate_altitud": [64, 92, 505, 533], "init_gate_longitude_latitud": [65, 93, 506, 534], "init_gate_x_y_z": [66, 94, 507, 535], "init_rays_per_sweep": [67, 95, 508, 536], "iter_azimuth": [68, 96, 509, 537], "iter_elev": [69, 97, 510, 538], "iter_end": [70, 98, 511, 539], "iter_field": [71, 99, 512, 540], "iter_slic": [72, 100, 513, 541], "iter_start": [73, 101, 514, 542], "iter_start_end": [74, 102, 515, 543], "radarspectra": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560], "altitud": [76, 517], "azimuth": [77, 518], "elev": [79, 520], "field": [80, 521, 690], "fixed_angl": [81, 522], "gate_altitud": [82, 523], "gate_latitud": [83, 524], "gate_longitud": [84, 525], "gate_x": [85, 526], "gate_i": [86, 527], "gate_z": [87, 528], "latitud": [103, 544, 639], "longitud": [104, 545, 639], "ngate": [105, 546], "npulses_max": [106, 547], "nrai": [107, 548], "nsweep": [108, 549], "project": [109, 550], "rang": [110, 551, 621], "rays_per_sweep": [111, 552], "scan_typ": [112, 553], "sweep_end_ray_index": [113, 554], "sweep_mod": [114, 555], "sweep_numb": [115, 556], "sweep_start_ray_index": [116, 557], "time": [117, 558, 617, 621, 634, 641, 647, 669, 680, 681, 686, 696], "to_vpt": [118, 559, 611], "velocity_bin": [119, 560], "antenna_to_cartesian": 120, "antenna_vectors_to_cartesian": 121, "cartesian_to_antenna": 122, "cartesian_to_geograph": 123, "cartesian_to_geographic_aeqd": 124, "cartesian_vectors_to_geograph": 125, "geographic_to_cartesian": 126, "geographic_to_cartesian_aeqd": 127, "correct": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 622, 629, 630, 635, 700], "gatefilt": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 694], "copi": [130, 180, 396], "exclude_abov": [131, 181], "exclude_above_toa": [132, 182], "exclude_al": [133, 183], "exclude_below": [134, 184], "exclude_equ": [135, 185], "exclude_g": [136, 186], "exclude_insid": [137, 187], "exclude_invalid": [138, 188], "exclude_last_g": [139, 189], "exclude_mask": [140, 190], "exclude_non": [141, 191], "exclude_not_equ": [142, 192], "exclude_outsid": [143, 193], "exclude_transit": [144, 194], "gate_exclud": [145, 195], "gate_includ": [146, 196], "include_abov": [147, 197], "include_al": [148, 198], "include_below": [149, 199], "include_equ": [150, 200], "include_g": [151, 201], "include_insid": [152, 202], "include_non": [153, 203], "include_not_equ": [154, 204], "include_not_mask": [155, 205], "include_not_transit": [156, 206], "include_outsid": [157, 207], "include_valid": [158, 208], "calc_cloud_mask": 159, "calc_noise_floor": 160, "calc_zdr_offset": 161, "calculate_attenu": 162, "calculate_attenuation_philinear": 163, "calculate_attenuation_zphi": 164, "cloud_threshold": 165, "correct_bia": 166, "correct_noise_rhohv": 167, "dealias_fourdd": 168, "dealias_region_bas": 169, "dealias_unwrap_phas": 170, "despeckle_field": 171, "find_object": 172, "moment_based_gate_filt": [173, 211], "phase_proc_lp": 174, "phase_proc_lp_gf": 175, "range_correct": 176, "except": 177, "filter": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "iso0_based_gate_filt": 209, "moment_and_texture_based_gate_filt": 210, "temp_based_gate_filt": 212, "graph": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 700], "airborneradardisplai": [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "generate_az_rhi_titl": [215, 276, 305, 338], "generate_filenam": [216, 248, 262, 277, 306, 339], "generate_ray_titl": [217, 278, 307, 340], "generate_titl": [218, 279, 308, 341], "generate_vpt_titl": [219, 280, 309, 342], "label_xaxis_r": [220, 281, 310, 343], "label_xaxis_rai": [221, 282, 311, 344], "label_xaxis_tim": [222, 283, 312, 345], "label_xaxis_x": [223, 284, 313, 346], "label_yaxis_field": [224, 285, 314, 347], "label_yaxis_i": [225, 286, 315, 348], "label_yaxis_z": [226, 287, 316, 349], "plot": [227, 288, 317, 350, 616, 617, 618, 620, 621, 622, 631, 635, 640, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 673, 676, 679, 685], "plot_azimuth_to_rhi": [228, 289, 318, 351], "plot_colorbar": [229, 252, 268, 290, 319, 352], "plot_cr_rast": [230, 291, 320, 353], "plot_cross_hair": [231, 292, 321, 354], "plot_grid_lin": [232, 293, 322, 355], "plot_label": [233, 234, 294, 295, 323, 324, 356, 357], "plot_ppi": [235, 296, 328, 361], "plot_range_r": [236, 237, 297, 298, 330, 331, 363, 364], "plot_rai": [238, 299, 332, 365], "plot_rhi": [239, 300, 333, 366], "plot_sweep_grid": 240, "plot_vpt": [241, 301, 334, 367], "set_aspect_ratio": [242, 302, 335, 368], "set_limit": [243, 303, 336, 369], "gridmapdisplai": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 667], "cartopy_coastlin": 245, "cartopy_political_boundari": 246, "cartopy_st": 247, "generate_grid_titl": [249, 263], "generate_latitudinal_level_titl": [250, 264], "generate_longitudinal_level_titl": [251, 265], "plot_cross_sect": 253, "plot_crosshair": [254, 269], "plot_grid": [255, 270], "plot_latitude_slic": [256, 271], "plot_latitudinal_level": [257, 272], "plot_longitude_slic": [258, 273], "plot_longitudinal_level": [259, 274], "plot_maxcappi": [260, 371], "gridmapdisplaybasemap": [261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "get_basemap": 266, "plot_basemap": 267, "radardisplai": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "radarmapdisplai": [304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 618], "plot_line_geo": [325, 358], "plot_line_xi": [326, 359], "plot_point": [327, 360], "plot_ppi_map": [329, 362, 618], "radarmapdisplaybasemap": [337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "plot_convstrat_schem": 370, "io": [372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 700], "prepare_for_read": 373, "read": [374, 616, 617, 618, 621, 622, 637, 638, 639, 640], "read_arm_sond": 375, "read_arm_sonde_vap": 376, "read_cfradi": 377, "read_chl": 378, "read_grid": 379, "read_grid_mdv": 380, "read_mdv": 381, "read_nexrad_arch": 382, "read_nexrad_cdm": 383, "read_nexrad_level3": 384, "read_rsl": 385, "read_sigmet": 386, "read_uf": 387, "write_cfradi": 388, "write_grid": 389, "write_grid_geotiff": 390, "write_grid_mdv": 391, "write_uf": 392, "lazydict": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "lazyloaddict": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "clear": [395, 408], "get": [397, 409, 687], "has_kei": 398, "item": [399, 410], "kei": [400, 411, 617], "pop": [401, 412], "popitem": [402, 413], "set_lazi": 403, "setdefault": [404, 414], "updat": [405, 415, 627], "valu": [406, 416], "mutablemap": [407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "map": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 621, 635, 642, 644, 645, 646, 654, 660, 693], "gatemapp": [418, 419, 420, 421, 643], "distance_toler": 419, "mapped_radar": 420, "time_toler": 421, "example_roi_func_const": 422, "example_roi_func_dist": 423, "example_roi_func_dist_beam": 424, "grid_from_radar": 425, "grid_ppi_sweep": 426, "grid_rhi_sweep": 427, "map_gates_to_grid": 428, "map_to_grid": 429, "retriev": [430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 622, 635, 670], "ztor": 431, "calculate_snr_from_reflect": 432, "calculate_velocity_textur": 433, "composite_reflect": 434, "compute_cdr": 435, "compute_evp": 436, "compute_l": 437, "compute_noisedbz": 438, "compute_qvp": 439, "compute_rqvp": 440, "compute_snr": 441, "compute_svp": 442, "compute_ts_along_coord": 443, "compute_vp": 444, "conv_strat_raut": 445, "conv_strat_yut": 446, "create_cappi": 447, "author": 447, "create_cfad": 448, "dealias_spectra": 449, "est_rain_rate_a": 450, "est_rain_rate_hydro": 451, "est_rain_rate_kdp": 452, "est_rain_rate_z": 453, "est_rain_rate_za": 454, "est_rain_rate_zkdp": 455, "est_rain_rate_zpoli": 456, "feature_detect": 457, "fetch_radar_time_profil": 458, "get_freq_band": 459, "grid_displacement_pc": 460, "grid_shift": 461, "hydroclass_semisupervis": 462, "usag": 462, "kdp_maesaka": 463, "kdp_schneeb": 464, "kdp_vulpiani": 465, "map_profile_to_g": 466, "quasi_vertical_profil": 467, "spectra_mo": 468, "paramet": [468, 618], "steiner_conv_strat": 469, "storm_relative_veloc": 470, "vad_brown": 472, "vad_michelson": 473, "test": [474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 625, 698], "intemporarydirectori": [485, 486], "cleanup": 486, "get_test_data": 562, "make_empty_grid": 563, "make_empty_ppi_radar": 564, "make_empty_rhi_radar": 565, "make_empty_spectra_radar": 566, "make_gaussian_storm_grid": 567, "make_normal_storm": 568, "make_single_ray_radar": 569, "make_storm_grid": 570, "make_target_grid": 571, "make_target_radar": 572, "make_target_rhi_radar": 573, "make_target_spectra_radar": 574, "make_velocity_aliased_radar": 575, "make_velocity_aliased_rhi_radar": 576, "util": [577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611], "angular_mean": 578, "angular_mean_deg": 579, "angular_std": 580, "angular_std_deg": 581, "angular_texture_2d": 582, "column_vertical_profil": 583, "compute_directional_stat": 584, "cross_section_ppi": 585, "cross_section_rhi": 586, "datetime_from_dataset": 587, "datetime_from_grid": 588, "datetime_from_radar": 589, "datetimes_from_dataset": 590, "datetimes_from_radar": 591, "determine_sweep": 592, "estimate_noise_hs74": 593, "for_azimuth": 594, "assumpt": [594, 607], "get_column_rai": 595, "get_field_loc": 596, "image_mute_radar": 597, "interval_mean": 598, "interval_std": 599, "is_vpt": 600, "join_radar": 601, "ma_broadcast_to": 602, "mean_of_two_angl": 603, "mean_of_two_angles_deg": 604, "rolling_window": 605, "simulated_vel_from_profil": 606, "sphere_dist": 607, "subset_radar": 608, "textur": 609, "texture_along_rai": 610, "api": [612, 622], "refer": [612, 622, 674, 675], "manual": 612, "blog": [613, 621, 623], "blend": 614, "observ": 614, "from": [614, 616, 621, 622, 637, 638, 652, 656, 658, 659, 661, 662, 663, 664, 665, 668, 671, 697], "tracer": 614, "us": [614, 616, 617, 618, 621, 622, 632, 640, 643, 644, 667, 683, 684, 685], "py": [614, 615, 616, 621, 622, 624, 625, 626, 627, 640, 683, 684, 685, 687, 694, 695, 697, 698, 700], "art": [614, 615, 616, 621, 622, 624, 625, 626, 627, 640, 683, 684, 685, 687, 694, 695, 697, 698, 700], "import": [614, 616, 617, 618, 620, 625, 698], "goe": 614, "data": [614, 616, 617, 618, 620, 621, 622, 637, 638, 639, 640, 684, 693, 694], "access": [614, 616, 618, 620, 621], "csapr": 614, "load": [614, 617], "lma": 614, "flash": 614, "june": 614, "17th": 614, "case": 614, "17": [614, 624], "rhi": [614, 622, 661, 662, 663, 664, 665, 666, 671], "activ": 615, "develop": [615, 628], "submit": 615, "pull": 615, "request": 615, "pr": [615, 624], "first": 615, "you": [615, 622], "have": 615, "done": 615, "so": 615, "alreadi": 615, "need": 615, "fork": 615, "github": [615, 625, 627, 698], "repositori": 615, "second": [615, 653], "termin": 615, "clone": 615, "your": [615, 621, 622, 650, 654], "remot": 615, "git": [615, 627], "command": 615, "third": 615, "creat": [615, 616, 617, 621, 627, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 671, 689, 701], "doc": [615, 619], "conda": [615, 627], "environ": [615, 701], "fourth": 615, "we": [615, 621], "instal": [615, 625, 687, 697, 698], "trmm": 615, "rsl": 615, "librari": 615, "lastli": 615, "python": [615, 625, 687, 698], "script": 615, "within": [615, 621], "okai": 615, "should": 615, "now": 615, "readi": 615, "make": [615, 627], "chang": 615, "sourc": [615, 697], "code": [615, 621, 625, 698], "1": [615, 621, 624, 675], "new": [615, 619], "branch": 615, "our": [615, 617, 618, 620, 622], "2": [615, 621, 624, 637, 638, 639, 675, 700], "push": 615, "To": 615, "let": 615, "commit": 615, "after": 615, "thi": [615, 621, 624], "i": [615, 622, 687], "what": [615, 687], "look": 615, "like": 615, "hope": 615, "help": [615, 687], "hail": 616, "storm": 616, "visual": [616, 617, 620], "panda": 616, "motiv": [616, 620, 622, 623], "nexrad": [616, 618, 620, 621, 637, 638, 639, 656, 657], "fsspec": 616, "setup": [616, 620, 625, 626, 698], "filesystem": 616, "bucket": 616, "file": [616, 621, 625, 656, 658, 659, 661, 662, 663, 664, 665, 689, 690, 698], "dataset": 616, "nexradaw": 616, "configur": 616, "search": [616, 622], "download": [616, 620], "spc": 616, "report": 616, "function": [616, 620], "loop": [616, 621], "through": [616, 621, 622], "helper": 616, "scale": 616, "bar": 616, "an": [616, 655, 663, 664, 701], "anim": [616, 621], "imag": [616, 620, 655], "view": [616, 617], "final": [616, 617], "conclus": [616, 618, 620, 622, 623], "work": [617, 674, 675], "vertic": 617, "point": [617, 621, 672], "xarrai": 617, "hvplot": 617, "overview": [617, 621], "ka": 617, "band": 617, "arm": [617, 622, 625, 687, 698], "zenith": 617, "kazr": 617, "instrument": 617, "clean": [617, 622], "up": [617, 618, 621, 701], "bit": 617, "analysi": 617, "subset": 617, "reflect": [617, 630, 655, 657, 663, 664, 671, 673], "veloc": [617, 622, 632, 671, 683, 691], "quick": 617, "extract": [617, 672], "date": [617, 620, 621], "inform": [617, 701], "label": 617, "holoview": 617, "try": [617, 618, 700], "raster": 617, "takeawai": 617, "fix": [618, 624, 639], "weird": 618, "pattern": 618, "when": 618, "level": [618, 621, 637, 638, 639], "3": [618, 621, 624, 637, 667], "The": [618, 620, 622, 623, 625, 687, 695, 698], "recreat": 618, "issu": [618, 639], "set": [618, 621, 677, 701], "matplotlib": 618, "style": [618, 625, 698], "without": 618, "alpha": 618, "add": [618, 620], "argument": 618, "dig": 618, "investig": [618, 620, 622], "pcolormesh": 618, "edgecolor": 618, "modifi": [618, 654], "default": 618, "solut": [618, 622, 623], "sever": 620, "weather": 620, "wisconsin": 620, "outbreak": 620, "focus": 620, "southern": 620, "reproduc": 620, "event": 620, "road": 620, "interst": 620, "featur": [620, 621, 624, 675], "avail": 620, "run": 620, "gif": 621, "post": [621, 623], "cover": 621, "aw": [621, 637], "how": [621, 627, 674, 675, 700], "acquir": 621, "prerequisit": 621, "s3": 621, "filysystem": 621, "select": 621, "station": 621, "period": 621, "option": [621, 687, 697, 701], "individu": 621, "locat": 621, "gener": 621, "list": 621, "check": 621, "plottabl": 621, "product": 621, "ad": [621, 701], "custom": [621, 677], "counti": 621, "zoom": 621, "colorbar": [621, 654], "note": [621, 627], "full": 621, "block": 621, "construct": 621, "properli": 621, "creation": 621, "whole": 621, "summari": [621, 674, 675], "scan": 622, "cloud": [622, 631, 637, 638], "epcap": 622, "problem": [622, 623], "dq": 622, "browser": 622, "act": 622, "token": 622, "live": 622, "pass": 622, "credenti": 622, "take": 622, "peak": 622, "strategi": 622, "sort": 622, "all": 622, "ppi": [622, 644, 649, 654, 658, 659, 660, 668, 685], "appli": 622, "explor": 622, "threshold": 622, "snr": 622, "revis": 622, "where": 622, "slice": 622, "frame": 622, "templat": 623, "changelog": 624, "18": 624, "enhanc": 624, "made": 624, "bug": 624, "other": 624, "merg": 624, "contributor": [624, 625, 698], "releas": [624, 627], "0": [624, 700], "document": [624, 627], "improv": 624, "16": 624, "mainten": 624, "upkeep": 624, "15": 624, "v1": 624, "14": 624, "6": 624, "5": 624, "4": 624, "13": 624, "12": 624, "7": 624, "11": 624, "8": 624, "deprec": 624, "10": 624, "9": 624, "picasso": 624, "": [625, 628, 698], "guid": [625, 628, 698, 699], "toolkit": [625, 687, 698], "link": [625, 698], "cite": [625, 687, 698], "resourc": [625, 698], "exampl": [625, 629, 635, 636, 642, 648, 653, 670, 671, 674, 682, 698], "continu": 626, "integr": 626, "tag": 627, "prepar": 627, "trigger": 627, "pypi": 627, "upload": 627, "packag": 627, "forg": 627, "announc": 627, "open": 627, "forum": 627, "version": 628, "moment": [629, 635, 656], "attenu": 630, "calcul": [631, 633, 673, 676, 679], "mask": [631, 694], "dealia": [632, 683], "doppler": 632, "region": 632, "base": [632, 678], "algorithm": [632, 674, 675], "zdr": 633, "bia": 633, "comput": [634, 641, 647, 669, 680, 681, 686, 696], "galleri": [635, 688], "input": [635, 636, 700], "output": [635, 636, 700], "xradar": [635, 640, 682, 683, 684, 685], "googl": 638, "older": 639, "cfradial2": 640, "fm301": 640, "compar": [643, 649], "two": [643, 646, 666], "singl": [644, 645], "sweep": 644, "cartesian": [644, 645, 646, 693], "2d": 644, "weight": 644, "v": 649, "cappi": [649, 653], "choos": 650, "colormap": 650, "corner": 651, "reflector": 651, "cross": [652, 668], "section": [652, 668], "max": 653, "displai": [653, 654], "initi": 654, "posit": 654, "titl": 654, "manipul": [654, 690], "mute": 655, "multipl": [656, 661, 662], "cfradial": 658, "mdv": [659, 663, 664, 665], "cartopi": 660, "panel": [661, 662, 666, 667], "cf": [661, 662], "radial": [661, 662, 683], "contour": [663, 664], "line": [663, 664], "volum": 668, "cfad": 671, "diagram": 671, "descript": 671, "basic": [671, 689], "valid": 671, "column": 672, "abov": 672, "composit": 673, "convect": [674, 675], "stratiform": [674, 675], "classif": [674, 675, 676, 677], "recommend": [674, 675], "best": [674, 675], "practic": [674, 675], "detect": 675, "part": 675, "warm": 675, "season": 675, "cool": 675, "hydrometeor": [676, 677], "frequenc": 677, "quantit": 678, "precipit": 678, "estim": 678, "qpe": 678, "vad": 679, "profil": 679, "can": 687, "do": 687, "short": 687, "cours": 687, "depend": [687, 697, 701], "contribut": 687, "notebook": 688, "ingest": 689, "netcdf": 689, "save": 690, "object": [690, 695], "dealias": 691, "With": 694, "index": 695, "build": 697, "requir": 697, "obtain": 697, "latest": 697, "frequent": 697, "ask": 697, "question": 697, "user": 699, "anaconda": 701, "channel": 701, "path": 701, "more": 701}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_mmcr": [[7, "pyart-aux-io-read-mmcr"]], "pyart.aux_io.read_noxp_iphex_nc": [[8, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[9, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[10, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[11, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[12, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[13, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[14, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[15, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[16, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[17, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[18, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[19, "pyart-config"]], "pyart.config.FileMetadata": [[20, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[21, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[22, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[23, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[24, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[25, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[26, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[27, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[28, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[29, "pyart-config-get-metadata"]], "pyart.config.load_config": [[30, "pyart-config-load-config"]], "pyart.core": [[31, "pyart-core"]], "pyart.core.Grid": [[32, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[33, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[34, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[35, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[36, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[37, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[38, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[39, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[40, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[41, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[42, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[43, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[44, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[45, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[46, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[47, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[48, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[49, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[50, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[51, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[52, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[53, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[54, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[55, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[56, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[57, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[58, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[59, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[60, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[61, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[62, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[63, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[64, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[65, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[66, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[67, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[68, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[69, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[70, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[71, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[72, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[73, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[74, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[75, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[76, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[77, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[78, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[79, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[80, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[81, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[82, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[83, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[84, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[85, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[86, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[87, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[88, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[89, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[90, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[91, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[92, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[93, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[94, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[95, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[96, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[97, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[98, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[99, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[100, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[101, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[102, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[103, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[104, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[105, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[106, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[107, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[108, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[109, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[110, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[111, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[112, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[113, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[114, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[115, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[116, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[117, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[118, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[119, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[120, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[121, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[122, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[123, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[124, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[125, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[126, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[127, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[128, "pyart-correct"]], "pyart.correct.GateFilter": [[129, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[130, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[131, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_above_toa": [[132, "pyart-correct-gatefilter-exclude-above-toa"]], "pyart.correct.GateFilter.exclude_all": [[133, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[134, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[135, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[136, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[137, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[138, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_last_gates": [[139, "pyart-correct-gatefilter-exclude-last-gates"]], "pyart.correct.GateFilter.exclude_masked": [[140, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[141, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[142, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[143, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[144, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[145, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[146, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[147, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[148, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[149, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[150, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[151, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[152, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[153, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[154, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[155, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[156, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[157, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[158, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calc_cloud_mask": [[159, "pyart-correct-calc-cloud-mask"]], "pyart.correct.calc_noise_floor": [[160, "pyart-correct-calc-noise-floor"]], "pyart.correct.calc_zdr_offset": [[161, "pyart-correct-calc-zdr-offset"]], "pyart.correct.calculate_attenuation": [[162, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[163, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[164, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.cloud_threshold": [[165, "pyart-correct-cloud-threshold"]], "pyart.correct.correct_bias": [[166, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[167, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[168, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[169, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[170, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[171, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[172, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[173, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[174, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[175, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.range_correction": [[176, "pyart-correct-range-correction"]], "pyart.exceptions": [[177, "pyart-exceptions"]], "pyart.filters": [[178, "pyart-filters"]], "pyart.filters.GateFilter": [[179, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[180, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[181, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_above_toa": [[182, "pyart-filters-gatefilter-exclude-above-toa"]], "pyart.filters.GateFilter.exclude_all": [[183, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[184, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[185, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[186, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[187, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[188, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_last_gates": [[189, "pyart-filters-gatefilter-exclude-last-gates"]], "pyart.filters.GateFilter.exclude_masked": [[190, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[191, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[192, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[193, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[194, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[195, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[196, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[197, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[198, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[199, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[200, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[201, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[202, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[203, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[204, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[205, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[206, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[207, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[208, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[209, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[210, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[211, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[212, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[213, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[214, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[215, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[216, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[217, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[218, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[219, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[220, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[221, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[222, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[223, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[224, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[225, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[226, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[227, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[228, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[229, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[230, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[231, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[232, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[233, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[234, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[235, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[236, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[237, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[238, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[239, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[240, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[241, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[242, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[243, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[244, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[245, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[246, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[247, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[248, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[249, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[250, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[251, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[252, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[253, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[254, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[255, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[256, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[257, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[258, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[259, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplay.plot_maxcappi": [[260, "pyart-graph-gridmapdisplay-plot-maxcappi"]], "pyart.graph.GridMapDisplayBasemap": [[261, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[262, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[263, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[264, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[265, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[266, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[267, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[268, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[269, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[270, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[271, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[272, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[273, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[274, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[275, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[276, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[277, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[278, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[279, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[280, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[281, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[282, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[283, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[284, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[285, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[286, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[287, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[288, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[289, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[290, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[291, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[292, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[293, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[294, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[295, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[296, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[297, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[298, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[299, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[300, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[301, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[302, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[303, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[304, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[305, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[306, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[307, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[308, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[309, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[310, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[311, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[312, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[313, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[314, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[315, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[316, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[317, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[318, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[319, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[320, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[321, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[322, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[323, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[324, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[325, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[326, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[327, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[328, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[329, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[330, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[331, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[332, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[333, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[334, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[335, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[336, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[337, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[338, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[339, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[340, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[341, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[342, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[343, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[344, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[345, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[346, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[347, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[348, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[349, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[350, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[351, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[352, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[353, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[354, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[355, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[356, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[357, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[358, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[359, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[360, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[361, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[362, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[363, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[364, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[365, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[366, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[367, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[368, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[369, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[370, "pyart-graph-plot-convstrat-scheme"]], "pyart.graph.plot_maxcappi": [[371, "pyart-graph-plot-maxcappi"]], "pyart.io": [[372, "pyart-io"]], "pyart.io.prepare_for_read": [[373, "pyart-io-prepare-for-read"]], "pyart.io.read": [[374, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[375, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[376, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[377, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[378, "pyart-io-read-chl"]], "pyart.io.read_grid": [[379, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[380, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[381, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[382, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[383, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[384, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[385, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[386, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[387, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[388, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[389, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[390, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[391, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[392, "pyart-io-write-uf"]], "pyart.lazydict": [[393, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[394, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[395, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[396, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[397, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[398, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[399, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[400, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[401, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[402, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[403, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[404, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[405, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[406, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[407, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[408, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[409, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[410, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[411, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[412, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[413, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[414, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[415, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[416, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[417, "pyart-map"]], "pyart.map.GateMapper": [[418, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[419, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[420, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[421, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[422, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[423, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[424, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[425, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[426, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[427, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[428, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[429, "pyart-map-map-to-grid"]], "pyart.retrieve": [[430, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[431, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[432, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[433, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[434, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[435, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_evp": [[436, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_l": [[437, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[438, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_qvp": [[439, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_rqvp": [[440, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_snr": [[441, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_svp": [[442, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[443, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vp": [[444, "pyart-retrieve-compute-vp"]], "pyart.retrieve.conv_strat_raut": [[445, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[446, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.create_cappi": [[447, "pyart-retrieve-create-cappi"]], "Author": [[447, "author"]], "pyart.retrieve.create_cfad": [[448, "pyart-retrieve-create-cfad"]], "pyart.retrieve.dealias_spectra": [[449, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[450, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[451, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[452, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[453, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[454, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[455, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[456, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[457, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[458, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[459, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[460, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[461, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[462, "pyart-retrieve-hydroclass-semisupervised"]], "Usage": [[462, "usage"]], "pyart.retrieve.kdp_maesaka": [[463, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[464, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[465, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[466, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[467, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[468, "pyart-retrieve-spectra-moments"]], "Parameter": [[468, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[469, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.storm_relative_velocity": [[470, "pyart-retrieve-storm-relative-velocity"]], "pyart.retrieve.texture_of_complex_phase": [[471, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[472, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[473, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[474, "pyart-testing"]], "pyart.testing.Grid": [[475, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[476, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[477, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[478, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[479, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[480, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[481, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[482, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[483, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[484, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[485, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[486, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[487, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[488, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[489, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[490, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[491, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[492, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[493, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[494, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[495, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[496, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[497, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[498, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[499, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[500, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[501, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[502, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[503, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[504, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[505, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[506, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[507, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[508, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[509, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[510, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[511, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[512, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[513, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[514, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[515, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[516, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[517, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[518, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[519, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[520, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[521, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[522, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[523, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[524, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[525, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[526, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[527, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[528, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[529, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[530, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[531, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[532, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[533, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[534, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[535, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[536, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[537, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[538, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[539, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[540, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[541, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[542, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[543, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[544, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[545, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[546, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[547, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[548, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[549, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[550, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[551, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[552, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[553, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[554, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[555, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[556, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[557, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[558, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[559, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[560, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[561, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[562, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[563, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[564, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[565, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[566, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[567, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[568, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[569, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[570, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[571, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[572, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_rhi_radar": [[573, "pyart-testing-make-target-rhi-radar"]], "pyart.testing.make_target_spectra_radar": [[574, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[575, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[576, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[577, "pyart-util"]], "pyart.util.angular_mean": [[578, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[579, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[580, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[581, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[582, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[583, "pyart-util-column-vertical-profile"]], "pyart.util.compute_directional_stats": [[584, "pyart-util-compute-directional-stats"]], "pyart.util.cross_section_ppi": [[585, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[586, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[587, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[588, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[589, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[590, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[591, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[592, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[593, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[594, "pyart-util-for-azimuth"]], "Assumptions": [[594, "assumptions"], [607, "assumptions"]], "pyart.util.get_column_rays": [[595, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[596, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[597, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[598, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[599, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[600, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[601, "pyart-util-join-radar"]], "pyart.util.ma_broadcast_to": [[602, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[603, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[604, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[605, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[606, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[607, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[608, "pyart-util-subset-radar"]], "pyart.util.texture": [[609, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[610, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[611, "pyart-util-to-vpt"]], "API Reference Manual": [[612, "api-reference-manual"]], "Blog": [[613, "blog"]], "Blending Observations from TRACER using Py-ART": [[614, "blending-observations-from-tracer-using-py-art"]], "Imports": [[614, "imports"], [616, "imports"], [617, "imports"], [618, "imports"], [620, "imports"]], "GOES data access": [[614, "goes-data-access"]], "CSAPR data access": [[614, "csapr-data-access"]], "Load LMA Flash data": [[614, "load-lma-flash-data"]], "June 17th case": [[614, "june-17th-case"]], "June 17 RHI": [[614, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[615, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[615, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[615, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[615, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[615, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[615, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[615, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[615, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[615, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[615, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[615, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[615, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[616, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[616, "motivation"], [620, "motivation"], [622, "motivation"], [623, "motivation"]], "NEXRAD Data Access - fsspec": [[616, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[616, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[616, "read-in-a-file"]], "Visualize the Dataset": [[616, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[616, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[616, "configure-the-search"]], "Search and Download the Data": [[616, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[616, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[616, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[616, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[616, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[616, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[616, "create-an-animation-of-the-images"]], "View the Final Animation": [[616, "view-the-final-animation"]], "Conclusion": [[616, "conclusion"], [618, "conclusion"], [620, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[617, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[617, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[617, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[617, "plot-using-pyart"]], "Load in the data using pyart": [[617, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[617, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[617, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[617, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[617, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[617, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[617, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[617, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[617, "create-our-holoviews-plots"]], "View the Final Visualization": [[617, "view-the-final-visualization"]], "Try Using Rasterize": [[617, "try-using-rasterize"]], "Key Takeaways": [[617, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[618, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[618, "the-data"]], "Data Access": [[618, "data-access"]], "Recreate the Issue Using PyART": [[618, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[618, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[618, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[618, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[618, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[618, "add-in-the-alpha-argument"]], "Dig into the Issue": [[618, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[618, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[618, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[618, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[618, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[618, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[618, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[618, "fixing-the-issue-in-pyart"]], "New Docs": [[619, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[620, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[620, "the-outbreak"]], "Focusing on Southern Wisconsin": [[620, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[620, "reproducing-event-images"]], "Visualizing the Event": [[620, "visualizing-the-event"]], "Access the Data": [[620, "access-the-data"]], "Download the Road Data": [[620, "download-the-road-data"]], "Add the Interstate Date as a feature": [[620, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[620, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[620, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[620, "run-our-plotting-functions"]], "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART": [[621, "creating-animated-gifs-with-nexrad-level-2-radar-data-using-py-art"]], "Overview": [[621, "overview"]], "Within this blog post, we will cover:": [[621, "within-this-blog-post-we-will-cover"]], "1: Accessing NEXRAD data from AWS": [[621, "accessing-nexrad-data-from-aws"]], "2: How to read the data into Py-ART and create plots": [[621, "how-to-read-the-data-into-py-art-and-create-plots"]], "3: How to create animated gifs with acquired radar data from Py-ART": [[621, "how-to-create-animated-gifs-with-acquired-radar-data-from-py-art"]], "Prerequisites": [[621, "prerequisites"]], "Set up the AWS S3 filysystem": [[621, "set-up-the-aws-s3-filysystem"]], "Selecting your date, station, and time period": [[621, "selecting-your-date-station-and-time-period"]], "OPTIONAL* setting up individual locations to be plotted on your map": [[621, "optional-setting-up-individual-locations-to-be-plotted-on-your-map"]], "Generating your file list": [[621, "generating-your-file-list"]], "Checking your plottable radar products": [[621, "checking-your-plottable-radar-products"]], "Reading the data into PyART": [[621, "reading-the-data-into-pyart"]], "Looping through the radar data": [[621, "looping-through-the-radar-data"]], "Plotting code with added features and plotted points": [[621, "plotting-code-with-added-features-and-plotted-points"]], "Customizing the range of plotted data": [[621, "customizing-the-range-of-plotted-data"]], "Counties": [[621, "counties"]], "Location plotting": [[621, "location-plotting"]], "Zooming": [[621, "zooming"]], "Colorbar": [[621, "colorbar"]], "NOTE": [[621, "note"]], "Full code block constructed properly within the for loop.": [[621, "full-code-block-constructed-properly-within-the-for-loop"]], "GIF creation": [[621, "gif-creation"]], "Code in whole": [[621, "code-in-whole"]], "Summary": [[621, "summary"]], "Investigating ARM Scanning Cloud Radar Data from EPCAPE": [[622, "investigating-arm-scanning-cloud-radar-data-from-epcape"]], "The Problem": [[622, "the-problem"], [623, "the-problem"]], "The Solution": [[622, "the-solution"], [623, "the-solution"]], "Searching for data through the DQ Plot Browser": [[622, "searching-for-data-through-the-dq-plot-browser"]], "Use ACT to retrieve data from EPCAPE": [[622, "use-act-to-retrieve-data-from-epcape"]], "Retrieve you API token from ARM Live": [[622, "retrieve-you-api-token-from-arm-live"]], "Pass your Credentials into the Search": [[622, "pass-your-credentials-into-the-search"]], "Read the Data into Py-ART": [[622, "read-the-data-into-py-art"]], "Take a Peak at the Scan Strategy": [[622, "take-a-peak-at-the-scan-strategy"]], "Sort the Scans by Scan Strategy": [[622, "sort-the-scans-by-scan-strategy"]], "Plot all of the PPI Scans": [[622, "plot-all-of-the-ppi-scans"]], "Plot all the RHI Scans": [[622, "plot-all-the-rhi-scans"]], "Apply Corrections to the Velocity Data": [[622, "apply-corrections-to-the-velocity-data"]], "Explore a Threshold for SNR": [[622, "explore-a-threshold-for-snr"]], "Plot our Revised, Cleaned Data": [[622, "plot-our-revised-cleaned-data"]], "Plot where the RHI scan is slicing through using the PPI for a frame of reference": [[622, "plot-where-the-rhi-scan-is-slicing-through-using-the-ppi-for-a-frame-of-reference"]], "Conclusions": [[622, "conclusions"], [623, "conclusions"]], "Blog Post Template": [[623, "blog-post-template"]], "Changelog": [[624, "changelog"]], "Py-ART 1.18.1": [[624, "py-art-1-18-1"]], "Enhancements made": [[624, "enhancements-made"], [624, "id1"], [624, "id5"], [624, "id9"], [624, "id14"], [624, "id29"], [624, "id35"], [624, "id46"], [624, "id49"], [624, "id54"], [624, "id59"], [624, "id62"], [624, "id66"], [624, "id79"], [624, "id89"], [624, "id99"], [624, "id105"], [624, "id111"], [624, "id119"], [624, "id132"], [624, "id136"], [624, "id140"], [624, "id146"], [624, "id152"], [624, "id161"], [624, "id168"], [624, "id175"], [624, "id181"], [624, "id188"], [624, "id194"], [624, "id200"]], "Bugs fixed": [[624, "bugs-fixed"], [624, "id2"], [624, "id6"], [624, "id10"], [624, "id15"], [624, "id22"], [624, "id26"], [624, "id30"], [624, "id36"], [624, "id41"], [624, "id50"], [624, "id55"], [624, "id60"], [624, "id67"], [624, "id72"], [624, "id76"], [624, "id80"], [624, "id85"], [624, "id90"], [624, "id95"], [624, "id100"], [624, "id106"], [624, "id112"], [624, "id116"], [624, "id120"], [624, "id124"], [624, "id129"], [624, "id133"], [624, "id137"], [624, "id141"], [624, "id147"], [624, "id153"], [624, "id157"], [624, "id162"], [624, "id169"], [624, "id176"], [624, "id182"], [624, "id189"], [624, "id195"]], "Other merged PRs": [[624, "other-merged-prs"], [624, "id3"], [624, "id7"], [624, "id12"], [624, "id17"], [624, "id20"], [624, "id24"], [624, "id27"], [624, "id32"], [624, "id37"], [624, "id44"], [624, "id47"], [624, "id52"], [624, "id57"], [624, "id64"], [624, "id70"], [624, "id74"], [624, "id77"], [624, "id83"], [624, "id87"], [624, "id93"], [624, "id97"], [624, "id103"], [624, "id109"], [624, "id114"], [624, "id122"], [624, "id127"], [624, "id134"], [624, "id144"], [624, "id150"], [624, "id155"], [624, "id159"], [624, "id166"], [624, "id173"], [624, "id179"], [624, "id186"], [624, "id192"], [624, "id198"]], "Contributors to this release": [[624, "contributors-to-this-release"], [624, "id4"], [624, "id8"], [624, "id13"], [624, "id18"], [624, "id21"], [624, "id25"], [624, "id28"], [624, "id33"], [624, "id34"], [624, "id38"], [624, "id40"], [624, "id45"], [624, "id48"], [624, "id53"], [624, "id58"], [624, "id61"], [624, "id65"], [624, "id71"], [624, "id75"], [624, "id78"], [624, "id84"], [624, "id88"], [624, "id94"], [624, "id98"], [624, "id104"], [624, "id110"], [624, "id115"], [624, "id118"], [624, "id123"], [624, "id128"], [624, "id131"], [624, "id135"], [624, "id139"], [624, "id145"], [624, "id151"], [624, "id156"], [624, "id160"], [624, "id167"], [624, "id174"], [624, "id180"], [624, "id187"], [624, "id193"], [624, "id199"], [624, "id202"]], "Py-ART 1.18.0": [[624, "py-art-1-18-0"]], "Py-ART 1.17.0": [[624, "py-art-1-17-0"]], "Documentation improvements": [[624, "documentation-improvements"], [624, "id11"], [624, "id16"], [624, "id43"], [624, "id51"], [624, "id56"], [624, "id69"], [624, "id82"], [624, "id92"], [624, "id102"], [624, "id108"], [624, "id126"], [624, "id138"], [624, "id143"], [624, "id149"], [624, "id154"], [624, "id158"], [624, "id164"], [624, "id171"], [624, "id178"], [624, "id184"], [624, "id191"], [624, "id197"]], "Py-ART 1.16.1": [[624, "py-art-1-16-1"]], "Py-ART 1.16.0": [[624, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[624, "maintenance-and-upkeep-improvements"], [624, "id19"], [624, "id23"], [624, "id31"], [624, "id39"], [624, "id42"], [624, "id63"], [624, "id68"], [624, "id73"], [624, "id81"], [624, "id86"], [624, "id91"], [624, "id96"], [624, "id101"], [624, "id107"], [624, "id113"], [624, "id117"], [624, "id121"], [624, "id125"], [624, "id130"], [624, "id142"], [624, "id148"], [624, "id163"], [624, "id170"], [624, "id177"], [624, "id183"], [624, "id190"], [624, "id196"], [624, "id201"]], "Py-ART 1.15.2": [[624, "py-art-1-15-2"]], "Py-ART 1.15.1": [[624, "py-art-1-15-1"]], "Py-ART v1.15.0": [[624, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[624, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[624, "py-art-v1-14-5"]], "Merged PRs": [[624, "merged-prs"]], "Py-ART v1.14.4": [[624, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[624, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[624, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[624, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[624, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[624, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[624, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[624, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[624, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[624, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[624, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[624, "py-art-v1-12-5"]], "PyART v1.12.4": [[624, "pyart-v1-12-4"]], "PyART v1.12.2": [[624, "pyart-v1-12-2"]], "PyART v1.12.0": [[624, "pyart-v1-12-0"]], "PyART v1.11.8": [[624, "pyart-v1-11-8"]], "Deprecated features": [[624, "deprecated-features"], [624, "id165"], [624, "id172"], [624, "id185"]], "PyART v1.11.6": [[624, "pyart-v1-11-6"]], "PyART v1.11.5": [[624, "pyart-v1-11-5"]], "PyART v1.11.3": [[624, "pyart-v1-11-3"]], "PyART v1.11.2": [[624, "pyart-v1-11-2"]], "PyART v1.11.1": [[624, "pyart-v1-11-1"]], "PyART v1.11.0": [[624, "pyart-v1-11-0"]], "PyART v1.10.4": [[624, "pyart-v1-10-4"]], "PyART v1.10.3": [[624, "pyart-v1-10-3"]], "PyART v1.10.2": [[624, "pyart-v1-10-2"]], "PyART v1.10.1": [[624, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[624, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[624, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[624, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[624, "pyart-v1-8-0"]], "PyART v1.7.0": [[624, "pyart-v1-7-0"]], "PyART v1.6.0": [[624, "pyart-v1-6-0"]], "PyART v1.5.0": [[624, "pyart-v1-5-0"]], "PyART v1.4.0": [[624, "pyart-v1-4-0"]], "PyART v1.3.0": [[624, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[625, "contributor-s-guide"], [698, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[625, "the-python-arm-radar-toolkit-py-art"], [698, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[625, "important-links"], [698, "important-links"]], "Citing": [[625, "citing"], [698, "citing"]], "Install": [[625, "install"], [687, "install"], [698, "install"]], "Resources": [[625, "resources"], [698, "resources"]], "Code Style": [[625, "code-style"], [698, "code-style"]], "Python File Setup": [[625, "python-file-setup"], [698, "python-file-setup"]], "Testing": [[625, "testing"], [698, "testing"]], "Examples": [[625, "examples"], [674, "examples"], [698, "examples"]], "GitHub": [[625, "github"], [698, "github"]], "Py-ART Continuous Integration Setup": [[626, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[627, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[627, "make-the-tagged-git-release"]], "Prepare the release notes": [[627, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[627, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[627, "documentation"]], "Create conda packages on conda-forge": [[627, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[627, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[628, "developer-s-guide"]], "Versions": [[628, "versions"]], "Moment correction examples": [[629, "moment-correction-examples"], [635, "moment-correction-examples"]], "Correct reflectivity attenuation": [[630, "correct-reflectivity-attenuation"]], "Calculating and Plotting a Cloud Mask": [[631, "calculating-and-plotting-a-cloud-mask"]], "Dealias doppler velocities using the Region Based Algorithm": [[632, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "ZDR Bias Calculation": [[633, "zdr-bias-calculation"]], "Computation times": [[634, "computation-times"], [641, "computation-times"], [647, "computation-times"], [669, "computation-times"], [680, "computation-times"], [681, "computation-times"], [686, "computation-times"], [696, "computation-times"]], "Example Gallery": [[635, "example-gallery"]], "Input/Output Examples": [[635, "input-output-examples"], [636, "input-output-examples"]], "Mapping examples": [[635, "mapping-examples"], [642, "mapping-examples"]], "Plotting examples": [[635, "plotting-examples"], [648, "plotting-examples"]], "Retrieval Examples": [[635, "retrieval-examples"], [670, "retrieval-examples"]], "Xradar Examples": [[635, "xradar-examples"], [682, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[637, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[637, "read-nexrad-level-2-data"], [638, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[637, "read-nexrad-level-3-data"]], "Reading NEXRAD Data from Google Cloud": [[638, "reading-nexrad-data-from-google-cloud"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[639, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[639, "read-older-nexrad-level-2-data"]], "Read and Plot Cfradial2/FM301 data Using Xradar and Py-ART": [[640, "read-and-plot-cfradial2-fm301-data-using-xradar-and-py-art"]], "Compare Two Radars Using Gatemapper": [[643, "compare-two-radars-using-gatemapper"]], "Map a single PPI sweep to a Cartesian grid using 2D weighting": [[644, "map-a-single-ppi-sweep-to-a-cartesian-grid-using-2d-weighting"]], "Map a single radar to a Cartesian grid": [[645, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[646, "map-two-radars-to-a-cartesian-grid"]], "Compare PPI vs CAPPI": [[649, "compare-ppi-vs-cappi"]], "Choose a Colormap for your Plot": [[650, "choose-a-colormap-for-your-plot"]], "Plot a Corner Reflector": [[651, "plot-a-corner-reflector"]], "Plot a Cross Section from a Grid": [[652, "plot-a-cross-section-from-a-grid"]], "Plot Max-CAPPI": [[653, "plot-max-cappi"]], "MAX-CAPPI Display": [[653, "max-cappi-display"]], "Second Example": [[653, "second-example"]], "Modify a Colorbar for your Plot": [[654, "modify-a-colorbar-for-your-plot"]], "Initial PPI Map Display": [[654, "initial-ppi-map-display"]], "Colorbar Position / Title Manipulation": [[654, "colorbar-position-title-manipulation"]], "Create an image-muted reflectivity plot": [[655, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[656, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[657, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[658, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[659, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[660, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[661, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [662, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[663, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [664, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[665, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[666, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[667, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[668, "plot-a-cross-section-from-a-ppi-volume"]], "Creating a CFAD diagram": [[671, "creating-a-cfad-diagram"]], "Description of a CFAD": [[671, "description-of-a-cfad"]], "Basic example with reflectivity from RHI": [[671, "basic-example-with-reflectivity-from-rhi"]], "Velocity example": [[671, "velocity-example"]], "Validation": [[671, "validation"]], "Extract a radar column above a point": [[672, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[673, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[674, "convective-stratiform-classification"]], "How the algorithm works": [[674, "how-the-algorithm-works"], [675, "how-the-algorithm-works"]], "Summary of recommendations and best practices": [[674, "summary-of-recommendations-and-best-practices"], [675, "summary-of-recommendations-and-best-practices"]], "References": [[674, "references"], [675, "references"]], "Feature Detection classification": [[675, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[675, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[675, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[676, "calculate-and-plot-hydrometeor-classification"]], "Hydrometeor Classification with Custom Frequency Settings": [[677, "hydrometeor-classification-with-custom-frequency-settings"]], "Radar-Based Quantitative Precipitation Estimation (QPE)": [[678, "radar-based-quantitative-precipitation-estimation-qpe"]], "Calculate and Plot VAD profile": [[679, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[683, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[684, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[685, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[687, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[687, "what-is-py-art"]], "Citing Py-ART": [[687, "citing-py-art"]], "What can Py-ART do?": [[687, "what-can-py-art-do"]], "Short Courses": [[687, "short-courses"]], "Dependencies": [[687, "dependencies"]], "Optional Dependences": [[687, "optional-dependences"]], "Getting help": [[687, "getting-help"]], "Contributing": [[687, "contributing"]], "Notebook Gallery": [[688, "notebook-gallery"]], "Notebooks": [[688, null]], "Creating a basic ingest of a NetCDF file": [[689, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[690, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[691, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[693, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[694, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[695, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[697, "building-and-installing-py-art"]], "Required Dependencies": [[697, "required-dependencies"]], "Optional Dependencies": [[697, "optional-dependencies"]], "Obtaining the latest source": [[697, "obtaining-the-latest-source"]], "Installing from Source": [[697, "installing-from-source"]], "Frequently asked questions": [[697, "frequently-asked-questions"]], "User Guide": [[699, "user-guide"]], "Py-ART 2.0": [[700, "py-art-2-0"]], "How to Try Py-ART 2.0": [[700, "how-to-try-py-art-2-0"]], "Input/Output (IO)": [[700, "input-output-io"]], "Correct": [[700, "correct"]], "Graph": [[700, "graph"]], "Setting up an Environment": [[701, "setting-up-an-environment"]], "Anaconda": [[701, "anaconda"]], "Setting a Channel": [[701, "setting-a-channel"]], "Creating an Environment": [[701, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[701, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[701, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [17, "module-pyart.bridge"], [19, "module-pyart.config"], [31, "module-pyart.core"], [128, "module-pyart.correct"], [177, "module-pyart.exceptions"], [178, "module-pyart.filters"], [213, "module-pyart.graph"], [372, "module-pyart.io"], [393, "module-pyart.lazydict"], [417, "module-pyart.map"], [430, "module-pyart.retrieve"], [474, "module-pyart.testing"], [577, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_mmcr() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_mmcr"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[15, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[16, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[17, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[18, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[19, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[20, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[23, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[24, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[25, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[26, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[27, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[28, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[29, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[30, "pyart.config.load_config"]], "pyart.core": [[31, "module-pyart.core"]], "grid (class in pyart.core)": [[32, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[33, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[35, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[38, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[39, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[40, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[41, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[42, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[43, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[45, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[46, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[49, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[50, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[51, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[62, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[63, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[67, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[74, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[75, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[77, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[78, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[87, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[102, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[117, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[118, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[119, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[121, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[122, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[124, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[125, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[126, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[127, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[128, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[129, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[141, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[142, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[144, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[145, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[146, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[155, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[156, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[157, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[158, "pyart.correct.GateFilter.include_valid"]], "calc_cloud_mask() (in module pyart.correct)": [[159, "pyart.correct.calc_cloud_mask"]], "calc_noise_floor() (in module pyart.correct)": [[160, "pyart.correct.calc_noise_floor"]], "calc_zdr_offset() (in module pyart.correct)": [[161, "pyart.correct.calc_zdr_offset"]], "calculate_attenuation() (in module pyart.correct)": [[162, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[163, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[164, "pyart.correct.calculate_attenuation_zphi"]], "cloud_threshold() (in module pyart.correct)": [[165, "pyart.correct.cloud_threshold"]], "correct_bias() (in module pyart.correct)": [[166, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[167, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[168, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[169, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[170, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[171, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[172, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[173, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[174, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[175, "pyart.correct.phase_proc_lp_gf"]], "range_correction() (in module pyart.correct)": [[176, "pyart.correct.range_correction"]], "pyart.exceptions": [[177, "module-pyart.exceptions"]], "pyart.filters": [[178, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[179, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[184, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[195, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[196, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[198, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[199, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[200, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[201, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[202, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[203, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[204, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[205, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[206, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[207, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[208, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[209, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[210, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[211, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[212, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[213, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[214, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[220, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[221, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[222, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[225, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[233, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[234, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[235, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[236, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[237, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[238, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[239, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[240, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[241, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[242, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[243, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[244, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[254, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[255, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[256, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[257, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[258, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[259, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "plot_maxcappi() (pyart.graph.gridmapdisplay method)": [[260, "pyart.graph.GridMapDisplay.plot_maxcappi"]], "gridmapdisplaybasemap (class in pyart.graph)": [[261, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[268, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[269, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[270, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[271, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[272, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[273, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[274, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[275, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[281, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[282, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[283, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[290, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[291, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[292, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[293, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[294, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[295, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[296, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[297, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[298, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[299, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[300, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[301, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[302, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[303, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[304, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[311, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[312, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[321, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[322, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[325, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[326, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[327, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[328, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[329, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[330, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[331, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[332, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[333, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[334, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[335, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[336, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[337, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[342, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[344, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[345, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[361, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[362, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[363, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[364, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[365, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[366, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[367, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[368, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[369, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[370, "pyart.graph.plot_convstrat_scheme"]], "plot_maxcappi() (in module pyart.graph)": [[371, "pyart.graph.plot_maxcappi"]], "pyart.io": [[372, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[373, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[374, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[375, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[376, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[377, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[378, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[379, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[380, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[381, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[382, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[383, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[384, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[385, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[386, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[387, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[388, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[389, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[390, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[391, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[392, "pyart.io.write_uf"]], "pyart.lazydict": [[393, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[394, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[395, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[396, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[397, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[398, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[399, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[400, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[401, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[406, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[407, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[408, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[409, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[410, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[411, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[412, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[413, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[414, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[415, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[416, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[417, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[418, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[419, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[420, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[421, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[422, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[423, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[424, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[425, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[426, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[427, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[428, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[429, "pyart.map.map_to_grid"]], "pyart.retrieve": [[430, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[431, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[432, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[433, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[434, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[435, "pyart.retrieve.compute_cdr"]], "compute_evp() (in module pyart.retrieve)": [[436, "pyart.retrieve.compute_evp"]], "compute_l() (in module pyart.retrieve)": [[437, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[438, "pyart.retrieve.compute_noisedBZ"]], "compute_qvp() (in module pyart.retrieve)": [[439, "pyart.retrieve.compute_qvp"]], "compute_rqvp() (in module pyart.retrieve)": [[440, "pyart.retrieve.compute_rqvp"]], "compute_snr() (in module pyart.retrieve)": [[441, "pyart.retrieve.compute_snr"]], "compute_svp() (in module pyart.retrieve)": [[442, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[443, "pyart.retrieve.compute_ts_along_coord"]], "compute_vp() (in module pyart.retrieve)": [[444, "pyart.retrieve.compute_vp"]], "conv_strat_raut() (in module pyart.retrieve)": [[445, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[446, "pyart.retrieve.conv_strat_yuter"]], "create_cappi() (in module pyart.retrieve)": [[447, "pyart.retrieve.create_cappi"]], "create_cfad() (in module pyart.retrieve)": [[448, "pyart.retrieve.create_cfad"]], "dealias_spectra() (in module pyart.retrieve)": [[449, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[450, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[451, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[452, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[453, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[454, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[455, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[456, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[457, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[458, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[459, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[460, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[461, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[462, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[463, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[464, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[465, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[466, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[467, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[468, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[469, "pyart.retrieve.steiner_conv_strat"]], "storm_relative_velocity() (in module pyart.retrieve)": [[470, "pyart.retrieve.storm_relative_velocity"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[471, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[472, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[473, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[474, "module-pyart.testing"]], "grid (class in pyart.testing)": [[475, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[476, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[477, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[478, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[479, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[480, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[481, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[482, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[483, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[484, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[485, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[486, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[487, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[491, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[492, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[493, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[494, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[495, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[496, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[497, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[498, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[499, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[500, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[501, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[502, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[503, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[504, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[505, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[506, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[507, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[508, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[509, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[510, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[511, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[512, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[513, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[514, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[515, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[516, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[517, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[518, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[519, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[520, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[521, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[522, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[523, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[524, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[525, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[526, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[527, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[528, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[529, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[530, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[531, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[532, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[533, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[534, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[535, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[536, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[537, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[538, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[539, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[540, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[541, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[542, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[543, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[544, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[545, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[546, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[547, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[548, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[549, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[550, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[551, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[552, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[553, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[554, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[555, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[556, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[557, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[558, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[559, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[560, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[561, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[562, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[563, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[564, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[565, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[566, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[567, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[568, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[569, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[570, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[571, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[572, "pyart.testing.make_target_radar"]], "make_target_rhi_radar() (in module pyart.testing)": [[573, "pyart.testing.make_target_rhi_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[574, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[575, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[576, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[577, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[578, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[579, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[580, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[581, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[582, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[583, "pyart.util.column_vertical_profile"]], "compute_directional_stats() (in module pyart.util)": [[584, "pyart.util.compute_directional_stats"]], "cross_section_ppi() (in module pyart.util)": [[585, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[586, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[587, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[588, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[589, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[590, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[591, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[592, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[593, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[594, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[595, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[596, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[597, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[598, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[599, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[600, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[601, "pyart.util.join_radar"]], "ma_broadcast_to() (in module pyart.util)": [[602, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[603, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[604, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[605, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[606, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[607, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[608, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[609, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[610, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[611, "pyart.util.to_vpt"]]}})