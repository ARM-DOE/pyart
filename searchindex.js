Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_snr", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Installation", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"stream": [0, 62, 364, 477], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 198, 199, 200, 201, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 384, 392, 395, 396, 402, 405, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 458, 460, 463, 471, 472, 489, 554, 555, 565, 573, 575, 583, 585, 587, 589, 590, 611, 620, 630, 642, 644], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 212, 214, 215, 216, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 313, 314, 315, 317, 318, 325, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 390, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 583, 584, 585, 587, 589, 590, 592, 595, 596, 598, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634, 636, 637, 638, 640, 641, 642, 644, 646], "print": [0, 62, 155, 166, 167, 233, 249, 373, 437, 441, 477, 581, 583, 584, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 630, 637, 641, 642], "out": [0, 62, 163, 167, 198, 201, 375, 376, 377, 378, 379, 418, 432, 477, 583, 584, 585, 587, 589, 590, 605, 606, 610, 621, 629, 631, 634, 640, 643, 644, 645], "version": [0, 12, 31, 202, 407, 448, 548, 581, 582, 588, 589, 590, 592, 634, 642, 643, 644, 646], "statu": [0, 582, 590, 644], "inform": [0, 24, 31, 45, 62, 74, 140, 152, 155, 160, 166, 167, 183, 195, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 365, 373, 376, 437, 443, 448, 460, 477, 489, 581, 585, 588, 589, 590, 593, 601, 621, 634, 644], "debug": [0, 155, 160, 166, 167, 233, 249, 373, 437, 589], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 121, 123, 124, 131, 140, 141, 142, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 174, 183, 184, 185, 198, 199, 200, 201, 216, 242, 276, 292, 305, 317, 325, 338, 350, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 392, 394, 402, 405, 407, 413, 414, 417, 418, 423, 432, 437, 438, 439, 443, 445, 448, 450, 460, 462, 463, 466, 467, 469, 471, 472, 473, 489, 541, 553, 561, 565, 568, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 600, 601, 604, 605, 609, 610, 611, 612, 615, 621, 628, 630, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 416, 423, 436, 437, 438, 439, 440, 443, 444, 447, 457, 460, 477, 489, 535, 573, 581, 582, 584, 585, 587, 589, 592, 595, 597, 598, 600, 601, 602, 605, 607, 608, 609, 612, 614, 617, 623, 624, 625, 626, 629, 630, 631, 632, 633, 634, 635, 641, 642, 643, 646], "can": [0, 12, 16, 29, 45, 54, 57, 74, 121, 123, 124, 127, 140, 152, 156, 157, 160, 163, 165, 170, 183, 195, 198, 199, 200, 201, 216, 276, 305, 338, 360, 367, 368, 370, 373, 377, 378, 379, 413, 414, 437, 438, 439, 441, 446, 460, 469, 472, 489, 581, 582, 583, 584, 585, 587, 589, 590, 592, 600, 601, 604, 609, 628, 630, 636, 637, 638, 640, 641, 642, 643, 644, 646], "run": [0, 229, 423, 447, 582, 584, 589, 590, 591, 592, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634, 643, 644, 646], "script": [0, 29, 589, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 122, 125, 127, 131, 133, 140, 141, 147, 152, 155, 156, 157, 159, 160, 161, 162, 165, 166, 167, 169, 170, 174, 176, 183, 184, 190, 195, 198, 199, 200, 201, 203, 217, 218, 219, 224, 227, 228, 229, 230, 233, 241, 242, 244, 246, 248, 249, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 314, 316, 317, 320, 321, 322, 325, 339, 340, 341, 347, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 390, 392, 395, 402, 404, 407, 409, 410, 411, 413, 414, 416, 417, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435, 437, 439, 440, 441, 443, 444, 445, 446, 448, 451, 456, 460, 462, 465, 469, 470, 471, 472, 489, 541, 553, 554, 555, 561, 562, 563, 564, 565, 566, 567, 568, 573, 582, 584, 585, 587, 589, 590, 592, 596, 598, 599, 601, 602, 603, 604, 605, 606, 608, 609, 611, 612, 614, 617, 623, 624, 626, 627, 628, 629, 630, 631, 632, 634, 636, 640, 641, 642, 644, 646], "directori": [0, 29, 458, 579, 581, 582, 588, 589, 590, 600, 643, 644], "report": [0, 1, 292, 325, 372, 446, 587, 589, 590, 634, 644], "dependeci": 0, "befor": [0, 31, 56, 160, 164, 167, 405, 423, 445, 448, 471, 583, 584, 585, 590, 604, 630, 634, 638, 642, 644], "build": [0, 121, 123, 124, 127, 131, 133, 140, 147, 152, 170, 174, 176, 183, 190, 195, 379, 583, 587, 589, 590, 592, 634, 643, 644], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 121, 122, 123, 124, 125, 127, 140, 152, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 203, 205, 207, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 296, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 329, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 405, 412, 413, 414, 416, 418, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 460, 462, 469, 471, 472, 489, 541, 548, 553, 554, 555, 561, 568, 573, 575, 576, 577, 578, 582, 586, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 599, 600, 601, 603, 607, 608, 609, 610, 612, 615, 616, 618, 619, 620, 621, 622, 626, 628, 630, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646], "python": [0, 29, 377, 581, 583, 584, 585, 587, 588, 589, 592, 595, 596, 598, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 636, 637, 638, 640, 641, 642, 643, 646], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 416, 417, 423, 434, 435, 436, 437, 438, 439, 440, 443, 444, 448, 460, 489, 548, 563, 564, 573, 579, 584, 585, 587, 588, 593, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 640, 643, 646], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 457, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 477, 489, 492, 534, 535, 536, 537, 538, 539, 549, 550, 551, 552, 553, 554, 555, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 577, 578, 581, 583, 584, 589, 590, 624, 630, 637, 638, 640, 642, 643, 644], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 121, 122, 124, 125, 161, 162, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 386, 387, 397, 398, 418, 477, 544, 545, 546, 547, 549, 550, 551, 552, 561, 566, 583, 584, 585, 588, 589, 590, 600, 601, 604, 634, 636, 638, 640, 644], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 127, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 198, 199, 200, 201, 203, 218, 233, 241, 244, 249, 256, 263, 278, 292, 307, 317, 325, 340, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 386, 387, 390, 393, 397, 398, 403, 405, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 441, 442, 444, 445, 446, 447, 448, 449, 456, 457, 461, 462, 463, 465, 466, 467, 469, 477, 486, 514, 532, 536, 537, 538, 539, 541, 561, 563, 564, 565, 568, 569, 572, 575, 577, 578, 581, 582, 584, 585, 587, 589, 590, 600, 604, 611, 612, 616, 617, 618, 619, 620, 621, 622, 623, 624, 628, 630, 631, 634, 635, 636, 640, 641, 644], "sy": 0, "stdout": [0, 62, 477], "descript": [1, 16, 18, 30, 126, 168, 169, 202, 359, 380, 404, 415, 447, 548, 573, 585, 590, 592, 634, 644], "addit": [1, 2, 7, 8, 12, 14, 19, 160, 161, 162, 164, 216, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 358, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 405, 412, 414, 423, 565, 581, 583, 584, 589, 592, 598, 600, 627, 630, 634], "class": [1, 18, 19, 30, 31, 41, 45, 74, 126, 127, 169, 170, 202, 203, 233, 244, 249, 263, 292, 317, 325, 380, 381, 394, 404, 405, 406, 408, 413, 436, 447, 448, 458, 460, 489, 579, 583, 584, 585, 589, 590, 634, 640, 641, 644], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 126, 164, 165, 169, 198, 199, 200, 201, 202, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 276, 277, 284, 288, 289, 292, 305, 306, 316, 321, 322, 325, 338, 339, 349, 354, 355, 358, 359, 361, 364, 367, 368, 374, 377, 404, 405, 409, 410, 411, 413, 414, 415, 418, 423, 437, 439, 445, 447, 471, 548, 564, 565, 568, 572, 573, 578, 579, 584, 585, 589, 590, 609, 628, 630, 634, 638, 640, 642, 643, 644], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 127, 141, 142, 170, 184, 185, 217, 228, 277, 288, 306, 321, 339, 354, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 581, 587, 589, 595, 596, 598, 599, 602, 604, 605, 606, 609, 610, 611, 612, 615, 617, 620, 621, 623, 624, 625, 628, 629, 630, 631, 632, 634, 636, 637, 638, 640, 641, 642], "write": [1, 15, 359, 375, 376, 377, 378, 379, 447, 458, 588, 589, 598, 599, 637], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 131, 140, 152, 158, 159, 160, 161, 162, 174, 183, 195, 203, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 258, 260, 262, 263, 277, 279, 284, 287, 288, 289, 292, 306, 308, 316, 317, 320, 321, 322, 325, 339, 341, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 404, 405, 412, 414, 418, 424, 427, 432, 437, 438, 439, 441, 442, 443, 446, 448, 449, 460, 461, 462, 465, 466, 467, 469, 470, 471, 472, 473, 482, 483, 485, 489, 510, 511, 513, 535, 541, 565, 575, 578, 589, 590, 595, 596, 598, 599, 602, 604, 605, 606, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621, 623, 625, 627, 628, 630, 632, 634, 635, 636, 637, 638, 642, 644], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 163, 164, 166, 167, 216, 220, 224, 225, 227, 228, 229, 230, 242, 276, 280, 284, 285, 287, 288, 289, 305, 309, 316, 317, 318, 320, 321, 322, 338, 342, 349, 350, 351, 353, 354, 355, 359, 364, 371, 377, 378, 412, 413, 414, 421, 435, 437, 439, 448, 460, 466, 467, 469, 470, 471, 472, 473, 489, 536, 537, 538, 539, 561, 578, 581, 584, 585, 587, 590, 592, 593, 609, 611, 634, 642, 644], "format": [1, 12, 13, 39, 40, 45, 74, 205, 207, 217, 219, 224, 227, 228, 229, 230, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 359, 361, 370, 372, 374, 375, 376, 378, 456, 457, 460, 489, 581, 583, 584, 585, 589, 592, 621, 634, 636], "These": [1, 29, 127, 160, 170, 255, 377, 414, 583, 590, 600, 609, 630, 634, 641, 643, 644], "auxiliari": 1, "input": [1, 166, 167, 377, 435, 436, 439, 565, 581, 583, 630, 641], "output": [1, 13, 62, 159, 377, 418, 436, 477, 562, 582, 584, 587, 589, 634], "routin": [1, 12, 169, 375, 413, 589, 634], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 122, 125, 140, 152, 155, 156, 157, 160, 161, 162, 164, 165, 167, 169, 183, 195, 198, 199, 200, 201, 202, 217, 223, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 277, 283, 284, 288, 289, 306, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 345, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 383, 411, 412, 413, 414, 417, 418, 423, 425, 426, 427, 429, 430, 437, 439, 443, 448, 460, 471, 473, 489, 537, 538, 539, 554, 555, 561, 562, 566, 567, 574, 578, 581, 582, 583, 584, 585, 587, 588, 589, 590, 592, 596, 598, 600, 601, 604, 609, 611, 612, 620, 623, 628, 630, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646], "well": [1, 163, 165, 198, 199, 200, 201, 350, 369, 371, 414, 581, 583, 589, 590, 601, 610, 634, 640, 641], "polish": 1, "those": [1, 48, 55, 141, 142, 161, 162, 184, 185, 373, 413, 463, 470, 579, 585, 587, 646], "io": [1, 127, 170, 412, 581, 582, 583, 584, 585, 587, 589, 590, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634, 637, 638, 640, 641, 642, 643, 644, 646], "thei": [1, 4, 58, 131, 133, 140, 160, 161, 162, 164, 174, 176, 183, 350, 365, 373, 379, 437, 473, 585, 587, 590, 630, 644], "mai": [1, 29, 131, 133, 140, 147, 152, 160, 161, 174, 176, 183, 190, 195, 292, 325, 369, 371, 377, 381, 414, 439, 548, 585, 587, 592, 630, 634], "requir": [1, 31, 45, 74, 121, 123, 124, 160, 163, 164, 373, 377, 414, 445, 448, 460, 489, 561, 581, 582, 589, 590, 601, 634, 644, 646], "depend": [1, 156, 157, 414, 426, 581, 585, 589, 590, 592, 644], "beyond": [1, 643], "standard": [1, 40, 45, 62, 74, 119, 120, 160, 375, 376, 377, 418, 438, 457, 460, 477, 489, 551, 552, 567, 581, 585, 589, 590, 636, 637, 638, 644], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 416, 417, 423, 434, 435, 436, 437, 438, 439, 440, 443, 444, 448, 460, 489, 548, 563, 564, 573, 579, 585, 587, 593, 595, 596, 598, 599, 600, 601, 608, 609, 611, 628, 635, 636, 637, 638, 640, 643, 646], "instal": [1, 10, 121, 123, 124, 163, 164, 377, 584, 587, 589, 592, 645, 646], "non": [1, 121, 123, 124, 162, 373, 375, 423, 437, 439, 585, 589, 630], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 202, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 436, 437, 438, 439, 440, 443, 444, 448, 449, 460, 461, 462, 464, 469, 477, 489, 492, 535, 548, 565, 573, 577, 581, 584, 585, 587, 588, 589, 600, 637, 642], "support": [1, 244, 317, 350, 361, 368, 369, 370, 371, 372, 380, 381, 405, 437, 583, 585, 587, 589, 590, 620, 634, 636, 637, 638, 640, 641, 642, 643], "fulli": [1, 367, 587, 643], "test": [1, 12, 160, 364, 369, 371, 381, 582, 585, 589, 591, 592, 595, 596, 604, 605, 606, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 634, 636], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 127, 130, 137, 140, 144, 149, 152, 160, 161, 162, 164, 165, 166, 167, 170, 173, 180, 183, 187, 192, 195, 200, 217, 223, 224, 227, 228, 229, 230, 244, 277, 283, 284, 287, 288, 289, 306, 312, 316, 317, 320, 321, 322, 339, 345, 349, 350, 353, 354, 355, 358, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 382, 394, 395, 412, 413, 414, 417, 423, 432, 435, 437, 439, 448, 450, 460, 463, 471, 472, 489, 561, 579, 581, 582, 583, 584, 585, 586, 589, 590, 592, 598, 609, 628, 629, 630, 632, 634, 642, 644, 646], "pleas": [1, 56, 292, 325, 471, 581, 582, 585, 587, 590, 634, 636, 637, 638, 640, 641, 642, 644], "your": [1, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 583, 584, 585, 588, 590, 592, 598, 608, 610, 626, 630, 634, 643, 644, 646], "own": [1, 12, 584, 592, 609, 634, 643], "risk": [1, 583], "bug": [1, 584, 590, 593, 634, 643, 644], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 127, 131, 141, 142, 159, 160, 161, 162, 167, 170, 174, 184, 185, 203, 243, 257, 317, 350, 358, 359, 360, 373, 376, 378, 379, 413, 414, 423, 437, 438, 439, 441, 443, 445, 446, 448, 460, 462, 469, 489, 561, 585, 588, 589, 590, 592, 609, 630, 634, 643, 644, 646], "fix": [1, 581, 584, 590, 591, 593, 598, 599, 602, 623, 636, 643, 644, 646], "them": [1, 4, 5, 6, 56, 160, 161, 162, 163, 233, 249, 317, 350, 364, 373, 414, 471, 584, 590, 592, 609, 634, 644, 646], "prioriti": [1, 646], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 205, 237, 250, 265, 294, 317, 327, 350, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 457, 581, 582, 583, 585, 589, 590, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 644], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 158, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 449, 461, 462, 464, 469, 485, 492, 513, 575, 604, 640], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 129, 131, 133, 139, 140, 141, 142, 143, 145, 147, 152, 153, 155, 160, 161, 162, 166, 167, 170, 172, 174, 176, 182, 183, 184, 185, 186, 188, 190, 195, 196, 205, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 277, 279, 284, 287, 288, 289, 294, 306, 308, 316, 317, 320, 321, 322, 327, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 413, 414, 417, 423, 426, 429, 437, 438, 439, 441, 449, 450, 457, 458, 461, 462, 463, 466, 467, 469, 471, 472, 473, 546, 547, 556, 557, 558, 559, 560, 568, 578, 581, 583, 584, 585, 587, 589, 590, 611, 618, 620, 621, 623, 630, 636, 637, 641, 642, 644], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 463, 589], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 160, 161, 162, 216, 217, 218, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 276, 277, 278, 284, 288, 289, 305, 306, 307, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 340, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 412, 413, 414, 437, 556, 557, 558, 559, 560, 584, 585, 589], "d3r": [2, 589], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 362, 363, 364, 366, 370, 375, 376, 432, 457, 556, 559, 581, 589, 634, 635], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 40, 45, 46, 47, 49, 54, 74, 77, 121, 123, 124, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 443, 444, 448, 449, 457, 460, 461, 462, 464, 469, 489, 492, 535, 565, 573, 575, 577, 583, 585, 587, 589], "odim_h5": [2, 8, 589], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 121, 123, 124, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 203, 263, 292, 317, 325, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 381, 413, 414, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 436, 437, 438, 439, 440, 442, 443, 444, 448, 449, 451, 456, 460, 461, 489, 573, 581, 585, 636], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 122, 123, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 170, 174, 176, 183, 190, 195, 217, 224, 228, 229, 230, 232, 242, 244, 246, 248, 255, 258, 260, 262, 277, 284, 288, 289, 291, 306, 314, 315, 316, 317, 318, 321, 322, 324, 339, 347, 348, 349, 350, 354, 355, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 443, 444, 446, 448, 449, 450, 457, 460, 461, 462, 463, 466, 467, 469, 471, 472, 477, 489, 554, 555, 561, 568, 573, 577, 578, 584, 585, 589, 630, 642], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 121, 123, 124, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 385, 412, 413, 414, 416, 417, 423, 425, 426, 427, 428, 429, 430, 431, 440, 442, 443, 444, 448, 449, 460, 461, 462, 464, 489, 492, 534, 573, 601, 637, 642], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 122, 125, 222, 244, 255, 282, 292, 311, 313, 314, 315, 317, 318, 325, 344, 346, 347, 348, 350, 351, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 392, 402, 418, 440, 448, 460, 489, 581, 583, 584, 585, 587, 589, 590, 604, 607, 608, 610, 611, 626, 628, 630, 634, 635, 644], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 217, 218, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 276, 277, 278, 279, 284, 287, 288, 289, 292, 293, 294, 295, 296, 297, 302, 305, 306, 307, 308, 316, 317, 320, 321, 322, 325, 326, 327, 328, 329, 330, 335, 338, 339, 340, 341, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 456, 460, 461, 462, 463, 464, 469, 472, 485, 489, 492, 513, 536, 537, 538, 539, 541, 544, 545, 546, 547, 553, 564, 565, 573, 575, 576, 577, 581, 583, 584, 585, 587, 589, 590, 595, 598, 600, 604, 605, 606, 609, 610, 612, 623, 627, 628, 629, 630, 631, 634, 635, 636, 638, 640, 641, 642, 644], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 126, 127, 140, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 202, 203, 216, 217, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 276, 277, 282, 284, 288, 289, 292, 305, 306, 311, 314, 316, 317, 321, 322, 325, 338, 339, 344, 347, 349, 350, 354, 355, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 404, 405, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 456, 489, 532, 537, 538, 539, 541, 544, 545, 546, 547, 554, 555, 558, 560, 562, 563, 564, 565, 568, 569, 573, 574, 575, 576, 577, 578, 581, 582, 585, 587, 589, 594, 595, 596, 598, 599, 600, 601, 603, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 629, 630, 631, 632, 633, 635, 636, 638, 640, 641, 645], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 121, 123, 124, 140, 152, 158, 160, 163, 164, 165, 183, 195, 199, 200, 205, 207, 217, 218, 223, 224, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 283, 284, 288, 289, 294, 296, 306, 307, 312, 315, 316, 317, 321, 322, 327, 329, 339, 340, 345, 348, 349, 350, 354, 355, 358, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 388, 392, 399, 402, 414, 423, 425, 426, 427, 429, 430, 432, 437, 438, 439, 440, 443, 448, 449, 460, 462, 463, 464, 471, 489, 492, 554, 555, 561, 575, 582, 584, 585, 586, 587, 590, 592, 630, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 161, 162, 203, 263, 292, 325, 361, 365, 367, 368, 369, 370, 372, 373, 374, 378, 379, 426, 437, 460, 489, 532, 582, 585, 589, 590, 634, 642, 644], "found": [2, 7, 8, 12, 14, 29, 163, 361, 365, 367, 368, 369, 370, 372, 373, 374, 388, 399, 412, 413, 414, 418, 432, 581, 583, 585, 587, 589, 590, 592, 601, 634, 643, 644, 646], "doe": [2, 7, 8, 12, 14, 49, 77, 121, 123, 124, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 464, 492, 578, 583, 585, 589, 590, 592, 621, 636, 643, 644, 646], "appear": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 568, 585], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 159, 160, 205, 237, 249, 250, 265, 294, 325, 327, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 385, 392, 402, 404, 426, 429, 430, 460, 489, 541, 561, 577, 582, 584, 585, 587, 590, 592, 600, 609, 630, 634, 640, 642, 643, 644, 646], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 121, 122, 123, 124, 125, 127, 129, 131, 132, 133, 135, 138, 140, 143, 145, 146, 147, 150, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 178, 181, 183, 186, 188, 189, 190, 193, 195, 197, 198, 199, 200, 201, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 306, 307, 308, 310, 313, 314, 315, 316, 317, 319, 320, 321, 322, 339, 340, 341, 343, 346, 347, 348, 349, 350, 352, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 394, 399, 400, 413, 414, 417, 418, 421, 423, 426, 429, 430, 434, 436, 437, 438, 439, 443, 445, 448, 460, 463, 489, 537, 538, 539, 553, 561, 565, 566, 567, 581, 583, 584, 585, 589, 590, 601, 604, 609, 612, 628, 629, 630, 637, 638, 641, 644], "place": [2, 7, 8, 12, 14, 218, 222, 223, 241, 243, 256, 257, 278, 282, 283, 307, 311, 312, 340, 344, 345, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 578, 589, 640, 643], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 122, 125, 127, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 198, 199, 200, 201, 203, 233, 242, 249, 263, 292, 315, 325, 348, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 380, 381, 394, 412, 413, 414, 417, 418, 423, 425, 436, 437, 438, 439, 441, 443, 444, 445, 446, 448, 460, 462, 489, 565, 581, 585, 589, 590, 612, 630, 634, 644], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 224, 227, 228, 229, 230, 232, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 284, 287, 288, 289, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 316, 317, 320, 321, 322, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 349, 350, 353, 354, 355, 357, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 384, 396, 414, 416, 418, 423, 426, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 448, 460, 466, 467, 469, 471, 472, 477, 489, 537, 538, 539, 561, 573, 582, 583, 589, 590, 620, 621, 630, 634, 643, 644, 646], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 121, 123, 124, 155, 156, 157, 160, 163, 165, 166, 167, 198, 199, 200, 201, 222, 223, 227, 282, 283, 287, 311, 312, 320, 344, 345, 353, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 379, 413, 414, 417, 436, 437, 443, 448, 460, 489, 553, 581, 584, 585, 588, 589, 610, 611, 628, 630], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 416, 423, 436, 437, 438, 439, 440, 443, 444, 573, 581, 582, 585, 587, 589, 590, 600, 604, 629, 644], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 448, 466, 467, 469, 470, 471, 472, 473, 589, 590, 629, 630, 631, 632, 638, 644], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 155, 156, 157, 160, 161, 162, 166, 167, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 416, 418, 437, 438, 439, 440, 444, 448, 449, 460, 461, 462, 489, 534, 536, 541, 573, 588, 589, 601, 618, 619, 623, 642], "dure": [2, 7, 8, 12, 14, 19, 140, 152, 159, 160, 161, 162, 183, 195, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 423, 431, 437, 443, 581, 643, 646], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 121, 122, 123, 124, 125, 129, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 172, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 199, 200, 205, 207, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 279, 282, 283, 284, 287, 288, 289, 292, 294, 296, 306, 307, 308, 311, 312, 316, 317, 320, 321, 322, 325, 327, 329, 339, 340, 341, 344, 345, 349, 350, 353, 354, 355, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 392, 394, 399, 400, 402, 405, 412, 413, 414, 417, 418, 423, 425, 426, 429, 430, 432, 436, 437, 438, 439, 443, 445, 448, 449, 450, 460, 462, 463, 470, 471, 472, 473, 477, 489, 541, 553, 554, 555, 561, 562, 565, 568, 574, 575, 577, 578, 579, 581, 583, 584, 585, 586, 587, 588, 589, 590, 592, 595, 600, 601, 604, 609, 610, 611, 612, 615, 620, 621, 628, 630, 636, 637, 638, 640, 641, 642, 643, 644, 646], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 131, 133, 140, 141, 142, 147, 152, 155, 156, 157, 160, 161, 162, 163, 165, 166, 167, 174, 176, 183, 184, 185, 190, 195, 199, 200, 292, 325, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 414, 418, 436, 461, 462, 536, 578, 582, 586, 593, 636], "success": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 592], "unless": [2, 7, 8, 12, 14, 58, 121, 123, 124, 162, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 473, 585], "explicitli": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 127, 131, 133, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 169, 170, 174, 176, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 413, 414, 435, 445, 460, 465, 471, 472, 489, 582, 584, 585, 587, 588, 589, 590, 592, 600, 604, 623, 634, 641, 643, 644], "introduct": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 590, 644], "specif": [2, 7, 8, 12, 14, 140, 152, 155, 156, 157, 183, 195, 325, 350, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 414, 425, 426, 427, 429, 430, 432, 436, 437, 438, 439, 565, 583, 585, 589, 590, 595, 609, 630, 634, 644, 646], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 121, 123, 124, 131, 133, 147, 160, 161, 162, 169, 174, 176, 190, 217, 219, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 277, 279, 284, 288, 289, 306, 308, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 346, 347, 348, 349, 350, 351, 354, 355, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 388, 399, 405, 413, 414, 437, 438, 439, 448, 460, 463, 471, 472, 489, 573, 577, 583, 584, 585, 589, 596, 600, 640, 641, 643], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 131, 133, 140, 147, 152, 155, 160, 161, 162, 166, 167, 170, 174, 176, 183, 190, 195, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 412, 414, 417, 423, 426, 429, 430, 437, 438, 439, 441, 443, 449, 450, 457, 461, 462, 463, 466, 467, 469, 471, 472, 473, 568, 578, 585], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 123, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 412, 413, 414, 417, 423, 426, 429, 430, 437, 438, 439, 443, 448, 449, 450, 457, 458, 460, 461, 462, 463, 466, 467, 469, 471, 472, 473, 489, 546, 547, 568, 578, 581, 582, 583, 584, 585, 587, 589, 590, 611, 618, 619, 620, 621, 630, 632, 637, 638, 642, 644], "mdv": [2, 8, 12, 14, 367, 368, 378, 582, 589, 596, 598, 605, 608, 626, 634, 638, 640], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 121, 123, 124, 140, 152, 160, 162, 183, 195, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 583, 584, 585, 587, 589, 590, 600, 601, 604, 621, 644], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 417, 581, 582, 583, 584, 585, 587, 589, 595, 604], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 122, 125, 155, 156, 157, 158, 160, 161, 162, 163, 198, 201, 222, 242, 282, 311, 344, 350, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 405, 406, 407, 408, 412, 413, 414, 417, 418, 421, 422, 423, 434, 436, 437, 438, 439, 443, 445, 448, 460, 489, 535, 548, 549, 550, 553, 561, 566, 567, 573, 575, 577, 581, 582, 583, 584, 589, 592, 598, 601, 612, 623, 630, 635, 638, 641, 643], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 141, 142, 155, 156, 157, 159, 160, 162, 166, 167, 184, 185, 217, 228, 244, 277, 288, 306, 317, 321, 339, 350, 354, 361, 365, 367, 368, 369, 370, 371, 372, 373, 414, 437, 445, 465, 471, 472, 554, 555, 568, 575, 581, 582, 583, 585, 587, 589, 590, 593, 604, 611, 621, 630, 637, 638, 640, 644], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 131, 133, 140, 147, 152, 155, 156, 157, 160, 174, 176, 183, 190, 195, 217, 228, 249, 277, 288, 306, 317, 321, 339, 354, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 423, 434, 450, 460, 463, 471, 489, 581, 583, 584, 585, 586, 587, 589, 590, 600, 601, 628, 630, 634, 640, 643, 644, 645, 646], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 121, 123, 124, 160, 161, 162, 317, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 383, 385, 388, 389, 390, 392, 394, 399, 400, 402, 413, 414, 432, 448, 449, 460, 461, 462, 489, 541, 583, 585, 636, 637, 641], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 203, 219, 223, 226, 249, 263, 279, 283, 286, 292, 308, 312, 319, 325, 341, 345, 352, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 407, 414, 432, 435, 463, 554, 555, 563, 584, 585, 587, 588, 589, 590, 592, 600, 634, 644, 645], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 149, 152, 155, 156, 157, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 192, 195, 198, 199, 200, 201, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 437, 438, 439, 441, 445, 446, 463, 596, 605, 641], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 158, 161, 162, 164, 165, 166, 167, 199, 200, 217, 218, 224, 227, 228, 229, 230, 241, 256, 277, 278, 284, 287, 288, 289, 306, 307, 316, 317, 320, 321, 322, 339, 340, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 405, 412, 414, 418, 423, 426, 460, 463, 489, 561, 583, 584, 585, 587, 589, 600, 609, 620, 630, 638], "after": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 437, 581, 583, 585, 589, 590, 592, 601, 630, 643, 644, 646], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 231, 232, 242, 244, 277, 279, 284, 287, 288, 289, 290, 291, 306, 308, 316, 317, 320, 321, 322, 323, 324, 339, 341, 349, 350, 353, 354, 355, 356, 357, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 386, 387, 390, 391, 397, 398, 401, 414, 425, 426, 427, 429, 430, 437, 438, 439, 448, 460, 471, 472, 473, 489, 537, 538, 539, 546, 547, 553, 570, 571, 582, 583, 589, 590, 601, 604, 610, 617, 620, 621, 624, 625, 630, 634, 638, 643, 644, 645], "you": [2, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 581, 584, 585, 586, 587, 588, 590, 592, 600, 630, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646], "want": [2, 582, 584, 585, 587, 590, 601, 634, 641, 642, 644, 646], "altitud": [2, 31, 45, 56, 74, 166, 167, 203, 414, 418, 443, 448, 460, 471, 489, 562, 574, 581, 584, 589, 621, 632, 636, 640, 642], "provid": [2, 6, 45, 48, 74, 160, 202, 223, 283, 312, 317, 345, 363, 364, 365, 370, 373, 377, 378, 379, 381, 386, 387, 393, 394, 397, 398, 403, 405, 460, 463, 489, 565, 573, 579, 581, 584, 585, 587, 588, 590, 601, 628, 630, 634, 641, 643, 644], "np": [2, 405, 421, 446, 572, 581, 583, 584, 585, 587, 589, 590, 604, 605, 609, 612, 617, 620, 621, 623, 628, 630, 631, 632, 636, 637, 638, 640, 641, 642, 644], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 164, 170, 174, 176, 183, 184, 185, 190, 195, 203, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 288, 289, 292, 306, 307, 308, 313, 314, 316, 317, 321, 322, 325, 339, 340, 341, 346, 347, 349, 350, 354, 355, 405, 413, 414, 421, 423, 424, 436, 438, 439, 440, 445, 446, 448, 450, 456, 462, 466, 467, 469, 470, 471, 472, 473, 549, 550, 551, 552, 553, 559, 560, 561, 566, 567, 570, 571, 572, 581, 585, 589, 590, 604, 617, 630, 632, 636, 637, 638, 640, 641, 642, 644], "295": [2, 589], "dtype": [2, 412, 414, 581, 584, 585, 589, 636, 638, 642], "float64": [2, 413, 414, 581, 584, 628, 642], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 128, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 198, 199, 200, 201, 204, 205, 206, 207, 208, 237, 238, 239, 240, 250, 251, 252, 253, 264, 265, 266, 267, 268, 293, 294, 295, 296, 297, 326, 327, 328, 329, 330, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 388, 389, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 482, 483, 484, 485, 486, 487, 488, 502, 503, 504, 505, 510, 511, 512, 513, 514, 515, 516, 532, 534, 535, 536, 537, 538, 539, 541, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 573, 574, 575, 577, 581, 583, 584, 585, 589, 590, 628, 630, 637, 640, 642, 644], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 232, 277, 284, 287, 288, 289, 291, 306, 316, 317, 320, 321, 322, 324, 339, 349, 350, 353, 354, 355, 357, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 394, 412, 413, 414, 416, 417, 418, 423, 425, 426, 427, 428, 429, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 449, 450, 460, 461, 465, 466, 467, 469, 470, 471, 472, 473, 489, 553, 554, 555, 564, 573, 575, 578, 581, 582, 585, 589, 590, 601, 613, 614, 634, 636, 637, 640, 642, 643, 644, 646], "edg": [3, 33, 57, 120, 123, 160, 161, 162, 163, 164, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 435, 439, 450, 472, 583, 584, 585, 620, 621, 630], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 379, 584, 589], "gamic": [4, 589], "hdf5": [4, 8, 589, 634], "unlik": [4, 5, 6, 364], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 160, 161, 162, 163, 164, 165, 200, 217, 219, 224, 227, 228, 229, 230, 244, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 366, 369, 371, 373, 377, 405, 414, 423, 441, 445, 448, 456, 460, 489, 537, 538, 539, 583, 584, 585, 590, 630, 634, 636, 643, 644, 646], "still": [4, 5, 6, 160, 292, 325, 364, 379, 414, 568, 587, 589, 590, 600, 644], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 218, 222, 223, 224, 227, 228, 229, 230, 233, 241, 244, 246, 248, 249, 255, 256, 258, 260, 262, 277, 278, 282, 283, 284, 287, 288, 289, 306, 307, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 360, 361, 363, 364, 369, 370, 373, 374, 376, 377, 378, 379, 381, 409, 410, 411, 412, 413, 414, 416, 417, 432, 436, 437, 438, 439, 443, 444, 445, 448, 450, 460, 465, 469, 482, 483, 485, 486, 489, 510, 511, 513, 514, 553, 554, 555, 561, 563, 564, 565, 566, 567, 573, 577, 581, 582, 583, 584, 585, 587, 589, 590, 592, 596, 600, 601, 604, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 628, 634, 638, 640, 642, 643, 644], "renam": [4, 5, 6, 29, 364, 374, 589], "uniform": [4, 5, 6, 58, 161, 162, 364, 372, 417, 473, 589, 609, 612, 634, 636], "forc": [4, 5, 6, 364, 374, 417, 585, 589], "extract": [4, 217, 277, 306, 339, 373, 432, 554, 555, 564, 587, 589, 598, 604, 625, 627, 630, 633, 634], "valid": [4, 31, 45, 74, 154, 155, 160, 197, 218, 241, 256, 278, 307, 340, 369, 378, 379, 414, 448, 460, 489, 554, 555, 561, 589, 590, 644], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 157, 203, 217, 219, 224, 225, 226, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 263, 277, 279, 284, 285, 286, 288, 289, 292, 306, 308, 316, 317, 318, 319, 321, 322, 325, 339, 341, 349, 350, 351, 352, 354, 355, 372, 421, 437, 439, 460, 470, 472, 489, 575, 581, 583, 584, 585, 589, 609, 614, 617, 623, 632, 636, 642], "valid_min": [4, 160, 161, 162, 365, 589, 630, 642], "valid_max": [4, 160, 161, 162, 365, 630, 642], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 166, 167, 174, 176, 183, 184, 185, 190, 195, 217, 224, 228, 229, 230, 244, 249, 277, 284, 288, 289, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 369, 370, 372, 373, 375, 379, 381, 405, 414, 417, 426, 429, 430, 437, 438, 439, 445, 447, 448, 460, 461, 462, 466, 467, 469, 471, 472, 489, 561, 582, 583, 584, 587, 589, 590, 591, 592, 593, 609, 630, 634, 637, 638, 641, 643, 644, 646], "present": [4, 29, 31, 45, 74, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 392, 402, 414, 448, 460, 489, 585, 636, 641], "unit": [4, 55, 121, 122, 123, 124, 125, 161, 162, 209, 212, 213, 214, 215, 222, 242, 269, 272, 273, 274, 275, 282, 298, 301, 302, 303, 304, 311, 331, 334, 335, 336, 337, 344, 365, 367, 434, 447, 470, 541, 561, 581, 585, 587, 589, 590, 591, 618, 623, 630, 634, 637, 642, 644], "avail": [4, 16, 45, 56, 57, 58, 74, 140, 152, 155, 156, 157, 164, 183, 195, 202, 242, 244, 246, 248, 258, 260, 262, 367, 377, 460, 471, 472, 473, 489, 581, 583, 584, 585, 589, 592, 598, 600, 609, 634], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 122, 125, 436, 445, 446, 581, 583, 584, 585, 586, 587, 589, 590, 601, 632, 636, 637, 638, 640, 641, 642, 644], "k": [5, 125, 221, 222, 223, 225, 226, 227, 281, 282, 283, 285, 286, 287, 310, 311, 312, 318, 319, 320, 343, 344, 345, 351, 352, 353, 384, 388, 389, 391, 392, 396, 399, 400, 401, 402, 437, 445, 583, 587, 590, 610, 617, 620, 621, 644], "band": [5, 9, 155, 157, 159, 377, 425, 427, 433, 437, 438, 439, 443, 581, 589], "arm": [5, 6, 40, 362, 363, 375, 376, 432, 457, 536, 541, 581, 583, 585, 587, 589, 592, 606, 621, 636, 637, 638, 640, 641, 642, 643, 646], "zenith": 5, "kazr": [5, 6, 589], "ingest": [5, 584, 589, 634, 635], "spectra": [6, 74, 117, 424, 442, 489, 532, 539, 545, 561, 589], "radar_spectra": 6, "delay_field_load": [6, 361, 364, 367, 368, 369, 372, 374], "delai": [6, 361, 364, 367, 368, 369, 372, 589], "load": [6, 29, 361, 364, 367, 368, 369, 372, 380, 381, 390, 589, 642], "until": [6, 29, 161, 361, 364, 367, 368, 369, 372, 592], "particular": [6, 361, 364, 367, 368, 369, 372, 414, 584, 592, 634], "access": [6, 19, 31, 45, 56, 57, 74, 141, 142, 184, 185, 361, 364, 367, 368, 369, 372, 381, 448, 460, 471, 472, 489, 535, 584, 600, 601, 640, 642], "In": [6, 121, 123, 124, 162, 164, 359, 361, 364, 367, 368, 369, 371, 372, 392, 402, 405, 418, 437, 446, 553, 581, 583, 584, 585, 587, 590, 595, 596, 601, 630, 634, 637, 638, 640, 641, 643, 644], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 140, 141, 142, 152, 160, 183, 184, 185, 195, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 367, 368, 369, 372, 375, 376, 379, 448, 451, 452, 453, 454, 460, 471, 472, 478, 479, 480, 481, 489, 506, 507, 508, 509, 581, 584, 585, 587, 628, 636, 642], "radarspectra": [6, 442, 539], "lazyloaddict": [6, 31, 45, 74, 361, 364, 367, 368, 369, 372, 448, 460, 489], "speedup": [6, 244, 317, 350, 364, 585, 589], "where": [6, 15, 56, 57, 119, 122, 125, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 165, 167, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 217, 224, 227, 228, 229, 230, 243, 257, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 358, 364, 418, 423, 440, 446, 471, 472, 554, 555, 562, 565, 577, 581, 582, 585, 587, 589, 600, 601, 604, 609, 612, 628, 630, 634, 637, 641, 646], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 284, 288, 289, 292, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 364, 369, 370, 371, 372, 405, 412, 413, 414, 437, 438, 439, 440, 441, 445, 446, 460, 470, 471, 472, 489, 537, 538, 539, 553, 563, 564, 581, 585, 589, 596, 601, 604, 605, 606, 610, 636, 638, 640, 641, 642], "vari": [6, 364, 367, 630], "between": [6, 33, 45, 56, 57, 74, 120, 122, 123, 140, 152, 160, 161, 163, 164, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 358, 364, 369, 372, 378, 379, 405, 423, 426, 450, 460, 471, 472, 489, 548, 574, 581, 583, 584, 585, 590, 592, 604, 610, 620, 630, 638, 640, 644, 646], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 140, 152, 155, 156, 157, 160, 161, 162, 164, 167, 183, 195, 199, 204, 206, 210, 211, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 264, 266, 270, 271, 277, 284, 287, 288, 289, 293, 295, 299, 300, 306, 316, 317, 320, 321, 322, 326, 328, 332, 333, 339, 349, 350, 353, 354, 355, 363, 364, 369, 372, 373, 405, 417, 421, 445, 460, 468, 471, 472, 473, 474, 475, 476, 489, 502, 503, 504, 505, 537, 538, 539, 541, 558, 560, 563, 577, 578, 584, 585, 590, 605, 636, 642, 644], "ngates_vari": [6, 364], "recommend": [6, 29, 45, 74, 160, 162, 350, 364, 373, 414, 423, 437, 460, 489, 553, 590, 592, 609, 634, 643, 644, 645, 646], "noxp": [7, 589], "iphex": [7, 589], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 317, 350, 369, 371, 432, 556, 559, 564, 581, 584, 585, 589, 600, 628, 631, 632, 634, 636], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 129, 131, 132, 133, 134, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 160, 165, 172, 174, 175, 176, 177, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 199, 200, 217, 222, 223, 242, 243, 245, 246, 247, 248, 257, 259, 260, 261, 262, 277, 282, 283, 306, 311, 312, 313, 314, 339, 344, 345, 346, 347, 388, 399, 405, 413, 414, 436, 440, 448, 450, 460, 466, 467, 468, 469, 472, 473, 474, 475, 476, 489, 502, 503, 504, 505, 534, 563, 564, 566, 567, 573, 581, 585, 628, 630, 634], "dataset1": 8, "dataset2": 8, "pattern": [9, 620], "project": [9, 16, 31, 34, 45, 74, 121, 122, 123, 124, 125, 222, 233, 244, 255, 282, 292, 311, 317, 344, 350, 367, 376, 377, 414, 448, 451, 460, 489, 581, 583, 585, 587, 589, 600, 601, 604, 610, 611, 617, 624, 628, 630, 634, 637, 638, 640, 641, 643], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 203, 212, 217, 219, 222, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 263, 272, 277, 279, 282, 284, 287, 288, 289, 291, 292, 301, 306, 308, 311, 314, 316, 320, 321, 322, 324, 325, 334, 339, 341, 344, 347, 349, 353, 354, 355, 357, 405, 409, 410, 411, 412, 413, 414, 423, 425, 433, 434, 435, 437, 438, 439, 443, 448, 454, 456, 472, 480, 508, 536, 581, 584, 585, 588, 589, 593, 604, 610, 611, 620, 621, 630, 640, 641, 642, 643], "radx_dir": 10, "first": [10, 45, 58, 74, 160, 162, 242, 362, 363, 372, 375, 405, 414, 423, 437, 438, 439, 443, 460, 473, 489, 556, 558, 570, 571, 581, 583, 584, 585, 587, 590, 592, 596, 600, 601, 614, 623, 628, 630, 638, 640, 641, 642, 644], "convert": [10, 13, 39, 423, 456, 568, 578, 581, 583, 585, 589, 630], "cf": [10, 13, 45, 74, 364, 375, 376, 432, 460, 489, 581, 582, 583, 584, 598, 608, 626, 634, 642], "radial": [10, 13, 45, 74, 160, 161, 364, 375, 417, 437, 460, 489, 553, 573, 582, 584, 585, 587, 589, 594, 598, 600, 608, 626, 634, 638, 642], "radxconvert": 10, "path": [10, 15, 156, 157, 162, 458, 535, 582, 583, 585, 587, 589, 590, 600, 601, 634, 643, 644], "radx": [10, 589], "grid": [11, 24, 45, 74, 202, 219, 221, 229, 233, 237, 243, 244, 245, 247, 249, 250, 255, 257, 258, 259, 261, 279, 281, 308, 310, 341, 343, 359, 366, 367, 376, 377, 378, 409, 410, 411, 412, 413, 414, 423, 434, 435, 443, 460, 489, 536, 540, 542, 543, 557, 575, 581, 585, 589, 598, 603, 607, 608, 611, 621, 624, 626, 630, 634, 635], "produc": [11, 163, 366, 375, 377, 381, 441, 446, 585, 587, 590, 634, 644], "radx2grid": 11, "within": [11, 29, 47, 48, 127, 160, 161, 162, 163, 167, 170, 202, 412, 413, 414, 417, 436, 462, 463, 548, 554, 555, 562, 564, 566, 567, 579, 583, 585, 586, 587, 589, 590, 600, 601, 611, 612, 634, 638, 640, 644, 646], "lrose": 11, "must": [11, 155, 156, 157, 160, 317, 363, 366, 367, 372, 378, 434, 437, 438, 439, 573, 585, 590, 630, 634, 643, 644], "been": [11, 12, 131, 133, 140, 147, 152, 159, 160, 174, 176, 183, 190, 195, 249, 325, 364, 366, 369, 370, 371, 373, 561, 582, 587, 590, 600, 630, 634, 640, 643, 644], "write_grid": [11, 366], "ident": [11, 161, 162, 366, 413], "layout": [11, 33, 366, 450, 589], "rainbow": 12, "rainbow5": [12, 589], "5": [12, 31, 155, 157, 160, 163, 164, 165, 166, 200, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 376, 413, 414, 423, 426, 436, 448, 568, 581, 582, 583, 584, 585, 587, 588, 590, 595, 596, 601, 609, 611, 612, 613, 614, 615, 616, 619, 620, 621, 622, 623, 624, 628, 629, 630, 631, 632, 636, 638, 641, 642, 644], "22": [12, 581, 583, 587, 589, 600, 609, 628], "3": [12, 45, 74, 119, 120, 160, 161, 198, 199, 201, 229, 367, 371, 377, 412, 414, 423, 460, 489, 536, 581, 582, 583, 584, 587, 588, 590, 595, 596, 598, 601, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 628, 629, 630, 631, 632, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646], "34": [12, 443, 581, 607, 630], "16": [12, 425, 445, 581, 582, 583, 585, 590, 595, 596, 604, 616, 622, 629, 638, 642, 644], "35": [12, 162, 166, 167, 581, 583, 584, 609, 618, 620, 621, 641], "1": [12, 31, 45, 55, 74, 119, 122, 125, 140, 160, 162, 166, 167, 183, 263, 364, 369, 370, 371, 376, 413, 414, 420, 423, 426, 436, 437, 439, 448, 460, 470, 489, 561, 572, 579, 581, 583, 584, 585, 587, 590, 592, 593, 595, 596, 600, 604, 605, 606, 609, 610, 611, 613, 614, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 630, 631, 632, 634, 636, 637, 638, 640, 641, 642, 644], "sinc": [12, 418, 437, 581, 583, 584, 585, 630, 637, 640, 642], "evolv": [12, 581], "constantli": 12, "guaranti": 12, "work": [12, 122, 125, 244, 292, 317, 325, 350, 369, 371, 443, 582, 583, 585, 587, 589, 590, 592, 593, 601, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646], "necessari": [12, 581], "user": [12, 29, 48, 156, 157, 163, 350, 377, 463, 577, 581, 584, 585, 587, 589, 590, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646], "adapt": [12, 119, 581, 646], "code": [12, 29, 160, 434, 445, 581, 583, 587, 589, 593, 595, 596, 598, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634, 643, 646], "accord": [12, 159, 373, 414, 420, 425, 426, 427, 429, 430], "its": [12, 437, 583, 584, 587, 589, 590, 592, 593, 634, 643, 644, 646], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 361, 372, 388, 389, 399, 400, 448, 449, 461, 462, 464, 473, 492, 584, 585, 589], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 135, 160, 161, 162, 163, 165, 166, 167, 178, 198, 199, 200, 201, 203, 222, 282, 311, 344, 350, 373, 376, 377, 393, 403, 405, 412, 413, 414, 432, 448, 456, 460, 462, 463, 466, 467, 473, 482, 483, 484, 485, 486, 487, 488, 489, 510, 511, 512, 513, 514, 515, 516, 534, 536, 537, 538, 539, 553, 555, 559, 560, 566, 567, 576, 578, 581, 582, 584, 585, 587, 589, 590, 592, 593, 598, 601, 604, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 622, 623, 624, 625, 626, 628, 630, 634, 636, 637, 638, 640, 641, 642, 643, 644, 645], "issu": [12, 29, 292, 325, 373, 376, 584, 588, 589, 590, 598, 599, 602, 634, 643, 644, 646], "upstream": [12, 582, 590, 592, 644], "reflect": [12, 47, 117, 127, 141, 142, 155, 156, 157, 158, 163, 165, 166, 167, 170, 184, 185, 199, 200, 219, 279, 308, 341, 358, 405, 416, 418, 421, 422, 423, 426, 428, 429, 430, 431, 436, 437, 443, 462, 532, 544, 546, 547, 565, 581, 582, 583, 587, 589, 594, 596, 597, 598, 600, 601, 604, 605, 606, 608, 609, 610, 611, 613, 616, 619, 622, 623, 625, 626, 627, 628, 630, 633, 634, 636, 637, 638, 640, 641, 642], "dbz": [12, 155, 159, 166, 167, 421, 422, 423, 443, 582, 584, 587, 600, 604, 611, 618, 619, 625, 630, 642], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 160, 161, 162, 417, 424, 434, 445, 446, 473, 532, 553, 573, 585, 587, 589, 590, 594, 597, 598, 600, 609, 613, 621, 623, 634, 635, 641, 642, 644], "v": [12, 41, 42, 44, 388, 389, 392, 399, 400, 402, 445, 446, 583, 590, 620, 621, 632, 644], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 561, 642], "width": [12, 243, 257, 317, 350, 414, 583, 584, 585, 587, 589, 642], "w": [12, 62, 162, 477, 581, 631], "wu": [12, 412, 640], "wv": 12, "wvu": 12, "differenti": [12, 17, 155, 156, 157, 166, 167, 199, 427, 430, 436, 437, 438, 439, 441, 444, 589, 613, 634], "zdr": [12, 156, 157, 159, 199, 419], "zdru": 12, "co": [12, 119, 122, 125, 423, 581, 583, 630], "polar": [12, 367, 368, 439, 584], "correl": [12, 165, 199, 200, 434, 436, 565, 587, 612, 613, 629, 630], "coeffici": [12, 155, 156, 157, 166, 167, 436, 565, 581, 589, 612, 613, 629], "rhohv": [12, 159, 165, 199, 200, 419, 420, 589, 612, 642], "rhohvu": 12, "phase": [12, 17, 155, 156, 157, 162, 166, 167, 199, 427, 430, 434, 436, 437, 438, 439, 441, 444, 589, 613, 634, 638], "phidp": [12, 156, 157, 166, 167, 199, 437, 589, 634], "uphidp": 12, "uphidpu": 12, "kdp": [12, 166, 167, 427, 430, 437, 438, 439, 589, 631, 634], "ukdp": 12, "ukdpu": 12, "signal": [12, 159, 165, 200, 416, 561, 584], "qualiti": [12, 159, 165, 200, 427, 438, 439, 581, 587, 600], "sqi": [12, 589], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 156, 157, 201, 436, 581, 631], "temp": [12, 589], "posit": [12, 45, 74, 122, 125, 156, 157, 160, 418, 437, 460, 489, 584, 589, 604, 609, 611, 642], "bin": [12, 45, 74, 119, 120, 157, 372, 424, 460, 489, 561, 581, 589, 604, 638, 642], "respect": [12, 45, 74, 423, 443, 460, 489, 585], "iso0": [12, 156, 198], "cfradial_outfil": 13, "head": [13, 45, 74, 203, 460, 489], "ridgelin": 13, "instrument": [13, 45, 74, 140, 152, 165, 183, 195, 199, 200, 379, 460, 489, 589, 638, 642], "rxm": [13, 589], "25": [13, 581, 583, 587, 589, 600, 604, 620, 621, 624, 628, 636, 641], "rli": 13, "here": [13, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 255, 581, 582, 583, 584, 585, 587, 588, 592, 604, 630, 634, 636, 641, 643, 646], "float": [13, 24, 58, 122, 125, 131, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 217, 219, 220, 224, 225, 227, 228, 229, 230, 242, 243, 244, 245, 246, 247, 248, 255, 257, 258, 259, 260, 261, 262, 263, 264, 277, 279, 280, 284, 285, 287, 288, 289, 292, 293, 306, 308, 309, 315, 316, 317, 318, 320, 321, 322, 325, 326, 339, 341, 342, 348, 349, 350, 351, 353, 354, 355, 358, 377, 405, 406, 408, 409, 410, 411, 412, 414, 416, 417, 421, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 437, 438, 439, 440, 441, 443, 473, 536, 549, 550, 551, 552, 553, 554, 555, 561, 562, 563, 564, 565, 566, 567, 568, 574, 575, 585], "offset": [13, 155, 166, 167, 203, 263, 292, 315, 325, 348, 423, 568, 581, 584, 585], "exist": [13, 28, 32, 46, 47, 49, 77, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 199, 200, 373, 437, 449, 458, 461, 462, 464, 492, 534, 578, 583, 584, 585, 589, 592, 595, 634, 636], "enter": [13, 582, 585, 590, 644], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 166, 167, 201, 203, 217, 222, 223, 242, 243, 245, 247, 255, 257, 259, 261, 263, 277, 282, 283, 292, 306, 311, 312, 315, 317, 325, 339, 344, 345, 348, 350, 445, 450, 470, 471, 550, 552, 554, 555, 562, 563, 564, 568, 571, 574, 583, 585, 589, 590, 625, 628, 642, 644], "sinarame_h5": [14, 15, 589], "take": [15, 47, 161, 413, 414, 416, 437, 462, 583, 584, 585, 590, 600, 601, 604, 611, 630, 644], "everi": [15, 438, 439, 591, 634], "one": [15, 25, 31, 39, 40, 45, 47, 74, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 200, 375, 376, 378, 405, 412, 413, 414, 418, 437, 438, 439, 445, 448, 456, 457, 460, 462, 489, 554, 555, 565, 569, 573, 582, 584, 585, 587, 588, 589, 590, 592, 598, 603, 604, 609, 634, 637, 642, 644, 646], "volum": [15, 45, 74, 160, 162, 163, 317, 350, 369, 370, 371, 379, 405, 432, 460, 489, 554, 555, 557, 575, 578, 581, 584, 585, 587, 589, 598, 608, 626], "folder": [15, 581, 590, 644], "cfradial": [15, 364, 582, 589, 598, 608, 609, 623, 625, 626, 636], "each": [15, 31, 39, 41, 45, 55, 74, 155, 156, 157, 161, 162, 163, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 373, 377, 379, 405, 412, 413, 414, 436, 445, 448, 456, 460, 470, 489, 537, 538, 539, 581, 584, 585, 589, 590, 600, 605, 620, 623, 630, 641, 642, 644], "act": [16, 426, 429, 430, 581, 589, 630, 636], "commun": [16, 581, 590, 634, 644, 646], "softwar": [16, 229, 370, 377, 585, 587, 590, 634, 636, 637, 638, 640, 641, 642, 643, 644], "namespac": [16, 589], "current": [16, 27, 33, 131, 133, 140, 147, 152, 160, 174, 176, 183, 190, 195, 205, 207, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 265, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 296, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 327, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 368, 406, 408, 437, 450, 581, 582, 584, 585, 587, 590, 644], "extens": [16, 205, 237, 250, 265, 294, 327, 377, 584, 592, 643], "wradlib": [16, 589, 634], "http": [16, 369, 370, 371, 418, 423, 427, 428, 434, 565, 581, 583, 585, 587, 590, 601, 612, 621, 630, 634, 643, 644, 646], "org": [16, 418, 423, 427, 428, 434, 565, 589, 590, 612, 630, 634, 644], "phidp_field": [17, 155, 156, 157, 166, 167, 437, 438, 439, 444, 595, 631], "phidp_texture_field": [17, 444], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 123, 127, 141, 142, 155, 156, 157, 165, 166, 167, 170, 184, 185, 198, 199, 200, 201, 203, 263, 292, 325, 413, 414, 416, 417, 423, 434, 441, 442, 444, 445, 446, 448, 450, 460, 471, 472, 489, 553, 561, 562, 563, 564, 574, 581, 589, 590, 595, 598, 604, 620, 621, 627, 630, 633, 634, 638, 641, 644], "textur": [17, 199, 417, 444, 553, 577, 589, 634, 638], "real": [17, 160, 444, 598, 608, 630, 646], "part": [17, 425, 444, 584, 585, 587, 589, 600, 634, 636, 637, 638, 640, 641, 642], "complex": [17, 444], "shift": [17, 166, 167, 203, 263, 292, 325, 435, 438, 444, 589, 638], "texture_field": [17, 444], "refer": [17, 31, 45, 47, 74, 119, 122, 125, 155, 156, 157, 159, 160, 161, 162, 166, 167, 369, 370, 371, 412, 418, 421, 423, 425, 427, 428, 431, 436, 437, 438, 439, 441, 443, 444, 445, 446, 448, 460, 462, 489, 561, 565, 582, 587, 589, 590, 634, 642, 644], "gourlei": [17, 159, 444], "j": [17, 122, 125, 162, 166, 167, 418, 423, 436, 438, 439, 441, 443, 444, 445, 446, 582, 585, 590, 595, 596, 605, 606, 613, 614, 616, 618, 622, 625, 630, 634, 644], "p": [17, 20, 22, 28, 119, 122, 125, 412, 425, 441, 444, 534, 561, 584, 590, 634, 644], "tabari": [17, 444], "parent": [17, 444], "du": [17, 444], "chatelet": [17, 444], "fuzzi": [17, 444], "logic": [17, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 444], "algorithm": [17, 127, 160, 161, 162, 170, 412, 414, 423, 437, 443, 444, 581, 589, 590, 594, 597, 598, 634, 644], "separ": [17, 434, 443, 444, 561, 565, 600, 612, 646], "precipit": [17, 427, 431, 436, 444, 565, 581, 583, 585, 589, 590, 604, 612, 630, 634, 644], "nonprecipit": [17, 444], "echo": [17, 423, 436, 444, 630, 641], "polarimetr": [17, 155, 156, 157, 159, 166, 167, 426, 427, 436, 441, 444, 589, 595], "observ": [17, 119, 423, 437, 444, 630], "journal": [17, 160, 162, 412, 425, 427, 444, 561, 590, 634, 644], "atmospher": [17, 45, 74, 119, 120, 160, 161, 414, 425, 440, 444, 460, 489, 581, 584, 585, 587, 590, 600, 634, 636, 637, 638, 640, 641, 642, 644], "ocean": [17, 160, 166, 167, 423, 425, 431, 441, 444, 581, 585, 600, 630], "technologi": [17, 160, 425, 444], "24": [17, 444, 581, 583, 589, 601, 632], "8": [17, 62, 155, 160, 166, 199, 242, 244, 246, 248, 258, 260, 262, 444, 477, 581, 583, 584, 585, 587, 592, 601, 604, 610, 620, 624, 628, 634, 636, 637, 638, 640, 641, 642], "1439": [17, 444], "1451": [17, 444], "filetyp": [19, 25, 585], "need": [19, 45, 54, 56, 57, 74, 377, 423, 460, 469, 471, 472, 489, 562, 574, 583, 584, 585, 588, 589, 590, 592, 600, 604, 609, 630, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646], "being": [19, 21, 160, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 414, 418, 439, 566, 567, 583, 585, 587, 589, 621, 643], "keep": [19, 160, 373, 575, 585, 590, 604, 630, 644, 646], "string": [19, 31, 45, 74, 219, 222, 223, 227, 230, 243, 257, 279, 282, 283, 287, 289, 308, 311, 312, 313, 314, 315, 318, 320, 322, 341, 344, 345, 346, 347, 348, 351, 353, 355, 413, 414, 432, 434, 438, 439, 441, 445, 446, 448, 460, 489, 583, 584, 585, 589, 590, 609, 644], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 127, 160, 161, 170, 203, 263, 292, 325, 381, 452, 453, 454, 478, 479, 480, 481, 506, 507, 508, 509, 585, 589, 611], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 131, 140, 141, 142, 152, 167, 174, 183, 184, 185, 195, 373, 437, 438, 439, 441, 445, 446, 448, 460, 484, 487, 488, 489, 512, 515, 516, 563, 581, 583, 585, 589, 600, 617], "dic": [22, 31, 45, 46, 74, 381, 448, 460, 461, 489], "colormap": [23, 202, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 584, 585, 589, 598, 608, 612, 626, 631], "select": [24, 50, 59, 88, 162, 465, 474, 503, 581, 584, 587, 589, 592], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 122, 125, 127, 152, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 170, 195, 198, 199, 200, 201, 203, 216, 217, 224, 227, 228, 229, 230, 231, 244, 258, 263, 276, 277, 284, 287, 288, 289, 290, 292, 305, 306, 315, 316, 317, 320, 321, 322, 323, 325, 338, 339, 348, 349, 350, 353, 354, 355, 356, 373, 377, 405, 413, 414, 416, 418, 423, 426, 428, 429, 430, 435, 436, 437, 438, 441, 443, 445, 446, 450, 460, 465, 466, 467, 469, 470, 471, 472, 473, 489, 568, 581, 582, 583, 584, 585, 587, 590, 592, 593, 595, 596, 597, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 636, 637, 638, 640, 641, 642, 643, 644], "limit": [24, 160, 161, 165, 166, 167, 198, 199, 200, 201, 219, 232, 255, 279, 291, 308, 324, 341, 357, 367, 378, 437, 575, 584, 585, 589, 605, 606, 610, 640], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 140, 152, 160, 161, 162, 164, 165, 183, 195, 199, 200, 205, 207, 216, 217, 219, 224, 228, 229, 230, 265, 267, 276, 277, 279, 284, 288, 289, 294, 296, 305, 306, 308, 316, 317, 321, 322, 327, 329, 338, 339, 341, 349, 350, 354, 355, 369, 370, 371, 373, 405, 417, 445, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 482, 483, 484, 485, 486, 487, 488, 489, 502, 503, 504, 505, 510, 511, 512, 513, 514, 515, 516, 537, 538, 554, 555, 581, 582, 584, 585, 587, 589, 596, 600, 604, 620, 621, 623, 628, 630, 632, 638, 641, 642], "get": [24, 234, 235, 236, 254, 381, 391, 401, 405, 581, 582, 584, 585, 587, 589, 590, 601, 620, 621, 630, 636, 638, 641, 642, 643, 644, 645, 646], "relat": [24, 157, 202, 378, 423, 426, 429, 430, 431, 438, 443, 584, 589, 590, 630, 634, 643, 644], "instac": 24, "nyquist": [24, 58, 160, 161, 162, 417, 473, 553, 589, 638, 642], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 140, 152, 157, 160, 161, 163, 164, 166, 167, 183, 195, 199, 205, 206, 207, 216, 220, 224, 225, 227, 228, 229, 237, 238, 239, 240, 242, 244, 250, 251, 252, 253, 255, 258, 265, 266, 267, 276, 280, 284, 285, 287, 288, 294, 295, 296, 305, 309, 316, 317, 318, 320, 321, 327, 328, 329, 338, 342, 349, 350, 351, 353, 354, 377, 414, 417, 421, 423, 437, 439, 445, 448, 450, 460, 466, 467, 469, 470, 471, 472, 473, 489, 537, 538, 539, 553, 561, 563, 577, 583, 585, 589, 590, 644], "consid": [24, 155, 163, 164, 358, 423, 554, 555, 561, 568, 630], "vmin": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 581, 582, 583, 584, 585, 587, 589, 595, 596, 600, 601, 604, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 637, 638, 640, 641], "vmax": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 581, 582, 583, 584, 585, 587, 589, 595, 596, 600, 601, 604, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 637, 638, 640, 641], "2": [24, 119, 122, 162, 163, 164, 199, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 308, 311, 312, 316, 319, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 352, 353, 354, 355, 357, 369, 370, 371, 373, 389, 400, 405, 412, 414, 423, 437, 445, 536, 565, 579, 581, 583, 584, 585, 587, 590, 593, 604, 610, 611, 614, 615, 617, 620, 621, 624, 625, 628, 630, 632, 634, 636, 637, 638, 640, 641, 642, 644], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 381, 414, 448, 462, 463, 465, 466, 467, 469, 578, 584, 588, 589, 637], "field_map": 25, "anoth": [25, 405, 565, 584, 585, 589, 604, 636, 641, 643, 646], "fill": [27, 155, 156, 157, 443, 585, 589, 636, 637], "empti": [28, 389, 400, 438, 439, 534, 536, 539, 582, 589, 636], "control": [29, 160, 373, 375, 376, 414, 437, 587, 640], "singl": [29, 161, 162, 163, 164, 222, 223, 225, 227, 282, 283, 285, 287, 311, 312, 318, 320, 344, 345, 351, 353, 377, 414, 541, 578, 581, 584, 585, 587, 589, 590, 598, 600, 603, 604, 607, 628, 644], "self": [29, 166, 167, 584, 585, 590, 637, 640, 644], "descrip": 29, "exampl": [29, 47, 127, 170, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 381, 405, 409, 410, 411, 413, 414, 445, 458, 462, 581, 582, 583, 584, 585, 586, 589, 590, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 631, 632, 634, 636, 638, 641, 642, 644, 646], "default_config": 29, "modifi": [29, 45, 74, 163, 460, 489, 582, 589, 590, 598, 608, 626, 644], "environment": [29, 581, 582, 634, 643], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 203, 233, 249, 263, 292, 325, 375, 376, 405, 426, 432, 436, 437, 440, 441, 448, 456, 457, 460, 470, 489, 561, 581, 583, 584, 589, 600, 604, 628, 630, 634, 636, 637, 642, 643], "pyart_config": 29, "point": [29, 31, 33, 47, 123, 155, 156, 157, 167, 220, 225, 242, 243, 257, 280, 285, 292, 309, 314, 315, 318, 342, 347, 348, 351, 367, 368, 371, 373, 377, 412, 413, 414, 423, 443, 448, 450, 462, 536, 561, 564, 568, 578, 581, 583, 585, 587, 589, 592, 598, 610, 617, 627, 630, 633, 634, 638, 640, 642], "new": [29, 47, 48, 50, 131, 133, 140, 147, 152, 163, 174, 176, 183, 190, 195, 424, 435, 441, 445, 462, 463, 465, 565, 575, 587, 589, 590, 592, 593, 604, 628, 631, 634, 637, 638, 644, 646], "execut": [29, 589, 597, 602, 607, 626, 633], "full": [29, 62, 163, 164, 373, 477, 587, 589, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632], "permiss": 29, "secur": 29, "do": [29, 45, 74, 160, 165, 199, 200, 377, 378, 460, 489, 585, 587, 589, 590, 601, 630, 636, 637, 638, 640, 641, 643, 644, 646], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 127, 131, 133, 140, 147, 152, 155, 157, 166, 167, 170, 174, 176, 183, 190, 195, 229, 242, 378, 379, 381, 392, 394, 402, 413, 432, 437, 438, 439, 445, 448, 462, 469, 471, 472, 561, 579, 584, 585, 589, 590, 592, 595, 615, 634, 641, 644], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 141, 142, 160, 184, 185, 372, 381, 448, 458, 460, 462, 466, 467, 469, 471, 489, 548, 581, 583, 585, 589, 590, 591, 592, 593, 630, 637, 640, 642, 643, 644], "home": [29, 587, 590, 595, 601, 644, 646], "make": [29, 31, 448, 536, 540, 542, 543, 583, 584, 585, 587, 588, 589, 590, 591, 593, 604, 611, 620, 630, 634, 636, 637, 643, 644, 646], "adjust": [29, 122, 232, 291, 324, 357, 585, 609, 612, 620], "login": 29, "": [29, 31, 45, 58, 62, 74, 119, 120, 122, 125, 161, 162, 166, 167, 205, 207, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 265, 267, 277, 284, 288, 289, 294, 296, 306, 316, 321, 322, 327, 329, 339, 349, 354, 355, 386, 387, 393, 397, 398, 403, 405, 407, 412, 423, 425, 426, 433, 434, 437, 438, 439, 441, 443, 446, 448, 460, 473, 477, 489, 561, 565, 581, 582, 583, 584, 585, 587, 589, 591, 592, 600, 601, 604, 609, 611, 612, 621, 628, 630, 632, 634, 636, 637, 638, 640, 641, 642, 645], "also": [29, 45, 74, 131, 174, 202, 218, 241, 256, 278, 307, 340, 370, 371, 375, 377, 379, 391, 401, 405, 423, 460, 489, 581, 582, 583, 584, 585, 587, 589, 590, 600, 604, 630, 634, 636, 640, 642, 643, 644, 645, 646], "shell": 29, "session": 29, "modif": [29, 47, 462, 589], "last": [29, 45, 74, 160, 217, 218, 224, 228, 229, 230, 241, 246, 248, 249, 256, 258, 260, 262, 277, 278, 284, 288, 289, 306, 307, 316, 317, 321, 322, 325, 339, 340, 349, 350, 354, 355, 460, 489, 584, 585, 587, 588, 589, 605, 642], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 155, 156, 157, 161, 162, 167, 242, 468, 476, 484, 488, 502, 505, 512, 516, 581, 583, 584, 585, 587, 589, 590, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634], "interact": [30, 581, 584], "weather": [30, 119, 160, 412, 437, 583, 585, 589, 590, 600, 609, 634, 636, 637, 638, 640, 641, 642, 644], "time": [31, 39, 40, 45, 74, 160, 205, 207, 217, 219, 224, 228, 229, 230, 265, 267, 277, 279, 284, 288, 289, 294, 296, 306, 308, 316, 317, 321, 322, 327, 329, 339, 341, 349, 350, 354, 355, 362, 363, 373, 375, 376, 405, 408, 414, 432, 434, 448, 456, 457, 460, 489, 556, 559, 581, 582, 583, 585, 587, 589, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 636, 642, 646], "origin_latitud": [31, 448], "origin_longitud": [31, 448], "origin_altitud": [31, 448], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 203, 205, 214, 217, 219, 222, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 263, 265, 274, 277, 279, 282, 284, 287, 288, 289, 291, 292, 294, 303, 306, 308, 311, 314, 316, 320, 321, 322, 324, 325, 327, 336, 339, 341, 344, 347, 349, 353, 354, 355, 357, 405, 409, 410, 411, 412, 413, 414, 423, 434, 435, 443, 448, 454, 456, 472, 480, 508, 536, 581, 583, 584, 585, 593, 604, 610, 611, 620, 621, 628, 630], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 155, 157, 166, 167, 215, 275, 304, 337, 367, 377, 378, 409, 410, 411, 412, 413, 414, 418, 423, 426, 429, 430, 431, 434, 448, 454, 456, 460, 472, 480, 489, 508, 536, 595, 618, 620, 621, 630, 637], "radar_latitud": [31, 448, 562, 574], "radar_longitud": [31, 448, 562, 574], "radar_altitud": [31, 448], "radar_tim": [31, 448], "radar_nam": [31, 448], "store": [31, 45, 74, 160, 161, 162, 381, 414, 418, 448, 460, 489, 581, 583, 585, 589, 600, 628, 634, 637, 640, 642, 646], "rectilinear": [31, 448], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 367, 404, 405, 412, 413, 414, 448, 450, 456, 460, 489, 598, 603, 607, 610, 634, 635], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 376, 404, 405, 407, 412, 414, 448, 450, 456, 460, 471, 489, 536, 553, 581, 583, 584, 585, 589, 594, 598, 601, 603, 604, 605, 606, 628, 634, 640, 642], "section": [31, 45, 47, 74, 217, 242, 277, 306, 339, 414, 448, 460, 462, 489, 554, 555, 581, 585, 586, 588, 589, 590, 598, 608, 626, 630, 634, 644], "To": [31, 47, 165, 198, 199, 200, 201, 375, 376, 378, 448, 462, 578, 583, 590, 592, 634, 637, 640, 643, 644, 646], "creat": [31, 42, 45, 47, 50, 74, 160, 161, 162, 163, 165, 198, 199, 200, 201, 202, 203, 216, 230, 233, 249, 263, 276, 289, 292, 305, 317, 322, 325, 338, 350, 355, 370, 375, 376, 377, 378, 379, 413, 414, 441, 446, 448, 458, 460, 462, 465, 489, 572, 573, 575, 581, 585, 587, 589, 590, 595, 596, 598, 601, 604, 605, 606, 608, 609, 611, 625, 626, 630, 634, 635, 637, 640, 644], "legaci": [31, 418, 448], "from_legacy_paramet": [31, 448], "ax": [31, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 356, 357, 409, 410, 411, 423, 435, 443, 448, 581, 582, 583, 584, 585, 587, 589, 595, 596, 600, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 638], "moment": [31, 39, 45, 74, 117, 159, 160, 161, 162, 165, 199, 200, 369, 370, 371, 414, 442, 448, 456, 460, 489, 532, 561, 584, 589, 601, 608, 626, 634, 641], "describ": [31, 45, 74, 165, 198, 199, 200, 201, 243, 257, 448, 460, 489, 587, 630], "geograph": [31, 45, 56, 74, 121, 122, 123, 124, 125, 292, 317, 325, 350, 376, 414, 448, 460, 471, 489, 585, 634], "origin": [31, 39, 160, 161, 162, 203, 263, 292, 325, 373, 375, 376, 381, 383, 412, 414, 448, 456, 554, 555, 581, 582, 583, 585, 589, 590, 604, 605, 606, 629, 630, 644], "distanc": [31, 39, 57, 119, 120, 217, 228, 277, 288, 306, 321, 339, 354, 405, 406, 409, 410, 411, 413, 414, 421, 434, 439, 448, 456, 472, 554, 555, 562, 563, 564, 574, 581, 582, 583, 604, 613, 618, 619, 620], "axi": [31, 39, 45, 74, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 307, 308, 309, 310, 311, 312, 316, 317, 319, 320, 321, 322, 324, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 357, 367, 377, 448, 456, 460, 489, 581, 584, 585, 595, 610, 621, 630, 632, 642], "dimension": [31, 39, 160, 162, 412, 443, 448, 456, 604, 630], "space": [31, 45, 74, 123, 219, 279, 308, 341, 378, 414, 423, 434, 448, 460, 489, 581, 584, 601, 630, 636], "along": [31, 161, 164, 242, 245, 246, 247, 248, 259, 260, 261, 262, 448, 554, 555, 563, 564, 575, 577, 583, 584, 585, 589, 630], "three": [31, 162, 165, 200, 377, 443, 448, 584, 592, 630], "repeat": [31, 448], "throughout": [31, 448], "nz": [31, 448], "nx": [31, 448], "ny": [31, 448], "dimens": [31, 160, 367, 414, 418, 423, 432, 434, 437, 439, 443, 448, 575, 581, 584, 585, 589, 628, 630, 636, 640, 642], "transform": [31, 45, 74, 121, 122, 123, 124, 125, 222, 229, 282, 292, 311, 325, 344, 350, 376, 414, 448, 460, 489, 583, 585, 589, 609, 630], "proj": [31, 45, 74, 121, 123, 124, 255, 325, 448, 460, 489, 589], "pyart_aeqd": [31, 45, 74, 121, 123, 124, 448, 460, 489], "nativ": [31, 45, 74, 121, 123, 124, 361, 414, 418, 448, 460, 489, 589], "azimuth": [31, 45, 51, 52, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 203, 204, 217, 219, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 264, 277, 279, 282, 284, 288, 289, 292, 293, 306, 308, 311, 316, 317, 321, 322, 325, 326, 339, 341, 344, 349, 350, 354, 355, 373, 377, 418, 439, 445, 446, 448, 460, 466, 467, 470, 472, 482, 489, 510, 554, 555, 562, 563, 578, 584, 585, 589, 590, 623, 625, 628, 636, 642, 644], "equidist": [31, 45, 74, 121, 122, 123, 124, 125, 222, 282, 311, 344, 350, 377, 414, 448, 460, 489, 585], "pyproj": [31, 45, 74, 121, 123, 124, 448, 460, 489, 589, 643], "projparam": [31, 34, 45, 74, 121, 123, 124, 448, 451, 460, 489], "special": [31, 45, 74, 448, 460, 489, 585], "_include_lon_0_lat_0": [31, 45, 74, 448, 460, 489], "remov": [31, 45, 56, 57, 74, 155, 156, 157, 160, 165, 198, 199, 200, 201, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 382, 388, 389, 395, 399, 400, 423, 448, 460, 471, 472, 489, 583, 585, 589, 590, 595, 605, 611, 620, 630, 638, 641, 644], "interpret": [31, 45, 74, 161, 162, 376, 448, 460, 489, 566, 567, 585], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 247, 248, 255, 257, 259, 261, 262, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 414, 448, 450, 453, 456, 460, 471, 489, 562, 563, 564, 574, 581, 583, 584, 585, 598, 599, 602, 610, 617, 624, 628, 630, 636, 637, 642], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 246, 247, 255, 257, 259, 260, 261, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 414, 448, 450, 453, 456, 460, 471, 489, 562, 563, 564, 574, 581, 583, 584, 585, 598, 599, 602, 610, 617, 624, 628, 630, 636, 637, 642], "ad": [31, 45, 47, 74, 164, 166, 167, 249, 315, 348, 413, 423, 448, 460, 462, 489, 582, 584, 587, 589, 590, 620, 621, 636, 637, 643, 644], "lon_0": [31, 45, 74, 122, 125, 317, 350, 448, 460, 489, 617], "lat_0": [31, 45, 74, 122, 125, 317, 350, 448, 460, 489, 617], "get_projparam": [31, 448], "evalu": [31, 381, 383, 427, 448, 587, 589], "locat": [31, 33, 45, 55, 56, 57, 74, 203, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 292, 306, 307, 308, 311, 312, 314, 316, 317, 318, 319, 321, 322, 325, 339, 340, 341, 344, 345, 347, 349, 350, 351, 352, 354, 355, 369, 370, 372, 378, 405, 412, 413, 414, 448, 450, 460, 470, 471, 472, 489, 536, 548, 562, 563, 564, 581, 582, 583, 585, 587, 589, 590, 615, 617, 628, 634, 640, 643, 644], "up": [31, 45, 74, 131, 133, 140, 147, 152, 156, 157, 174, 176, 183, 190, 195, 418, 426, 429, 430, 440, 448, 460, 489, 553, 582, 583, 587, 588, 589, 592, 630, 638, 642, 645], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 242, 373, 379, 432, 448, 460, 475, 476, 487, 488, 489, 504, 505, 515, 516, 557, 581, 582, 583, 584, 585, 587, 590, 600, 609, 610, 620, 621, 634, 636, 644, 645], "collect": [31, 140, 152, 183, 195, 363, 369, 370, 371, 373, 404, 413, 414, 448, 584, 585, 590, 600, 614, 628, 634, 644, 645, 646], "nradar": [31, 448], "whose": [31, 372, 411, 448, 581], "wa": [31, 56, 57, 140, 161, 162, 183, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 448, 471, 472, 565, 581, 583, 585, 587, 589, 634, 646], "projection_proj": [31, 448], "instanc": [31, 42, 48, 160, 161, 162, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 378, 379, 418, 448, 463, 565, 569, 573, 583, 585, 589], "valueerror": [31, 32, 46, 47, 448, 449, 461, 462, 585], "point_z": [31, 376, 448], "point_x": [31, 376, 448], "point_i": [31, 376, 448], "func": [31, 448, 584, 589], "init_point_x_y_z": [31, 448], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 448, 453, 454, 460, 471, 479, 480, 481, 489, 507, 508, 509, 641], "point_latitud": [31, 376, 448], "point_longitud": [31, 376, 448], "perform": [31, 45, 56, 57, 58, 74, 131, 133, 140, 147, 152, 159, 160, 161, 162, 164, 174, 176, 183, 190, 195, 217, 222, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 282, 284, 287, 288, 289, 306, 311, 316, 317, 320, 321, 322, 325, 339, 344, 349, 350, 353, 354, 355, 369, 372, 377, 437, 448, 460, 471, 472, 473, 489, 578, 584, 585, 594, 595, 596, 598, 605, 606, 610, 634], "invers": [31, 45, 74, 445, 448, 460, 489, 581], "rel": [31, 45, 74, 156, 198, 229, 315, 348, 448, 460, 489, 581, 589, 590, 642, 644], "init_point_longitude_latitud": [31, 448], "point_altitud": [31, 35, 376, 448, 452], "init_point_altitud": [31, 448], "init": [31, 233, 249, 381, 448, 562, 589], "field_dict": [32, 449], "replace_exist": [32, 46, 47, 48, 449, 461, 462, 463, 587, 589, 590, 630, 637, 638, 644], "add": [32, 46, 47, 163, 167, 217, 219, 224, 227, 228, 229, 230, 242, 243, 244, 246, 248, 255, 257, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 449, 461, 462, 582, 583, 584, 589, 590, 604, 609, 610, 611, 620, 621, 623, 628, 630, 631, 638, 643, 644, 646], "replac": [32, 46, 47, 48, 131, 133, 140, 147, 152, 161, 162, 174, 176, 183, 190, 195, 449, 461, 462, 463, 580, 589], "overwrit": [32, 449], "alreadi": [32, 46, 47, 449, 461, 462], "level": [33, 39, 41, 42, 45, 62, 74, 156, 157, 237, 238, 239, 240, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 369, 370, 371, 377, 378, 434, 443, 445, 450, 456, 460, 477, 489, 561, 581, 583, 584, 589, 590, 620, 621, 624, 629, 634, 640, 642, 644], "height": [33, 39, 41, 42, 156, 157, 198, 244, 258, 317, 350, 414, 416, 423, 432, 440, 443, 445, 446, 450, 456, 573, 581, 584, 585, 587, 589, 590, 609, 618, 628, 632, 641, 644], "determin": [33, 45, 74, 160, 161, 162, 242, 244, 246, 248, 255, 258, 260, 262, 317, 350, 358, 361, 369, 370, 373, 378, 379, 417, 423, 425, 426, 427, 429, 430, 443, 445, 450, 460, 489, 561, 568, 573, 576, 584, 585, 590, 630, 644], "same": [33, 45, 47, 55, 56, 57, 74, 122, 125, 133, 147, 160, 176, 190, 229, 317, 350, 367, 373, 377, 378, 379, 414, 423, 434, 440, 450, 460, 462, 470, 471, 472, 489, 562, 574, 578, 581, 585, 590, 600, 620, 621, 630, 636, 641, 644, 646], "interpol": [33, 57, 120, 123, 217, 224, 228, 229, 230, 242, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 363, 369, 413, 414, 432, 439, 440, 445, 450, 472, 573, 585, 589, 590, 601, 630, 640, 644], "extrapol": [33, 120, 123, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 450, 585], "boundari": [33, 120, 123, 164, 235, 236, 255, 350, 439, 450, 585, 631], "center": [33, 45, 57, 74, 119, 120, 122, 123, 125, 161, 217, 222, 224, 228, 229, 230, 243, 245, 246, 247, 248, 257, 258, 259, 260, 261, 262, 277, 282, 284, 288, 289, 292, 306, 311, 316, 317, 321, 322, 339, 344, 349, 350, 354, 355, 369, 371, 409, 410, 411, 450, 460, 472, 489, 536, 553, 581, 583, 584, 585, 587, 609, 638, 642], "2d": [33, 55, 56, 57, 120, 367, 377, 436, 439, 450, 470, 471, 472, 553, 581, 585, 604, 642], "point_": [36, 37, 453, 454], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 141, 142, 184, 185, 406, 408, 445, 455, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 581, 585, 590, 644], "xarrai": [39, 233, 242, 244, 456, 564, 581, 589, 624, 628, 634, 643], "netcdf4": [40, 370, 375, 376, 457, 581, 582, 589, 618, 634, 636, 643, 646], "arm_time_vari": [40, 375, 376, 457], "arm_alt_lat_lon_vari": [40, 376, 457], "save": [40, 205, 217, 219, 224, 228, 229, 230, 237, 250, 265, 277, 279, 284, 288, 289, 294, 306, 308, 316, 317, 321, 322, 327, 339, 341, 349, 350, 354, 355, 376, 378, 457, 585, 587, 634, 635], "netcdf4_class": [40, 375, 376, 457], "netcdf3_class": [40, 375, 376, 457], "netcdf3_64bit": [40, 375, 376, 457], "base_tim": [40, 375, 376, 457, 584, 628], "time_offset": [40, 375, 376, 457, 584, 628], "alt": [40, 56, 376, 457, 471, 584, 585, 589], "lat": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 457, 471, 581, 584, 585, 589, 610, 611, 624, 640], "lon": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 457, 471, 581, 584, 585, 589, 611, 624], "speed": [41, 42, 414, 445, 446, 553, 584, 585, 587, 590, 632, 644], "direct": [41, 62, 373, 437, 445, 446, 477, 589, 590, 632, 644], "horizont": [41, 42, 43, 44, 45, 74, 155, 158, 159, 160, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 362, 363, 445, 460, 489, 573, 583, 584, 587, 589, 590, 611, 621, 642, 644], "wind": [41, 42, 43, 44, 160, 161, 362, 363, 445, 446, 573, 583, 584, 585, 587, 589, 590, 632, 644], "profil": [41, 160, 362, 363, 432, 438, 439, 440, 441, 573, 589, 590, 596, 598, 627, 633, 644], "1d": [41, 42, 120, 123, 436, 581, 589, 642], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 203, 263, 292, 314, 317, 325, 347, 350, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 423, 434, 437, 440, 443, 445, 471, 472, 473, 536, 562, 574, 584, 585, 589, 590, 604, 632, 640, 642, 644], "abov": [41, 42, 45, 47, 74, 129, 143, 155, 156, 157, 160, 163, 164, 165, 166, 167, 172, 186, 198, 199, 200, 201, 222, 223, 282, 283, 311, 312, 344, 345, 358, 414, 416, 423, 445, 460, 462, 489, 561, 563, 564, 581, 582, 583, 584, 589, 590, 592, 598, 604, 619, 621, 627, 632, 633, 634, 636, 638, 644, 646], "sea": [41, 42, 45, 74, 445, 460, 489, 584, 589, 590, 644], "were": [41, 42, 131, 133, 140, 174, 176, 183, 445, 583, 585, 587, 590, 644], "sampl": [41, 42, 445, 446, 447, 540, 542, 543, 561, 581, 583, 584, 589, 590, 600, 601, 609, 629, 631, 632, 634, 644], "per": [41, 42, 43, 44, 58, 160, 414, 445, 473, 537, 538, 539, 590, 644], "second": [41, 42, 43, 44, 47, 58, 119, 160, 373, 381, 405, 439, 445, 462, 473, 570, 571, 581, 584, 587, 590, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 641, 642, 644], "north": [41, 45, 74, 242, 244, 255, 317, 350, 460, 489, 564, 581, 584, 585, 613, 642], "east": [41, 217, 228, 242, 277, 288, 306, 321, 339, 354, 564, 581, 584, 585, 613], "u_wind": [41, 42, 445, 446, 590, 632, 644], "compon": [41, 42, 43, 44, 584, 590, 644], "v_wind": [41, 42, 445, 446, 590, 632, 644], "classmethod": 42, "_rang": [45, 74, 421, 460, 489], "scan_typ": [45, 74, 203, 216, 263, 276, 292, 305, 325, 338, 460, 489, 642], "sweep_numb": [45, 74, 460, 489, 584, 589, 618, 636, 642], "sweep_mod": [45, 74, 460, 489, 584, 589, 636, 642], "fixed_angl": [45, 74, 203, 263, 292, 325, 460, 489, 584, 589, 618, 619, 623, 636, 642], "sweep_start_ray_index": [45, 74, 460, 489, 584, 636, 642], "sweep_end_ray_index": [45, 74, 460, 489, 584, 636, 642], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 203, 217, 219, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 373, 439, 460, 467, 472, 483, 489, 511, 555, 568, 581, 584, 585, 587, 589, 604, 629, 636, 642], "altitude_agl": [45, 74, 460, 489, 584, 642], "target_scan_r": [45, 74, 460, 489, 589, 642], "rays_are_index": [45, 74, 460, 489], "ray_angle_r": [45, 74, 460, 489], "scan_rat": [45, 74, 379, 460, 489, 589, 642], "antenna_transit": [45, 56, 57, 74, 140, 152, 183, 195, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 460, 471, 472, 489, 585, 642], "instrument_paramet": [45, 74, 160, 379, 460, 489, 584, 587, 638, 642], "radar_calibr": [45, 74, 460, 489, 642], "rotat": [45, 74, 203, 460, 489], "tilt": [45, 74, 203, 229, 317, 350, 441, 460, 489, 585, 589, 601, 617, 624], "roll": [45, 74, 203, 373, 460, 489, 572, 577], "drift": [45, 74, 203, 460, 489], "pitch": [45, 74, 203, 460, 489], "georefs_appli": [45, 74, 460, 489], "antenna": [45, 56, 57, 74, 119, 120, 140, 152, 183, 195, 198, 201, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 418, 460, 471, 472, 489, 585, 589, 594, 598, 603, 604, 605, 606, 634, 640, 642], "structur": [45, 74, 379, 443, 460, 489, 600, 630, 641], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 127, 161, 162, 165, 170, 198, 199, 200, 201, 230, 289, 322, 355, 377, 411, 413, 414, 423, 437, 460, 465, 466, 467, 469, 470, 471, 472, 473, 489, 565, 583, 584, 585, 589, 590, 594, 597, 598, 600, 634, 638, 641, 642, 644], "global": [45, 74, 460, 489, 581, 642, 643], "4": [45, 74, 119, 120, 364, 367, 412, 417, 440, 460, 489, 581, 582, 583, 584, 588, 590, 600, 601, 604, 609, 616, 618, 619, 620, 621, 623, 624, 630, 631, 632, 634, 641, 644], "repres": [45, 74, 160, 436, 460, 489, 537, 538, 578, 589], "under": [45, 74, 160, 161, 162, 414, 460, 489, 589, 590, 630, 634, 643, 644], "sub": [45, 74, 460, 489, 581, 589], "convent": [45, 74, 160, 460, 489, 581, 584, 585, 600, 634, 642], "meta_group": [45, 74, 460, 489, 642], "scan": [45, 74, 117, 160, 161, 162, 163, 203, 216, 217, 219, 230, 263, 276, 277, 279, 289, 292, 305, 306, 308, 322, 325, 338, 339, 341, 355, 369, 418, 460, 489, 532, 537, 538, 562, 568, 573, 578, 581, 582, 583, 584, 589, 601, 604, 614, 615, 625], "ppi": [45, 74, 161, 162, 163, 164, 216, 220, 224, 276, 280, 284, 305, 309, 316, 317, 338, 342, 349, 350, 439, 460, 489, 537, 538, 541, 544, 546, 554, 555, 581, 582, 585, 589, 598, 608, 611, 612, 624, 626, 634, 642], "rhi": [45, 74, 216, 217, 228, 276, 277, 288, 305, 306, 321, 338, 339, 354, 439, 460, 489, 538, 547, 554, 555, 582, 589, 598, 608, 626, 634, 642], "sector": [45, 74, 460, 489, 581, 589, 642], "multipl": [45, 74, 460, 489, 582, 583, 589, 590, 598, 603, 608, 620, 626, 641, 646], "mode": [45, 62, 74, 360, 460, 477, 489, 581, 584, 589, 590, 642, 643, 644], "ground": [45, 74, 418, 460, 489, 584, 585, 600], "target": [45, 74, 377, 460, 489, 540, 542, 543, 544, 545, 546, 547, 562, 563, 564, 574, 584, 642], "angl": [45, 51, 52, 74, 119, 120, 203, 217, 229, 263, 277, 292, 306, 325, 339, 439, 441, 460, 466, 467, 489, 549, 550, 551, 552, 554, 555, 562, 563, 570, 571, 578, 581, 584, 589, 623, 625, 632, 636, 642], "thr": [45, 74, 460, 489], "index": [45, 60, 74, 89, 165, 200, 230, 244, 246, 248, 258, 260, 262, 289, 322, 355, 377, 405, 418, 441, 460, 475, 489, 504, 581, 583, 584, 585, 587, 589, 635, 644], "rays_per_sweep": [45, 66, 74, 94, 460, 481, 489, 509, 537, 538], "upon": [45, 74, 165, 198, 199, 200, 201, 460, 489, 583, 587, 589], "prior": [45, 47, 74, 164, 166, 167, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 373, 460, 462, 489, 585, 592, 601, 634], "init_rays_per_sweep": [45, 74, 460, 489], "intend": [45, 74, 460, 489], "rate": [45, 74, 423, 425, 426, 427, 428, 429, 430, 431, 460, 489, 589, 630], "whether": [45, 74, 131, 174, 412, 460, 489, 584, 585, 641], "regular": [45, 74, 378, 460, 489, 585, 609], "angular": [45, 74, 460, 489, 553, 570, 571], "resolut": [45, 74, 217, 219, 220, 224, 225, 228, 229, 230, 255, 277, 279, 280, 284, 285, 288, 289, 306, 308, 309, 316, 317, 318, 321, 322, 339, 341, 342, 349, 350, 351, 354, 355, 369, 423, 437, 443, 460, 489, 583, 584, 585, 601, 614, 617, 638, 640, 641], "express": [45, 74, 460, 489], "360": [45, 74, 163, 164, 318, 351, 460, 489, 589, 632, 636, 642], "represent": [45, 74, 460, 489], "forbidden": [45, 74, 460, 489], "plane": [45, 74, 377, 460, 489, 581, 642], "180": [45, 74, 122, 460, 489, 581, 583, 584, 590, 632, 633, 636, 644], "gate_z": [45, 57, 74, 460, 472, 489], "gate_x": [45, 57, 74, 460, 472, 489], "gate_i": [45, 57, 74, 460, 472, 489], "system": [45, 74, 121, 122, 123, 166, 167, 360, 369, 377, 407, 412, 460, 489, 589, 590, 643], "assum": [45, 74, 119, 120, 160, 163, 434, 437, 439, 440, 460, 489, 583, 587], "earth": [45, 74, 119, 120, 122, 125, 460, 489, 562, 574, 581, 585], "radiu": [45, 74, 119, 120, 122, 125, 409, 410, 411, 412, 413, 414, 423, 443, 460, 489, 562, 574, 630, 640], "model": [45, 74, 119, 120, 161, 370, 376, 460, 489, 584, 631], "init_gate_x_y_z": [45, 74, 460, 489], "gate_latitud": [45, 56, 64, 74, 92, 460, 471, 479, 489, 507, 581], "gate_longitud": [45, 56, 64, 74, 92, 460, 471, 479, 489, 507, 581, 636], "init_gate_longitude_latitud": [45, 74, 460, 489, 636], "gate_altitud": [45, 56, 63, 74, 91, 460, 471, 478, 489, 506, 581], "init_gate_altitud": [45, 74, 460, 489, 636], "actual": [45, 74, 373, 377, 412, 460, 489, 646], "flag": [45, 74, 160, 263, 373, 438, 439, 441, 443, 460, 489, 568, 581, 589, 646], "transit": [45, 56, 57, 74, 140, 152, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 438, 460, 471, 472, 489, 585, 589], "ye": [45, 74, 160, 460, 489], "about": [45, 74, 460, 489, 581, 583, 588, 589], "aircraft": [45, 74, 229, 373, 460, 489], "longitudin": [45, 74, 229, 240, 248, 252, 253, 262, 460, 489], "vertic": [45, 74, 159, 160, 217, 218, 219, 224, 228, 229, 230, 238, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 377, 434, 441, 460, 489, 568, 578, 581, 583, 589, 621, 631, 632], "orthogon": [45, 74, 460, 489], "platform": [45, 74, 460, 489, 581, 592], "right": [45, 74, 460, 489, 583, 586, 587, 589, 609, 610, 634], "wing": [45, 74, 460, 489], "down": [45, 74, 460, 489, 579, 583], "track": [45, 74, 460, 489, 581, 585], "compass": [45, 74, 460, 489], "clockwis": [45, 74, 460, 489], "nose": [45, 74, 460, 489, 589], "had": [45, 74, 378, 460, 489, 589, 600, 646], "georefer": [45, 74, 460, 489], "lead": [45, 74, 460, 489, 585, 604], "centric": [45, 74, 460, 489], "avaiabl": [45, 74, 460, 489], "radar_paramet": [45, 74, 460, 489, 584], "subconvent": [45, 74, 460, 489], "calibr": [45, 74, 425, 460, 489, 584], "ngate": [45, 55, 74, 460, 470, 489, 537, 538, 539, 581, 589, 636, 642], "nrai": [45, 55, 74, 421, 460, 470, 489, 539, 563, 589, 636, 642], "nsweep": [45, 74, 460, 489, 537, 538, 618, 619, 632, 642], "loos": [46, 47, 461, 462], "existing_field_nam": [47, 462], "note": [47, 119, 131, 133, 140, 147, 152, 160, 164, 174, 176, 183, 190, 195, 244, 317, 364, 367, 368, 378, 434, 437, 445, 462, 582, 585, 589, 590, 600, 601, 611, 630, 643, 644], "made": [47, 375, 417, 462, 578, 582, 584, 585, 590, 591, 644], "done": [47, 160, 164, 443, 462, 590, 592, 636, 643, 644, 646], "both": [47, 160, 165, 200, 361, 434, 435, 462, 581, 585, 589, 590, 601, 604, 606, 610, 625, 634, 640, 641, 643, 644], "numpi": [47, 133, 147, 176, 190, 462, 581, 583, 584, 585, 587, 589, 590, 592, 595, 604, 605, 609, 612, 617, 620, 621, 623, 628, 630, 631, 632, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646], "see": [47, 120, 127, 160, 170, 216, 230, 242, 245, 247, 255, 259, 261, 276, 289, 305, 317, 322, 338, 350, 355, 367, 375, 376, 414, 423, 434, 443, 462, 581, 583, 585, 587, 589, 590, 600, 601, 609, 630, 634, 636, 638, 640, 641, 644], "how": [47, 373, 375, 376, 462, 581, 582, 583, 584, 585, 587, 589, 591, 600, 601, 609, 610, 611, 634, 637, 640, 641, 646], "reflectivity_copi": [47, 462], "gatefilt": [48, 155, 156, 157, 160, 161, 162, 163, 164, 165, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 405, 413, 414, 418, 437, 438, 439, 441, 445, 446, 463, 581, 583, 585, 587, 589, 590, 596, 604, 605, 606, 610, 629, 635, 638, 644], "updat": [48, 463, 582, 586, 587, 589, 590, 611, 630, 634, 644], "mask": [48, 131, 133, 136, 140, 147, 151, 152, 160, 161, 162, 163, 165, 174, 176, 179, 183, 190, 194, 195, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 369, 370, 371, 414, 418, 440, 463, 565, 585, 589, 595, 604, 605, 630, 635, 636, 637, 642], "filter": [48, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 164, 165, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 405, 413, 414, 437, 438, 439, 463, 581, 583, 585, 587, 589, 596, 604, 605, 606, 610, 629, 638, 641], "equal": [48, 121, 123, 124, 132, 133, 138, 146, 147, 150, 161, 175, 176, 181, 189, 190, 193, 350, 367, 378, 443, 445, 463, 585, 612, 630, 631, 641], "condit": [48, 127, 131, 133, 140, 147, 152, 160, 170, 174, 176, 183, 190, 195, 378, 427, 463, 581, 596, 637, 641], "append": [48, 463, 587, 589, 632], "filtered_": [48, 463], "prefix": [48, 458, 463], "check": [49, 58, 77, 161, 162, 163, 164, 372, 417, 440, 464, 473, 492, 562, 574, 578, 583, 584, 587, 589, 590, 592, 634, 643, 644, 645], "keyerror": [49, 77, 388, 389, 399, 400, 464, 492, 643], "array_lik": [50, 465, 567], "view": [51, 52, 54, 381, 386, 387, 393, 397, 398, 403, 466, 467, 469, 581, 610, 638, 640, 642], "possibl": [51, 52, 54, 373, 466, 467, 469, 561, 585, 587, 589, 593, 609, 630, 638, 640], "underli": [51, 52, 54, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 466, 467, 469, 585, 634], "get_gate_x_y_z": [54, 469, 620, 621], "obtain": [54, 57, 469, 472, 590, 632, 636, 644], "plot": [54, 57, 202, 203, 204, 205, 206, 207, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 441, 446, 469, 472, 581, 582, 589, 595, 596, 600, 601, 604, 605, 606, 626, 627, 628, 630, 633, 634, 636, 637, 638, 640, 641], "correct": [54, 57, 170, 198, 199, 200, 201, 367, 432, 437, 469, 472, 541, 581, 583, 587, 589, 590, 593, 596, 597, 601, 611, 631, 634, 638, 644], "spatial": [54, 57, 160, 469, 472, 581, 640], "context": [54, 57, 469, 472, 583, 628], "request": [54, 123, 369, 413, 414, 435, 469, 585, 589, 590, 591, 592, 634, 644], "area": [55, 217, 219, 224, 228, 229, 230, 231, 277, 279, 284, 288, 289, 290, 306, 308, 316, 317, 321, 322, 323, 339, 341, 349, 350, 354, 355, 356, 439, 443, 470, 565, 581, 583, 585, 587], "squar": [55, 417, 434, 437, 445, 470], "assumpt": [55, 437, 470], "size": [55, 157, 160, 161, 163, 164, 199, 220, 280, 309, 342, 411, 413, 414, 417, 423, 431, 437, 439, 470, 553, 577, 584, 611, 624, 630], "m": [55, 58, 162, 198, 201, 205, 265, 294, 327, 412, 421, 425, 434, 436, 437, 438, 441, 443, 470, 473, 565, 575, 581, 583, 584, 585, 587, 589, 590, 592, 600, 612, 621, 630, 632, 634, 643, 644], "reset_gate_coord": [56, 471], "filter_transit": [56, 57, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 471, 472, 585], "With": [56, 57, 471, 472, 634, 635, 636], "therefor": [56, 57, 437, 471, 472, 581, 638, 642], "more": [56, 57, 62, 161, 164, 377, 412, 413, 414, 418, 423, 443, 471, 472, 477, 554, 555, 581, 582, 583, 584, 585, 586, 589, 590, 604, 609, 620, 621, 634, 638, 642, 644], "effici": [56, 57, 413, 471, 472, 634, 638], "than": [56, 57, 161, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 423, 437, 471, 472, 565, 583, 584, 585, 630, 646], "through": [56, 57, 242, 436, 471, 472, 584, 585, 587, 588, 590, 604, 609, 644], "No": [56, 57, 162, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 377, 414, 471, 472, 585], "get_field": [57, 472, 620, 621], "check_uniform": [58, 473], "lookuperror": [58, 473], "except": [58, 377, 394, 473, 585, 589, 640], "skip": [58, 161, 162, 372, 417, 473, 583, 589, 590, 644], "nyquist_veloc": [58, 161, 162, 379, 473, 584, 587, 638, 642], "slice": [59, 71, 88, 99, 245, 246, 247, 248, 259, 260, 261, 262, 474, 486, 503, 514, 624, 640, 642], "_io": [62, 477], "textiowrapp": [62, 477], "encod": [62, 378, 477, 589], "utf": [62, 477], "compact": [62, 477], "c": [62, 119, 122, 125, 155, 157, 159, 160, 162, 255, 350, 425, 427, 433, 437, 438, 439, 441, 446, 477, 541, 581, 585, 587, 589, 590, 604, 634, 637, 640, 643, 644, 646], "f": [62, 255, 350, 392, 402, 477, 581, 582, 583, 584, 585, 587, 601, 609, 623, 630, 634, 646], "minim": [62, 437, 443, 477], "everyth": [62, 477, 585, 590, 601, 644], "screen": [62, 477], "gate_": [65, 93, 480, 508], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 392, 402, 437, 439, 482, 483, 484, 485, 486, 487, 488, 510, 511, 512, 513, 514, 515, 516, 587, 642], "over": [69, 72, 73, 97, 100, 101, 160, 161, 198, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 423, 484, 487, 488, 512, 515, 516, 561, 581, 585, 587, 589, 604, 630, 632, 634, 637, 642], "npulses_max": [74, 489, 539], "velocity_bin": [74, 489], "simpl": [117, 405, 532, 589, 637, 638], "vpt": [117, 208, 216, 230, 268, 276, 289, 297, 305, 322, 330, 338, 355, 532, 568, 584, 589], "mean": [117, 119, 445, 532, 549, 550, 561, 566, 570, 571, 581, 584, 589, 590, 593, 600, 601, 641, 642, 644], "kilomet": [119, 423], "equat": [119, 437, 561, 581, 589], "28": [119, 581, 583, 585, 589, 630, 632], "b": [119, 358, 423, 438, 446, 581, 582, 583, 584, 589, 590, 634, 644], "doviak": 119, "zrnic": 119, "sqrt": [119, 122, 581, 620, 621, 632], "r": [119, 121, 122, 123, 124, 125, 160, 162, 166, 167, 209, 222, 223, 243, 257, 269, 282, 283, 298, 311, 312, 313, 314, 331, 344, 345, 346, 347, 423, 426, 429, 430, 431, 443, 445, 561, 565, 581, 590, 600, 612, 620, 621, 630, 644], "sin": [119, 122, 125, 581, 583], "theta_": 119, "arcsin": [119, 122, 583], "frac": 119, "theta_a": 119, "arc": [119, 562], "length": [119, 166, 167, 437, 583, 585, 589], "effect": [119, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 229, 413, 414, 583, 620], "taken": [119, 166, 167, 217, 277, 306, 339, 541, 554, 555, 561, 566, 567, 613], "6371": [119, 122, 125, 562, 574, 583], "km": [119, 122, 125, 203, 220, 225, 226, 232, 263, 280, 285, 286, 291, 292, 309, 318, 319, 324, 325, 342, 350, 351, 352, 357, 421, 423, 437, 562, 574, 582, 583, 584, 585, 613, 618, 619, 621, 628, 640], "doppler": [119, 160, 161, 162, 445, 561, 584, 590, 594, 597, 598, 613, 623, 634, 642, 644], "edit": [119, 588, 589, 590, 644], "1993": 119, "21": [119, 431, 581, 583, 587], "vector": [120, 123, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 421, 434, 581, 583, 585, 589], "util": [120, 157, 160, 161, 229, 425, 447, 584, 589, 590, 601, 612, 625, 628, 630, 634, 644], "antenna_to_cartesian": [120, 589], "detail": [120, 127, 160, 170, 242, 255, 317, 350, 375, 376, 412, 414, 423, 581, 583, 585, 587, 590, 591, 592, 630, 634, 642, 644], "cartograph": [121, 122, 123, 124, 125, 325], "differ": [121, 123, 124, 160, 358, 405, 423, 426, 437, 582, 583, 584, 585, 589, 590, 600, 604, 630, 640, 643, 644], "pass": [121, 123, 124, 160, 161, 162, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 360, 361, 369, 371, 412, 414, 437, 583, 585, 589, 592, 600, 601, 637, 640], "desir": [121, 123, 124, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 381, 423, 445, 535, 575, 583, 584, 628, 641], "6370997": [122, 125], "rho": 122, "arctan2": [122, 632], "correspond": [122, 125, 141, 142, 184, 185, 216, 244, 258, 276, 305, 338, 362, 388, 399, 414, 561, 563, 583, 585, 590, 600, 612, 638, 642, 644], "typic": [122, 125, 127, 131, 133, 140, 147, 152, 161, 170, 174, 176, 183, 190, 195, 377, 412, 413, 646], "snyder": [122, 125], "manual": [122, 125, 589, 592], "geolog": [122, 125], "survei": [122, 125], "profession": [122, 125], "paper": [122, 125, 634], "1395": [122, 125, 589], "1987": [122, 125], "pp": [122, 125], "191": [122, 125], "202": [122, 125], "find": [123, 161, 164, 405, 412, 413, 414, 432, 581, 585, 587, 589, 601, 634, 646], "arcco": 125, "exclude_bas": [127, 170], "boolean": [127, 133, 141, 142, 147, 170, 176, 184, 185, 190, 358, 423, 441, 589, 641], "variou": [127, 163, 165, 170, 198, 199, 200, 201, 564, 583, 589, 598, 627, 634], "exclude_below": [127, 170, 581, 583, 587, 604, 629, 641], "suggest": [127, 170, 582, 589], "begin": [127, 160, 161, 162, 166, 167, 170, 205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 367, 368, 371, 373, 589], "import": [127, 170, 441, 445, 446, 458, 582, 589, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 636, 637, 638, 640, 641, 642, 643], "radar_fil": [127, 170, 596, 609, 611], "nc": [127, 170, 581, 582, 584, 589, 595, 604, 606, 609, 610, 611, 615, 617, 618, 619, 623, 624, 625, 628, 629, 630, 631, 632, 636, 637, 641], "10": [127, 163, 166, 167, 170, 412, 414, 423, 427, 428, 436, 438, 439, 565, 581, 583, 584, 585, 587, 590, 596, 601, 604, 605, 607, 609, 612, 613, 615, 617, 620, 621, 624, 626, 630, 632, 634, 636, 637, 638, 640, 641, 642, 644], "normalized_coherent_pow": [127, 170, 581, 641], "75": [127, 170, 231, 290, 323, 356, 377, 423, 436, 581, 587, 604, 620, 630, 636, 640, 641], "exclude_mask": [129, 131, 132, 133, 134, 135, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 605], "op": [129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 584], "inclus": [129, 131, 134, 139, 143, 145, 148, 153, 172, 174, 177, 182, 186, 188, 191, 196, 412, 414, 536, 589, 609], "below": [131, 145, 160, 163, 165, 166, 167, 174, 188, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 413, 414, 423, 426, 429, 430, 437, 561, 581, 582, 583, 584, 585, 609, 630, 636, 638, 641, 645], "compar": [131, 160, 174, 418, 553, 590, 598, 603, 607, 609, 630, 644], "against": [131, 160, 174, 591, 592, 620], "mark": [131, 140, 141, 142, 152, 160, 174, 183, 184, 185, 195, 582], "exclus": [131, 174], "oper": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 373, 412, 427, 431, 439, 443, 581, 584, 585, 590, 630, 643], "merg": [131, 133, 140, 147, 152, 161, 174, 176, 183, 190, 195, 363, 590, 592, 644], "AND": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195], "OR": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 581], "gener": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 204, 205, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 242, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 264, 265, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 294, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 327, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 376, 379, 394, 405, 413, 414, 432, 437, 583, 585, 586, 589, 592, 595, 596, 598, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634], "meet": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 375, 634], "result": [131, 133, 140, 147, 152, 160, 161, 162, 174, 176, 183, 190, 195, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 360, 376, 381, 414, 418, 441, 446, 572, 583, 584, 585, 590, 601, 631, 634, 640, 644], "previous": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 600, 630], "becaus": [131, 133, 140, 174, 176, 183, 437, 630, 646], "invalid": [131, 133, 135, 140, 165, 174, 176, 178, 183, 198, 199, 200, 201, 581], "shape": [133, 147, 176, 190, 367, 440, 581, 584, 585, 587, 589, 590, 630, 636, 640, 641, 642, 644], "v1": [134, 139, 148, 153, 177, 182, 191, 196, 581, 582, 592, 643], "v2": [134, 139, 148, 153, 177, 182, 191, 196, 590, 644], "insid": [134, 148, 177, 191, 637], "interv": [134, 139, 148, 153, 161, 165, 177, 182, 191, 196, 200, 553, 566, 567, 581, 589], "occur": [135, 154, 164, 178, 197, 369, 370, 581, 638, 642], "nan": [135, 154, 160, 165, 178, 197, 200, 439, 581, 584, 589, 628], "inf": [135, 154, 165, 178, 197, 200, 589], "outsid": [139, 153, 165, 182, 196, 200, 224, 227, 229, 230, 242, 244, 246, 248, 258, 260, 262, 284, 287, 289, 316, 317, 320, 322, 349, 350, 353, 355, 585, 589, 590, 644], "trans_valu": [140, 152, 183, 195], "construct": [140, 152, 183, 195, 414, 584], "element": [141, 142, 160, 161, 162, 163, 164, 184, 185, 379, 413, 414, 440, 566, 567, 570, 571, 583, 584, 585], "NOT": [141, 142, 184, 185], "gate_includ": [141, 184, 641], "lost": [141, 142, 184, 185, 439, 578, 581, 640], "again": [141, 142, 184, 185, 585, 592, 601, 611, 643], "gate_exclud": [142, 185, 641], "z_offset": 155, "doc": [155, 156, 157, 167, 581, 585, 589, 590, 592, 595, 601, 634, 643, 644, 646], "15": [155, 437, 565, 579, 581, 582, 583, 584, 595, 596, 597, 601, 609, 612, 618, 619, 620, 621, 624, 625, 628, 632, 638, 642], "fzl": [155, 156, 157, 166, 167], "4000": [155, 166, 167, 640], "rhv_min": 155, "ncp_min": 155, "a_coef": [155, 157], "06": [155, 581, 583, 587, 597, 626], "beta": [155, 157, 425, 426, 427, 428, 429, 430], "refl_field": [155, 156, 157, 165, 166, 167, 199, 200, 414, 416, 422, 423, 426, 428, 429, 430, 431, 436, 443, 595, 630, 631], "ncp_field": [155, 165, 166, 167, 200, 595], "rhv_field": [155, 165, 166, 167, 199, 200, 436, 595, 631], "spec_at_field": [155, 156, 157], "corr_refl_field": [155, 156, 157], "attenu": [155, 156, 157, 425, 426, 429, 589, 594, 597, 598, 631, 634], "phi": [155, 157, 166, 589, 595], "copol_coeff": [155, 541, 595, 628, 629, 636], "norm_coherent_pow": [155, 541, 595, 636], "proc_dp_phase_shift": [155, 595, 628, 636], "reflectivity_horizont": [155, 160, 541, 582, 595, 604, 609, 611, 615, 617, 618, 619, 623, 625, 628, 629, 630, 636, 637], "supress": [155, 233, 244, 249, 317, 350, 585, 589], "freez": [155, 156, 157], "layer": [155, 156, 157, 198, 201, 377, 426, 437, 441], "combin": [155, 156, 157, 569, 581, 583, 584, 590, 592, 644], "minimum": [155, 165, 166, 167, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 412, 414, 423, 536, 561, 581, 583, 585, 589, 630, 640], "normal": [155, 165, 166, 167, 200, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 585, 620], "coher": [155, 165, 166, 167, 200], "power": [155, 157, 165, 166, 167, 200, 425, 426, 427, 428, 429, 430, 581, 584], "zdr_field": [155, 156, 157, 159, 199, 419, 436, 631], "spec_at": [155, 156, 157, 595, 631], "cor_z": [155, 156, 157, 595, 631], "gu": [155, 157], "et": [155, 157, 159, 423, 427, 431, 436, 437, 443, 630], "al": [155, 157, 159, 423, 427, 431, 436, 437, 438, 443, 630], "heavi": [155, 157, 565, 583, 612, 620], "rain": [155, 157, 425, 426, 427, 428, 431, 443, 589, 612, 620, 630, 631], "jamc": [155, 157, 439], "2011": [155, 157, 628], "50": [155, 157, 553, 581, 582, 583, 584, 587, 606, 624, 628, 631, 640, 642], "39": [155, 157, 581, 583, 628], "58": [155, 157, 584, 628], "pia_coef": 156, "pida_coef": 156, "temp_field": [156, 157, 201, 436, 631], "iso0_field": [156, 157, 198], "pia_field": [156, 157], "spec_diff_at_field": [156, 157], "pida_field": [156, 157], "corr_zdr_field": [156, 157], "temp_ref": [156, 157, 631], "linear": [156, 166, 167, 242, 369, 423, 439, 561, 573, 584, 585, 589, 630, 634], "dependec": 156, "comput": [156, 157, 159, 199, 419, 420, 421, 422, 423, 437, 438, 439, 549, 550, 551, 552, 553, 566, 567, 570, 571, 577, 581, 584, 589, 631, 632, 634], "either": [156, 157, 160, 161, 162, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 320, 321, 322, 339, 340, 341, 349, 353, 354, 355, 363, 392, 402, 426, 429, 430, 590, 630, 643, 644], "frequenc": [156, 157, 379, 425, 426, 427, 429, 430, 433, 437, 438, 439, 584], "refl": [156, 157, 618], "integr": [156, 157, 581, 584], "pida_coeff": 156, "0c": [156, 157], "isotherm": [156, 157], "height_over_iso0": [156, 157, 641], "fixed_fzl": [156, 157], "pia_dict": [156, 157], "spec_diff_at": [156, 157, 631], "pida_dict": [156, 157], "cor_zdr": [156, 157, 631], "smooth_window_len": 157, "d": [157, 162, 205, 265, 294, 327, 381, 382, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 439, 446, 581, 583, 584, 585, 590, 628, 634, 644], "smooth": [157, 164, 437, 562, 574, 585, 620, 621, 640], "window": [157, 160, 166, 167, 199, 417, 439, 445, 553, 572, 577, 589, 590, 634, 644], "expon": [157, 166, 167, 425, 426, 427, 428, 429, 430], "law": [157, 425, 426, 427, 428, 429, 430], "ryzhkov": [157, 425, 441], "potenti": [157, 425, 581], "rainfal": [157, 425, 426, 427, 428, 429, 430, 431, 437, 439], "estim": [157, 198, 201, 219, 279, 308, 341, 421, 425, 426, 427, 428, 429, 430, 431, 437, 438, 439, 441, 561, 584, 589, 630], "mitig": [157, 425], "partial": [157, 425, 589], "beam": [157, 411, 413, 414, 425, 584], "blockag": [157, 425], "network": [157, 161, 371, 425, 583], "jaot": [157, 159], "2014": [157, 425, 438, 441, 634], "31": [157, 369, 425, 581, 583, 584, 587, 601, 628], "599": [157, 425], "619": [157, 425, 589], "bia": [158, 589], "magnitud": [158, 437, 632, 642], "corrected_field": 158, "urhohv_field": 159, "snr_field": [159, 416, 422], "nh_field": 159, "nv_field": 159, "rhohv_field": [159, 419, 420], "nois": [159, 416, 421, 422, 561, 584, 589, 638], "eq": [159, 618], "6": [159, 199, 426, 581, 583, 584, 601, 604, 609, 610, 612, 614, 617, 628, 629, 631, 632, 634, 636, 638, 641, 642, 643, 646], "2006": [159, 601], "subtract": [159, 423], "uncorrect": [159, 581], "snr": [159, 416, 422, 589], "channel": [159, 377, 581, 584, 589, 592], "meteo": 159, "franc": 159, "23": [159, 581, 583, 584, 600, 602], "1340": 159, "1356": [159, 589], "last_radar": 160, "sonde_profil": 160, "filt": 160, "rsl_badval": 160, "131072": 160, "keep_origin": [160, 161, 162], "set_limit": [160, 161, 162, 582, 612, 613, 614, 616, 618, 619, 620, 621, 623], "vel_field": [160, 161, 162, 417, 446, 638], "corr_vel_field": [160, 161, 162], "last_vel_field": 160, "max_shear": 160, "05": [160, 413, 414, 581, 583, 624, 626, 628, 633], "sign": [160, 589, 620, 621], "dealia": [160, 161, 162, 424, 587, 589, 594, 597, 598, 638], "4dd": [160, 589], "univers": [160, 374, 431, 581, 589, 634], "washington": 160, "previou": [160, 317, 350, 585, 589, 592], "sound": [160, 589], "For": [160, 245, 247, 259, 261, 367, 377, 413, 437, 581, 582, 584, 585, 589, 590, 593, 600, 604, 631, 634, 641, 642, 644, 646], "best": [160, 583], "argument": [160, 161, 162, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 277, 284, 288, 289, 306, 313, 314, 315, 316, 317, 318, 321, 322, 339, 346, 347, 348, 349, 350, 351, 354, 355, 369, 371, 379, 381, 412, 414, 438, 439, 589, 590, 644], "_fourdd_interfac": 160, "fourdd_dealia": 160, "fine": 160, "tune": [160, 630], "behavior": [160, 317, 350, 367, 381, 585, 589, 593], "fourdd": 160, "document": [160, 245, 247, 255, 259, 261, 317, 350, 370, 375, 376, 573, 579, 582, 584, 585, 586, 590, 591, 634, 640, 644], "dealias": [160, 161, 162, 424, 589, 590, 596, 600, 634, 635, 644], "mean_doppler_veloc": [160, 584, 623, 628, 636], "successfulli": 160, "greatli": 160, "improv": [160, 438, 439, 565, 585, 592, 612], "final": [160, 438, 439, 581, 582, 588, 592, 630], "horizontalwindprofil": [160, 362, 363, 446, 573, 589, 590, 644], "sond": [160, 161, 362, 363, 432, 589, 596], "moment_based_gate_filt": [160, 161, 162, 414, 583], "bergen": 160, "alber": 160, "bad": [160, 437, 438, 439, 443], "rsl": [160, 361, 372, 373, 589, 634, 643], "procedur": [160, 161, 162], "fail": [160, 161, 162, 367, 377, 589, 590, 644], "otherwis": [160, 388, 399, 426, 429, 430, 434, 592], "maxshear": 160, "maximum": [160, 161, 165, 166, 167, 198, 199, 200, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 358, 377, 412, 414, 418, 423, 426, 429, 430, 437, 536, 553, 568, 581, 583, 585, 629, 630, 642], "shear": 160, "incorpor": [160, 630], "match": [160, 163, 164, 203, 263, 292, 325, 373, 405, 589, 604, 611], "toward": 160, "neg": [160, 217, 228, 277, 288, 306, 321, 339, 354, 437, 581, 589, 609], "compthresh": 160, "fraction": [160, 583, 630, 642], "threshold": [160, 163, 164, 165, 198, 199, 200, 201, 358, 423, 426, 429, 430, 561, 565, 581, 583, 587, 630, 638, 641], "continu": [160, 162, 584, 589, 590], "unfold": [160, 161, 166, 167, 437], "compthresh2": 160, "thresh": [160, 426, 429, 430], "adjac": [160, 585], "count": [160, 604, 638, 642], "assign": [160, 583, 589, 630], "question": [160, 359, 414, 585, 634], "ckval": 160, "absolut": [160, 553], "stdthresh": 160, "deviat": [160, 551, 552, 567, 581, 638], "portion": [160, 587, 640], "epsilon": 160, "miss": [160, 437, 438, 439, 443, 581, 589, 601], "maxcount": 160, "allow": [160, 163, 164, 216, 276, 305, 338, 405, 582, 585, 589, 593, 604, 642, 646], "fold": [160, 161, 600], "pass2": 160, "retain": [160, 161, 162, 165, 198, 199, 200, 201, 578], "rm": 160, "what": [160, 169, 414, 581, 584, 585, 587, 588, 589, 590, 600, 609, 636, 638, 641, 644, 646], "left": [160, 315, 348, 583, 585, 587, 609, 611], "proxim": 160, "side": 160, "doubl": [160, 377, 630], "captur": 160, "suffici": 160, "good": [160, 161, 581, 582, 592], "mingood": 160, "ba_mincount": 160, "neighbor": [160, 369, 414, 581, 589, 640], "ba_edgecount": 160, "usuccess": 160, "radialvelvolum": 160, "lastvelvolum": 160, "unfoldedvolum": 160, "sondvolum": 160, "vr_corr": 160, "due": [160, 418, 581, 583, 585, 589, 604, 638, 643, 646], "call": [160, 163, 216, 217, 219, 224, 228, 229, 230, 244, 276, 277, 279, 284, 288, 289, 305, 306, 308, 316, 317, 321, 322, 338, 339, 341, 349, 350, 354, 355, 372, 377, 381, 564, 582, 584, 585, 590, 592, 638, 642, 644, 646], "999": [160, 381, 581, 589], "long": [160, 427, 589, 637, 642], "n": [160, 436, 553, 581, 583, 584, 585, 587, 590, 600, 604, 612, 623, 625, 628, 630, 634, 644, 646], "jame": 160, "houz": [160, 358, 423, 443, 630], "jr": [160, 423, 443, 630], "four": [160, 369, 370, 372], "dealis": 160, "scheme": [160, 358, 412, 423, 437, 582, 630], "2001": 160, "18": [160, 581, 583, 610, 621], "1674": 160, "ref_vel_field": 161, "interval_split": 161, "interval_limit": 161, "skip_between_rai": 161, "100": [161, 163, 165, 200, 220, 225, 242, 280, 285, 309, 342, 379, 446, 581, 583, 584, 585, 587, 606, 610, 620, 621, 632], "skip_along_rai": 161, "nyquist_vel": [161, 162, 587, 638], "check_nyquist_uniform": [161, 162, 417], "rays_wrap_around": [161, 162], "region": [161, 167, 255, 317, 350, 418, 565, 581, 583, 584, 585, 587, 589, 590, 594, 597, 598, 600, 612, 630, 641, 644], "similar": [161, 584, 585, 604, 640], "pair": [161, 242, 369, 381, 389, 394, 400, 583, 636], "accomplish": [161, 373], "problem": [161, 166, 167, 292, 325, 414, 601], "dynam": [161, 581], "reduct": 161, "anchor": 161, "onc": [161, 585, 590, 592, 630, 643, 646], "complet": [161, 589], "simul": [161, 573, 589], "simulated_vel_from_profil": [161, 590, 644], "segment": [161, 313, 314, 346, 347, 589], "split": [161, 565, 581], "larger": [161, 585, 630], "longer": [161, 583, 589, 590, 634, 643], "process": [161, 166, 167, 581, 584, 587, 589, 590, 592, 600, 634, 644], "better": [161, 220, 225, 280, 285, 309, 318, 342, 351, 589, 634, 638], "seem": 161, "compromis": 161, "artifact": [161, 638, 640], "free": [161, 586, 587, 634], "cover": [161, 581], "entir": [161, 162, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 414, 575, 581, 584, 585], "join": [161, 458, 589], "gap": [161, 163, 164, 640], "connect": [161, 162], "disabl": [161, 162, 165, 198, 199, 200, 201], "across": [161, 583, 589, 629], "so": [161, 217, 228, 277, 288, 306, 321, 339, 354, 373, 414, 581, 584, 585, 587, 589, 590, 600, 601, 630, 634, 644, 646], "averag": [161, 358, 423, 561, 566, 587, 630, 632], "individu": [161, 162, 414], "attempt": [161, 162, 375, 376, 589], "de": [161, 162, 348, 546, 547], "alias": [161, 162, 546, 547, 587, 589, 638, 642], "corr_vel": [161, 162], "unwrap_unit": 162, "skip_check": [162, 589], "multi": [162, 589], "unwrap": [162, 166, 167, 589], "independ": 162, "often": [162, 418], "give": [162, 377, 585, 591, 592, 634, 638, 641], "superior": 162, "lower": [162, 242, 244, 246, 248, 258, 260, 262, 584, 605, 606], "contamin": [162, 443], "clutter": [162, 638, 641], "poor": 162, "verif": [162, 589], "appropi": [162, 216, 276, 305, 338], "offer": [162, 582], "extrem": 162, "miguel": 162, "arevallilo": 162, "herraez": 162, "david": [162, 585], "burton": 162, "michael": [162, 585], "lalor": 162, "munther": 162, "gdeisat": 162, "fast": 162, "two": [162, 379, 412, 423, 434, 435, 443, 569, 570, 571, 583, 584, 585, 587, 589, 590, 592, 598, 603, 607, 608, 610, 625, 626, 637, 640, 644], "sort": [162, 583, 587, 588, 589], "reliabl": 162, "follow": [162, 165, 199, 200, 375, 376, 378, 379, 392, 402, 413, 414, 436, 437, 581, 583, 584, 585, 587, 590, 592, 593, 600, 628, 634, 643, 644], "noncontinu": 162, "optic": 162, "vol": 162, "41": [162, 583, 628, 632, 640], "2002": 162, "7437": 162, "abdul": 162, "rahman": 162, "h": [162, 205, 255, 265, 294, 327, 350, 441, 561, 581, 583, 584, 604, 611], "osten": 162, "gorecki": 162, "e": [162, 164, 166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 362, 377, 392, 402, 423, 437, 443, 565, 581, 582, 584, 585, 590, 600, 612, 630, 643, 644], "l": [162, 166, 167, 221, 225, 226, 255, 281, 285, 286, 310, 319, 343, 350, 352, 420, 565, 581, 585, 612], "novak": 162, "ed": 162, "metrologi": 162, "2005": [162, 423, 630], "32": [162, 581, 589, 609, 613, 614, 615, 625, 628, 632, 642], "40": [162, 255, 581, 584, 596, 606, 611, 615, 617, 620, 630], "intern": [162, 585], "societi": [162, 418, 427], "photon": 162, "label_dict": [163, 164], "delta": [163, 164, 438], "despeckl": [163, 589], "identifi": [163, 164, 358, 423, 561, 581, 585, 587, 612, 630, 641], "small": [163, 164, 423, 443, 589, 604, 620], "investig": [163, 164, 441, 600], "scipi": [163, 164, 437, 573, 581, 589, 590, 620, 621, 634, 643, 644, 646], "core": [163, 164, 358, 377, 405, 414, 423, 438, 439, 564, 584, 589, 590, 595, 630, 644], "queri": [163, 164, 414, 581, 585], "speckl": [163, 630], "find_object": 163, "tupl": [163, 164, 217, 219, 222, 223, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 277, 279, 282, 283, 284, 287, 288, 289, 291, 306, 308, 311, 312, 316, 317, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 353, 354, 355, 357, 389, 400, 412, 414, 434, 435, 536, 585, 589], "contigu": [163, 164], "perman": 163, "deg": [163, 164, 198, 201, 437, 575, 581, 632], "label": [164, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 282, 283, 284, 287, 288, 289, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 312, 315, 316, 317, 320, 321, 322, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 344, 345, 348, 349, 350, 353, 354, 355, 578, 581, 583, 585, 587, 589, 604, 610, 611, 620, 621, 625, 631], "period": [164, 581, 584, 638], "account": [164, 589], "g": [164, 377, 412, 437, 439, 446], "examin": [164, 360, 373, 376, 584, 587, 590, 634, 644], "box": [164, 377, 631], "alwai": [164, 361, 373, 423, 437, 585, 589, 593, 634], "readi": 164, "min_ncp": [165, 166, 200], "min_rhv": [165, 166, 199, 200], "min_refl": [165, 200], "20": [165, 199, 200, 441, 581, 582, 583, 584, 585, 587, 600, 601, 604, 610, 611, 612, 615, 617, 618, 619, 620, 621, 623, 629, 630, 636, 640, 642], "max_refl": [165, 200], "undesir": [165, 198, 199, 200, 201, 414], "cross": [165, 199, 200, 217, 220, 242, 277, 280, 306, 309, 339, 342, 554, 555, 581, 584, 587, 589, 598, 608, 617, 626, 630, 642], "ratio": [165, 199, 200, 231, 290, 323, 356, 416, 419, 581, 584, 587, 642], "min_rhi": [165, 200], "criteria": [165, 198, 199, 200, 201, 414, 437, 443], "built": [165, 198, 199, 200, 201, 413, 414], "lowest": [165, 198, 199, 200, 201, 418, 440, 587, 600, 604, 628, 630], "greatest": [165, 200], "self_const": [166, 167], "60000": [166, 167, 606, 610, 640], "low_z": [166, 167], "high_z": [166, 167], "53": [166, 167, 581, 583, 587], "min_phidp": [166, 167], "01": [166, 167, 315, 348, 437, 581, 583, 584, 587, 597, 607, 609, 626], "sys_phas": 166, "overide_sys_phas": 166, "nowrap": [166, 167], "really_verbos": [166, 167], "lp_solver": [166, 167], "pyglpk": [166, 167, 589, 634, 643], "kdp_field": [166, 167, 426, 427, 429, 430, 436, 437, 438, 439, 631], "unf_field": [166, 167], "window_len": [166, 167], "proc": [166, 167, 437, 589], "coef": [166, 167, 589], "914": [166, 167, 589], "lp": [166, 167, 589, 634], "consist": [166, 167, 589, 640], "factor": [166, 167, 379, 418, 425, 426, 427, 428, 429, 430, 553, 581, 582, 584, 611, 619, 625, 640], "low": [166, 167, 369, 437, 612], "high": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 437, 584, 585, 587, 631], "copolar": [166, 167, 436, 629], "automat": [166, 373, 378, 379, 414, 417, 443, 583, 585, 589, 590, 592, 615, 634, 644], "lpx": [166, 167], "messag": [166, 167, 233, 249, 369, 582, 589, 592, 601], "suppress": [166, 167, 437], "cvxopt": [166, 167, 589, 634, 643], "cylp": [166, 167, 589, 634, 643, 646], "cylp_mp": [166, 167], "modul": [166, 167, 541, 579, 585, 589, 590, 600, 601, 634, 637, 638, 640, 641, 642, 643, 644], "solv": [166, 167, 588, 589], "horizon": [166, 167, 436], "sobel": [166, 167], "worker": [166, 167], "link": [166, 167, 583, 584, 587, 589], "1z": [166, 167], "reproc_phas": [166, 167], "sob_kdp": [166, 167], "recalcul": [166, 167, 636], "giangrand": [166, 167, 634], "mcgraw": [166, 167], "lei": [166, 167], "applic": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 423, 572, 585, 587, 590, 644], "program": [166, 167, 589, 590, 634, 644], "atmo": [166, 167, 431, 436, 441, 565, 590, 612, 644], "tech": [166, 167, 436, 565, 612], "2013": [166, 167, 438, 441, 642], "30": [166, 167, 423, 581, 583, 584, 585, 604, 611, 615, 617, 630, 638], "1716": [166, 167], "system_phas": 167, "ncpt": 167, "first_gate_sysp": 167, "carri": 167, "smaller": [167, 350, 581, 584, 585, 590, 630, 644], "off": [167, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 435, 441, 581, 585, 609, 630], "custom": [168, 216, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 276, 277, 278, 279, 284, 288, 289, 305, 306, 307, 308, 316, 317, 321, 322, 338, 339, 340, 341, 349, 350, 354, 355, 413, 585, 640], "max_h_iso0": 198, "thick": [198, 201], "400": [198, 201, 589, 636], "beamwidth": [198, 201], "primarili": [198, 201], "melt": [198, 201, 426, 437, 441, 565, 612, 630, 631], "db": [198, 201, 416, 620, 642], "phi_field": 199, "textzdr_field": 199, "textrhv_field": 199, "textphi_field": 199, "textrefl_field": 199, "wind_siz": [199, 417, 577, 638], "7": [199, 367, 445, 577, 581, 583, 584, 585, 587, 590, 592, 601, 610, 612, 624, 634, 641, 642, 643, 644], "max_textphi": 199, "max_textrhv": 199, "max_textzdr": 199, "85": [199, 581, 585, 632], "max_textrefl": 199, "move": [199, 561, 583, 587, 589, 604, 644], "highest": 199, "min_temp": 201, "There": [202, 583, 585, 587, 592, 609, 643, 646], "colorblind": [202, 582, 587, 609], "friendli": [202, 582, 587, 589, 609], "revers": [202, 217, 228, 277, 288, 306, 321, 339, 354, 373, 437, 589], "_r": 202, "matplotlib": [202, 217, 219, 222, 223, 224, 228, 229, 230, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 288, 289, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 377, 581, 582, 583, 584, 587, 589, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634, 636, 637, 638, 640, 641, 643, 646], "pyart_colormap": 202, "bluebrown10": [202, 609], "bluebrown11": [202, 609], "brbu10": [202, 609], "brbu12": [202, 609], "bu10": [202, 609], "bu7": [202, 609], "budor12": [202, 609], "budor18": [202, 609], "budrd12": [202, 609], "budrd18": [202, 609], "bugr14": [202, 609], "bugy8": [202, 609], "buor10": [202, 609], "buor12": [202, 609], "buor8": [202, 609], "buorr14": [202, 609], "carbone11": [202, 609], "carbone17": [202, 609], "carbone42": [202, 609], "cat12": [202, 609], "ewilson17": [202, 609], "grmg16": [202, 609], "gray5": [202, 609], "gray9": [202, 609], "nwsref": [202, 609], "nwsvel": [202, 609], "nws_spw": [202, 609], "pd17": [202, 609], "rrate11": [202, 609], "rdylbu11b": [202, 609], "refdiff": [202, 609], "scook18": [202, 609], "stepseq25": [202, 609], "symgray12": [202, 609], "theodore16": [202, 609], "wild25": [202, 609], "langrainbow12": [202, 609], "homeyerrainbow": [202, 589, 609], "balanc": [202, 589, 609], "chasespectr": [202, 609], "spectralextend": [202, 609], "displai": [203, 217, 219, 224, 228, 229, 230, 232, 263, 277, 279, 284, 288, 289, 291, 292, 306, 308, 316, 317, 321, 322, 324, 325, 339, 341, 349, 350, 354, 355, 357, 377, 418, 445, 446, 582, 583, 584, 585, 587, 589, 590, 595, 596, 600, 601, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 636, 637, 638, 640, 641, 644], "airborn": [203, 589], "plot_var": [203, 263, 292, 325], "order": [203, 263, 292, 325, 358, 373, 378, 379, 405, 423, 437, 553, 581, 589, 590, 595, 630, 634, 644], "cb": [203, 263, 292, 325, 611], "colorbar": [203, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 249, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 316, 317, 320, 321, 322, 325, 339, 340, 341, 349, 350, 353, 354, 355, 581, 583, 584, 585, 589, 598, 604, 608, 609, 625, 626], "loc": [203, 263, 292, 325, 581, 583, 587, 610], "titl": [204, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 238, 239, 240, 242, 244, 246, 248, 251, 252, 253, 258, 260, 262, 264, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 582, 583, 584, 585, 587, 588, 589, 595, 596, 604, 611, 613, 614, 616, 618, 619, 623, 642], "ext": [205, 237, 250, 265, 294, 327], "png": [205, 237, 250, 265, 294, 327, 582, 583, 585, 587], "datetime_format": [205, 207, 265, 267, 294, 296, 327, 329], "use_sweep_tim": [205, 207, 265, 267, 294, 296, 327, 329], "form": [205, 219, 237, 250, 265, 279, 294, 308, 327, 341, 581, 585, 589], "radar_name_field_sweep_tim": [205, 265, 294, 327], "datetim": [205, 207, 224, 228, 230, 265, 267, 284, 288, 289, 294, 296, 316, 321, 322, 327, 329, 349, 354, 355, 362, 363, 379, 556, 557, 558, 559, 560, 583, 587, 589], "strftime": [205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 583, 584], "suitabl": [205, 237, 250, 265, 294, 327, 585], "xaxi": [209, 212, 269, 272, 298, 301, 331, 334, 611], "static": [210, 211, 220, 221, 225, 231, 232, 270, 271, 280, 281, 285, 290, 291, 299, 300, 309, 310, 323, 324, 332, 333, 342, 343, 356, 357, 582], "yaxi": [210, 211, 213, 214, 215, 270, 271, 273, 274, 275, 299, 300, 302, 303, 304, 332, 333, 335, 336, 337], "keyword": [216, 276, 305, 317, 338, 350, 369, 371, 581, 585, 589, 637, 640], "plot_ppi": [216, 276, 305, 338, 589, 596, 631, 636], "plot_sweep_grid": [216, 589], "target_azimuth": [217, 277, 306, 339, 554], "mask_tupl": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 585], "norm": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 437, 585, 589, 611, 631], "cmap": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 581, 582, 583, 584, 585, 587, 604, 609, 610, 611, 612, 616, 619, 621, 623, 624, 629, 630, 637, 638], "mask_outsid": [217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 582, 585, 589, 618, 619], "title_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 585, 623], "axislabel": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 582, 613, 618, 619], "axislabels_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 589, 630], "colorbar_flag": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 583, 585], "colorbar_label": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 582, 585, 587, 595, 596, 600, 613, 614, 618, 619, 620, 621, 625], "colorbar_ori": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 587, 589], "reverse_xaxi": [217, 228, 277, 288, 306, 321, 339, 354], "fig": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 581, 582, 583, 584, 585, 587, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 629, 631, 632, 638, 640, 641], "tick": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 585, 589, 609, 611, 630, 631], "ticklab": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 585, 589, 630, 631], "raster": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 585, 589], "pseudo": [217, 277, 306, 339, 589], "associ": [217, 277, 306, 339, 394, 581, 592], "pcolormesh": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 581, 589, 604, 620, 630], "integ": [217, 277, 306, 339, 379, 434, 435], "ncp": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 585], "lumin": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585], "scale": [217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 413, 414, 420, 437, 438, 581, 584, 585, 612], "west": [217, 228, 277, 288, 306, 321, 339, 354, 581, 585, 613], "leav": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 583, 585], "orient": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 583, 585, 586, 631, 632], "treat": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 585], "themselv": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 585], "figur": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 582, 583, 584, 585, 587, 588, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 637, 638, 640, 641], "render": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 584, 585], "rather": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585], "larg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 437, 443, 585, 587, 589], "Be": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585, 592], "sure": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 584, 585, 588, 589, 590, 592, 604, 611, 630, 643, 644, 646], "dpi": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 583, 585, 587], "pdf": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585], "ep": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585], "svg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 585], "mappabl": [218, 241, 249, 256, 278, 307, 340], "cax": [218, 241, 256, 278, 307, 340, 631], "imag": [218, 241, 256, 278, 307, 340, 435, 553, 565, 581, 582, 584, 585, 589, 598, 608, 626, 628, 630], "contourset": [218, 241, 249, 256, 278, 307, 340], "etc": [218, 241, 244, 249, 256, 278, 307, 317, 340, 350, 376, 583, 585, 589], "onto": [218, 241, 256, 258, 278, 307, 317, 340, 350, 405, 412, 414, 440, 585], "drawn": [218, 241, 256, 278, 307, 340, 585], "target_rang": [219, 279, 308, 341], "delta_x": [219, 279, 308, 341], "delta_i": [219, 279, 308, 341], "az_limit": [219, 279, 308, 341], "el_limit": [219, 279, 308, 341], "corner": [219, 279, 308, 315, 341, 348, 585, 586, 589], "reflector": [219, 279, 308, 341, 589], "griddata": [219, 279, 308, 341], "min": [219, 279, 308, 341, 581, 585, 632], "max": [219, 279, 308, 341, 377, 581, 585, 589, 600, 604, 609, 610, 615, 623, 632], "npt": [220, 225, 280, 285, 309, 318, 342, 351], "hair": [220, 280, 309, 342, 617], "higher": [220, 225, 280, 285, 309, 318, 342, 351, 584, 638, 640], "col": [221, 225, 226, 281, 285, 286, 310, 319, 343, 352, 584], "line": [221, 227, 243, 244, 255, 257, 281, 287, 310, 313, 314, 317, 318, 320, 343, 346, 347, 350, 351, 353, 377, 437, 582, 583, 584, 585, 589, 590, 592, 598, 608, 610, 626, 628, 643, 644, 646], "color": [221, 222, 223, 225, 226, 243, 281, 282, 283, 285, 286, 310, 311, 312, 314, 317, 318, 319, 343, 344, 345, 350, 352, 377, 582, 583, 584, 585, 587, 610, 611, 612, 620, 621, 628, 630, 631], "linestyl": [221, 225, 226, 243, 281, 285, 286, 310, 319, 343, 352, 583, 585, 587, 610, 611, 621], "symbol": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348], "text_color": [222, 223, 282, 283, 311, 312, 344, 345], "text": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348, 458, 583, 588, 589, 592, 609, 618, 632, 634, 638], "just": [222, 223, 282, 283, 311, 312, 344, 345, 367, 589, 590, 609, 612, 636, 642, 644, 646], "marker": [222, 223, 227, 243, 257, 282, 283, 287, 311, 312, 320, 344, 345, 353, 581, 583], "title_datetime_format": [224, 228, 284, 288, 316, 321, 349, 354], "title_use_sweep_tim": [224, 228, 284, 288, 316, 321, 349, 354], "range_ring_location_km": [225, 285, 318, 351], "lw": [225, 226, 285, 286, 319, 352, 585, 587], "ring": [225, 226, 285, 286, 318, 319, 351, 352, 583, 605, 617], "range_r": [226, 286, 319, 352], "seri": [226, 286, 319, 352, 581, 584], "draw": [226, 244, 255, 286, 317, 319, 350, 352, 583, 585], "format_str": [227, 287, 320, 353], "ray_min": [227, 287, 320, 353], "ray_max": [227, 287, 320, 353], "style": [227, 243, 257, 287, 313, 314, 318, 320, 346, 347, 351, 353, 377, 589], "ignoretilt": 229, "antenna_to_cartesian_track_rel": 229, "slant": 229, "ncar": 229, "soloii": 229, "time_axis_flag": [230, 289, 322, 355, 584], "date_time_form": [230, 289, 322, 355], "tz": [230, 289, 322, 355, 583], "zone": [230, 289, 322, 355], "info": [230, 289, 317, 322, 350, 355, 585, 589, 631, 642], "aspect_ratio": [231, 290, 323, 356], "aspect": [231, 290, 323, 356, 609], "xlim": [232, 291, 324, 357, 581, 582, 585, 587, 614, 616, 620, 621, 640], "ylim": [232, 291, 324, 357, 581, 582, 584, 585, 587, 614, 616, 618, 619, 620, 621, 623, 625], "cartopi": [233, 234, 235, 236, 244, 292, 317, 581, 583, 585, 587, 589, 590, 598, 600, 601, 604, 608, 610, 611, 624, 626, 628, 630, 634, 637, 638, 640, 641, 643, 644, 646], "coastlin": [234, 244, 317, 350, 581, 585], "polit": 235, "state": [236, 438, 583, 585, 587, 589], "grid_name_field_level_tim": [237, 250], "latitudin": [239, 246, 260], "step": [242, 377, 582, 584, 592, 600, 620, 621, 630, 646], "interp_typ": 242, "x_axi": [242, 610], "metpi": [242, 583, 585, 587], "design": [242, 565, 581, 590, 620, 630, 634, 644], "geodes": 242, "nearest": [242, 369, 414, 432, 554, 555, 573, 581, 585, 589, 640], "dataarrai": 242, "interp": [242, 439], "ex": [242, 439, 583, 587, 588, 609, 644], "upper": [242, 244, 246, 248, 258, 260, 262, 583, 587, 610], "colormesh": [242, 244, 246, 248, 258, 260, 262], "64": [242, 244, 246, 248, 258, 260, 262, 582, 609, 614, 615, 616, 620, 622, 624, 625, 628, 641, 643], "linewidth": [243, 257, 583, 585, 587, 611, 620, 621], "crosshair": [243, 257, 585], "lat_lin": [244, 255, 317, 350, 583, 585, 604, 617, 628], "lon_lin": [244, 255, 317, 350, 583, 585, 604, 617, 628], "embellish": [244, 317, 350, 583, 611], "add_grid_lin": [244, 317, 583], "reason": [244, 255, 585], "america": [244, 255, 317, 350, 585], "cr": [244, 292, 317, 581, 583, 585, 587, 600, 601, 604, 610, 611, 617, 624, 628, 630, 631, 637, 638, 641], "subsequ": [244, 317, 585], "geoax": [244, 317, 585, 637, 640], "platecarre": [244, 317, 581, 583, 585, 587, 600, 604, 610, 611, 624, 628, 630, 638, 641], "shapefil": [244, 317, 350, 585], "certain": [244, 317, 359, 435, 565, 585, 589, 630, 641], "plot_latitudinal_level": [245, 259], "y_index": [246, 260], "basemap": [246, 248, 249, 254, 255, 258, 260, 262, 325, 346, 347, 348, 350, 351, 589, 634, 643], "plot_longitudinal_level": [247, 261], "x_index": [248, 262], "top": [249, 414, 440, 581, 583, 586, 589, 590, 609, 628, 640, 644], "veric": 251, "area_thresh": [255, 350], "10000": [255, 350, 446, 610, 630, 640], "auto_rang": 255, "min_lon": [255, 317, 350, 583, 585, 604, 617, 641], "92": [255, 618, 628], "max_lon": [255, 317, 350, 583, 585, 604, 617, 641], "86": [255, 585], "min_lat": [255, 317, 350, 583, 585, 604, 617, 641], "max_lat": [255, 317, 350, 583, 585, 604, 617, 641], "44": [255, 423, 581, 583, 630, 643], "databas": [255, 350, 587], "merc": [255, 350], "mercat": 255, "line_styl": [257, 313, 314, 318, 346, 347, 351, 617], "plot_rhi": [276, 305, 338, 581], "plot_vpt": [276, 305, 338, 584], "grid_project": [292, 413, 414, 585], "progress": [292, 325], "some": [292, 325, 389, 400, 439, 458, 582, 583, 584, 585, 587, 588, 589, 601, 609, 610, 628, 630, 634, 638, 640, 643], "correctli": [292, 325, 589], "github": [292, 325, 583, 586, 589, 621, 634, 643, 646], "tracker": [292, 325, 590, 634, 644], "azimuthalequidist": 292, "line_lon": [313, 346], "line_lat": [313, 346], "compat": [313, 314, 315, 318, 346, 347, 348, 351, 374, 583, 589, 593, 646], "line_x": [314, 347], "line_i": [314, 347], "ro": [315, 348], "label_text": [315, 348], "label_offset": [315, 348], "bottom": [315, 348, 583, 585, 609, 611], "110m": [317, 585], "shapefile_kwarg": [317, 585], "alpha": [317, 350, 425, 426, 427, 428, 429, 430, 583, 587, 611, 620], "edgecolor": [317, 350, 583, 587, 620], "face": [317, 350, 585], "reson": [317, 350, 585], "lambertconform": [317, 585, 601, 617, 637], "domain": [317, 350, 581, 585, 604], "neither": [317, 350, 381, 585], "extend": [317, 350, 373, 585], "word": [317, 585], "10m": [317, 583, 585, 601, 617], "50m": [317, 585, 638, 641], "naturalearthfeatur": [317, 585], "tranpar": [317, 350, 585], "overplot": [317, 350, 585], "pixel": [317, 350, 434, 435, 581, 585], "lcc": 350, "cylindr": 350, "mill": 350, "exhibit": 350, "distort": 350, "aea": 350, "laea": 350, "conform": [350, 585, 634, 636], "tmerc": 350, "stere": 350, "aeqd": 350, "cass": 350, "even": [350, 439, 587, 620, 634, 640, 646], "cyl": [350, 589], "cannot": [350, 361, 583, 585], "lake": [350, 587], "esri": 350, "background": [350, 358, 423, 443, 585, 588, 617, 624, 630], "untest": 350, "always_core_thr": [358, 423, 630], "use_cosin": [358, 423, 630], "max_diff": [358, 423, 630], "zero_diff_cos_v": [358, 423, 630], "use_addit": [358, 423, 630], "scalar_diff": [358, 423, 630], "convect": [358, 423, 443, 581, 589, 598, 627, 633], "stratiform": [358, 423, 443, 589, 598, 627, 633], "classif": [358, 423, 426, 436, 443, 589, 598, 627, 633], "cosin": [358, 423, 630], "scalar": [358, 423, 583, 585, 589, 630], "classifi": [358, 423, 436, 589, 630, 631], "eqn": [358, 423], "b1": [358, 423], "yuter": [358, 423, 443, 565, 612, 630], "1997": [358, 423, 630], "zero": [358, 375, 423, 435, 437, 573, 589, 630, 637, 641], "multipli": [358, 423, 584, 630, 636], "most": [359, 367, 583, 584, 585, 589, 609, 638, 640, 646], "storage_opt": [360, 369, 371], "anon": [360, 369, 371, 581, 583, 587], "open": [360, 369, 371, 458, 581, 584, 585, 587, 588, 589, 590, 614, 634, 636, 637, 638, 640, 641, 642, 644, 646], "binari": [360, 581, 592], "transpar": [360, 583, 585, 589, 620], "decompress": [360, 589], "gzip": [360, 367, 368], "bzip2": [360, 589], "close": [360, 437, 582, 583, 587, 589], "compress": [360, 367, 368, 585, 589], "backend": [360, 369], "googl": [360, 369, 589, 590, 644], "cloud": [360, 369, 437, 583, 584, 590, 592, 598, 599, 602, 634, 644, 646], "storag": [360, 369, 535], "amazon": [360, 369, 581, 583, 585, 587, 600, 601], "web": [360, 369, 377, 581, 585, 587, 600, 601], "servic": [360, 369, 581, 583, 585, 587, 592, 600, 601, 609], "s3": [360, 369, 583, 587, 600, 601, 612, 630], "file_lik": 360, "use_rsl": 361, "read_": 361, "trmm": [361, 373, 589, 634, 643], "librari": [361, 370, 373, 376, 377, 581, 583, 584, 585, 587, 589, 590, 591, 634, 636, 637, 638, 640, 641, 642, 643, 644], "choos": [361, 585, 598, 608, 626, 630, 646], "Not": [361, 368], "typeerror": [361, 589], "launch_datetim": 362, "date": [362, 363, 579, 583, 585, 588, 589, 600, 601], "radiosond": 362, "launch": 362, "record": [362, 587, 642], "target_datetim": 363, "closest": [363, 405], "profile_datetim": 363, "use_file_field_attribut": 365, "csu": [365, 589], "chill": 365, "chl": [365, 589], "field_file_nam": 365, "long_nam": [365, 581, 584, 630, 637, 642], "zlib": [367, 368], "read_mdv": [367, 582, 596, 605, 616, 620, 621, 622], "interchang": 367, "vlevel": 367, "proj_polar_radar": 367, "9": [367, 428, 436, 561, 581, 583, 584, 585, 587, 588, 601, 612, 621, 628, 629, 630, 636, 641, 642], "proj_rhi_radar": 367, "13": [367, 561, 581, 584, 587, 601, 602, 623, 634, 641, 642], "vlevel_typ": 367, "vert_type_z": 367, "vert_type_elev": 367, "vert_type_az": 367, "17": [367, 583, 584, 618, 623], "vert_type_pressur": 367, "vert_type_theta": 367, "unknown": [367, 589], "station": [369, 370, 585, 601], "linear_interp": 369, "nexrad": [369, 370, 371, 372, 581, 589, 598, 599, 602, 608, 612, 626, 630, 634, 642], "archiv": [369, 583, 585, 587, 613, 634], "host": [369, 371, 583, 592], "noaa": [369, 371, 373, 581, 583, 585, 587, 600, 601, 612, 630], "nation": [369, 371, 581, 583, 585, 587, 600, 609], "climat": [369, 371, 584, 585, 587, 589, 590, 634, 636, 637, 638, 640, 641, 642, 644], "ucar": [369, 370, 581], "thredd": [369, 370, 376], "server": [369, 370], "letter": [369, 370, 372], "icao": [369, 370, 589], "older": [369, 370, 589, 590, 598, 599, 602, 634, 644], "mix": [369, 565, 612, 630], "constant": [369, 409, 413, 414, 434, 437, 581, 584, 589, 601], "fsspec": [369, 371, 587, 589], "cut": [369, 370, 371, 435], "www": [369, 370, 371, 434, 583, 587, 590, 644], "ncdc": [369, 371], "gov": [369, 371, 581, 582, 583, 587, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 613, 614, 615, 616, 618, 620, 621, 622, 623, 625, 628, 629], "edu": [369, 370, 434, 581, 612, 630], "catalog": [369, 370, 581], "html": [369, 370, 434, 583, 587, 589, 590, 634, 643, 644], "common": [370, 584, 589, 634, 643], "cdm": [370, 376], "url": [370, 583, 585, 601], "java": [370, 376], "tool": [370, 376, 581, 584, 590, 634, 643, 644], "opendap": 370, "accept": [370, 438, 439, 585, 589, 590, 644], "compil": [370, 438, 589, 634, 643], "unidata": [370, 581, 600], "htm": 370, "product": [371, 373, 418, 446, 581, 585, 589], "nw": [371, 587], "wsr": 371, "88d": 371, "iii": 371, "distribut": [371, 423, 431, 445, 549, 550, 551, 552, 566, 567, 589, 590, 630, 634, 644], "roc": 371, "wsr88d": [371, 372], "level_iii": 371, "level3info": 371, "asp": 371, "radar_format": 372, "callid": 372, "skip_range_check": 372, "rsl_radar": 372, "id": [372, 377, 581, 589], "verifi": [372, 568, 578], "ioerror": 372, "time_ord": [373, 589], "full_xhdr": 373, "noaa_hh_hdr": 373, "ignore_xhdr": 373, "ignore_sweep_start_m": 373, "sigmet": [373, 589, 634], "iri": [373, 589, 634, 643], "sequenti": [373, 609], "re": [373, 583], "manner": 373, "determind": 373, "maintain": [373, 412, 589], "yet": [373, 600], "warn": [373, 376, 581, 583, 584, 585, 587, 589, 595, 601, 604, 640], "reverse_and_rol": 373, "strictli": 373, "increas": [373, 414, 437, 440, 581, 585, 590, 609, 640, 644], "becom": [373, 630, 637, 640], "thisopt": 373, "strict": 373, "header": [373, 589], "decod": [373, 589], "hurrican": [373, 585, 630], "hunter": 373, "millisecond": 373, "precis": 373, "explic": 373, "read_rsl": [373, 643], "error": [373, 377, 438, 439, 581, 583, 585, 588, 589, 643], "uf": [374, 379, 589, 634], "introduc": [374, 439], "implement": [374, 381, 394, 413, 427, 434, 584, 585, 589, 590, 595, 644], "time_refer": [375, 636], "compliant": 375, "mani": [375, 589, 590, 634, 640, 644, 646], "outlin": [375, 437, 561, 644], "_zlib": [375, 376], "_deflatelevel": [375, 376], "_shuffl": [375, 376], "_fletcher32": [375, 376], "_contingu": [375, 376], "_chunksiz": [375, 376], "_endian": [375, 376], "_least_significant_digit": [375, 376], "_fillvalu": [375, 376, 589, 637, 642], "write_proj_coord_si": 376, "proj_coord_si": 376, "write_point_x_y_z": 376, "write_point_lon_lat_alt": 376, "projectioncoordinatesystem": 376, "toolsui": 376, "written": [376, 378, 379, 589, 592, 634], "appropri": [376, 561, 585, 593], "understood": 376, "rgb": 377, "viridi": [377, 630], "color_level": 377, "warp": 377, "sld": 377, "use_doublequot": 377, "geotiff": [377, 589, 634], "wgs84": 377, "sphere": [377, 562, 574], "latter": [377, 585], "usabl": [377, 581], "byte": [377, 589], "former": 377, "gi": 377, "while": [377, 585, 634, 638, 646], "show": [377, 581, 582, 583, 585, 587, 588, 589, 590, 595, 596, 600, 601, 604, 605, 606, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 630, 636, 638, 640, 641, 642, 644], "lack": [377, 392, 402], "composit": [377, 418, 581, 584, 589, 598, 627, 633], "gdal": [377, 589, 634], "via": [377, 583, 585, 592], "conda": [377, 587, 589, 590, 634, 643, 644, 646], "rbg": 377, "tabl": [377, 581], "column": [377, 563, 564, 581, 583, 584, 585, 589, 598, 627, 633], "categor": [377, 583, 631], "255": [377, 589], "hydrometeor": [377, 426, 436, 589, 598, 627, 633, 638], "gdalwarp": 377, "command": [377, 589, 590, 592, 634, 637, 644, 646], "o": [377, 458, 583, 585, 590, 611, 634, 643, 644], "az": [377, 583, 589, 618, 619], "descriptor": 377, "tiff": 377, "don": [377, 584, 585, 589, 604], "t": [377, 423, 437, 438, 441, 446, 581, 584, 585, 589, 604, 630, 634, 636], "quot": 377, "help": [377, 447, 583, 584, 585, 587, 590, 592, 604, 609, 630, 644, 646], "translat": 377, "sr": [377, 581], "instead": [377, 581, 583, 585, 589, 590, 601, 630, 640, 643, 644, 646], "mdv_field_nam": [378, 589], "field_write_ord": [378, 379], "sentinel": [378, 379], "float32": [378, 581, 584, 585, 589, 628, 636, 638, 642], "_write_as_dtyp": 378, "writabl": 378, "satisfi": 378, "xy": [378, 414], "irregular": 378, "exce": [378, 630], "122": [378, 600, 604, 610, 629], "uint8": 378, "uint16": 378, "scale_factor": [378, 584], "add_offset": [378, 584], "uncompress": 378, "sai": [378, 590, 644], "uf_field_nam": 379, "radar_field_nam": 379, "volume_start": 379, "templates_extra": 379, "radar_beam_width_h": [379, 584], "radar_beam_width_v": [379, 584], "radar_receiver_bandwidth": 379, "prt": [379, 584], "polarization_mod": 379, "round": [379, 585, 589], "_uf_scale_factor": 379, "charact": 379, "advanc": [379, 581], "usag": 379, "templat": [379, 589, 592, 644], "mandatory_head": 379, "optional_head": 379, "field_head": 379, "lazi": [380, 381, 383, 390, 589], "set_lazi": 381, "callabl": [381, 390, 584, 585], "cach": 381, "tradit": 381, "supplement": 381, "syntax": [381, 589], "prevent": [381, 414, 583, 589, 590, 644], "comparison": [381, 589, 604], "__cmp__": 381, "__ge__": 381, "__gt__": 381, "__le__": 381, "__lt__": 381, "__ne__": 381, "nor": 381, "viewitem": 381, "viewkei": 381, "viewvalu": 381, "fromkei": 381, "tradition": 381, "referenc": 381, "lazyloaddictionari": 381, "henc": 381, "key1": 381, "value1": 381, "key2": 381, "value2": 381, "lazy_func": 381, "lambda": 381, "lazykey1": 381, "item": [382, 392, 395, 402, 589], "els": [384, 385, 396, 584], "value_cal": 390, "concret": 394, "__getitem__": [394, 584], "__setitem__": 394, "__delitem__": 394, "__iter__": 394, "__len__": 394, "robust": 404, "src_radar": 405, "dest_radar": 405, "distance_toler": [405, 604], "500": [405, 413, 414, 583, 587, 604, 610, 614], "gatefilter_src": [405, 604], "time_toler": [405, 604], "60": [405, 581, 595, 600, 604, 606, 611, 636, 638, 640], "kd": 405, "tree": [405, 414], "physic": [405, 418, 423, 630], "easi": [405, 418, 634], "equival": [405, 582, 584, 589, 600, 611, 619, 625], "src_radar_i": 405, "src_radar_x": 405, "destin": [405, 407, 583, 587, 604], "toler": [405, 406, 408, 554, 555, 589], "src_radar_tim": 405, "dest_radar_tim": 405, "gate_mapp": 405, "src": [405, 587], "dest": 405, "dest_index": 405, "radar_map": 405, "mapped_radar": [405, 604], "adequ": [405, 604], "getter": [406, 408], "field_list": [407, 435], "zg": [409, 410, 411], "yg": [409, 410, 411], "xg": [409, 410, 411], "roi": [409, 410, 411, 414, 589], "influenc": [409, 412, 413, 414, 640], "grow": [410, 411, 413, 414, 590, 644], "virtual": [411, 413, 414], "grid_shap": [412, 413, 414, 536, 605, 606, 610, 630, 640], "grid_limit": [412, 413, 414, 536, 605, 606, 610, 630, 640], "gridding_algo": 412, "map_gates_to_grid": [412, 589], "copy_field_dtyp": [412, 589], "map_to_grid": [412, 413, 589], "significantli": [412, 414], "faster": [412, 414, 585, 589], "barn": [412, 414, 589, 640], "1964": 412, "techniqu": 412, "maxim": 412, "numer": [412, 589], "analysi": [412, 564, 585], "meteorologi": [412, 418, 437, 446, 561], "climatologi": [412, 446], "396": [412, 584], "409": [412, 589], "cressman": [412, 414, 640], "1959": 412, "monthli": 412, "review": [412, 582, 589], "87": [412, 581, 583], "367": 412, "374": [412, 589], "paulei": [412, 640], "1990": [412, 640], "theoret": 412, "discret": 412, "respons": 412, "118": [412, 618, 626], "1145": [412, 589], "1164": [412, 589], "grid_origin": [413, 414, 606, 610], "grid_origin_alt": [413, 414], "map_roi": [413, 414], "weighting_funct": [413, 414, 640], "barnes2": [413, 414, 589], "toa": [413, 414, 416, 440], "17000": [413, 414, 640], "roi_func": [413, 414, 589, 640], "dist_beam": [413, 414, 640], "constant_roi": [413, 414, 589], "z_factor": [413, 414], "xy_factor": [413, 414], "02": [413, 414, 581, 584, 597, 612, 626, 630], "min_radiu": [413, 414, 589, 640], "h_factor": [413, 414], "nb": [413, 414], "bsp": [413, 414], "weight": [413, 414, 436, 437, 445, 581, 589, 640], "linearli": 413, "roifunct": 413, "dist": [413, 414, 566, 567, 581, 583], "get_roi": 413, "cython": [413, 589], "grid_siz": [413, 414], "grid_from_radar": [413, 414, 605, 606, 610, 630, 640], "around": [413, 423, 553, 587, 605, 620, 623, 630, 636, 638], "copy_field_data": 414, "kd_tree": 414, "leafsiz": 414, "nearbi": [414, 606], "coodin": 414, "azimut": 414, "similarili": 414, "example_roi_func_const": 414, "example_roi_func_dist": 414, "example_roi_func_dist_beam": 414, "altern": [414, 418, 585, 630], "foreach": 414, "metet": 414, "dist_mean": 414, "preserv": [414, 638], "less": [414, 423, 439, 565, 630], "memori": 414, "slower": [414, 437], "It": [414, 439, 553, 561, 583, 585, 590, 593, 604, 644, 646], "leaf": 414, "lookup": 414, "affect": 414, "optim": [414, 437, 589], "natur": [414, 585], "25000": [416, 640], "floor": 416, "measur": [416, 423, 425, 431, 436, 437, 438, 439, 584, 585, 587, 590, 630, 634, 636, 637, 638, 640, 641, 642, 644], "nyq": [417, 587, 638], "check_nyq_uniform": 417, "deriv": [417, 437, 439], "try": [417, 437, 583, 588, 640, 641], "vel_dict": 417, "entri": [417, 642], "am": [418, 587, 590, 634, 644], "glossari": 418, "dry": [418, 631], "world": [418, 598, 608], "aloft": 418, "oppos": [418, 612], "nwp": [418, 631], "why": [418, 585, 588, 590, 644], "would": [418, 581, 582, 583, 584, 587, 589, 590, 600, 601, 638, 640, 644], "think": 418, "turn": [418, 441, 609, 630, 634], "spin": 418, "author": [418, 582, 588, 592, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632], "randi": [418, 587], "chase": [418, 587], "dopplerchas": [418, 589], "look": [418, 441, 581, 583, 584, 585, 587, 588, 589, 600, 601, 604, 611, 634, 636, 638, 640, 642], "american": 418, "meteorolog": [418, 427, 446, 585], "2022": [418, 565, 581, 584, 588, 600, 612, 630, 644], "ametsoc": 418, "wiki": [418, 434], "cdr_field": 419, "circular": [419, 566, 567, 589, 630], "depolar": [419, 584], "cdr": 419, "l_field": 420, "logarithm": 420, "log10": [420, 604], "l_field_out": 420, "noisedbz_v": 421, "ref_dist": 421, "noise_field": [421, 422], "noisedbz": 421, "dx": [423, 443, 630], "dy": [423, 443, 583, 630], "level_m": 423, "42": [423, 443, 581, 583, 584, 587, 628, 630], "bkg_rad_km": [423, 630], "11": [423, 572, 581, 583, 595, 601, 628, 641, 642], "55": [423, 581, 583, 624, 628, 630], "calc_thr": [423, 630], "weak_echo_thr": [423, 630], "min_dbz_us": [423, 630], "db_averag": [423, 630], "remove_small_object": [423, 630], "min_km2_siz": [423, 630], "val_for_max_conv_rad": [423, 630], "max_conv_rad_km": [423, 630], "cs_core": 423, "nosfcecho": [423, 630], "weakecho": [423, 630], "sf": [423, 630], "conv": [423, 630], "estimate_flag": [423, 630], "estimate_offset": [423, 630], "partit": [423, 443, 595], "pars": [423, 584, 585, 589], "least": [423, 630], "simpler": [423, 630], "percentag": 423, "weak": [423, 630], "surfac": [423, 584, 630], "snow": [423, 426, 565, 584, 612, 630, 631], "underestim": [423, 630], "wih": 423, "convsf_dict": [423, 630], "raindrop": [423, 630], "pacif": [423, 630], "warm": [423, 437, 630], "pool": [423, 630], "implic": [423, 630], "appl": [423, 439, 441, 443, 445, 590, 630, 644], "meteor": [423, 439, 441, 443, 445, 590, 630, 634, 644], "36": [423, 581, 601, 604, 606, 610, 624, 628, 630, 640], "847": [423, 589, 630], "867": [423, 589, 630], "doi": [423, 427, 428, 436, 438, 439, 565, 581, 584, 585, 587, 590, 612, 630, 634, 636, 637, 638, 640, 641, 642, 644], "1175": [423, 439, 589, 630, 634], "1520": [423, 630], "0450": [423, 630], "036": [423, 630], "3c0847": [423, 630], "morsdo": [423, 630], "3e2": [423, 630], "smith": [423, 630], "wilheit": [423, 630], "zipser": [423, 630], "character": [423, 443, 630], "tropic": [423, 630], "kwajex": [423, 630], "385": [423, 589, 630], "415": [423, 630], "jam2206": [423, 630], "the_spectra": 424, "vel_bin": 424, "wavelength": [424, 581, 584], "left_limit": 424, "right_limit": 424, "new_spectra": 424, "new_bin": 424, "a_field": [425, 426, 429], "rr_field": [425, 426, 427, 428, 429, 430, 431], "go": [425, 426, 427, 429, 430, 575, 582, 583, 589, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 637], "diederich": 425, "simmer": [425, 441], "zhang": [425, 441], "tromel": [425, 441], "2015": [425, 428, 441, 634], "wavelenght": 425, "hydrometeorologi": 425, "487": [425, 581], "502": [425, 589], "alphazr": 426, "0376": [426, 428, 429, 430], "betazr": 426, "6112": [426, 428, 429, 430], "alphaz": [426, 429, 430], "betaz": [426, 429, 430], "alphaa": [426, 429], "betaa": [426, 429], "mp_factor": 426, "hydro_field": [426, 436], "main_field": [426, 429, 430], "thresh_max": [426, 429, 430], "main": [426, 429, 430, 581, 583, 584, 585, 589, 590, 615, 644], "secondari": [426, 429, 430, 589], "figuera": [427, 436], "term": [427, 589], "monitor": 427, "french": 427, "sever": [427, 583, 589], "quantit": 427, "ideal": [427, 584], "quarterli": 427, "royal": 427, "2012": [427, 437, 439], "1002": [427, 589], "qj": 427, "1934": 427, "fabri": 428, "fr\u00e9d\u00e9ric": 428, "meterologi": 428, "ch": [428, 631, 632], "pg": 428, "148": 428, "165": 428, "1017": 428, "cbo9781107707405": 428, "blend": [429, 430, 585, 620], "rain_main": [429, 430], "alphakdp": 430, "betakdp": 430, "polynomi": 431, "develop": [431, 581, 585, 589, 634, 643], "mcgill": [431, 634], "doell": 431, "systemat": 431, "variat": [431, 437, 589], "relationship": 431, "drop": [431, 584, 585, 589], "northern": [431, 583], "germani": 431, "seven": 431, "year": [431, 581, 583, 587, 588, 600, 601, 644], "1998": 431, "technol": [431, 441], "1545": 431, "1556": 431, "joss": 431, "switzerland": 431, "vdf": 431, "hochschulverlag": 431, "ag": [431, 631], "eth": 431, "zurich": 431, "134": [431, 581], "sonde_dset": 432, "time_kei": 432, "height_kei": 432, "nvar": 432, "vap": 432, "startard": 432, "ncvar": 432, "return_d": 432, "freq": 433, "hz": [433, 618], "freq_band": 433, "grid1": 434, "grid2": 434, "return_valu": 434, "displac": 434, "en": [434, 587, 590, 634, 643, 644], "wikipedia": 434, "phase_correl": 434, "inspir": 434, "christoph": 434, "gohlk": 434, "lfd": 434, "uci": 434, "imreg": 434, "advect": [434, 435, 589], "trim_edg": 435, "shifted_grid": 435, "subset": [435, 575, 581, 583, 587, 589, 598, 627, 628], "mass_cent": 436, "approach": [436, 581, 584], "besic": 436, "2016": [436, 581, 584, 585, 587, 590, 634, 636, 637, 638, 640, 641, 642, 644], "ndarrai": [436, 642], "centroid": 436, "nclass": 436, "nvariabl": 436, "hydro": [436, 631], "ventura": 436, "grazioli": [436, 438], "gabella": 436, "germann": 436, "bern": [436, 438], "statist": [436, 589, 590], "cluster": 436, "semi": 436, "supervis": 436, "mea": [436, 565, 612], "4425": 436, "4445": 436, "5194": [436, 565, 612], "amt": [436, 565, 612], "cg": 437, "backscatt": [437, 441], "clpf": 437, "length_scal": 437, "first_guess": 437, "finite_ord": 437, "fill_valu": [437, 438, 439, 443, 585, 636, 637, 642], "psidp_field": [437, 438, 439, 631], "verbos": [437, 441, 589, 590, 644], "total": [437, 438, 439, 584, 587, 595, 596, 597, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633], "maesaka": 437, "monoton": [437, 440, 609], "propag": [437, 438, 439], "notat": 437, "primari": [437, 584], "proport": 437, "dr": 437, "analys": [437, 438, 439], "cost": [437, 589], "nonlinear": 437, "conjug": 437, "gradient": [437, 589, 609], "broyden": 437, "fletcher": 437, "goldfarb": 437, "shanno": 437, "bfg": 437, "howev": [437, 585, 638], "100k": 437, "consider": [437, 587, 630], "parameter": 437, "attentu": 437, "constraint": 437, "bring": [437, 581], "guess": 437, "root": [437, 643, 646], "signifi": [437, 443], "everywher": 437, "exactli": [437, 604], "avoid": [437, 589, 592, 646], "converg": 437, "fact": [437, 439], "closer": 437, "finit": 437, "accuraci": 437, "maxit": 437, "met": 437, "achiev": 437, "somewhat": 437, "arbitrari": 437, "parallel": [437, 438, 439], "thread": [437, 585], "cpu": 437, "multiprocess": 437, "capabl": [437, 584, 638, 642], "relev": [437, 593], "kdp_dict": [437, 438, 439], "phidpf_dict": 437, "phidpr_dict": [437, 438, 439], "forward": [437, 562, 563], "iwanami": 437, "maki": 437, "seventh": 437, "european": 437, "confer": 437, "hydrologi": 437, "rcov": 438, "pcov": 438, "prefilter_psidp": [438, 439], "filter_opt": [438, 439], "kalman": 438, "schneeb": 438, "psidp": [438, 439], "char": [438, 439], "capit": [438, 439], "intercept": 438, "slope": 438, "3x3": 438, "covari": 438, "matrix": [438, 585, 589], "4x4": 438, "filter_psidp": [438, 439, 589], "enabl": [438, 439, 584, 587, 589], "kdp_std_dict": 438, "dev": [438, 584, 587, 590, 640, 644], "ensembl": 438, "ieee": 438, "geosci": 438, "remot": [438, 583, 584, 585, 589, 590, 600, 644], "sen": 438, "52": [438, 441, 581, 584, 628], "5137": 438, "5149": 438, "1109": [438, 589], "tgr": 438, "2287017": 438, "windsiz": 439, "n_iter": 439, "vulpiani": [439, 589], "pre": [439, 589], "expect": [439, 590, 644], "advantag": 439, "eat": 439, "gianfranco": 439, "mario": 439, "montopoli": 439, "luca": 439, "delli": 439, "passeri": 439, "antonio": 439, "gioia": 439, "pietro": 439, "giordano": 439, "frank": 439, "marzano": 439, "On": [439, 582, 583], "dual": [439, 589], "mountain": 439, "climatol": [439, 630], "51": [439, 581, 596, 597, 628], "405": [439, 589], "425": [439, 589], "05024": 439, "profile_field": 440, "height_field": 440, "3re": 440, "whole": [440, 589], "height_dict": 440, "profile_dict": 440, "desired_angl": [441, 589], "quasi": 441, "qvp": [441, 589], "wanted_angl": 441, "dictonari": 441, "quasai": 441, "troemel": 441, "kumjian": 441, "clim": [441, 584, 585], "2529": 441, "2548": 441, "meteorol": [441, 630], "54": [441, 581, 583, 584, 601, 632], "2344": 441, "2359": 441, "reev": 441, "tschallen": 441, "wai": [441, 584, 590, 592, 604, 636, 644, 646], "submit": [441, 585, 634], "intens": 443, "work_level": 443, "3000": [443, 636, 640], "peak_rel": 443, "area_rel": 443, "medium": 443, "bkg_rad": 443, "11000": [443, 640], "use_intens": 443, "steiner": [443, 589, 630], "1995": [443, 630], "greater": [443, 585, 630], "bright": [443, 581], "sgp": [443, 536], "peaked": 443, "eclass": 443, "climatolog": [443, 630], "storm": [443, 540, 542, 581, 584, 585, 587, 612, 630, 640], "gaug": [443, 630], "1978": [443, 630], "2007": [443, 630], "z_want": [445, 446, 590, 632, 644], "valid_ray_min": [445, 590, 644], "velocity_azimuth_displai": [445, 590, 644], "one_sweep_radar": 445, "extract_sweep": [445, 587, 630, 632], "vad": [445, 446, 589, 590, 598, 627, 633, 644], "amount": [445, 584, 587, 590, 640, 644], "_averag1d": [445, 590, 644], "idw": 445, "brown": [445, 589, 590, 644], "wexler": [445, 590, 644], "1968": [445, 590, 644], "kinemat": [445, 590, 644], "105": [445, 590, 632, 644], "113": [445, 590, 628, 644], "linespac": 446, "michelson": [446, 634], "andersson": 446, "koistinen": [446, 634], "collier": 446, "riedl": 446, "szturc": 446, "gjertsen": 446, "nielsen": 446, "overgaard": 446, "2000": [446, 581, 605, 640], "baltex": 446, "centr": 446, "methodologi": [446, 638], "smhi": 446, "swedish": 446, "hydrolog": 446, "institut": [446, 581, 642], "norrkop": 446, "suffix": 458, "tmp": 458, "dir": 458, "temporari": [458, 589], "my_cwd": 458, "getcwd": 458, "tmpdir": 458, "_": [458, 583, 587, 600, 601, 631], "txt": [458, 589, 643], "wt": 458, "assert": [458, 589, 590, 644], "isfil": 458, "path_to_fil": 535, "local": [535, 582, 583, 587, 589, 590, 634, 643, 644], "without": [536, 548, 581, 584, 589, 643], "site": [536, 581, 583, 584, 585, 586, 587, 595, 601, 628, 637, 640, 643], "oklahoma": [536, 587], "puls": [539, 584, 589, 638], "sigma": [540, 620, 621], "mu": 540, "gaussian": [540, 620], "sapr": 541, "dp_phase_shift": [541, 628, 636], "diff_phas": [541, 636], "differential_reflect": [541, 600, 613, 620, 641, 642], "rectangular": [542, 543, 585], "alia": [546, 547, 585, 589], "miscellan": 548, "depreci": [548, 589], "caution": 548, "radian": [549, 551, 570, 581], "std": [551, 552, 567, 572], "convolut": 553, "ndimag": [553, 589, 620, 621], "generic_filt": 553, "convers": [553, 584], "pi": [553, 581, 638], "std_dev": 553, "az_tol": 554, "radar_rhi": 554, "target_elev": 555, "el_tol": 555, "radar_ppi": 555, "epoch": [556, 557, 558, 559, 560, 581], "navg": 561, "nnoise_min": 561, "hildebrand": [561, 589], "sehkon": 561, "1974": 561, "spectral": [561, 581, 584, 589], "articl": 561, "peak": [561, 584, 638], "var": [561, 576, 577, 581], "varianc": 561, "nnois": 561, "sekhon": [561, 589], "808": 561, "811": [561, 589], "target_latitud": [562, 574], "target_longitud": [562, 574], "bear": [562, 583], "alongitudeg": 562, "great": [562, 574], "circl": [562, 574, 630], "known": [562, 589, 590, 642, 644], "6371000": [562, 574], "calculatitude": 562, "degress": [562, 574], "further": [564, 582, 584], "sphere_dist": 564, "for_azimuth": 564, "get_column_rai": 564, "xarari": 564, "mute_field": [565, 612], "mute_threshold": [565, 612], "field_threshold": [565, 612], "discern": 565, "mute": [565, 589, 598, 608, 626, 630], "tomkin": [565, 612, 630], "miller": [565, 612], "allen": [565, 612], "identif": [565, 612], "5515": [565, 612], "5525": [565, 612], "interval_min": [566, 567], "interval_max": [566, 567], "endpoint": [566, 567], "to_vpt": 568, "90": [568, 581, 583, 584, 590, 644], "verticl": 568, "radar1": 569, "radar2": 569, "angles1": 570, "angles2": 570, "angle1": 571, "angle2": 571, "eg": 572, "ma": [572, 590, 604, 605, 630, 637, 641, 644], "interp_kind": 573, "sim_vel_field": 573, "kind": [573, 581, 595], "slinear": 573, "quadrat": 573, "cubic": 573, "interp1d": [573, 590, 644], "sim_vel": [573, 590, 644], "rng_min": 575, "rng_max": 575, "ele_min": 575, "ele_max": 575, "azi_min": 575, "azi_max": 575, "coverag": [575, 581, 589, 590], "11pt": 576, "stdev": 576, "texarrai": 576, "pyradarobj": 576, "tex": 577, "single_scan": 578, "is_vpt": 578, "mislabel": 578, "properli": [578, 590, 601], "releas": [579, 586, 590, 593, 634, 637, 640, 643, 644], "post4": 579, "aug": 579, "03": [579, 581, 584, 600, 626, 633], "2023": [579, 587], "guid": [579, 581, 582, 589, 634], "public": [579, 581, 585, 587, 589, 590, 636, 637, 638, 640, 641, 642, 644], "broken": [579, 589], "aerosol": 581, "experi": 581, "depart": [581, 584, 585, 587, 636, 637, 638, 640, 641, 642], "energi": [581, 584, 585, 587, 636, 637, 638, 640, 641, 642], "iop": 581, "goal": 581, "studi": 581, "lifecycl": 581, "houston": [581, 600], "impact": [581, 587, 620], "uniqu": 581, "suit": [581, 589, 590, 640, 644], "seabreez": 581, "coast": [581, 585], "cleaner": [581, 641], "air": [581, 585], "pollut": 581, "click": [581, 582, 592], "post": [581, 583, 584, 585, 587, 589, 592, 634], "overlai": 581, "texa": [581, 600], "lightn": 581, "csapr2": 581, "wildfir": 581, "smoke": 581, "entrain": 581, "juli": [581, 601], "12": [581, 583, 584, 588, 600, 601, 611, 618, 624, 626, 628, 637, 641, 642], "we": [581, 583, 584, 585, 587, 590, 593, 600, 601, 604, 609, 628, 630, 636, 637, 638, 640, 641, 642, 643, 645, 646], "highlight": [581, 582, 585], "minut": [581, 583, 584, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632], "pyart": [581, 583, 587, 590, 592, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646], "pyplot": [581, 582, 583, 584, 585, 587, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 636, 637, 638, 640, 641], "plt": [581, 582, 583, 584, 585, 587, 589, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 636, 637, 638, 640, 641], "xr": [581, 584], "s3f": 581, "ccr": [581, 583, 585, 587, 600, 601, 604, 610, 611, 617, 624, 628, 630, 637, 638, 641], "panda": [581, 584, 587, 589, 646], "pd": [581, 583, 584, 587], "kdtree": 581, "inlin": [581, 620, 621], "satellit": 581, "download": [581, 582, 584, 585, 590, 595, 596, 598, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634, 644, 646], "longwav": 581, "infrar": 581, "ensur": [581, 583], "c13": 581, "denot": 581, "anonym": [581, 583], "credenti": 581, "s3filesystem": 581, "day_no": 581, "168": 581, "dai": [581, 587], "16th": 581, "leap": 581, "hour": [581, 585, 587, 600, 601], "goes16": 581, "abi": 581, "l1b": 581, "radc": 581, "02d": 581, "fi": 581, "or_abi": 581, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 581, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 581, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 581, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 581, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 581, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 581, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 581, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 581, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 581, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 581, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 581, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 581, "goes_d": 581, "open_dataset": [581, 584], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 581, "lt": [581, 584], "gt": [581, 584], "1500": [581, 636], "2500": 581, "number_of_time_bound": 581, "number_of_image_bound": 581, "num_star_look": 581, "datetime64": [581, 584, 628], "07": [581, 583, 584, 601, 612, 630, 642], "1282": 581, "1013": 581, "y_imag": 581, "08624": 581, "x_imag": 581, "03136": 581, "band_id": 581, "int8": 581, "band_wavelength": 581, "33": [581, 584, 585, 642], "t_star_look": 581, "band_wavelength_star_look": 581, "37": [581, 584, 602, 604, 628, 632, 641], "rad": [581, 584], "dqf": 581, "time_bound": 581, "goes_imager_project": 581, "int32": [581, 642], "2147483647": 581, "y_image_bound": 581, "x_image_bound": 581, "algorithm_dynamic_input_data_contain": 581, "processing_parm_version_contain": 581, "algorithm_product_version_contain": 581, "star_id": 581, "channel_integration_tim": 581, "336": [581, 589], "channel_gain_field": 581, "naming_author": 581, "nesdi": 581, "standard_name_vocabulari": 581, "v35": 581, "commerc": 581, "production_sit": 581, "wcda": 581, "timeline_id": 581, "date_cr": 581, "12t20": 581, "09": [581, 583, 630], "3z": 581, "time_coverage_start": [581, 636, 642], "time_coverage_end": [581, 636], "08": 581, "7z": 581, "lut_filenam": 581, "spacelookparam": 581, "fm1a_cdrl79revp_pr_09_00_02": 581, "f45b564c": 581, "dcb9": 581, "498a": 581, "ac56": 581, "da80a1d735a5xarrai": 581, "datasetdimens": [581, 584], "1500x": 581, "2500number_of_time_bound": 581, "2number_of_image_bound": 581, "2band": 581, "1num_star_look": 581, "24coordin": 581, "j2000": 581, "mid": 581, "secondsstandard_nam": 581, "timeaxi": 581, "tbound": 581, "time_boundsarrai": 581, "x27": [581, 584], "537394048": 581, "float640": 581, "04432": 581, "04427unit": 581, "radaxi": 581, "ylong_nam": 581, "coordinatestandard_nam": 581, "projection_y_coordinatearrai": 581, "128212": 581, "128156": 581, "1281": 581, "04438": 581, "044324": 581, "044268": 581, "03856": 581, "03861unit": 581, "xlong_nam": 581, "projection_x_coordinatearrai": 581, "101332": 581, "101276": 581, "10122": 581, "0385": 581, "038556": 581, "038612": 581, "imagestandard_nam": 581, "projection_y_coordinateunit": 581, "yarrai": 581, "projection_x_coordinateunit": 581, "numberstandard_nam": 581, "sensor_band_identifierunit": 581, "1arrai": [581, 584], "central": [581, 583, 587], "wavelengthstandard_nam": 581, "sensor_band_central_radiation_wavelengthunit": 581, "umarrai": 581, "star": 581, "tarrai": 581, "01t11": 581, "43": [581, 584, 587], "000000000": [581, 584], "starstandard_nam": 581, "radiancesstandard_nam": 581, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 581, "12valid_rang": 581, "4094": 581, "mw": 581, "cm": [581, 621], "1resolut": 581, "000056": 581, "radgrid_map": 581, "goes_imager_projectioncell_method": 581, "pointancillary_vari": 581, "3750000": 581, "radianc": 581, "flagsstandard_nam": 581, "status_flagvalid_rang": 581, "1grid_map": 581, "pointflag_valu": 581, "flag_mean": 581, "good_pixel_qf": 581, "conditionally_usable_pixel_qf": 581, "out_of_range_pixel_qf": 581, "no_value_pixel_qf": 581, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 581, "5percent_good_pixel_qf": 581, "0percent_conditionally_usable_pixel_qf": 581, "0percent_out_of_range_pixel_qf": 581, "0percent_no_value_pixel_qf": 581, "0percent_focal_plane_temperature_threshold_exceeded_qf": 581, "00": [581, 583, 584, 587, 589, 597, 602, 607, 626, 633], "326423040": 581, "748365056": 581, "projectiongrid_mapping_nam": 581, "geostationaryperspective_point_height": 581, "35786023": 581, "0semi_major_axi": 581, "6378137": 581, "0semi_minor_axi": 581, "6356752": 581, "31414inverse_flatten": 581, "298": 581, "2572221latitude_of_projection_origin": 581, "0longitude_of_projection_origin": 581, "0sweep_angle_axi": 581, "south": [581, 585, 613], "extent": [581, 583, 584, 587, 606], "imageunit": 581, "radarrai": 581, "12824": 581, "04424": 581, "10136": 581, "03864": 581, "nominal_satellite_subpoint_lat": 581, "nomin": 581, "subpoint": 581, "standard_nam": [581, 630, 637, 642], "latitudeunit": [581, 584], "degrees_northarrai": 581, "nominal_satellite_subpoint_lon": 581, "longitudeunit": [581, 584], "degrees_eastarrai": 581, "199997": 581, "nominal_satellite_height": 581, "gr": 581, "80": [581, 583, 596, 624, 629], "ellipsoid": 581, "height_above_reference_ellipsoidunit": 581, "kmarrai": 581, "35786": 581, "023438": 581, "geospatial_lat_lon_ext": 581, "geospati": 581, "referencesgeospatial_westbound_longitud": 581, "152": 581, "10928geospatial_northbound_latitud": 581, "56": [581, 584, 628, 632], "76145geospatial_eastbound_longitud": 581, "94688geospatial_southbound_latitud": 581, "14": [581, 584, 585, 587, 601, 609, 611, 642], "57134geospatial_lat_cent": 581, "083002geospatial_lon_cent": 581, "096954geospatial_lat_nadir": 581, "0geospatial_lon_nadir": 581, "0geospatial_lat_unit": 581, "degrees_northgeospatial_lon_unit": 581, "96921e": 581, "yaw_flip_flag": 581, "spacecraft": 581, "yaw": 581, "flip": 581, "configurationvalid_rang": 581, "1flag_valu": 581, "truearrai": 581, "esun": 581, "bandpass": 581, "solar": 581, "irradi": 581, "sun": 581, "distancestandard_nam": 581, "toa_shortwave_irradiance_per_unit_wavelengthunit": 581, "um": 581, "1cell_method": 581, "meanarrai": 581, "kappa0": 581, "incom": 581, "d2": 581, "instantan": [581, 589], "divid": 581, "reflectanceunit": 581, "planck_fk1": 581, "wavenumb": 581, "c2": 581, "nu3": 581, "emiss": 581, "monochromat": 581, "nu": 581, "constantsunit": 581, "10803": 581, "299805": 581, "planck_fk2": 581, "karrai": 581, "1392": [581, 589], "73999": 581, "planck_bc1": 581, "bc_1": 581, "bc_2": 581, "planck_funct": 581, "wavenumberunit": 581, "0755": 581, "planck_bc2": 581, "99975": 581, "valid_pixel_count": 581, "condition": 581, "pixelsunit": 581, "countgrid_map": 581, "sum": [581, 588], "comment": [581, 582, 621, 642], "3702838": 581, "missing_pixel_count": 581, "saturated_pixel_count": 581, "satur": 581, "radiometr": 581, "geoloc": 581, "undersaturated_pixel_count": 581, "undersatur": 581, "focal_plane_temperature_threshold_exceeded_count": 581, "exceed": 581, "thresholdunit": 581, "min_radiance_value_of_valid_pixel": 581, "pixelsstandard_nam": 581, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 581, "6443": 581, "185": 581, "5699": 581, "849287": 581, "max_radiance_value_of_valid_pixel": 581, "154": [581, 617], "23053": 581, "mean_radiance_value_of_valid_pixel": 581, "197975": 581, "std_dev_radiance_value_of_valid_pixel": 581, "toa_outgoing_radiance_per_unit_wavenumberunit": 581, "standard_devi": 581, "985853": 581, "maximum_focal_plane_temperatur": 581, "focal": 581, "valuevalid_rang": 581, "59": [581, 584], "951939": 581, "focal_plane_temperature_threshold_increas": 581, "bound": [581, 584], "81": [581, 583, 642], "focal_plane_temperature_threshold_decreas": 581, "decreas": 581, "percent_uncorrectable_l0_error": 581, "percent": 581, "l0": 581, "errorsvalid_rang": 581, "percentgrid_map": 581, "earth_sun_distance_anomaly_in_au": 581, "anomali": 581, "astronom": 581, "unitsunit": 581, "uacell_method": 581, "016543": 581, "datainput_abi_l0_data": 581, "m6_g16_s20221932006173_e20221932008557_c": 581, "ncarrai": 581, "filenamesl1b_processing_parm_vers": 581, "parm": 581, "rad_g16_v01r00": 581, "ziparrai": 581, "packag": [581, 582, 583, 584, 585, 587, 589, 590, 595, 601, 634, 637, 640, 643, 644, 646], "versionalgorithm_vers": 581, "alg": 581, "rad_v01r00": 581, "zipproduct_vers": 581, "v01r00arrai": 581, "stararrai": 581, "vnir": 581, "ir": 581, "telemetryunit": 581, "countarrai": 581, "gain": [581, 584], "noaaconvent": 581, "7standard_name_vocabulari": 581, "administr": [581, 585, 600], "servicesproject": 581, "goesproduction_sit": 581, "wcdasproduction_environ": 581, "oespatial_resolut": 581, "2km": 581, "nadirmetadata_convent": 581, "discoveri": 581, "0orbital_slot": 581, "eastplatform_id": 581, "g16instrument_typ": 581, "baselin": 581, "scene_id": 581, "conusinstrument_id": 581, "fm1titl": 581, "radiancessummari": 581, "digit": 581, "outgo": 581, "engin": 581, "radiancekeywords_vocabulari": 581, "nasa": 581, "master": [581, 589, 590, 592, 621, 644], "gcmd": 581, "scienc": [581, 585, 587, 636, 637, 638, 640, 641, 642], "0iso_series_metadata_id": 581, "a70be540": 581, "c38b": 581, "11e0": 581, "962b": 581, "0800200c9a66licens": 581, "unclassifi": 581, "restrict": 581, "approv": 581, "processing_level": 581, "aeronaut": 581, "l1bcdm_data_typ": 581, "imagedataset_nam": 581, "ncproduction_data_sourc": 581, "realtimetimeline_id": 581, "6date_cr": 581, "3ztime_coverage_start": 581, "3ztime_coverage_end": 581, "7zlut_filenam": 581, "637827000": 581, "h5": [581, 589], "qtableband13": 581, "fm1a_cdrl79revh_do_08_00_00": 581, "582860861": 581, "caltargettimeinterv": 581, "fm1a_cdrl79revp_do_08_00_01": 581, "611906620": 581, "bandsaturationlimit": 581, "600000000": 581, "solarspacelookparam": 581, "fm1a_adr1233_pr_09_08_25": 581, "709281036": 581, "deadrowlistparam": 581, "mirror_record": 581, "fm1a_cdrl79revg_do_07_00_00": 581, "kalmanastroconst": 581, "xml": [581, 587], "kalmanfiltercontrol": 581, "fm1a_pr_09_08_02": 581, "677650371": 581, "kalmanmeasmaxsens": 581, "fmaa_int_only_do_09_01_00": 581, "652936814": 581, "kalmanpreprocessorcontrol": 581, "fm1a_cdrl79revj_pr_09_06_02": 581, "657795700": 581, "kalmanreferencedata": 581, "888": 581, "kalmanstarcatalog": 581, "abi_navigationrdp_band13": 581, "fm1a_cdrl79revj_do_07_00_00": 581, "abi_navigationparameters_band13": 581, "fm1a_cdrl79revh_do_07_00_00": 581, "abi_resamplingimplementation_band13": 581, "fm1a_cdrl79revh_do_07_02_00": 581, "602129336": 581, "abi_resamplingparameters_band13": 581, "starlookparam": 581, "stardetectionparam": 581, "resamplingscaledconvers": 581, "fmaa_int_only_do_08_00_00": 581, "1111": [581, 584, 589], "blockreleaseregion": 581, "2222": 581, "csv": [581, 583], "ir_retrievalparamet": 581, "fm1a_cdrl79revh_do_09_01_00": 581, "652936750": 581, "radiancelut_band13": 581, "fm1a_cdrl79reve_do_08_00_00": 581, "ict_record": 581, "fm1a_tmabi_18_159_pr_09_00_02": 581, "icm_conversionconst": 581, "fm1a_cdrl43": 581, "18_do_09_01_00": 581, "icm_sensorcoeffici": 581, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 581, "676949608": 581, "h5id": 581, "da80a1d735a5": 581, "team": 581, "bobbi": [581, 604], "jackson": [581, 604], "pug": 581, "l2": [581, 589], "file_id": 581, "def": [581, 583, 587, 589, 590, 609, 644], "calculate_degre": 581, "x_coordinate_1d": 581, "y_coordinate_1d": 581, "projection_info": 581, "lon_origin": 581, "attr": 581, "longitude_of_projection_origin": 581, "perspective_point_height": 581, "semi_major_axi": 581, "r_eq": 581, "r_pol": 581, "semi_minor_axi": 581, "matric": 581, "x_coordinate_2d": 581, "y_coordinate_2d": 581, "meshgrid": [581, 604], "lambda_0": 581, "a_var": 581, "b_var": 581, "c_var": 581, "r_": 581, "s_x": 581, "s_y": 581, "s_z": 581, "conu": 581, "seterr": 581, "abi_lat": 581, "arctan": 581, "abi_lon": 581, "crop": 581, "our": [581, 583, 586, 600, 601, 604, 609, 610, 628, 630, 634], "interest": [581, 583, 584, 585, 587, 604, 630], "circ": 581, "95": [581, 583, 628, 642], "nan_to_num": 581, "9999": [581, 642], "lat_rang": 581, "lon_rang": 581, "lat_min": 581, "lat_max": 581, "lat_min_bound": 581, "argmin": 581, "ab": 581, "lat_max_bound": 581, "lon_min": 581, "lon_max": 581, "lon_min_bound": 581, "lon_max_bound": 581, "a1": [581, 584, 617], "disoveri": 581, "toolkit": [581, 584, 585, 587, 636, 637, 638, 640, 641, 642], "5439": [581, 584], "1467901": 581, "page": [581, 586, 589, 592], "block": [581, 589], "autom": [581, 587], "catalogu": 581, "adam": [581, 589], "theisen": 581, "geometri": [581, 587, 589], "cell_track_info": 581, "read_csv": [581, 583], "raw": [581, 595, 596], "githubusercont": 581, "com": [581, 590, 601, 621, 643, 644, 646], "adamtheisen": [581, 589], "cell": [581, 589, 620], "stat": [581, 589], "houcsapr": 581, "20220617": 581, "index_col": 581, "parse_d": 581, "unnam": 581, "scan_mod": [581, 584], "scan_nam": [581, 584, 589], "template_nam": 581, "azimuth_min": 581, "azimuth_max": 581, "elevation_min": 581, "elevation_max": 581, "range_min": 581, "range_max": 581, "cell_azimuth": 581, "cell_rang": 581, "cell_zh": 581, "ngates_gt_0": 581, "ngates_gt_10": 581, "ngates_gt_30": 581, "ngates_gt_50": 581, "ngates_gt_10_5km": 581, "ngates_gt40_5km": 581, "hou": 581, "303": [581, 589], "74450": 581, "637207": 581, "383545": 581, "109900": 581, "297": 581, "59216": 581, "307": [581, 589], "63367": 581, "021240": 581, "988037": 581, "910767": 581, "700": [581, 584, 587, 589], "930866": 581, "78": 581, "302": 581, "64587": 581, "645874": 581, "1800": [581, 583, 636], "776333": 581, "55798": 581, "59094": 581, "97546": 581, "99744": 581, "975464": 581, "900": [581, 636], "972101": 581, "46": [581, 628], "2826": 581, "301": [581, 589], "48132": 581, "50330": 581, "648193": 581, "382324": 581, "503296": 581, "62400": 581, "327583": 581, "990": 581, "989": [581, 589], "210": 581, "995": [581, 589], "2827": 581, "305": [581, 589], "70007": 581, "404297": 581, "700073": 581, "13600": 581, "29": [581, 584], "037998": 581, "2828": 581, "23510": 581, "26807": 581, "235107": 581, "459156": 581, "2829": 581, "296": [581, 589], "08704": 581, "306": [581, 589], "16150": 581, "999268": 581, "998291": 581, "300": [581, 583, 584, 585, 587, 612, 613, 636], "646362": 581, "59100": 581, "882927": 581, "807": 581, "783": [581, 589], "27": [581, 585, 626, 628], "63": [581, 642], "830": 581, "2830": 581, "05835": 581, "08032": 581, "058350": 581, "62800": 581, "198204": 581, "767": [581, 589], "76": 581, "773": [581, 589], "2831": 581, "row": [581, 583, 585], "notebook": [581, 583, 584, 588, 589, 595, 596, 598, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 637, 640, 641, 644, 646], "focus": [581, 583, 584], "strategi": 581, "much": [581, 583, 584, 585, 587, 589, 638, 640, 641], "frequent": 581, "start_hour": 581, "end_hour": 581, "utc": [581, 583, 584, 585, 600, 601, 623], "48": [581, 583, 606], "04": [581, 584, 587, 607, 626, 628, 633], "26": 581, "38": [581, 584, 601, 630, 633], "57": [581, 630, 633], "19": [581, 583, 584, 589, 606, 607, 610, 626, 632, 642], "rjackson": [581, 604], "paw": 581, "houcsapr2cfrs2": 581, "20220712": 581, "200714": 581, "easili": [581, 587], "eol": 581, "cgi": 581, "codiac": 581, "fgr_form": 581, "016": 581, "densiti": [581, 631], "lma_d": 581, "lylout_220712_000000_86400_map500m": 581, "afternoon": 581, "203229": 581, "lylout_220617_000000_86400_map500m": 581, "radarmapdisplai": [581, 583, 587, 589, 600, 601, 604, 611, 617, 628, 636, 637, 638, 640, 641], "subplot": [581, 583, 584, 585, 587, 589, 600, 604, 609, 610, 611, 623, 628, 629, 630, 631, 632, 638], "subplot_kw": 581, "disp": 581, "graph": [581, 582, 583, 584, 585, 587, 589, 595, 596, 600, 601, 604, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 636, 637, 638, 640, 641], "150": [581, 582, 616, 638], "plot_ppi_map": [581, 583, 587, 589, 600, 601, 604, 611, 617, 628, 637, 638, 641], "flash_tim": 581, "squeez": [581, 636], "argwher": [581, 604], "logical_and": [581, 604], "flash_time_start": 581, "17t20": 581, "scatter": [581, 583, 587, 610, 628], "flash_center_longitud": 581, "flash_center_latitud": 581, "set_xlim": [581, 624, 631], "96": [581, 583, 584, 604, 634, 641], "94": [581, 642], "set_ylim": [581, 624, 631], "deprecationwarn": [581, 640], "escap": 581, "sequenc": [581, 585], "xf": 581, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 581, "ipykernel_41252": 581, "2371313213": 581, "opt": [581, 582, 584, 585, 589], "anaconda3": [581, 584, 585, 634, 637, 640, 643, 646], "env": [581, 582, 584, 585, 587, 589, 595, 601, 634, 637, 640, 646], "pyart_env2": 581, "lib": [581, 584, 585, 587, 595, 601, 637, 640, 643], "python3": [581, 584, 585, 587, 588, 595, 601], "mpl": [581, 589, 631, 637, 640], "gridlin": [581, 585, 587, 611], "451": [581, 584], "userwarn": [581, 595, 601], "xlabels_top": [581, 585], "deprec": [581, 585, 592, 637, 640], "top_label": [581, 587, 611], "toggl": [581, 589], "visibl": [581, 585, 589], "ylabels_right": [581, 585], "right_label": [581, 587, 611], "microphys": 581, "strike": 581, "overlaid": 581, "approxim": [581, 584, 589], "csapr_rhi": 581, "203012": 581, "flash_alt": 581, "flash_init_altitud": 581, "flash_lon": 581, "flash_init_longitud": 581, "flash_lat": 581, "flash_init_latitud": 581, "rhi_lon": 581, "flatten": [581, 604], "rhi_lat": 581, "rhi_alt": 581, "kdtree_data": 581, "stack": [581, 584, 587, 590, 643, 644], "inp_data": 581, "where_in_rhi": 581, "flash_rang": 581, "1e3": 581, "motiv": [582, 585], "blog": [582, 587, 589, 590], "come": [582, 585, 630], "colorschem": 582, "vision": 582, "defici": 582, "illustr": 582, "collabor": 582, "contributor": [582, 592, 634, 645], "guidenc": 582, "ve": 582, "trip": [582, 641], "me": 582, "might": [582, 636, 646], "assist": 582, "https_link_to_your_fork": 582, "unfamiliar": 582, "yml": [582, 634, 646], "slightli": [582, 585, 611], "latest": [582, 589, 590, 634, 644], "button": [582, 586, 592], "kshrc": 582, "export": [582, 643, 646], "pip": [582, 590, 643, 644, 646], "checkout": [582, 590, 592, 644], "newblog_post": 582, "plot_ppi_mdv": [582, 616, 626], "radardisplai": [582, 583, 584, 589, 595, 596, 609, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 625, 629, 631], "jonathan": [582, 595, 596, 605, 606, 613, 614, 616, 618, 622, 625, 646], "helmu": [582, 585, 587, 590, 595, 596, 605, 606, 613, 614, 616, 618, 622, 625, 634, 636, 637, 638, 640, 641, 642, 644, 646], "jhelmu": [582, 589, 595, 596, 605, 606, 613, 614, 616, 618, 622, 625], "anl": [582, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 613, 614, 615, 616, 618, 620, 621, 622, 623, 625, 628, 629], "licens": [582, 590, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634, 644], "bsd": [582, 590, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634, 644], "claus": [582, 590, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 644], "get_test_data": [582, 595, 596, 604, 605, 606, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630], "110635": [582, 605, 616, 640], "figsiz": [582, 583, 584, 585, 587, 595, 596, 600, 601, 604, 609, 610, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 629, 630, 631, 637, 638, 640, 641], "add_subplot": [582, 595, 596, 605, 606, 613, 614, 615, 616, 618, 619, 620, 621, 622, 625], "111": [582, 583, 585, 604, 605, 606, 611, 614, 615, 616, 620, 621, 622, 628], "get_cmap": [582, 612, 630], "jet": 582, "colorbind": 582, "pyart_homeyerrainbow": [582, 584, 604, 609, 610, 611, 616, 619, 623, 624, 629], "plot_rhi_cfradial_singlescan": [582, 619, 626], "panel": [582, 598, 608, 626], "sgpxsaprrhicmaci5": [582, 618, 619, 623], "c0": [582, 595, 618, 619, 623, 637], "20110524": [582, 618, 619, 623], "015604_nc4": [582, 618, 619, 623], "read_cfradi": [582, 595, 604, 606, 610, 618, 619, 623, 631, 632], "subplots_adjust": [582, 584, 609, 618, 619], "hspace": [582, 584, 618, 619], "xlabel": [582, 584, 604, 618, 619, 638], "ylabel": [582, 584, 604, 618, 619, 638], "stage": 582, "my": [582, 643], "untrack": [582, 590, 644], "blog_pr": 582, "restor": 582, "discard": 582, "_static": 582, "As": [582, 584, 590, 636, 638, 640, 641, 644], "featur": [582, 583, 585, 593, 612, 630, 634], "statement": [582, 589, 590, 644], "hint": [582, 585, 591], "wait": [582, 585], "editor": [582, 588, 590, 644, 646], "enh": [582, 589], "abort": 582, "person": 582, "addition": [582, 585], "anyon": 582, "respond": 582, "walk": [583, 584, 587, 588], "septemb": 583, "2021": [583, 630], "strong": 583, "thunderstorm": 583, "southern": 583, "wisconsin": [583, 589], "illinoi": 583, "trail": 583, "damag": [583, 587], "milwauke": [583, 587], "madison": 583, "imageri": [583, 587], "russ": 583, "schumach": 583, "colorado": 583, "unvers": 583, "put": 583, "togeth": [583, 584, 585], "hi": 583, "glob": [583, 584, 587, 590, 644], "math": 583, "atan2": 583, "tempfil": 583, "cfeatur": [583, 585, 587], "mcolor": [583, 585, 612, 630], "mdate": 583, "uscounti": [583, 587], "imageio": 583, "pytz": [583, 589], "temploc": 583, "mkdtemp": 583, "filterwarn": [583, 584, 585, 587, 604], "let": [583, 584, 585, 586, 589, 590, 600, 601, 604, 609, 611, 628, 630, 636, 638, 640, 641, 642, 644, 646], "machin": [583, 584, 587, 646], "kmkx": [583, 587], "nexrad_path": 583, "level2": [583, 587, 600, 601, 612, 630], "d_": 583, "kmkx20210907_170101_v06": 583, "kmkx20210907_170739_v06": 583, "kmkx20210907_171431_v06": 583, "kmkx20210907_172123_v06": 583, "kmkx20210907_172814_v06": 583, "kmkx20210907_173452_v06": 583, "kmkx20210907_174130_v06": 583, "kmkx20210907_174807_v06": 583, "kmkx20210907_175459_v06": 583, "kmkx20210907_175459_v06_mdm": 583, "read_nexrad_arch": [583, 587, 600, 601, 612, 613, 614, 630], "possibli": 583, "add_featur": [583, 585, 587], "pyart_chasespectr": [583, 587], "70": [583, 584, 587, 600, 604, 610], "set_ext": 583, "easier": [583, 584, 585], "scroll": 583, "radar_id": 583, "timestamp": [583, 584], "tz_local": 583, "later": [583, 585, 637, 640], "interfac": 583, "conn": 583, "nexradawsinterfac": 583, "get_avail_scans_in_rang": 583, "len": [583, 609, 623, 631, 636], "kmkx20210907_151132_v06": 583, "kmkx20210907_152621_v06": 583, "kmkx20210907_150152_v06": 583, "kmkx20210907_151622_v06": 583, "kmkx20210907_152121_v06": 583, "kmkx20210907_150642_v06": 583, "kmkx20210907_155424_v06_mdm": 583, "kmkx20210907_153610_v06": 583, "kmkx20210907_154814_v06": 583, "kmkx20210907_155424_v06": 583, "kmkx20210907_154205_v06": 583, "kmkx20210907_160034_v06": 583, "kmkx20210907_160607_v06": 583, "kmkx20210907_161141_v06": 583, "kmkx20210907_163532_v06": 583, "kmkx20210907_161714_v06": 583, "kmkx20210907_162924_v06": 583, "kmkx20210907_164816_v06": 583, "kmkx20210907_165433_v06": 583, "kmkx20210907_165433_v06_mdm": 583, "kmkx20210907_162247_v06": 583, "kmkx20210907_153134_v06": 583, "kmkx20210907_164149_v06": 583, "kmkx20210907_182057_v06": 583, "kmkx20210907_182749_v06": 583, "kmkx20210907_184048_v06": 583, "kmkx20210907_180841_v06": 583, "kmkx20210907_183440_v06": 583, "kmkx20210907_185431_v06_mdm": 583, "kmkx20210907_181448_v06": 583, "kmkx20210907_180150_v06": 583, "kmkx20210907_185431_v06": 583, "kmkx20210907_190109_v06": 583, "kmkx20210907_190703_v06": 583, "kmkx20210907_193238_v06": 583, "kmkx20210907_191951_v06": 583, "kmkx20210907_191327_v06": 583, "kmkx20210907_195642_v06": 583, "kmkx20210907_194459_v06": 583, "kmkx20210907_195642_v06_mdm": 583, "kmkx20210907_193849_v06": 583, "kmkx20210907_184739_v06": 583, "kmkx20210907_192614_v06": 583, "kmkx20210907_195056_v06": 583, "now": [583, 584, 585, 587, 589, 601, 604, 609, 611, 628, 630, 636, 638, 643], "predict": 583, "tornado": [583, 587], "offic": [583, 585, 587, 636, 637, 638, 640, 641, 642], "acces": 583, "internet": 583, "wcm": 583, "categori": 583, "2021_wind": 583, "read_spc_report": 583, "start_tim": 583, "end_tim": 583, "hazard": 583, "timezon": 583, "gmt": 583, "torn": 583, "df": 583, "datafram": 583, "conver": 583, "to_datetim": [583, 584, 587], "set_index": 583, "inplac": 583, "ambigu": 583, "nat": 583, "nonexist": 583, "shift_forward": 583, "tz_convert": 583, "timedelta": [583, 587], "wind_report": 583, "tornado_report": 583, "hail_report": 583, "om": 583, "yr": 583, "mo": 583, "st": 583, "stf": 583, "stn": 583, "elon": 583, "wid": 583, "sn": 583, "sg": 583, "f1": 583, "f2": 583, "f3": 583, "f4": 583, "657521": 583, "tx": 583, "7500": [583, 636], "331": [583, 589, 597], "657522": 583, "4300": 583, "657523": 583, "0500": 583, "167": 583, "657524": 583, "0200": 583, "657525": 583, "1595": 583, "45": [583, 590, 612, 621, 630, 644], "663777": 583, "sc": 583, "0100": 583, "663778": 583, "663779": 583, "2200": 583, "663780": 583, "1900": 583, "49": [583, 584], "663781": 583, "1100": [583, 589], "6261": 583, "gc_latlon_bear_dist": 583, "lat1": 583, "lon1": 583, "decim": 583, "lat2": 583, "lon2": 583, "lat1r": 583, "deg2rad": 583, "lon1r": 583, "bearr": 583, "lat2r": 583, "lon2r": 583, "rad2deg": [583, 632], "add_scale_lin": 583, "fontsiz": [583, 584, 585, 595, 596, 609, 611, 620, 621], "fontweight": 583, "zoom": [583, 584], "black": [583, 589, 610, 628], "frac_lat": 583, "frac_lon": 583, "e1": 583, "get_ext": 583, "center_lon": 583, "center_lat": 583, "shorten": 583, "hash": [583, 592], "lat1a": 583, "lon1a": 583, "lat1b": 583, "lon1b": 583, "lat2a": 583, "lon2a": 583, "lat2b": 583, "lon2b": 583, "horizontalalign": 583, "verticalalign": 583, "enumer": 583, "iter_success": 583, "mdm": 583, "this_tim": 583, "open_pyart": 583, "map_panel_ax": [583, 624], "x_cut_panel_ax": [583, 624], "y_cut_panel_ax": [583, 624], "masking_data_with_gatefilt": 583, "ax1": [583, 584, 595, 596, 610, 624, 625, 630], "add_ax": [583, 624], "recogniz": 583, "with_scal": 583, "500k": 583, "grai": [583, 585, 587, 611, 612], "plot_colorbar": 583, "pad": 583, "plot_range_r": [583, 589, 614, 615, 617], "dash": [583, 585, 621], "set_xtick": [583, 637, 640], "arang": [583, 590, 604, 617, 620, 621, 628, 631, 632, 644], "set_ytick": [583, 637, 640], "wind_reports_now": 583, "slon": 583, "tolist": 583, "slat": 583, "facecolor": [583, 585, 587], "deepskyblu": 583, "tornado_reports_now": 583, "tab": [583, 592, 610], "red": [583, 620, 621], "hail_reports_now": 583, "lawngreen": 583, "legend": [583, 587, 610], "savefig": [583, 585, 587], "_dz_rpt": 583, "bbox_inch": 583, "tight": 583, "white": [583, 585, 620], "mp4": 583, "map_imag": 583, "gif_titl": 583, "delet": [583, 589, 590, 611, 644], "gif": 583, "get_writ": 583, "fp": 583, "writer": [583, 589], "imread": 583, "append_data": 583, "ffmpeg_writ": 583, "divis": [583, 589], "macro_block_s": 583, "resiz": 583, "1930": 583, "1766": 583, "1936": 583, "1776": 583, "video": 583, "codec": 583, "player": 583, "incompat": [583, 589, 593], "ipython": [583, 587, 588, 646], "browser": 583, "event": [583, 630], "overview": [583, 586, 592], "retrospect": 583, "ecosystem": 584, "By": [584, 585, 593], "learn": [584, 634], "portal": [584, 585], "march": [584, 587, 600], "shown": [584, 609], "offici": [584, 590, 644], "probe": 584, "millimet": 584, "ghz": 584, "purpos": [584, 585, 630], "nearli": [584, 620], "bokeh": 584, "formatt": 584, "datetimetickformatt": 584, "hv": 584, "guckazrcfrgem1": 584, "20220314": 584, "000003": 584, "0x7f7dbd517400": 584, "linear_depolarization_ratio": 584, "mean_doppler_velocity_crosspolar_v": 584, "reflectivity_crosspolar_v": 584, "signal_to_noise_ratio_copolar_h": 584, "signal_to_noise_ratio_crosspolar_v": 584, "spectral_width": 584, "spectral_width_crosspolar_v": 584, "vertical": 584, "awai": [584, 585], "pyart_bal": [584, 585, 604, 623, 638], "substanti": 584, "211": [584, 625], "ax2": [584, 595, 596, 604, 610, 624, 625, 629, 630, 638], "212": [584, 625], "pangeo": 584, "1736": 584, "600": [584, 636], "r_calib": 584, "14t00": 584, "489e": 584, "806e": 584, "107": 584, "886e": 584, "command_lin": 584, "kazrcfr_ingest": 584, "guc": 584, "m1": 584, "process_vers": 584, "kazrcfr": 584, "el7": 584, "dod_vers": 584, "kazrcfrg": 584, "input_sourc": 584, "guckazrm1": 584, "kazr_moments_": 584, "site_id": 584, "software_vers": 584, "wed": 584, "mar": 584, "leachman": 584, "1498936": 584, "histori": [584, 642], "dsmgr": 584, "procnode2": 584, "1736rang": 584, "600frequenc": 584, "1sweep": 584, "1r_calib": 584, "1coordin": 584, "453818": 584, "startstandard_nam": 584, "timearrai": 584, "453818000": 584, "527426000": 584, "601027000": 584, "002026000": 584, "075634000": 584, "149219000": 584, "float323": 584, "10long_nam": 584, "transmit": [584, 638], "frequencyunit": 584, "hzstandard_nam": 584, "radiation_frequencymeta_group": 584, "instrument_parametersarrai": 584, "float32100": 584, "130": 584, "803e": 584, "04long_nam": 584, "volumeunit": 584, "mmeters_between_g": 584, "979246meters_to_center_of_first_g": 584, "679245spacing_is_const": 584, "truestandard_nam": 584, "projection_range_coordinateaxi": 584, "radial_range_coordinatearrai": 584, "679245": 584, "6585": 584, "160": [584, 632, 640], "63774": 584, "17998": 584, "18028": 584, "268": 584, "18058": 584, "248": 584, "northunit": 584, "degreestandard_nam": 584, "sensor_to_target_azimuth_angleaxi": 584, "radial_azimuth_coordinatearrai": 584, "planeunit": 584, "sensor_to_target_elevation_angleaxi": 584, "radial_elevation_coordinatearrai": 584, "00long_nam": 584, "epochancillary_vari": 584, "time_offsetarrai": 584, "base_timeancillary_vari": 584, "base_timearrai": 584, "unspecifiedunit": 584, "dbstandard_nam": 584, "radar_linear_depolarization_ratiounpacking_detail": 584, "unpack": 584, "pack": [584, 589], "1041600": 584, "motion": 584, "instrumentunit": 584, "sstandard_nam": 584, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 584, "crosspolar": 584, "channelunit": 584, "factorunit": 584, "dbzstandard_nam": 584, "equivalent_reflectivity_factorunpacking_detail": 584, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 584, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 584, "widthunit": 584, "radar_doppler_spectrum_widthunpacking_detail": 584, "angleunit": 584, "degreearrai": 584, "n_sampl": 584, "momentsunit": 584, "1meta_group": 584, "instrument_parametersstandard_nam": 584, "number_of_samples_used_to_compute_momentsarrai": 584, "noise_figur": 584, "receiv": [584, 587, 589, 638], "methodunit": 584, "dbarrai": 584, "67": [584, 630], "8043": 584, "unambigu": [584, 642], "velocityunit": 584, "smeta_group": 584, "968252": 584, "repetit": 584, "timeunit": 584, "sarrai": 584, "00027": 584, "transmitt": 584, "r_calib_radar_constant_copol": 584, "copolarunit": 584, "dbmeta_group": 584, "radar_calibrationstandard_nam": 584, "calibrated_radar_constant_h_channelarrai": 584, "996191": 584, "r_calib_radar_constant_crosspol": 584, "crosspolarunit": 584, "405288": 584, "r_calib_two_way_radome_loss_h": 584, "radom": 584, "loss": 584, "radar_calibration_two_way_radome_loss_h_channelarrai": 584, "half": 584, "radar_measured_sky_noise_h": 584, "sky": 584, "dbmarrai": 584, "69": [584, 617, 632], "03703": 584, "035995": 584, "0373": 584, "03814": 584, "05106": 584, "05984": 584, "radar_measured_sky_noise_v": 584, "radar_measured_transmit_pow": 584, "powerunit": 584, "dbmmeta_group": 584, "radar_transmit_powerarrai": 584, "143": [584, 632], "receiver_gain_copol": 584, "copolunit": 584, "sweepunit": 584, "1735": 584, "s22": 584, "basedunit": 584, "unambiguous_rang": [584, 642], "rangeunit": 584, "mmeta_group": 584, "unambiguous_rangearrai": 584, "40479": 584, "477": [584, 589], "degree_nstandard_nam": 584, "latitudevalid_min": 584, "0valid_max": 584, "0arrai": 584, "956158": 584, "degree_estandard_nam": 584, "longitudevalid_min": 584, "106": 584, "987854": 584, "altitudeunit": 584, "mstandard_nam": 584, "altitudearrai": 584, "2886": 584, "levelunit": 584, "heightarrai": 584, "m1convent": 584, "radar_calibrationprocess_vers": 584, "el7dod_vers": 584, "1input_sourc": 584, "kazr_moments_20220314": 584, "000005": 584, "datsite_id": 584, "gucplatform_id": 584, "kazrcfrgefacility_id": 584, "m1data_level": 584, "a1location_descript": 584, "laboratori": 584, "sail": 584, "mt": 584, "crest": 584, "butt": [584, 585], "coloradodatastream": 584, "a1antenna_altitud": 584, "mantenna_diamet": 584, "mcomment": 584, "digital_rx_dec": 584, "24dualpol": 584, "0fft_len": 584, "512filter_length": 584, "67institut": 584, "radiat": [584, 585, 587, 590, 634, 636, 637, 638, 640, 641, 642, 644], "research": [584, 585, 587, 590, 634, 636, 637, 638, 640, 641, 642, 644], "facilityn_g": 584, "1024num_spectral_averag": 584, "15pulse_compression_ratio": 584, "3range_gate_spacing_m": 584, "979246range_offset_ch1": 584, "mrange_offset_ch2": 584, "mscan_mod": 584, "pointingscan_nam": 584, "vptsoftware_vers": 584, "leachmantitl": 584, "momentsdoi": 584, "1498936histori": 584, "isel": 584, "coupl": 584, "extra": [584, 587, 589], "won": 584, "600rang": 584, "600coordin": 584, "395940000": 584, "469427000": 584, "542946000": 584, "360000": 584, "quadmesh": [584, 585], "0x7f7dad654f10": 584, "meant": [584, 586], "popular": [584, 587, 590, 644], "jump": 584, "bar": 584, "hover": 584, "inspect": 584, "clabel": [584, 620, 621], "xformatt": 584, "ref_plot": 584, "7000": [584, 640], "platform_id": 584, "location_descript": 584, "xtick": [584, 637, 640], "ytick": [584, 637, 640], "vel_plot": 584, "prepar": [584, 585, 587, 590, 636, 637, 638, 640, 641, 642, 644], "plot1": 584, "plot2": 584, "datashad": 584, "lazili": 584, "coars": 584, "intial": 584, "unfortun": 584, "ref_plot_rast": 584, "param": [584, 589], "dynamic_oper": 584, "outofboundsdatetim": 584, "nanosecond": 584, "54168": 584, "invok": 584, "x_rang": 584, "13t23": 584, "417014000": 584, "579705000": 584, "y_rang": 584, "traceback": 584, "recent": [584, 646], "mgrover": [584, 587, 600, 604, 609, 610, 615, 623, 628, 629], "277": [584, 589], "get_plot_fram": 584, "map_obj": 584, "1344": 584, "val": 584, "_execute_callback": 584, "tuple_kei": 584, "retval": 584, "callback": 584, "arg": 584, "708": 584, "__call__": 584, "ret": 584, "__init__": [584, 590, 601, 644], "1043": [584, 589], "obj": 584, "resolv": [584, 589], "1032": [584, 589], "1044": 584, "1036": 584, "_process": 584, "1018": [584, 589], "process_el": 584, "194": 584, "_appli": 584, "141": [584, 626], "1514": 584, "predic": 584, "207": 584, "pipelined_fn": 584, "method_fn": 584, "1223": 584, "super": [584, 614, 637, 640], "710": [584, 589], "map_fn": 584, "214": 584, "1133": [584, 589], "astyp": 584, "int64": 584, "1497": 584, "apply_ufunc": 584, "1159": 584, "apply_dataarray_vfunc": 584, "286": [584, 589], "result_var": 584, "data_var": 584, "750": [584, 589], "apply_variable_ufunc": 584, "as_compatible_data": 584, "234": 584, "_possibly_convert_object": 584, "178": 584, "asarrai": 584, "ravel": 584, "reshap": 584, "sanitize_arrai": 584, "567": [584, 589], "subarr": 584, "_try_cast": 584, "raise_cast_failur": 584, "726": [584, 589], "sanitize_to_nanosecond": 584, "arr": 584, "cast": 584, "1717": 584, "ensure_datetime64n": 584, "_lib": 584, "tslib": 584, "pyx": [584, 589], "257": 584, "np_datetim": 584, "120": [584, 636], "check_dts_bound": 584, "saw": 584, "few": [584, 589, 592, 646], "pro": 584, "con": 584, "thing": [584, 590, 644], "clear": 584, "push": [584, 589, 590, 592, 644], "share": 584, "ran": [584, 590, 644], "shareabl": 584, "workflow": [584, 587, 589], "mb": [584, 597, 602, 607, 626, 633], "difficult": [584, 604], "jupyterbook": 584, "jupyt": [584, 587, 589, 595, 596, 598, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 646], "campaign": 584, "twitter": 585, "nou": 585, "dryglick": 585, "notic": [585, 589, 604, 611], "odd": 585, "directli": [585, 609], "grei": 585, "darker": 585, "moir\u00e9": 585, "ryan": 585, "dopplershift": [585, 589], "detect": [585, 589, 615, 630, 638], "turbul": 585, "forecast": 585, "ncei": 585, "search": [585, 634, 643], "could": [585, 590, 601, 644], "aw": [585, 587, 589, 598, 599, 601, 602], "2020": [585, 589, 590, 612, 634, 643], "2018": 585, "mention": [585, 589, 590, 634, 644, 646], "he": 585, "n0u": [585, 600], "elgin": 585, "panhandl": 585, "florida": 585, "kevx": 585, "1458": 585, "octob": 585, "landfal": 585, "gulf": 585, "lookl": 585, "webpag": 585, "cart": 585, "sent": 585, "email": [585, 589], "websit": 585, "ftp": 585, "unzip": [585, 587], "kmob_sdus54_n0uevx_201810101458": 585, "partli": [585, 587, 636, 637, 638, 640, 641, 642], "facil": [585, 587, 590, 634, 636, 637, 638, 640, 641, 642, 644], "cite": [585, 587, 589, 636, 637, 638, 640, 641, 642], "jj": [585, 587, 636, 637, 638, 640, 641, 642], "sm": [585, 587, 636, 637, 638, 640, 641, 642], "colli": [585, 587, 590, 634, 636, 637, 638, 640, 641, 642, 644], "jor": [585, 587, 590, 634, 636, 637, 638, 640, 641, 642, 644], "5334": [585, 587, 590, 634, 636, 637, 638, 640, 641, 642, 644], "119": [585, 587, 590, 601, 634, 636, 637, 638, 640, 641, 642, 644], "read_level3": 585, "dark": 585, "dark_background": 585, "okai": 585, "88": [585, 587, 628], "83": 585, "31msignatur": 585, "0m": [585, 587], "0mdisplai": 585, "34m": 585, "0mplot_ppi_map": 585, "0mfield": 585, "0msweep": 585, "36m0": 585, "0mmask_tupl": 585, "32mnone": 585, "0mvmin": 585, "0mvmax": 585, "0mcmap": 585, "0mnorm": 585, "0mmask_outsid": 585, "32mfals": 585, "0mtitl": 585, "0mtitle_flag": 585, "32mtrue": 585, "0mcolorbar_flag": 585, "0mcolorbar_label": 585, "0max": 585, "0mfig": 585, "0mlat_lin": 585, "0mlon_lin": 585, "0mproject": 585, "0mmin_lon": 585, "0mmax_lon": 585, "0mmin_lat": 585, "0mmax_lat": 585, "0mwidth": 585, "0mheight": 585, "0mlon_0": 585, "0mlat_0": 585, "0mresolut": 585, "0mshapefil": 585, "0mshapefile_kwarg": 585, "0medg": 585, "0mgatefilt": 585, "0mfilter_transit": 585, "0membelish": 585, "0mraster": 585, "0mtick": 585, "0mticklab": 585, "0malpha": 585, "31msourc": 585, "32mdef": 585, "0mself": 585, "embelish": [585, 589], "31m": 585, "0mparse_vmin_vmax": 585, "0m_radar": 585, "0mparse_cmap": 585, "32mif": 585, "32mi": 585, "0mnp": 585, "0marang": 585, "36m30": 585, "36m46": 585, "36m1": 585, "36m110": 585, "36m75": 585, "0mloc": 585, "0mdata": 585, "0m_get_data": 585, "0mx": 585, "0my": 585, "0m_get_x_i": 585, "0mma": 585, "0mmasked_outsid": 585, "0mplt": 585, "0mgcf": 585, "32mnot": 585, "0mhasattr": 585, "32mels": 585, "0mcartopi": 585, "0mcr": 585, "0mlambertconform": 585, "0mcentral_longitud": 585, "0mcentral_latitud": 585, "0mwarn": 585, "overrid": [585, 621], "lambert": [585, 589], "0muserwarn": 585, "0mset_ext": 585, "0mplatecarre": 585, "32melif": 585, "36m2": 585, "0mgrid_project": 585, "0mpm": 585, "0mpcolormesh": 585, "36m1000": 585, "0mtransform": 585, "graphic": 585, "0mset_raster": 585, "admin": [585, 590, 644], "0mstates_provinc": 585, "0mfeatur": 585, "0mnaturalearthfeatur": 585, "0mcategori": 585, "cultur": 585, "0mname": 585, "admin_1_states_provinces_lin": 585, "0mscale": 585, "0mfacecolor": 585, "0mcoastlin": 585, "0madd_featur": 585, "0medgecolor": 585, "pose": 585, "difficulti": 585, "spectif": 585, "32min": 585, "0mmercat": 585, "0mgl": 585, "0mgridlin": 585, "0mxloc": 585, "0myloc": 585, "0mdraw_label": 585, "0mxlabels_top": 585, "0mylabels_right": 585, "0misinst": 585, "0mfigur": 585, "0mcanva": 585, "0mdraw": 585, "maker": 585, "0mxaxi": 585, "0mset_major_formatt": 585, "0mmpl": 585, "0mlongitude_formatt": 585, "0myaxi": 585, "0mlatitude_formatt": 585, "0m_lambert_gridlin": 585, "0mlambert_xtick": 585, "0mlambert_ytick": 585, "32mfrom": 585, "0mio": 585, "0mshaperead": 585, "32mimport": 585, "0mreader": 585, "0madd_geometri": 585, "0mgeometri": 585, "0m_set_titl": 585, "0mplot": 585, "0mappend": 585, "0mplot_var": 585, "0mplot_colorbar": 585, "0mmappabl": 585, "0mlabel": 585, "32mreturn": 585, "31mfile": 585, "git_repo": 585, "31mtype": 585, "fashion": 585, "0marg": 585, "0mshade": 585, "0mantialias": 585, "0mkwarg": 585, "31mdocstr": 585, "pseudocolor": 585, "signatur": [585, 587], "quadrilater": 585, "pcolor": 585, "prefer": [585, 589, 643], "discuss": [585, 593], "ref": [585, 601, 624], "shade": [585, 589], "flat": [585, 600], "gouraud": 585, "cari": 585, "expand": 585, "rc": 585, "regist": 585, "canon": 585, "chosen": 585, "patch": [585, 620], "force_edgecolor": 585, "singular": 585, "opaqu": 585, "auto": [585, 587, 609], "solid": [585, 621], "quad": 585, "halfwai": 585, "galleri": [585, 589, 595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634], "images_contours_and_field": 585, "pcolormesh_grid": 585, "snap": 585, "mesh": 585, "misc": [585, 589], "rasterization_demo": 585, "constructor": 585, "agg_filt": 585, "anim": 585, "antialias": [585, 620, 621], "aa": 585, "capstyl": 585, "clip_box": 585, "bbox": 585, "clip_on": 585, "clip_path": 585, "rgba": 585, "ec": 585, "fc": 585, "gid": 585, "hatch": 585, "in_layout": 585, "joinstyl": 585, "miter": 585, "bevel": 585, "thereof": 585, "offset_transform": 585, "path_effect": 585, "abstractpatheffect": 585, "picker": 585, "pickradiu": 585, "sketch_param": 585, "random": 585, "zorder": 585, "imshow": [585, 589, 605, 606, 609], "_ax": 585, "nrow": [585, 609], "ncolumn": 585, "_differ": 585, "li": 585, "handl": [585, 589], "polycollect": 585, "thu": [585, 592], "almost": 585, "slight": 585, "polygon": 585, "irrespect": 585, "One": [585, 590, 636, 642, 644, 646], "masked_arrai": [585, 636, 642], "1e": [585, 636, 642], "next": [585, 587, 592, 600], "get_gate_lat_lon_alt": [585, 589], "565": [585, 589], "562763": 585, "560526": 585, "888458": 585, "886227": 585, "883991": 585, "562765": 585, "560532": 585, "892834": 585, "890606": 585, "888374": 585, "562769": 585, "56054": 585, "898003": 585, "89578": 585, "893553": 585, "562756": 585, "560509": 585, "880096": 585, "877857": 585, "875618": 585, "560513": 585, "881853": 585, "879616": 585, "877377": 585, "56276": 585, "560518": 585, "884874": 585, "88264": 585, "880404": 585, "92199": 585, "92222": 585, "92245": 585, "186806": 585, "18703": 585, "18723": 585, "922264": 585, "92254": 585, "2396": 585, "23986": 585, "24012": 585, "92231": 585, "92263": 585, "29231": 585, "29262": 585, "29292": 585, "92208": 585, "92218": 585, "02802": 585, "02811": 585, "0282": 585, "92212": 585, "92226": 585, "07571": 585, "07583": 585, "07595": 585, "922356": 585, "133934": 585, "1341": [585, 589], "13428": 585, "goe": 585, "setup": [585, 589, 600, 604, 609, 610, 615, 628, 634, 643], "geoaxi": 585, "border": [585, 620], "cbar": [585, 611], "tick_param": 585, "labels": 585, "set_label": [585, 611], "gl": [585, 587, 611], "draw_label": [585, 587, 611], "xlabel_styl": [585, 611], "ylabel_styl": [585, 611], "kevz_velocity_2018_10_10_1458": 585, "specifici": 585, "pull": [585, 589, 590, 591, 592, 601, 644], "pr": [585, 592], "importantli": 585, "api": [585, 589], "abil": [585, 589, 634, 646], "arguement": 585, "explor": [585, 587], "appreci": [585, 634], "hello": 586, "welcom": 586, "narr": 586, "feedback": 586, "feel": 586, "know": [586, 646], "fridai": 587, "midwest": 587, "142": 587, "368": [587, 589], "excess": 587, "65": 587, "knot": 587, "mph": 587, "184": 587, "hail": [587, 589, 631], "bing": 587, "inch": 587, "diamet": 587, "ifram": 587, "spc": [587, 589], "climo": 587, "gmf": 587, "php": 587, "rpt": 587, "230331_rpts_filter": 587, "walworth": 587, "counti": 587, "southeastern": [587, 604], "geneva": 587, "tourist": 587, "especi": 587, "live": 587, "chicagoland": 587, "confirm": [587, 600, 636], "assembl": 587, "summari": [587, 600], "grlevel": 587, "encourag": 587, "peopl": 587, "cookbook": [587, 589, 634, 645], "moor": 587, "focu": 587, "varieti": [587, 590, 598, 599, 644], "forg": [587, 589, 590, 634, 643, 644, 646], "arm_pyart": [587, 590, 592, 634, 643, 644, 646], "shaperead": 587, "shpreader": 587, "shapelyfeatur": 587, "miniforge3": 587, "tqdm": 587, "tqdmwarn": 587, "iprogress": 587, "ipywidget": 587, "readthedoc": [587, 590, 644], "stabl": 587, "user_instal": 587, "autonotebook": 587, "notebook_tqdm": 587, "credit": 587, "censu": 587, "mac": [587, 589, 634], "curl": 587, "linux": [587, 589, 590, 634, 644, 646], "wget": 587, "www2": 587, "geo": [587, 589], "tiger": 587, "tiger2016": 587, "primaryroad": 587, "tl_2016_us_primaryroad": 587, "zip": [587, 598, 601, 609, 634], "xferd": 587, "dload": 587, "upload": [587, 589], "spent": 587, "7m": 587, "cpg": 587, "inflat": 587, "dbf": 587, "prj": 587, "shp": 587, "ea": 587, "iso": 587, "shx": 587, "reader": [587, 588, 589, 601], "geom": 587, "loop": [587, 589, 632], "rec": 587, "fullnam": 587, "interstate_featur": 587, "darkblu": 587, "clean": [587, 589], "filesystem": 587, "month": [587, 600, 601], "kmkx20230401_010517_v06": 587, "kmkx20230401_011057_v06": 587, "kmkx20230401_011638_v06": 587, "kmkx20230401_012219_v06": 587, "kmkx20230401_012759_v06": 587, "kmkx20230401_013341_v06": 587, "kmkx20230401_013922_v06": 587, "kmkx20230401_014502_v06": 587, "kmkx20230401_015042_v06": 587, "kmkx20230401_015623_v06": 587, "kmkx20230401_015928_v06": 587, "plot_configur": 587, "twilight_shift": 587, "cross_correlation_ratio": [587, 600, 612, 613, 630, 641, 642], "plot_radar_ppi": 587, "left_field": 587, "right_field": 587, "plot_config": 587, "precip": 587, "vel_dealia": 587, "dealias_region_bas": [587, 589, 596, 638], "add_field": [587, 590, 595, 596, 630, 631, 637, 638, 644], "corrected_veloc": [587, 596, 632, 638, 641], "plot_numb": 587, "config": [587, 589, 636, 646], "121": [587, 600, 604, 610, 629], "generate_titl": 587, "time_step": 587, "get_start_end": 587, "central_tim": 587, "astimezon": 587, "new_titl": 587, "cdt": 587, "sharon": 587, "Near": 587, "delavan": 587, "6105": 587, "60666": 587, "lightgrei": 587, "lavenderblush": 587, "ppi_velocity_reflectivity_": 587, "flexibl": 587, "hope": 587, "past": [588, 590, 644], "tag": [588, 589], "yyyi": 588, "mm": [588, 630], "dd": 588, "kernelspec": 588, "display_nam": 588, "ipykernel": 588, "languag": [588, 590, 634, 644], "language_info": 588, "codemirror_mod": 588, "file_extens": 588, "mimetyp": 588, "nbconvert_export": 588, "pygments_lex": 588, "ipython3": 588, "insert": 588, "nbformat": 588, "nbformat_minor": 588, "care": 588, "notabl": 588, "insight": 588, "lint": 589, "1407": 589, "mgrover1": 589, "readm": [589, 643], "1397": 589, "xradar": 589, "1417": 589, "1416": 589, "visual": [589, 609, 612, 620, 628], "1413": 589, "accessor": 589, "1411": 589, "1409": 589, "1401": 589, "joshua": 589, "hampton": 589, "del": [589, 611], "old": 589, "conda_recip": 589, "1399": 589, "ci": [589, 591, 592], "zssherman": 589, "ruff": 589, "1388": 589, "wrong": 589, "1390": 589, "1385": 589, "jrobrien91": 589, "1383": 589, "mnt": 589, "pkg_resourc": 589, "runtim": 589, "1394": 589, "neutrinocero": 589, "mail": [589, 590, 634, 644], "1393": 589, "codeown": 589, "1391": 589, "1384": 589, "kmuehlbauer": 589, "1382": 589, "gatemapp": [589, 598, 603, 607], "1379": 589, "mismatch": 589, "1381": 589, "wrap": 589, "get_gate_area": 589, "1375": 589, "wheel": 589, "1380": [589, 636], "1372": 589, "exec_modul": 589, "load_modul": 589, "1369": 589, "badg": 589, "1363": 589, "read_sigmet": 589, "1351": 589, "zouihao": 589, "unus": 589, "1343": 589, "rcjackson": 589, "1342": 589, "range_step": 589, "1338": 589, "max_num_g": 589, "1337": 589, "1327": 589, "revert": 589, "setuptool": 589, "unwant": 589, "cleanup": 589, "And": 589, "1357": 589, "1355": 589, "1339": 589, "lauratomkin": 589, "1361": 589, "commit": [589, 590, 592, 644], "hook": 589, "1335": 589, "manipul": [589, 611, 635], "1300": 589, "kylejgillett": 589, "melovato": 589, "app": 589, "tsbiscaro": 589, "1324": 589, "1319": 589, "1314": 589, "add_filt": 589, "1326": 589, "1320": [589, 636], "1325": 589, "jthielen": 589, "1303": 589, "jjhelmu": [589, 646], "wx4stg": 589, "antiviru": 589, "similiar": 589, "1307": 589, "1299": 589, "throw": 589, "convolve1d": 589, "1313": 589, "1306": 589, "1317": 589, "wolfidan": 589, "1311": 589, "jfigui": 589, "citat": [589, 590, 612, 634, 644], "1304": 589, "gamaanderson": 589, "hhuangwx": 589, "josephhardine": 589, "meteoswiss": [589, 631, 632], "mdr": 589, "ngui": 589, "scolli": 589, "tjlang": 589, "1294": 589, "1290": 589, "1285": 589, "1279": 589, "backward": [589, 593], "1278": 589, "1284": 589, "tracer": 589, "1296": 589, "1292": 589, "1287": 589, "cibuildwheel": 589, "1267": 589, "ocefpaf": 589, "1275": 589, "1276": 589, "1265": 589, "dcedgren": 589, "jilling": 589, "zhaobudaola": 589, "1263": 589, "1235": 589, "1215": 589, "columnsect": [589, 628], "1261": 589, "1241": 589, "pin": [589, 592], "1240": 589, "gatefi": 589, "1226": 589, "join_radar": 589, "repititon": 589, "iparam": 589, "1218": 589, "1216": 589, "trmm_rsl": 589, "1239": 589, "cftime": 589, "1211": 589, "incorrect": [589, 593, 638], "1231": 589, "ci_setup": 589, "1213": 589, "1264": 589, "basic": [589, 634, 635, 637], "1251": 589, "1234": 589, "1228": 589, "subset_radar": 589, "radar_util": 589, "1227": 589, "pyrad": 589, "1220": 589, "tst": 589, "median": 589, "1214": 589, "srbrodzik": 589, "1208": 589, "1204": 589, "1201": [589, 600], "1198": 589, "1196": 589, "catch": 589, "1191": 589, "1207": 589, "pypi": 589, "1206": 589, "unitest": 589, "1200": [589, 636], "1199": 589, "echoclass": 589, "1197": 589, "convv": 589, "awhil": 589, "back": 589, "1195": 589, "1190": 589, "dp": 589, "1184": 589, "solver": [589, 634], "1183": 589, "1176": 589, "1187": 589, "revis": 589, "270": [589, 590, 625, 644], "1185": 589, "1181": 589, "1178": 589, "1171": 589, "1180": 589, "1177": 589, "1173": 589, "sobitp59": 589, "rogu": 589, "1170": 589, "1160": 589, "1152": 589, "1151": 589, "mispel": 589, "1158": 589, "1148": 589, "1167": 589, "1154": 589, "unittest": 589, "1153": 589, "scm": [589, 590, 644], "1136": 589, "trigger": 589, "1126": 589, "action": [589, 590, 592], "1118": 589, "1115": 589, "maco": 589, "1147": 589, "prune": 589, "1143": 589, "1141": 589, "1140": [589, 636], "1139": 589, "1137": 589, "1131": 589, "1130": 589, "1129": 589, "1128": 589, "1127": 589, "1125": 589, "1124": 589, "1123": 589, "1120": 589, "1119": 589, "dpr": 589, "1116": 589, "typo": 589, "postcard": 589, "1104": 589, "1103": 589, "1122": 589, "gridmapdisplai": [589, 598, 608, 610, 626, 630, 640], "1099": 589, "quick": [589, 600], "1146": 589, "contribut": [589, 590, 644, 645], "1106": 589, "1117": 589, "1113": 589, "submodul": [589, 640], "1110": 589, "forgotten": 589, "1108": 589, "test_echo_class": 589, "1107": 589, "1101": 589, "1098": 589, "1097": 589, "1094": 589, "1080": [589, 636], "registri": 589, "1087": 589, "1096": 589, "1093": 589, "1090": 589, "1089": 589, "1088": 589, "1085": 589, "1084": 589, "analyt": 589, "1081": 589, "1079": 589, "1077": 589, "pmi": 589, "log": [589, 592], "csp": 589, "ritvj": 589, "doesn": [589, 636], "mandat": 589, "1014": 589, "reallynicegui": 589, "hasattr": 589, "1034": 589, "overlap": [589, 611, 620], "mapdisplai": 589, "1029": 589, "azimuth_rhi_plot": 589, "1025": 589, "1019": 589, "rxm25": 589, "1075": 589, "1064": 589, "mute_radar": 589, "1033": 589, "1030": 589, "radxgrid": 589, "1027": 589, "1026": 589, "roadmap": 589, "repo": 589, "1059": 589, "dep": 589, "sidebar": 589, "1074": 589, "datetime_util": 589, "1072": 589, "1071": 589, "rtanamachi": 589, "pydata": 589, "theme": 589, "1069": 589, "adc": 589, "1068": 589, "1067": 589, "1066": 589, "1063": 589, "codecov": 589, "1061": 589, "1060": 589, "1058": 589, "1056": 589, "1055": 589, "1053": 589, "1051": 589, "1050": 589, "1048": 589, "branch": [589, 590, 592, 644, 646], "1040": 589, "1039": 589, "1038": 589, "1031": 589, "1024": 589, "odim": 589, "1020": [589, 636], "humphreyscart": 589, "tkralph": 589, "1003": 589, "997": 589, "1007": 589, "1001": 589, "1010": 589, "travi": 589, "sty": [589, 590, 644], "pep8": [589, 590, 644], "1009": 589, "1005": 589, "988": 589, "quba1": 589, "984": 589, "tdwr": 589, "969": 589, "mapper": 589, "956": 589, "994": 589, "979": 589, "h5py": [589, 634], "978": 589, "june1st": 589, "switch": [589, 590, 644], "973": 589, "maint": [589, 590, 644], "966": 589, "991": [589, 607], "983": 589, "amarouan": 589, "abdelhak": 589, "bmgxyz": 589, "address": 589, "962": 589, "mwilson14": 589, "963": 589, "nonetyp": 589, "regard": 589, "959": 589, "964": [589, 614, 626], "176": 589, "919": 589, "rda": 589, "903": 589, "add_gate_area": 589, "950": 589, "blotchi": 589, "947": 589, "946": 589, "944": 589, "694": 589, "938": 589, "vlouf": 589, "934": 589, "925": 589, "feet": 589, "924": 589, "917": 589, "appveyor": [589, 644], "937": 589, "927": 589, "liter": 589, "said": 589, "949": 589, "948": 589, "929": 589, "926": 589, "920": 589, "915": 589, "911": 589, "grwise1": 589, "jsignel": 589, "rumpki": 589, "broke": 589, "913": 589, "msg29": 589, "909": 589, "907": 589, "framework": 589, "910": 589, "912": 589, "sphinx": [589, 595, 596, 598, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632], "napoleon": 589, "902": 589, "rtd": 589, "893": 589, "892": 589, "odimh5": 589, "898": 589, "895": 589, "896": 589, "864": 589, "louiswick": 589, "hilderbrand": 589, "877": 589, "886": 589, "crash": 589, "878": 589, "891": 589, "zflamig": 589, "futur": [589, 590, 593, 644], "890": 589, "889": 589, "885": 589, "dstex": 589, "880": 589, "soon": 589, "879": 589, "plot_grid": [589, 610, 624, 630, 640], "to_xarrai": 589, "873": 589, "876": 589, "elementwis": 589, "anaconda": [589, 590, 592, 634, 643, 644], "faq": 589, "group": [589, 590, 644], "868": 589, "mvanlierwalq": 589, "848": 589, "grid_io": 589, "846": 589, "jhemedin": 589, "841": 589, "nbin": 589, "865": 589, "856": 589, "840": [589, 636], "caus": 589, "852": 589, "849": 589, "get_dataset": 589, "845": 589, "docstr": 589, "838": 589, "836": 589, "cheatsheet": 589, "fortran": 589, "bit": [589, 643], "environ": [589, 634, 643, 645], "contr": 589, "843": 589, "spell": 589, "835": 589, "read_d3r_gcpex_nc": 589, "842": 589, "eccc": 589, "837": 589, "taylbm": 589, "kenkeho": 589, "swnesbitt": 589, "827": 589, "822": 589, "806": 589, "804": 589, "800": 589, "778": 589, "688": [589, 628], "incomplet": 589, "msg5": 589, "832": 589, "820": 589, "812": 589, "deal": 589, "809": 589, "contiuum": 589, "gh": 589, "795": 589, "explicit": 589, "py2": 589, "790": 589, "sh": 589, "kai": 589, "muehlbauer": 589, "789": [589, 601, 602], "777": 589, "indexerror": 589, "check_outli": 589, "776": 589, "juhi24": 589, "770": 589, "imp": 589, "newer": [589, 643], "675": 589, "824": 589, "minu": 589, "803": 589, "738": 589, "799": 589, "792": 589, "favor": 589, "791": 589, "786": 589, "784": 589, "itself": [589, 642], "inc": 589, "794": 589, "rst": 589, "preformat": 589, "779": 589, "eaxmpl": 589, "834": [589, 605, 607], "833": 589, "elsewher": 589, "831": 589, "828": 589, "821": 589, "pytest": [589, 590, 634, 643, 644], "818": 589, "atteun": 589, "817": 589, "simulated_veloc": [589, 641], "802": 589, "grab": [589, 623], "801": 589, "796": 589, "793": 589, "787": 589, "781": 589, "cvd": 589, "775": 589, "774": 589, "769": 589, "nl2": 589, "765": 589, "miaoneng": 589, "gewitterblitz": 589, "liliaow567": 589, "764": 589, "coveral": 589, "messsag": 589, "761": [589, 600, 602], "757": 589, "set_raster": 589, "748": 589, "754": 589, "755": 589, "recompil": 589, "758": 589, "ngoldbaum": 589, "reciev": 589, "752": 589, "maskedarrai": [589, 595], "gate_id": [589, 641], "749": 589, "746": 589, "744": 589, "zxdawn": 589, "netcdftim": 589, "736": 589, "731": 589, "dot_product": 589, "729": 589, "test_rhi_elev": 589, "twice": 589, "724": 589, "728": 589, "727": [589, 619, 626], "nosetest": 589, "715": 589, "vradh": 589, "vradv": 589, "quantiti": 589, "739": 589, "es5nhc": 589, "735": 589, "wave100": 589, "734": 589, "733": 589, "730": 589, "723": 589, "comp": 589, "721": 589, "cameron": 589, "homey": 589, "716": 589, "cameronhomey": 589, "jamessong": 589, "winash12": 589, "687": 589, "csnardi": 589, "645": 589, "docbuild": 589, "failur": 589, "709": [589, 624, 626], "mhpicel": 589, "705": 589, "fromstr": 589, "704": 589, "692": 589, "651": 589, "711": 589, "calculate_velocity_textur": [589, 638], "retreiv": 589, "672": 589, "bucket": [589, 600], "673": 589, "653": 589, "638": 589, "635": 589, "frombuff": 589, "702": 589, "minor": [589, 637, 640], "grid_mapp": 589, "707": 589, "706": 589, "goharkai": 589, "infinit": 589, "693": 589, "freemansw1": 589, "683": 589, "674": 589, "668": 589, "contact": 589, "land": 589, "667": [589, 636], "665": 589, "662": 589, "661": 589, "attributeerror": 589, "656": 589, "oserror": 589, "650": 589, "overflowerror": 589, "too": 589, "648": [589, 609, 626], "happier": 589, "647": 589, "640": 589, "639": 589, "634": 589, "620": 589, "itsjm": 589, "kirknorth": 589, "617": 589, "616": 589, "631": 589, "swap": 589, "el": 589, "plot_rai": 589, "618": 589, "_get_angl": 589, "613": 589, "607": 589, "linspac": [589, 590, 609, 612, 630, 636, 644], "603": 589, "627": 589, "623": 589, "596": 589, "595": 589, "632": 589, "630": 589, "625": 589, "tulipasilva": 589, "622": 589, "normbw": 589, "q": 589, "quit": [589, 634], "614": 589, "git": [589, 590, 634, 643, 644, 646], "611": 589, "sinaram": 589, "608": 589, "mrugna": 589, "605": 589, "bld": 589, "kludg": 589, "604": 589, "acknowledg": [589, 634], "602": 589, "qpe": 589, "598": 589, "mustafaalicelik": 589, "580": 589, "577": 589, "576": 589, "575": 589, "562": 589, "azim": 589, "546": 589, "pickl": 589, "unpickl": 589, "543": 589, "vcp": 589, "541": 589, "noaaport": 589, "seper": 589, "540": [589, 636], "521": 589, "459": 589, "590": 589, "bugfix": 589, "l3": 589, "135": 589, "eet": 589, "585": 589, "582": 589, "574": 589, "570": 589, "558": 589, "ctm": 589, "553": 589, "542": 589, "aux_io": 589, "read_gam": 589, "535": 589, "midnight": 589, "523": 589, "importerror": 589, "522": 589, "519": 589, "512": 589, "510": 589, "phase_proc": 589, "zerodivis": 589, "494": 589, "485": 589, "unsupport": 589, "481": 589, "579": 589, "578": 589, "568": 589, "563": 589, "559": 589, "549": 589, "547": 589, "gamicfil": 589, "gamic_hdf5": 589, "536": 589, "524": 589, "513": 589, "balltre": 589, "504": 589, "501": 589, "482": 589, "479": 589, "594": 589, "561": 589, "despeckle_field": 589, "544": 589, "axislabel_flag": 589, "539": 589, "529": 589, "_get_x_z": 589, "491": [589, 620, 626], "486": 589, "586": 589, "583": 589, "572": 589, "fixup": 589, "569": 589, "560": 589, "rainbow_wrl": 589, "555": [589, 621, 626, 628], "recip": [589, 592], "554": 589, "nose_arg": 589, "548": 589, "538": 589, "532": 589, "531": 589, "528": 589, "output_to_geotiff": 589, "514": 589, "511": 589, "507": 589, "506": 589, "498": 589, "libgfortran": 589, "497": 589, "contour": [589, 598, 608, 626], "495": 589, "493": 589, "489": 589, "488": 589, "argentinean": 589, "480": [589, 636], "bdolan44": 589, "dara74k": 589, "gavi": 589, "jacaicedob": 589, "wx": 589, "pfhein": 589, "tamisalex": 589, "469": 589, "468": 589, "467": 589, "luminos": 589, "464": 589, "455": 589, "hclass": 589, "447": 589, "439": 589, "434": 589, "433": 589, "427": 589, "411": 589, "404": 589, "388": 589, "cross_section_ppi": [589, 625], "380": 589, "dim": 589, "472": 589, "471": 589, "470": 589, "prf": 589, "460": 589, "get_field_colormap": 589, "446": 589, "444": 589, "example_cfradial_rhi": 589, "441": 589, "417": 589, "struct": 589, "410": 589, "383": 589, "unicod": 589, "382": 589, "gatefit": 589, "372": 589, "465": 589, "refactor": 589, "463": 589, "decor": 589, "416": 589, "392": 589, "radxcovert": 589, "clarifi": 589, "475": 589, "406": 589, "add_field_lik": [589, 604], "397": 589, "391": 589, "376": 589, "370": 589, "corner_to_point": 589, "473": 589, "466": 589, "456": 589, "outstand": 589, "412": 589, "413": 589, "454": 589, "453": 589, "449": 589, "438": 589, "437": 589, "430": 589, "426": 589, "miniconda": [589, 590, 634, 644], "reactiv": 589, "422": 589, "plot_map_one_radar_to_grid": [589, 605, 607], "420": [589, 636], "419": 589, "408": 589, "resilli": 589, "403": 589, "write_mdv_grid": 589, "402": 589, "401": 589, "399": 589, "395": 589, "documen": 589, "add_2d_latlon_axi": 589, "394": 589, "378": 589, "acess": 589, "377": [589, 623, 626], "373": 589, "deeplycloudi": 589, "358": [589, 590, 644], "edge_netcdf": 589, "read_edge_netcdf": 589, "357": [589, 590, 644], "dealias_fourdd": 589, "348": 589, "346": 589, "creation": 589, "330": 589, "326": 589, "308": 589, "361": 589, "refl_filter_flag": 589, "map_gate_to_grid": 589, "334": 589, "region_dealia": 589, "327": 589, "libm": 589, "posix": 589, "319": 589, "unnecessari": 589, "inmemoryfil": 589, "365": 589, "359": [589, 590, 644], "354": 589, "_rsl_interfac": 589, "342": 589, "binstar": 589, "337": 589, "320": 589, "317": 589, "362": 589, "plot_grid_three_panel": 589, "353": 589, "confus": 589, "363": 589, "340": 589, "externalis": 589, "339": 589, "333": 589, "332": 589, "47": [589, 632], "324": 589, "323": 589, "271": 589, "binar": 589, "266": 589, "313": 589, "312": 589, "290": 589, "280": 589, "273": 589, "272": [589, 615, 626], "261": 589, "256": [589, 596, 597, 609, 631], "dealias_phase_unwrap": 589, "radarmapdispl": 589, "249": 589, "discontin": 589, "315": 589, "314": 589, "288": 589, "fault": 589, "276": 589, "dealias_unwrap_phas": 589, "275": 589, "corrupt": 589, "269": 589, "283": 589, "inconsist": 589, "274": 589, "254": 589, "fallback": 589, "245": 589, "316": 589, "ngates_vart": 589, "310": 589, "py3": [589, 646], "nexrad_level2": 589, "nexrad_level3": 589, "309": 589, "1byte": 589, "datatyp": 589, "weathergod": 589, "293": 589, "292": 589, "289": 589, "291": 589, "138": 589, "284": 589, "alter": 589, "267": 589, "latlon": 589, "264": 589, "262": 589, "260": 589, "259": 589, "258": 589, "241": [589, 601, 605], "rebuild": 589, "237": 589, "scientif": [590, 634, 644], "analyz": [590, 634, 641, 644], "repositori": [590, 591, 592, 634, 643, 644, 646], "e25": [590, 634, 644], "publish": [590, 644], "easiest": [590, 634, 644], "januari": [590, 634], "1st": [590, 634], "Then": [590, 592, 634, 643, 644], "termin": [590, 634, 644, 646], "prompt": [590, 634, 644], "mamba": 590, "openradar": [590, 644], "short": [590, 592, 644], "cours": [590, 604, 644], "ev": [590, 644], "pyart_short_cours": [590, 644], "youtub": [590, 644], "watch": [590, 644], "diip": [590, 644], "q3bkzw": [590, 644], "book": [590, 644], "pycodestyl": [590, 644], "pylint": [590, 644], "pep": [590, 644], "0008": [590, 644], "highli": [590, 644], "tast": [590, 644], "brief": [590, 591, 644], "third": [590, 644], "parti": [590, 644], "explain": [590, 644], "_inverse_dist_squar": [590, 644], "_average1d": [590, 644], "seen": [590, 644], "explan": [590, 591, 644], "privat": [590, 644], "rerun": [590, 644], "test_vad": [590, 644], "test_radar": [590, 636, 644], "make_target_radar": [590, 644], "1000": [590, 606, 614, 620, 621, 640, 644], "200": [590, 644], "ones_lik": [590, 644], "z_start": [590, 644], "z_end": [590, 644], "z_count": [590, 644], "vad_height": [590, 644], "vad_spe": [590, 644], "98665725": [590, 644], "94020686": [590, 644], "88107152": [590, 644], "81939374": [590, 644], "75851962": [590, 644], "vad_direct": [590, 644], "84659496": [590, 644], "30240553": [590, 644], "58658589": [590, 644], "81073051": [590, 644], "01353486": [590, 644], "01335138": [590, 644], "06014712": [590, 644], "12039762": [590, 644], "18410404": [590, 644], "24791911": [590, 644], "98663937": [590, 644], "9398407": [590, 644], "87958641": [590, 644], "81587601": [590, 644], "75205693": [590, 644], "assert_almost_equ": [590, 644], "pyarg": [590, 644], "test_cfradi": [590, 644], "cd": [590, 644], "fork": [590, 592, 644], "cartopy_map": [590, 644], "branch_nam": [590, 644], "task": [590, 644], "mind": [590, 604, 644], "simpli": [590, 630, 638, 640, 643, 644, 646], "acronym": [590, 644], "finish": [590, 644, 646], "quotat": [590, 644], "hit": [590, 644], "depth": [590, 634, 642, 644], "acronymn": [590, 644], "gitwash": [590, 644], "development_workflow": [590, 644], "whitespac": [590, 644], "usual": [590, 601, 644], "vim": [590, 644], "fetch": [590, 631, 632, 644], "ff": [590, 644], "sit": [590, 644], "guidanc": 590, "break": [591, 592], "anyth": 592, "creator": 592, "draft": 592, "shortlog": 592, "uplod": 592, "feedstock": 592, "clone": [592, 634, 643], "meta": 592, "yaml": 592, "sha256": 592, "rerend": 592, "smithi": 592, "bot": 592, "sometim": [592, 636], "awar": 592, "semant": 593, "earlier": 593, "ceas": 593, "Such": 593, "proceed": 593, "futurewarn": 593, "runner": [595, 601], "micromamba": [595, 601], "fromnumer": 595, "771": 595, "kth": 595, "__doc__": [595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 630], "sgpcsaprsurcmaci7": [595, 637], "20110520": [595, 637], "095101": [595, 637], "pop": 595, "specific_attenu": [595, 628, 631, 636, 641], "corrected_reflectivity_horizont": [595, 606, 610, 628, 636], "calculate_attenu": 595, "131": [595, 630], "132": [595, 630], "ax3": [595, 596, 624, 630], "133": [595, 628, 630], "suptitl": [595, 596, 623, 632], "075": [595, 597], "plot_attenu": [595, 597], "ipynb": [595, 596, 600, 601, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632], "ial": 596, "095636": [596, 638], "sonde_fil": 596, "sgpinterpolatedsondec1": 596, "c1": [596, 641], "20110510": 596, "000000": 596, "cdf": 596, "dt": 596, "read_arm_sonde_vap": 596, "exclude_transit": [596, 605, 606, 610, 629], "exclude_invalid": 596, "exclude_outsid": 596, "dealias_data": 596, "sixth": 596, "221": [596, 613], "222": [596, 613], "223": [596, 613], "ax4": 596, "224": [596, 613], "plot_dealia": [596, 597], "examples_correct": 597, "examples_python": 598, "examples_jupyt": 598, "grover": [600, 604, 609, 610, 615, 623, 628, 629], "filepath": [600, 601], "organ": 600, "radarsit": [600, 601], "_v06": 600, "khgx": 600, "aws_nexrad_level2_fil": [600, 601], "khgx20220322_120125_v06": 600, "clutter_filter_power_remov": 600, "spectrum_width": [600, 641, 642], "differential_phas": [600, 613, 641, 642], "relect": 600, "z_": [600, 604, 611], "v_": 600, "noq": 600, "level3": 600, "aws_nexrad_level3_velocity_fil": 600, "hgx_n0u_2022_03_22_12_01_25": 600, "aws_nexrad_level3_reflectivity_fil": 600, "hgx_n0q_2022_03_22_12_01_25": 600, "read_nexrad_level3": 600, "radar_level3_veloc": 600, "radar_level3_reflect": 600, "reflectivity_displai": 600, "velocity_displai": 600, "plot_nexrad_data_aw": [600, 602], "2008": 601, "zachari": 601, "sherman": 601, "zsherman": [601, 646], "tendenc": 601, "gz": 601, "handford": 601, "ca": 601, "khnx": 601, "0203": 601, "v06": 601, "khnx20060724_020338": 601, "nexrad_arch": 601, "231": 601, "clearli": 601, "lucki": 601, "31417": 601, "63111": 601, "plote": [601, 617], "central_latitud": [601, 617, 630, 637], "central_longitud": [601, 617, 630, 637], "downloadwarn": 601, "naturalearth": 601, "amazonaw": 601, "10m_physic": 601, "ne_10m_coastlin": 601, "10m_cultur": 601, "ne_10m_admin_1_states_provinces_lin": 601, "plot_older_nexrad_data_aw": [601, 602], "550": 602, "examples_io": 602, "xsapr": [604, 606, 610], "xsapr_sw_fil": [604, 606, 610], "swx_20120520_0641": [604, 606, 609, 610, 611, 615, 625, 628, 629, 630], "xsapr_se_fil": [604, 606, 610], "sex_20120520_0641": [604, 606, 610], "radar_sw": [604, 606, 610], "radar_s": [604, 606, 610], "southwestern": 604, "gmapper": 604, "radar_sw_mapped_to_radar_s": 604, "disp1": 604, "98": [604, 628, 632, 641], "97": [604, 606, 610, 612, 624, 628, 630, 636], "disp2": 604, "remap": 604, "eyebal": 604, "fortun": 604, "reflectivity_se_radar": 604, "reflectivity_sw_radar": 604, "reflectivity_differ": 604, "reflectivity_bia": 604, "southwest": 604, "xspar": 604, "southeast": 604, "histogram": [604, 638], "neccessarili": 604, "incl_gat": 604, "refl_s": 604, "refl_sw": 604, "values_without_mask": 604, "hist": [604, 638], "histogram2d": 604, "masked_wher": [604, 641], "log_": 604, "338": [604, 607], "plot_compare_two_radars_gatemapp": [604, 607], "123000": 605, "xsarp": [606, 618, 619], "gatefilter_s": [606, 610], "exclude_abov": [606, 610, 638], "gatefilter_sw": [606, 610], "201": [606, 630, 640], "50000": [606, 610, 630, 640], "40000": [606, 610, 617, 640], "57861": [606, 610], "363611": [606, 610], "819": [606, 607], "plot_map_two_radars_to_grid": [606, 607], "examples_map": 607, "helper": 609, "vstack": 609, "plot_color_gradi": 609, "cmap_categori": 609, "cmap_list": 609, "figh": 609, "99": 609, "set_titl": [609, 630], "cmap_nam": 609, "pyart_": 609, "va": 609, "transax": 609, "spine": 609, "ones": 609, "set_axis_off": 609, "perceptu": [609, 612], "light": [609, 631], "diverg": 609, "meaning": 609, "terrain": 609, "spectral_r": 609, "rememb": 609, "front": 609, "plot_choose_a_colormap": [609, 626], "181": 610, "blue": [610, 620, 621], "plot_cross_sect": [610, 626], "677": [610, 626], "colobar": 611, "joe": 611, "brien": 611, "obrienj": 611, "perfect": 611, "coord": 611, "gca": 611, "set_major_loc": 611, "nullloc": 611, "axsb": 611, "ppi_map": 611, "set_tick": 611, "114": [611, 626], "plot_modify_colorbar": [611, 626], "reduc": [612, 643], "promin": 612, "winter": [612, 630], "deemphas": 612, "depict": 612, "ultim": 612, "misinterpret": 612, "laura": [612, 630], "lmtomkin": [612, 630], "ncsu": [612, 630], "nexrad_fil": [612, 630], "kbgm": 612, "kbgm20200207_132642_v06": 612, "image_mute_radar": [612, 630], "magma_cmap": 612, "magma_r": [612, 630], "grays_cmap": 612, "gray_r": 612, "nonmuted_cmap": 612, "linearsegmentedcolormap": [612, 630], "from_list": [612, 630], "muted_cmap": 612, "nonmuted_reflect": [612, 630], "muted_reflect": 612, "set_aspect": [612, 630, 631], "905": [612, 626], "plot_nexrad_image_muted_reflect": [612, 626], "katx20130717_195021_v06": [613, 642], "958": [613, 626], "plot_nexrad_multiple_mo": [613, 626], "level2_katx_20130717_1950": 614, "ar2v": 614, "plot_nexrad_reflect": [614, 626], "plot_cross_hair": 615, "plot_ppi_cfradi": [615, 626], "171": [616, 626], "jason": [617, 624], "hemeding": [617, 624], "nsaxsaprppic1": 617, "20140201": 617, "184802": 617, "157": 617, "156": 617, "71": 617, "158": 617, "72": 617, "40km": 617, "plot_line_xi": 617, "20000": [617, 640], "200000": [617, 630], "plot_point": 617, "028": [617, 626], "plot_ppi_with_r": [617, 626], "instrument_nam": [618, 619, 642], "agl": 618, "fac": 618, "nplot": [618, 619, 623], "snum": 618, "hsrhi": [618, 619], "3f": [618, 619], "time_start": 618, "num2dat": 618, "only_use_cftime_datetim": 618, "only_use_python_datetim": 618, "figure_titl": 618, "isoformat": 618, "plot_rhi_cfradi": [618, 626], "differnenti": 620, "cori": [620, 621], "weber": [620, 621], "cweber": [620, 621], "220629": 620, "matplolib": 620, "visabl": 620, "flow": 620, "paramt": 620, "compens": 620, "00015": 620, "veri": [620, 630], "moir": 620, "001": 620, "get_start": [620, 621], "get_end": [620, 621], "blur": 620, "nice": [620, 643], "arbirarli": 620, "gaussian_filt": [620, 621], "ang": [620, 621], "levels_rain": 620, "levels_ic": 620, "ic": [620, 631], "contours_ic": 620, "contours_rain": 620, "fmt": [620, 621], "0000": [620, 621], "plot_rhi_contours_differential_reflect": [620, 626], "spyi": 621, "034142": 621, "ramp": 621, "blob": 621, "pyart_budrd18": 621, "coutour": 621, "dot": 621, "major": 621, "axhlin": 621, "axvlin": 621, "00b4ff": 621, "ff6800": 621, "set_ylabel": [621, 632], "cp": 621, "plot_rhi_data_overlai": [621, 626], "110041": 622, "064": [622, 626], "plot_rhi_mdv": [622, 626], "fields_to_plot": 623, "plot_num": 623, "u00b0": 623, "plot_rhi_two_panel": [623, 626], "20110520100000_nexrad_grid": 624, "read_grid": 624, "plot_crosshair": 624, "plot_longitude_slic": 624, "plot_latitude_slic": [624, 640], "plot_three_panel_gridmapdisplai": [624, 626], "225": 625, "xsect": 625, "tight_layout": 625, "364": [625, 626], "plot_xsect": [625, 626], "examples_plot": 626, "maxwel": [628, 629], "site_lon": 628, "73": 628, "site_lat": 628, "latitdu": 628, "pathcollect": 628, "0x7f9c44c84750": 628, "get_field_loc": 628, "350": 628, "818e": 628, "recalculated_diff_phas": [628, 636], "2778": 628, "1806": 628, "unf_dp_phase_shift": [628, 636], "953": 628, "145": 628, "144": 628, "diff_reflect": [628, 636], "20t06": 628, "distance_from_radar": 628, "233": 628, "545": 628, "latitude_of_loc": 628, "longitude_of_loc": 628, "line2d": 628, "0x7f9c44d02210": 628, "593": [628, 633], "plot_column_subset": [628, 633], "compz": 629, "composite_reflect": 629, "composite_displai": 629, "676": [629, 633], "plot_composite_reflect": [629, 633], "classifc": 630, "summer": 630, "ian": 630, "footprint": 630, "yield": 630, "smoother": 630, "rescal": 630, "curv": 630, "plot_convstrat_schem": 630, "pick": 630, "radii": 630, "dilat": 630, "conv_strat_yut": 630, "convsf_mask": 630, "masked_equ": 630, "convsf": 630, "magma_r_cmap": 630, "ref_cmap": 630, "albersequalarea": 630, "convsf_und": 630, "overestim": 630, "convsf_ov": 630, "uncertainti": 630, "underest": 630, "overest": 630, "ktbw": 630, "ktbw20220928_190142_v06": 630, "rasumussen": 630, "2003": 630, "reflecit": 630, "kokx": 630, "kokx20210207_161413_v06": 630, "nonmuted_ref": 630, "masked_invalid": 630, "nonmuted_ref_linear": 630, "mm6": 630, "m3": 630, "snow_rat": 630, "snow_rate_dict": 630, "hr": 630, "40500": 630, "034": 630, "ccotd": 630, "rasmussen": 630, "dixon": [630, 634], "vasiloff": 630, "hage": 630, "knight": 630, "vivekanandan": 630, "xu": 630, "nowcast": 630, "accumul": 630, "042": 630, "3c0020": 630, "snuart": 630, "381": [630, 633], "plot_convective_stratiform": [630, 633], "daniel": [631, 632], "wolfensberg": [631, 632], "open_radar_data": [631, 632], "mll2217907250u": 631, "003": 631, "preinterpol": 631, "20220628072500_savevol_cosmo_lookup_temp": 631, "nwp_temp": 631, "calculate_attenuation_zphi": 631, "uncorrected_differential_phas": 631, "pia": 631, "pida": 631, "corrected_reflect": [631, 641], "corrected_differential_reflect": [631, 641], "kdp_maesaka": 631, "specific_differential_phas": [631, 641], "hydroclass_semisupervis": 631, "uncorrected_cross_correlation_ratio": 631, "radar_echo_classif": 631, "lr": 631, "rp": 631, "rn": 631, "vi": 631, "mh": 631, "ih": 631, "hdg": 631, "boundarynorm": 631, "aggreg": 631, "crystal": 631, "rime": 631, "particl": 631, "wet": 631, "graupel": 631, "253": [631, 633], "plot_hydrometeor": [631, 633], "2682": 632, "5272": 632, "7815": 632, "10403": 632, "14259": 632, "18533": 632, "22800": [632, 636], "27060": [632, 636], "31310": 632, "35549": 632, "39777": 632, "43991": 632, "50263": 632, "58621": 632, "71002": 632, "87118": 632, "106740": 632, "125476": 632, "124": 632, "143293": 632, "160000": 632, "mla2119412050u": 632, "zlevel": 632, "5000": [632, 640], "u_allsweep": 632, "v_allsweep": 632, "idx": 632, "radar_1sweep": 632, "vad_brown": 632, "u_avg": 632, "nanmean": 632, "v_avg": 632, "sharei": 632, "set_xlabel": 632, "plot_vad": [632, 633], "082": 633, "examples_retriev": 633, "conceptu": 634, "understand": 634, "someth": 634, "instruct": [634, 645], "demonstr": 634, "maik": 634, "heistermann": 634, "bam": 634, "kellei": 634, "peura": 634, "pfaff": 634, "wolff": 634, "emerg": 634, "bull": 634, "amer": 634, "soc": 634, "117": 634, "128": 634, "00240": 634, "ii": [634, 642], "abl": [634, 643], "sophist": 634, "tutori": 634, "materi": 634, "asr": 634, "asm": 634, "erad": 634, "Or": 634, "pyart_env": [634, 637, 640, 646], "wish": 634, "unreleas": 634, "charg": 634, "resourc": [634, 643], "lassen": 634, "radtec": 634, "rsl_path": [634, 643], "usr": 634, "wrapper": 634, "fastest": 634, "cbc": 634, "glpk": 634, "coincbc": [634, 643, 646], "coin_install_dir": [634, 643, 646], "ask": [634, 646], "hypothet": 636, "idea": [636, 638], "dict_kei": [636, 641], "rain_rate_a": [636, 641], "volume_numb": 636, "platform_typ": 636, "instrument_typ": 636, "primary_axi": 636, "make_empty_ppi_radar": 636, "59416667": 636, "isn": 636, "240": 636, "660": 636, "720": 636, "780": 636, "960": 636, "1260": 636, "1440": 636, "1560": 636, "1620": 636, "1680": 636, "1740": 636, "1860": 636, "1920": 636, "1980": 636, "2040": 636, "2100": 636, "2160": 636, "2220": 636, "2280": 636, "2340": 636, "2400": 636, "2460": 636, "2520": 636, "2580": 636, "2640": 636, "2700": 636, "2760": 636, "2820": 636, "2880": 636, "2940": 636, "3060": 636, "3120": 636, "3180": 636, "3240": 636, "3300": 636, "3360": 636, "3420": 636, "3480": 636, "3540": 636, "3600": 636, "3660": 636, "3720": 636, "3780": 636, "3840": 636, "3900": 636, "3960": 636, "4020": 636, "4080": 636, "4140": 636, "4200": 636, "4260": 636, "4320": 636, "4380": 636, "4440": 636, "4500": 636, "4560": 636, "4620": 636, "4680": 636, "4740": 636, "4800": 636, "4860": 636, "4920": 636, "4980": 636, "5040": 636, "5100": 636, "5160": 636, "5220": 636, "5280": 636, "5340": 636, "5400": 636, "5460": 636, "5520": 636, "5580": 636, "5640": 636, "5700": 636, "5760": 636, "5820": 636, "5880": 636, "5940": 636, "6000": [636, 640], "6060": 636, "6120": 636, "6180": 636, "6240": 636, "6300": 636, "6360": 636, "6420": 636, "6480": 636, "6540": 636, "6600": 636, "6660": 636, "6720": 636, "6780": 636, "6840": 636, "6900": 636, "6960": 636, "7020": 636, "7080": 636, "7140": 636, "7200": [636, 642], "7260": 636, "7320": 636, "7380": 636, "7440": 636, "7560": 636, "7620": 636, "7680": 636, "7740": 636, "7800": 636, "7860": 636, "7920": 636, "7980": 636, "8040": 636, "8100": 636, "8160": 636, "8220": 636, "8280": 636, "8340": 636, "8400": 636, "8460": 636, "8520": 636, "8580": 636, "8640": 636, "8700": 636, "8760": 636, "8820": 636, "8880": 636, "8940": 636, "9000": [636, 640], "9060": 636, "9120": 636, "9180": 636, "9240": 636, "9300": 636, "9360": 636, "9420": 636, "9480": 636, "9540": 636, "9600": 636, "9660": 636, "9720": 636, "9780": 636, "9840": 636, "9900": 636, "9960": 636, "10020": 636, "10080": 636, "10140": 636, "10200": 636, "10260": 636, "10320": 636, "10380": 636, "10440": 636, "10500": 636, "10560": 636, "10620": 636, "10680": 636, "10740": 636, "10800": 636, "10860": 636, "10920": 636, "10980": 636, "11040": 636, "11100": 636, "11160": 636, "11220": 636, "11280": 636, "11340": 636, "11400": 636, "11460": 636, "11520": 636, "11580": 636, "11640": 636, "11700": 636, "11760": 636, "11820": 636, "11880": 636, "11940": 636, "12000": [636, 640], "12060": 636, "12120": 636, "12180": 636, "12240": 636, "12300": 636, "12360": 636, "12420": 636, "12480": 636, "12540": 636, "12600": 636, "12660": 636, "12720": 636, "12780": 636, "12840": 636, "12900": 636, "12960": 636, "13020": 636, "13080": 636, "13140": 636, "13200": 636, "13260": 636, "13320": 636, "13380": 636, "13440": 636, "13500": 636, "13560": 636, "13620": 636, "13680": 636, "13740": 636, "13800": 636, "13860": 636, "13920": 636, "13980": 636, "14040": 636, "14100": 636, "14160": 636, "14220": 636, "14280": 636, "14340": 636, "14400": 636, "14460": 636, "14520": 636, "14580": 636, "14640": 636, "14700": 636, "14760": 636, "14820": 636, "14880": 636, "14940": 636, "15000": [636, 640], "15060": 636, "15120": 636, "15180": 636, "15240": 636, "15300": 636, "15360": 636, "15420": 636, "15480": 636, "15540": 636, "15600": 636, "15660": 636, "15720": 636, "15780": 636, "15840": 636, "15900": 636, "15960": 636, "16020": 636, "16080": 636, "16140": 636, "16200": 636, "16260": 636, "16320": 636, "16380": 636, "16440": 636, "16500": 636, "16560": 636, "16620": 636, "16680": 636, "16740": 636, "16800": 636, "16860": 636, "16920": 636, "16980": 636, "17040": 636, "17100": 636, "17160": 636, "17220": 636, "17280": 636, "17340": 636, "17400": 636, "17460": 636, "17520": 636, "17580": 636, "17640": 636, "17700": 636, "17760": 636, "17820": 636, "17880": 636, "17940": 636, "18000": [636, 640], "18060": 636, "18120": 636, "18180": 636, "18240": 636, "18300": 636, "18360": 636, "18420": 636, "18480": 636, "18540": 636, "18600": 636, "18660": 636, "18720": 636, "18780": 636, "18840": 636, "18900": 636, "18960": 636, "19020": 636, "19080": 636, "19140": 636, "19200": 636, "19260": 636, "19320": 636, "19380": 636, "19440": 636, "19500": 636, "19560": 636, "19620": 636, "19680": 636, "19740": 636, "19800": 636, "19860": 636, "19920": 636, "19980": 636, "20040": 636, "20100": 636, "20160": 636, "20220": 636, "20280": 636, "20340": 636, "20400": 636, "20460": 636, "20520": 636, "20580": 636, "20640": 636, "20700": 636, "20760": 636, "20820": 636, "20880": 636, "20940": 636, "21000": [636, 640], "21060": 636, "21120": 636, "21180": 636, "21240": 636, "21300": 636, "21360": 636, "21420": 636, "21480": 636, "21540": 636, "21600": 636, "21660": 636, "21720": 636, "21780": 636, "21840": 636, "21900": 636, "21960": 636, "22020": 636, "22080": 636, "22140": 636, "22200": 636, "22260": 636, "22320": 636, "22380": 636, "22440": 636, "22500": 636, "22560": 636, "22620": 636, "22680": 636, "22740": 636, "22860": 636, "22920": 636, "22980": 636, "23040": 636, "23100": 636, "23160": 636, "23220": 636, "23280": 636, "23340": 636, "23400": 636, "23460": 636, "23520": 636, "23580": 636, "23640": 636, "23700": 636, "23760": 636, "23820": 636, "23880": 636, "23940": 636, "24000": [636, 640], "24060": 636, "24120": 636, "24180": 636, "24240": 636, "24300": 636, "24360": 636, "24420": 636, "24480": 636, "24540": 636, "24600": 636, "24660": 636, "24720": 636, "24780": 636, "24840": 636, "24900": 636, "24960": 636, "25020": 636, "25080": 636, "25140": 636, "25200": 636, "25260": 636, "25320": 636, "25380": 636, "25440": 636, "25500": 636, "25560": 636, "25620": 636, "25680": 636, "25740": 636, "25800": 636, "25860": 636, "25920": 636, "25980": 636, "26040": 636, "26100": 636, "26160": 636, "26220": 636, "26280": 636, "26340": 636, "26400": 636, "26460": 636, "26520": 636, "26580": 636, "26640": 636, "26700": 636, "26760": 636, "26820": 636, "26880": 636, "26940": 636, "27000": [636, 640], "27120": 636, "27180": 636, "27240": 636, "27300": 636, "27360": 636, "27420": 636, "27480": 636, "27540": 636, "27600": 636, "27660": 636, "27720": 636, "27780": 636, "27840": 636, "27900": 636, "27960": 636, "28020": 636, "28080": 636, "28140": 636, "28200": 636, "28260": 636, "28320": 636, "28380": 636, "28440": 636, "28500": 636, "28560": 636, "28620": 636, "28680": 636, "28740": 636, "28800": 636, "28860": 636, "28920": 636, "28980": 636, "29040": 636, "29100": 636, "29160": 636, "29220": 636, "29280": 636, "29340": 636, "29400": 636, "29460": 636, "29520": 636, "29580": 636, "29640": 636, "29700": 636, "29760": 636, "29820": 636, "29880": 636, "29940": 636, "30000": [636, 640], "30060": 636, "30120": 636, "30180": 636, "30240": 636, "30300": 636, "30360": 636, "30420": 636, "30480": 636, "30540": 636, "30600": 636, "30660": 636, "30720": 636, "30780": 636, "30840": 636, "30900": 636, "30960": 636, "31020": 636, "31080": 636, "31140": 636, "31200": 636, "31260": 636, "31320": 636, "31380": 636, "31440": 636, "31500": 636, "31560": 636, "31620": 636, "31680": 636, "31740": 636, "31800": 636, "31860": 636, "31920": 636, "31980": 636, "32040": 636, "32100": 636, "32160": 636, "32220": 636, "32280": 636, "32340": 636, "32400": 636, "32460": 636, "32520": 636, "32580": 636, "32640": 636, "32700": 636, "32760": 636, "32820": 636, "32880": 636, "32940": 636, "33000": [636, 640], "33060": 636, "33120": 636, "33180": 636, "33240": 636, "33300": 636, "33360": 636, "33420": 636, "33480": 636, "33540": 636, "33600": 636, "33660": 636, "33720": 636, "33780": 636, "33840": 636, "33900": 636, "33960": 636, "34020": 636, "34080": 636, "34140": 636, "34200": 636, "34260": 636, "34320": 636, "34380": 636, "34440": 636, "34500": 636, "34560": 636, "34620": 636, "34680": 636, "34740": 636, "34800": 636, "34860": 636, "34920": 636, "34980": 636, "35040": 636, "35100": 636, "35160": 636, "35220": 636, "35280": 636, "35340": 636, "35400": 636, "35460": 636, "35520": 636, "35580": 636, "35640": 636, "35700": 636, "35760": 636, "35820": 636, "35880": 636, "35940": 636, "36000": [636, 640], "36060": 636, "36120": 636, "36180": 636, "36240": 636, "36300": 636, "36360": 636, "36420": 636, "36480": 636, "36540": 636, "36600": 636, "36660": 636, "36720": 636, "36780": 636, "36840": 636, "36900": 636, "36960": 636, "37020": 636, "37080": 636, "37140": 636, "37200": 636, "37260": 636, "37320": 636, "37380": 636, "37440": 636, "37500": 636, "37560": 636, "37620": 636, "37680": 636, "37740": 636, "37800": 636, "37860": 636, "37920": 636, "37980": 636, "38040": 636, "38100": 636, "38160": 636, "38220": 636, "38280": 636, "38340": 636, "38400": 636, "38460": 636, "38520": 636, "38580": 636, "38640": 636, "38700": 636, "38760": 636, "38820": 636, "38880": 636, "38940": 636, "39000": [636, 640], "39060": 636, "39120": 636, "39180": 636, "39240": 636, "39300": 636, "39360": 636, "39420": 636, "39480": 636, "39540": 636, "39600": 636, "39660": 636, "39720": 636, "39780": 636, "39840": 636, "39900": 636, "39960": 636, "59416776": 636, "59416886": 636, "59489769": 636, "59489879": 636, "5948999": 636, "59415662": 636, "59414657": 636, "5874659": 636, "58745576": 636, "58744563": 636, "59414621": 636, "59412575": 636, "5805231": 636, "58050246": 636, "58048182": 636, "59419881": 636, "59423095": 636, "61560159": 636, "61563401": 636, "61566644": 636, "59418877": 636, "59421087": 636, "6089062": 636, "6089285": 636, "60895079": 636, "59417836": 636, "59419005": 636, "60196382": 636, "60197561": 636, "60198741": 636, "get_metadata": 636, "ref_dict": 636, "reflecitivity_horizont": 636, "21875": 636, "34375": 636, "0078125": 636, "2109375": 636, "1171875": 636, "59375": 636, "421875": 636, "5625": 636, "7109375": 636, "609375": 636, "5078125": 636, "3828125": 636, "6875": 636, "328125": 636, "3203125": 636, "859375": 636, "6484375": 636, "8515625": 636, "9375": [636, 642], "0234375": 636, "6328125": 636, "2890625": 636, "546875": 636, "578125": 636, "6796875": 636, "ref_field": 637, "ref_gt_0": 637, "mask_dict": 637, "reflectivity_mask": 637, "coolwarm": 637, "sherm": [637, 640], "782": [637, 640], "matplotlibdeprecationwarn": [637, 640], "position": [637, 640], "829": [637, 640], "write_cfradi": 637, "new_radar": 637, "2pi": 638, "wave": 638, "3pi": 638, "erron": 638, "phenomena": [638, 642], "maximium": 638, "unambi": 638, "preprocess": 638, "thankfulli": [638, 640], "surround": [638, 640], "presenc": 638, "524973": 638, "vel_textur": 638, "velocity_textur": [638, 641], "elimin": [638, 640], "vleociti": 638, "At": 638, "velocity_dealias": 638, "realist": 638, "characterist": 640, "100000": 640, "gates_to_grid": 640, "99000": 640, "98000": 640, "97000": 640, "96000": 640, "95000": 640, "94000": 640, "93000": 640, "92000": 640, "91000": 640, "90000": 640, "89000": 640, "88000": 640, "87000": 640, "86000": 640, "85000": 640, "84000": 640, "83000": 640, "82000": 640, "81000": 640, "80000": 640, "79000": 640, "78000": 640, "77000": 640, "76000": 640, "75000": 640, "74000": 640, "73000": 640, "72000": 640, "71000": 640, "70000": 640, "69000": 640, "68000": 640, "67000": 640, "66000": 640, "65000": 640, "64000": 640, "63000": 640, "62000": 640, "61000": 640, "59000": 640, "58000": 640, "57000": 640, "56000": 640, "55000": 640, "54000": 640, "53000": 640, "52000": 640, "51000": 640, "49000": 640, "48000": 640, "47000": 640, "46000": 640, "45000": 640, "44000": 640, "43000": 640, "42000": 640, "41000": 640, "38000": 640, "37000": 640, "35000": 640, "34000": 640, "32000": 640, "31000": 640, "29000": 640, "28000": 640, "26000": 640, "23000": 640, "22000": 640, "19000": 640, "16000": 640, "14000": 640, "13000": 640, "8000": 640, "longitudn": 640, "latitudn": 640, "suffer": 640, "artifici": 640, "feather": 640, "grid_bett": 640, "1750": 640, "sgpxsaprcmacsuri5": 641, "20171004": 641, "203018": 641, "total_pow": 641, "xsapr_clutt": 641, "sounding_temperatur": 641, "signal_to_noise_ratio": 641, "unfolded_differential_phas": 641, "corrected_differential_phas": 641, "filtered_corrected_differential_phas": 641, "corrected_specific_diff_phas": 641, "filtered_corrected_specific_diff_phas": 641, "path_integrated_attenu": 641, "specific_differential_attenu": 641, "path_integrated_differential_attenu": 641, "nonhydrometeor": 641, "exclude_equ": 641, "tell": 641, "refl_arrai": 641, "reflectivity_w_mask": 641, "iter_slic": [641, 642], "9344453454202706": 641, "620691732853737": 641, "3756584054113996": 641, "597935968662154": 641, "696735014111216": 641, "061894569912447": 641, "721673265240488": 641, "086695918593689": 641, "33930700509078": 641, "599363169483158": 641, "836875745223637": 641, "051601529570966": 641, "22435547210836": 641, "378109469982695": 641, "553820234067336": 641, "648943841665002": 641, "837593740986444": 641, "049614721040282": 641, "331202567459613": 641, "585432697375357": 641, "87002341270722": 641, "993012637722325": 641, "061966001642219": 641, "122799449619672": 641, "861035552720102": 641, "74608994279257": 641, "148801770281325": 641, "70860719727862": 641, "989513966551444": 641, "188644935344827": 641, "89301878240611": 641, "172644371021923": 641, "79879842243138": 641, "912806090219976": 641, "766281467013889": 641, "920522471877334": 641, "898600907318164": 641, "971026055481874": 641, "110503947133682": 641, "094456418731509": 641, "0822160050675675": 641, "036430544969512": 641, "259332430219459": 641, "2438254054588604": 641, "473482666015625": 641, "574283685503023": 641, "866719139946832": 641, "771468742643597": 641, "beam_azimuth_angl": 642, "azimuth_angle_from_true_north": 642, "radial_azimuth_coordin": 642, "beam_elevation_angl": 642, "elevation_angle_from_horizontal_plan": 642, "radial_elevation_coordin": 642, "1832": 642, "log_differential_reflectivity_hv": 642, "875": 642, "differential_phase_hv": 642, "equivalent_reflectivity_factor": 642, "cross_correlation_ratio_hv": 642, "correlation_ratio": 642, "meters_per_second": 642, "doppler_spectrum_width": 642, "radial_velocity_of_scatterers_away_from_instru": 642, "target_fixed_angl": 642, "degrees_north": 642, "degrees_east": 642, "projection_range_coordin": 642, "range_to_measurement_volum": 642, "radial_range_coordin": 642, "spacing_is_const": 642, "meters_to_center_of_first_g": 642, "2125": 642, "meters_between_g": 642, "250": 642, "s20": 642, "unitless": 642, "coplan": 642, "vertical_point": 642, "idl": 642, "azimuth_surveil": 642, "elevation_surveil": 642, "sunscan": 642, "manual_ppi": 642, "manual_rhi": 642, "17t19": 642, "21z": 642, "time_in_seconds_since_volume_start": 642, "calendar": 642, "gregorian": 642, "katx": 642, "original_contain": 642, "vcp_pattern": 642, "7470703": 642, "7196045": 642, "6893921": 642, "511719": 642, "get_slic": 642, "sweep_1": 642, "52734375": 642, "indici": 642, "slice_indic": 642, "9066728410400056": 642, "478547577741713": 642, "587792083929423": 642, "871031288639269": 642, "971692217963673": 642, "830616390843327": 642, "108188248095756": 642, "483419908190385": 642, "88976917057903": 642, "852766685681688": 642, "410455582269897": 642, "66444787446138": 642, "997862391449566": 642, "172098402018502": 642, "489752513534416": 642, "712565619531706": 642, "commonli": 642, "8x": 643, "But": 643, "bash": 643, "pythonpath": 643, "pth": 643, "build_ext": 643, "segfault": 643, "Theres": 643, "proper": 643, "reinstal": 643, "remedi": 643, "fno": 643, "protector": 643, "d_fortify_sourc": 643, "cflag": 643, "makefil": 643, "troubl": 643, "define_macro": 643, "macro": 643, "extra_compile_arg": 643, "m32": 643, "extra_link_arg": 643, "m64": 643, "proj_lib": 643, "plai": 643, "xx": 643, "usernam": 643, "xxx": 643, "mpl_toolkit": 643, "auto_exampl": 644, "checker": 644, "travisci": 644, "blog_post": 644, "conflict": 646, "exit": 646, "led": 646, "manag": 646, "activ": 646, "deactiv": 646, "enviro": 646, "scratch": 646, "spyder": 646, "enhanc": 646, "though": 646, "yourusernam": 646, "youranacondadir": 646, "gitter": 646, "im": 646}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [126, 1, 0, "-", "correct"], [168, 1, 0, "-", "exceptions"], [169, 1, 0, "-", "filters"], [202, 1, 0, "-", "graph"], [359, 1, 0, "-", "io"], [380, 1, 0, "-", "lazydict"], [404, 1, 0, "-", "map"], [415, 1, 0, "-", "retrieve"], [447, 1, 0, "-", "testing"], [548, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_geographic"], [122, 0, 1, "", "cartesian_to_geographic_aeqd"], [123, 0, 1, "", "cartesian_vectors_to_geographic"], [124, 0, 1, "", "geographic_to_cartesian"], [125, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[127, 2, 1, "", "GateFilter"], [155, 0, 1, "", "calculate_attenuation"], [156, 0, 1, "", "calculate_attenuation_philinear"], [157, 0, 1, "", "calculate_attenuation_zphi"], [158, 0, 1, "", "correct_bias"], [159, 0, 1, "", "correct_noise_rhohv"], [160, 0, 1, "", "dealias_fourdd"], [161, 0, 1, "", "dealias_region_based"], [162, 0, 1, "", "dealias_unwrap_phase"], [163, 0, 1, "", "despeckle_field"], [164, 0, 1, "", "find_objects"], [165, 0, 1, "", "moment_based_gate_filter"], [166, 0, 1, "", "phase_proc_lp"], [167, 0, 1, "", "phase_proc_lp_gf"]], "pyart.correct.GateFilter": [[128, 3, 1, "", "copy"], [129, 3, 1, "", "exclude_above"], [130, 3, 1, "", "exclude_all"], [131, 3, 1, "", "exclude_below"], [132, 3, 1, "", "exclude_equal"], [133, 3, 1, "", "exclude_gates"], [134, 3, 1, "", "exclude_inside"], [135, 3, 1, "", "exclude_invalid"], [136, 3, 1, "", "exclude_masked"], [137, 3, 1, "", "exclude_none"], [138, 3, 1, "", "exclude_not_equal"], [139, 3, 1, "", "exclude_outside"], [140, 3, 1, "", "exclude_transition"], [141, 4, 1, "", "gate_excluded"], [142, 4, 1, "", "gate_included"], [143, 3, 1, "", "include_above"], [144, 3, 1, "", "include_all"], [145, 3, 1, "", "include_below"], [146, 3, 1, "", "include_equal"], [147, 3, 1, "", "include_gates"], [148, 3, 1, "", "include_inside"], [149, 3, 1, "", "include_none"], [150, 3, 1, "", "include_not_equal"], [151, 3, 1, "", "include_not_masked"], [152, 3, 1, "", "include_not_transition"], [153, 3, 1, "", "include_outside"], [154, 3, 1, "", "include_valid"]], "pyart.filters": [[170, 2, 1, "", "GateFilter"], [198, 0, 1, "", "iso0_based_gate_filter"], [199, 0, 1, "", "moment_and_texture_based_gate_filter"], [200, 0, 1, "", "moment_based_gate_filter"], [201, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[171, 3, 1, "", "copy"], [172, 3, 1, "", "exclude_above"], [173, 3, 1, "", "exclude_all"], [174, 3, 1, "", "exclude_below"], [175, 3, 1, "", "exclude_equal"], [176, 3, 1, "", "exclude_gates"], [177, 3, 1, "", "exclude_inside"], [178, 3, 1, "", "exclude_invalid"], [179, 3, 1, "", "exclude_masked"], [180, 3, 1, "", "exclude_none"], [181, 3, 1, "", "exclude_not_equal"], [182, 3, 1, "", "exclude_outside"], [183, 3, 1, "", "exclude_transition"], [184, 4, 1, "", "gate_excluded"], [185, 4, 1, "", "gate_included"], [186, 3, 1, "", "include_above"], [187, 3, 1, "", "include_all"], [188, 3, 1, "", "include_below"], [189, 3, 1, "", "include_equal"], [190, 3, 1, "", "include_gates"], [191, 3, 1, "", "include_inside"], [192, 3, 1, "", "include_none"], [193, 3, 1, "", "include_not_equal"], [194, 3, 1, "", "include_not_masked"], [195, 3, 1, "", "include_not_transition"], [196, 3, 1, "", "include_outside"], [197, 3, 1, "", "include_valid"]], "pyart.graph": [[203, 2, 1, "", "AirborneRadarDisplay"], [233, 2, 1, "", "GridMapDisplay"], [249, 2, 1, "", "GridMapDisplayBasemap"], [263, 2, 1, "", "RadarDisplay"], [292, 2, 1, "", "RadarMapDisplay"], [325, 2, 1, "", "RadarMapDisplayBasemap"], [358, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[204, 3, 1, "", "generate_az_rhi_title"], [205, 3, 1, "", "generate_filename"], [206, 3, 1, "", "generate_ray_title"], [207, 3, 1, "", "generate_title"], [208, 3, 1, "", "generate_vpt_title"], [209, 3, 1, "", "label_xaxis_r"], [210, 3, 1, "", "label_xaxis_rays"], [211, 3, 1, "", "label_xaxis_time"], [212, 3, 1, "", "label_xaxis_x"], [213, 3, 1, "", "label_yaxis_field"], [214, 3, 1, "", "label_yaxis_y"], [215, 3, 1, "", "label_yaxis_z"], [216, 3, 1, "", "plot"], [217, 3, 1, "", "plot_azimuth_to_rhi"], [218, 3, 1, "", "plot_colorbar"], [219, 3, 1, "", "plot_cr_raster"], [220, 3, 1, "", "plot_cross_hair"], [221, 3, 1, "", "plot_grid_lines"], [222, 3, 1, "", "plot_label"], [223, 3, 1, "", "plot_labels"], [224, 3, 1, "", "plot_ppi"], [225, 3, 1, "", "plot_range_ring"], [226, 3, 1, "", "plot_range_rings"], [227, 3, 1, "", "plot_ray"], [228, 3, 1, "", "plot_rhi"], [229, 3, 1, "", "plot_sweep_grid"], [230, 3, 1, "", "plot_vpt"], [231, 3, 1, "", "set_aspect_ratio"], [232, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[234, 3, 1, "", "cartopy_coastlines"], [235, 3, 1, "", "cartopy_political_boundaries"], [236, 3, 1, "", "cartopy_states"], [237, 3, 1, "", "generate_filename"], [238, 3, 1, "", "generate_grid_title"], [239, 3, 1, "", "generate_latitudinal_level_title"], [240, 3, 1, "", "generate_longitudinal_level_title"], [241, 3, 1, "", "plot_colorbar"], [242, 3, 1, "", "plot_cross_section"], [243, 3, 1, "", "plot_crosshairs"], [244, 3, 1, "", "plot_grid"], [245, 3, 1, "", "plot_latitude_slice"], [246, 3, 1, "", "plot_latitudinal_level"], [247, 3, 1, "", "plot_longitude_slice"], [248, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[250, 3, 1, "", "generate_filename"], [251, 3, 1, "", "generate_grid_title"], [252, 3, 1, "", "generate_latitudinal_level_title"], [253, 3, 1, "", "generate_longitudinal_level_title"], [254, 3, 1, "", "get_basemap"], [255, 3, 1, "", "plot_basemap"], [256, 3, 1, "", "plot_colorbar"], [257, 3, 1, "", "plot_crosshairs"], [258, 3, 1, "", "plot_grid"], [259, 3, 1, "", "plot_latitude_slice"], [260, 3, 1, "", "plot_latitudinal_level"], [261, 3, 1, "", "plot_longitude_slice"], [262, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[264, 3, 1, "", "generate_az_rhi_title"], [265, 3, 1, "", "generate_filename"], [266, 3, 1, "", "generate_ray_title"], [267, 3, 1, "", "generate_title"], [268, 3, 1, "", "generate_vpt_title"], [269, 3, 1, "", "label_xaxis_r"], [270, 3, 1, "", "label_xaxis_rays"], [271, 3, 1, "", "label_xaxis_time"], [272, 3, 1, "", "label_xaxis_x"], [273, 3, 1, "", "label_yaxis_field"], [274, 3, 1, "", "label_yaxis_y"], [275, 3, 1, "", "label_yaxis_z"], [276, 3, 1, "", "plot"], [277, 3, 1, "", "plot_azimuth_to_rhi"], [278, 3, 1, "", "plot_colorbar"], [279, 3, 1, "", "plot_cr_raster"], [280, 3, 1, "", "plot_cross_hair"], [281, 3, 1, "", "plot_grid_lines"], [282, 3, 1, "", "plot_label"], [283, 3, 1, "", "plot_labels"], [284, 3, 1, "", "plot_ppi"], [285, 3, 1, "", "plot_range_ring"], [286, 3, 1, "", "plot_range_rings"], [287, 3, 1, "", "plot_ray"], [288, 3, 1, "", "plot_rhi"], [289, 3, 1, "", "plot_vpt"], [290, 3, 1, "", "set_aspect_ratio"], [291, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[293, 3, 1, "", "generate_az_rhi_title"], [294, 3, 1, "", "generate_filename"], [295, 3, 1, "", "generate_ray_title"], [296, 3, 1, "", "generate_title"], [297, 3, 1, "", "generate_vpt_title"], [298, 3, 1, "", "label_xaxis_r"], [299, 3, 1, "", "label_xaxis_rays"], [300, 3, 1, "", "label_xaxis_time"], [301, 3, 1, "", "label_xaxis_x"], [302, 3, 1, "", "label_yaxis_field"], [303, 3, 1, "", "label_yaxis_y"], [304, 3, 1, "", "label_yaxis_z"], [305, 3, 1, "", "plot"], [306, 3, 1, "", "plot_azimuth_to_rhi"], [307, 3, 1, "", "plot_colorbar"], [308, 3, 1, "", "plot_cr_raster"], [309, 3, 1, "", "plot_cross_hair"], [310, 3, 1, "", "plot_grid_lines"], [311, 3, 1, "", "plot_label"], [312, 3, 1, "", "plot_labels"], [313, 3, 1, "", "plot_line_geo"], [314, 3, 1, "", "plot_line_xy"], [315, 3, 1, "", "plot_point"], [316, 3, 1, "", "plot_ppi"], [317, 3, 1, "", "plot_ppi_map"], [318, 3, 1, "", "plot_range_ring"], [319, 3, 1, "", "plot_range_rings"], [320, 3, 1, "", "plot_ray"], [321, 3, 1, "", "plot_rhi"], [322, 3, 1, "", "plot_vpt"], [323, 3, 1, "", "set_aspect_ratio"], [324, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[326, 3, 1, "", "generate_az_rhi_title"], [327, 3, 1, "", "generate_filename"], [328, 3, 1, "", "generate_ray_title"], [329, 3, 1, "", "generate_title"], [330, 3, 1, "", "generate_vpt_title"], [331, 3, 1, "", "label_xaxis_r"], [332, 3, 1, "", "label_xaxis_rays"], [333, 3, 1, "", "label_xaxis_time"], [334, 3, 1, "", "label_xaxis_x"], [335, 3, 1, "", "label_yaxis_field"], [336, 3, 1, "", "label_yaxis_y"], [337, 3, 1, "", "label_yaxis_z"], [338, 3, 1, "", "plot"], [339, 3, 1, "", "plot_azimuth_to_rhi"], [340, 3, 1, "", "plot_colorbar"], [341, 3, 1, "", "plot_cr_raster"], [342, 3, 1, "", "plot_cross_hair"], [343, 3, 1, "", "plot_grid_lines"], [344, 3, 1, "", "plot_label"], [345, 3, 1, "", "plot_labels"], [346, 3, 1, "", "plot_line_geo"], [347, 3, 1, "", "plot_line_xy"], [348, 3, 1, "", "plot_point"], [349, 3, 1, "", "plot_ppi"], [350, 3, 1, "", "plot_ppi_map"], [351, 3, 1, "", "plot_range_ring"], [352, 3, 1, "", "plot_range_rings"], [353, 3, 1, "", "plot_ray"], [354, 3, 1, "", "plot_rhi"], [355, 3, 1, "", "plot_vpt"], [356, 3, 1, "", "set_aspect_ratio"], [357, 3, 1, "", "set_limits"]], "pyart.io": [[360, 0, 1, "", "prepare_for_read"], [361, 0, 1, "", "read"], [362, 0, 1, "", "read_arm_sonde"], [363, 0, 1, "", "read_arm_sonde_vap"], [364, 0, 1, "", "read_cfradial"], [365, 0, 1, "", "read_chl"], [366, 0, 1, "", "read_grid"], [367, 0, 1, "", "read_grid_mdv"], [368, 0, 1, "", "read_mdv"], [369, 0, 1, "", "read_nexrad_archive"], [370, 0, 1, "", "read_nexrad_cdm"], [371, 0, 1, "", "read_nexrad_level3"], [372, 0, 1, "", "read_rsl"], [373, 0, 1, "", "read_sigmet"], [374, 0, 1, "", "read_uf"], [375, 0, 1, "", "write_cfradial"], [376, 0, 1, "", "write_grid"], [377, 0, 1, "", "write_grid_geotiff"], [378, 0, 1, "", "write_grid_mdv"], [379, 0, 1, "", "write_uf"]], "pyart.lazydict": [[381, 2, 1, "", "LazyLoadDict"], [394, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[382, 3, 1, "", "clear"], [383, 3, 1, "", "copy"], [384, 3, 1, "", "get"], [385, 3, 1, "", "has_key"], [386, 3, 1, "", "items"], [387, 3, 1, "", "keys"], [388, 3, 1, "", "pop"], [389, 3, 1, "", "popitem"], [390, 3, 1, "", "set_lazy"], [391, 3, 1, "", "setdefault"], [392, 3, 1, "", "update"], [393, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[395, 3, 1, "", "clear"], [396, 3, 1, "", "get"], [397, 3, 1, "", "items"], [398, 3, 1, "", "keys"], [399, 3, 1, "", "pop"], [400, 3, 1, "", "popitem"], [401, 3, 1, "", "setdefault"], [402, 3, 1, "", "update"], [403, 3, 1, "", "values"]], "pyart.map": [[405, 2, 1, "", "GateMapper"], [409, 0, 1, "", "example_roi_func_constant"], [410, 0, 1, "", "example_roi_func_dist"], [411, 0, 1, "", "example_roi_func_dist_beam"], [412, 0, 1, "", "grid_from_radars"], [413, 0, 1, "", "map_gates_to_grid"], [414, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[406, 4, 1, "", "distance_tolerance"], [407, 3, 1, "", "mapped_radar"], [408, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[416, 0, 1, "", "calculate_snr_from_reflectivity"], [417, 0, 1, "", "calculate_velocity_texture"], [418, 0, 1, "", "composite_reflectivity"], [419, 0, 1, "", "compute_cdr"], [420, 0, 1, "", "compute_l"], [421, 0, 1, "", "compute_noisedBZ"], [422, 0, 1, "", "compute_snr"], [423, 0, 1, "", "conv_strat_yuter"], [424, 0, 1, "", "dealias_spectra"], [425, 0, 1, "", "est_rain_rate_a"], [426, 0, 1, "", "est_rain_rate_hydro"], [427, 0, 1, "", "est_rain_rate_kdp"], [428, 0, 1, "", "est_rain_rate_z"], [429, 0, 1, "", "est_rain_rate_za"], [430, 0, 1, "", "est_rain_rate_zkdp"], [431, 0, 1, "", "est_rain_rate_zpoly"], [432, 0, 1, "", "fetch_radar_time_profile"], [433, 0, 1, "", "get_freq_band"], [434, 0, 1, "", "grid_displacement_pc"], [435, 0, 1, "", "grid_shift"], [436, 0, 1, "", "hydroclass_semisupervised"], [437, 0, 1, "", "kdp_maesaka"], [438, 0, 1, "", "kdp_schneebeli"], [439, 0, 1, "", "kdp_vulpiani"], [440, 0, 1, "", "map_profile_to_gates"], [441, 0, 1, "", "quasi_vertical_profile"], [442, 0, 1, "", "spectra_moments"], [443, 0, 1, "", "steiner_conv_strat"], [444, 0, 1, "", "texture_of_complex_phase"], [445, 0, 1, "", "vad_browning"], [446, 0, 1, "", "vad_michelson"]], "pyart.testing": [[448, 2, 1, "", "Grid"], [458, 2, 1, "", "InTemporaryDirectory"], [460, 2, 1, "", "Radar"], [489, 2, 1, "", "RadarSpectra"], [534, 0, 1, "", "get_metadata"], [535, 0, 1, "", "get_test_data"], [536, 0, 1, "", "make_empty_grid"], [537, 0, 1, "", "make_empty_ppi_radar"], [538, 0, 1, "", "make_empty_rhi_radar"], [539, 0, 1, "", "make_empty_spectra_radar"], [540, 0, 1, "", "make_normal_storm"], [541, 0, 1, "", "make_single_ray_radar"], [542, 0, 1, "", "make_storm_grid"], [543, 0, 1, "", "make_target_grid"], [544, 0, 1, "", "make_target_radar"], [545, 0, 1, "", "make_target_spectra_radar"], [546, 0, 1, "", "make_velocity_aliased_radar"], [547, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[449, 3, 1, "", "add_field"], [450, 3, 1, "", "get_point_longitude_latitude"], [451, 3, 1, "", "get_projparams"], [452, 3, 1, "", "init_point_altitude"], [453, 3, 1, "", "init_point_longitude_latitude"], [454, 3, 1, "", "init_point_x_y_z"], [455, 4, 1, "", "projection_proj"], [456, 3, 1, "", "to_xarray"], [457, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[459, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[461, 3, 1, "", "add_field"], [462, 3, 1, "", "add_field_like"], [463, 3, 1, "", "add_filter"], [464, 3, 1, "", "check_field_exists"], [465, 3, 1, "", "extract_sweeps"], [466, 3, 1, "", "get_azimuth"], [467, 3, 1, "", "get_elevation"], [468, 3, 1, "", "get_end"], [469, 3, 1, "", "get_field"], [470, 3, 1, "", "get_gate_area"], [471, 3, 1, "", "get_gate_lat_lon_alt"], [472, 3, 1, "", "get_gate_x_y_z"], [473, 3, 1, "", "get_nyquist_vel"], [474, 3, 1, "", "get_slice"], [475, 3, 1, "", "get_start"], [476, 3, 1, "", "get_start_end"], [477, 3, 1, "", "info"], [478, 3, 1, "", "init_gate_altitude"], [479, 3, 1, "", "init_gate_longitude_latitude"], [480, 3, 1, "", "init_gate_x_y_z"], [481, 3, 1, "", "init_rays_per_sweep"], [482, 3, 1, "", "iter_azimuth"], [483, 3, 1, "", "iter_elevation"], [484, 3, 1, "", "iter_end"], [485, 3, 1, "", "iter_field"], [486, 3, 1, "", "iter_slice"], [487, 3, 1, "", "iter_start"], [488, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[490, 4, 1, "", "altitude"], [491, 4, 1, "", "azimuth"], [492, 3, 1, "", "check_field_exists"], [493, 4, 1, "", "elevation"], [494, 4, 1, "", "fields"], [495, 4, 1, "", "fixed_angle"], [496, 4, 1, "", "gate_altitude"], [497, 4, 1, "", "gate_latitude"], [498, 4, 1, "", "gate_longitude"], [499, 4, 1, "", "gate_x"], [500, 4, 1, "", "gate_y"], [501, 4, 1, "", "gate_z"], [502, 3, 1, "", "get_end"], [503, 3, 1, "", "get_slice"], [504, 3, 1, "", "get_start"], [505, 3, 1, "", "get_start_end"], [506, 3, 1, "", "init_gate_altitude"], [507, 3, 1, "", "init_gate_longitude_latitude"], [508, 3, 1, "", "init_gate_x_y_z"], [509, 3, 1, "", "init_rays_per_sweep"], [510, 3, 1, "", "iter_azimuth"], [511, 3, 1, "", "iter_elevation"], [512, 3, 1, "", "iter_end"], [513, 3, 1, "", "iter_field"], [514, 3, 1, "", "iter_slice"], [515, 3, 1, "", "iter_start"], [516, 3, 1, "", "iter_start_end"], [517, 4, 1, "", "latitude"], [518, 4, 1, "", "longitude"], [519, 4, 1, "", "ngates"], [520, 4, 1, "", "npulses_max"], [521, 4, 1, "", "nrays"], [522, 4, 1, "", "nsweeps"], [523, 4, 1, "", "projection"], [524, 4, 1, "", "range"], [525, 4, 1, "", "rays_per_sweep"], [526, 4, 1, "", "scan_type"], [527, 4, 1, "", "sweep_end_ray_index"], [528, 4, 1, "", "sweep_mode"], [529, 4, 1, "", "sweep_number"], [530, 4, 1, "", "sweep_start_ray_index"], [531, 4, 1, "", "time"], [532, 3, 1, "", "to_vpt"], [533, 4, 1, "", "velocity_bins"]], "pyart.util": [[549, 0, 1, "", "angular_mean"], [550, 0, 1, "", "angular_mean_deg"], [551, 0, 1, "", "angular_std"], [552, 0, 1, "", "angular_std_deg"], [553, 0, 1, "", "angular_texture_2d"], [554, 0, 1, "", "cross_section_ppi"], [555, 0, 1, "", "cross_section_rhi"], [556, 0, 1, "", "datetime_from_dataset"], [557, 0, 1, "", "datetime_from_grid"], [558, 0, 1, "", "datetime_from_radar"], [559, 0, 1, "", "datetimes_from_dataset"], [560, 0, 1, "", "datetimes_from_radar"], [561, 0, 1, "", "estimate_noise_hs74"], [562, 0, 1, "", "for_azimuth"], [563, 0, 1, "", "get_column_rays"], [564, 0, 1, "", "get_field_location"], [565, 0, 1, "", "image_mute_radar"], [566, 0, 1, "", "interval_mean"], [567, 0, 1, "", "interval_std"], [568, 0, 1, "", "is_vpt"], [569, 0, 1, "", "join_radar"], [570, 0, 1, "", "mean_of_two_angles"], [571, 0, 1, "", "mean_of_two_angles_deg"], [572, 0, 1, "", "rolling_window"], [573, 0, 1, "", "simulated_vel_from_profile"], [574, 0, 1, "", "sphere_distance"], [575, 0, 1, "", "subset_radar"], [576, 0, 1, "", "texture"], [577, 0, 1, "", "texture_along_ray"], [578, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 582, 584, 585, 589], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 444], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 534], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 605, 606, 610, 640], "add_field": [32, 46, 449, 461], "get_point_longitude_latitud": [33, 450], "get_projparam": [34, 451], "init_point_altitud": [35, 452], "init_point_longitude_latitud": [36, 453], "init_point_x_y_z": [37, 454], "projection_proj": [38, 455], "to_xarrai": [39, 456], "write": [40, 457], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 583, 584, 590, 592, 604, 605, 606, 628, 634, 637, 642, 644], "add_field_lik": [47, 462], "add_filt": [48, 463], "check_field_exist": [49, 77, 464, 492], "extract_sweep": [50, 465], "get_azimuth": [51, 466], "get_elev": [52, 467], "get_end": [53, 87, 468, 502], "get_field": [54, 469], "get_gate_area": [55, 470], "get_gate_lat_lon_alt": [56, 471], "get_gate_x_y_z": [57, 472], "get_nyquist_vel": [58, 473], "get_slic": [59, 88, 474, 503], "get_start": [60, 89, 475, 504], "get_start_end": [61, 90, 476, 505], "info": [62, 477], "init_gate_altitud": [63, 91, 478, 506], "init_gate_longitude_latitud": [64, 92, 479, 507], "init_gate_x_y_z": [65, 93, 480, 508], "init_rays_per_sweep": [66, 94, 481, 509], "iter_azimuth": [67, 95, 482, 510], "iter_elev": [68, 96, 483, 511], "iter_end": [69, 97, 484, 512], "iter_field": [70, 98, 485, 513], "iter_slic": [71, 99, 486, 514], "iter_start": [72, 100, 487, 515], "iter_start_end": [73, 101, 488, 516], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "altitud": [75, 490], "azimuth": [76, 491], "elev": [78, 493], "field": [79, 494, 637], "fixed_angl": [80, 495], "gate_altitud": [81, 496], "gate_latitud": [82, 497], "gate_longitud": [83, 498], "gate_x": [84, 499], "gate_i": [85, 500], "gate_z": [86, 501], "latitud": [102, 517, 601], "longitud": [103, 518, 601], "ngate": [104, 519], "npulses_max": [105, 520], "nrai": [106, 521], "nsweep": [107, 522], "project": [108, 523], "rang": [109, 524], "rays_per_sweep": [110, 525], "scan_typ": [111, 526], "sweep_end_ray_index": [112, 527], "sweep_mod": [113, 528], "sweep_numb": [114, 529], "sweep_start_ray_index": [115, 530], "time": [116, 531, 584, 597, 602, 607, 626, 633], "to_vpt": [117, 532, 578], "velocity_bin": [118, 533], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_geograph": 121, "cartesian_to_geographic_aeqd": 122, "cartesian_vectors_to_geograph": 123, "geographic_to_cartesian": 124, "geographic_to_cartesian_aeqd": 125, "correct": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 594, 595, 598], "gatefilt": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 641], "copi": [128, 171, 383], "exclude_abov": [129, 172], "exclude_al": [130, 173], "exclude_below": [131, 174], "exclude_equ": [132, 175], "exclude_g": [133, 176], "exclude_insid": [134, 177], "exclude_invalid": [135, 178], "exclude_mask": [136, 179], "exclude_non": [137, 180], "exclude_not_equ": [138, 181], "exclude_outsid": [139, 182], "exclude_transit": [140, 183], "gate_exclud": [141, 184], "gate_includ": [142, 185], "include_abov": [143, 186], "include_al": [144, 187], "include_below": [145, 188], "include_equ": [146, 189], "include_g": [147, 190], "include_insid": [148, 191], "include_non": [149, 192], "include_not_equ": [150, 193], "include_not_mask": [151, 194], "include_not_transit": [152, 195], "include_outsid": [153, 196], "include_valid": [154, 197], "calculate_attenu": 155, "calculate_attenuation_philinear": 156, "calculate_attenuation_zphi": 157, "correct_bia": 158, "correct_noise_rhohv": 159, "dealias_fourdd": 160, "dealias_region_bas": 161, "dealias_unwrap_phas": 162, "despeckle_field": 163, "find_object": 164, "moment_based_gate_filt": [165, 200], "phase_proc_lp": 166, "phase_proc_lp_gf": 167, "except": 168, "filter": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "iso0_based_gate_filt": 198, "moment_and_texture_based_gate_filt": 199, "temp_based_gate_filt": 201, "graph": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "airborneradardisplai": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "generate_az_rhi_titl": [204, 264, 293, 326], "generate_filenam": [205, 237, 250, 265, 294, 327], "generate_ray_titl": [206, 266, 295, 328], "generate_titl": [207, 267, 296, 329], "generate_vpt_titl": [208, 268, 297, 330], "label_xaxis_r": [209, 269, 298, 331], "label_xaxis_rai": [210, 270, 299, 332], "label_xaxis_tim": [211, 271, 300, 333], "label_xaxis_x": [212, 272, 301, 334], "label_yaxis_field": [213, 273, 302, 335], "label_yaxis_i": [214, 274, 303, 336], "label_yaxis_z": [215, 275, 304, 337], "plot": [216, 276, 305, 338, 583, 584, 585, 587, 598, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 631, 632], "plot_azimuth_to_rhi": [217, 277, 306, 339], "plot_colorbar": [218, 241, 256, 278, 307, 340], "plot_cr_rast": [219, 279, 308, 341], "plot_cross_hair": [220, 280, 309, 342], "plot_grid_lin": [221, 281, 310, 343], "plot_label": [222, 223, 282, 283, 311, 312, 344, 345], "plot_ppi": [224, 284, 316, 349], "plot_range_r": [225, 226, 285, 286, 318, 319, 351, 352], "plot_rai": [227, 287, 320, 353], "plot_rhi": [228, 288, 321, 354], "plot_sweep_grid": 229, "plot_vpt": [230, 289, 322, 355], "set_aspect_ratio": [231, 290, 323, 356], "set_limit": [232, 291, 324, 357], "gridmapdisplai": [233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 624], "cartopy_coastlin": 234, "cartopy_political_boundari": 235, "cartopy_st": 236, "generate_grid_titl": [238, 251], "generate_latitudinal_level_titl": [239, 252], "generate_longitudinal_level_titl": [240, 253], "plot_cross_sect": 242, "plot_crosshair": [243, 257], "plot_grid": [244, 258], "plot_latitude_slic": [245, 259], "plot_latitudinal_level": [246, 260], "plot_longitude_slic": [247, 261], "plot_longitudinal_level": [248, 262], "gridmapdisplaybasemap": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "get_basemap": 254, "plot_basemap": 255, "radardisplai": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "radarmapdisplai": [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 585], "plot_line_geo": [313, 346], "plot_line_xi": [314, 347], "plot_point": [315, 348], "plot_ppi_map": [317, 350, 585], "radarmapdisplaybasemap": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "plot_convstrat_schem": 358, "io": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379], "prepare_for_read": 360, "read": [361, 583, 584, 585, 600, 601], "read_arm_sond": 362, "read_arm_sonde_vap": 363, "read_cfradi": 364, "read_chl": 365, "read_grid": 366, "read_grid_mdv": 367, "read_mdv": 368, "read_nexrad_arch": 369, "read_nexrad_cdm": 370, "read_nexrad_level3": 371, "read_rsl": 372, "read_sigmet": 373, "read_uf": 374, "write_cfradi": 375, "write_grid": 376, "write_grid_geotiff": 377, "write_grid_mdv": 378, "write_uf": 379, "lazydict": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "lazyloaddict": [381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "clear": [382, 395], "get": [384, 396, 634], "has_kei": 385, "item": [386, 397], "kei": [387, 398, 584], "pop": [388, 399], "popitem": [389, 400], "set_lazi": 390, "setdefault": [391, 401], "updat": [392, 402, 592], "valu": [393, 403], "mutablemap": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "map": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 598, 603, 605, 606, 617, 640], "gatemapp": [405, 406, 407, 408, 604], "distance_toler": 406, "mapped_radar": 407, "time_toler": 408, "example_roi_func_const": 409, "example_roi_func_dist": 410, "example_roi_func_dist_beam": 411, "grid_from_radar": 412, "map_gates_to_grid": 413, "map_to_grid": 414, "retriev": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 598, 627], "calculate_snr_from_reflect": 416, "calculate_velocity_textur": 417, "composite_reflect": 418, "compute_cdr": 419, "compute_l": 420, "compute_noisedbz": 421, "compute_snr": 422, "conv_strat_yut": 423, "dealias_spectra": 424, "est_rain_rate_a": 425, "est_rain_rate_hydro": 426, "est_rain_rate_kdp": 427, "est_rain_rate_z": 428, "est_rain_rate_za": 429, "est_rain_rate_zkdp": 430, "est_rain_rate_zpoli": 431, "fetch_radar_time_profil": 432, "get_freq_band": 433, "grid_displacement_pc": 434, "grid_shift": 435, "hydroclass_semisupervis": 436, "kdp_maesaka": 437, "kdp_schneeb": 438, "kdp_vulpiani": 439, "map_profile_to_g": 440, "quasi_vertical_profil": 441, "spectra_mo": 442, "paramet": [442, 574, 585], "steiner_conv_strat": 443, "vad_brown": 445, "vad_michelson": 446, "test": [447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 590, 644], "intemporarydirectori": [458, 459], "cleanup": 459, "get_test_data": 535, "make_empty_grid": 536, "make_empty_ppi_radar": 537, "make_empty_rhi_radar": 538, "make_empty_spectra_radar": 539, "make_normal_storm": 540, "make_single_ray_radar": 541, "make_storm_grid": 542, "make_target_grid": 543, "make_target_radar": 544, "make_target_spectra_radar": 545, "make_velocity_aliased_radar": 546, "make_velocity_aliased_rhi_radar": 547, "util": [548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578], "angular_mean": 549, "angular_mean_deg": 550, "angular_std": 551, "angular_std_deg": 552, "angular_texture_2d": 553, "cross_section_ppi": 554, "cross_section_rhi": 555, "datetime_from_dataset": 556, "datetime_from_grid": 557, "datetime_from_radar": 558, "datetimes_from_dataset": 559, "datetimes_from_radar": 560, "estimate_noise_hs74": 561, "for_azimuth": 562, "assumpt": [562, 574], "get_column_rai": 563, "get_field_loc": 564, "image_mute_radar": 565, "interval_mean": 566, "interval_std": 567, "is_vpt": 568, "join_radar": 569, "mean_of_two_angl": 570, "mean_of_two_angles_deg": 571, "rolling_window": 572, "simulated_vel_from_profil": 573, "sphere_dist": 574, "subset_radar": 575, "textur": 576, "texture_along_rai": 577, "api": 579, "refer": [579, 630], "manual": 579, "blog": [580, 588, 644], "blend": 581, "observ": 581, "from": [581, 583, 600, 610, 613, 615, 616, 618, 619, 620, 621, 622, 625, 643], "tracer": 581, "us": [581, 583, 584, 585, 596, 604, 624], "py": [581, 582, 583, 589, 590, 591, 592, 634, 641, 642, 644], "art": [581, 582, 583, 589, 590, 591, 592, 634, 641, 642, 644], "import": [581, 583, 584, 585, 587, 590, 644], "goe": 581, "data": [581, 583, 584, 585, 587, 600, 601, 640, 641], "access": [581, 583, 585, 587], "csapr": 581, "load": [581, 584], "lma": 581, "flash": 581, "june": 581, "17th": 581, "case": 581, "17": 581, "rhi": [581, 618, 619, 620, 621, 622, 623], "activ": 582, "develop": [582, 593], "submit": 582, "pull": 582, "request": 582, "pr": [582, 589], "first": 582, "you": 582, "have": 582, "done": 582, "so": 582, "alreadi": 582, "need": 582, "fork": 582, "github": [582, 590, 592, 644], "repositori": 582, "second": 582, "termin": 582, "clone": 582, "your": [582, 609, 611], "remot": 582, "git": [582, 592], "command": 582, "third": 582, "creat": [582, 583, 584, 592, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 646], "doc": [582, 586], "conda": [582, 592], "environ": [582, 646], "fourth": 582, "we": 582, "instal": [582, 590, 634, 643, 644], "trmm": 582, "rsl": 582, "librari": 582, "lastli": 582, "python": [582, 590, 634, 644], "script": 582, "within": 582, "okai": 582, "should": 582, "now": 582, "readi": 582, "make": [582, 592], "chang": 582, "sourc": [582, 643], "code": [582, 590, 644], "1": [582, 589], "new": [582, 586], "branch": 582, "our": [582, 584, 585, 587], "2": [582, 589, 600, 601], "push": 582, "To": 582, "let": 582, "commit": 582, "after": 582, "thi": [582, 589], "i": [582, 634], "what": [582, 634], "look": 582, "like": 582, "hope": 582, "help": [582, 634], "hail": 583, "storm": 583, "visual": [583, 584, 587], "panda": 583, "motiv": [583, 587, 588], "nexrad": [583, 585, 587, 600, 601, 613, 614], "fsspec": 583, "setup": [583, 587, 590, 591, 644], "filesystem": 583, "bucket": 583, "file": [583, 590, 613, 615, 616, 618, 619, 620, 621, 622, 636, 637, 644], "dataset": 583, "nexradaw": 583, "configur": 583, "search": 583, "download": [583, 587], "spc": 583, "report": 583, "function": [583, 587], "loop": 583, "through": 583, "helper": 583, "scale": 583, "bar": 583, "an": [583, 612, 620, 621, 646], "anim": 583, "imag": [583, 587, 612], "view": [583, 584], "final": [583, 584], "conclus": [583, 585, 587, 588], "work": [584, 630], "vertic": 584, "point": [584, 628], "xarrai": 584, "hvplot": 584, "overview": 584, "ka": 584, "band": 584, "arm": [584, 590, 634, 644], "zenith": 584, "kazr": 584, "instrument": 584, "clean": 584, "up": [584, 585, 646], "bit": 584, "analysi": 584, "subset": 584, "reflect": [584, 595, 612, 614, 620, 621, 629], "veloc": [584, 596, 638], "quick": 584, "extract": [584, 628], "date": [584, 587], "inform": [584, 646], "label": 584, "holoview": 584, "try": [584, 585], "raster": 584, "takeawai": 584, "fix": [585, 589, 601], "weird": 585, "pattern": 585, "when": 585, "level": [585, 600, 601], "3": [585, 589, 600, 624], "The": [585, 587, 588, 590, 634, 642, 644], "recreat": 585, "issu": [585, 601], "set": [585, 646], "matplotlib": 585, "style": [585, 590, 644], "without": 585, "alpha": 585, "add": [585, 587], "argument": 585, "dig": 585, "investig": [585, 587], "pcolormesh": 585, "edgecolor": 585, "modifi": [585, 611], "default": 585, "solut": [585, 588], "sever": 587, "weather": 587, "wisconsin": 587, "outbreak": 587, "focus": 587, "southern": 587, "reproduc": 587, "event": 587, "road": 587, "interst": 587, "featur": [587, 589], "avail": 587, "run": 587, "post": [588, 644], "templat": 588, "problem": 588, "changelog": 589, "v1": 589, "15": 589, "0": 589, "bug": 589, "other": 589, "merg": 589, "contributor": [589, 590, 644], "releas": [589, 592], "14": 589, "6": 589, "enhanc": 589, "made": 589, "mainten": 589, "upkeep": 589, "improv": 589, "5": 589, "4": 589, "document": [589, 592], "13": 589, "12": 589, "7": 589, "11": 589, "8": 589, "deprec": 589, "10": 589, "9": 589, "picasso": 589, "": [590, 593, 644], "guid": [590, 593, 644, 645], "toolkit": [590, 634, 644], "link": [590, 644], "cite": [590, 634, 644], "resourc": [590, 644], "continu": 591, "integr": 591, "how": [592, 630], "tag": 592, "prepar": 592, "note": 592, "trigger": 592, "pypi": 592, "upload": 592, "packag": 592, "forg": 592, "announc": 592, "open": 592, "forum": 592, "version": 593, "moment": [594, 598, 613], "exampl": [594, 598, 599, 603, 608, 627, 630], "attenu": 595, "dealia": 596, "doppler": 596, "region": 596, "base": 596, "algorithm": [596, 630], "comput": [597, 602, 607, 626, 633], "galleri": [598, 635], "input": [598, 599], "output": [598, 599], "aw": 600, "cloud": 600, "older": 601, "compar": 604, "two": [604, 606, 623], "singl": 605, "cartesian": [605, 606, 640], "choos": 609, "colormap": 609, "cross": [610, 625], "section": [610, 625], "colorbar": 611, "mute": 612, "multipl": [613, 618, 619], "ppi": [615, 616, 617, 625], "cfradial": 615, "mdv": [616, 620, 621, 622], "cartopi": 617, "panel": [618, 619, 623, 624], "cf": [618, 619], "radial": [618, 619], "contour": [620, 621], "line": [620, 621], "volum": 625, "column": 628, "abov": 628, "calcul": [629, 631, 632], "composit": 629, "convect": 630, "stratiform": 630, "classif": [630, 631], "summari": 630, "recommend": 630, "best": 630, "practic": 630, "hydrometeor": 631, "vad": 632, "profil": 632, "can": 634, "do": 634, "short": 634, "cours": 634, "depend": [634, 643, 646], "option": [634, 643, 646], "contribut": 634, "notebook": 635, "basic": 636, "ingest": 636, "netcdf": 636, "manipul": 637, "save": 637, "object": [637, 642], "dealias": 638, "mask": 641, "With": 641, "index": 642, "requir": 643, "obtain": 643, "latest": 643, "frequent": 643, "ask": 643, "question": 643, "user": 645, "anaconda": 646, "channel": 646, "ad": 646, "path": 646, "more": 646}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[126, "pyart-correct"]], "pyart.correct.GateFilter": [[127, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[128, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[129, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[130, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[131, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[132, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[133, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[134, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[135, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[136, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[137, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[138, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[139, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[140, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[141, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[142, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[143, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[144, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[145, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[146, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[147, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[148, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[149, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[150, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[151, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[152, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[153, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[154, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[155, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[156, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[157, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[158, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[159, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[160, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[161, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[162, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[163, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[164, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[165, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[166, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[167, "pyart-correct-phase-proc-lp-gf"]], "pyart.exceptions": [[168, "pyart-exceptions"]], "pyart.filters": [[169, "pyart-filters"]], "pyart.filters.GateFilter": [[170, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[171, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[172, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[173, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[174, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[175, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[176, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[177, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[178, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[179, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[180, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[181, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[182, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[183, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[184, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[185, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[186, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[187, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[188, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[189, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[190, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[191, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[192, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[193, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[194, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[195, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[196, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[197, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[198, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[199, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[200, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[201, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[202, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[203, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[204, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[205, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[206, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[207, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[208, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[209, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[210, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[211, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[212, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[213, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[214, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[215, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[216, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[217, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[218, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[219, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[220, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[221, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[222, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[223, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[224, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[225, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[226, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[227, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[228, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[229, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[230, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[231, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[232, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[233, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[234, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[235, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[236, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[237, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[238, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[239, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[240, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[241, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[242, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[243, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[244, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[245, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[246, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[247, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[248, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[249, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[250, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[251, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[252, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[253, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[254, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[255, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[256, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[257, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[258, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[259, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[260, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[261, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[262, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[263, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[264, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[265, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[266, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[267, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[268, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[269, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[270, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[271, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[272, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[273, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[274, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[275, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[276, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[277, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[278, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[279, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[280, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[281, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[282, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[283, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[284, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[285, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[286, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[287, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[288, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[289, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[290, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[291, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[292, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[293, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[294, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[295, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[296, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[297, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[298, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[299, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[300, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[301, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[302, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[303, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[304, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[305, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[306, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[307, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[308, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[309, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[310, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[311, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[312, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[313, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[314, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[315, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[316, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[317, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[318, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[319, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[320, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[321, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[322, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[323, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[324, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[325, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[326, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[327, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[328, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[329, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[330, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[331, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[332, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[333, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[334, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[335, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[336, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[337, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[338, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[339, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[340, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[341, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[342, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[343, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[344, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[345, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[346, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[347, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[348, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[349, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[350, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[351, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[352, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[353, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[354, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[355, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[356, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[357, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[358, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[359, "pyart-io"]], "pyart.io.prepare_for_read": [[360, "pyart-io-prepare-for-read"]], "pyart.io.read": [[361, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[362, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[363, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[364, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[365, "pyart-io-read-chl"]], "pyart.io.read_grid": [[366, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[367, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[368, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[369, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[370, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[371, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[372, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[373, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[374, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[375, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[376, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[377, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[378, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[379, "pyart-io-write-uf"]], "pyart.lazydict": [[380, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[381, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[382, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[383, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[384, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[385, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[386, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[387, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[388, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[389, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[390, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[391, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[392, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[393, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[394, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[395, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[396, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[397, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[398, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[399, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[400, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[401, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[402, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[403, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[404, "pyart-map"]], "pyart.map.GateMapper": [[405, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[406, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[407, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[408, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[409, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[410, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[411, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[412, "pyart-map-grid-from-radars"]], "pyart.map.map_gates_to_grid": [[413, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[414, "pyart-map-map-to-grid"]], "pyart.retrieve": [[415, "pyart-retrieve"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[416, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[417, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[418, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[419, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_l": [[420, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[421, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_snr": [[422, "pyart-retrieve-compute-snr"]], "pyart.retrieve.conv_strat_yuter": [[423, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.dealias_spectra": [[424, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[425, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[426, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[427, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[428, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[429, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[430, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[431, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.fetch_radar_time_profile": [[432, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[433, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[434, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[435, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[436, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_maesaka": [[437, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[438, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[439, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[440, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[441, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[442, "pyart-retrieve-spectra-moments"]], "Parameter": [[442, "parameter"], [574, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[443, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[444, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[445, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[446, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[447, "pyart-testing"]], "pyart.testing.Grid": [[448, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[449, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[450, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[451, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[452, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[453, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[454, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[455, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[456, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[457, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[458, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[459, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[460, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[461, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[462, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[463, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[464, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[465, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[466, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[467, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[468, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[469, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[470, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[471, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[472, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[473, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[474, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[475, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[476, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[477, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[478, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[479, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[480, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[481, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[482, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[483, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[484, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[485, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[486, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[487, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[488, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[489, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[490, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[491, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[492, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[493, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[494, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[495, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[496, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[497, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[498, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[499, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[500, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[501, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[502, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[503, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[504, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[505, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[506, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[507, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[508, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[509, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[510, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[511, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[512, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[513, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[514, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[515, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[516, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[517, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[518, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[519, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[520, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[521, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[522, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[523, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[524, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[525, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[526, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[527, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[528, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[529, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[530, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[531, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[532, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[533, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[534, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[535, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[536, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[537, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[538, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[539, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_normal_storm": [[540, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[541, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[542, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[543, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[544, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_spectra_radar": [[545, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[546, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[547, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[548, "pyart-util"]], "pyart.util.angular_mean": [[549, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[550, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[551, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[552, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[553, "pyart-util-angular-texture-2d"]], "pyart.util.cross_section_ppi": [[554, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[555, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[556, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[557, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[558, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[559, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[560, "pyart-util-datetimes-from-radar"]], "pyart.util.estimate_noise_hs74": [[561, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[562, "pyart-util-for-azimuth"]], "Assumptions": [[562, "assumptions"], [574, "assumptions"]], "pyart.util.get_column_rays": [[563, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[564, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[565, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[566, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[567, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[568, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[569, "pyart-util-join-radar"]], "pyart.util.mean_of_two_angles": [[570, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[571, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[572, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[573, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[574, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[575, "pyart-util-subset-radar"]], "pyart.util.texture": [[576, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[577, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[578, "pyart-util-to-vpt"]], "API Reference Manual": [[579, "api-reference-manual"]], "Blog": [[580, "blog"]], "Blending Observations from TRACER using Py-ART": [[581, "blending-observations-from-tracer-using-py-art"]], "Imports": [[581, "imports"], [583, "imports"], [584, "imports"], [585, "imports"], [587, "imports"]], "GOES data access": [[581, "goes-data-access"]], "CSAPR data access": [[581, "csapr-data-access"]], "Load LMA Flash data": [[581, "load-lma-flash-data"]], "June 17th case": [[581, "june-17th-case"]], "June 17 RHI": [[581, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[582, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[582, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[582, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[582, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[582, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[582, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[582, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[582, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[582, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[582, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[582, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[582, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[583, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[583, "motivation"], [587, "motivation"], [588, "motivation"]], "NEXRAD Data Access - fsspec": [[583, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[583, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[583, "read-in-a-file"]], "Visualize the Dataset": [[583, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[583, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[583, "configure-the-search"]], "Search and Download the Data": [[583, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[583, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[583, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[583, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[583, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[583, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[583, "create-an-animation-of-the-images"]], "View the Final Animation": [[583, "view-the-final-animation"]], "Conclusion": [[583, "conclusion"], [585, "conclusion"], [587, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[584, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[584, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[584, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[584, "plot-using-pyart"]], "Load in the data using pyart": [[584, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[584, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[584, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[584, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[584, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[584, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[584, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[584, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[584, "create-our-holoviews-plots"]], "View the Final Visualization": [[584, "view-the-final-visualization"]], "Try Using Rasterize": [[584, "try-using-rasterize"]], "Key Takeaways": [[584, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[585, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[585, "the-data"]], "Data Access": [[585, "data-access"]], "Recreate the Issue Using PyART": [[585, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[585, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[585, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[585, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[585, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[585, "add-in-the-alpha-argument"]], "Dig into the Issue": [[585, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[585, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[585, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[585, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[585, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[585, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[585, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[585, "fixing-the-issue-in-pyart"]], "New Docs": [[586, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[587, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[587, "the-outbreak"]], "Focusing on Southern Wisconsin": [[587, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[587, "reproducing-event-images"]], "Visualizing the Event": [[587, "visualizing-the-event"]], "Access the Data": [[587, "access-the-data"]], "Download the Road Data": [[587, "download-the-road-data"]], "Add the Interstate Date as a feature": [[587, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[587, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[587, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[587, "run-our-plotting-functions"]], "Blog Post Template": [[588, "blog-post-template"]], "The Problem": [[588, "the-problem"]], "The Solution": [[588, "the-solution"]], "Conclusions": [[588, "conclusions"]], "Changelog": [[589, "changelog"]], "Py-ART v1.15.0": [[589, "py-art-v1-15-0"]], "Bugs fixed": [[589, "bugs-fixed"], [589, "id1"], [589, "id6"], [589, "id11"], [589, "id19"], [589, "id24"], [589, "id29"], [589, "id36"], [589, "id41"], [589, "id45"], [589, "id49"], [589, "id54"], [589, "id59"], [589, "id64"], [589, "id69"], [589, "id75"], [589, "id81"], [589, "id85"], [589, "id89"], [589, "id93"], [589, "id98"], [589, "id102"], [589, "id106"], [589, "id110"], [589, "id116"], [589, "id122"], [589, "id126"], [589, "id131"], [589, "id138"], [589, "id145"], [589, "id151"], [589, "id158"], [589, "id164"]], "Other merged PRs": [[589, "other-merged-prs"], [589, "id2"], [589, "id7"], [589, "id13"], [589, "id16"], [589, "id21"], [589, "id26"], [589, "id33"], [589, "id39"], [589, "id43"], [589, "id46"], [589, "id52"], [589, "id56"], [589, "id62"], [589, "id66"], [589, "id72"], [589, "id78"], [589, "id83"], [589, "id91"], [589, "id96"], [589, "id103"], [589, "id113"], [589, "id119"], [589, "id124"], [589, "id128"], [589, "id135"], [589, "id142"], [589, "id148"], [589, "id155"], [589, "id161"], [589, "id167"]], "Contributors to this release": [[589, "contributors-to-this-release"], [589, "id3"], [589, "id4"], [589, "id8"], [589, "id10"], [589, "id14"], [589, "id17"], [589, "id22"], [589, "id27"], [589, "id30"], [589, "id34"], [589, "id40"], [589, "id44"], [589, "id47"], [589, "id53"], [589, "id57"], [589, "id63"], [589, "id67"], [589, "id73"], [589, "id79"], [589, "id84"], [589, "id87"], [589, "id92"], [589, "id97"], [589, "id100"], [589, "id104"], [589, "id108"], [589, "id114"], [589, "id120"], [589, "id125"], [589, "id129"], [589, "id136"], [589, "id143"], [589, "id149"], [589, "id156"], [589, "id162"], [589, "id168"], [589, "id171"]], "Py-ART v1.14.6": [[589, "py-art-v1-14-6"]], "Enhancements made": [[589, "enhancements-made"], [589, "id5"], [589, "id15"], [589, "id18"], [589, "id23"], [589, "id28"], [589, "id31"], [589, "id35"], [589, "id48"], [589, "id58"], [589, "id68"], [589, "id74"], [589, "id80"], [589, "id88"], [589, "id101"], [589, "id105"], [589, "id109"], [589, "id115"], [589, "id121"], [589, "id130"], [589, "id137"], [589, "id144"], [589, "id150"], [589, "id157"], [589, "id163"], [589, "id169"]], "Maintenance and upkeep improvements": [[589, "maintenance-and-upkeep-improvements"], [589, "id9"], [589, "id12"], [589, "id32"], [589, "id37"], [589, "id42"], [589, "id50"], [589, "id55"], [589, "id60"], [589, "id65"], [589, "id70"], [589, "id76"], [589, "id82"], [589, "id86"], [589, "id90"], [589, "id94"], [589, "id99"], [589, "id111"], [589, "id117"], [589, "id132"], [589, "id139"], [589, "id146"], [589, "id152"], [589, "id159"], [589, "id165"], [589, "id170"]], "Py-ART v1.14.5": [[589, "py-art-v1-14-5"]], "Merged PRs": [[589, "merged-prs"]], "Py-ART v1.14.4": [[589, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[589, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[589, "py-art-v1-14-2"]], "Documentation improvements": [[589, "documentation-improvements"], [589, "id20"], [589, "id25"], [589, "id38"], [589, "id51"], [589, "id61"], [589, "id71"], [589, "id77"], [589, "id95"], [589, "id107"], [589, "id112"], [589, "id118"], [589, "id123"], [589, "id127"], [589, "id133"], [589, "id140"], [589, "id147"], [589, "id153"], [589, "id160"], [589, "id166"]], "Py-ART v1.14.1": [[589, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[589, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[589, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[589, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[589, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[589, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[589, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[589, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[589, "py-art-v1-12-5"]], "PyART v1.12.4": [[589, "pyart-v1-12-4"]], "PyART v1.12.2": [[589, "pyart-v1-12-2"]], "PyART v1.12.0": [[589, "pyart-v1-12-0"]], "PyART v1.11.8": [[589, "pyart-v1-11-8"]], "Deprecated features": [[589, "deprecated-features"], [589, "id134"], [589, "id141"], [589, "id154"]], "PyART v1.11.6": [[589, "pyart-v1-11-6"]], "PyART v1.11.5": [[589, "pyart-v1-11-5"]], "PyART v1.11.3": [[589, "pyart-v1-11-3"]], "PyART v1.11.2": [[589, "pyart-v1-11-2"]], "PyART v1.11.1": [[589, "pyart-v1-11-1"]], "PyART v1.11.0": [[589, "pyart-v1-11-0"]], "PyART v1.10.4": [[589, "pyart-v1-10-4"]], "PyART v1.10.3": [[589, "pyart-v1-10-3"]], "PyART v1.10.2": [[589, "pyart-v1-10-2"]], "PyART v1.10.1": [[589, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[589, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[589, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[589, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[589, "pyart-v1-8-0"]], "PyART v1.7.0": [[589, "pyart-v1-7-0"]], "PyART v1.6.0": [[589, "pyart-v1-6-0"]], "PyART v1.5.0": [[589, "pyart-v1-5-0"]], "PyART v1.4.0": [[589, "pyart-v1-4-0"]], "PyART v1.3.0": [[589, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[590, "contributor-s-guide"], [644, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[590, "the-python-arm-radar-toolkit-py-art"], [644, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[590, "important-links"], [644, "important-links"]], "Citing": [[590, "citing"], [644, "citing"]], "Install": [[590, "install"], [634, "install"], [644, "install"]], "Resources": [[590, "resources"], [644, "resources"]], "Code Style": [[590, "code-style"], [644, "code-style"]], "Python File Setup": [[590, "python-file-setup"], [644, "python-file-setup"]], "Testing": [[590, "testing"], [644, "testing"]], "GitHub": [[590, "github"], [644, "github"]], "Py-ART Continuous Integration Setup": [[591, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[592, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[592, "make-the-tagged-git-release"]], "Prepare the release notes": [[592, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[592, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[592, "documentation"]], "Create conda packages on conda-forge": [[592, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[592, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[593, "developer-s-guide"]], "Versions": [[593, "versions"]], "Moment correction examples": [[594, "moment-correction-examples"], [598, "moment-correction-examples"]], "Correct reflectivity attenuation": [[595, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[596, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[597, "computation-times"], [602, "computation-times"], [607, "computation-times"], [626, "computation-times"], [633, "computation-times"]], "Example Gallery": [[598, "example-gallery"]], "Input/Output Examples": [[598, "input-output-examples"], [599, "input-output-examples"]], "Mapping examples": [[598, "mapping-examples"], [603, "mapping-examples"]], "Plotting examples": [[598, "plotting-examples"], [608, "plotting-examples"]], "Retrieval Examples": [[598, "retrieval-examples"], [627, "retrieval-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[600, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[600, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[600, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[601, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[601, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[604, "compare-two-radars-using-gatemapper"]], "Map a single radar to a Cartesian grid": [[605, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[606, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[609, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[610, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[611, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[612, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[613, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[614, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[615, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[616, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[617, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[618, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [619, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[620, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [621, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[622, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[623, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[624, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[625, "plot-a-cross-section-from-a-ppi-volume"]], "Extract a radar column above a point": [[628, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[629, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[630, "convective-stratiform-classification"]], "How the algorithm works": [[630, "how-the-algorithm-works"]], "Examples": [[630, "examples"]], "Summary of recommendations and best practices": [[630, "summary-of-recommendations-and-best-practices"]], "References": [[630, "references"]], "Calculate and Plot hydrometeor classification": [[631, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[632, "calculate-and-plot-vad-profile"]], "The Python ARM Radar Toolkit - Py-ART": [[634, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[634, "what-is-py-art"]], "Citing Py-ART": [[634, "citing-py-art"]], "What can Py-ART do?": [[634, "what-can-py-art-do"]], "Short Courses": [[634, "short-courses"]], "Dependencies": [[634, "dependencies"]], "Optional Dependences": [[634, "optional-dependences"]], "Getting help": [[634, "getting-help"]], "Contributing": [[634, "contributing"]], "Notebook Gallery": [[635, "notebook-gallery"]], "Notebooks": [[635, null]], "Creating a basic ingest of a NetCDF file": [[636, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[637, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[638, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[640, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[641, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[642, "the-py-art-radar-object-and-indexing"]], "Installation": [[643, "installation"]], "Required Dependencies": [[643, "required-dependencies"]], "Optional Dependencies": [[643, "optional-dependencies"]], "Obtaining the latest source": [[643, "obtaining-the-latest-source"]], "Installing from Source": [[643, "installing-from-source"]], "Frequently asked questions": [[643, "frequently-asked-questions"]], "Blog Posts": [[644, "blog-posts"]], "User Guide": [[645, "user-guide"]], "Setting up an Environment": [[646, "setting-up-an-environment"]], "Anaconda": [[646, "anaconda"]], "Setting a Channel": [[646, "setting-a-channel"]], "Creating an Environment": [[646, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[646, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[646, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [126, "module-pyart.correct"], [168, "module-pyart.exceptions"], [169, "module-pyart.filters"], [202, "module-pyart.graph"], [359, "module-pyart.io"], [380, "module-pyart.lazydict"], [404, "module-pyart.map"], [415, "module-pyart.retrieve"], [447, "module-pyart.testing"], [548, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[126, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[127, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[128, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[141, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[142, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[144, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[145, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[155, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[156, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[157, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[158, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[159, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[160, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[161, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[162, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[163, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[164, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[165, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[166, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[167, "pyart.correct.phase_proc_lp_gf"]], "pyart.exceptions": [[168, "module-pyart.exceptions"]], "pyart.filters": [[169, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[170, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[184, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[185, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[201, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[202, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[203, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[204, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[205, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[210, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[211, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[221, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[231, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[232, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[233, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[234, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[235, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[249, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[250, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[251, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[252, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[253, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[254, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[255, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[256, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[257, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[258, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[263, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[264, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[265, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[266, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[267, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[268, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[270, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[271, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[280, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[285, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[290, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[291, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[292, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[293, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[294, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[295, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[296, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[297, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[299, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[300, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[301, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[309, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[310, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[323, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[324, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[325, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[326, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[327, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[328, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[329, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[330, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[332, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[333, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[334, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[342, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[356, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[357, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[358, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[359, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[360, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[361, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[362, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[363, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[364, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[365, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[366, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[367, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[368, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[369, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[370, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[371, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[372, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[373, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[374, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[375, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[376, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[377, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[378, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[379, "pyart.io.write_uf"]], "pyart.lazydict": [[380, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[381, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[382, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[383, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[384, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[385, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[386, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[394, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[395, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[396, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[397, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[398, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[399, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[400, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[401, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[402, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[403, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[404, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[405, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[406, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[407, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[408, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[409, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[410, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[411, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[412, "pyart.map.grid_from_radars"]], "map_gates_to_grid() (in module pyart.map)": [[413, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[414, "pyart.map.map_to_grid"]], "pyart.retrieve": [[415, "module-pyart.retrieve"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[416, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[417, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[418, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[419, "pyart.retrieve.compute_cdr"]], "compute_l() (in module pyart.retrieve)": [[420, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[421, "pyart.retrieve.compute_noisedBZ"]], "compute_snr() (in module pyart.retrieve)": [[422, "pyart.retrieve.compute_snr"]], "conv_strat_yuter() (in module pyart.retrieve)": [[423, "pyart.retrieve.conv_strat_yuter"]], "dealias_spectra() (in module pyart.retrieve)": [[424, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[425, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[426, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[427, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[428, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[429, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[430, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[431, "pyart.retrieve.est_rain_rate_zpoly"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[432, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[433, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[434, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[435, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[436, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[437, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[438, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[439, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[440, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[441, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[442, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[443, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[444, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[445, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[446, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[447, "module-pyart.testing"]], "grid (class in pyart.testing)": [[448, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[449, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[450, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[451, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[452, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[453, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[454, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[455, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[456, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[457, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[458, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[459, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[460, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[461, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[462, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[463, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[464, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[465, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[466, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[467, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[468, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[469, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[470, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[471, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[472, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[473, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[474, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[475, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[476, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[477, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[478, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[479, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[480, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[481, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[482, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[483, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[484, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[489, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[490, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[491, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[492, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[493, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[494, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[495, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[496, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[497, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[498, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[499, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[500, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[501, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[502, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[503, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[504, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[505, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[506, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[507, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[508, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[509, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[510, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[511, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[512, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[513, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[514, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[515, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[516, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[517, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[518, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[519, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[520, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[521, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[522, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[523, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[524, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[525, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[526, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[527, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[528, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[529, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[530, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[531, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[532, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[533, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[534, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[535, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[536, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[537, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[538, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[539, "pyart.testing.make_empty_spectra_radar"]], "make_normal_storm() (in module pyart.testing)": [[540, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[541, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[542, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[543, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[544, "pyart.testing.make_target_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[545, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[546, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[547, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[548, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[549, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[550, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[551, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[552, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[553, "pyart.util.angular_texture_2d"]], "cross_section_ppi() (in module pyart.util)": [[554, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[555, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[556, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[557, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[558, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[559, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[560, "pyart.util.datetimes_from_radar"]], "estimate_noise_hs74() (in module pyart.util)": [[561, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[562, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[563, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[564, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[565, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[566, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[567, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[568, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[569, "pyart.util.join_radar"]], "mean_of_two_angles() (in module pyart.util)": [[570, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[571, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[572, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[573, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[574, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[575, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[576, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[577, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[578, "pyart.util.to_vpt"]]}})