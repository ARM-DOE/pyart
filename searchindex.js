Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_above_toa", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_last_gates", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calc_cloud_mask", "API/generated/pyart.correct.calc_noise_floor", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.cloud_threshold", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.range_correction", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_above_toa", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_last_gates", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_maxcappi", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.graph.plot_maxcappi", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.create_cfad", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_rhi_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/2024/animated-gifs-with-pyart", "blog_posts/2024/epcape-blog-post", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_cloud_mask", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_grid_single_sweep_ppi", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_max_cappi", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_cfad", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_hydrometeor_class_x_band", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_above_toa.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_last_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calc_cloud_mask.rst", "API/generated/pyart.correct.calc_noise_floor.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.cloud_threshold.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.range_correction.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_above_toa.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_last_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_maxcappi.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.graph.plot_maxcappi.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.create_cfad.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_rhi_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/2024/animated-gifs-with-pyart.ipynb", "blog_posts/2024/epcape-blog-post.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_cloud_mask.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_grid_single_sweep_ppi.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_max_cappi.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_cfad.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_hydrometeor_class_x_band.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_above_toa", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_last_gates", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calc_cloud_mask", "pyart.correct.calc_noise_floor", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.cloud_threshold", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.range_correction", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_above_toa", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_last_gates", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplay.plot_maxcappi", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.graph.plot_maxcappi", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vp", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.create_cfad", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_rhi_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.compute_directional_stats", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART", "Investigating ARM Scanning Cloud Radar Data from EPCAPE", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Calculating and Plotting a Cloud Mask", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single PPI sweep to a Cartesian grid using 2D weighting", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Plot Max-CAPPI", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Creating a CFAD diagram", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Hydrometeor Classification with Custom Frequency Settings", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"stream": [0, 62, 375, 500], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 207, 208, 209, 210, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 306, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 395, 403, 406, 407, 413, 416, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 481, 483, 486, 494, 495, 512, 581, 582, 593, 602, 604, 612, 614, 616, 617, 618, 620, 621, 645, 654, 665, 666, 685, 688], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 221, 223, 224, 225, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 324, 325, 327, 328, 335, 356, 357, 358, 360, 361, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 396, 401, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 612, 613, 614, 616, 620, 621, 623, 626, 627, 628, 630, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677, 679, 680, 681, 683, 684, 685, 688, 690], "print": [0, 62, 160, 172, 173, 242, 259, 384, 460, 500, 610, 612, 613, 617, 618, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 665, 666, 668, 680, 684, 685], "out": [0, 62, 169, 173, 207, 210, 386, 387, 388, 389, 390, 432, 455, 500, 612, 613, 614, 616, 617, 618, 620, 621, 627, 638, 639, 643, 644, 655, 664, 667, 677, 683, 687, 688, 689], "version": [0, 12, 31, 211, 418, 459, 471, 573, 610, 611, 619, 620, 621, 623, 677, 685, 687, 688, 690], "statu": [0, 611, 621, 688], "inform": [0, 24, 31, 45, 62, 74, 143, 155, 160, 166, 172, 173, 192, 204, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 375, 376, 384, 387, 459, 460, 466, 471, 483, 500, 512, 610, 614, 618, 619, 620, 621, 624, 633, 655, 668, 677, 688], "debug": [0, 160, 166, 172, 173, 242, 259, 384, 460, 620], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 122, 124, 125, 133, 138, 143, 144, 145, 158, 160, 161, 162, 165, 166, 167, 168, 170, 171, 172, 173, 182, 187, 192, 193, 194, 207, 208, 209, 210, 225, 251, 286, 302, 315, 327, 335, 348, 360, 368, 369, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 403, 405, 413, 416, 418, 424, 425, 426, 427, 431, 432, 434, 437, 438, 440, 441, 442, 443, 444, 445, 454, 455, 459, 460, 461, 462, 466, 468, 471, 473, 483, 485, 486, 489, 490, 492, 494, 495, 496, 512, 565, 578, 579, 588, 589, 593, 596, 607, 608, 609, 610, 612, 613, 614, 615, 616, 618, 619, 621, 622, 623, 624, 626, 627, 628, 632, 633, 636, 637, 638, 642, 643, 644, 645, 646, 649, 655, 662, 663, 665, 666, 668, 673, 677, 679, 680, 681, 683, 684, 685, 687, 688, 690], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 160, 161, 162, 166, 167, 168, 171, 172, 173, 207, 208, 209, 210, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 430, 444, 454, 459, 460, 461, 462, 463, 466, 467, 470, 480, 483, 500, 512, 558, 602, 610, 611, 613, 614, 616, 618, 620, 623, 626, 627, 629, 630, 632, 633, 634, 637, 638, 640, 641, 642, 644, 646, 648, 651, 657, 658, 659, 660, 664, 665, 666, 667, 669, 670, 671, 674, 675, 676, 677, 678, 684, 685, 686, 687, 690], "can": [0, 12, 16, 29, 45, 54, 57, 74, 122, 124, 125, 128, 143, 155, 161, 162, 166, 169, 171, 177, 192, 204, 207, 208, 209, 210, 225, 286, 315, 348, 371, 378, 379, 381, 384, 388, 389, 390, 426, 427, 434, 437, 438, 440, 441, 442, 445, 454, 459, 460, 461, 462, 464, 469, 483, 492, 495, 512, 598, 610, 611, 612, 613, 614, 616, 617, 618, 620, 621, 623, 627, 632, 633, 636, 642, 662, 663, 665, 666, 668, 673, 679, 680, 681, 683, 684, 685, 687, 688, 690], "run": [0, 238, 444, 454, 470, 588, 611, 613, 617, 620, 621, 622, 623, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677, 687, 688, 690], "script": [0, 29, 618, 620, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 121, 123, 126, 128, 133, 135, 143, 144, 150, 155, 160, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 176, 177, 182, 184, 192, 193, 199, 204, 207, 208, 209, 210, 212, 226, 227, 228, 233, 236, 237, 238, 239, 242, 250, 251, 253, 255, 257, 259, 265, 266, 268, 270, 272, 273, 287, 288, 289, 294, 297, 298, 299, 302, 316, 317, 318, 324, 326, 327, 330, 331, 332, 335, 349, 350, 351, 357, 359, 360, 363, 364, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 401, 403, 406, 413, 415, 418, 420, 421, 422, 426, 427, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 471, 474, 479, 483, 485, 488, 492, 493, 494, 495, 512, 565, 578, 579, 581, 582, 588, 589, 590, 591, 592, 593, 594, 595, 596, 602, 611, 613, 614, 616, 620, 621, 623, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 648, 651, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 679, 683, 684, 685, 686, 688, 690], "directori": [0, 29, 369, 481, 608, 610, 611, 617, 618, 619, 620, 621, 632, 687, 688], "report": [0, 1, 302, 335, 383, 469, 616, 620, 677], "dependeci": 0, "befor": [0, 31, 56, 166, 170, 173, 416, 434, 437, 438, 440, 442, 444, 454, 468, 471, 494, 612, 613, 614, 621, 636, 665, 677, 681, 685, 688], "build": [0, 122, 124, 125, 128, 133, 135, 143, 150, 155, 177, 182, 184, 192, 199, 204, 390, 612, 616, 620, 621, 623, 677, 688, 689], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 122, 123, 124, 125, 126, 128, 138, 143, 155, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 187, 192, 204, 207, 208, 209, 210, 212, 214, 216, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 306, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 339, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 362, 363, 364, 365, 367, 368, 369, 370, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 416, 423, 424, 425, 426, 427, 429, 430, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 483, 485, 492, 494, 495, 512, 565, 573, 578, 579, 580, 581, 582, 588, 589, 596, 598, 602, 604, 605, 606, 607, 611, 615, 616, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 635, 640, 641, 642, 643, 644, 646, 649, 650, 652, 653, 654, 655, 656, 660, 662, 663, 665, 666, 668, 672, 676, 677, 679, 680, 681, 683, 684, 685, 686, 687, 688, 690], "python": [0, 29, 388, 610, 612, 613, 614, 616, 617, 618, 619, 620, 623, 626, 627, 628, 630, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 679, 680, 681, 683, 684, 685, 687, 690], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 122, 124, 125, 128, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 207, 208, 209, 210, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 302, 316, 318, 326, 327, 331, 332, 335, 349, 351, 359, 360, 364, 365, 376, 377, 378, 379, 383, 385, 388, 415, 430, 431, 443, 444, 454, 457, 458, 459, 460, 461, 462, 463, 466, 467, 471, 483, 512, 563, 573, 579, 591, 592, 602, 608, 613, 614, 616, 619, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 676, 678, 679, 680, 681, 683, 686, 689, 690], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 182, 184, 192, 199, 204, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 480, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 500, 512, 515, 557, 558, 559, 560, 561, 562, 563, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 606, 607, 610, 612, 613, 618, 620, 621, 658, 665, 666, 668, 680, 681, 683, 685, 687, 688], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 122, 123, 125, 126, 167, 168, 369, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 397, 398, 408, 409, 432, 500, 568, 569, 570, 571, 572, 574, 575, 576, 577, 589, 594, 612, 613, 614, 617, 618, 619, 620, 621, 632, 633, 636, 662, 677, 679, 681, 683, 688], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 128, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 207, 208, 209, 210, 212, 227, 242, 250, 253, 259, 266, 273, 288, 302, 317, 327, 335, 350, 369, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 397, 398, 401, 404, 408, 409, 414, 416, 423, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 464, 465, 467, 468, 469, 470, 471, 472, 479, 480, 484, 485, 486, 488, 489, 490, 492, 500, 509, 537, 555, 559, 560, 561, 562, 565, 579, 588, 589, 591, 592, 593, 596, 597, 601, 604, 606, 607, 610, 611, 613, 614, 616, 617, 620, 621, 627, 632, 636, 644, 645, 646, 650, 651, 652, 653, 654, 655, 656, 657, 658, 663, 665, 666, 667, 668, 677, 678, 679, 683, 684, 688], "sy": [0, 369, 644], "stdout": [0, 62, 500], "descript": [1, 16, 18, 30, 127, 175, 176, 211, 370, 391, 415, 428, 470, 573, 602, 614, 621, 623, 662, 677, 688], "addit": [1, 2, 7, 8, 12, 14, 19, 166, 167, 168, 170, 225, 226, 233, 237, 238, 239, 251, 253, 254, 255, 256, 257, 268, 269, 270, 271, 272, 286, 287, 294, 298, 299, 315, 316, 323, 324, 325, 326, 327, 328, 331, 332, 348, 349, 356, 357, 358, 359, 360, 361, 364, 365, 368, 369, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 416, 423, 424, 425, 427, 444, 454, 593, 610, 612, 613, 617, 620, 623, 630, 632, 661, 665, 666, 677], "class": [1, 18, 19, 30, 31, 41, 45, 74, 127, 128, 176, 177, 211, 212, 242, 253, 259, 273, 302, 327, 335, 391, 392, 405, 415, 416, 417, 419, 426, 459, 470, 471, 481, 483, 512, 608, 612, 613, 614, 620, 621, 677, 683, 684, 688], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 127, 158, 162, 170, 171, 176, 207, 208, 209, 210, 211, 225, 226, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 286, 287, 294, 298, 299, 302, 315, 316, 326, 331, 332, 335, 348, 349, 359, 364, 365, 368, 369, 370, 372, 375, 378, 379, 385, 388, 415, 416, 420, 421, 422, 424, 425, 426, 427, 428, 432, 438, 443, 444, 445, 454, 459, 460, 462, 468, 470, 494, 573, 579, 592, 593, 596, 601, 602, 607, 608, 613, 614, 617, 618, 620, 621, 627, 642, 662, 663, 665, 666, 668, 673, 677, 681, 683, 685, 687, 688], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 128, 144, 145, 177, 193, 194, 226, 237, 287, 298, 316, 331, 349, 364, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 610, 616, 620, 626, 627, 628, 630, 631, 634, 636, 637, 638, 639, 642, 643, 644, 645, 646, 649, 651, 654, 655, 657, 658, 659, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677, 679, 680, 681, 683, 684, 685, 686], "write": [1, 15, 370, 386, 387, 388, 389, 390, 470, 481, 619, 620, 630, 631, 680], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 133, 143, 155, 158, 159, 163, 164, 165, 166, 167, 168, 174, 182, 192, 204, 212, 226, 228, 233, 236, 237, 238, 239, 242, 251, 253, 255, 257, 259, 268, 270, 272, 273, 287, 289, 294, 297, 298, 299, 302, 316, 318, 326, 327, 330, 331, 332, 335, 349, 351, 359, 360, 363, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 415, 416, 423, 424, 425, 427, 429, 432, 434, 437, 438, 440, 441, 442, 443, 445, 446, 449, 454, 455, 459, 460, 461, 462, 464, 465, 466, 469, 471, 472, 483, 484, 485, 488, 489, 490, 492, 493, 494, 495, 496, 505, 506, 508, 512, 533, 534, 536, 558, 563, 565, 580, 588, 593, 604, 607, 620, 621, 626, 627, 628, 630, 631, 634, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 648, 649, 651, 652, 653, 654, 655, 657, 659, 661, 662, 663, 665, 666, 668, 669, 672, 673, 675, 676, 677, 678, 679, 680, 681, 685, 686, 688], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 138, 160, 161, 162, 163, 166, 167, 169, 170, 172, 173, 187, 225, 229, 233, 234, 236, 237, 238, 239, 251, 286, 290, 294, 295, 297, 298, 299, 315, 319, 326, 327, 328, 330, 331, 332, 348, 352, 359, 360, 361, 363, 364, 365, 370, 375, 382, 388, 389, 423, 426, 427, 434, 436, 437, 438, 440, 445, 458, 460, 462, 471, 483, 489, 490, 492, 493, 494, 495, 496, 512, 559, 560, 561, 562, 563, 579, 580, 588, 589, 607, 610, 613, 614, 616, 621, 623, 624, 642, 645, 662, 677, 685, 688], "format": [1, 12, 13, 39, 40, 45, 74, 214, 216, 226, 228, 233, 236, 237, 238, 239, 275, 277, 287, 289, 294, 297, 298, 299, 304, 306, 316, 318, 326, 327, 330, 331, 332, 337, 339, 349, 351, 359, 360, 363, 364, 365, 370, 372, 381, 383, 385, 386, 387, 389, 479, 480, 483, 512, 610, 612, 613, 614, 617, 618, 620, 621, 623, 655, 677, 679, 688], "These": [1, 29, 128, 166, 177, 265, 388, 427, 612, 618, 621, 632, 642, 665, 677, 684, 687, 688], "auxiliari": 1, "input": [1, 172, 173, 388, 424, 425, 454, 458, 459, 462, 588, 593, 610, 612, 620, 665, 666, 684], "output": [1, 13, 62, 165, 388, 424, 432, 443, 459, 500, 590, 611, 613, 616, 618, 620, 677], "routin": [1, 12, 176, 386, 426, 620, 677], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 123, 126, 143, 155, 160, 161, 162, 166, 167, 168, 170, 171, 173, 176, 192, 204, 207, 208, 209, 210, 211, 226, 232, 233, 237, 238, 239, 251, 253, 255, 257, 265, 268, 270, 272, 287, 293, 294, 298, 299, 316, 322, 323, 324, 325, 326, 327, 328, 331, 332, 349, 355, 356, 357, 358, 359, 360, 361, 364, 365, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 394, 422, 423, 426, 427, 429, 431, 432, 441, 443, 444, 445, 447, 448, 449, 451, 452, 454, 459, 460, 462, 466, 471, 483, 494, 496, 512, 560, 561, 562, 581, 582, 589, 590, 594, 595, 603, 607, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 623, 627, 628, 630, 632, 633, 636, 637, 642, 645, 646, 654, 657, 662, 663, 665, 666, 668, 677, 679, 680, 681, 683, 684, 685, 687, 688, 690], "well": [1, 169, 171, 207, 208, 209, 210, 360, 380, 382, 427, 610, 612, 617, 618, 620, 621, 633, 643, 666, 677, 683, 684, 688], "polish": 1, "those": [1, 48, 55, 144, 145, 167, 168, 193, 194, 384, 426, 427, 486, 493, 608, 614, 616, 662, 690], "io": [1, 128, 177, 423, 610, 611, 612, 613, 614, 616, 617, 618, 620, 621, 626, 628, 632, 633, 634, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677, 680, 681, 683, 684, 685, 686, 687, 688, 690], "thei": [1, 4, 58, 133, 135, 143, 166, 167, 168, 170, 182, 184, 192, 360, 376, 384, 390, 441, 443, 460, 496, 614, 616, 617, 621, 665, 688], "mai": [1, 29, 133, 135, 143, 150, 155, 166, 167, 182, 184, 192, 199, 204, 302, 335, 380, 382, 388, 392, 427, 443, 462, 573, 614, 616, 617, 623, 665, 677], "requir": [1, 31, 45, 74, 122, 124, 125, 166, 169, 170, 384, 388, 424, 425, 427, 468, 471, 483, 512, 589, 610, 611, 617, 620, 621, 633, 677, 688, 690], "depend": [1, 161, 162, 424, 427, 448, 610, 614, 620, 621, 623, 688], "beyond": [1, 687], "standard": [1, 40, 45, 62, 74, 119, 120, 166, 375, 386, 387, 388, 432, 461, 480, 483, 500, 512, 563, 576, 577, 595, 610, 614, 620, 621, 679, 680, 681, 688], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 122, 124, 125, 128, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 207, 208, 209, 210, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 302, 316, 318, 326, 327, 331, 332, 335, 349, 351, 359, 360, 364, 365, 376, 377, 378, 379, 383, 385, 388, 415, 430, 431, 443, 444, 454, 457, 458, 459, 460, 461, 462, 463, 466, 467, 471, 483, 512, 563, 573, 579, 591, 592, 602, 608, 614, 616, 624, 626, 628, 630, 631, 632, 633, 641, 642, 644, 645, 663, 666, 672, 676, 678, 679, 680, 681, 683, 686, 689, 690], "instal": [1, 10, 122, 124, 125, 169, 170, 388, 613, 616, 620, 623, 689, 690], "non": [1, 122, 124, 125, 168, 384, 386, 443, 444, 454, 460, 462, 614, 620, 665], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 133, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 182, 207, 208, 209, 210, 211, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 297, 298, 299, 316, 318, 326, 327, 330, 331, 332, 349, 351, 359, 360, 363, 364, 365, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 459, 460, 461, 462, 463, 466, 467, 471, 472, 483, 484, 485, 487, 492, 500, 512, 515, 558, 573, 593, 602, 606, 610, 613, 614, 616, 618, 619, 620, 632, 666, 680, 685], "support": [1, 253, 327, 360, 372, 379, 380, 381, 382, 383, 391, 392, 416, 460, 612, 614, 616, 620, 621, 654, 677, 679, 680, 681, 683, 684, 685, 687, 688], "fulli": [1, 378, 616, 687], "test": [1, 12, 166, 375, 380, 382, 392, 611, 614, 620, 622, 623, 626, 628, 636, 638, 639, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 673, 674, 675, 677, 679], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 128, 132, 140, 143, 147, 152, 155, 166, 167, 168, 170, 171, 172, 173, 177, 181, 189, 192, 196, 201, 204, 209, 226, 232, 233, 236, 237, 238, 239, 253, 287, 293, 294, 297, 298, 299, 316, 322, 326, 327, 330, 331, 332, 349, 355, 359, 360, 363, 364, 365, 368, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 393, 405, 406, 423, 424, 425, 426, 427, 431, 434, 437, 438, 440, 442, 443, 444, 454, 455, 458, 460, 462, 471, 473, 483, 486, 494, 495, 512, 589, 608, 610, 611, 612, 613, 614, 615, 617, 620, 621, 623, 630, 642, 662, 663, 664, 665, 669, 677, 685, 686, 688, 690], "pleas": [1, 56, 302, 335, 494, 610, 611, 614, 616, 618, 621, 677, 679, 680, 681, 683, 684, 685, 688], "your": [1, 226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 612, 613, 614, 619, 621, 623, 630, 641, 643, 660, 665, 666, 677, 686, 687, 688, 690], "own": [1, 12, 613, 617, 618, 623, 642, 677, 687], "risk": [1, 612], "bug": [1, 613, 621, 624, 677, 687, 688], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 128, 133, 144, 145, 165, 166, 167, 168, 173, 177, 182, 193, 194, 212, 252, 267, 327, 360, 368, 370, 371, 384, 387, 389, 390, 424, 425, 426, 427, 444, 454, 460, 461, 462, 464, 466, 468, 469, 471, 483, 485, 492, 512, 588, 589, 614, 617, 619, 620, 621, 623, 627, 642, 665, 668, 677, 687, 688, 690], "fix": [1, 441, 610, 613, 621, 622, 624, 630, 631, 634, 657, 679, 686, 687, 688, 690], "them": [1, 4, 5, 6, 56, 166, 167, 168, 169, 242, 259, 327, 360, 375, 384, 427, 494, 613, 618, 621, 623, 642, 677, 688, 690], "prioriti": [1, 690], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 214, 246, 260, 275, 304, 327, 337, 360, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 480, 610, 611, 612, 614, 617, 620, 621, 627, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 688], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 164, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 434, 437, 438, 440, 441, 442, 472, 484, 485, 487, 492, 508, 515, 536, 604, 636, 683], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 124, 128, 130, 131, 133, 135, 142, 143, 144, 145, 146, 148, 150, 155, 156, 160, 166, 167, 168, 172, 173, 177, 179, 180, 182, 184, 191, 192, 193, 194, 195, 197, 199, 204, 205, 214, 226, 228, 233, 236, 237, 238, 239, 242, 251, 253, 255, 257, 258, 259, 265, 268, 270, 272, 275, 287, 289, 294, 297, 298, 299, 304, 316, 318, 326, 327, 330, 331, 332, 337, 349, 351, 359, 360, 363, 364, 365, 368, 369, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 396, 426, 427, 431, 443, 444, 448, 451, 454, 459, 460, 461, 462, 472, 473, 480, 481, 484, 485, 486, 489, 490, 492, 494, 495, 496, 571, 572, 583, 584, 585, 586, 587, 588, 596, 607, 610, 612, 613, 614, 616, 617, 620, 621, 627, 644, 645, 652, 654, 655, 657, 665, 666, 668, 679, 680, 684, 685, 688], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 486, 620], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 166, 167, 168, 225, 226, 227, 233, 237, 238, 239, 251, 253, 254, 255, 256, 257, 258, 265, 268, 269, 270, 271, 272, 286, 287, 288, 294, 298, 299, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 348, 349, 350, 356, 357, 358, 359, 360, 361, 364, 365, 369, 372, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 423, 424, 425, 426, 427, 460, 583, 584, 585, 586, 587, 613, 614, 618, 620], "d3r": [2, 620], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 373, 374, 375, 377, 381, 386, 387, 455, 480, 583, 586, 610, 618, 620, 677, 678], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 34, 40, 45, 46, 47, 49, 54, 74, 77, 122, 124, 125, 133, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 182, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 418, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463, 466, 467, 471, 472, 474, 480, 483, 484, 485, 487, 492, 512, 515, 558, 580, 593, 602, 604, 606, 612, 614, 616, 618, 620], "odim_h5": [2, 8, 620], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 122, 124, 125, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 212, 273, 302, 327, 335, 369, 371, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 389, 390, 392, 426, 427, 431, 433, 435, 436, 439, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 460, 461, 462, 463, 465, 466, 467, 471, 472, 474, 479, 483, 484, 512, 602, 610, 614, 679], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 123, 124, 126, 128, 133, 135, 143, 150, 155, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 177, 182, 184, 192, 199, 204, 226, 233, 237, 238, 239, 241, 251, 253, 255, 257, 265, 268, 270, 272, 287, 294, 298, 299, 301, 316, 324, 325, 326, 327, 328, 331, 332, 334, 349, 357, 358, 359, 360, 364, 365, 367, 368, 369, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 427, 430, 431, 433, 435, 436, 439, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 466, 467, 469, 471, 472, 473, 480, 483, 484, 485, 486, 489, 490, 492, 494, 495, 500, 512, 581, 582, 589, 596, 602, 606, 607, 613, 614, 620, 665, 685], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 122, 124, 125, 160, 161, 162, 166, 167, 168, 169, 170, 172, 173, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 396, 423, 426, 427, 430, 431, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 459, 463, 465, 466, 467, 471, 472, 483, 484, 485, 487, 512, 515, 557, 602, 633, 666, 680, 685], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 123, 126, 231, 253, 265, 292, 302, 321, 323, 324, 325, 327, 328, 335, 354, 356, 357, 358, 360, 361, 369, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 403, 413, 432, 463, 471, 483, 512, 610, 612, 613, 614, 616, 620, 621, 636, 640, 641, 643, 644, 645, 660, 663, 665, 666, 674, 677, 678, 686, 688], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 182, 183, 184, 185, 186, 187, 188, 190, 191, 195, 197, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 225, 226, 227, 228, 233, 236, 237, 238, 239, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 286, 287, 288, 289, 294, 297, 298, 299, 302, 303, 304, 305, 306, 307, 312, 315, 316, 317, 318, 326, 327, 330, 331, 332, 335, 336, 337, 338, 339, 340, 345, 348, 349, 350, 351, 359, 360, 363, 364, 365, 369, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 418, 423, 424, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 479, 483, 484, 485, 486, 487, 492, 495, 508, 512, 515, 536, 559, 560, 561, 562, 563, 565, 568, 569, 570, 571, 572, 578, 579, 580, 592, 593, 602, 604, 605, 606, 610, 612, 613, 614, 616, 617, 618, 620, 621, 626, 627, 630, 632, 636, 637, 638, 639, 642, 643, 644, 646, 657, 661, 662, 663, 664, 665, 666, 667, 673, 675, 677, 678, 679, 681, 683, 684, 685, 688], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 121, 127, 128, 143, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 192, 204, 207, 208, 209, 210, 211, 212, 225, 226, 231, 233, 237, 238, 239, 255, 257, 268, 270, 272, 273, 286, 287, 292, 294, 298, 299, 302, 315, 316, 321, 324, 326, 327, 331, 332, 335, 348, 349, 354, 357, 359, 360, 364, 365, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 415, 416, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 479, 512, 555, 560, 561, 562, 565, 568, 569, 570, 571, 572, 579, 580, 581, 582, 585, 587, 588, 590, 591, 592, 593, 596, 597, 602, 603, 604, 605, 606, 607, 610, 611, 614, 616, 620, 625, 626, 627, 628, 630, 631, 632, 633, 635, 637, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 664, 665, 666, 667, 668, 669, 670, 673, 674, 675, 678, 679, 681, 683, 684, 686, 689], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 122, 124, 125, 143, 155, 163, 164, 166, 169, 170, 171, 192, 204, 208, 209, 214, 216, 226, 227, 232, 233, 237, 238, 239, 250, 251, 252, 253, 254, 255, 256, 257, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 287, 288, 293, 294, 298, 299, 304, 306, 316, 317, 322, 325, 326, 327, 331, 332, 337, 339, 349, 350, 355, 358, 359, 360, 364, 365, 368, 369, 372, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 399, 403, 410, 413, 427, 431, 434, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 459, 460, 461, 462, 463, 466, 471, 472, 483, 485, 486, 487, 494, 512, 515, 578, 581, 582, 589, 604, 611, 613, 614, 615, 616, 618, 621, 623, 665, 677, 679, 680, 681, 683, 684, 685, 687, 688, 690], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 167, 168, 212, 273, 302, 335, 372, 376, 378, 379, 380, 381, 383, 384, 385, 389, 390, 434, 437, 438, 440, 442, 443, 448, 459, 460, 483, 512, 555, 580, 588, 611, 614, 618, 620, 621, 666, 668, 677, 685, 688], "found": [2, 7, 8, 12, 14, 29, 162, 169, 372, 376, 378, 379, 380, 381, 383, 384, 385, 399, 410, 423, 426, 427, 432, 455, 610, 612, 614, 616, 618, 620, 621, 623, 633, 644, 677, 687, 688, 690], "doe": [2, 7, 8, 12, 14, 49, 77, 122, 124, 125, 166, 167, 168, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 297, 298, 299, 316, 318, 326, 327, 330, 331, 332, 349, 351, 359, 360, 363, 364, 365, 369, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 403, 413, 487, 515, 607, 612, 614, 620, 621, 623, 655, 668, 679, 687, 688, 690], "appear": [2, 7, 8, 12, 14, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 596, 614, 617, 618], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 165, 166, 214, 246, 259, 260, 275, 304, 335, 337, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 389, 396, 403, 413, 415, 445, 448, 451, 452, 459, 483, 512, 565, 589, 606, 611, 613, 614, 616, 617, 618, 621, 623, 632, 642, 665, 677, 683, 685, 687, 688, 690], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 122, 123, 124, 125, 126, 128, 130, 131, 133, 134, 135, 137, 141, 143, 146, 148, 149, 150, 153, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 180, 182, 183, 184, 186, 190, 192, 195, 197, 198, 199, 202, 204, 206, 207, 208, 209, 210, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 250, 251, 253, 255, 257, 265, 266, 268, 270, 272, 287, 288, 289, 291, 294, 295, 296, 297, 298, 299, 316, 317, 318, 320, 323, 324, 325, 326, 327, 329, 330, 331, 332, 349, 350, 351, 353, 356, 357, 358, 359, 360, 362, 363, 364, 365, 368, 369, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 399, 400, 405, 410, 411, 426, 427, 429, 431, 432, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445, 448, 451, 452, 454, 457, 459, 460, 461, 462, 466, 468, 471, 483, 486, 512, 560, 561, 562, 563, 578, 580, 588, 589, 593, 594, 595, 610, 612, 613, 614, 617, 618, 620, 621, 633, 636, 642, 646, 662, 663, 664, 665, 666, 673, 680, 681, 684, 688], "place": [2, 7, 8, 12, 14, 227, 231, 232, 250, 252, 266, 267, 288, 292, 293, 317, 321, 322, 350, 354, 355, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390, 607, 617, 618, 620, 683, 687], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 123, 126, 128, 158, 159, 160, 161, 162, 163, 166, 167, 168, 171, 172, 173, 177, 207, 208, 209, 210, 212, 242, 251, 259, 273, 302, 325, 335, 358, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 391, 392, 405, 423, 424, 425, 426, 427, 431, 432, 434, 435, 437, 443, 444, 445, 447, 448, 454, 459, 460, 461, 462, 464, 466, 467, 468, 469, 471, 483, 485, 512, 563, 579, 593, 610, 614, 617, 618, 620, 621, 646, 662, 665, 666, 671, 677, 688], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 160, 161, 162, 164, 166, 167, 168, 169, 171, 172, 173, 177, 182, 184, 192, 199, 204, 207, 208, 209, 210, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 233, 236, 237, 238, 239, 241, 250, 251, 253, 255, 257, 265, 266, 268, 270, 272, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 294, 297, 298, 299, 301, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 326, 327, 330, 331, 332, 334, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 359, 360, 363, 364, 365, 367, 369, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 395, 407, 427, 429, 430, 432, 441, 443, 444, 445, 448, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 471, 483, 489, 490, 492, 494, 495, 500, 512, 560, 561, 562, 580, 588, 589, 602, 611, 612, 620, 621, 654, 655, 662, 665, 666, 668, 677, 687, 688, 690], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 122, 124, 125, 160, 161, 162, 166, 169, 171, 172, 173, 207, 208, 209, 210, 231, 232, 236, 292, 293, 297, 321, 322, 330, 354, 355, 363, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 390, 426, 427, 431, 438, 441, 459, 460, 466, 471, 483, 512, 578, 579, 610, 613, 614, 617, 618, 619, 620, 643, 644, 645, 662, 663, 665], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 160, 161, 162, 166, 167, 168, 171, 172, 173, 207, 208, 209, 210, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 430, 444, 454, 459, 460, 461, 462, 463, 466, 467, 602, 610, 611, 614, 616, 620, 632, 636, 664, 673], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 471, 489, 490, 492, 493, 494, 495, 496, 579, 617, 620, 621, 662, 664, 665, 666, 667, 668, 669, 670, 673, 681, 686, 688], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 160, 161, 162, 166, 167, 168, 172, 173, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 389, 430, 432, 443, 460, 461, 462, 463, 467, 471, 472, 483, 484, 485, 512, 557, 559, 565, 602, 618, 619, 620, 633, 652, 653, 657, 685], "dure": [2, 7, 8, 12, 14, 19, 143, 155, 165, 166, 167, 168, 192, 204, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 444, 453, 460, 466, 610, 666, 687, 690], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 122, 123, 124, 125, 126, 130, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 179, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 204, 205, 208, 209, 214, 216, 226, 227, 228, 231, 232, 233, 236, 237, 238, 239, 250, 251, 252, 253, 254, 255, 256, 257, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 287, 288, 289, 292, 293, 294, 297, 298, 299, 302, 304, 306, 316, 317, 318, 321, 322, 326, 327, 330, 331, 332, 335, 337, 339, 349, 350, 351, 354, 355, 359, 360, 363, 364, 365, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 399, 400, 403, 405, 410, 411, 413, 416, 423, 424, 425, 426, 427, 429, 431, 432, 434, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 451, 452, 454, 455, 459, 460, 461, 462, 466, 468, 471, 472, 473, 483, 485, 486, 493, 494, 495, 496, 500, 512, 565, 578, 581, 582, 588, 589, 590, 593, 596, 598, 603, 604, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 626, 632, 633, 636, 637, 642, 643, 644, 645, 646, 649, 654, 655, 662, 663, 665, 666, 668, 679, 680, 681, 683, 684, 685, 687, 688, 690], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 133, 135, 143, 144, 145, 150, 155, 160, 161, 162, 166, 167, 168, 169, 171, 172, 173, 182, 184, 192, 193, 194, 199, 204, 208, 209, 302, 335, 369, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 424, 425, 427, 432, 445, 459, 484, 485, 559, 607, 611, 615, 617, 618, 624, 627, 662, 679], "success": [2, 7, 8, 12, 14, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 623], "unless": [2, 7, 8, 12, 14, 58, 122, 124, 125, 168, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 389, 496, 614], "explicitli": [2, 7, 8, 12, 14, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 424, 425], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 128, 133, 135, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 166, 167, 168, 169, 170, 171, 176, 177, 182, 184, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 226, 233, 237, 238, 239, 251, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 369, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 424, 425, 426, 427, 458, 468, 483, 488, 494, 495, 512, 579, 598, 611, 613, 614, 616, 617, 618, 619, 620, 621, 623, 632, 636, 657, 662, 677, 684, 687, 688], "introduct": [2, 7, 8, 12, 14, 372, 376, 378, 379, 380, 381, 382, 383, 384, 621, 688], "specif": [2, 7, 8, 12, 14, 143, 155, 160, 161, 162, 192, 204, 335, 360, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 427, 447, 448, 449, 451, 452, 455, 459, 460, 461, 462, 593, 612, 614, 618, 620, 621, 626, 642, 665, 666, 668, 677, 688, 690], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 122, 124, 125, 133, 135, 150, 166, 167, 168, 176, 182, 184, 199, 226, 228, 233, 237, 238, 239, 251, 253, 254, 255, 256, 257, 265, 268, 269, 270, 271, 272, 287, 289, 294, 298, 299, 316, 318, 323, 324, 325, 326, 327, 328, 331, 332, 349, 351, 356, 357, 358, 359, 360, 361, 364, 365, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 399, 410, 416, 426, 427, 460, 461, 462, 471, 483, 486, 494, 495, 512, 602, 606, 612, 613, 614, 617, 620, 628, 632, 683, 684, 687], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 124, 128, 133, 135, 143, 150, 155, 160, 166, 167, 168, 172, 173, 177, 182, 184, 192, 199, 204, 214, 216, 226, 228, 233, 236, 237, 238, 239, 242, 251, 253, 255, 257, 259, 265, 268, 270, 272, 275, 277, 287, 289, 294, 297, 298, 299, 304, 306, 316, 318, 326, 327, 330, 331, 332, 337, 339, 349, 351, 359, 360, 363, 364, 365, 368, 369, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 423, 424, 427, 431, 443, 444, 448, 451, 452, 454, 459, 460, 461, 462, 466, 472, 473, 480, 484, 485, 486, 489, 490, 492, 494, 495, 496, 588, 596, 607, 614], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 124, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 166, 167, 168, 172, 173, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 214, 216, 226, 228, 233, 236, 237, 238, 239, 242, 251, 253, 255, 257, 258, 259, 265, 268, 270, 272, 275, 277, 287, 289, 294, 297, 298, 299, 304, 306, 316, 318, 326, 327, 330, 331, 332, 337, 339, 349, 351, 359, 360, 363, 364, 365, 368, 369, 371, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 396, 423, 424, 426, 427, 431, 443, 444, 448, 451, 452, 454, 459, 460, 461, 462, 466, 471, 472, 473, 480, 481, 483, 484, 485, 486, 489, 490, 492, 494, 495, 496, 512, 571, 572, 588, 596, 607, 610, 611, 612, 613, 614, 616, 617, 620, 621, 637, 644, 645, 652, 653, 654, 655, 662, 665, 666, 668, 669, 673, 680, 681, 685, 688], "mdv": [2, 8, 12, 14, 378, 379, 389, 611, 620, 628, 630, 638, 641, 660, 677, 681, 683, 686], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 122, 124, 125, 143, 155, 166, 168, 192, 204, 370, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 403, 413, 612, 613, 614, 616, 618, 620, 621, 632, 633, 636, 637, 655, 688], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 166, 167, 168, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 297, 298, 299, 316, 318, 326, 327, 330, 331, 332, 349, 351, 359, 360, 363, 364, 365, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 424, 425, 431, 459, 610, 611, 612, 613, 614, 616, 617, 618, 620, 636], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 123, 126, 160, 161, 162, 164, 166, 167, 168, 169, 207, 210, 231, 251, 292, 321, 354, 360, 369, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 416, 417, 418, 419, 423, 426, 427, 429, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 454, 457, 459, 460, 461, 462, 466, 468, 471, 483, 512, 558, 573, 574, 575, 578, 580, 588, 589, 594, 595, 598, 602, 604, 606, 610, 611, 612, 613, 617, 620, 623, 627, 630, 633, 637, 646, 657, 662, 665, 666, 668, 678, 681, 684, 687], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 144, 145, 160, 161, 162, 165, 166, 168, 172, 173, 193, 194, 226, 237, 253, 287, 298, 316, 327, 331, 349, 360, 364, 372, 376, 378, 379, 380, 381, 382, 383, 384, 424, 425, 427, 460, 468, 488, 494, 495, 581, 582, 596, 598, 604, 610, 611, 612, 614, 616, 620, 621, 624, 636, 637, 645, 655, 665, 666, 680, 681, 683, 688], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 133, 135, 143, 150, 155, 160, 161, 162, 166, 182, 184, 192, 199, 204, 226, 237, 259, 287, 298, 316, 327, 331, 349, 364, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 441, 444, 454, 457, 473, 483, 486, 494, 512, 563, 588, 610, 612, 613, 614, 615, 616, 618, 620, 621, 627, 632, 633, 662, 663, 665, 666, 668, 677, 683, 687, 688, 689, 690], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 122, 124, 125, 166, 167, 168, 327, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 390, 391, 392, 394, 396, 399, 400, 401, 403, 405, 410, 411, 413, 426, 427, 455, 459, 471, 472, 483, 484, 485, 512, 565, 612, 614, 617, 618, 662, 679, 680, 684], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 212, 228, 232, 235, 259, 273, 289, 293, 296, 302, 318, 322, 329, 335, 351, 355, 362, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 418, 424, 425, 427, 434, 437, 438, 440, 441, 442, 445, 455, 458, 486, 579, 581, 582, 591, 613, 614, 616, 618, 619, 620, 621, 623, 632, 677, 688, 689], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 155, 160, 161, 162, 171, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 201, 204, 207, 208, 209, 210, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390, 443, 460, 461, 462, 464, 468, 469, 486, 628, 638, 644, 684], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 164, 167, 168, 170, 171, 172, 173, 208, 209, 226, 227, 233, 236, 237, 238, 239, 250, 266, 287, 288, 294, 297, 298, 299, 316, 317, 326, 327, 330, 331, 332, 349, 350, 359, 360, 363, 364, 365, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 389, 416, 423, 427, 432, 444, 448, 454, 483, 486, 512, 589, 612, 613, 614, 616, 617, 620, 621, 627, 632, 642, 654, 665, 666, 668, 673, 681, 688], "after": [2, 4, 5, 6, 7, 8, 12, 14, 166, 167, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 392, 460, 610, 612, 614, 620, 621, 623, 633, 665, 687, 688, 690], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 160, 161, 162, 166, 167, 168, 171, 172, 173, 177, 182, 184, 192, 199, 204, 207, 208, 209, 210, 226, 228, 233, 236, 237, 238, 239, 240, 241, 251, 253, 287, 289, 294, 297, 298, 299, 300, 301, 316, 318, 326, 327, 330, 331, 332, 333, 334, 349, 351, 359, 360, 363, 364, 365, 366, 367, 369, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 397, 398, 401, 402, 408, 409, 412, 427, 438, 443, 447, 448, 449, 451, 452, 460, 461, 462, 471, 483, 494, 495, 496, 512, 560, 561, 562, 571, 572, 578, 588, 599, 600, 611, 612, 618, 620, 621, 630, 633, 636, 637, 643, 651, 654, 655, 658, 659, 661, 662, 665, 666, 670, 673, 677, 681, 686, 687, 688, 689], "you": [2, 226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 459, 610, 613, 614, 615, 616, 617, 619, 621, 623, 632, 665, 666, 677, 679, 680, 681, 683, 684, 685, 687, 688, 690], "want": [2, 611, 613, 614, 616, 617, 633, 662, 677, 684, 685, 690], "altitud": [2, 31, 45, 56, 74, 172, 173, 212, 369, 424, 427, 432, 445, 466, 471, 483, 494, 512, 590, 603, 610, 613, 620, 655, 662, 669, 679, 683, 685], "provid": [2, 6, 45, 48, 74, 166, 211, 232, 293, 322, 327, 355, 374, 375, 376, 381, 384, 388, 389, 390, 392, 397, 398, 404, 405, 408, 409, 414, 416, 459, 483, 486, 512, 593, 602, 608, 610, 613, 614, 616, 617, 618, 619, 621, 633, 663, 665, 677, 684, 687, 688], "np": [2, 416, 436, 469, 601, 610, 612, 613, 614, 616, 618, 620, 621, 627, 636, 638, 642, 644, 646, 651, 654, 655, 657, 662, 663, 665, 666, 667, 668, 669, 679, 680, 681, 683, 684, 685, 688], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 126, 128, 133, 135, 143, 144, 145, 150, 155, 159, 163, 166, 167, 168, 170, 174, 177, 182, 184, 192, 193, 194, 199, 204, 212, 226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 265, 266, 268, 270, 272, 273, 287, 288, 289, 294, 298, 299, 302, 316, 317, 318, 323, 324, 326, 327, 331, 332, 335, 349, 350, 351, 356, 357, 359, 360, 364, 365, 369, 416, 426, 427, 436, 444, 445, 446, 454, 459, 461, 462, 463, 468, 469, 471, 473, 479, 485, 489, 490, 492, 493, 494, 495, 496, 574, 575, 576, 577, 578, 586, 587, 589, 594, 595, 598, 599, 600, 601, 610, 614, 620, 621, 636, 651, 662, 665, 666, 669, 679, 680, 681, 683, 684, 685, 688], "295": [2, 620], "dtype": [2, 423, 427, 610, 613, 614, 620, 627, 679, 681, 685], "float64": [2, 426, 427, 610, 613, 663, 685], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 207, 208, 209, 210, 213, 214, 215, 216, 217, 246, 247, 248, 249, 260, 261, 262, 263, 274, 275, 276, 277, 278, 303, 304, 305, 306, 307, 336, 337, 338, 339, 340, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 394, 399, 400, 410, 411, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 473, 474, 481, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 505, 506, 507, 508, 509, 510, 511, 525, 526, 527, 528, 533, 534, 535, 536, 537, 538, 539, 555, 557, 558, 559, 560, 561, 562, 563, 565, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 602, 603, 604, 606, 610, 612, 613, 614, 617, 618, 620, 621, 644, 663, 665, 666, 668, 680, 683, 685, 688], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 159, 160, 161, 162, 166, 167, 168, 170, 171, 172, 173, 174, 207, 208, 209, 210, 226, 233, 236, 237, 238, 239, 241, 287, 294, 297, 298, 299, 301, 316, 326, 327, 330, 331, 332, 334, 349, 359, 360, 363, 364, 365, 367, 369, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 392, 405, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 437, 440, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 473, 483, 484, 488, 489, 490, 492, 493, 494, 495, 496, 512, 578, 579, 581, 582, 588, 592, 602, 604, 607, 610, 611, 614, 617, 620, 621, 633, 647, 648, 666, 677, 679, 680, 683, 685, 687, 688, 690], "edg": [3, 33, 57, 120, 124, 166, 167, 168, 169, 170, 226, 233, 237, 238, 239, 255, 257, 268, 270, 272, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 445, 458, 462, 473, 495, 563, 612, 613, 614, 654, 655, 665], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 390, 613, 620], "gamic": [4, 620], "hdf5": [4, 8, 620, 677], "unlik": [4, 5, 6, 375], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 166, 167, 168, 169, 170, 171, 209, 226, 228, 233, 236, 237, 238, 239, 253, 287, 289, 294, 297, 298, 299, 316, 318, 326, 327, 330, 331, 332, 349, 351, 359, 360, 363, 364, 365, 372, 375, 377, 380, 382, 384, 388, 416, 427, 444, 454, 464, 468, 471, 479, 483, 512, 560, 561, 562, 612, 613, 614, 618, 621, 662, 665, 666, 677, 679, 687, 688, 690], "still": [4, 5, 6, 166, 302, 335, 375, 390, 427, 596, 616, 618, 620, 621, 632, 688], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 128, 133, 135, 143, 150, 155, 166, 167, 168, 169, 171, 172, 173, 177, 182, 184, 192, 199, 204, 207, 208, 209, 210, 226, 227, 231, 232, 233, 236, 237, 238, 239, 242, 250, 253, 255, 257, 259, 265, 266, 268, 270, 272, 287, 288, 292, 293, 294, 297, 298, 299, 316, 317, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 369, 371, 372, 374, 375, 380, 381, 384, 385, 387, 388, 389, 390, 392, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 438, 441, 455, 459, 460, 461, 462, 466, 467, 468, 471, 473, 483, 488, 492, 505, 506, 508, 509, 512, 533, 534, 536, 537, 578, 579, 580, 581, 582, 589, 591, 592, 593, 594, 595, 602, 606, 610, 611, 612, 613, 614, 616, 617, 618, 620, 621, 623, 628, 632, 633, 636, 642, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 662, 663, 666, 673, 674, 675, 677, 681, 683, 685, 687, 688], "renam": [4, 5, 6, 29, 375, 385, 620], "uniform": [4, 5, 6, 58, 167, 168, 375, 383, 431, 443, 496, 620, 642, 646, 677, 679], "forc": [4, 5, 6, 375, 385, 431, 614, 620], "extract": [4, 226, 287, 316, 349, 384, 441, 443, 455, 579, 581, 582, 592, 616, 620, 630, 636, 659, 661, 662, 665, 666, 670, 677, 686], "valid": [4, 31, 45, 74, 157, 160, 166, 206, 227, 250, 266, 288, 317, 350, 380, 389, 390, 424, 425, 427, 434, 437, 438, 440, 459, 471, 483, 512, 579, 580, 581, 582, 589, 618, 620, 621, 637, 688], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 121, 162, 174, 212, 226, 228, 233, 234, 235, 237, 238, 239, 251, 253, 255, 257, 265, 268, 270, 272, 273, 287, 289, 294, 295, 296, 298, 299, 302, 316, 318, 326, 327, 328, 329, 331, 332, 335, 349, 351, 359, 360, 361, 362, 364, 365, 369, 383, 424, 425, 427, 434, 436, 438, 440, 441, 443, 460, 462, 483, 493, 495, 512, 579, 580, 588, 604, 610, 612, 613, 614, 620, 627, 637, 642, 644, 648, 651, 657, 669, 679, 685], "valid_min": [4, 166, 167, 168, 376, 620, 665, 666, 685], "valid_max": [4, 166, 167, 168, 376, 665, 666, 685], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 133, 135, 138, 143, 144, 145, 150, 155, 166, 167, 168, 172, 173, 182, 184, 187, 192, 193, 194, 199, 204, 226, 233, 237, 238, 239, 253, 259, 287, 294, 298, 299, 316, 326, 327, 331, 332, 335, 349, 359, 360, 364, 365, 380, 381, 383, 384, 386, 390, 392, 416, 427, 431, 434, 437, 438, 440, 442, 448, 451, 452, 460, 461, 462, 468, 470, 471, 483, 484, 485, 489, 490, 492, 494, 495, 512, 589, 611, 612, 613, 616, 617, 620, 621, 622, 623, 624, 642, 662, 665, 666, 668, 677, 680, 681, 684, 687, 688, 690], "present": [4, 29, 31, 45, 74, 226, 233, 237, 238, 239, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 389, 390, 403, 413, 427, 459, 471, 483, 512, 614, 679, 684], "unit": [4, 55, 122, 123, 124, 125, 126, 167, 168, 218, 221, 222, 223, 224, 231, 251, 279, 282, 283, 284, 285, 292, 308, 311, 312, 313, 314, 321, 341, 344, 345, 346, 347, 354, 376, 378, 429, 454, 457, 470, 493, 565, 589, 610, 614, 616, 620, 621, 622, 627, 652, 657, 665, 666, 668, 677, 680, 685, 688], "avail": [4, 16, 45, 56, 57, 58, 74, 143, 155, 160, 161, 162, 170, 192, 204, 211, 251, 253, 255, 257, 268, 270, 272, 369, 378, 388, 483, 494, 495, 496, 512, 598, 610, 612, 613, 614, 617, 620, 623, 630, 632, 642, 662, 677], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 123, 126, 448, 459, 468, 469, 610, 612, 613, 614, 615, 616, 617, 618, 620, 621, 633, 669, 679, 680, 681, 683, 684, 685, 688], "k": [5, 126, 158, 159, 163, 230, 231, 232, 234, 235, 236, 291, 292, 293, 295, 296, 297, 320, 321, 322, 328, 329, 330, 353, 354, 355, 361, 362, 363, 395, 399, 400, 402, 403, 407, 410, 411, 412, 413, 443, 460, 468, 612, 616, 618, 621, 643, 651, 654, 655, 688], "band": [5, 9, 160, 162, 165, 388, 434, 447, 449, 456, 459, 460, 461, 462, 466, 610, 618, 620, 666, 668], "arm": [5, 6, 40, 158, 159, 163, 373, 374, 375, 386, 387, 427, 455, 480, 559, 565, 610, 612, 614, 616, 620, 623, 627, 639, 655, 679, 680, 681, 683, 684, 685, 687, 690], "zenith": 5, "kazr": [5, 6, 620, 627], "ingest": [5, 613, 620, 677, 678], "spectra": [6, 74, 117, 446, 465, 512, 555, 562, 570, 589, 620], "radar_spectra": 6, "delay_field_load": [6, 372, 375, 378, 379, 380, 383, 385], "delai": [6, 372, 375, 378, 379, 380, 383, 620], "load": [6, 29, 372, 375, 378, 379, 380, 383, 391, 392, 401, 620, 637, 644, 685], "until": [6, 29, 167, 372, 375, 378, 379, 380, 383, 617, 623], "particular": [6, 372, 375, 378, 379, 380, 383, 427, 441, 613, 623, 662, 677], "access": [6, 19, 31, 45, 56, 57, 74, 144, 145, 193, 194, 372, 375, 378, 379, 380, 383, 392, 471, 483, 494, 495, 512, 558, 613, 618, 632, 633, 683, 685], "In": [6, 122, 124, 125, 168, 170, 370, 372, 375, 378, 379, 380, 382, 383, 403, 413, 416, 429, 432, 441, 445, 460, 469, 578, 579, 610, 612, 613, 614, 616, 617, 621, 626, 627, 628, 633, 662, 665, 666, 677, 680, 681, 683, 684, 687, 688], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 143, 144, 145, 155, 166, 192, 193, 194, 204, 226, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 372, 375, 376, 378, 379, 380, 383, 386, 387, 390, 471, 474, 475, 476, 477, 483, 494, 495, 501, 502, 503, 504, 512, 529, 530, 531, 532, 610, 613, 614, 616, 618, 663, 679, 685], "radarspectra": [6, 465, 562], "lazyloaddict": [6, 31, 45, 74, 372, 375, 378, 379, 380, 383, 471, 483, 512], "speedup": [6, 253, 327, 360, 375, 614, 620], "where": [6, 15, 56, 57, 119, 123, 126, 130, 133, 134, 135, 136, 137, 139, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 161, 162, 166, 167, 168, 171, 173, 179, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 226, 233, 236, 237, 238, 239, 252, 267, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 368, 369, 375, 432, 434, 437, 438, 440, 441, 442, 444, 445, 454, 463, 469, 494, 495, 581, 582, 590, 593, 606, 610, 611, 614, 616, 620, 632, 633, 636, 642, 646, 662, 663, 665, 668, 677, 680, 684, 690], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 121, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 226, 233, 237, 238, 239, 255, 257, 268, 270, 272, 273, 287, 294, 298, 299, 302, 316, 326, 327, 331, 332, 335, 349, 359, 360, 364, 365, 375, 380, 381, 382, 383, 416, 423, 426, 427, 460, 461, 462, 463, 464, 468, 469, 483, 493, 494, 495, 512, 560, 561, 562, 578, 579, 591, 592, 610, 614, 620, 628, 636, 638, 639, 643, 644, 679, 681, 683, 684, 685], "vari": [6, 375, 378, 443, 665, 666], "between": [6, 33, 45, 56, 57, 74, 120, 123, 124, 143, 155, 166, 167, 169, 170, 171, 192, 204, 208, 209, 226, 233, 237, 238, 239, 251, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 368, 375, 380, 383, 389, 390, 416, 443, 444, 448, 454, 473, 483, 494, 495, 512, 573, 588, 603, 610, 612, 613, 614, 621, 623, 636, 643, 654, 662, 665, 681, 683, 688, 690], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 138, 143, 155, 160, 161, 162, 166, 167, 168, 170, 173, 187, 192, 204, 208, 213, 215, 219, 220, 226, 233, 236, 237, 238, 239, 255, 257, 268, 270, 272, 274, 276, 280, 281, 287, 294, 297, 298, 299, 303, 305, 309, 310, 316, 326, 327, 330, 331, 332, 336, 338, 342, 343, 349, 359, 360, 363, 364, 365, 374, 375, 380, 383, 384, 416, 431, 436, 468, 483, 491, 494, 495, 496, 497, 498, 499, 512, 525, 526, 527, 528, 560, 561, 562, 565, 579, 580, 585, 587, 591, 606, 607, 613, 614, 621, 638, 644, 679, 685, 688], "ngates_vari": [6, 375], "recommend": [6, 29, 45, 74, 166, 168, 360, 375, 384, 427, 443, 444, 454, 460, 483, 512, 578, 621, 623, 642, 662, 677, 687, 688, 689, 690], "noxp": [7, 620], "iphex": [7, 620], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 138, 187, 327, 360, 369, 380, 382, 424, 425, 455, 579, 583, 586, 592, 610, 613, 614, 620, 627, 632, 637, 662, 663, 666, 667, 668, 669, 677, 679], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 130, 131, 133, 134, 135, 136, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 156, 166, 171, 179, 180, 182, 183, 184, 185, 188, 190, 191, 195, 197, 198, 199, 200, 202, 203, 205, 208, 209, 226, 231, 232, 251, 252, 254, 255, 256, 257, 267, 269, 270, 271, 272, 287, 292, 293, 316, 321, 322, 323, 324, 349, 354, 355, 356, 357, 399, 410, 416, 424, 425, 426, 427, 438, 459, 463, 471, 473, 483, 489, 490, 491, 492, 495, 496, 497, 498, 499, 512, 525, 526, 527, 528, 557, 579, 588, 591, 592, 594, 595, 602, 610, 614, 618, 662, 663, 665, 677], "dataset1": 8, "dataset2": 8, "pattern": [9, 563, 654, 662], "project": [9, 16, 31, 34, 45, 74, 122, 123, 124, 125, 126, 231, 242, 253, 258, 265, 292, 302, 321, 327, 354, 360, 369, 378, 387, 388, 427, 434, 437, 438, 440, 442, 471, 474, 483, 512, 610, 612, 614, 616, 617, 618, 620, 632, 633, 636, 637, 643, 645, 651, 658, 663, 665, 666, 673, 677, 680, 681, 683, 684, 687], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 126, 212, 221, 226, 228, 231, 233, 236, 237, 238, 239, 241, 251, 253, 255, 257, 268, 270, 272, 273, 282, 287, 289, 292, 294, 297, 298, 299, 301, 302, 311, 316, 318, 321, 324, 326, 330, 331, 332, 334, 335, 344, 349, 351, 354, 357, 359, 363, 364, 365, 367, 416, 420, 421, 422, 423, 424, 426, 427, 431, 444, 445, 447, 454, 456, 457, 458, 459, 460, 461, 462, 466, 471, 477, 479, 495, 503, 531, 559, 563, 578, 610, 613, 614, 617, 619, 620, 624, 636, 643, 645, 654, 655, 662, 665, 666, 668, 683, 684, 685], "radx_dir": 10, "first": [10, 45, 58, 74, 166, 168, 251, 373, 374, 383, 386, 416, 427, 444, 454, 460, 461, 462, 466, 483, 496, 512, 583, 585, 588, 599, 600, 610, 612, 613, 614, 616, 617, 621, 623, 627, 628, 632, 633, 648, 657, 662, 663, 665, 666, 673, 681, 683, 684, 685, 688], "convert": [10, 13, 39, 429, 444, 454, 479, 596, 607, 610, 612, 614, 620, 665, 666], "cf": [10, 13, 45, 74, 375, 386, 387, 455, 483, 512, 610, 611, 612, 613, 630, 641, 660, 677, 685, 686], "radial": [10, 13, 45, 74, 166, 167, 375, 386, 431, 460, 483, 512, 578, 602, 611, 613, 614, 616, 620, 625, 630, 632, 641, 660, 672, 676, 677, 681, 685, 686], "radxconvert": 10, "path": [10, 15, 161, 162, 168, 481, 558, 611, 612, 614, 616, 617, 620, 621, 632, 633, 677, 687, 688], "radx": [10, 620], "grid": [11, 24, 45, 74, 211, 228, 230, 238, 242, 246, 252, 253, 254, 256, 259, 260, 265, 267, 268, 269, 271, 289, 291, 318, 320, 351, 353, 369, 370, 377, 378, 387, 388, 389, 420, 421, 422, 423, 424, 425, 426, 427, 434, 437, 438, 440, 442, 443, 444, 445, 454, 457, 458, 466, 483, 512, 559, 563, 564, 566, 567, 584, 604, 610, 614, 617, 620, 630, 635, 640, 641, 644, 645, 655, 658, 660, 662, 665, 666, 672, 676, 677, 678, 686], "produc": [11, 169, 377, 386, 388, 392, 464, 469, 614, 616, 621, 666, 677, 688], "radx2grid": 11, "within": [11, 29, 47, 48, 128, 166, 167, 168, 169, 173, 177, 211, 423, 426, 427, 431, 434, 437, 438, 440, 442, 459, 485, 486, 573, 579, 581, 582, 590, 592, 594, 595, 608, 612, 614, 615, 616, 618, 620, 621, 632, 633, 644, 645, 646, 677, 681, 683, 688, 690], "lrose": 11, "must": [11, 160, 161, 162, 166, 327, 374, 377, 378, 383, 389, 443, 457, 460, 461, 462, 602, 614, 621, 665, 677, 687, 688], "been": [11, 12, 133, 135, 143, 150, 155, 165, 166, 182, 184, 192, 199, 204, 259, 335, 375, 377, 380, 381, 382, 384, 589, 611, 616, 621, 632, 665, 677, 683, 687, 688], "write_grid": [11, 377], "ident": [11, 167, 168, 377, 426, 666], "layout": [11, 33, 377, 473, 620], "rainbow": 12, "rainbow5": [12, 620], "5": [12, 31, 158, 160, 162, 166, 169, 170, 171, 172, 209, 226, 233, 236, 237, 238, 239, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 387, 443, 444, 448, 454, 459, 471, 563, 588, 596, 610, 611, 612, 613, 614, 616, 617, 618, 619, 621, 626, 628, 637, 642, 646, 648, 649, 650, 653, 654, 655, 656, 657, 658, 662, 663, 665, 666, 667, 668, 669, 673, 679, 681, 684, 685, 688], "22": [12, 610, 612, 616, 620, 632, 634, 642, 663], "3": [12, 45, 74, 119, 120, 166, 167, 207, 208, 210, 238, 378, 382, 388, 423, 424, 425, 427, 431, 443, 444, 454, 459, 483, 512, 559, 563, 579, 610, 611, 612, 613, 616, 619, 621, 626, 627, 628, 629, 630, 633, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 676, 677, 679, 680, 681, 683, 684, 685, 686, 687, 688, 690], "34": [12, 454, 466, 610, 665, 666], "16": [12, 443, 447, 468, 610, 611, 612, 614, 618, 621, 626, 628, 636, 650, 656, 662, 664, 681, 685, 688], "35": [12, 168, 172, 173, 610, 612, 613, 636, 640, 642, 652, 654, 655, 662, 684, 686], "1": [12, 31, 45, 55, 74, 119, 123, 126, 143, 158, 159, 163, 166, 168, 172, 173, 192, 273, 375, 380, 381, 382, 387, 426, 427, 429, 434, 435, 437, 438, 440, 441, 443, 444, 445, 448, 454, 459, 460, 462, 471, 483, 493, 512, 563, 579, 580, 588, 589, 601, 608, 610, 612, 613, 614, 616, 618, 621, 623, 624, 626, 627, 628, 632, 636, 637, 638, 639, 642, 643, 645, 647, 648, 649, 651, 652, 653, 654, 655, 657, 658, 659, 662, 663, 665, 667, 668, 669, 674, 677, 679, 680, 681, 683, 685, 688], "sinc": [12, 432, 460, 610, 612, 613, 614, 637, 665, 666, 680, 683, 685], "evolv": [12, 610], "constantli": 12, "guaranti": 12, "work": [12, 123, 126, 253, 302, 327, 335, 360, 380, 382, 466, 611, 612, 614, 616, 617, 618, 620, 621, 623, 624, 662, 677, 679, 680, 681, 683, 684, 685, 687, 688, 690], "necessari": [12, 610, 617], "user": [12, 29, 48, 161, 162, 169, 360, 388, 443, 459, 486, 579, 606, 610, 613, 614, 616, 618, 620, 621, 668, 677, 679, 680, 681, 683, 684, 685, 687, 688, 690], "adapt": [12, 119, 610, 690], "code": [12, 29, 166, 457, 468, 610, 612, 616, 618, 620, 624, 626, 627, 628, 630, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677, 687, 690], "accord": [12, 165, 384, 427, 435, 447, 448, 449, 451, 452], "its": [12, 460, 598, 612, 613, 616, 617, 620, 621, 623, 624, 677, 687, 688, 690], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 372, 383, 399, 400, 410, 411, 471, 472, 484, 485, 487, 496, 515, 613, 614, 617, 620], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 137, 158, 166, 167, 168, 169, 171, 172, 173, 186, 207, 208, 209, 210, 212, 231, 292, 321, 354, 360, 369, 384, 387, 388, 404, 414, 416, 423, 424, 426, 427, 431, 437, 440, 445, 455, 471, 479, 483, 485, 486, 489, 490, 496, 505, 506, 507, 508, 509, 510, 511, 512, 533, 534, 535, 536, 537, 538, 539, 557, 559, 560, 561, 562, 569, 578, 582, 586, 587, 594, 595, 605, 607, 610, 611, 613, 614, 616, 617, 618, 620, 621, 623, 624, 627, 630, 633, 636, 637, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 656, 657, 658, 659, 660, 662, 663, 665, 666, 668, 673, 674, 675, 677, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689], "issu": [12, 29, 302, 335, 384, 387, 613, 618, 619, 620, 621, 630, 631, 634, 668, 677, 686, 687, 688, 690], "upstream": [12, 611, 621, 623, 688], "reflect": [12, 47, 117, 128, 144, 145, 158, 159, 160, 161, 162, 164, 169, 171, 172, 173, 174, 177, 193, 194, 208, 209, 228, 289, 318, 351, 368, 416, 427, 429, 430, 432, 436, 439, 443, 444, 445, 448, 450, 451, 452, 453, 454, 459, 460, 466, 485, 555, 568, 569, 571, 572, 593, 610, 611, 612, 616, 617, 618, 620, 625, 627, 628, 629, 630, 632, 633, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 650, 653, 656, 657, 659, 660, 661, 662, 663, 665, 666, 670, 673, 675, 677, 679, 680, 681, 683, 684, 685, 686], "dbz": [12, 160, 165, 172, 173, 429, 436, 439, 443, 444, 454, 459, 466, 611, 613, 616, 617, 632, 636, 645, 652, 653, 659, 662, 665, 666, 668, 685], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 166, 167, 168, 431, 445, 446, 457, 468, 469, 496, 555, 578, 602, 614, 616, 617, 620, 621, 625, 629, 630, 632, 642, 647, 655, 657, 668, 672, 676, 677, 678, 684, 685, 686, 688], "v": [12, 41, 42, 44, 399, 400, 403, 410, 411, 413, 433, 435, 443, 468, 469, 612, 617, 618, 621, 654, 655, 666, 669, 688], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 589, 685], "width": [12, 252, 267, 327, 360, 369, 427, 612, 613, 614, 616, 620, 685], "w": [12, 62, 168, 443, 459, 500, 610, 667], "wu": [12, 423, 683], "wv": 12, "wvu": 12, "differenti": [12, 17, 160, 161, 162, 172, 173, 208, 445, 449, 452, 459, 460, 461, 462, 464, 467, 620, 647, 662, 677], "zdr": [12, 161, 162, 165, 208, 433, 459, 668], "zdru": 12, "co": [12, 119, 123, 126, 433, 435, 444, 445, 454, 610, 612, 637, 662, 665, 666], "polar": [12, 378, 379, 462, 613, 637], "correl": [12, 171, 208, 209, 457, 459, 593, 616, 646, 647, 664, 665, 666], "coeffici": [12, 160, 161, 162, 172, 173, 429, 443, 459, 593, 610, 620, 646, 647, 664], "rhohv": [12, 165, 171, 208, 209, 433, 435, 459, 620, 646, 668, 685], "rhohvu": 12, "phase": [12, 17, 160, 161, 162, 168, 172, 173, 208, 440, 449, 452, 457, 459, 460, 461, 462, 464, 467, 620, 647, 677, 681], "phidp": [12, 161, 162, 172, 173, 208, 460, 620, 677], "uphidp": 12, "uphidpu": 12, "kdp": [12, 172, 173, 449, 452, 459, 460, 461, 462, 620, 667, 668, 677], "ukdp": 12, "ukdpu": 12, "signal": [12, 165, 171, 209, 430, 589, 613, 618], "qualiti": [12, 158, 159, 163, 165, 171, 209, 449, 461, 462, 610, 616, 618, 632], "sqi": [12, 620], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 161, 162, 210, 459, 610, 667], "temp": [12, 620], "posit": [12, 45, 74, 123, 126, 161, 162, 166, 369, 432, 460, 483, 512, 613, 620, 636, 642, 645, 685], "bin": [12, 45, 74, 119, 120, 121, 162, 383, 434, 437, 438, 440, 442, 445, 446, 483, 512, 588, 589, 610, 620, 636, 662, 681, 685], "respect": [12, 45, 74, 444, 454, 459, 466, 483, 512, 614], "iso0": [12, 161, 207, 459], "cfradial_outfil": 13, "head": [13, 45, 74, 212, 483, 512], "ridgelin": 13, "instrument": [13, 45, 74, 143, 155, 171, 192, 204, 208, 209, 390, 483, 512, 618, 620, 668, 681, 685], "rxm": [13, 620], "25": [13, 424, 425, 443, 610, 612, 616, 620, 632, 636, 644, 654, 655, 658, 663, 666, 668, 670, 679, 684, 686], "rli": 13, "here": [13, 133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 265, 610, 611, 612, 613, 614, 616, 618, 619, 623, 636, 662, 665, 666, 668, 673, 677, 679, 684, 687, 690], "float": [13, 24, 58, 123, 126, 133, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 182, 207, 208, 209, 210, 212, 213, 226, 228, 229, 233, 234, 236, 237, 238, 239, 251, 252, 253, 254, 255, 256, 257, 265, 267, 268, 269, 270, 271, 272, 273, 274, 287, 289, 290, 294, 295, 297, 298, 299, 302, 303, 316, 318, 319, 325, 326, 327, 328, 330, 331, 332, 335, 336, 349, 351, 352, 358, 359, 360, 361, 363, 364, 365, 368, 369, 388, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 429, 430, 431, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 496, 559, 563, 574, 575, 576, 577, 578, 579, 581, 582, 588, 589, 590, 591, 592, 593, 594, 595, 596, 603, 604, 614, 618], "offset": [13, 158, 160, 172, 173, 212, 273, 302, 325, 335, 358, 444, 454, 588, 596, 610, 613, 614, 666], "exist": [13, 28, 32, 46, 47, 49, 77, 133, 135, 143, 150, 155, 170, 171, 182, 184, 192, 199, 204, 208, 209, 384, 460, 472, 481, 484, 485, 487, 515, 557, 607, 612, 613, 614, 620, 623, 626, 677, 679], "enter": [13, 611, 614, 621, 688], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 126, 172, 173, 210, 212, 226, 231, 232, 251, 252, 254, 256, 265, 267, 269, 271, 273, 287, 292, 293, 302, 316, 321, 322, 325, 327, 335, 349, 354, 355, 358, 360, 434, 440, 468, 473, 493, 494, 575, 577, 579, 581, 582, 590, 591, 592, 596, 600, 603, 612, 614, 618, 620, 621, 659, 663, 685, 688], "sinarame_h5": [14, 15, 620], "take": [15, 47, 167, 426, 427, 430, 460, 485, 612, 613, 614, 621, 627, 632, 633, 636, 645, 665, 666, 688], "everi": [15, 461, 462, 621, 622, 677, 688], "one": [15, 25, 31, 39, 40, 45, 47, 74, 133, 135, 143, 150, 155, 170, 171, 182, 184, 192, 199, 204, 209, 386, 387, 389, 416, 423, 426, 427, 432, 460, 461, 462, 468, 471, 479, 480, 483, 485, 512, 580, 581, 582, 588, 593, 597, 602, 611, 613, 614, 616, 617, 619, 620, 621, 623, 630, 635, 636, 637, 642, 662, 677, 680, 685, 688, 690], "volum": [15, 45, 74, 166, 168, 169, 327, 360, 380, 381, 382, 390, 416, 424, 425, 434, 437, 438, 440, 441, 442, 455, 459, 483, 512, 581, 582, 584, 604, 607, 610, 613, 614, 616, 618, 620, 630, 637, 641, 660, 686], "folder": [15, 610, 618, 621, 688], "cfradial": [15, 375, 611, 620, 630, 641, 642, 644, 657, 659, 660, 675, 679, 686], "each": [15, 31, 39, 41, 45, 55, 74, 138, 159, 160, 161, 162, 163, 167, 168, 169, 187, 226, 233, 237, 238, 239, 255, 257, 268, 270, 272, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 384, 388, 390, 416, 423, 426, 427, 441, 445, 459, 468, 471, 479, 483, 493, 512, 560, 561, 562, 610, 613, 614, 617, 618, 620, 621, 632, 638, 644, 654, 657, 662, 665, 666, 684, 685, 688], "act": [16, 448, 451, 452, 610, 620, 662, 665, 679], "commun": [16, 610, 618, 621, 677, 688, 690], "softwar": [16, 238, 381, 388, 614, 616, 621, 677, 679, 680, 681, 683, 684, 685, 687, 688], "namespac": [16, 620], "current": [16, 27, 33, 133, 135, 143, 150, 155, 166, 182, 184, 192, 199, 204, 214, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 250, 251, 252, 253, 255, 257, 265, 266, 267, 268, 270, 272, 275, 277, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 304, 306, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 337, 339, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 379, 417, 419, 434, 437, 438, 440, 441, 442, 460, 473, 588, 610, 611, 613, 614, 616, 618, 621, 688], "extens": [16, 214, 246, 260, 275, 304, 337, 388, 613, 623, 687], "wradlib": [16, 620, 677], "http": [16, 158, 159, 163, 380, 381, 382, 429, 432, 433, 435, 444, 445, 448, 449, 450, 454, 457, 459, 579, 593, 610, 612, 614, 616, 618, 621, 646, 655, 662, 665, 666, 677, 687, 688, 690], "org": [16, 158, 159, 163, 429, 432, 433, 435, 444, 445, 448, 449, 450, 454, 457, 459, 579, 593, 618, 620, 621, 646, 662, 665, 666, 677, 688], "phidp_field": [17, 160, 161, 162, 172, 173, 460, 461, 462, 467, 626, 667], "phidp_texture_field": [17, 467], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 124, 128, 144, 145, 158, 159, 160, 161, 162, 163, 171, 172, 173, 177, 193, 194, 207, 208, 209, 210, 212, 273, 302, 335, 369, 426, 427, 430, 431, 443, 444, 454, 457, 464, 465, 467, 468, 469, 471, 473, 483, 494, 495, 512, 578, 579, 588, 589, 590, 591, 592, 603, 610, 620, 621, 625, 626, 629, 630, 636, 637, 654, 655, 661, 665, 670, 673, 677, 681, 684, 686, 688], "textur": [17, 208, 431, 467, 578, 606, 620, 673, 677, 681], "real": [17, 166, 467, 630, 641, 665, 666, 690], "part": [17, 158, 159, 163, 445, 447, 467, 588, 613, 614, 616, 620, 632, 662, 677, 679, 680, 681, 683, 684, 685], "complex": [17, 467], "shift": [17, 172, 173, 212, 273, 302, 335, 458, 461, 467, 588, 620, 681], "texture_field": [17, 467], "refer": [17, 31, 45, 47, 74, 119, 123, 126, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 172, 173, 380, 381, 382, 423, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 453, 454, 459, 460, 461, 462, 464, 466, 467, 468, 469, 471, 483, 485, 512, 579, 589, 593, 611, 616, 620, 621, 662, 677, 685, 688], "gourlei": [17, 165, 467], "j": [17, 123, 126, 158, 159, 163, 168, 172, 173, 432, 433, 435, 443, 444, 448, 454, 459, 461, 462, 464, 466, 467, 468, 469, 579, 611, 614, 618, 621, 626, 628, 638, 639, 647, 648, 650, 652, 656, 659, 665, 666, 677, 688], "p": [17, 20, 22, 28, 119, 123, 126, 158, 159, 163, 423, 437, 438, 440, 443, 447, 464, 467, 557, 579, 589, 613, 621, 677, 688], "tabari": [17, 467], "parent": [17, 467], "du": [17, 467], "chatelet": [17, 467], "fuzzi": [17, 467], "logic": [17, 133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 467], "algorithm": [17, 128, 166, 167, 168, 177, 423, 427, 443, 444, 454, 459, 460, 466, 467, 610, 620, 621, 625, 629, 630, 673, 677, 686, 688], "separ": [17, 424, 425, 443, 457, 466, 467, 589, 593, 632, 637, 646, 666, 690], "precipit": [17, 427, 429, 438, 440, 443, 449, 453, 459, 467, 593, 610, 612, 614, 620, 621, 636, 646, 665, 666, 668, 677, 688], "nonprecipit": [17, 467], "echo": [17, 443, 444, 454, 459, 467, 620, 662, 665, 666, 684], "polarimetr": [17, 160, 161, 162, 165, 172, 173, 434, 435, 437, 438, 440, 448, 449, 459, 464, 467, 579, 620, 626], "observ": [17, 119, 438, 440, 444, 454, 460, 467, 662, 665, 666], "journal": [17, 166, 168, 423, 447, 449, 467, 589, 621, 677, 688], "atmospher": [17, 45, 74, 119, 120, 166, 167, 427, 447, 463, 467, 483, 512, 610, 613, 614, 616, 618, 621, 632, 677, 679, 680, 681, 683, 684, 685, 688], "ocean": [17, 158, 159, 163, 166, 172, 173, 433, 435, 444, 447, 453, 454, 464, 467, 579, 610, 614, 618, 632, 665, 666], "technologi": [17, 166, 447, 467], "24": [17, 467, 610, 612, 620, 633], "8": [17, 62, 160, 166, 172, 208, 251, 253, 255, 257, 268, 270, 272, 443, 459, 467, 500, 610, 612, 613, 614, 616, 617, 623, 633, 636, 643, 644, 654, 658, 662, 663, 666, 670, 673, 679, 680, 681, 683, 684, 685], "1439": [17, 467], "1451": [17, 467], "filetyp": [19, 25, 614], "need": [19, 45, 54, 56, 57, 74, 388, 444, 454, 483, 492, 494, 495, 512, 590, 603, 612, 613, 614, 617, 618, 619, 620, 621, 623, 632, 636, 642, 665, 666, 677, 679, 680, 681, 683, 684, 685, 687, 688, 690], "being": [19, 21, 166, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 297, 298, 299, 316, 318, 326, 327, 330, 331, 332, 349, 351, 359, 360, 363, 364, 365, 427, 432, 462, 594, 595, 612, 614, 616, 617, 620, 655, 687], "keep": [19, 166, 384, 604, 614, 621, 636, 665, 666, 688, 690], "string": [19, 31, 45, 74, 158, 159, 174, 228, 231, 232, 236, 239, 252, 267, 289, 292, 293, 297, 299, 318, 321, 322, 323, 324, 325, 328, 330, 332, 351, 354, 355, 356, 357, 358, 361, 363, 365, 426, 427, 455, 457, 461, 462, 464, 468, 469, 471, 483, 512, 612, 613, 614, 620, 621, 642, 688], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 128, 166, 167, 177, 212, 273, 302, 335, 392, 475, 476, 477, 501, 502, 503, 504, 529, 530, 531, 532, 614, 618, 620, 645, 668], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 133, 143, 144, 145, 155, 173, 182, 192, 193, 194, 204, 369, 384, 460, 461, 462, 464, 468, 469, 471, 483, 507, 510, 511, 512, 535, 538, 539, 591, 610, 612, 614, 620, 632, 651], "dic": [22, 31, 45, 46, 74, 392, 471, 483, 484, 512], "colormap": [23, 211, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 369, 388, 613, 614, 620, 630, 641, 646, 660, 666, 667, 686], "select": [24, 50, 59, 88, 168, 434, 437, 438, 440, 442, 488, 497, 526, 610, 613, 616, 620, 623, 668], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 123, 126, 128, 155, 158, 160, 161, 163, 164, 166, 167, 169, 170, 171, 172, 173, 177, 204, 207, 208, 209, 210, 212, 225, 226, 233, 236, 237, 238, 239, 240, 253, 268, 273, 286, 287, 294, 297, 298, 299, 300, 302, 315, 316, 325, 326, 327, 330, 331, 332, 333, 335, 348, 349, 358, 359, 360, 363, 364, 365, 366, 384, 388, 416, 424, 425, 426, 427, 430, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 448, 450, 451, 452, 454, 458, 459, 460, 461, 464, 466, 468, 469, 473, 483, 488, 489, 490, 492, 493, 494, 495, 496, 512, 563, 580, 588, 596, 610, 611, 612, 613, 614, 616, 617, 618, 621, 623, 624, 626, 627, 628, 629, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 679, 680, 681, 683, 684, 685, 686, 687, 688], "limit": [24, 166, 167, 171, 172, 173, 207, 208, 209, 210, 228, 241, 265, 289, 301, 318, 334, 351, 367, 378, 389, 424, 425, 460, 604, 613, 614, 617, 620, 637, 638, 639, 643, 644, 662, 683], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 143, 155, 166, 167, 168, 170, 171, 192, 204, 208, 209, 214, 216, 225, 226, 228, 233, 237, 238, 239, 275, 277, 286, 287, 289, 294, 298, 299, 304, 306, 315, 316, 318, 326, 327, 331, 332, 337, 339, 348, 349, 351, 359, 360, 364, 365, 380, 381, 382, 384, 416, 424, 425, 431, 437, 440, 468, 483, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 505, 506, 507, 508, 509, 510, 511, 512, 525, 526, 527, 528, 533, 534, 535, 536, 537, 538, 539, 560, 561, 581, 582, 588, 610, 611, 613, 614, 616, 617, 618, 620, 628, 630, 632, 635, 636, 640, 654, 655, 657, 662, 663, 665, 666, 668, 669, 673, 681, 684, 685, 686], "get": [24, 159, 174, 243, 244, 245, 264, 375, 392, 402, 412, 416, 610, 611, 613, 614, 616, 617, 620, 633, 654, 655, 662, 665, 666, 668, 679, 681, 684, 685, 687, 689, 690], "relat": [24, 162, 211, 389, 429, 444, 448, 451, 452, 453, 454, 461, 466, 579, 613, 620, 621, 665, 666, 677, 687, 688], "instac": 24, "nyquist": [24, 58, 166, 167, 168, 431, 496, 578, 620, 668, 673, 681, 685], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 143, 155, 158, 162, 163, 166, 167, 169, 170, 172, 173, 192, 204, 208, 214, 215, 216, 225, 229, 233, 234, 236, 237, 238, 246, 247, 248, 249, 251, 253, 260, 261, 262, 263, 265, 268, 275, 276, 277, 286, 290, 294, 295, 297, 298, 304, 305, 306, 315, 319, 326, 327, 328, 330, 331, 337, 338, 339, 348, 352, 359, 360, 361, 363, 364, 369, 388, 424, 425, 427, 431, 434, 436, 437, 438, 440, 444, 454, 460, 462, 468, 471, 473, 483, 489, 490, 492, 493, 494, 495, 496, 512, 560, 561, 562, 563, 578, 579, 580, 589, 591, 606, 612, 614, 620, 621, 688], "consid": [24, 160, 169, 170, 368, 424, 425, 443, 444, 454, 580, 581, 582, 588, 589, 596, 637, 665], "vmin": [24, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 258, 268, 270, 272, 287, 289, 294, 297, 298, 299, 316, 318, 326, 327, 330, 331, 332, 349, 351, 359, 360, 363, 364, 365, 369, 388, 610, 611, 612, 613, 614, 616, 617, 618, 620, 626, 628, 632, 633, 636, 639, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 668, 673, 674, 675, 680, 681, 683, 684], "vmax": [24, 226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 258, 268, 270, 272, 287, 289, 294, 297, 298, 299, 316, 318, 326, 327, 330, 331, 332, 349, 351, 359, 360, 363, 364, 365, 369, 388, 610, 611, 612, 613, 614, 616, 617, 618, 620, 626, 628, 632, 633, 636, 639, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 668, 673, 674, 675, 680, 681, 683, 684], "2": [24, 119, 123, 168, 169, 170, 208, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 251, 252, 253, 255, 257, 267, 268, 270, 272, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 301, 316, 318, 321, 322, 326, 329, 330, 331, 332, 334, 349, 351, 354, 355, 359, 360, 362, 363, 364, 365, 367, 380, 381, 382, 384, 400, 411, 416, 423, 424, 425, 427, 431, 433, 435, 438, 443, 444, 445, 454, 459, 460, 468, 559, 563, 578, 593, 610, 612, 613, 614, 616, 618, 621, 624, 627, 634, 636, 637, 643, 645, 650, 651, 654, 655, 658, 662, 663, 665, 667, 668, 669, 673, 677, 679, 680, 681, 683, 684, 685, 688], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 392, 427, 471, 485, 486, 488, 489, 490, 492, 607, 613, 619, 620, 627, 666, 680], "field_map": 25, "anoth": [25, 416, 434, 437, 438, 440, 442, 593, 613, 614, 620, 636, 679, 684, 687, 690], "fill": [27, 160, 161, 162, 466, 614, 618, 620, 666, 679, 680], "empti": [28, 400, 411, 461, 462, 557, 559, 562, 611, 620, 679], "control": [29, 158, 159, 163, 166, 384, 386, 387, 427, 459, 460, 616, 617, 618, 662, 683], "singl": [29, 167, 168, 169, 170, 231, 232, 234, 236, 292, 293, 295, 297, 321, 322, 328, 330, 354, 355, 361, 363, 388, 427, 565, 588, 607, 610, 613, 614, 616, 620, 621, 630, 632, 635, 636, 640, 663, 686, 688], "self": [29, 172, 173, 613, 614, 621, 680, 683, 688], "descrip": 29, "exampl": [29, 47, 128, 177, 226, 233, 236, 237, 238, 239, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 392, 416, 420, 421, 422, 426, 427, 468, 481, 485, 588, 610, 611, 612, 613, 614, 615, 617, 618, 620, 621, 626, 627, 628, 629, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 664, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 679, 681, 684, 685, 686, 688, 690], "default_config": 29, "modifi": [29, 45, 74, 169, 483, 512, 611, 620, 621, 630, 641, 660, 686, 688], "environment": [29, 610, 611, 677, 687], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 212, 242, 259, 273, 302, 335, 386, 387, 416, 424, 448, 455, 459, 460, 463, 464, 471, 479, 480, 483, 493, 512, 589, 610, 612, 613, 617, 620, 632, 636, 662, 663, 665, 666, 668, 677, 679, 680, 685, 687], "pyart_config": 29, "point": [29, 31, 33, 47, 124, 160, 161, 162, 163, 173, 229, 234, 251, 252, 267, 290, 295, 302, 319, 324, 325, 328, 352, 357, 358, 361, 378, 379, 382, 384, 388, 423, 426, 427, 434, 437, 438, 440, 442, 444, 445, 454, 466, 471, 473, 485, 559, 580, 589, 592, 596, 607, 610, 612, 614, 616, 620, 623, 630, 643, 651, 661, 662, 665, 670, 673, 677, 681, 683, 685, 686], "new": [29, 47, 48, 50, 133, 135, 143, 150, 155, 169, 182, 184, 192, 199, 204, 434, 437, 438, 440, 441, 442, 446, 458, 464, 468, 485, 486, 488, 593, 604, 616, 617, 620, 621, 623, 624, 627, 636, 644, 663, 666, 667, 673, 677, 680, 681, 688, 690], "execut": [29, 620, 629, 634, 640, 660, 670, 671, 676, 686], "full": [29, 62, 169, 170, 384, 500, 616, 618, 620, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675], "permiss": 29, "secur": 29, "do": [29, 45, 74, 166, 171, 208, 209, 388, 389, 483, 512, 614, 616, 617, 618, 620, 621, 633, 665, 666, 679, 680, 681, 683, 684, 687, 688, 690], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 128, 133, 135, 143, 150, 155, 160, 162, 172, 173, 177, 182, 184, 192, 199, 204, 238, 251, 389, 390, 392, 403, 405, 413, 424, 425, 426, 443, 455, 460, 461, 462, 468, 471, 485, 492, 494, 495, 588, 589, 608, 613, 614, 620, 621, 623, 626, 649, 662, 673, 674, 675, 677, 684, 688], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 144, 145, 166, 193, 194, 383, 392, 471, 481, 483, 485, 489, 490, 492, 494, 512, 573, 610, 612, 614, 617, 620, 621, 622, 623, 624, 662, 665, 666, 668, 680, 683, 685, 687, 688], "home": [29, 616, 618, 621, 688, 690], "make": [29, 31, 471, 559, 563, 564, 566, 567, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 624, 636, 645, 654, 662, 665, 673, 677, 679, 680, 687, 688, 690], "adjust": [29, 123, 241, 301, 334, 367, 443, 614, 620, 642, 646, 654, 666], "login": [29, 618], "": [29, 31, 45, 58, 62, 74, 119, 120, 123, 126, 167, 168, 172, 173, 214, 216, 226, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 275, 277, 287, 294, 298, 299, 304, 306, 316, 326, 331, 332, 337, 339, 349, 359, 364, 365, 369, 397, 398, 404, 408, 409, 414, 416, 418, 423, 433, 437, 444, 445, 447, 448, 454, 456, 457, 460, 461, 462, 464, 466, 469, 471, 483, 496, 500, 512, 589, 593, 610, 611, 612, 613, 614, 616, 617, 618, 620, 622, 623, 627, 632, 633, 636, 642, 644, 645, 646, 655, 662, 663, 665, 666, 668, 669, 673, 677, 679, 680, 681, 683, 684, 685, 689], "also": [29, 45, 74, 133, 182, 211, 227, 250, 266, 288, 317, 350, 381, 382, 386, 388, 390, 402, 412, 416, 424, 444, 454, 483, 512, 610, 611, 612, 613, 614, 616, 617, 618, 620, 621, 632, 636, 662, 665, 666, 677, 679, 683, 685, 687, 688, 689, 690], "shell": 29, "session": 29, "modif": [29, 47, 485, 620], "last": [29, 45, 74, 166, 226, 227, 233, 237, 238, 239, 250, 255, 257, 259, 266, 268, 270, 272, 287, 288, 294, 298, 299, 316, 317, 326, 327, 331, 332, 335, 349, 350, 359, 360, 364, 365, 483, 512, 588, 613, 614, 616, 619, 620, 638, 644, 666, 685], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 138, 160, 161, 162, 167, 168, 173, 187, 251, 491, 499, 507, 511, 525, 528, 535, 539, 610, 612, 613, 614, 616, 617, 618, 620, 621, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677, 688], "interact": [30, 610, 613], "weather": [30, 119, 166, 423, 433, 434, 438, 460, 612, 614, 617, 620, 621, 632, 642, 677, 679, 680, 681, 683, 684, 685, 688], "time": [31, 39, 40, 45, 74, 159, 163, 166, 214, 216, 226, 228, 233, 237, 238, 239, 275, 277, 287, 289, 294, 298, 299, 304, 306, 316, 318, 326, 327, 331, 332, 337, 339, 349, 351, 359, 360, 364, 365, 373, 374, 384, 386, 387, 416, 419, 427, 434, 437, 438, 440, 441, 442, 443, 455, 457, 471, 479, 480, 483, 512, 583, 586, 610, 611, 612, 614, 616, 618, 620, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 679, 685, 690], "origin_latitud": [31, 471], "origin_longitud": [31, 471], "origin_altitud": [31, 471], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 126, 212, 214, 223, 226, 228, 231, 233, 236, 237, 238, 239, 241, 251, 253, 255, 257, 268, 270, 272, 273, 275, 284, 287, 289, 292, 294, 297, 298, 299, 301, 302, 304, 313, 316, 318, 321, 324, 326, 330, 331, 332, 334, 335, 337, 346, 349, 351, 354, 357, 359, 363, 364, 365, 367, 416, 420, 421, 422, 423, 424, 425, 426, 427, 433, 444, 454, 457, 458, 466, 471, 477, 479, 495, 503, 531, 559, 610, 612, 613, 614, 617, 618, 624, 636, 643, 644, 645, 654, 655, 662, 663, 665, 666], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 121, 160, 162, 172, 173, 224, 285, 314, 347, 378, 388, 389, 420, 421, 422, 423, 425, 426, 427, 429, 432, 443, 444, 448, 451, 452, 453, 454, 457, 471, 477, 479, 483, 495, 503, 512, 531, 559, 617, 626, 637, 652, 654, 655, 665, 666, 668, 680], "radar_latitud": [31, 471, 590, 603], "radar_longitud": [31, 471, 590, 603], "radar_altitud": [31, 471], "radar_tim": [31, 471], "radar_nam": [31, 471], "store": [31, 45, 74, 166, 167, 168, 392, 427, 432, 434, 437, 438, 440, 441, 442, 471, 483, 512, 610, 612, 614, 618, 620, 632, 663, 677, 680, 683, 685, 690], "rectilinear": [31, 471], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 126, 378, 415, 416, 423, 426, 427, 471, 473, 479, 483, 512, 630, 635, 640, 643, 644, 677, 678, 686], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 126, 226, 233, 237, 238, 239, 255, 257, 268, 270, 272, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 369, 387, 415, 416, 418, 423, 427, 441, 445, 471, 473, 479, 483, 494, 512, 559, 578, 610, 612, 613, 614, 620, 625, 630, 633, 635, 636, 637, 638, 639, 663, 677, 683, 685], "section": [31, 45, 47, 74, 226, 251, 287, 316, 349, 425, 427, 471, 483, 485, 512, 581, 582, 610, 614, 615, 619, 620, 621, 630, 641, 660, 662, 665, 666, 677, 686, 688], "To": [31, 47, 171, 207, 208, 209, 210, 386, 387, 389, 471, 485, 607, 612, 617, 618, 621, 623, 666, 668, 677, 680, 683, 687, 688, 690], "creat": [31, 42, 45, 47, 50, 74, 166, 167, 168, 169, 171, 207, 208, 209, 210, 211, 212, 225, 239, 242, 259, 273, 286, 299, 302, 315, 327, 332, 335, 348, 360, 365, 381, 386, 387, 388, 389, 390, 426, 427, 434, 437, 438, 440, 441, 442, 464, 469, 471, 481, 483, 485, 488, 512, 601, 602, 604, 610, 614, 616, 620, 621, 626, 627, 628, 630, 633, 636, 638, 639, 641, 642, 644, 645, 659, 660, 661, 665, 666, 670, 675, 677, 678, 680, 683, 686, 688], "legaci": [31, 432, 471], "from_legacy_paramet": [31, 471], "ax": [31, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 250, 251, 252, 253, 255, 257, 265, 266, 267, 268, 270, 272, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 359, 360, 362, 363, 364, 365, 366, 367, 420, 421, 422, 444, 454, 458, 466, 471, 610, 611, 612, 613, 614, 616, 617, 618, 620, 626, 628, 632, 636, 637, 638, 639, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 658, 662, 663, 664, 665, 666, 667, 668, 669, 673, 681], "moment": [31, 39, 45, 74, 117, 165, 166, 167, 168, 171, 208, 209, 380, 381, 382, 427, 465, 471, 479, 483, 512, 555, 589, 613, 620, 641, 660, 677, 684, 686], "describ": [31, 45, 74, 171, 207, 208, 209, 210, 252, 267, 454, 471, 483, 512, 616, 665, 666], "geograph": [31, 45, 56, 74, 122, 123, 124, 125, 126, 302, 327, 335, 360, 387, 427, 471, 483, 494, 512, 614, 677], "origin": [31, 39, 166, 167, 168, 212, 273, 302, 335, 384, 386, 387, 392, 394, 423, 427, 454, 471, 479, 581, 582, 610, 611, 612, 614, 620, 621, 627, 636, 637, 638, 639, 662, 664, 665, 666, 688], "distanc": [31, 39, 57, 119, 120, 121, 226, 237, 287, 298, 316, 331, 349, 364, 416, 417, 420, 421, 422, 424, 425, 426, 427, 434, 436, 440, 457, 459, 462, 471, 479, 495, 579, 581, 582, 590, 591, 592, 603, 610, 611, 612, 636, 647, 652, 653, 654], "axi": [31, 39, 45, 74, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 250, 251, 252, 253, 255, 257, 265, 266, 267, 268, 270, 272, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 316, 317, 318, 319, 320, 321, 322, 326, 327, 329, 330, 331, 332, 334, 349, 350, 351, 352, 353, 354, 355, 359, 360, 362, 363, 364, 365, 367, 378, 388, 471, 479, 483, 512, 580, 610, 613, 614, 618, 643, 655, 662, 665, 669, 685], "dimension": [31, 39, 166, 168, 423, 445, 454, 466, 471, 479, 636, 662, 665, 666], "space": [31, 45, 74, 124, 228, 289, 318, 351, 389, 427, 443, 444, 454, 457, 471, 483, 512, 610, 613, 665, 679], "along": [31, 167, 170, 251, 254, 255, 256, 257, 269, 270, 271, 272, 441, 471, 579, 580, 581, 582, 591, 592, 604, 606, 612, 613, 614, 620, 665, 673], "three": [31, 168, 171, 209, 388, 445, 454, 466, 471, 613, 623, 662, 665, 666], "repeat": [31, 471], "throughout": [31, 471, 662], "nz": [31, 471], "nx": [31, 471], "ny": [31, 471], "dimens": [31, 166, 378, 424, 425, 427, 431, 432, 444, 454, 455, 457, 460, 462, 466, 471, 578, 604, 610, 613, 614, 620, 637, 663, 665, 666, 679, 683, 685], "transform": [31, 45, 74, 122, 123, 124, 125, 126, 231, 238, 292, 302, 321, 335, 354, 360, 387, 427, 443, 459, 471, 483, 512, 612, 614, 617, 620, 642, 665, 666], "proj": [31, 45, 74, 122, 124, 125, 265, 335, 471, 483, 512, 620], "pyart_aeqd": [31, 45, 74, 122, 124, 125, 471, 483, 512], "nativ": [31, 45, 74, 122, 124, 125, 372, 427, 432, 471, 483, 512, 620], "azimuth": [31, 45, 51, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 126, 212, 213, 226, 228, 231, 233, 237, 238, 239, 255, 257, 268, 270, 272, 273, 274, 287, 289, 292, 294, 298, 299, 302, 303, 316, 318, 321, 326, 327, 331, 332, 335, 336, 349, 351, 354, 359, 360, 364, 365, 384, 388, 425, 432, 434, 440, 441, 462, 468, 469, 471, 483, 489, 493, 495, 505, 512, 533, 579, 581, 582, 588, 590, 591, 607, 613, 614, 620, 621, 657, 659, 663, 679, 685, 688], "equidist": [31, 45, 74, 122, 123, 124, 125, 126, 231, 292, 321, 354, 360, 388, 427, 471, 483, 512, 614], "pyproj": [31, 45, 74, 122, 124, 125, 471, 483, 512, 620, 687], "projparam": [31, 34, 45, 74, 122, 124, 125, 471, 474, 483, 512], "special": [31, 45, 74, 471, 483, 512, 614], "_include_lon_0_lat_0": [31, 45, 74, 471, 483, 512], "remov": [31, 45, 56, 57, 74, 160, 161, 162, 166, 171, 207, 208, 209, 210, 226, 233, 237, 238, 239, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 393, 399, 400, 406, 410, 411, 444, 445, 454, 471, 483, 494, 495, 512, 612, 614, 617, 618, 620, 621, 626, 638, 644, 645, 654, 662, 665, 681, 684, 688], "interpret": [31, 45, 74, 167, 168, 387, 435, 471, 483, 512, 594, 595, 614, 662], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 122, 123, 124, 126, 212, 231, 232, 251, 252, 253, 254, 256, 257, 265, 267, 269, 271, 272, 273, 292, 293, 302, 321, 322, 323, 325, 327, 335, 354, 355, 356, 358, 360, 369, 427, 434, 440, 442, 471, 473, 476, 479, 483, 494, 512, 579, 590, 591, 592, 603, 610, 612, 613, 614, 617, 618, 630, 631, 634, 643, 651, 658, 663, 665, 666, 679, 680, 685, 686], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 122, 123, 124, 126, 212, 231, 232, 251, 252, 253, 254, 255, 256, 265, 267, 269, 270, 271, 273, 292, 293, 302, 321, 322, 323, 325, 327, 335, 354, 355, 356, 358, 360, 369, 427, 434, 440, 442, 471, 473, 476, 479, 483, 494, 512, 579, 590, 591, 592, 603, 610, 612, 613, 614, 617, 618, 630, 631, 634, 643, 651, 658, 663, 665, 666, 679, 680, 685, 686], "ad": [31, 45, 47, 74, 170, 172, 173, 259, 325, 358, 424, 426, 443, 444, 454, 471, 483, 485, 512, 563, 611, 613, 616, 618, 620, 621, 654, 655, 679, 680, 687, 688], "lon_0": [31, 45, 74, 123, 126, 327, 360, 471, 483, 512, 651], "lat_0": [31, 45, 74, 123, 126, 327, 360, 471, 483, 512, 651], "get_projparam": [31, 471], "evalu": [31, 392, 394, 449, 471, 616, 620], "locat": [31, 33, 45, 55, 56, 57, 74, 212, 226, 227, 228, 231, 232, 233, 234, 235, 237, 238, 239, 250, 251, 253, 255, 257, 265, 266, 268, 270, 272, 273, 287, 288, 289, 292, 293, 294, 295, 296, 298, 299, 302, 316, 317, 318, 321, 322, 324, 326, 327, 328, 329, 331, 332, 335, 349, 350, 351, 354, 355, 357, 359, 360, 361, 362, 364, 365, 380, 381, 383, 389, 416, 423, 426, 427, 471, 473, 483, 493, 494, 495, 512, 559, 573, 579, 590, 591, 592, 610, 611, 612, 614, 616, 620, 621, 649, 651, 663, 673, 674, 675, 677, 683, 687, 688], "up": [31, 45, 74, 133, 135, 143, 150, 155, 161, 162, 182, 184, 192, 199, 204, 424, 425, 429, 432, 438, 445, 448, 451, 452, 463, 471, 483, 512, 578, 611, 612, 616, 618, 619, 620, 623, 662, 665, 681, 685, 689], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 251, 384, 390, 441, 455, 471, 483, 498, 499, 510, 511, 512, 527, 528, 538, 539, 584, 610, 611, 612, 613, 614, 616, 617, 618, 621, 632, 642, 643, 654, 655, 677, 679, 688, 689], "collect": [31, 143, 155, 192, 204, 374, 380, 381, 382, 384, 415, 426, 427, 471, 613, 614, 621, 632, 648, 663, 677, 688, 689, 690], "nradar": [31, 471], "whose": [31, 383, 422, 471, 610], "wa": [31, 56, 57, 143, 167, 168, 192, 226, 233, 237, 238, 239, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 471, 494, 495, 593, 610, 612, 614, 616, 617, 618, 620, 677, 690], "projection_proj": [31, 471], "instanc": [31, 42, 48, 166, 167, 168, 226, 233, 236, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 389, 390, 432, 471, 486, 593, 597, 602, 612, 614, 620], "valueerror": [31, 32, 46, 47, 471, 472, 484, 485, 614], "point_z": [31, 387, 471, 662], "point_x": [31, 387, 471], "point_i": [31, 387, 471], "func": [31, 471, 613, 620], "init_point_x_y_z": [31, 471], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 471, 476, 477, 483, 494, 502, 503, 504, 512, 530, 531, 532, 684], "point_latitud": [31, 387, 471], "point_longitud": [31, 387, 471], "perform": [31, 45, 56, 57, 58, 74, 133, 135, 143, 150, 155, 165, 166, 167, 168, 170, 182, 184, 192, 199, 204, 226, 231, 233, 236, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 292, 294, 297, 298, 299, 316, 321, 326, 327, 330, 331, 332, 335, 349, 354, 359, 360, 363, 364, 365, 380, 383, 388, 424, 425, 434, 437, 438, 440, 454, 460, 471, 483, 494, 495, 496, 512, 607, 613, 614, 625, 626, 628, 630, 638, 639, 643, 644, 677], "invers": [31, 45, 74, 468, 471, 483, 512, 610], "rel": [31, 45, 74, 161, 207, 238, 325, 358, 427, 471, 483, 512, 610, 620, 621, 666, 685, 688], "init_point_longitude_latitud": [31, 471], "point_altitud": [31, 35, 387, 471, 475], "init_point_altitud": [31, 471], "init": [31, 242, 259, 392, 471, 590, 618, 620], "field_dict": [32, 459, 472], "replace_exist": [32, 46, 47, 48, 472, 484, 485, 486, 616, 620, 621, 665, 666, 668, 673, 680, 681, 688], "add": [32, 46, 47, 169, 173, 226, 228, 233, 236, 237, 238, 239, 251, 252, 253, 255, 257, 265, 267, 268, 270, 272, 287, 289, 294, 297, 298, 299, 316, 318, 326, 327, 330, 331, 332, 349, 351, 359, 360, 363, 364, 365, 434, 437, 438, 440, 442, 459, 472, 484, 485, 611, 612, 613, 617, 620, 621, 636, 642, 643, 645, 654, 655, 657, 663, 665, 666, 667, 668, 673, 681, 687, 688, 690], "replac": [32, 46, 47, 48, 133, 135, 143, 150, 155, 167, 168, 182, 184, 192, 199, 204, 472, 484, 485, 486, 609, 617, 618, 620], "overwrit": [32, 472, 588, 627], "alreadi": [32, 46, 47, 472, 484, 485], "level": [33, 39, 41, 42, 45, 62, 74, 161, 162, 246, 247, 248, 249, 253, 255, 257, 260, 261, 262, 263, 268, 270, 272, 380, 381, 382, 388, 389, 457, 466, 468, 473, 479, 483, 500, 512, 589, 610, 612, 613, 620, 621, 654, 655, 658, 662, 664, 674, 677, 683, 685, 688], "height": [33, 39, 41, 42, 158, 159, 161, 162, 163, 174, 207, 253, 268, 327, 360, 424, 425, 427, 430, 434, 437, 438, 440, 442, 444, 445, 454, 455, 459, 463, 466, 468, 469, 473, 479, 602, 610, 613, 614, 616, 620, 621, 642, 652, 662, 663, 669, 684, 688], "determin": [33, 45, 74, 158, 166, 167, 168, 251, 253, 255, 257, 265, 268, 270, 272, 327, 360, 368, 372, 380, 381, 384, 389, 390, 431, 444, 447, 448, 449, 451, 452, 454, 466, 468, 473, 483, 512, 588, 589, 596, 602, 605, 613, 614, 620, 621, 665, 673, 688], "same": [33, 45, 47, 55, 56, 57, 74, 123, 126, 135, 150, 166, 184, 199, 238, 327, 360, 378, 384, 388, 389, 390, 427, 444, 445, 454, 457, 463, 473, 483, 485, 493, 494, 495, 512, 563, 588, 590, 603, 607, 610, 614, 617, 618, 621, 632, 654, 655, 662, 665, 666, 679, 684, 688, 690], "interpol": [33, 57, 120, 124, 226, 233, 237, 238, 239, 251, 255, 257, 268, 270, 272, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 374, 380, 426, 427, 434, 437, 438, 440, 442, 455, 462, 463, 468, 473, 495, 602, 614, 620, 621, 665, 666, 683, 688], "extrapol": [33, 120, 124, 226, 233, 237, 238, 239, 255, 257, 268, 270, 272, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 473, 614], "boundari": [33, 120, 124, 170, 244, 245, 265, 360, 462, 473, 563, 614, 667], "center": [33, 45, 57, 74, 119, 120, 121, 123, 124, 126, 167, 226, 231, 233, 237, 238, 239, 252, 254, 255, 256, 257, 267, 268, 269, 270, 271, 272, 287, 292, 294, 298, 299, 302, 316, 321, 326, 327, 331, 332, 349, 354, 359, 360, 364, 365, 380, 382, 420, 421, 422, 434, 437, 438, 440, 442, 473, 483, 495, 512, 559, 563, 578, 610, 612, 613, 614, 616, 617, 642, 673, 681, 685], "2d": [33, 55, 56, 57, 120, 378, 388, 459, 462, 473, 493, 494, 495, 578, 610, 614, 627, 630, 635, 636, 640, 662, 685, 686], "point_": [36, 37, 476, 477], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 144, 145, 193, 194, 417, 419, 468, 478, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 610, 614, 621, 688], "xarrai": [39, 242, 251, 253, 369, 424, 425, 479, 579, 592, 610, 620, 658, 663, 673, 677, 687], "netcdf4": [40, 381, 386, 387, 480, 610, 611, 620, 652, 677, 679, 687, 690], "arm_time_vari": [40, 386, 387, 480], "arm_alt_lat_lon_vari": [40, 387, 480], "save": [40, 214, 226, 228, 233, 237, 238, 239, 246, 260, 275, 287, 289, 294, 298, 299, 304, 316, 318, 326, 327, 331, 332, 337, 349, 351, 359, 360, 364, 365, 369, 387, 389, 480, 614, 616, 617, 677, 678], "netcdf4_class": [40, 386, 387, 480], "netcdf3_class": [40, 386, 387, 480], "netcdf3_64bit": [40, 386, 387, 480], "base_tim": [40, 386, 387, 480, 613, 663], "time_offset": [40, 386, 387, 480, 613, 663], "alt": [40, 56, 387, 480, 494, 613, 614, 618, 620], "lat": [40, 56, 122, 123, 124, 125, 126, 251, 252, 253, 254, 255, 256, 257, 267, 269, 270, 271, 272, 323, 325, 327, 356, 358, 387, 388, 434, 440, 442, 480, 494, 610, 613, 614, 617, 618, 620, 643, 645, 658, 683], "lon": [40, 56, 122, 123, 124, 125, 126, 251, 252, 253, 254, 255, 256, 257, 267, 269, 270, 271, 272, 323, 325, 327, 356, 358, 387, 388, 434, 440, 442, 480, 494, 610, 613, 614, 617, 618, 620, 645, 658], "speed": [41, 42, 427, 468, 469, 578, 613, 614, 616, 620, 621, 669, 688], "direct": [41, 62, 384, 460, 468, 469, 500, 620, 621, 669, 688], "horizont": [41, 42, 43, 44, 45, 74, 160, 164, 165, 166, 226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 266, 268, 270, 272, 287, 288, 289, 294, 298, 299, 316, 317, 318, 326, 327, 331, 332, 349, 350, 351, 359, 360, 364, 365, 373, 374, 424, 425, 468, 483, 512, 602, 612, 613, 616, 620, 621, 645, 655, 674, 685, 688], "wind": [41, 42, 43, 44, 166, 167, 373, 374, 468, 469, 602, 612, 613, 614, 616, 620, 621, 669, 688], "profil": [41, 166, 373, 374, 434, 437, 438, 440, 442, 455, 461, 462, 463, 464, 579, 602, 620, 621, 628, 630, 661, 662, 670, 686, 688], "1d": [41, 42, 120, 124, 459, 580, 610, 620, 685], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 126, 212, 273, 302, 324, 327, 335, 357, 360, 416, 417, 419, 420, 421, 422, 423, 426, 427, 430, 444, 454, 457, 460, 463, 466, 468, 494, 495, 496, 559, 590, 603, 613, 614, 620, 621, 636, 669, 683, 685, 688], "abov": [41, 42, 45, 47, 74, 130, 131, 146, 160, 161, 162, 166, 169, 170, 171, 172, 173, 179, 180, 195, 207, 208, 209, 210, 231, 232, 292, 293, 321, 322, 354, 355, 368, 427, 430, 443, 444, 454, 468, 483, 485, 512, 579, 588, 589, 591, 592, 610, 611, 612, 613, 620, 621, 623, 630, 636, 653, 655, 661, 662, 669, 670, 673, 677, 679, 681, 686, 688, 690], "sea": [41, 42, 45, 74, 468, 483, 512, 613, 620, 621, 688], "were": [41, 42, 133, 135, 143, 182, 184, 192, 468, 612, 614, 616, 617, 621, 688], "sampl": [41, 42, 159, 163, 468, 469, 470, 564, 566, 567, 589, 610, 612, 613, 618, 620, 621, 632, 633, 642, 664, 667, 669, 677, 688], "per": [41, 42, 43, 44, 58, 166, 369, 427, 468, 496, 560, 561, 562, 621, 688], "second": [41, 42, 43, 44, 47, 58, 119, 166, 384, 392, 416, 462, 468, 485, 496, 588, 599, 600, 610, 613, 616, 621, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 684, 685, 688], "north": [41, 45, 74, 251, 253, 265, 327, 360, 483, 512, 579, 592, 610, 613, 614, 647, 685], "east": [41, 226, 237, 251, 287, 298, 316, 331, 349, 364, 579, 592, 610, 613, 614, 647], "u_wind": [41, 42, 468, 469, 621, 669, 688], "compon": [41, 42, 43, 44, 443, 613, 621, 637, 688], "v_wind": [41, 42, 468, 469, 621, 669, 688], "classmethod": 42, "_rang": [45, 74, 436, 483, 512], "scan_typ": [45, 74, 212, 225, 273, 286, 302, 315, 335, 348, 483, 512, 618, 685], "sweep_numb": [45, 74, 483, 512, 613, 620, 652, 679, 685], "sweep_mod": [45, 74, 375, 483, 512, 613, 620, 679, 685], "fixed_angl": [45, 74, 212, 273, 302, 335, 483, 512, 613, 618, 620, 652, 653, 657, 679, 685], "sweep_start_ray_index": [45, 74, 483, 512, 613, 679, 685], "sweep_end_ray_index": [45, 74, 483, 512, 613, 679, 685], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 121, 212, 226, 228, 233, 237, 238, 239, 255, 257, 268, 270, 272, 273, 287, 289, 294, 298, 299, 302, 316, 318, 326, 327, 331, 332, 335, 349, 351, 359, 360, 364, 365, 384, 424, 437, 440, 441, 462, 483, 490, 495, 506, 512, 534, 582, 588, 596, 610, 613, 614, 616, 617, 620, 636, 637, 664, 679, 685], "altitude_agl": [45, 74, 483, 512, 613, 685], "target_scan_r": [45, 74, 483, 512, 620, 685], "rays_are_index": [45, 74, 483, 512], "ray_angle_r": [45, 74, 483, 512], "scan_rat": [45, 74, 390, 483, 512, 620, 685], "antenna_transit": [45, 56, 57, 74, 143, 155, 192, 204, 226, 233, 237, 238, 239, 273, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 483, 494, 495, 512, 614, 685], "instrument_paramet": [45, 74, 166, 390, 459, 483, 512, 613, 616, 668, 681, 685], "radar_calibr": [45, 74, 483, 512, 685], "rotat": [45, 74, 212, 483, 512], "tilt": [45, 74, 212, 238, 327, 360, 464, 483, 512, 614, 620, 633, 651, 658], "roll": [45, 74, 212, 384, 483, 512, 601, 606], "drift": [45, 74, 212, 483, 512], "pitch": [45, 74, 212, 483, 512], "georefs_appli": [45, 74, 483, 512], "antenna": [45, 56, 57, 74, 119, 120, 121, 143, 155, 192, 204, 207, 210, 226, 233, 237, 238, 239, 273, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 432, 441, 483, 494, 495, 512, 614, 620, 625, 630, 635, 636, 637, 638, 639, 677, 683, 685], "structur": [45, 74, 390, 443, 454, 466, 483, 512, 618, 632, 665, 666, 684], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 128, 162, 167, 168, 171, 177, 207, 208, 209, 210, 239, 299, 332, 365, 369, 388, 422, 426, 427, 438, 443, 444, 454, 460, 483, 488, 489, 490, 492, 493, 494, 495, 496, 512, 593, 612, 613, 614, 617, 620, 621, 625, 629, 630, 632, 673, 677, 681, 684, 685, 686, 688], "global": [45, 74, 483, 512, 610, 637, 685, 687], "4": [45, 74, 119, 120, 375, 378, 423, 429, 443, 459, 463, 483, 512, 610, 611, 612, 613, 617, 619, 621, 632, 637, 640, 642, 652, 653, 654, 655, 657, 658, 662, 665, 666, 668, 669, 673, 674, 677, 684, 688], "repres": [45, 74, 166, 424, 425, 459, 483, 512, 560, 561, 607, 617, 620, 662, 666], "under": [45, 74, 166, 167, 168, 427, 483, 512, 617, 620, 621, 665, 666, 677, 687, 688], "sub": [45, 74, 483, 512, 610, 620], "convent": [45, 74, 166, 483, 512, 610, 613, 614, 632, 677, 685], "meta_group": [45, 74, 483, 512, 685], "scan": [45, 74, 117, 158, 159, 163, 166, 167, 168, 169, 212, 225, 226, 228, 239, 273, 286, 287, 289, 299, 302, 315, 316, 318, 332, 335, 348, 349, 351, 365, 380, 424, 432, 483, 512, 555, 560, 561, 588, 590, 596, 602, 607, 610, 611, 612, 613, 617, 620, 636, 648, 649, 659, 662], "ppi": [45, 74, 167, 168, 169, 170, 225, 229, 233, 286, 290, 294, 315, 319, 326, 327, 348, 352, 359, 360, 424, 425, 437, 440, 462, 483, 512, 560, 561, 565, 568, 571, 581, 582, 588, 610, 611, 614, 617, 620, 630, 635, 640, 641, 645, 646, 658, 660, 672, 674, 676, 677, 685, 686], "rhi": [45, 74, 225, 226, 237, 286, 287, 298, 315, 316, 331, 348, 349, 364, 425, 437, 440, 462, 483, 512, 561, 569, 572, 581, 582, 588, 611, 620, 630, 641, 660, 662, 677, 685, 686], "sector": [45, 74, 483, 512, 610, 620, 685], "multipl": [45, 74, 443, 483, 512, 611, 612, 620, 621, 630, 635, 641, 654, 660, 684, 686, 688, 690], "mode": [45, 62, 74, 371, 433, 441, 483, 500, 512, 610, 613, 620, 621, 662, 685, 687, 688], "ground": [45, 74, 432, 438, 483, 512, 613, 614, 618, 632], "target": [45, 74, 388, 483, 512, 564, 566, 567, 568, 569, 570, 571, 572, 579, 590, 591, 592, 603, 613, 685], "angl": [45, 51, 52, 74, 119, 120, 121, 212, 226, 238, 273, 287, 302, 316, 335, 349, 437, 440, 441, 462, 464, 483, 489, 490, 512, 574, 575, 576, 577, 579, 581, 582, 588, 590, 591, 599, 600, 607, 610, 613, 620, 637, 657, 659, 669, 679, 685], "thr": [45, 74, 483, 512], "index": [45, 60, 74, 89, 171, 209, 239, 253, 255, 257, 268, 270, 272, 299, 332, 365, 388, 416, 432, 464, 483, 498, 512, 527, 610, 612, 613, 614, 616, 617, 620, 678], "rays_per_sweep": [45, 66, 74, 94, 483, 504, 512, 532, 560, 561], "upon": [45, 74, 171, 207, 208, 209, 210, 483, 512, 612, 616, 620], "prior": [45, 47, 74, 170, 172, 173, 226, 233, 236, 237, 238, 239, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 384, 483, 485, 512, 614, 623, 627, 633, 677], "init_rays_per_sweep": [45, 74, 483, 512], "intend": [45, 74, 438, 483, 512, 617], "rate": [45, 74, 429, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 459, 483, 512, 620, 665, 666], "whether": [45, 74, 133, 182, 369, 375, 423, 483, 512, 613, 614, 684], "regular": [45, 74, 389, 434, 437, 438, 440, 442, 483, 512, 614, 618, 642, 662], "angular": [45, 74, 483, 512, 578, 599, 600], "resolut": [45, 74, 226, 228, 229, 233, 234, 237, 238, 239, 265, 287, 289, 290, 294, 295, 298, 299, 316, 318, 319, 326, 327, 328, 331, 332, 349, 351, 352, 359, 360, 361, 364, 365, 380, 427, 434, 437, 438, 440, 442, 443, 444, 454, 460, 466, 483, 512, 563, 612, 613, 614, 618, 633, 648, 651, 673, 674, 681, 683, 684], "express": [45, 74, 483, 512], "360": [45, 74, 169, 170, 328, 361, 483, 512, 588, 620, 669, 679, 685], "represent": [45, 74, 483, 512], "forbidden": [45, 74, 483, 512], "plane": [45, 74, 388, 424, 425, 483, 512, 610, 685], "180": [45, 74, 121, 123, 483, 512, 588, 610, 612, 613, 621, 666, 679, 688], "gate_z": [45, 57, 74, 483, 495, 512], "gate_x": [45, 57, 74, 483, 495, 512], "gate_i": [45, 57, 74, 483, 495, 512], "system": [45, 74, 122, 123, 124, 172, 173, 371, 380, 388, 418, 423, 483, 512, 617, 620, 621, 687, 688], "assum": [45, 74, 119, 120, 166, 169, 457, 460, 462, 463, 483, 512, 588, 612, 616], "earth": [45, 74, 119, 120, 123, 126, 483, 512, 590, 603, 610, 614], "radiu": [45, 74, 119, 120, 123, 126, 420, 421, 422, 423, 426, 427, 444, 454, 466, 483, 512, 590, 603, 665, 683], "model": [45, 74, 119, 120, 167, 381, 387, 443, 483, 512, 613, 667], "init_gate_x_y_z": [45, 74, 483, 512], "gate_latitud": [45, 56, 64, 74, 92, 483, 494, 502, 512, 530, 610], "gate_longitud": [45, 56, 64, 74, 92, 483, 494, 502, 512, 530, 610, 679], "init_gate_longitude_latitud": [45, 74, 483, 512, 679], "gate_altitud": [45, 56, 63, 74, 91, 483, 494, 501, 512, 529, 610], "init_gate_altitud": [45, 74, 483, 512, 679], "actual": [45, 74, 384, 388, 423, 443, 483, 512, 617, 690], "flag": [45, 74, 166, 273, 384, 461, 462, 466, 483, 512, 596, 610, 618, 620, 690], "transit": [45, 56, 57, 74, 143, 155, 171, 192, 204, 208, 209, 226, 233, 237, 238, 239, 273, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 438, 440, 461, 483, 494, 495, 512, 614, 620], "ye": [45, 74, 166, 483, 512], "about": [45, 74, 483, 512, 610, 612, 618, 619, 620], "aircraft": [45, 74, 238, 384, 483, 512, 579], "longitudin": [45, 74, 238, 249, 257, 262, 263, 272, 483, 512], "vertic": [45, 74, 165, 166, 226, 227, 228, 233, 237, 238, 239, 247, 250, 251, 253, 255, 257, 266, 268, 270, 272, 287, 288, 289, 294, 298, 299, 316, 317, 318, 326, 327, 331, 332, 349, 350, 351, 359, 360, 364, 365, 388, 424, 425, 434, 437, 438, 440, 442, 445, 457, 459, 464, 483, 512, 579, 596, 607, 610, 612, 617, 620, 655, 662, 667, 668, 669, 674], "orthogon": [45, 74, 483, 512], "platform": [45, 74, 483, 512, 610, 623], "right": [45, 74, 483, 512, 612, 615, 616, 617, 618, 620, 642, 643, 662, 677], "wing": [45, 74, 483, 512], "down": [45, 74, 483, 512, 608, 612], "track": [45, 74, 483, 512, 610, 614, 617, 620], "compass": [45, 74, 483, 512], "clockwis": [45, 74, 483, 512], "nose": [45, 74, 483, 512, 620], "had": [45, 74, 389, 483, 512, 618, 620, 632, 690], "georefer": [45, 74, 483, 512], "lead": [45, 74, 483, 512, 614, 636], "centric": [45, 74, 483, 512], "avaiabl": [45, 74, 483, 512], "radar_paramet": [45, 74, 483, 512, 613], "subconvent": [45, 74, 483, 512], "calibr": [45, 74, 447, 483, 512, 613], "ngate": [45, 55, 74, 483, 493, 512, 560, 561, 562, 610, 620, 679, 685], "nrai": [45, 55, 74, 436, 483, 493, 512, 562, 591, 620, 679, 685], "nsweep": [45, 74, 483, 512, 560, 561, 637, 652, 653, 669, 685], "loos": [46, 47, 484, 485, 598], "existing_field_nam": [47, 485], "note": [47, 119, 133, 135, 143, 150, 155, 162, 166, 170, 182, 184, 192, 199, 204, 253, 327, 369, 375, 378, 379, 389, 424, 425, 427, 443, 457, 459, 460, 468, 485, 588, 611, 614, 618, 620, 621, 632, 633, 637, 645, 665, 666, 668, 687, 688], "made": [47, 386, 431, 485, 607, 611, 613, 614, 617, 621, 622, 688], "done": [47, 166, 170, 466, 485, 621, 623, 679, 687, 688, 690], "both": [47, 166, 171, 209, 372, 457, 458, 459, 485, 610, 614, 617, 620, 621, 633, 636, 637, 639, 643, 659, 666, 677, 683, 684, 687, 688], "numpi": [47, 135, 150, 163, 184, 199, 485, 598, 610, 612, 613, 614, 616, 618, 620, 621, 623, 627, 636, 638, 642, 644, 646, 651, 654, 655, 657, 662, 663, 665, 666, 667, 668, 669, 677, 679, 680, 681, 683, 684, 685, 687, 688, 690], "see": [47, 120, 128, 166, 177, 225, 239, 251, 254, 256, 265, 269, 271, 286, 299, 315, 327, 332, 348, 360, 365, 378, 386, 387, 427, 443, 444, 454, 457, 466, 485, 610, 612, 614, 616, 618, 620, 621, 632, 633, 642, 662, 665, 666, 677, 679, 681, 683, 684, 688], "how": [47, 384, 386, 387, 485, 610, 611, 612, 613, 614, 616, 618, 620, 622, 627, 632, 633, 642, 643, 644, 645, 662, 668, 677, 680, 683, 684, 690], "reflectivity_copi": [47, 485], "gatefilt": [48, 160, 161, 162, 166, 167, 168, 169, 170, 171, 173, 207, 208, 209, 210, 226, 233, 236, 237, 238, 239, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 416, 426, 427, 432, 460, 461, 462, 464, 468, 469, 486, 610, 612, 614, 616, 618, 620, 621, 628, 636, 638, 639, 643, 644, 662, 664, 673, 678, 681, 688], "updat": [48, 158, 486, 588, 611, 615, 616, 620, 621, 645, 665, 677, 688], "mask": [48, 133, 135, 139, 143, 150, 154, 155, 158, 166, 167, 168, 169, 171, 182, 184, 188, 192, 199, 203, 204, 207, 208, 209, 210, 226, 233, 236, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 380, 381, 382, 427, 432, 434, 437, 438, 440, 442, 445, 463, 486, 563, 593, 598, 614, 618, 620, 625, 629, 630, 636, 638, 644, 662, 665, 666, 668, 673, 678, 679, 680, 685, 686], "filter": [48, 128, 133, 135, 143, 150, 155, 166, 167, 168, 169, 170, 171, 226, 233, 237, 238, 239, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 416, 426, 427, 431, 460, 461, 462, 486, 610, 612, 614, 616, 618, 620, 627, 628, 636, 638, 639, 643, 644, 662, 664, 673, 681, 684], "equal": [48, 122, 124, 125, 134, 135, 141, 149, 150, 153, 158, 167, 183, 184, 190, 198, 199, 202, 360, 378, 389, 443, 466, 468, 486, 588, 614, 646, 662, 665, 666, 667, 684], "condit": [48, 128, 133, 135, 143, 150, 155, 166, 177, 182, 184, 192, 199, 204, 389, 449, 486, 610, 628, 680, 684], "append": [48, 486, 616, 617, 618, 620, 669], "filtered_": [48, 486], "prefix": [48, 481, 486], "check": [49, 58, 77, 167, 168, 169, 170, 383, 431, 443, 463, 487, 496, 515, 590, 603, 607, 612, 613, 616, 618, 620, 621, 623, 677, 687, 688, 689], "keyerror": [49, 77, 399, 400, 410, 411, 487, 515, 687], "array_lik": [50, 488, 595], "view": [51, 52, 54, 392, 397, 398, 404, 408, 409, 414, 489, 490, 492, 610, 618, 643, 681, 683, 685], "possibl": [51, 52, 54, 384, 489, 490, 492, 589, 614, 616, 618, 620, 624, 642, 662, 665, 666, 681, 683], "underli": [51, 52, 54, 226, 233, 237, 238, 239, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 372, 489, 490, 492, 614, 677], "get_gate_x_y_z": [54, 492, 654, 655], "obtain": [54, 57, 492, 495, 618, 621, 669, 679, 688], "plot": [54, 57, 211, 212, 213, 214, 215, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 434, 437, 438, 440, 442, 464, 469, 492, 495, 610, 611, 620, 625, 626, 628, 629, 632, 633, 636, 637, 638, 639, 660, 661, 662, 663, 665, 666, 668, 670, 672, 673, 676, 677, 679, 680, 681, 683, 684, 686], "correct": [54, 57, 177, 207, 208, 209, 210, 378, 455, 460, 492, 495, 565, 610, 612, 616, 620, 621, 624, 627, 628, 629, 633, 645, 662, 667, 673, 677, 681, 686, 688], "spatial": [54, 57, 166, 492, 495, 610, 683], "context": [54, 57, 492, 495, 612, 644, 663], "request": [54, 124, 380, 426, 427, 458, 492, 614, 620, 621, 622, 623, 677, 688], "area": [55, 226, 228, 233, 237, 238, 239, 240, 287, 289, 294, 298, 299, 300, 316, 318, 326, 327, 331, 332, 333, 349, 351, 359, 360, 364, 365, 366, 443, 462, 466, 493, 593, 610, 612, 614, 616], "squar": [55, 431, 457, 460, 468, 493], "assumpt": [55, 460, 493], "size": [55, 162, 163, 166, 167, 169, 170, 208, 229, 290, 319, 352, 422, 424, 425, 426, 427, 431, 444, 445, 453, 454, 460, 462, 493, 563, 578, 606, 613, 645, 658, 663, 665, 666], "m": [55, 58, 121, 168, 207, 210, 214, 275, 304, 337, 423, 427, 431, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 454, 457, 459, 460, 461, 464, 466, 493, 496, 578, 579, 593, 604, 610, 612, 613, 614, 616, 617, 618, 620, 621, 623, 632, 644, 646, 655, 662, 665, 666, 668, 669, 673, 677, 687, 688], "reset_gate_coord": [56, 494], "filter_transit": [56, 57, 226, 233, 237, 238, 239, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 494, 495, 614], "With": [56, 57, 494, 495, 677, 678, 679], "therefor": [56, 57, 460, 494, 495, 610, 681, 685], "more": [56, 57, 62, 167, 170, 388, 423, 426, 427, 432, 443, 444, 454, 466, 494, 495, 500, 581, 582, 610, 611, 612, 613, 614, 615, 618, 620, 621, 627, 636, 642, 654, 655, 662, 677, 681, 685, 688], "effici": [56, 57, 426, 443, 494, 495, 677, 681], "than": [56, 57, 158, 167, 173, 226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 443, 444, 445, 454, 460, 494, 495, 588, 593, 612, 613, 614, 618, 662, 665, 690], "through": [56, 57, 251, 448, 459, 494, 495, 613, 614, 616, 619, 621, 636, 642, 688], "No": [56, 57, 168, 226, 233, 237, 238, 239, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 388, 427, 494, 495, 614, 617], "get_field": [57, 495, 654, 655], "check_uniform": [58, 496], "lookuperror": [58, 496], "except": [58, 388, 405, 496, 614, 617, 620, 644, 683], "skip": [58, 167, 168, 383, 431, 496, 612, 617, 620, 621, 688], "nyquist_veloc": [58, 167, 168, 390, 496, 613, 616, 668, 681, 685], "slice": [59, 71, 88, 99, 254, 255, 256, 257, 269, 270, 271, 272, 497, 509, 526, 537, 658, 683, 685], "_io": [62, 500], "textiowrapp": [62, 500], "encod": [62, 389, 500, 620], "utf": [62, 500], "compact": [62, 500], "c": [62, 119, 123, 126, 160, 162, 165, 166, 168, 265, 360, 434, 437, 443, 447, 449, 456, 459, 460, 461, 462, 464, 469, 500, 565, 610, 614, 616, 618, 620, 621, 636, 666, 668, 677, 680, 683, 687, 688, 690], "f": [62, 265, 360, 403, 413, 500, 610, 611, 612, 613, 614, 616, 617, 618, 637, 642, 644, 652, 653, 657, 662, 665, 666, 677, 690], "minim": [62, 460, 466, 500], "everyth": [62, 500, 614, 617, 621, 633, 688], "screen": [62, 500], "gate_": [65, 93, 503, 531], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 163, 403, 413, 460, 462, 505, 506, 507, 508, 509, 510, 511, 533, 534, 535, 536, 537, 538, 539, 616, 685], "over": [69, 72, 73, 97, 100, 101, 163, 166, 167, 207, 226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 443, 444, 454, 507, 510, 511, 535, 538, 539, 589, 610, 614, 616, 617, 620, 636, 665, 666, 669, 677, 680, 685], "npulses_max": [74, 512, 562], "velocity_bin": [74, 512], "simpl": [117, 416, 555, 620, 680, 681], "vpt": [117, 217, 225, 239, 278, 286, 299, 307, 315, 332, 340, 348, 365, 555, 596, 613, 620], "mean": [117, 119, 434, 437, 438, 440, 468, 555, 563, 574, 575, 580, 589, 594, 599, 600, 610, 613, 620, 621, 624, 632, 633, 662, 684, 685, 688], "kilomet": [119, 424, 444, 454], "equat": [119, 460, 589, 610, 620], "28": [119, 610, 612, 614, 620, 665, 666, 669], "b": [119, 368, 429, 443, 444, 454, 461, 469, 610, 611, 612, 613, 618, 620, 621, 666, 677, 688], "doviak": 119, "zrnic": [119, 440], "sqrt": [119, 123, 610, 654, 655, 669], "r": [119, 122, 123, 124, 125, 126, 166, 168, 172, 173, 218, 231, 232, 252, 267, 279, 292, 293, 308, 321, 322, 323, 324, 341, 354, 355, 356, 357, 429, 434, 438, 443, 444, 445, 448, 451, 452, 453, 454, 466, 468, 589, 593, 610, 621, 632, 646, 654, 655, 662, 665, 666, 668, 688], "sin": [119, 123, 126, 610, 612], "theta_": 119, "arcsin": [119, 123, 612], "frac": 119, "theta_a": 119, "arc": [119, 590], "length": [119, 172, 173, 460, 612, 614, 620, 668], "effect": [119, 133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 238, 426, 427, 612, 637, 654, 662], "taken": [119, 172, 173, 226, 287, 316, 349, 565, 581, 582, 589, 594, 595, 647], "6371": [119, 123, 126, 590, 603, 612], "km": [119, 123, 126, 212, 229, 234, 235, 241, 273, 290, 295, 296, 301, 302, 319, 328, 329, 334, 335, 352, 360, 361, 362, 367, 369, 425, 436, 443, 444, 454, 459, 460, 563, 590, 603, 611, 612, 613, 614, 618, 637, 647, 652, 653, 655, 662, 663, 674, 683], "doppler": [119, 166, 167, 168, 468, 589, 613, 621, 625, 629, 630, 647, 657, 662, 677, 685, 686, 688], "edit": [119, 619, 620, 621, 688], "1993": 119, "21": [119, 433, 453, 610, 612, 616], "vector": [120, 124, 226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 436, 457, 459, 610, 612, 614, 620], "util": [120, 162, 166, 167, 238, 447, 470, 613, 618, 620, 621, 633, 646, 659, 663, 665, 666, 677, 688], "antenna_to_cartesian": [120, 620], "detail": [120, 128, 166, 177, 251, 265, 327, 360, 386, 387, 423, 427, 444, 454, 610, 612, 614, 616, 622, 623, 662, 665, 666, 677, 685], "cartograph": [122, 123, 124, 125, 126, 335], "differ": [122, 124, 125, 166, 368, 416, 424, 425, 443, 444, 448, 454, 460, 611, 612, 613, 614, 618, 620, 621, 630, 632, 636, 662, 665, 666, 672, 683, 687, 688], "pass": [122, 124, 125, 166, 167, 168, 225, 226, 233, 237, 238, 239, 251, 253, 255, 257, 265, 268, 270, 272, 286, 287, 294, 298, 299, 315, 316, 323, 324, 325, 326, 327, 328, 331, 332, 348, 349, 356, 357, 358, 359, 360, 361, 364, 365, 369, 371, 372, 380, 382, 423, 427, 460, 612, 614, 620, 623, 632, 633, 644, 680, 683], "desir": [122, 124, 125, 133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 392, 438, 444, 454, 468, 558, 604, 612, 613, 663, 684], "6370997": [123, 126], "rho": 123, "arctan2": [123, 669], "correspond": [123, 126, 144, 145, 193, 194, 225, 253, 268, 286, 315, 348, 373, 399, 410, 424, 427, 579, 589, 591, 612, 614, 621, 632, 646, 681, 685, 688], "typic": [123, 126, 128, 133, 135, 143, 150, 155, 167, 177, 182, 184, 192, 199, 204, 388, 423, 426, 637, 690], "snyder": [123, 126], "manual": [123, 126, 617, 618, 620, 623, 677], "geolog": [123, 126], "survei": [123, 126], "profession": [123, 126], "paper": [123, 126, 677], "1395": [123, 126, 620], "1987": [123, 126], "pp": [123, 126, 434, 437, 438, 440], "191": [123, 126], "202": [123, 126], "find": [124, 167, 170, 416, 423, 426, 427, 454, 455, 610, 614, 616, 618, 620, 633, 666, 677, 690], "arcco": 126, "exclude_bas": [128, 177], "boolean": [128, 135, 144, 145, 150, 177, 184, 193, 194, 199, 368, 444, 454, 620, 684], "variou": [128, 169, 171, 177, 207, 208, 209, 210, 579, 592, 612, 620, 630, 661, 677], "exclude_below": [128, 177, 610, 612, 616, 618, 636, 664, 673, 684], "suggest": [128, 177, 611, 620], "begin": [128, 166, 167, 168, 172, 173, 177, 214, 216, 233, 237, 275, 277, 294, 298, 304, 306, 326, 331, 337, 339, 359, 364, 378, 379, 382, 384, 620], "import": [128, 177, 464, 468, 469, 481, 611, 617, 618, 620, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 679, 680, 681, 683, 684, 685, 687], "radar_fil": [128, 177, 617, 628, 642, 645], "nc": [128, 177, 610, 611, 613, 618, 620, 626, 636, 637, 639, 642, 643, 644, 645, 649, 651, 652, 653, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 679, 680, 684], "10": [128, 138, 158, 159, 162, 163, 169, 172, 173, 177, 187, 423, 427, 433, 434, 435, 440, 444, 445, 448, 449, 450, 454, 459, 461, 462, 579, 593, 610, 612, 613, 614, 616, 617, 618, 621, 626, 628, 629, 636, 637, 638, 642, 644, 646, 647, 649, 651, 654, 655, 658, 660, 662, 665, 666, 668, 669, 673, 676, 677, 679, 680, 681, 683, 684, 685, 686, 688], "normalized_coherent_pow": [128, 177, 610, 684], "75": [128, 177, 240, 300, 333, 366, 388, 444, 454, 459, 610, 616, 636, 654, 662, 665, 679, 683, 684], "exclude_mask": [130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 179, 180, 182, 183, 184, 185, 186, 187, 190, 191, 192, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 638, 644], "op": [130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 613], "inclus": [130, 131, 133, 136, 142, 146, 148, 151, 156, 179, 180, 182, 185, 191, 195, 197, 200, 205, 423, 427, 559, 620, 642], "toa": [131, 180, 426, 427, 430, 463], "below": [133, 148, 166, 169, 171, 172, 173, 182, 197, 207, 208, 209, 210, 226, 233, 236, 237, 238, 239, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 426, 427, 443, 444, 448, 451, 452, 454, 460, 588, 589, 610, 611, 612, 613, 614, 617, 642, 662, 665, 679, 681, 684, 689], "compar": [133, 166, 182, 432, 578, 621, 630, 635, 640, 642, 662, 665, 666, 686, 688], "against": [133, 166, 182, 622, 623, 654], "mark": [133, 143, 144, 145, 155, 166, 182, 192, 193, 194, 204, 611, 617], "exclus": [133, 182, 637], "oper": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 384, 423, 427, 433, 449, 453, 454, 462, 466, 610, 613, 614, 621, 665, 666, 687, 688], "merg": [133, 135, 143, 150, 155, 167, 182, 184, 192, 199, 204, 374, 588, 621, 623, 688], "AND": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204], "OR": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 610], "gener": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 213, 214, 215, 216, 217, 226, 228, 233, 236, 237, 238, 239, 246, 247, 248, 249, 251, 253, 255, 257, 260, 261, 262, 263, 268, 270, 272, 274, 275, 276, 277, 278, 287, 289, 294, 297, 298, 299, 303, 304, 305, 306, 307, 316, 318, 326, 327, 330, 331, 332, 336, 337, 338, 339, 340, 349, 351, 359, 360, 363, 364, 365, 369, 387, 390, 405, 416, 426, 427, 455, 460, 612, 614, 615, 618, 620, 623, 626, 627, 628, 630, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677], "meet": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 386, 677], "result": [133, 135, 143, 150, 155, 163, 166, 167, 168, 182, 184, 192, 199, 204, 226, 233, 236, 237, 238, 239, 255, 257, 268, 270, 272, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 371, 387, 392, 424, 425, 427, 432, 464, 469, 580, 601, 612, 613, 614, 621, 633, 637, 662, 666, 667, 677, 683, 688], "previous": [133, 135, 143, 150, 155, 182, 184, 192, 199, 204, 632, 662, 665], "becaus": [133, 135, 143, 182, 184, 192, 460, 665, 690], "invalid": [133, 135, 137, 143, 171, 182, 184, 186, 192, 207, 208, 209, 210, 610, 618], "shape": [135, 150, 184, 199, 378, 463, 598, 610, 613, 614, 616, 618, 620, 621, 665, 679, 683, 684, 685, 688], "v1": [136, 142, 151, 156, 185, 191, 200, 205, 610, 611, 623, 687], "v2": [136, 142, 151, 156, 185, 191, 200, 205, 621, 688], "insid": [136, 151, 185, 200, 680], "interv": [136, 142, 151, 156, 167, 171, 185, 191, 200, 205, 209, 369, 578, 594, 595, 610, 618, 620], "occur": [137, 157, 170, 186, 206, 380, 381, 610, 681, 685], "nan": [137, 157, 166, 171, 186, 206, 209, 462, 610, 613, 620, 627, 663], "inf": [137, 157, 171, 186, 206, 209, 620], "n_gate": [138, 187], "try": [138, 187, 431, 460, 612, 617, 618, 619, 644, 683, 684], "ring": [138, 187, 234, 235, 295, 296, 328, 329, 361, 362, 369, 612, 637, 638, 644, 651], "artifact": [138, 167, 187, 620, 681, 683], "some": [138, 187, 302, 335, 400, 411, 462, 481, 611, 612, 613, 614, 616, 617, 618, 619, 620, 633, 642, 643, 662, 663, 665, 668, 677, 681, 683, 687], "outsid": [142, 156, 171, 191, 205, 209, 233, 236, 238, 239, 251, 253, 255, 257, 268, 270, 272, 294, 297, 299, 326, 327, 330, 332, 359, 360, 363, 365, 438, 443, 614, 620, 621, 662, 688], "trans_valu": [143, 155, 192, 204], "construct": [143, 155, 192, 204, 427, 613], "element": [144, 145, 166, 167, 168, 169, 170, 193, 194, 390, 424, 425, 426, 427, 431, 463, 578, 594, 595, 599, 600, 612, 613, 614], "NOT": [144, 145, 193, 194], "gate_includ": [144, 193, 684], "lost": [144, 145, 193, 194, 462, 607, 610, 683], "again": [144, 145, 193, 194, 614, 623, 633, 645, 666, 668, 687], "gate_exclud": [145, 194, 684], "noise_threshold": 158, "45": [158, 563, 612, 621, 646, 655, 665, 666, 688], "threshold_offset": 158, "counts_threshold": 158, "12": [158, 425, 610, 612, 613, 617, 618, 619, 629, 632, 637, 645, 652, 662, 663, 666, 677, 680, 684, 685], "primari": [158, 460, 613], "cloud": [158, 159, 163, 371, 380, 443, 460, 612, 613, 621, 623, 625, 629, 630, 631, 634, 677, 686, 688, 690], "threshold": [158, 163, 166, 169, 170, 171, 207, 208, 209, 210, 368, 443, 444, 448, 451, 452, 454, 589, 593, 610, 612, 616, 662, 665, 673, 681, 684], "nois": [158, 159, 163, 165, 174, 430, 436, 439, 589, 613, 618, 620, 627, 662, 681], "detect": [158, 454, 614, 620, 630, 649, 661, 665, 670, 681, 686], "greater": [158, 443, 466, 614, 665], "count": [158, 166, 445, 636, 681, 685], "kollia": [158, 159, 163], "jo": [158, 159, 163], "borqu": [158, 159, 163], "tatarev": [158, 159, 163], "lamer": [158, 159, 163], "n": [158, 159, 163, 166, 431, 443, 448, 459, 578, 610, 612, 613, 614, 616, 618, 632, 636, 637, 646, 657, 659, 663, 665, 666, 671, 677, 690], "bharadwaj": [158, 159, 163, 618], "widen": [158, 159, 163, 662], "johnson": [158, 159, 163, 618], "e": [158, 159, 163, 168, 170, 172, 173, 226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 369, 373, 388, 403, 413, 441, 443, 444, 445, 454, 460, 466, 593, 610, 611, 613, 614, 617, 621, 632, 644, 646, 662, 665, 666, 687, 688], "clothiaux": [158, 159, 163], "2014": [158, 159, 162, 163, 447, 461, 464, 677], "ii": [158, 159, 163, 445, 662, 677, 685], "process": [158, 159, 163, 167, 172, 173, 610, 613, 616, 617, 618, 620, 621, 623, 632, 644, 666, 668, 677, 688], "atmo": [158, 159, 163, 172, 173, 433, 435, 443, 448, 453, 459, 464, 579, 593, 617, 621, 646, 666, 688], "technol": [158, 159, 163, 433, 435, 453, 464, 579], "31": [158, 159, 162, 163, 380, 447, 610, 612, 613, 616, 633, 663], "583": [158, 159, 163, 433, 620], "598": [158, 159, 163, 620], "doi": [158, 159, 163, 433, 435, 444, 445, 448, 449, 450, 454, 459, 461, 462, 579, 593, 610, 613, 614, 616, 618, 621, 646, 662, 665, 666, 677, 679, 680, 681, 683, 684, 685, 688], "1175": [158, 159, 163, 433, 435, 444, 445, 454, 462, 579, 620, 662, 665, 666, 677], "jtech": [158, 159, 163, 437, 440, 579], "d": [158, 159, 162, 163, 168, 214, 275, 304, 337, 392, 393, 395, 397, 398, 399, 400, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 438, 440, 443, 462, 469, 579, 610, 612, 613, 614, 617, 618, 621, 644, 663, 677, 688], "13": [158, 159, 163, 378, 589, 610, 613, 616, 632, 634, 644, 657, 660, 662, 668, 677, 684, 685, 686], "00045": [158, 159, 163], "floor": [159, 163, 174, 430, 627], "z_offset": 160, "doc": [160, 161, 162, 173, 610, 614, 620, 621, 623, 677, 687, 688, 690], "15": [160, 460, 593, 610, 611, 612, 613, 618, 626, 628, 642, 646, 652, 653, 654, 655, 658, 659, 662, 663, 666, 668, 669, 681, 685], "fzl": [160, 161, 162, 172, 173], "4000": [160, 172, 173, 683], "rhv_min": 160, "ncp_min": 160, "a_coef": [160, 162], "06": [160, 610, 612, 616, 617], "beta": [160, 162, 447, 448, 449, 450, 451, 452], "refl_field": [160, 161, 162, 171, 172, 173, 208, 209, 427, 430, 439, 443, 444, 448, 450, 451, 452, 453, 459, 466, 626, 665, 667, 668], "ncp_field": [160, 171, 172, 173, 209, 626], "rhv_field": [160, 171, 172, 173, 208, 209, 459, 626, 667, 668], "spec_at_field": [160, 161, 162], "corr_refl_field": [160, 161, 162], "attenu": [160, 161, 162, 447, 448, 451, 620, 625, 629, 630, 667, 677, 686], "phi": [160, 162, 172, 620, 626], "copol_coeff": [160, 565, 626, 663, 664, 679], "norm_coherent_pow": [160, 565, 626, 679], "proc_dp_phase_shift": [160, 626, 663, 679], "reflectivity_horizont": [160, 166, 565, 611, 626, 636, 642, 645, 649, 651, 652, 653, 657, 659, 662, 663, 664, 665, 666, 674, 679, 680], "supress": [160, 242, 253, 259, 327, 360, 614, 620], "freez": [160, 161, 162, 434, 438], "layer": [160, 161, 162, 207, 210, 388, 448, 460, 464, 563], "combin": [160, 161, 162, 597, 610, 612, 613, 621, 623, 688], "minimum": [160, 171, 172, 173, 208, 209, 210, 226, 228, 233, 236, 237, 238, 239, 287, 289, 294, 297, 298, 299, 316, 318, 326, 327, 330, 331, 332, 349, 351, 359, 360, 363, 364, 365, 369, 388, 423, 427, 434, 437, 438, 440, 441, 443, 444, 445, 454, 559, 563, 580, 589, 610, 612, 614, 617, 618, 620, 662, 665, 683], "normal": [160, 171, 172, 173, 209, 226, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 445, 459, 598, 614, 654, 662], "coher": [160, 171, 172, 173, 209], "power": [160, 162, 171, 172, 173, 209, 438, 447, 448, 449, 450, 451, 452, 610, 613], "zdr_field": [160, 161, 162, 165, 208, 433, 459, 667, 668], "spec_at": [160, 161, 162, 626, 667], "cor_z": [160, 161, 162, 626, 667], "gu": [160, 162], "et": [160, 162, 165, 443, 444, 445, 449, 453, 454, 459, 460, 466, 665, 666], "al": [160, 162, 165, 443, 444, 445, 449, 453, 454, 459, 460, 461, 466, 665, 666], "heavi": [160, 162, 593, 612, 646, 654, 666], "rain": [160, 162, 434, 438, 443, 447, 448, 449, 450, 453, 454, 459, 466, 620, 646, 654, 665, 666, 667, 668], "jamc": [160, 162, 462, 579], "2011": [160, 162, 617, 663], "50": [160, 162, 369, 437, 441, 442, 459, 578, 610, 611, 612, 613, 616, 639, 658, 662, 663, 667, 668, 683, 685], "39": [160, 162, 610, 612, 663], "58": [160, 162, 443, 613, 662, 663], "pia_coef": 161, "pida_coef": 161, "temp_field": [161, 162, 210, 459, 667, 668], "iso0_field": [161, 162, 207, 459], "pia_field": [161, 162], "spec_diff_at_field": [161, 162], "pida_field": [161, 162], "corr_zdr_field": [161, 162], "temp_ref": [161, 162, 459, 667], "linear": [161, 172, 173, 251, 380, 433, 444, 454, 462, 589, 602, 613, 614, 620, 665, 666, 677], "dependec": 161, "comput": [161, 162, 165, 208, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 454, 459, 460, 461, 462, 574, 575, 576, 577, 578, 580, 594, 595, 599, 600, 606, 610, 613, 620, 662, 667, 669, 677], "either": [161, 162, 166, 167, 168, 226, 227, 228, 233, 236, 237, 238, 239, 250, 251, 253, 255, 257, 266, 268, 270, 272, 287, 288, 289, 294, 297, 298, 299, 316, 317, 318, 326, 330, 331, 332, 349, 350, 351, 359, 363, 364, 365, 374, 403, 413, 434, 437, 438, 440, 448, 451, 452, 459, 621, 662, 665, 687, 688], "frequenc": [161, 162, 390, 445, 447, 448, 449, 451, 452, 456, 459, 460, 461, 462, 613, 630, 661, 662, 670, 686], "refl": [161, 162, 652], "integr": [161, 162, 610, 613], "pida_coeff": 161, "0c": [161, 162], "isotherm": [161, 162], "height_over_iso0": [161, 162, 459, 684], "fixed_fzl": [161, 162], "pia_dict": [161, 162], "spec_diff_at": [161, 162, 667], "pida_dict": [161, 162], "cor_zdr": [161, 162, 667], "smooth_window_len": 162, "forumul": 162, "smooth": [162, 170, 460, 590, 603, 614, 654, 655, 683], "window": [162, 166, 172, 173, 208, 431, 462, 468, 578, 588, 601, 606, 620, 621, 677, 688], "expon": [162, 172, 173, 429, 447, 448, 449, 450, 451, 452], "law": [162, 447, 448, 449, 450, 451, 452], "ryzhkov": [162, 434, 435, 437, 447, 464, 579], "potenti": [162, 447, 610, 618], "rainfal": [162, 443, 447, 448, 449, 450, 451, 452, 453, 460, 462, 617], "estim": [162, 207, 210, 228, 289, 318, 351, 424, 433, 436, 447, 448, 449, 450, 451, 452, 453, 460, 461, 462, 464, 579, 589, 613, 620, 665, 666], "mitig": [162, 447], "partial": [162, 447, 620], "beam": [162, 422, 426, 427, 447, 613], "blockag": [162, 447], "network": [162, 167, 382, 447, 612], "jaot": [162, 165], "599": [162, 447], "619": [162, 447, 620], "n_avg": 163, "nfft": 163, "averag": [163, 167, 368, 434, 437, 438, 440, 444, 454, 580, 589, 594, 616, 665, 666, 669], "scalar": [163, 368, 444, 454, 612, 614, 620, 665], "bia": [164, 620], "magnitud": [164, 460, 669, 685], "corrected_field": 164, "urhohv_field": 165, "snr_field": [165, 430, 439], "nh_field": 165, "nv_field": 165, "rhohv_field": [165, 433, 435], "eq": [165, 652], "6": [165, 208, 443, 448, 459, 610, 612, 613, 617, 618, 633, 636, 637, 642, 643, 648, 651, 662, 663, 664, 667, 668, 669, 679, 681, 684, 685], "2006": [165, 633], "subtract": [165, 444, 454], "uncorrect": [165, 610, 673], "snr": [165, 430, 439, 620], "channel": [165, 388, 610, 613, 620, 623], "meteo": 165, "franc": 165, "23": [165, 610, 612, 613, 617, 669], "1340": 165, "1356": [165, 620], "last_radar": 166, "sonde_profil": 166, "filt": 166, "rsl_badval": 166, "131072": 166, "keep_origin": [166, 167, 168], "set_limit": [166, 167, 168, 611, 627, 646, 647, 648, 650, 652, 653, 654, 655, 657, 662, 668], "vel_field": [166, 167, 168, 431, 469, 662, 673, 681], "corr_vel_field": [166, 167, 168], "last_vel_field": 166, "max_shear": 166, "05": [166, 426, 427, 610, 612, 617, 640, 658, 662, 663, 686], "sign": [166, 620, 654, 655, 662], "dealia": [166, 167, 168, 446, 616, 620, 625, 629, 630, 662, 672, 676, 681, 686], "4dd": [166, 620], "univers": [166, 385, 453, 610, 620, 677], "washington": 166, "previou": [166, 327, 360, 614, 618, 620, 623], "sound": [166, 620], "For": [166, 254, 256, 269, 271, 378, 388, 426, 459, 460, 610, 611, 613, 614, 617, 620, 621, 624, 632, 636, 662, 667, 677, 684, 685, 688, 690], "best": [166, 612, 662], "argument": [166, 167, 168, 226, 233, 237, 238, 239, 251, 253, 254, 255, 256, 257, 268, 269, 270, 271, 272, 287, 294, 298, 299, 316, 323, 324, 325, 326, 327, 328, 331, 332, 349, 356, 357, 358, 359, 360, 361, 364, 365, 369, 380, 382, 390, 392, 423, 427, 461, 462, 620, 621, 688], "_fourdd_interfac": 166, "fourdd_dealia": 166, "fine": 166, "tune": [166, 665, 666], "behavior": [166, 327, 360, 378, 392, 614, 620, 624], "fourdd": 166, "document": [166, 254, 256, 265, 269, 271, 327, 360, 381, 386, 387, 602, 608, 611, 613, 614, 615, 618, 621, 622, 677, 683, 688], "dealias": [166, 167, 168, 446, 620, 621, 628, 632, 673, 677, 678, 688], "mean_doppler_veloc": [166, 613, 618, 657, 662, 663, 673, 679], "successfulli": [166, 617], "greatli": 166, "improv": [166, 461, 462, 593, 614, 623, 646, 666], "final": [166, 461, 462, 610, 611, 618, 619, 623, 637, 662, 665], "horizontalwindprofil": [166, 373, 374, 469, 602, 620, 621, 688], "sond": [166, 167, 373, 374, 455, 620, 628], "moment_based_gate_filt": [166, 167, 168, 427, 612], "bergen": 166, "alber": 166, "bad": [166, 460, 461, 462, 466], "rsl": [166, 372, 383, 384, 620, 677, 687], "procedur": [166, 167, 168], "fail": [166, 167, 168, 378, 388, 617, 620, 621, 688], "otherwis": [166, 369, 399, 410, 434, 437, 438, 440, 441, 442, 448, 451, 452, 457, 598, 623], "maxshear": 166, "maximum": [166, 167, 171, 172, 173, 207, 208, 209, 226, 228, 233, 236, 237, 238, 239, 287, 289, 294, 297, 298, 299, 316, 318, 326, 327, 330, 331, 332, 349, 351, 359, 360, 363, 364, 365, 368, 369, 388, 423, 424, 425, 427, 432, 434, 437, 438, 440, 441, 442, 444, 448, 451, 452, 454, 460, 559, 563, 578, 588, 596, 610, 612, 614, 617, 662, 664, 665, 673, 685], "shear": 166, "incorpor": [166, 454, 665, 668], "match": [166, 169, 170, 174, 212, 273, 302, 335, 384, 416, 618, 620, 636, 645, 666], "toward": 166, "neg": [166, 226, 237, 287, 298, 316, 331, 349, 364, 460, 588, 610, 620, 642], "compthresh": 166, "fraction": [166, 424, 425, 445, 612, 617, 662, 665, 685], "continu": [166, 168, 613, 617, 620, 621, 688], "unfold": [166, 167, 172, 173, 460], "compthresh2": 166, "thresh": [166, 448, 451, 452], "adjac": [166, 614], "assign": [166, 459, 612, 620, 665], "question": [166, 370, 427, 614, 677], "ckval": 166, "absolut": [166, 578, 666], "stdthresh": 166, "deviat": [166, 563, 576, 577, 595, 610, 681], "portion": [166, 616, 683], "epsilon": 166, "miss": [166, 459, 460, 461, 462, 466, 610, 620, 633, 668], "maxcount": 166, "allow": [166, 169, 170, 225, 286, 315, 348, 416, 443, 579, 588, 611, 614, 617, 618, 620, 624, 636, 685, 690], "fold": [166, 167, 632], "pass2": 166, "retain": [166, 167, 168, 171, 207, 208, 209, 210, 607], "rm": 166, "what": [166, 176, 427, 610, 613, 614, 616, 617, 618, 619, 620, 621, 632, 642, 673, 679, 681, 684, 688, 690], "left": [166, 325, 358, 612, 614, 616, 618, 642, 645, 662], "proxim": 166, "side": [166, 618, 662], "doubl": [166, 388, 665], "captur": [166, 443, 673], "suffici": [166, 662], "good": [166, 167, 610, 611, 623], "mingood": 166, "ba_mincount": 166, "neighbor": [166, 380, 427, 610, 620, 637, 683], "ba_edgecount": 166, "usuccess": 166, "radialvelvolum": 166, "lastvelvolum": 166, "unfoldedvolum": 166, "sondvolum": 166, "vr_corr": 166, "due": [166, 432, 443, 610, 612, 614, 617, 620, 636, 681, 687, 690], "call": [166, 169, 225, 226, 228, 233, 237, 238, 239, 253, 286, 287, 289, 294, 298, 299, 315, 316, 318, 326, 327, 331, 332, 348, 349, 351, 359, 360, 364, 365, 383, 388, 392, 579, 592, 611, 613, 614, 617, 621, 623, 681, 685, 688, 690], "999": [166, 392, 610, 620], "long": [166, 449, 620, 666, 680, 685], "jame": 166, "houz": [166, 368, 444, 445, 454, 466, 662, 665, 666], "jr": [166, 444, 454, 466, 665, 666], "four": [166, 380, 381, 383], "dealis": 166, "scheme": [166, 368, 423, 444, 454, 460, 611, 665], "2001": [166, 435], "18": [166, 435, 608, 610, 612, 643, 655, 660, 662, 676], "1674": 166, "ref_vel_field": 167, "interval_split": 167, "interval_limit": 167, "skip_between_rai": 167, "100": [167, 169, 171, 209, 229, 234, 251, 258, 290, 295, 319, 352, 369, 390, 427, 469, 610, 612, 613, 614, 616, 639, 643, 654, 655, 660, 662, 669, 686], "skip_along_rai": 167, "nyquist_vel": [167, 168, 616, 662, 673, 681], "check_nyquist_uniform": [167, 168, 431], "rays_wrap_around": [167, 168], "region": [167, 173, 265, 327, 360, 432, 443, 593, 610, 612, 613, 614, 616, 618, 620, 621, 625, 629, 630, 632, 646, 665, 666, 673, 684, 686, 688], "similar": [167, 613, 614, 636, 683], "pair": [167, 251, 380, 392, 400, 405, 411, 612, 679], "accomplish": [167, 384, 630, 672], "problem": [167, 172, 173, 302, 335, 427, 633], "dynam": [167, 610], "reduct": 167, "anchor": 167, "onc": [167, 614, 617, 621, 623, 665, 687, 688, 690], "complet": [167, 620], "simul": [167, 602, 620], "simulated_vel_from_profil": [167, 621, 688], "segment": [167, 323, 324, 356, 357, 620], "split": [167, 593, 610], "larger": [167, 614, 665], "longer": [167, 588, 612, 620, 621, 677, 687, 688], "better": [167, 229, 234, 290, 295, 319, 328, 352, 361, 617, 618, 620, 666, 677, 681], "seem": 167, "compromis": 167, "free": [167, 615, 616, 677], "cover": [167, 610], "entir": [167, 168, 226, 233, 237, 238, 239, 255, 257, 268, 270, 272, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 427, 604, 610, 613, 614, 618, 662], "join": [167, 481, 617, 620], "gap": [167, 169, 170, 683], "connect": [167, 168], "disabl": [167, 168, 171, 207, 208, 209, 210, 617], "across": [167, 612, 620, 662, 664], "so": [167, 226, 237, 287, 298, 316, 331, 349, 364, 384, 427, 610, 613, 614, 616, 617, 618, 620, 621, 627, 632, 633, 662, 665, 677, 688, 690], "individu": [167, 168, 427, 618], "attempt": [167, 168, 386, 387, 620, 668], "de": [167, 168, 358, 571, 572], "alias": [167, 168, 571, 572, 616, 620, 681, 685], "corr_vel": [167, 168], "unwrap_unit": 168, "skip_check": [168, 620], "multi": [168, 620], "unwrap": [168, 172, 173, 620], "independ": 168, "often": [168, 432, 617], "give": [168, 388, 614, 618, 622, 623, 673, 674, 675, 677, 681, 684], "superior": 168, "lower": [168, 251, 253, 255, 257, 268, 270, 272, 443, 613, 617, 618, 637, 638, 639], "contamin": [168, 466], "clutter": [168, 617, 618, 681, 684], "poor": 168, "verif": [168, 579, 620], "appropi": [168, 225, 286, 315, 348], "offer": [168, 611], "extrem": [168, 662], "miguel": 168, "arevallilo": 168, "herraez": 168, "david": [168, 614], "burton": 168, "michael": [168, 614, 618], "lalor": 168, "munther": 168, "gdeisat": 168, "fast": 168, "two": [168, 390, 423, 441, 444, 454, 457, 458, 466, 563, 597, 599, 600, 612, 613, 614, 616, 617, 618, 620, 623, 630, 635, 640, 641, 643, 659, 660, 680, 683, 686], "sort": [168, 612, 616, 617, 619, 620, 644], "reliabl": 168, "follow": [168, 171, 208, 209, 386, 387, 389, 390, 403, 413, 426, 427, 443, 459, 460, 610, 612, 613, 614, 616, 617, 618, 621, 623, 624, 632, 663, 677, 687, 688], "noncontinu": 168, "optic": 168, "vol": [168, 434, 437, 438, 440], "41": [168, 612, 617, 663, 669, 683], "2002": 168, "7437": 168, "abdul": 168, "rahman": 168, "h": [168, 214, 265, 275, 304, 337, 360, 433, 437, 464, 589, 610, 612, 613, 636, 644, 645, 662], "osten": 168, "gorecki": 168, "l": [168, 172, 173, 230, 234, 235, 265, 291, 295, 296, 320, 329, 353, 360, 362, 435, 454, 593, 610, 614, 646, 662, 666], "novak": 168, "ed": 168, "metrologi": 168, "2005": [168, 444, 454, 665, 666], "32": [168, 438, 443, 563, 610, 620, 642, 647, 648, 649, 659, 663, 666, 669, 685], "40": [168, 265, 443, 610, 613, 618, 628, 637, 639, 645, 649, 651, 654, 662, 665, 666, 673], "intern": [168, 614], "societi": [168, 429, 432, 449], "photon": 168, "label_dict": [169, 170], "delta": [169, 170, 461], "despeckl": [169, 620, 662], "identifi": [169, 170, 368, 444, 454, 589, 610, 614, 616, 646, 665, 666, 668, 684], "small": [169, 170, 443, 444, 454, 466, 620, 636, 637, 654], "investig": [169, 170, 464, 632], "scipi": [169, 170, 460, 602, 610, 620, 621, 654, 655, 677, 687, 688, 690], "core": [169, 170, 368, 369, 388, 416, 427, 443, 444, 454, 461, 462, 579, 592, 613, 618, 620, 621, 665, 688], "queri": [169, 170, 427, 610, 614, 618], "speckl": [169, 665], "find_object": 169, "tupl": [169, 170, 226, 228, 231, 232, 233, 236, 237, 238, 239, 241, 251, 253, 255, 257, 268, 270, 272, 287, 289, 292, 293, 294, 297, 298, 299, 301, 316, 318, 321, 322, 326, 327, 330, 331, 332, 334, 349, 351, 354, 355, 359, 360, 363, 364, 365, 367, 400, 411, 423, 424, 425, 427, 431, 457, 458, 559, 578, 598, 614, 620], "contigu": [169, 170], "perman": 169, "deg": [169, 170, 207, 210, 434, 440, 441, 442, 459, 460, 604, 610, 669], "label": [170, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 236, 237, 238, 239, 250, 251, 253, 255, 257, 266, 268, 270, 272, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 292, 293, 294, 297, 298, 299, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 321, 322, 325, 326, 327, 330, 331, 332, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 354, 355, 358, 359, 360, 363, 364, 365, 607, 610, 612, 614, 616, 617, 618, 620, 636, 643, 645, 654, 655, 659, 667], "period": [170, 588, 610, 613, 618, 681], "account": [170, 620], "g": [170, 369, 388, 423, 440, 454, 460, 462, 469], "examin": [170, 371, 384, 387, 613, 616, 621, 677, 688], "box": [170, 388, 627, 667], "alwai": [170, 372, 384, 443, 444, 454, 460, 614, 620, 624, 677], "readi": 170, "min_ncp": [171, 172, 209], "min_rhv": [171, 172, 208, 209], "min_refl": [171, 209], "20": [171, 208, 209, 464, 579, 610, 611, 612, 613, 614, 616, 618, 632, 633, 636, 637, 643, 645, 646, 649, 651, 652, 653, 654, 655, 657, 662, 664, 665, 666, 668, 670, 674, 675, 679, 683, 685, 686], "max_refl": [171, 209], "undesir": [171, 207, 208, 209, 210, 427], "cross": [171, 208, 209, 226, 229, 251, 287, 290, 316, 319, 349, 352, 425, 581, 582, 610, 613, 616, 620, 630, 641, 651, 660, 662, 665, 685, 686], "ratio": [171, 208, 209, 240, 300, 333, 366, 430, 433, 610, 613, 616, 618, 685], "min_rhi": [171, 209], "criteria": [171, 207, 208, 209, 210, 427, 460, 466, 618], "built": [171, 207, 208, 209, 210, 426, 427, 617], "lowest": [171, 207, 208, 209, 210, 432, 463, 616, 617, 632, 636, 663, 665, 666], "greatest": [171, 209], "self_const": [172, 173], "60000": [172, 173, 639, 643, 683], "low_z": [172, 173], "high_z": [172, 173], "53": [172, 173, 610, 612, 616, 669], "min_phidp": [172, 173], "01": [172, 173, 325, 358, 460, 610, 612, 613, 616, 618, 629, 640, 642, 660, 670, 686], "sys_phas": 172, "overide_sys_phas": 172, "nowrap": [172, 173], "really_verbos": [172, 173], "lp_solver": [172, 173], "pyglpk": [172, 173, 620, 677, 687], "kdp_field": [172, 173, 448, 449, 451, 452, 459, 460, 461, 462, 667, 668], "unf_field": [172, 173], "window_len": [172, 173], "proc": [172, 173, 460, 620], "coef": [172, 173, 620], "914": [172, 173, 620], "lp": [172, 173, 620, 677], "consist": [172, 173, 620, 662, 683], "factor": [172, 173, 390, 432, 447, 448, 449, 450, 451, 452, 578, 610, 611, 613, 617, 620, 645, 653, 659, 683], "low": [172, 173, 380, 460, 617, 637, 646], "high": [172, 173, 226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 443, 459, 460, 613, 614, 616, 637, 667, 668], "copolar": [172, 173, 459, 664], "automat": [172, 384, 389, 390, 427, 431, 466, 612, 614, 618, 620, 621, 623, 649, 677, 688], "lpx": [172, 173], "messag": [172, 173, 242, 259, 380, 611, 617, 620, 623, 633], "suppress": [172, 173, 460], "cvxopt": [172, 173, 620, 677, 687], "cylp": [172, 173, 620, 677, 687, 690], "cylp_mp": [172, 173], "modul": [172, 173, 565, 608, 614, 620, 621, 632, 633, 677, 680, 681, 683, 684, 685, 687, 688], "solv": [172, 173, 619, 620], "horizon": [172, 173, 459], "sobel": [172, 173], "worker": [172, 173], "link": [172, 173, 612, 613, 616, 618, 620], "1z": [172, 173], "reproc_phas": [172, 173], "sob_kdp": [172, 173], "recalcul": [172, 173, 679], "giangrand": [172, 173, 677], "mcgraw": [172, 173], "lei": [172, 173], "applic": [172, 173, 226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 388, 444, 454, 601, 614, 616, 621, 688], "program": [172, 173, 620, 621, 677, 688], "tech": [172, 173, 448, 459, 593, 646, 666], "2013": [172, 173, 461, 464, 685], "30": [172, 173, 437, 438, 443, 444, 454, 608, 610, 612, 613, 614, 617, 618, 636, 637, 644, 645, 649, 651, 662, 665, 666, 681], "1716": [172, 173], "system_phas": 173, "ncpt": 173, "first_gate_sysp": 173, "carri": 173, "smaller": [173, 360, 427, 610, 613, 614, 621, 665, 688], "off": [173, 226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 458, 610, 614, 642, 665, 666], "help": [174, 388, 470, 612, 613, 614, 616, 618, 621, 623, 636, 642, 665, 688, 690], "custom": [175, 225, 226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 266, 268, 270, 272, 286, 287, 288, 289, 294, 298, 299, 315, 316, 317, 318, 326, 327, 331, 332, 348, 349, 350, 351, 359, 360, 364, 365, 426, 443, 614, 630, 661, 670, 683, 686], "max_h_iso0": 207, "thick": [207, 210], "400": [207, 210, 620, 679], "beamwidth": [207, 210], "primarili": [207, 210], "melt": [207, 210, 448, 459, 460, 464, 593, 646, 665, 666, 667, 668], "db": [207, 210, 430, 618, 654, 668, 685], "phi_field": 208, "textzdr_field": 208, "textrhv_field": 208, "textphi_field": 208, "textrefl_field": 208, "wind_siz": [208, 431, 606, 681], "7": [208, 378, 459, 468, 606, 608, 610, 612, 613, 614, 616, 617, 621, 623, 638, 643, 646, 651, 658, 662, 668, 684, 685, 688], "max_textphi": 208, "max_textrhv": 208, "max_textzdr": 208, "85": [208, 610, 614, 668, 669], "max_textrefl": 208, "move": [208, 589, 612, 616, 620, 636], "highest": 208, "min_temp": 210, "There": [211, 612, 614, 616, 623, 642, 687, 690], "colorblind": [211, 611, 616, 642], "friendli": [211, 611, 616, 620, 642], "revers": [211, 226, 237, 287, 298, 316, 331, 349, 364, 384, 460, 620], "_r": 211, "matplotlib": [211, 226, 228, 231, 232, 233, 237, 238, 239, 251, 252, 253, 255, 257, 267, 268, 270, 272, 287, 289, 292, 293, 294, 298, 299, 316, 318, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 349, 351, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 369, 388, 610, 611, 612, 613, 616, 617, 618, 620, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 677, 679, 680, 681, 683, 684, 687, 690], "pyart_colormap": 211, "bluebrown10": [211, 642], "bluebrown11": [211, 642], "brbu10": [211, 642], "brbu12": [211, 642], "bu10": [211, 642], "bu7": [211, 642], "budor12": [211, 642], "budor18": [211, 642], "budrd12": [211, 642], "budrd18": [211, 642], "bugr14": [211, 642], "bugy8": [211, 642], "buor10": [211, 642], "buor12": [211, 642], "buor8": [211, 642], "buorr14": [211, 642], "carbone11": [211, 642], "carbone17": [211, 642], "carbone42": [211, 642], "cat12": [211, 642], "ewilson17": [211, 642], "grmg16": [211, 642], "gray5": [211, 642], "gray9": [211, 642], "nwsref": [211, 642], "nwsvel": [211, 642], "nws_spw": [211, 642], "pd17": [211, 642], "rrate11": [211, 642], "rdylbu11b": [211, 642], "refdiff": [211, 642], "scook18": [211, 642], "stepseq25": [211, 642], "symgray12": [211, 642], "theodore16": [211, 642], "wild25": [211, 642], "langrainbow12": [211, 642], "homeyerrainbow": [211, 369, 620, 642], "balanc": [211, 620, 642], "chasespectr": [211, 642], "spectralextend": [211, 642], "displai": [212, 226, 228, 233, 237, 238, 239, 241, 273, 287, 289, 294, 298, 299, 301, 302, 316, 318, 326, 327, 331, 332, 334, 335, 349, 351, 359, 360, 364, 365, 367, 369, 388, 432, 468, 469, 611, 612, 613, 614, 616, 617, 618, 620, 621, 626, 627, 628, 632, 633, 637, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 679, 680, 681, 683, 684, 688], "airborn": [212, 620], "plot_var": [212, 273, 302, 335], "order": [212, 273, 302, 335, 368, 384, 389, 390, 416, 444, 454, 459, 460, 578, 610, 617, 618, 620, 621, 665, 666, 677, 688], "cb": [212, 273, 302, 335, 645, 666, 668], "colorbar": [212, 226, 227, 228, 233, 236, 237, 238, 239, 250, 251, 253, 255, 257, 258, 259, 266, 268, 270, 272, 273, 287, 288, 289, 294, 297, 298, 299, 302, 316, 317, 318, 326, 327, 330, 331, 332, 335, 349, 350, 351, 359, 360, 363, 364, 365, 369, 610, 612, 613, 614, 620, 630, 636, 641, 642, 659, 660, 662, 666, 686], "loc": [212, 273, 302, 335, 610, 612, 616, 617, 618, 643], "titl": [213, 215, 216, 217, 226, 228, 233, 236, 237, 238, 239, 247, 248, 249, 251, 253, 255, 257, 258, 261, 262, 263, 268, 270, 272, 274, 276, 277, 278, 287, 289, 294, 297, 298, 299, 303, 305, 306, 307, 316, 318, 326, 327, 330, 331, 332, 336, 338, 339, 340, 349, 351, 359, 360, 363, 364, 365, 369, 611, 612, 613, 614, 616, 617, 619, 620, 626, 628, 636, 645, 647, 648, 650, 652, 653, 657, 685], "ext": [214, 246, 260, 275, 304, 337], "png": [214, 246, 260, 275, 304, 337, 611, 612, 614, 616, 617], "datetime_format": [214, 216, 275, 277, 304, 306, 337, 339], "use_sweep_tim": [214, 216, 275, 277, 304, 306, 337, 339], "form": [214, 228, 246, 260, 275, 289, 304, 318, 337, 351, 610, 614, 620], "radar_name_field_sweep_tim": [214, 275, 304, 337], "datetim": [214, 216, 233, 237, 239, 275, 277, 294, 298, 299, 304, 306, 326, 331, 332, 337, 339, 359, 364, 365, 373, 374, 390, 434, 437, 438, 440, 441, 442, 583, 584, 585, 586, 587, 612, 616, 617, 620, 644], "strftime": [214, 216, 233, 237, 275, 277, 294, 298, 304, 306, 326, 331, 337, 339, 359, 364, 612, 613, 617, 644], "suitabl": [214, 246, 260, 275, 304, 337, 443, 614], "xaxi": [218, 221, 279, 282, 308, 311, 341, 344, 645], "static": [219, 220, 229, 230, 234, 240, 241, 280, 281, 290, 291, 295, 300, 301, 309, 310, 319, 320, 333, 334, 342, 343, 352, 353, 366, 367, 611], "yaxi": [219, 220, 222, 223, 224, 280, 281, 283, 284, 285, 309, 310, 312, 313, 314, 342, 343, 345, 346, 347], "keyword": [225, 286, 315, 327, 348, 360, 369, 380, 382, 610, 614, 620, 680, 683], "plot_ppi": [225, 286, 315, 348, 620, 628, 667, 668, 673, 675, 679], "plot_sweep_grid": [225, 620], "target_azimuth": [226, 287, 316, 349, 581], "mask_tupl": [226, 233, 236, 237, 238, 239, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 614], "norm": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 460, 614, 620, 645, 667], "cmap": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 258, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 369, 388, 610, 611, 612, 613, 614, 616, 617, 618, 636, 642, 643, 644, 645, 646, 650, 653, 655, 657, 658, 662, 664, 665, 666, 668, 673, 674, 675, 680, 681], "mask_outsid": [226, 233, 236, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 611, 614, 620, 652, 653, 662, 668], "title_flag": [226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 297, 298, 299, 316, 318, 326, 327, 330, 331, 332, 349, 351, 359, 360, 363, 364, 365, 614, 657], "axislabel": [226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 297, 298, 299, 316, 318, 326, 330, 331, 332, 349, 351, 359, 363, 364, 365, 611, 647, 652, 653], "axislabels_flag": [226, 228, 233, 236, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 297, 298, 299, 316, 318, 326, 330, 331, 332, 349, 351, 359, 363, 364, 365, 620, 665, 666], "colorbar_flag": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 612, 614, 617], "colorbar_label": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 611, 614, 616, 626, 628, 632, 647, 648, 652, 653, 654, 655, 659, 668, 673], "colorbar_ori": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 616, 620], "reverse_xaxi": [226, 237, 287, 298, 316, 331, 349, 364], "fig": [226, 227, 228, 233, 236, 237, 238, 239, 250, 251, 253, 255, 257, 266, 268, 270, 272, 287, 288, 289, 294, 297, 298, 299, 316, 317, 318, 326, 327, 330, 331, 332, 349, 350, 351, 359, 360, 363, 364, 365, 610, 611, 612, 613, 614, 616, 617, 618, 626, 628, 632, 633, 636, 637, 638, 639, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 662, 664, 666, 667, 668, 669, 673, 681, 683, 684], "tick": [226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 266, 268, 270, 272, 287, 288, 289, 294, 298, 299, 316, 317, 318, 326, 327, 331, 332, 349, 350, 351, 359, 360, 364, 365, 614, 620, 642, 645, 665, 666, 667], "ticklab": [226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 266, 268, 270, 272, 287, 288, 289, 294, 298, 299, 316, 317, 318, 326, 327, 331, 332, 349, 350, 351, 359, 360, 364, 365, 614, 620, 665, 666, 667], "raster": [226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 388, 614, 620], "pseudo": [226, 287, 316, 349, 620], "associ": [226, 287, 316, 349, 405, 443, 610, 623, 662], "pcolormesh": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 369, 610, 620, 636, 654, 662, 665, 666], "integ": [226, 287, 316, 349, 390, 431, 457, 458], "ncp": [226, 233, 236, 237, 238, 239, 287, 294, 297, 298, 299, 316, 326, 327, 330, 331, 332, 349, 359, 360, 363, 364, 365, 614], "lumin": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 614], "scale": [226, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 369, 389, 390, 426, 427, 435, 443, 460, 461, 610, 613, 614, 646], "west": [226, 237, 287, 298, 316, 331, 349, 364, 610, 614, 647], "leav": [226, 228, 233, 237, 238, 239, 251, 253, 255, 257, 268, 270, 272, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 612, 614], "orient": [226, 227, 228, 233, 237, 238, 239, 250, 251, 253, 255, 257, 266, 268, 270, 272, 287, 288, 289, 294, 298, 299, 316, 317, 318, 326, 327, 331, 332, 349, 350, 351, 359, 360, 364, 365, 459, 612, 614, 615, 617, 667, 669], "treat": [226, 233, 237, 238, 239, 255, 257, 268, 270, 272, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 614], "themselv": [226, 233, 237, 238, 239, 255, 257, 268, 270, 272, 287, 294, 298, 299, 316, 326, 327, 331, 332, 349, 359, 360, 364, 365, 614], "figur": [226, 227, 228, 233, 236, 237, 238, 239, 250, 251, 253, 255, 257, 266, 268, 270, 272, 287, 288, 289, 294, 297, 298, 299, 316, 317, 318, 326, 327, 330, 331, 332, 349, 350, 351, 359, 360, 363, 364, 365, 611, 612, 613, 614, 616, 617, 618, 619, 626, 628, 632, 633, 636, 637, 638, 639, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 665, 666, 668, 673, 680, 681, 683, 684], "render": [226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 613, 614], "rather": [226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 614], "larg": [226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 460, 466, 614, 616, 617, 620], "Be": [226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 614, 623], "sure": [226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 613, 614, 617, 619, 620, 623, 636, 645, 665, 687, 690], "dpi": [226, 228, 233, 237, 238, 239, 258, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 369, 612, 614, 616], "pdf": [226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 614], "ep": [226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 614], "svg": [226, 228, 233, 237, 238, 239, 287, 289, 294, 298, 299, 316, 318, 326, 327, 331, 332, 349, 351, 359, 360, 364, 365, 614], "mappabl": [227, 250, 259, 266, 288, 317, 350, 617], "cax": [227, 250, 266, 288, 317, 350, 667], "imag": [227, 250, 266, 288, 317, 350, 443, 458, 578, 593, 610, 611, 613, 614, 617, 620, 630, 641, 660, 663, 665, 666, 686], "contourset": [227, 250, 259, 266, 288, 317, 350], "etc": [227, 250, 253, 259, 266, 288, 317, 327, 350, 360, 387, 434, 437, 438, 440, 442, 454, 612, 614, 620, 662], "onto": [227, 250, 266, 268, 288, 317, 327, 350, 360, 416, 423, 427, 463, 614, 618], "drawn": [227, 250, 266, 288, 317, 350, 614], "target_rang": [228, 289, 318, 351], "delta_x": [228, 289, 318, 351], "delta_i": [228, 289, 318, 351], "az_limit": [228, 289, 318, 351], "el_limit": [228, 289, 318, 351], "corner": [228, 289, 318, 325, 351, 358, 614, 615, 620], "reflector": [228, 289, 318, 351, 620], "griddata": [228, 289, 318, 351], "min": [228, 289, 318, 351, 610, 614, 669], "max": [228, 289, 318, 351, 369, 388, 610, 614, 620, 630, 632, 636, 637, 641, 642, 643, 649, 657, 660, 669, 673, 674, 675, 686], "npt": [229, 234, 290, 295, 319, 328, 352, 361], "hair": [229, 290, 319, 352, 651], "higher": [229, 234, 290, 295, 319, 328, 352, 361, 427, 613, 618, 662, 681, 683], "col": [230, 234, 235, 291, 295, 296, 320, 329, 353, 362, 613, 637], "line": [230, 236, 252, 253, 265, 267, 291, 297, 320, 323, 324, 327, 328, 330, 353, 356, 357, 360, 361, 363, 369, 388, 460, 611, 612, 613, 614, 617, 620, 621, 623, 630, 641, 643, 660, 662, 663, 686, 687, 688, 690], "color": [230, 231, 232, 234, 235, 252, 291, 292, 293, 295, 296, 320, 321, 322, 324, 327, 328, 329, 353, 354, 355, 360, 362, 369, 388, 611, 612, 613, 614, 616, 617, 618, 643, 645, 646, 654, 655, 662, 663, 665, 666, 667, 668], "linestyl": [230, 234, 235, 252, 291, 295, 296, 320, 329, 353, 362, 612, 614, 616, 643, 645, 655], "symbol": [231, 232, 292, 293, 321, 322, 325, 354, 355, 358], "text_color": [231, 232, 292, 293, 321, 322, 354, 355], "text": [231, 232, 292, 293, 321, 322, 325, 354, 355, 358, 481, 612, 619, 620, 623, 642, 652, 669, 677, 681], "just": [231, 232, 292, 293, 321, 322, 354, 355, 378, 588, 618, 620, 621, 642, 646, 679, 685, 688, 690], "marker": [231, 232, 236, 252, 267, 292, 293, 297, 321, 322, 330, 354, 355, 363, 610, 612, 617], "title_datetime_format": [233, 237, 294, 298, 326, 331, 359, 364], "title_use_sweep_tim": [233, 237, 294, 298, 326, 331, 359, 364], "range_ring_location_km": [234, 295, 328, 361], "lw": [234, 235, 295, 296, 329, 362, 614, 616, 662], "range_r": [235, 258, 296, 329, 362, 369, 644], "seri": [235, 296, 329, 362, 441, 610, 613], "draw": [235, 253, 265, 296, 327, 329, 360, 362, 612, 614], "format_str": [236, 297, 330, 363], "ray_min": [236, 297, 330, 363], "ray_max": [236, 297, 330, 363], "style": [236, 252, 267, 297, 323, 324, 328, 330, 356, 357, 361, 363, 388, 620, 644], "ignoretilt": 238, "antenna_to_cartesian_track_rel": 238, "slant": [238, 424, 440], "ncar": 238, "soloii": 238, "time_axis_flag": [239, 299, 332, 365, 613], "date_time_form": [239, 299, 332, 365], "tz": [239, 299, 332, 365, 612], "zone": [239, 299, 332, 365], "info": [239, 299, 327, 332, 360, 365, 614, 620, 644, 667, 668, 685], "aspect_ratio": [240, 300, 333, 366], "aspect": [240, 300, 333, 366, 642], "xlim": [241, 301, 334, 367, 610, 611, 614, 616, 617, 618, 627, 648, 650, 654, 655, 668, 683], "ylim": [241, 301, 334, 367, 610, 611, 613, 614, 616, 617, 618, 648, 650, 652, 653, 654, 655, 657, 659, 662, 668], "cartopi": [242, 243, 244, 245, 253, 302, 327, 369, 610, 612, 614, 616, 617, 618, 620, 621, 630, 632, 633, 636, 637, 641, 643, 645, 658, 660, 663, 665, 666, 673, 677, 680, 681, 683, 684, 686, 687, 688, 690], "coastlin": [243, 253, 327, 360, 610, 614], "polit": 244, "state": [245, 461, 612, 614, 616, 620], "grid_name_field_level_tim": [246, 260], "latitudin": [248, 255, 270], "step": [251, 388, 434, 437, 438, 440, 441, 442, 611, 613, 618, 623, 632, 654, 655, 665, 690], "interp_typ": 251, "x_axi": [251, 643], "metpi": [251, 612, 614, 616, 617, 620], "design": [251, 593, 610, 621, 654, 665, 666, 677, 688], "geodes": 251, "nearest": [251, 380, 424, 427, 434, 437, 438, 440, 442, 455, 581, 582, 602, 610, 614, 620, 683], "dataarrai": 251, "interp": [251, 462], "ex": [251, 462, 612, 616, 618, 619, 642], "upper": [251, 253, 255, 257, 268, 270, 272, 612, 616, 617, 618, 643], "colormesh": [251, 253, 255, 257, 268, 270, 272], "64": [251, 253, 255, 257, 268, 270, 272, 611, 642, 648, 649, 650, 654, 656, 658, 659, 663, 684, 687], "linewidth": [252, 267, 612, 614, 616, 617, 645, 654, 655], "crosshair": [252, 267, 614], "lat_lin": [253, 258, 265, 327, 360, 369, 612, 614, 636, 651, 663], "lon_lin": [253, 258, 265, 327, 360, 369, 612, 614, 636, 651, 663], "embellish": [253, 327, 360, 612, 645], "add_grid_lin": [253, 327, 612], "reason": [253, 265, 614], "america": [253, 265, 327, 360, 614], "cr": [253, 302, 327, 369, 459, 610, 612, 614, 616, 617, 618, 632, 633, 636, 637, 643, 645, 651, 658, 663, 665, 666, 667, 673, 680, 681, 684], "subsequ": [253, 327, 614], "geoax": [253, 327, 614, 680, 683], "platecarre": [253, 327, 610, 612, 614, 616, 617, 618, 632, 636, 643, 645, 658, 663, 665, 666, 673, 681, 684], "shapefil": [253, 327, 360, 614], "certain": [253, 327, 370, 458, 593, 614, 620, 665, 666, 684], "plot_latitudinal_level": [254, 269], "y_index": [255, 270], "basemap": [255, 257, 259, 264, 265, 268, 270, 272, 335, 356, 357, 358, 360, 361, 620, 677, 687], "plot_longitudinal_level": [256, 271], "x_index": [257, 272], "add_map": [258, 369], "savedir": [258, 369], "show_figur": [258, 369], "add_slogan": [258, 369, 644], "top": [259, 427, 463, 610, 612, 615, 620, 621, 642, 662, 663, 683, 688], "veric": 261, "area_thresh": [265, 360], "10000": [265, 360, 434, 437, 438, 440, 442, 469, 637, 643, 644, 665, 666, 683], "auto_rang": 265, "min_lon": [265, 327, 360, 612, 614, 636, 651, 684], "92": [265, 652, 663], "max_lon": [265, 327, 360, 612, 614, 636, 651, 684], "86": [265, 614], "min_lat": [265, 327, 360, 612, 614, 636, 651, 684], "max_lat": [265, 327, 360, 612, 614, 636, 651, 684], "44": [265, 444, 454, 610, 612, 665, 666, 687], "databas": [265, 360, 616], "merc": [265, 360], "mercat": [265, 637], "line_styl": [267, 323, 324, 328, 356, 357, 361, 651], "plot_rhi": [286, 315, 348, 610], "plot_vpt": [286, 315, 348, 613], "grid_project": [302, 426, 427, 614], "progress": [302, 335, 617], "correctli": [302, 335, 617, 620, 644], "github": [302, 335, 612, 615, 620, 655, 677, 687, 690], "tracker": [302, 335, 621, 677, 688], "azimuthalequidist": 302, "line_lon": [323, 356], "line_lat": [323, 356], "compat": [323, 324, 325, 328, 356, 357, 358, 361, 385, 612, 620, 624, 690], "line_x": [324, 357], "line_i": [324, 357], "ro": [325, 358], "label_text": [325, 358], "label_offset": [325, 358], "bottom": [325, 358, 612, 614, 642, 645], "110m": [327, 614], "shapefile_kwarg": [327, 614], "alpha": [327, 360, 447, 448, 449, 450, 451, 452, 612, 616, 645, 654, 662], "edgecolor": [327, 360, 612, 616, 654], "face": [327, 360, 614], "reson": [327, 360, 614], "lambertconform": [327, 614, 633, 651, 680], "domain": [327, 360, 610, 614, 636], "neither": [327, 360, 392, 614], "extend": [327, 360, 384, 614], "word": [327, 614], "10m": [327, 612, 614, 618, 633, 651], "50m": [327, 614, 673, 681, 684], "naturalearthfeatur": [327, 614], "tranpar": [327, 360, 614], "overplot": [327, 360, 614], "pixel": [327, 360, 457, 458, 563, 610, 614], "lcc": 360, "cylindr": 360, "mill": 360, "exhibit": 360, "distort": 360, "aea": 360, "laea": 360, "conform": [360, 614, 677, 679], "tmerc": 360, "stere": 360, "aeqd": 360, "cass": 360, "even": [360, 443, 462, 616, 620, 654, 662, 677, 683, 690], "cyl": [360, 620], "cannot": [360, 372, 612, 614], "lake": [360, 616], "esri": 360, "background": [360, 368, 369, 444, 454, 466, 614, 619, 651, 658, 665, 666], "untest": 360, "always_core_thr": [368, 444, 454, 665, 666], "use_cosin": [368, 444, 454, 665, 666], "max_diff": [368, 444, 454, 665, 666], "zero_diff_cos_v": [368, 444, 454, 665, 666], "use_addit": [368, 444, 454, 665, 666], "scalar_diff": [368, 444, 454, 665, 666], "convect": [368, 443, 444, 454, 466, 610, 617, 620, 630, 661, 670, 686], "stratiform": [368, 443, 444, 454, 466, 620, 630, 661, 670, 686], "classif": [368, 443, 444, 448, 454, 459, 466, 620, 630, 661, 670, 686], "cosin": [368, 444, 454, 665, 666], "classifi": [368, 443, 444, 454, 459, 620, 665, 666, 667], "eqn": [368, 444, 454], "b1": [368, 444, 454, 618], "yuter": [368, 444, 445, 454, 466, 593, 646, 662, 665, 666], "1997": [368, 444, 454, 665, 666], "zero": [368, 386, 444, 454, 458, 460, 602, 617, 620, 662, 665, 666, 680, 684], "multipli": [368, 444, 454, 613, 665, 679], "constant": [369, 380, 420, 426, 427, 457, 460, 610, 613, 620], "plan": 369, "cappi": [369, 630, 641, 660, 686], "ref": [369, 614, 644, 658, 666], "vel": 369, "syedspectr": 369, "lambertazimuthalequalarea": 369, "dot": [369, 655], "inch": [369, 616], "It": [369, 427, 462, 578, 589, 612, 614, 618, 621, 624, 636, 688, 690], "author": [369, 429, 432, 454, 593, 611, 618, 619, 623, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 669, 673, 674, 675], "hamid": [369, 644], "ali": [369, 644], "syedhamidali": [369, 620], "most": [370, 378, 612, 613, 614, 620, 642, 662, 666, 681, 683, 690], "storage_opt": [371, 380, 382], "anon": [371, 380, 382, 610, 612, 616, 617, 644], "open": [371, 380, 382, 481, 610, 613, 614, 616, 617, 619, 620, 621, 648, 677, 679, 680, 681, 683, 684, 685, 688, 690], "binari": [371, 454, 610, 623], "transpar": [371, 612, 614, 620, 654], "decompress": [371, 620], "gzip": [371, 378, 379], "bzip2": [371, 620], "close": [371, 454, 460, 611, 612, 616, 617, 618, 620], "compress": [371, 378, 379, 614, 620], "backend": [371, 380], "googl": [371, 380, 620, 621, 688], "storag": [371, 380, 558], "amazon": [371, 380, 610, 612, 614, 616, 632, 633], "web": [371, 380, 388, 610, 614, 616, 618, 632, 633], "servic": [371, 380, 610, 612, 614, 616, 618, 623, 632, 633, 642], "s3": [371, 380, 612, 616, 632, 633, 644, 646, 665, 666], "file_lik": 371, "use_rsl": 372, "read_": 372, "trmm": [372, 384, 620, 677, 687], "librari": [372, 381, 384, 387, 388, 610, 612, 613, 614, 616, 620, 621, 622, 677, 679, 680, 681, 683, 684, 685, 687, 688], "choos": [372, 614, 630, 641, 660, 665, 666, 686, 690], "Not": [372, 379, 459], "typeerror": [372, 620], "launch_datetim": 373, "date": [373, 374, 608, 612, 614, 618, 619, 620, 632, 633, 644], "radiosond": 373, "launch": 373, "record": [373, 616, 618, 685], "target_datetim": 374, "closest": [374, 416, 434, 437, 438, 440, 442], "profile_datetim": 374, "use_arm_scan_nam": 375, "scan_nam": [375, 610, 613, 620], "use_file_field_attribut": 376, "csu": [376, 620], "chill": 376, "chl": [376, 620], "field_file_nam": 376, "long_nam": [376, 610, 613, 627, 665, 666, 668, 680, 685], "zlib": [378, 379], "read_mdv": [378, 611, 628, 638, 650, 654, 655, 656], "interchang": 378, "vlevel": 378, "proj_polar_radar": 378, "9": [378, 448, 450, 459, 589, 610, 612, 613, 614, 616, 617, 619, 643, 646, 655, 663, 664, 665, 666, 668, 677, 679, 684, 685], "proj_rhi_radar": 378, "vlevel_typ": 378, "vert_type_z": 378, "vert_type_elev": 378, "vert_type_az": 378, "17": [378, 612, 613, 652, 657], "vert_type_pressur": 378, "vert_type_theta": 378, "unknown": [378, 620], "station": [380, 381, 614, 633], "linear_interp": 380, "nexrad": [380, 381, 382, 383, 610, 620, 630, 631, 634, 641, 644, 646, 660, 665, 666, 677, 685, 686], "archiv": [380, 612, 614, 616, 618, 647, 677], "host": [380, 382, 612, 623], "noaa": [380, 382, 384, 610, 612, 614, 616, 617, 632, 633, 644, 646, 665, 666], "nation": [380, 382, 610, 612, 614, 616, 617, 632, 642], "climat": [380, 382, 613, 614, 616, 620, 621, 677, 679, 680, 681, 683, 684, 685, 688], "ucar": [380, 381, 610], "thredd": [380, 381, 387], "server": [380, 381], "letter": [380, 381, 383], "icao": [380, 381, 620], "older": [380, 381, 620, 621, 630, 631, 634, 677, 686, 688], "mix": [380, 443, 593, 646, 665, 666], "fsspec": [380, 382, 616, 617, 620, 644], "cut": [380, 381, 382, 458], "www": [380, 381, 382, 457, 612, 616, 621, 688], "ncdc": [380, 382], "gov": [380, 382, 610, 611, 612, 616, 618, 626, 628, 632, 633, 636, 638, 639, 642, 643, 645, 647, 648, 649, 650, 652, 654, 655, 656, 657, 659, 663, 664, 673, 674, 675], "edu": [380, 381, 457, 610, 644, 646, 662, 665, 666], "catalog": [380, 381, 610], "html": [380, 381, 457, 612, 616, 620, 621, 677, 687, 688], "common": [381, 613, 620, 637, 677, 687], "cdm": [381, 387], "url": [381, 612, 614, 618], "java": [381, 387], "tool": [381, 387, 610, 613, 618, 677, 687], "opendap": 381, "accept": [381, 434, 437, 438, 440, 461, 462, 614, 618, 620, 621, 688], "compil": [381, 461, 617, 620, 677, 687], "unidata": [381, 610, 632], "htm": 381, "product": [382, 384, 432, 469, 610, 614, 620], "nw": [382, 616, 617], "wsr": 382, "88d": 382, "iii": 382, "distribut": [382, 444, 445, 453, 454, 468, 563, 574, 575, 576, 577, 594, 595, 620, 621, 662, 665, 666, 677, 688], "roc": 382, "wsr88d": [382, 383], "level_iii": 382, "level3info": 382, "asp": 382, "radar_format": 383, "callid": 383, "skip_range_check": 383, "rsl_radar": 383, "id": [383, 388, 610, 618, 620], "verifi": [383, 596, 607], "ioerror": 383, "time_ord": [384, 620], "full_xhdr": 384, "noaa_hh_hdr": 384, "ignore_xhdr": 384, "ignore_sweep_start_m": 384, "sigmet": [384, 620, 677], "iri": [384, 620, 677, 687], "sequenti": [384, 642], "re": [384, 443, 612, 621, 688], "manner": 384, "determind": 384, "maintain": [384, 423, 620], "yet": [384, 632, 637], "warn": [384, 387, 459, 610, 612, 613, 614, 616, 617, 618, 620, 636, 644, 668, 683], "reverse_and_rol": 384, "strictli": 384, "increas": [384, 427, 460, 463, 610, 614, 621, 642, 662, 683, 688], "becom": [384, 665, 680, 683], "thisopt": 384, "strict": 384, "header": [384, 620], "decod": [384, 620], "hurrican": [384, 614, 665, 666], "hunter": 384, "millisecond": [384, 617], "precis": [384, 443], "explic": 384, "read_rsl": [384, 687], "error": [384, 388, 461, 462, 610, 612, 614, 617, 619, 620, 637, 644, 687], "uf": [385, 390, 620, 677], "introduc": [385, 462], "implement": [385, 392, 405, 426, 449, 457, 613, 614, 617, 620, 621, 626, 666, 688], "time_refer": [386, 679], "compliant": 386, "mani": [386, 620, 621, 677, 683, 688, 690], "outlin": [386, 460, 589], "_zlib": [386, 387], "_deflatelevel": [386, 387], "_shuffl": [386, 387], "_fletcher32": [386, 387], "_contingu": [386, 387], "_chunksiz": [386, 387], "_endian": [386, 387], "_least_significant_digit": [386, 387], "_fillvalu": [386, 387, 620, 680, 685], "write_proj_coord_si": 387, "proj_coord_si": 387, "write_point_x_y_z": 387, "write_point_lon_lat_alt": 387, "projectioncoordinatesystem": 387, "toolsui": 387, "written": [387, 389, 390, 620, 623, 677], "appropri": [387, 589, 614, 624], "understood": 387, "rgb": 388, "viridi": [388, 665, 666], "color_level": 388, "warp": 388, "sld": 388, "use_doublequot": 388, "geotiff": [388, 620, 677], "wgs84": 388, "sphere": [388, 590, 603], "latter": [388, 614], "usabl": [388, 610], "byte": [388, 620], "former": 388, "gi": 388, "while": [388, 614, 617, 618, 637, 677, 681, 690], "show": [388, 610, 611, 612, 614, 616, 618, 619, 620, 621, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 665, 666, 668, 673, 679, 681, 683, 684, 685, 688], "lack": [388, 403, 413], "composit": [388, 432, 610, 613, 620, 630, 661, 670, 686], "gdal": [388, 620, 677], "via": [388, 424, 425, 612, 614, 623], "conda": [388, 616, 620, 621, 677, 687, 688, 690], "rbg": 388, "tabl": [388, 610], "column": [388, 579, 591, 592, 610, 612, 613, 614, 620, 630, 661, 670, 686], "categor": [388, 612, 667], "255": [388, 620, 666], "hydrometeor": [388, 448, 459, 620, 630, 661, 670, 681, 686], "gdalwarp": 388, "command": [388, 620, 621, 623, 677, 680, 688, 690], "o": [388, 481, 612, 614, 617, 621, 645, 677, 687, 688], "az": [388, 612, 620, 652, 653], "descriptor": 388, "tiff": 388, "don": [388, 613, 614, 617, 620, 636], "t": [388, 437, 443, 444, 454, 460, 461, 464, 469, 610, 613, 614, 617, 618, 620, 636, 662, 665, 666, 677, 679], "quot": 388, "translat": 388, "sr": [388, 610], "instead": [388, 610, 612, 614, 617, 618, 620, 621, 633, 662, 665, 683, 687, 688, 690], "mdv_field_nam": [389, 620], "field_write_ord": [389, 390], "sentinel": [389, 390], "float32": [389, 610, 613, 614, 620, 663, 679, 681, 685], "_write_as_dtyp": 389, "writabl": 389, "satisfi": 389, "xy": [389, 427], "irregular": 389, "exce": [389, 665, 666], "122": [389, 618, 632, 636, 643, 664, 668, 673], "uint8": 389, "uint16": 389, "scale_factor": [389, 613], "add_offset": [389, 613], "uncompress": 389, "sai": [389, 621, 688], "uf_field_nam": 390, "radar_field_nam": 390, "volume_start": 390, "templates_extra": 390, "radar_beam_width_h": [390, 613], "radar_beam_width_v": [390, 613], "radar_receiver_bandwidth": 390, "prt": [390, 613], "polarization_mod": 390, "round": [390, 424, 425, 614, 618, 620], "_uf_scale_factor": 390, "charact": 390, "advanc": [390, 610], "usag": 390, "templat": [390, 620, 623], "mandatory_head": 390, "optional_head": 390, "field_head": 390, "lazi": [391, 392, 394, 401, 620], "set_lazi": 392, "callabl": [392, 401, 613, 614], "cach": 392, "tradit": 392, "supplement": 392, "syntax": [392, 620], "prevent": [392, 427, 612, 620, 621, 688], "comparison": [392, 620, 636, 666], "__cmp__": 392, "__ge__": 392, "__gt__": 392, "__le__": 392, "__lt__": 392, "__ne__": 392, "nor": 392, "viewitem": 392, "viewkei": 392, "viewvalu": 392, "fromkei": 392, "tradition": 392, "referenc": 392, "lazyloaddictionari": 392, "henc": 392, "key1": 392, "value1": 392, "key2": 392, "value2": 392, "lazy_func": 392, "lambda": 392, "lazykey1": 392, "item": [393, 403, 406, 413, 620], "els": [395, 396, 407, 613, 617, 618, 644, 668], "value_cal": 401, "concret": 405, "__getitem__": [405, 613], "__setitem__": 405, "__delitem__": 405, "__iter__": 405, "__len__": 405, "robust": [415, 443, 620], "src_radar": 416, "dest_radar": 416, "distance_toler": [416, 636], "500": [416, 612, 616, 636, 643, 648], "gatefilter_src": [416, 636], "time_toler": [416, 636], "60": [416, 610, 626, 632, 636, 639, 645, 674, 679, 681, 683], "kd": 416, "tree": [416, 427, 673, 674, 675], "physic": [416, 432, 444, 454, 665, 666], "easi": [416, 432, 677], "equival": [416, 611, 613, 617, 620, 632, 645, 653, 659], "src_radar_i": 416, "src_radar_x": 416, "destin": [416, 418, 612, 616, 620, 636], "toler": [416, 417, 419, 434, 437, 440, 441, 442, 581, 582, 620], "src_radar_tim": 416, "dest_radar_tim": 416, "gate_mapp": 416, "src": [416, 616], "dest": 416, "dest_index": 416, "radar_map": 416, "mapped_radar": [416, 636], "adequ": [416, 636], "getter": [417, 419], "field_list": [418, 458], "zg": [420, 421, 422], "yg": [420, 421, 422], "xg": [420, 421, 422], "roi": [420, 421, 422, 424, 425, 427, 620, 637], "influenc": [420, 423, 426, 427, 683], "grow": [421, 422, 426, 427, 621, 688], "virtual": [422, 426, 427], "grid_shap": [423, 424, 425, 426, 427, 559, 637, 638, 639, 643, 644, 665, 666, 674, 683], "grid_limit": [423, 424, 425, 426, 427, 559, 637, 638, 639, 643, 644, 665, 666, 674, 683], "gridding_algo": 423, "map_gates_to_grid": [423, 620], "copy_field_dtyp": [423, 620], "map_to_grid": [423, 426, 620], "significantli": [423, 427], "faster": [423, 427, 614, 620], "barn": [423, 427, 620, 683], "1964": 423, "techniqu": [423, 443, 666], "maxim": 423, "numer": [423, 620], "analysi": [423, 435, 443, 592, 614, 618, 620], "meteorologi": [423, 429, 432, 460, 469, 589], "climatologi": [423, 469], "396": [423, 613], "409": [423, 620], "cressman": [423, 427, 683], "1959": 423, "monthli": 423, "review": [423, 611, 620], "87": [423, 610, 612, 617], "367": 423, "374": [423, 620], "paulei": [423, 683], "1990": [423, 683], "theoret": [423, 435], "discret": 423, "respons": 423, "118": 423, "1145": [423, 620], "1164": [423, 620], "target_sweep": [424, 425], "grid_siz": [424, 425, 426, 427], "801": [424, 425, 620], "auto": [424, 425, 614, 616, 642], "max_z": [424, 425], "12000": [424, 425, 679, 683], "el_rounding_frac": 424, "add_grid_altitud": 424, "weight": [424, 425, 426, 427, 438, 459, 460, 468, 610, 620, 630, 635, 640, 683, 686], "grid_from_radar": [424, 425, 426, 427, 637, 638, 639, 643, 644, 665, 666, 674, 683], "receiv": [424, 425, 433, 613, 616, 620, 681], "h_factor": [424, 425, 426, 427, 637], "dist_factor": [424, 425, 426, 637], "radar_d": [424, 425], "third": [424, 425, 621, 688], "az_rounding_frac": 425, "grid_origin": [426, 427, 639, 643], "grid_origin_alt": [426, 427], "map_roi": [426, 427], "weighting_funct": [426, 427, 683], "barnes2": [426, 427, 620], "17000": [426, 427, 683], "roi_func": [426, 427, 620, 683], "dist_beam": [426, 427, 683], "constant_roi": [426, 427, 620], "z_factor": [426, 427], "xy_factor": [426, 427], "02": [426, 427, 610, 613, 646, 660, 665, 666, 670, 686], "min_radiu": [426, 427, 620, 683], "250": [426, 427, 434, 440, 644, 685], "nb": [426, 427], "bsp": [426, 427], "linearli": 426, "roifunct": 426, "dist": [426, 427, 594, 595, 610, 612], "get_roi": 426, "cython": [426, 620], "around": [426, 441, 444, 454, 563, 578, 616, 618, 638, 644, 654, 657, 662, 665, 679, 681], "copy_field_data": 427, "kd_tree": 427, "leafsiz": 427, "nearbi": [427, 639], "coodin": 427, "azimut": 427, "similarili": 427, "example_roi_func_const": 427, "example_roi_func_dist": 427, "example_roi_func_dist_beam": 427, "altern": [427, 432, 614, 665], "foreach": 427, "metet": 427, "sacr": 427, "sapr": [427, 565], "dist_mean": 427, "preserv": [427, 618, 681], "less": [427, 443, 444, 445, 454, 462, 593, 618, 662, 665], "memori": [427, 620], "slower": [427, 460], "leaf": 427, "lookup": 427, "affect": 427, "optim": [427, 460, 620], "natur": [427, 443, 614], "ref_field": [429, 666, 680], "300": [429, 610, 612, 613, 614, 616, 617, 646, 647, 679], "save_nam": [429, 666], "nws_primary_pr": 429, "mm": [429, 617, 618, 619, 665, 666], "hr": [429, 665, 666], "laura": [429, 454, 593, 646, 662, 665, 666], "tomkin": [429, 454, 593, 646, 662, 665, 666], "look": [429, 432, 437, 445, 464, 610, 612, 613, 614, 616, 618, 619, 620, 627, 632, 633, 636, 637, 645, 677, 679, 681, 683, 685], "expect": [429, 462, 621, 688], "relationship": [429, 443, 453], "american": [429, 432], "meteorolog": [429, 432, 435, 449, 469, 614], "2022": [429, 432, 593, 610, 613, 619, 632, 646, 665, 666, 677], "glossari": [429, 432], "ametsoc": [429, 432], "wiki": [429, 432, 457], "r_relat": 429, "25000": [430, 683], "measur": [430, 433, 444, 447, 448, 453, 454, 459, 460, 461, 462, 579, 613, 614, 616, 618, 621, 665, 666, 677, 679, 680, 681, 683, 684, 685, 688], "nyq": [431, 616, 673, 681], "check_nyq_uniform": 431, "deriv": [431, 460, 462], "vel_dict": 431, "entri": [431, 685], "am": [432, 616, 621, 677, 688], "dry": [432, 459, 667, 668], "world": [432, 630, 641], "aloft": 432, "oppos": [432, 646], "nwp": [432, 667], "why": [432, 614, 619, 621, 688], "would": [432, 610, 611, 612, 613, 616, 618, 620, 621, 632, 633, 681, 683, 688], "think": 432, "turn": [432, 642, 665, 666, 677], "spin": [432, 618], "randi": [432, 616], "chase": [432, 616], "dopplerchas": [432, 620], "cdr_field": 433, "circular": [433, 594, 595, 620, 665], "depolar": [433, 613], "cdr": 433, "matrosov": 433, "2004": 433, "simultan": 433, "transmiss": 433, "574": [433, 620], "1520": [433, 435, 444, 445, 454, 620, 662, 665, 666], "0426": [433, 435], "021": 433, "0574": 433, "deflha": 433, "ref_tim": [434, 437, 438, 440, 441, 442], "latlon_tol": [434, 440, 442], "0005": [434, 440, 442], "delta_rng": [434, 440], "15000": [434, 440, 662, 679, 683], "delta_azi": [434, 440], "hmax": [434, 437, 438, 440, 442], "hre": [434, 437, 438, 440, 442], "avg_typ": [434, 437, 438, 440, 580], "nvalid_min": [434, 437, 438, 440, 580], "interp_kind": [434, 437, 438, 440, 442, 602], "qvp": [434, 437, 438, 440, 442, 464, 620], "enhanc": [434, 668, 690], "interest": [434, 440, 442, 610, 612, 613, 614, 616, 618, 636, 665, 668], "central": [434, 440, 610, 612, 616], "evp": [434, 440], "median": [434, 437, 438, 440, 580, 620], "regardless": [434, 437, 438, 440, 442], "elimin": [434, 437, 438, 440, 442, 618, 681, 683], "kaltenboeck": 434, "2016": [434, 437, 448, 459, 610, 613, 614, 616, 621, 677, 679, 680, 681, 683, 684, 685, 688], "storm": [434, 454, 466, 563, 564, 566, 610, 613, 614, 616, 646, 665, 666, 683], "explor": [434, 614, 616], "methodologi": [434, 469, 579, 681], "meteorologisch": 434, "zeitschrift": 434, "26": [434, 610], "207": [434, 613], "222": [434, 628, 647], "l_field": 435, "logarithm": 435, "log10": [435, 636], "l_field_out": 435, "covari": [435, 461], "matrix": [435, 461, 614, 620], "scatter": [435, 610, 612, 616, 617, 618, 643, 663], "315": [435, 620], "328": [435, 443], "018": 435, "0315": 435, "ioprcm": 435, "noisedbz_v": 436, "ref_dist": 436, "noise_field": [436, 439], "noisedbz": 436, "ang_tol": [437, 440, 441], "quasi": [437, 438, 464], "convers": [437, 440, 443, 578, 613], "zhang": [437, 440, 447, 464, 579], "reev": [437, 464], "kumjian": [437, 438, 464], "tschallen": [437, 464], "tr\u00f6mel": 437, "simmer": [437, 447, 464], "wai": [437, 464, 613, 621, 623, 636, 679, 688, 690], "33": [437, 610, 613, 614, 666, 685], "551": 437, "562": [437, 620], "rmax": 438, "50000": [438, 639, 643, 665, 666, 683], "weight_pow": 438, "ab": [438, 610], "grng": 438, "tobin": 438, "2017": [438, 440, 618], "surfac": [438, 444, 454, 613, 665, 666], "ic": [438, 440, 459, 579, 654, 667, 668], "pellet": 438, "forecast": [438, 614], "2065": 438, "2082": 438, "bukovc": 440, "winter": [440, 454, 646, 665, 666], "liquid": 440, "reveal": 440, "2dvd": 440, "oklahoma": [440, 559, 616], "56": [440, 610, 613, 669], "1345": 440, "1363": [440, 620], "along_azi": 441, "fixed_rang": 441, "fixed_azimuth": 441, "fixed_elev": 441, "rng_tol": 441, "value_start": 441, "value_stop": 441, "acoord": 441, "along_el": 441, "along_rng": 441, "stop": 441, "cappi_level": 443, "zr_a": 443, "200": [443, 621, 688], "zr_b": 443, "core_wt_threshold": 443, "conv_wt_threshold": 443, "conv_scale_km": 443, "min_reflect": 443, "conv_min_refl": 443, "conv_core_threshold": 443, "42": [443, 444, 454, 466, 610, 612, 613, 616, 665, 666], "override_check": 443, "computation": 443, "\u00e0": 443, "trou": 443, "wavelet": 443, "atwt": 443, "multiresolut": 443, "focus": [443, 610, 612, 613], "raut": 443, "2008": [443, 633], "2020": [443, 579, 614, 618, 620, 621, 646, 677, 687, 688], "sensit": 443, "howev": [443, 460, 614, 681], "intermedi": 443, "signific": 443, "approxim": [443, 610, 613, 620], "break": [443, 618, 622, 623], "season": 443, "2018": [443, 459, 614], "discuss": [443, 614, 624], "insensit": 443, "variat": [443, 453, 460, 620], "dyadic": 443, "scale_break_us": 443, "bypass": 443, "saniti": 443, "fall": 443, "categori": [443, 612, 618], "strong": [443, 454, 612, 666], "updraft": 443, "activ": [443, 690], "collis": 443, "coalesc": 443, "wide": [443, 662], "remain": 443, "intens": [443, 466, 563], "unclassifi": [443, 610], "karekar": 443, "puranik": 443, "infrar": [443, 610], "satellit": [443, 610], "ieee": [443, 461], "geosci": [443, 461], "remot": [443, 461, 612, 613, 614, 620, 621, 632, 688], "sen": [443, 461], "lett": 443, "330": [443, 620], "seed": 443, "reeder": 443, "jakob": 443, "cascad": 443, "downscal": 443, "geophi": 443, "123": [443, 445, 662], "2050": 443, "2067": 443, "louf": 443, "gayatri": 443, "murugavel": 443, "konwar": 443, "prabhakaran": 443, "tran": 443, "5409": 443, "5415": 443, "dx": [444, 454, 466, 665, 666], "dy": [444, 454, 466, 612, 665, 666], "level_m": [444, 454, 666], "bkg_rad_km": [444, 454, 665, 666], "11": [444, 454, 459, 601, 610, 612, 618, 639, 640, 666, 674, 677, 684, 685, 686], "55": [444, 454, 610, 612, 627, 658, 665, 666], "calc_thr": [444, 454, 665, 666], "weak_echo_thr": [444, 454, 665, 666], "min_dbz_us": [444, 665], "db_averag": [444, 454, 665, 666], "remove_small_object": [444, 454, 665, 666], "min_km2_siz": [444, 454, 665, 666], "val_for_max_conv_rad": [444, 665], "max_conv_rad_km": [444, 665], "cs_core": 444, "nosfcecho": [444, 454, 665, 666], "weakecho": [444, 454, 665, 666], "sf": [444, 665], "conv": [444, 665], "estimate_flag": [444, 454, 665, 666], "estimate_offset": [444, 454, 665, 666], "partit": [444, 454, 466, 618], "pars": [444, 454, 613, 614, 620], "least": [444, 454, 665], "simpler": [444, 454, 665], "percentag": [444, 454], "weak": [444, 454, 665, 666], "snow": [444, 448, 454, 459, 579, 593, 613, 646, 665, 666, 667, 668], "underestim": [444, 454, 665, 666], "wih": [444, 454], "convsf_dict": [444, 665, 666], "raindrop": [444, 454, 665, 666], "pacif": [444, 454, 665, 666], "warm": [444, 454, 460, 665], "pool": [444, 454, 665, 666], "implic": [444, 454, 665, 666], "appl": [444, 454, 462, 464, 466, 468, 579, 621, 665, 666, 688], "meteor": [444, 454, 462, 464, 466, 468, 579, 621, 665, 666, 677, 688], "36": [444, 454, 610, 633, 636, 639, 643, 658, 663, 665, 666, 669, 683], "847": [444, 454, 620, 665, 666], "867": [444, 454, 620, 665, 666], "0450": [444, 454, 665, 666], "036": [444, 454, 665, 666], "3c0847": [444, 454, 665, 666], "morsdo": [444, 454, 665, 666], "3e2": [444, 445, 454, 662, 665, 666], "smith": [444, 454, 665, 666], "wilheit": [444, 454, 665, 666], "zipser": [444, 454, 665, 666], "character": [444, 454, 466, 665, 666], "tropic": [444, 454, 665, 666, 668], "kwajex": [444, 454, 665, 666], "385": [444, 454, 620, 665, 666], "415": [444, 454, 665, 666], "jam2206": [444, 454, 665, 666], "field_bin": [445, 662], "altitude_bin": [445, 662], "field_mask": [445, 662], "min_frac_thr": [445, 662], "contour": [445, 620, 630, 641, 660, 662, 686], "diagram": [445, 630, 661, 670, 686], "cfad": [445, 620, 630, 661, 670, 686], "1995": [445, 454, 466, 662, 665, 666], "histogram": [445, 636, 662, 681], "largest": 445, "row": [445, 610, 612, 614, 662], "creation": [445, 620], "total": [445, 460, 461, 462, 613, 616, 626, 627, 628, 629, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 686], "freq_norm": [445, 662], "height_edg": [445, 662], "field_edg": [445, 662], "kinemat": [445, 468, 621, 662, 688], "microphys": [445, 610, 662], "evolut": [445, 662], "florida": [445, 614, 662], "cumulonimbu": [445, 662], "mon": [445, 662], "wea": [445, 662], "rev": [445, 662], "1941": [445, 662], "1963": [445, 662], "0493": [445, 662], "3c1941": [445, 662], "tdkame": [445, 662], "the_spectra": 446, "vel_bin": 446, "wavelength": [446, 610, 613], "left_limit": 446, "right_limit": 446, "new_spectra": 446, "new_bin": 446, "a_field": [447, 448, 451], "rr_field": [447, 448, 449, 450, 451, 452, 453], "go": [447, 448, 449, 451, 452, 459, 604, 611, 612, 617, 618, 620, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 680], "diederich": 447, "tromel": [447, 464], "2015": [447, 450, 464, 677], "wavelenght": 447, "hydrometeorologi": 447, "487": [447, 610], "502": [447, 620], "alphazr": 448, "0376": [448, 450, 451, 452], "betazr": 448, "6112": [448, 450, 451, 452], "alphaz": [448, 451, 452], "betaz": [448, 451, 452], "alphaa": [448, 451], "betaa": [448, 451], "mp_factor": 448, "hydro_field": [448, 459], "main_field": [448, 451, 452], "thresh_max": [448, 451, 452], "main": [448, 451, 452, 610, 612, 613, 614, 620, 621, 649, 688], "secondari": [448, 451, 452, 620], "besic": [448, 459], "figuera": [448, 449, 459], "ventura": [448, 459], "grazioli": [448, 459, 461], "gabella": [448, 459], "germann": [448, 459], "bern": [448, 459, 461], "statist": [448, 459, 580, 620, 621, 688], "cluster": [448, 459], "semi": [448, 459], "supervis": [448, 459], "approach": [448, 459, 610, 613, 637], "mea": [448, 459, 593, 646, 666], "4425": [448, 459], "4445": [448, 459], "5194": [448, 459, 593, 646, 666], "amt": [448, 459, 593, 646, 666], "term": [449, 620], "monitor": 449, "french": 449, "sever": [449, 612, 620, 666], "quantit": 449, "ideal": [449, 613], "quarterli": 449, "royal": 449, "2012": [449, 460, 462], "1002": [449, 620], "qj": 449, "1934": 449, "fabri": 450, "fr\u00e9d\u00e9ric": 450, "meterologi": 450, "ch": [450, 667, 669], "pg": 450, "148": 450, "165": 450, "1017": 450, "cbo9781107707405": 450, "blend": [451, 452, 614, 654], "rain_main": [451, 452], "alphakdp": 452, "betakdp": 452, "polynomi": 453, "develop": [453, 454, 610, 614, 620, 666, 677, 687], "mcgill": [453, 677], "doell": 453, "systemat": 453, "drop": [453, 613, 614, 620], "northern": [453, 612], "germani": 453, "seven": 453, "year": [453, 610, 612, 616, 619, 632, 633], "1998": 453, "1545": [453, 620], "1556": 453, "joss": 453, "switzerland": 453, "vdf": 453, "hochschulverlag": 453, "ag": [453, 459, 667], "eth": 453, "zurich": 453, "134": [453, 610], "min_val_us": [454, 666], "binary_clos": 454, "val_for_max_rad": [454, 666], "max_rad_km": [454, 666], "core_v": [454, 666], "bkgd_val": [454, 666], "feat_val": [454, 666], "overest_field": [454, 666], "underest_field": [454, 666], "featur": [454, 611, 612, 614, 618, 624, 630, 646, 661, 662, 665, 670, 677, 686], "2023": [454, 616, 677], "steiner": [454, 466, 620, 665, 666], "lauratomkin": [454, 593, 620], "overestim": [454, 665, 666], "feature_dict": [454, 666], "climatolog": [454, 466, 665, 666], "gaug": [454, 466, 665, 666], "1978": [454, 466, 665, 666], "2007": [454, 466, 665, 666], "miller": [454, 593, 646, 666], "2024": [454, 608, 617, 618, 644, 666], "identif": [454, 593, 646, 666], "faint": [454, 666], "prep": [454, 666], "sonde_dset": 455, "time_kei": 455, "height_kei": 455, "nvar": 455, "vap": 455, "startard": 455, "ncvar": 455, "return_d": 455, "freq": 456, "hz": [456, 459, 652, 668], "freq_band": 456, "grid1": 457, "grid2": 457, "return_valu": 457, "displac": 457, "en": [457, 616, 620, 621, 677, 687, 688], "wikipedia": 457, "phase_correl": 457, "inspir": 457, "christoph": 457, "gohlk": 457, "lfd": 457, "uci": 457, "imreg": 457, "advect": [457, 458, 620], "trim_edg": 458, "shifted_grid": 458, "subset": [458, 604, 610, 612, 616, 620, 630, 661, 663], "hydro_nam": 459, "lr": [459, 667], "rp": [459, 667], "rn": [459, 667], "vi": [459, 667], "mh": [459, 667], "ih": [459, 667], "hdg": [459, 667], "var_nam": 459, "zh": 459, "relh": 459, "mass_cent": 459, "lapse_r": 459, "entropy_field": 459, "radar_freq": [459, 668], "compute_entropi": 459, "output_dist": 459, "ndarrai": [459, 580, 685], "centroid": 459, "nclass": 459, "nvariabl": 459, "h_iso0": 459, "decai": 459, "decreas": [459, 610, 662], "celsiu": 459, "entropi": 459, "hertz": 459, "fields_dict": 459, "directionari": 459, "hydro": [459, 667, 668], "aggreg": [459, 667, 668], "crystal": [459, 667, 668], "light": [459, 642, 667, 668], "rime": [459, 667], "particl": [459, 667], "wet": [459, 667, 668], "hail": [459, 616, 620, 667, 668], "densiti": [459, 610, 667, 668], "graupel": [459, 667, 668], "shannon": 459, "demix": 459, "propx": 459, "proport": [459, 460], "decomposit": 459, "gehr": 459, "praz": 459, "unravel": 459, "mixtur": 459, "4847": 459, "4866": 459, "suppli": [459, 668], "cg": 460, "backscatt": [460, 464], "clpf": 460, "length_scal": 460, "first_guess": 460, "finite_ord": 460, "fill_valu": [460, 461, 462, 466, 614, 627, 668, 679, 680, 685], "psidp_field": [460, 461, 462, 667], "verbos": [460, 620, 621, 688], "maesaka": 460, "monoton": [460, 463, 642], "propag": [460, 461, 462], "notat": 460, "dr": 460, "analys": [460, 461, 462], "cost": [460, 620], "nonlinear": 460, "conjug": 460, "gradient": [460, 620, 642], "broyden": 460, "fletcher": 460, "goldfarb": 460, "shanno": 460, "bfg": 460, "100k": 460, "consider": [460, 616, 665, 666], "parameter": 460, "attentu": 460, "constraint": 460, "bring": [460, 610], "guess": 460, "root": [460, 687, 690], "signifi": [460, 466], "everywher": 460, "exactli": [460, 618, 636], "avoid": [460, 620, 623, 690], "converg": 460, "fact": [460, 462], "closer": [460, 617], "finit": 460, "accuraci": 460, "maxit": 460, "met": 460, "achiev": 460, "somewhat": 460, "arbitrari": 460, "parallel": [460, 461, 462], "thread": [460, 614], "cpu": 460, "multiprocess": 460, "capabl": [460, 613, 681, 685], "relev": [460, 617, 618, 624], "kdp_dict": [460, 461, 462], "phidpf_dict": 460, "phidpr_dict": [460, 461, 462], "forward": [460, 590, 591], "iwanami": 460, "maki": 460, "seventh": 460, "european": 460, "confer": 460, "hydrologi": 460, "rcov": 461, "pcov": 461, "prefilter_psidp": [461, 462], "filter_opt": [461, 462], "kalman": 461, "schneeb": 461, "psidp": [461, 462], "char": [461, 462], "capit": [461, 462], "intercept": 461, "slope": 461, "3x3": 461, "4x4": 461, "filter_psidp": [461, 462, 620], "enabl": [461, 462, 613, 616, 620], "kdp_std_dict": 461, "dev": [461, 613, 616, 618, 621, 683, 688], "ensembl": 461, "52": [461, 464, 610, 613, 663], "5137": 461, "5149": 461, "1109": [461, 620], "tgr": 461, "2287017": 461, "windsiz": 462, "n_iter": 462, "vulpiani": [462, 620], "pre": [462, 617, 620, 621, 688], "advantag": 462, "eat": 462, "gianfranco": 462, "mario": 462, "montopoli": 462, "luca": 462, "delli": 462, "passeri": 462, "antonio": 462, "gioia": 462, "pietro": 462, "giordano": 462, "frank": 462, "marzano": 462, "On": [462, 611, 612], "dual": [462, 617, 620], "mountain": 462, "climatol": [462, 579, 665, 666], "51": [462, 610, 663], "405": [462, 620], "425": [462, 620], "05024": 462, "profile_field": 463, "height_field": 463, "3re": 463, "whole": [463, 620], "height_dict": 463, "profile_dict": 463, "desired_angl": [464, 620], "wanted_angl": 464, "dictonari": 464, "troemel": 464, "clim": [464, 613, 614], "2529": 464, "2548": 464, "meteorol": [464, 665, 666], "54": [464, 610, 612, 613, 633], "2344": 464, "2359": 464, "submit": [464, 614, 677], "work_level": 466, "3000": [466, 679, 683], "peak_rel": 466, "area_rel": 466, "medium": 466, "bkg_rad": 466, "11000": [466, 683], "use_intens": 466, "bright": [466, 610], "sgp": [466, 559], "peaked": 466, "eclass": 466, "z_want": [468, 469, 621, 669, 688], "valid_ray_min": [468, 621, 688], "velocity_azimuth_displai": [468, 621, 688], "one_sweep_radar": 468, "extract_sweep": [468, 616, 637, 662, 665, 666, 669], "vad": [468, 469, 620, 621, 630, 661, 670, 686, 688], "amount": [468, 613, 616, 621, 666, 683, 688], "_averag1d": [468, 621, 688], "idw": 468, "brown": [468, 620, 621, 688], "wexler": [468, 621, 688], "1968": [468, 621, 688], "105": [468, 621, 669, 688], "113": [468, 621, 663, 688], "linespac": 469, "michelson": [469, 620, 677], "andersson": 469, "koistinen": [469, 677], "collier": 469, "riedl": 469, "szturc": 469, "gjertsen": 469, "nielsen": 469, "overgaard": 469, "2000": [469, 610, 638, 683], "baltex": 469, "centr": 469, "smhi": 469, "swedish": 469, "hydrolog": 469, "institut": [469, 610, 685], "norrkop": 469, "suffix": 481, "tmp": 481, "dir": 481, "temporari": [481, 620], "my_cwd": 481, "getcwd": 481, "tmpdir": 481, "_": [481, 612, 616, 617, 618, 632, 633, 667], "txt": [481, 620, 687], "wt": 481, "assert": [481, 620, 621, 688], "isfil": 481, "path_to_fil": 558, "local": [558, 611, 612, 616, 617, 620, 621, 644, 677, 687, 688], "without": [559, 573, 598, 610, 613, 620, 627, 668, 687], "site": [559, 610, 612, 613, 614, 615, 616, 617, 618, 644, 663, 680, 683, 687], "puls": [562, 613, 620, 681], "min_valu": 563, "max_valu": 563, "grid_len": 563, "sigma": [563, 564, 654, 655], "mu": [563, 564], "masked_boundari": 563, "gaussian": [563, 564, 620, 654], "dp_phase_shift": [565, 663, 679], "diff_phas": [565, 679], "differential_reflect": [565, 617, 632, 647, 654, 684, 685], "rectangular": [566, 567, 614, 620], "alia": [571, 572, 614, 620], "miscellan": 573, "depreci": [573, 620], "caution": [573, 662], "radian": [574, 576, 599, 610], "std": [576, 577, 595, 601], "convolut": 578, "ndimag": [578, 620, 654, 655], "generic_filt": 578, "pi": [578, 610, 681], "std_dev": 578, "azimuth_spread": 579, "spatial_spread": 579, "spatial_rang": 579, "sphere_dist": [579, 592], "for_azimuth": [579, 592], "get_sweep_rai": 579, "subset_field": 579, "assemble_column": 579, "murphi": 579, "columnar": 579, "cvp": [579, 620], "situ": 579, "37": [579, 610, 613, 636, 663, 666, 684], "1623": 579, "1642": 579, "0011": 579, "bukov\u010di\u0107": 579, "zrni\u0107": 579, "59": [579, 610, 613], "991": [579, 620], "1009": [579, 620], "19": [579, 610, 612, 613, 620, 669, 685], "0140": 579, "stat": [580, 610, 620], "nvalid": 580, "az_tol": 581, "radar_rhi": 581, "target_elev": 582, "el_tol": 582, "radar_ppi": 582, "epoch": [583, 584, 585, 586, 587, 610], "max_offset": 588, "running_win_dt": 588, "deg_rng": 588, "consider_2pi_jump": 588, "is_ppi": 588, "wise": 588, "could": [588, 614, 618, 621, 633, 688], "strategi": [588, 610], "might": [588, 611, 679, 690], "goe": [588, 614], "shot": 588, "navg": 589, "nnoise_min": 589, "hildebrand": [589, 620], "sehkon": 589, "1974": 589, "spectral": [589, 610, 613, 620], "articl": 589, "peak": [589, 613, 681], "var": [589, 605, 606, 610], "varianc": [589, 637], "nnois": 589, "sekhon": [589, 620], "808": 589, "811": [589, 620], "target_latitud": [590, 603], "target_longitud": [590, 603], "bear": [590, 612], "alongitudeg": 590, "great": [590, 603], "circl": [590, 603, 665], "known": [590, 620, 621, 685, 688], "6371000": [590, 603], "calculatitude": 590, "degress": [590, 603], "further": [592, 611, 613, 617, 618], "get_column_rai": 592, "mute_field": [593, 646], "mute_threshold": [593, 646], "field_threshold": [593, 646], "discern": 593, "mute": [593, 620, 630, 641, 660, 665, 666, 686], "allen": [593, 646, 666], "5515": [593, 646, 666], "5525": [593, 646, 666], "interval_min": [594, 595], "interval_max": [594, 595], "endpoint": [594, 595], "to_vpt": 596, "90": [596, 610, 612, 613, 621, 688], "verticl": 596, "radar1": 597, "radar2": 597, "tup": 598, "guarante": 598, "broadcast": 598, "broadcasted_arrai": 598, "angles1": 599, "angles2": 599, "angle1": 600, "angle2": 600, "eg": 601, "ma": [601, 621, 636, 638, 644, 662, 665, 666, 680, 684, 688], "sim_vel_field": 602, "kind": [602, 610, 618], "slinear": 602, "quadrat": 602, "cubic": 602, "interp1d": [602, 621, 688], "sim_vel": [602, 621, 688], "rng_min": 604, "rng_max": 604, "ele_min": 604, "ele_max": 604, "azi_min": 604, "azi_max": 604, "coverag": [604, 610, 620, 621, 688], "11pt": 605, "stdev": 605, "texarrai": 605, "pyradarobj": 605, "tex": 606, "single_scan": 607, "is_vpt": 607, "mislabel": 607, "properli": [607, 621, 633, 688], "releas": [608, 615, 621, 624, 677, 680, 683, 687, 688], "post12": 608, "aug": 608, "guid": [608, 610, 611, 620, 677], "public": [608, 610, 614, 616, 618, 620, 621, 679, 680, 681, 683, 684, 685, 688], "broken": [608, 620], "aerosol": 610, "experi": 610, "depart": [610, 613, 614, 616, 679, 680, 681, 683, 684, 685], "energi": [610, 613, 614, 616, 679, 680, 681, 683, 684, 685], "iop": 610, "goal": 610, "studi": 610, "lifecycl": 610, "houston": [610, 632], "impact": [610, 616, 654], "uniqu": 610, "suit": [610, 620, 683], "seabreez": 610, "coast": [610, 614], "cleaner": [610, 684], "air": [610, 614, 618], "pollut": 610, "click": [610, 611, 618, 623], "post": [610, 612, 613, 614, 616, 618, 620, 623, 677], "overlai": 610, "texa": [610, 632], "lightn": 610, "csapr2": 610, "wildfir": 610, "smoke": 610, "entrain": 610, "juli": [610, 633], "we": [610, 612, 613, 614, 616, 618, 621, 624, 627, 632, 633, 636, 642, 662, 663, 665, 666, 668, 673, 679, 680, 681, 683, 684, 685, 687, 688, 689, 690], "highlight": [610, 611, 614], "minut": [610, 612, 613, 617, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675], "pyart": [610, 612, 616, 618, 621, 623, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677, 679, 680, 681, 683, 684, 685, 687, 688, 690], "pyplot": [610, 611, 612, 613, 614, 616, 617, 618, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 679, 680, 681, 683, 684], "plt": [610, 611, 612, 613, 614, 616, 617, 618, 620, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 679, 680, 681, 683, 684], "xr": [610, 613], "s3f": 610, "ccr": [610, 612, 614, 616, 617, 618, 632, 633, 636, 637, 643, 645, 651, 658, 663, 665, 666, 673, 680, 681, 684], "panda": [610, 613, 616, 620, 690], "pd": [610, 612, 613, 616], "kdtree": 610, "inlin": [610, 617, 654, 655], "download": [610, 611, 613, 614, 618, 620, 621, 626, 627, 628, 630, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677, 688, 690], "longwav": 610, "ensur": [610, 612, 620, 666], "c13": 610, "denot": [610, 637], "anonym": [610, 612], "credenti": 610, "s3filesystem": 610, "day_no": 610, "168": 610, "dai": [610, 616, 617], "16th": 610, "leap": 610, "hour": [610, 614, 616, 617, 632, 633], "goes16": 610, "abi": 610, "l1b": 610, "radc": 610, "02d": [610, 617], "fi": 610, "or_abi": 610, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 610, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 610, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 610, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 610, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 610, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 610, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 610, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 610, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 610, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 610, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 610, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 610, "goes_d": 610, "open_dataset": [610, 613], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 610, "lt": [610, 613], "gt": [610, 613], "1500": [610, 679], "2500": 610, "number_of_time_bound": 610, "number_of_image_bound": 610, "num_star_look": 610, "datetime64": [610, 613, 663], "07": [610, 612, 613, 633, 640, 646, 660, 665, 666, 685, 686], "1282": 610, "1013": 610, "y_imag": 610, "08624": 610, "x_imag": 610, "03136": 610, "band_id": 610, "int8": 610, "band_wavelength": 610, "t_star_look": 610, "band_wavelength_star_look": 610, "rad": [610, 613], "dqf": 610, "time_bound": 610, "goes_imager_project": 610, "int32": [610, 685], "2147483647": 610, "y_image_bound": 610, "x_image_bound": 610, "algorithm_dynamic_input_data_contain": 610, "processing_parm_version_contain": 610, "algorithm_product_version_contain": 610, "star_id": 610, "channel_integration_tim": 610, "336": [610, 620], "channel_gain_field": 610, "naming_author": 610, "nesdi": 610, "standard_name_vocabulari": 610, "v35": 610, "commerc": 610, "production_sit": 610, "wcda": 610, "timeline_id": 610, "date_cr": 610, "12t20": 610, "09": [610, 612, 618, 660, 665, 666, 670, 686], "3z": 610, "time_coverage_start": [610, 679, 685], "time_coverage_end": [610, 679], "08": [610, 634, 686], "7z": 610, "lut_filenam": 610, "spacelookparam": 610, "fm1a_cdrl79revp_pr_09_00_02": 610, "f45b564c": 610, "dcb9": 610, "498a": 610, "ac56": 610, "da80a1d735a5xarrai": 610, "datasetdimens": [610, 613], "1500x": 610, "2500number_of_time_bound": 610, "2number_of_image_bound": 610, "2band": 610, "1num_star_look": 610, "24coordin": 610, "j2000": 610, "mid": 610, "secondsstandard_nam": 610, "timeaxi": 610, "tbound": 610, "time_boundsarrai": 610, "x27": [610, 613], "537394048": 610, "float640": 610, "04432": 610, "04427unit": 610, "radaxi": 610, "ylong_nam": 610, "coordinatestandard_nam": 610, "projection_y_coordinatearrai": 610, "128212": 610, "128156": 610, "1281": 610, "04438": 610, "044324": 610, "044268": 610, "03856": 610, "03861unit": 610, "xlong_nam": 610, "projection_x_coordinatearrai": 610, "101332": 610, "101276": 610, "10122": 610, "0385": 610, "038556": 610, "038612": 610, "imagestandard_nam": 610, "projection_y_coordinateunit": 610, "yarrai": 610, "projection_x_coordinateunit": 610, "numberstandard_nam": 610, "sensor_band_identifierunit": 610, "1arrai": [610, 613], "wavelengthstandard_nam": 610, "sensor_band_central_radiation_wavelengthunit": 610, "umarrai": 610, "star": 610, "tarrai": 610, "01t11": 610, "43": [610, 613, 616], "000000000": [610, 613], "starstandard_nam": 610, "radiancesstandard_nam": 610, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 610, "12valid_rang": 610, "4094": 610, "mw": 610, "cm": [610, 655], "1resolut": 610, "000056": 610, "radgrid_map": 610, "goes_imager_projectioncell_method": 610, "pointancillary_vari": 610, "3750000": 610, "radianc": 610, "flagsstandard_nam": 610, "status_flagvalid_rang": 610, "1grid_map": 610, "pointflag_valu": 610, "flag_mean": [610, 627], "good_pixel_qf": 610, "conditionally_usable_pixel_qf": 610, "out_of_range_pixel_qf": 610, "no_value_pixel_qf": 610, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 610, "5percent_good_pixel_qf": 610, "0percent_conditionally_usable_pixel_qf": 610, "0percent_out_of_range_pixel_qf": 610, "0percent_no_value_pixel_qf": 610, "0percent_focal_plane_temperature_threshold_exceeded_qf": 610, "00": [610, 612, 613, 616, 618, 620, 629, 634, 640, 660, 670, 671, 676, 686], "326423040": 610, "748365056": 610, "projectiongrid_mapping_nam": 610, "geostationaryperspective_point_height": 610, "35786023": 610, "0semi_major_axi": 610, "6378137": 610, "0semi_minor_axi": 610, "6356752": 610, "31414inverse_flatten": 610, "298": 610, "2572221latitude_of_projection_origin": 610, "0longitude_of_projection_origin": 610, "0sweep_angle_axi": 610, "south": [610, 614, 647], "extent": [610, 612, 613, 616, 617, 637, 639], "imageunit": 610, "radarrai": 610, "12824": 610, "04424": 610, "10136": 610, "03864": 610, "nominal_satellite_subpoint_lat": 610, "nomin": 610, "subpoint": 610, "standard_nam": [610, 665, 666, 668, 680, 685], "latitudeunit": [610, 613], "degrees_northarrai": 610, "nominal_satellite_subpoint_lon": 610, "longitudeunit": [610, 613], "degrees_eastarrai": 610, "199997": 610, "nominal_satellite_height": 610, "gr": 610, "80": [610, 612, 628, 644, 658, 664], "ellipsoid": 610, "height_above_reference_ellipsoidunit": 610, "kmarrai": 610, "35786": 610, "023438": 610, "geospatial_lat_lon_ext": 610, "geospati": 610, "referencesgeospatial_westbound_longitud": 610, "152": [610, 666], "10928geospatial_northbound_latitud": 610, "76145geospatial_eastbound_longitud": 610, "94688geospatial_southbound_latitud": 610, "14": [610, 613, 614, 616, 618, 642, 645, 673, 685], "57134geospatial_lat_cent": 610, "083002geospatial_lon_cent": 610, "096954geospatial_lat_nadir": 610, "0geospatial_lon_nadir": 610, "0geospatial_lat_unit": 610, "degrees_northgeospatial_lon_unit": 610, "96921e": 610, "yaw_flip_flag": 610, "spacecraft": 610, "yaw": 610, "flip": 610, "configurationvalid_rang": 610, "1flag_valu": 610, "truearrai": 610, "esun": 610, "bandpass": 610, "solar": 610, "irradi": 610, "sun": 610, "distancestandard_nam": 610, "toa_shortwave_irradiance_per_unit_wavelengthunit": 610, "um": 610, "1cell_method": 610, "meanarrai": 610, "kappa0": 610, "incom": 610, "d2": 610, "instantan": [610, 620], "divid": 610, "reflectanceunit": 610, "planck_fk1": 610, "wavenumb": 610, "c2": 610, "nu3": 610, "emiss": 610, "monochromat": 610, "nu": 610, "constantsunit": 610, "10803": 610, "299805": 610, "planck_fk2": 610, "karrai": 610, "1392": [610, 620], "73999": 610, "planck_bc1": 610, "bc_1": 610, "bc_2": 610, "planck_funct": 610, "wavenumberunit": 610, "0755": 610, "planck_bc2": 610, "99975": 610, "valid_pixel_count": 610, "condition": 610, "pixelsunit": 610, "countgrid_map": 610, "sum": [610, 619, 662], "comment": [610, 611, 627, 655, 685], "3702838": 610, "missing_pixel_count": 610, "saturated_pixel_count": 610, "satur": 610, "radiometr": 610, "geoloc": 610, "undersaturated_pixel_count": 610, "undersatur": 610, "focal_plane_temperature_threshold_exceeded_count": 610, "exceed": 610, "thresholdunit": 610, "min_radiance_value_of_valid_pixel": 610, "pixelsstandard_nam": 610, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 610, "6443": 610, "185": 610, "5699": 610, "849287": 610, "max_radiance_value_of_valid_pixel": 610, "154": [610, 651], "23053": 610, "mean_radiance_value_of_valid_pixel": 610, "197975": 610, "std_dev_radiance_value_of_valid_pixel": 610, "toa_outgoing_radiance_per_unit_wavenumberunit": 610, "standard_devi": 610, "985853": 610, "maximum_focal_plane_temperatur": 610, "focal": 610, "valuevalid_rang": 610, "951939": 610, "focal_plane_temperature_threshold_increas": 610, "bound": [610, 613, 666], "81": [610, 612, 685], "focal_plane_temperature_threshold_decreas": 610, "percent_uncorrectable_l0_error": 610, "percent": 610, "l0": 610, "errorsvalid_rang": 610, "percentgrid_map": 610, "earth_sun_distance_anomaly_in_au": 610, "anomali": [610, 666], "astronom": 610, "unitsunit": 610, "uacell_method": 610, "016543": 610, "datainput_abi_l0_data": 610, "m6_g16_s20221932006173_e20221932008557_c": 610, "ncarrai": 610, "filenamesl1b_processing_parm_vers": 610, "parm": 610, "rad_g16_v01r00": 610, "ziparrai": 610, "packag": [610, 611, 612, 613, 614, 616, 618, 620, 621, 633, 677, 680, 683, 687, 688, 690], "versionalgorithm_vers": 610, "alg": 610, "rad_v01r00": 610, "zipproduct_vers": 610, "v01r00arrai": 610, "stararrai": 610, "vnir": 610, "ir": 610, "telemetryunit": 610, "countarrai": 610, "gain": [610, 613], "noaaconvent": 610, "7standard_name_vocabulari": 610, "administr": [610, 614, 632], "servicesproject": 610, "goesproduction_sit": 610, "wcdasproduction_environ": 610, "oespatial_resolut": 610, "2km": 610, "nadirmetadata_convent": 610, "discoveri": [610, 618], "0orbital_slot": 610, "eastplatform_id": 610, "g16instrument_typ": 610, "baselin": 610, "scene_id": 610, "conusinstrument_id": 610, "fm1titl": 610, "radiancessummari": 610, "digit": 610, "outgo": 610, "engin": 610, "radiancekeywords_vocabulari": 610, "nasa": 610, "master": [610, 620, 623, 655], "gcmd": 610, "scienc": [610, 614, 616, 679, 680, 681, 683, 684, 685], "0iso_series_metadata_id": 610, "a70be540": 610, "c38b": 610, "11e0": 610, "962b": 610, "0800200c9a66licens": 610, "restrict": 610, "approv": 610, "processing_level": 610, "aeronaut": 610, "l1bcdm_data_typ": 610, "imagedataset_nam": 610, "ncproduction_data_sourc": 610, "realtimetimeline_id": 610, "6date_cr": 610, "3ztime_coverage_start": 610, "3ztime_coverage_end": 610, "7zlut_filenam": 610, "637827000": 610, "h5": [610, 620], "qtableband13": 610, "fm1a_cdrl79revh_do_08_00_00": 610, "582860861": 610, "caltargettimeinterv": 610, "fm1a_cdrl79revp_do_08_00_01": 610, "611906620": 610, "bandsaturationlimit": 610, "600000000": 610, "solarspacelookparam": 610, "fm1a_adr1233_pr_09_08_25": 610, "709281036": 610, "deadrowlistparam": 610, "mirror_record": 610, "fm1a_cdrl79revg_do_07_00_00": 610, "kalmanastroconst": 610, "xml": [610, 616], "kalmanfiltercontrol": 610, "fm1a_pr_09_08_02": 610, "677650371": 610, "kalmanmeasmaxsens": 610, "fmaa_int_only_do_09_01_00": 610, "652936814": 610, "kalmanpreprocessorcontrol": 610, "fm1a_cdrl79revj_pr_09_06_02": 610, "657795700": 610, "kalmanreferencedata": 610, "888": 610, "kalmanstarcatalog": 610, "abi_navigationrdp_band13": 610, "fm1a_cdrl79revj_do_07_00_00": 610, "abi_navigationparameters_band13": 610, "fm1a_cdrl79revh_do_07_00_00": 610, "abi_resamplingimplementation_band13": 610, "fm1a_cdrl79revh_do_07_02_00": 610, "602129336": 610, "abi_resamplingparameters_band13": 610, "starlookparam": 610, "stardetectionparam": 610, "resamplingscaledconvers": 610, "fmaa_int_only_do_08_00_00": 610, "1111": [610, 613, 620], "blockreleaseregion": 610, "2222": 610, "csv": [610, 612], "ir_retrievalparamet": 610, "fm1a_cdrl79revh_do_09_01_00": 610, "652936750": 610, "radiancelut_band13": 610, "fm1a_cdrl79reve_do_08_00_00": 610, "ict_record": 610, "fm1a_tmabi_18_159_pr_09_00_02": 610, "icm_conversionconst": 610, "fm1a_cdrl43": 610, "18_do_09_01_00": 610, "icm_sensorcoeffici": 610, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 610, "676949608": 610, "h5id": 610, "da80a1d735a5": 610, "team": 610, "bobbi": [610, 636], "jackson": [610, 636], "pug": 610, "l2": [610, 620], "file_id": 610, "def": [610, 612, 616, 617, 620, 621, 642, 644, 666, 668, 688], "calculate_degre": 610, "x_coordinate_1d": 610, "y_coordinate_1d": 610, "projection_info": 610, "lon_origin": 610, "attr": 610, "longitude_of_projection_origin": 610, "perspective_point_height": 610, "semi_major_axi": 610, "r_eq": 610, "r_pol": 610, "semi_minor_axi": 610, "matric": 610, "x_coordinate_2d": 610, "y_coordinate_2d": 610, "meshgrid": [610, 636, 662], "lambda_0": 610, "a_var": 610, "b_var": 610, "c_var": 610, "r_": 610, "s_x": 610, "s_y": 610, "s_z": 610, "conu": 610, "seterr": 610, "abi_lat": 610, "arctan": 610, "abi_lon": 610, "crop": 610, "our": [610, 612, 615, 617, 627, 632, 633, 636, 642, 643, 663, 665, 666, 673, 677], "circ": 610, "95": [610, 612, 663, 685], "nan_to_num": 610, "9999": [610, 685], "lat_rang": 610, "lon_rang": 610, "lat_min": 610, "lat_max": 610, "lat_min_bound": 610, "argmin": 610, "lat_max_bound": 610, "lon_min": 610, "lon_max": 610, "lon_min_bound": 610, "lon_max_bound": 610, "a1": [610, 613, 618, 627, 651], "disoveri": 610, "toolkit": [610, 613, 614, 616, 618, 679, 680, 681, 683, 684, 685], "5439": [610, 613, 618], "1467901": 610, "page": [610, 615, 620, 623], "block": [610, 618, 620], "autom": [610, 616, 618], "catalogu": 610, "adam": [610, 620, 627], "theisen": [610, 627], "geometri": [610, 616, 620], "cell_track_info": 610, "read_csv": [610, 612], "raw": [610, 626, 627, 628, 637], "githubusercont": 610, "com": [610, 621, 655, 687, 688, 690], "adamtheisen": [610, 620], "cell": [610, 617, 618, 620, 654, 674], "houcsapr": 610, "20220617": 610, "index_col": 610, "parse_d": 610, "unnam": 610, "scan_mod": [610, 613, 620], "template_nam": 610, "azimuth_min": 610, "azimuth_max": 610, "elevation_min": 610, "elevation_max": 610, "range_min": 610, "range_max": 610, "cell_azimuth": 610, "cell_rang": 610, "cell_zh": 610, "ngates_gt_0": 610, "ngates_gt_10": 610, "ngates_gt_30": 610, "ngates_gt_50": 610, "ngates_gt_10_5km": 610, "ngates_gt40_5km": 610, "03": [610, 613, 632, 660, 670, 676, 686], "hou": 610, "303": [610, 620], "74450": 610, "637207": 610, "383545": 610, "109900": 610, "297": 610, "59216": 610, "307": [610, 620], "63367": 610, "021240": 610, "988037": 610, "910767": 610, "700": [610, 613, 616, 620], "930866": 610, "78": 610, "302": 610, "64587": 610, "645874": 610, "1800": [610, 612, 679], "776333": 610, "55798": 610, "59094": 610, "97546": 610, "99744": 610, "975464": 610, "900": [610, 679], "972101": 610, "46": [610, 663], "2826": 610, "301": [610, 620, 668, 670, 686], "48132": 610, "50330": 610, "648193": 610, "382324": 610, "503296": 610, "62400": 610, "327583": 610, "990": 610, "989": [610, 620], "210": [610, 666], "995": [610, 620], "2827": 610, "305": [610, 620], "70007": 610, "404297": 610, "700073": 610, "13600": 610, "29": [610, 613, 644], "037998": 610, "2828": 610, "23510": 610, "26807": 610, "235107": 610, "459156": 610, "2829": 610, "296": [610, 620], "08704": 610, "306": [610, 620], "16150": 610, "999268": 610, "998291": 610, "646362": 610, "59100": 610, "882927": 610, "807": 610, "783": [610, 620], "27": [610, 614, 663], "63": [610, 685], "830": 610, "2830": 610, "05835": 610, "08032": 610, "058350": 610, "62800": 610, "198204": 610, "767": [610, 620], "76": 610, "773": [610, 620], "2831": 610, "notebook": [610, 612, 613, 617, 619, 620, 626, 627, 628, 630, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 680, 683, 684, 690], "much": [610, 612, 613, 614, 616, 617, 618, 620, 662, 681, 683, 684], "frequent": 610, "start_hour": [610, 617], "end_hour": [610, 617], "utc": [610, 612, 613, 614, 617, 618, 632, 633, 644, 657], "48": [610, 612, 639], "04": [610, 613, 616, 617, 663, 676, 686], "38": [610, 613, 633, 686], "57": [610, 665, 666], "rjackson": [610, 636], "paw": 610, "houcsapr2cfrs2": 610, "20220712": 610, "200714": 610, "easili": [610, 616], "eol": 610, "cgi": 610, "codiac": 610, "fgr_form": 610, "016": 610, "lma_d": 610, "lylout_220712_000000_86400_map500m": 610, "afternoon": 610, "203229": 610, "lylout_220617_000000_86400_map500m": 610, "radarmapdisplai": [610, 612, 616, 617, 618, 620, 632, 633, 636, 645, 651, 663, 673, 675, 679, 680, 681, 683, 684], "subplot": [610, 612, 613, 614, 616, 617, 618, 620, 632, 636, 642, 643, 645, 657, 662, 663, 664, 665, 666, 667, 668, 669, 673, 681], "subplot_kw": 610, "disp": 610, "graph": [610, 611, 612, 613, 614, 616, 617, 618, 620, 626, 627, 628, 632, 633, 636, 637, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 673, 674, 675, 679, 680, 681, 683, 684], "150": [610, 611, 650, 668, 681], "plot_ppi_map": [610, 612, 616, 617, 618, 620, 632, 633, 636, 645, 651, 663, 673, 680, 681, 684], "flash_tim": 610, "squeez": [610, 679], "argwher": [610, 636], "logical_and": [610, 636], "flash_time_start": 610, "17t20": 610, "flash_center_longitud": 610, "flash_center_latitud": 610, "set_xlim": [610, 658, 662, 667], "96": [610, 612, 613, 636, 677, 684], "94": [610, 685], "set_ylim": [610, 658, 662, 667], "deprecationwarn": [610, 683], "escap": 610, "sequenc": [610, 614], "xf": 610, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 610, "ipykernel_41252": 610, "2371313213": 610, "opt": [610, 611, 613, 614, 620], "anaconda3": [610, 613, 614, 677, 680, 683, 687, 690], "env": [610, 611, 613, 614, 616, 618, 620, 677, 680, 683, 690], "pyart_env2": 610, "lib": [610, 613, 614, 616, 618, 680, 683, 687], "python3": [610, 613, 614, 616, 618, 619], "mpl": [610, 620, 667, 680, 683], "gridlin": [610, 614, 616, 645], "451": [610, 613], "userwarn": [610, 618], "xlabels_top": [610, 614], "deprec": [610, 614, 623, 680, 683], "top_label": [610, 616, 645], "toggl": [610, 620], "visibl": [610, 614, 620], "ylabels_right": [610, 614], "right_label": [610, 616, 645], "strike": 610, "overlaid": 610, "csapr_rhi": 610, "203012": 610, "flash_alt": 610, "flash_init_altitud": 610, "flash_lon": 610, "flash_init_longitud": 610, "flash_lat": 610, "flash_init_latitud": 610, "rhi_lon": 610, "flatten": [610, 636], "rhi_lat": 610, "rhi_alt": 610, "kdtree_data": 610, "stack": [610, 613, 616, 621, 687, 688], "inp_data": 610, "where_in_rhi": 610, "flash_rang": 610, "1e3": [610, 644], "motiv": [611, 614], "blog": [611, 616, 620, 621, 688], "come": [611, 614, 665], "colorschem": 611, "vision": 611, "defici": 611, "illustr": 611, "collabor": 611, "contributor": [611, 623, 677, 689], "guidenc": 611, "ve": [611, 617], "trip": [611, 684], "me": 611, "assist": 611, "https_link_to_your_fork": 611, "unfamiliar": 611, "yml": [611, 620, 677, 690], "slightli": [611, 614, 645], "latest": [611, 620, 621, 677, 688], "button": [611, 615, 623], "kshrc": 611, "export": [611, 687, 690], "pip": [611, 621, 687, 688, 690], "checkout": [611, 621, 623, 688], "newblog_post": 611, "plot_ppi_mdv": [611, 650, 660, 686], "radardisplai": [611, 612, 613, 618, 620, 626, 627, 628, 637, 642, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 659, 662, 664, 667, 668], "jonathan": [611, 626, 628, 638, 639, 647, 648, 650, 652, 656, 659, 690], "helmu": [611, 614, 616, 621, 626, 628, 638, 639, 647, 648, 650, 652, 656, 659, 677, 679, 680, 681, 683, 684, 685, 688, 690], "jhelmu": [611, 620, 626, 628, 638, 639, 647, 648, 650, 652, 656, 659], "anl": [611, 626, 628, 632, 633, 636, 638, 639, 642, 643, 645, 647, 648, 649, 650, 652, 654, 655, 656, 657, 659, 663, 664, 673, 674, 675], "licens": [611, 621, 626, 627, 628, 632, 633, 636, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 669, 673, 674, 675, 677, 688], "bsd": [611, 621, 626, 627, 628, 632, 633, 636, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 669, 673, 674, 675, 677, 688], "claus": [611, 621, 626, 627, 628, 632, 633, 636, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 669, 673, 674, 675, 688], "get_test_data": [611, 626, 628, 636, 638, 639, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 673, 674, 675], "110635": [611, 638, 650, 683], "figsiz": [611, 612, 613, 614, 616, 617, 618, 626, 628, 632, 633, 636, 637, 642, 643, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 664, 665, 666, 667, 668, 673, 680, 681, 683, 684], "add_subplot": [611, 626, 628, 637, 638, 639, 647, 648, 649, 650, 652, 653, 654, 655, 656, 659, 668], "111": [611, 612, 614, 617, 618, 636, 638, 639, 645, 648, 649, 650, 654, 655, 656, 663], "get_cmap": [611, 646, 665, 666], "jet": 611, "colorbind": 611, "pyart_homeyerrainbow": [611, 613, 636, 642, 643, 644, 645, 650, 653, 657, 658, 664], "plot_rhi_cfradial_singlescan": [611, 653, 660, 686], "panel": [611, 618, 630, 641, 660, 662, 686], "sgpxsaprrhicmaci5": [611, 652, 653, 657, 662], "c0": [611, 626, 652, 653, 657, 662, 680], "20110524": [611, 652, 653, 657, 662], "015604_nc4": [611, 652, 653, 657, 662], "read_cfradi": [611, 626, 636, 639, 643, 652, 653, 657, 662, 667, 668, 669], "subplots_adjust": [611, 613, 642, 652, 653], "hspace": [611, 613, 652, 653], "xlabel": [611, 613, 636, 652, 653, 681], "ylabel": [611, 613, 636, 652, 653, 681], "stage": 611, "my": [611, 687], "untrack": [611, 621, 688], "blog_pr": 611, "restor": 611, "discard": 611, "_static": 611, "As": [611, 613, 617, 621, 679, 681, 683, 684, 688], "statement": [611, 617, 620, 621, 688], "hint": [611, 614, 622], "wait": [611, 614], "editor": [611, 619, 621, 688, 690], "enh": [611, 620], "abort": 611, "person": 611, "addition": [611, 614], "anyon": 611, "respond": 611, "walk": [612, 613, 616, 617, 618, 619], "septemb": 612, "2021": [612, 665, 666], "thunderstorm": 612, "southern": 612, "wisconsin": [612, 620], "illinoi": 612, "trail": 612, "damag": [612, 616], "milwauke": [612, 616], "madison": 612, "imageri": [612, 616], "russ": 612, "schumach": 612, "colorado": 612, "unvers": 612, "put": 612, "togeth": [612, 613, 614, 620], "hi": [612, 666], "glob": [612, 613, 616, 617, 618, 621, 644, 688], "math": 612, "atan2": 612, "tempfil": 612, "cfeatur": [612, 614, 616, 617, 618], "mcolor": [612, 614, 646, 665, 666], "mdate": 612, "uscounti": [612, 616, 617], "imageio": 612, "pytz": [612, 620, 644], "temploc": 612, "mkdtemp": 612, "filterwarn": [612, 613, 614, 616, 617, 636], "let": [612, 613, 614, 615, 617, 618, 620, 621, 627, 632, 633, 636, 642, 644, 645, 662, 663, 665, 666, 668, 673, 679, 681, 683, 684, 685, 688, 690], "machin": [612, 613, 616, 618, 690], "kmkx": [612, 616], "nexrad_path": [612, 644], "level2": [612, 616, 617, 620, 632, 633, 644, 646, 665, 666], "d_": [612, 644], "kmkx20210907_170101_v06": 612, "kmkx20210907_170739_v06": 612, "kmkx20210907_171431_v06": 612, "kmkx20210907_172123_v06": 612, "kmkx20210907_172814_v06": 612, "kmkx20210907_173452_v06": 612, "kmkx20210907_174130_v06": 612, "kmkx20210907_174807_v06": 612, "kmkx20210907_175459_v06": 612, "kmkx20210907_175459_v06_mdm": 612, "read_nexrad_arch": [612, 616, 617, 632, 633, 644, 646, 647, 648, 665, 666], "possibli": 612, "add_featur": [612, 614, 616, 617, 618], "pyart_chasespectr": [612, 616, 617, 618, 674, 675], "70": [612, 613, 616, 632, 636, 643, 675], "set_ext": 612, "easier": [612, 613, 614], "scroll": 612, "radar_id": 612, "timestamp": [612, 613], "tz_local": 612, "later": [612, 614, 680, 683], "interfac": [612, 618, 620], "conn": 612, "nexradawsinterfac": 612, "get_avail_scans_in_rang": 612, "len": [612, 617, 642, 657, 667, 679], "kmkx20210907_151132_v06": 612, "kmkx20210907_152621_v06": 612, "kmkx20210907_150152_v06": 612, "kmkx20210907_151622_v06": 612, "kmkx20210907_152121_v06": 612, "kmkx20210907_150642_v06": 612, "kmkx20210907_155424_v06_mdm": 612, "kmkx20210907_153610_v06": 612, "kmkx20210907_154814_v06": 612, "kmkx20210907_155424_v06": 612, "kmkx20210907_154205_v06": 612, "kmkx20210907_160034_v06": 612, "kmkx20210907_160607_v06": 612, "kmkx20210907_161141_v06": 612, "kmkx20210907_163532_v06": 612, "kmkx20210907_161714_v06": 612, "kmkx20210907_162924_v06": 612, "kmkx20210907_164816_v06": 612, "kmkx20210907_165433_v06": 612, "kmkx20210907_165433_v06_mdm": 612, "kmkx20210907_162247_v06": 612, "kmkx20210907_153134_v06": 612, "kmkx20210907_164149_v06": 612, "kmkx20210907_182057_v06": 612, "kmkx20210907_182749_v06": 612, "kmkx20210907_184048_v06": 612, "kmkx20210907_180841_v06": 612, "kmkx20210907_183440_v06": 612, "kmkx20210907_185431_v06_mdm": 612, "kmkx20210907_181448_v06": 612, "kmkx20210907_180150_v06": 612, "kmkx20210907_185431_v06": 612, "kmkx20210907_190109_v06": 612, "kmkx20210907_190703_v06": 612, "kmkx20210907_193238_v06": 612, "kmkx20210907_191951_v06": 612, "kmkx20210907_191327_v06": 612, "kmkx20210907_195642_v06": 612, "kmkx20210907_194459_v06": 612, "kmkx20210907_195642_v06_mdm": 612, "kmkx20210907_193849_v06": 612, "kmkx20210907_184739_v06": 612, "kmkx20210907_192614_v06": 612, "kmkx20210907_195056_v06": 612, "now": [612, 613, 614, 616, 617, 618, 620, 627, 633, 636, 637, 642, 645, 663, 665, 666, 673, 679, 681, 687], "predict": 612, "tornado": [612, 616], "offic": [612, 614, 616, 679, 680, 681, 683, 684, 685], "acces": 612, "internet": 612, "wcm": 612, "2021_wind": 612, "read_spc_report": 612, "start_tim": 612, "end_tim": 612, "hazard": 612, "timezon": [612, 644], "gmt": 612, "torn": 612, "df": 612, "datafram": 612, "conver": 612, "to_datetim": [612, 613, 616], "set_index": 612, "inplac": 612, "ambigu": 612, "nat": 612, "nonexist": 612, "shift_forward": 612, "tz_convert": 612, "timedelta": [612, 616, 617], "wind_report": 612, "tornado_report": 612, "hail_report": 612, "om": 612, "yr": 612, "mo": 612, "st": 612, "stf": 612, "stn": 612, "elon": 612, "wid": 612, "sn": 612, "sg": 612, "f1": 612, "f2": 612, "f3": 612, "f4": 612, "657521": 612, "tx": 612, "7500": [612, 679], "331": [612, 620], "657522": 612, "4300": 612, "657523": 612, "0500": 612, "167": 612, "657524": 612, "0200": 612, "657525": 612, "1595": 612, "663777": 612, "sc": 612, "0100": [612, 618], "663778": 612, "663779": 612, "2200": 612, "663780": 612, "1900": 612, "49": [612, 613], "663781": 612, "1100": [612, 620], "6261": 612, "gc_latlon_bear_dist": 612, "lat1": 612, "lon1": 612, "decim": 612, "lat2": 612, "lon2": 612, "lat1r": 612, "deg2rad": 612, "lon1r": 612, "bearr": 612, "lat2r": 612, "lon2r": 612, "rad2deg": [612, 669], "add_scale_lin": 612, "fontsiz": [612, 613, 614, 617, 618, 626, 628, 642, 645, 654, 655], "fontweight": 612, "zoom": [612, 613], "black": [612, 620, 643, 662, 663], "frac_lat": 612, "frac_lon": 612, "e1": 612, "get_ext": 612, "center_lon": 612, "center_lat": 612, "shorten": 612, "hash": [612, 623], "lat1a": 612, "lon1a": 612, "lat1b": 612, "lon1b": 612, "lat2a": 612, "lon2a": 612, "lat2b": 612, "lon2b": 612, "horizontalalign": 612, "verticalalign": 612, "enumer": [612, 617], "iter_success": 612, "mdm": [612, 617], "this_tim": 612, "open_pyart": 612, "map_panel_ax": [612, 658], "x_cut_panel_ax": [612, 658], "y_cut_panel_ax": [612, 658], "masking_data_with_gatefilt": [612, 620], "ax1": [612, 613, 618, 626, 628, 643, 658, 659, 662, 665, 666, 668, 673], "add_ax": [612, 658], "recogniz": 612, "with_scal": 612, "500k": 612, "grai": [612, 614, 616, 645, 646, 662], "plot_colorbar": 612, "pad": [612, 617], "plot_range_r": [612, 620, 637, 648, 649, 651], "dash": [612, 614, 655], "set_xtick": [612, 662, 680, 683], "arang": [612, 618, 621, 636, 651, 654, 655, 662, 663, 667, 668, 669, 688], "set_ytick": [612, 662, 680, 683], "wind_reports_now": 612, "slon": 612, "tolist": 612, "slat": 612, "facecolor": [612, 614, 616], "deepskyblu": 612, "tornado_reports_now": 612, "tab": [612, 623, 643], "red": [612, 654, 655, 668], "hail_reports_now": 612, "lawngreen": 612, "legend": [612, 616, 617, 618, 643], "savefig": [612, 614, 616, 617], "_dz_rpt": 612, "bbox_inch": [612, 617], "tight": [612, 617], "white": [612, 614, 654, 668], "mp4": 612, "map_imag": 612, "gif_titl": 612, "delet": [612, 620, 621, 645, 688], "gif": 612, "get_writ": 612, "fp": 612, "writer": [612, 620], "imread": 612, "append_data": 612, "ffmpeg_writ": 612, "divis": [612, 620], "macro_block_s": 612, "resiz": 612, "1930": 612, "1766": 612, "1936": 612, "1776": 612, "video": 612, "codec": 612, "player": 612, "incompat": [612, 620, 624], "ipython": [612, 616, 617, 619, 690], "browser": 612, "event": [612, 617, 618, 665, 666], "overview": [612, 615, 623], "retrospect": 612, "ecosystem": 613, "By": [613, 614, 618, 624], "learn": [613, 617, 677], "portal": [613, 614], "march": [613, 616, 632], "shown": [613, 617, 642], "offici": [613, 621, 688], "probe": 613, "millimet": 613, "ghz": 613, "purpos": [613, 614, 665, 666], "nearli": [613, 654], "bokeh": 613, "formatt": 613, "datetimetickformatt": 613, "hv": 613, "guckazrcfrgem1": 613, "20220314": [613, 668], "000003": 613, "0x7f7dbd517400": 613, "linear_depolarization_ratio": 613, "mean_doppler_velocity_crosspolar_v": 613, "reflectivity_crosspolar_v": 613, "signal_to_noise_ratio_copolar_h": [613, 618], "signal_to_noise_ratio_crosspolar_v": 613, "spectral_width": 613, "spectral_width_crosspolar_v": 613, "vertical": 613, "awai": [613, 614], "pyart_bal": [613, 614, 618, 636, 657, 673, 681], "substanti": 613, "211": [613, 659], "ax2": [613, 618, 626, 628, 636, 643, 658, 659, 662, 664, 665, 666, 668, 673, 681], "212": [613, 655, 659, 660, 686], "pangeo": 613, "1736": 613, "600": [613, 679], "r_calib": 613, "14t00": 613, "489e": 613, "806e": 613, "107": 613, "886e": 613, "command_lin": 613, "kazrcfr_ingest": 613, "guc": 613, "m1": 613, "process_vers": 613, "kazrcfr": 613, "el7": 613, "dod_vers": 613, "kazrcfrg": 613, "input_sourc": 613, "guckazrm1": 613, "kazr_moments_": 613, "site_id": 613, "software_vers": 613, "wed": 613, "mar": 613, "leachman": 613, "1498936": 613, "histori": [613, 685], "dsmgr": 613, "procnode2": 613, "1736rang": 613, "600frequenc": 613, "1sweep": 613, "1r_calib": 613, "1coordin": 613, "453818": 613, "startstandard_nam": 613, "timearrai": 613, "453818000": 613, "527426000": 613, "601027000": 613, "002026000": 613, "075634000": 613, "149219000": 613, "float323": 613, "10long_nam": 613, "transmit": [613, 681], "frequencyunit": 613, "hzstandard_nam": 613, "radiation_frequencymeta_group": 613, "instrument_parametersarrai": 613, "float32100": 613, "130": 613, "803e": 613, "04long_nam": 613, "volumeunit": 613, "mmeters_between_g": 613, "979246meters_to_center_of_first_g": 613, "679245spacing_is_const": 613, "truestandard_nam": 613, "projection_range_coordinateaxi": 613, "radial_range_coordinatearrai": 613, "679245": 613, "6585": 613, "160": [613, 669, 683], "63774": 613, "17998": 613, "18028": 613, "268": 613, "18058": 613, "248": 613, "northunit": 613, "degreestandard_nam": 613, "sensor_to_target_azimuth_angleaxi": 613, "radial_azimuth_coordinatearrai": 613, "planeunit": 613, "sensor_to_target_elevation_angleaxi": 613, "radial_elevation_coordinatearrai": 613, "00long_nam": 613, "epochancillary_vari": 613, "time_offsetarrai": 613, "base_timeancillary_vari": 613, "base_timearrai": 613, "unspecifiedunit": 613, "dbstandard_nam": 613, "radar_linear_depolarization_ratiounpacking_detail": 613, "unpack": 613, "pack": [613, 620], "1041600": 613, "motion": 613, "instrumentunit": 613, "sstandard_nam": 613, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 613, "crosspolar": 613, "channelunit": 613, "factorunit": 613, "dbzstandard_nam": 613, "equivalent_reflectivity_factorunpacking_detail": 613, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 613, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 613, "widthunit": 613, "radar_doppler_spectrum_widthunpacking_detail": 613, "angleunit": 613, "degreearrai": 613, "n_sampl": 613, "momentsunit": 613, "1meta_group": 613, "instrument_parametersstandard_nam": 613, "number_of_samples_used_to_compute_momentsarrai": 613, "noise_figur": 613, "methodunit": 613, "dbarrai": 613, "67": [613, 665, 666], "8043": 613, "unambigu": [613, 685], "velocityunit": 613, "smeta_group": 613, "968252": 613, "repetit": 613, "timeunit": 613, "sarrai": 613, "00027": 613, "transmitt": 613, "r_calib_radar_constant_copol": 613, "copolarunit": 613, "dbmeta_group": 613, "radar_calibrationstandard_nam": 613, "calibrated_radar_constant_h_channelarrai": 613, "996191": 613, "r_calib_radar_constant_crosspol": 613, "crosspolarunit": 613, "405288": 613, "r_calib_two_way_radome_loss_h": 613, "radom": 613, "loss": 613, "radar_calibration_two_way_radome_loss_h_channelarrai": 613, "half": 613, "radar_measured_sky_noise_h": 613, "sky": 613, "dbmarrai": 613, "69": [613, 651], "03703": 613, "035995": 613, "0373": 613, "03814": 613, "05106": 613, "05984": 613, "radar_measured_sky_noise_v": 613, "radar_measured_transmit_pow": 613, "powerunit": 613, "dbmmeta_group": 613, "radar_transmit_powerarrai": 613, "143": [613, 669], "receiver_gain_copol": 613, "copolunit": 613, "sweepunit": 613, "1735": 613, "s22": 613, "basedunit": 613, "unambiguous_rang": [613, 685], "rangeunit": 613, "mmeta_group": 613, "unambiguous_rangearrai": 613, "40479": 613, "477": [613, 620], "degree_nstandard_nam": 613, "latitudevalid_min": 613, "0valid_max": 613, "0arrai": 613, "956158": 613, "degree_estandard_nam": 613, "longitudevalid_min": 613, "106": 613, "987854": 613, "altitudeunit": 613, "mstandard_nam": 613, "altitudearrai": 613, "2886": 613, "levelunit": 613, "heightarrai": 613, "m1convent": 613, "radar_calibrationprocess_vers": 613, "el7dod_vers": 613, "1input_sourc": 613, "kazr_moments_20220314": 613, "000005": 613, "datsite_id": 613, "gucplatform_id": 613, "kazrcfrgefacility_id": 613, "m1data_level": 613, "a1location_descript": 613, "laboratori": [613, 617], "sail": 613, "mt": 613, "crest": 613, "butt": [613, 614], "coloradodatastream": 613, "a1antenna_altitud": 613, "mantenna_diamet": 613, "mcomment": 613, "digital_rx_dec": 613, "24dualpol": 613, "0fft_len": 613, "512filter_length": 613, "67institut": 613, "radiat": [613, 614, 616, 618, 621, 677, 679, 680, 681, 683, 684, 685, 688], "research": [613, 614, 616, 621, 677, 679, 680, 681, 683, 684, 685, 688], "facilityn_g": 613, "1024num_spectral_averag": 613, "15pulse_compression_ratio": 613, "3range_gate_spacing_m": 613, "979246range_offset_ch1": 613, "mrange_offset_ch2": 613, "mscan_mod": 613, "pointingscan_nam": 613, "vptsoftware_vers": 613, "leachmantitl": 613, "momentsdoi": 613, "1498936histori": 613, "isel": 613, "coupl": [613, 618], "extra": [613, 616, 620], "won": [613, 617], "600rang": 613, "600coordin": 613, "395940000": 613, "469427000": 613, "542946000": 613, "360000": 613, "quadmesh": [613, 614], "0x7f7dad654f10": 613, "meant": [613, 615, 617], "popular": [613, 616], "jump": 613, "bar": 613, "hover": 613, "inspect": 613, "clabel": [613, 654, 655], "xformatt": 613, "ref_plot": 613, "7000": [613, 683], "platform_id": 613, "location_descript": 613, "xtick": [613, 680, 683], "ytick": [613, 680, 683], "vel_plot": 613, "prepar": [613, 614, 616, 618, 621, 679, 680, 681, 683, 684, 685, 688], "plot1": 613, "plot2": 613, "datashad": 613, "lazili": 613, "coars": 613, "intial": 613, "unfortun": 613, "ref_plot_rast": 613, "param": [613, 620], "dynamic_oper": 613, "outofboundsdatetim": 613, "nanosecond": 613, "54168": 613, "invok": 613, "x_rang": 613, "13t23": 613, "417014000": 613, "579705000": 613, "y_rang": 613, "traceback": 613, "recent": [613, 617, 620, 690], "mgrover": [613, 616, 618, 632, 636, 642, 643, 649, 657, 663, 664, 673, 674, 675], "277": [613, 620, 665, 670, 686], "get_plot_fram": 613, "map_obj": 613, "1344": 613, "val": 613, "_execute_callback": 613, "tuple_kei": 613, "retval": 613, "callback": 613, "arg": 613, "708": 613, "__call__": 613, "ret": 613, "__init__": [613, 621, 688], "1043": [613, 620], "obj": 613, "resolv": [613, 620], "1032": [613, 620], "1044": 613, "1036": 613, "_process": 613, "1018": [613, 620], "process_el": 613, "194": 613, "_appli": 613, "141": 613, "1514": 613, "predic": [613, 618], "pipelined_fn": 613, "method_fn": 613, "1223": 613, "super": [613, 648, 680, 683], "710": [613, 620], "map_fn": 613, "214": 613, "1133": [613, 620], "astyp": 613, "int64": [613, 627], "1497": [613, 620], "apply_ufunc": 613, "1159": 613, "apply_dataarray_vfunc": 613, "286": [613, 620], "result_var": 613, "data_var": 613, "750": [613, 620], "apply_variable_ufunc": 613, "as_compatible_data": 613, "234": 613, "_possibly_convert_object": 613, "178": 613, "asarrai": 613, "ravel": 613, "reshap": 613, "sanitize_arrai": 613, "567": [613, 620], "subarr": 613, "_try_cast": 613, "raise_cast_failur": 613, "726": [613, 620], "sanitize_to_nanosecond": 613, "arr": 613, "cast": 613, "1717": 613, "ensure_datetime64n": 613, "_lib": 613, "tslib": 613, "pyx": [613, 620], "257": 613, "np_datetim": 613, "120": [613, 679], "check_dts_bound": 613, "saw": 613, "few": [613, 620, 623, 690], "pro": 613, "con": 613, "thing": [613, 621, 688], "clear": [613, 618], "push": [613, 620, 621, 623, 688], "share": 613, "ran": [613, 621, 688], "shareabl": 613, "workflow": [613, 616, 620], "mb": [613, 629, 634, 640, 660, 670, 671, 676, 686], "difficult": [613, 636], "jupyterbook": 613, "jupyt": [613, 616, 620, 626, 627, 628, 630, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 690], "campaign": [613, 618, 666], "twitter": 614, "nou": 614, "dryglick": 614, "notic": [614, 618, 620, 636, 645], "odd": 614, "directli": [614, 642], "grei": 614, "darker": 614, "moir\u00e9": 614, "ryan": 614, "dopplershift": [614, 620], "turbul": 614, "ncei": 614, "search": [614, 677, 687], "aw": [614, 616, 620, 630, 631, 633, 634, 686], "mention": [614, 620, 621, 677, 688, 690], "he": 614, "n0u": [614, 632], "elgin": 614, "panhandl": 614, "kevx": 614, "1458": 614, "octob": 614, "landfal": 614, "gulf": 614, "lookl": 614, "webpag": 614, "cart": 614, "sent": 614, "email": [614, 618, 620], "websit": 614, "ftp": 614, "unzip": [614, 616], "kmob_sdus54_n0uevx_201810101458": 614, "partli": [614, 616, 679, 680, 681, 683, 684, 685], "facil": [614, 616, 617, 618, 621, 677, 679, 680, 681, 683, 684, 685, 688], "cite": [614, 616, 618, 620, 679, 680, 681, 683, 684, 685], "jj": [614, 616, 679, 680, 681, 683, 684, 685], "sm": [614, 616, 679, 680, 681, 683, 684, 685], "colli": [614, 616, 621, 677, 679, 680, 681, 683, 684, 685, 688], "jor": [614, 616, 621, 677, 679, 680, 681, 683, 684, 685, 688], "5334": [614, 616, 621, 677, 679, 680, 681, 683, 684, 685, 688], "119": [614, 616, 621, 633, 677, 679, 680, 681, 683, 684, 685, 688], "read_level3": 614, "dark": 614, "dark_background": [614, 644], "okai": 614, "88": [614, 616, 617, 663], "83": 614, "31msignatur": [614, 618], "0m": [614, 616, 618], "0mdisplai": 614, "34m": [614, 618], "0mplot_ppi_map": 614, "0mfield": 614, "0msweep": 614, "36m0": 614, "0mmask_tupl": 614, "32mnone": [614, 618], "0mvmin": 614, "0mvmax": 614, "0mcmap": 614, "0mnorm": 614, "0mmask_outsid": 614, "32mfals": 614, "0mtitl": 614, "0mtitle_flag": 614, "32mtrue": 614, "0mcolorbar_flag": 614, "0mcolorbar_label": 614, "0max": 614, "0mfig": 614, "0mlat_lin": 614, "0mlon_lin": 614, "0mproject": 614, "0mmin_lon": 614, "0mmax_lon": 614, "0mmin_lat": 614, "0mmax_lat": 614, "0mwidth": 614, "0mheight": 614, "0mlon_0": 614, "0mlat_0": 614, "0mresolut": 614, "0mshapefil": 614, "0mshapefile_kwarg": 614, "0medg": 614, "0mgatefilt": 614, "0mfilter_transit": 614, "0membelish": 614, "0mraster": 614, "0mtick": 614, "0mticklab": 614, "0malpha": 614, "31msourc": 614, "32mdef": 614, "0mself": 614, "embelish": [614, 620], "31m": 614, "0mparse_vmin_vmax": 614, "0m_radar": 614, "0mparse_cmap": 614, "32mif": 614, "32mi": 614, "0mnp": 614, "0marang": 614, "36m30": 614, "36m46": 614, "36m1": 614, "36m110": 614, "36m75": 614, "0mloc": 614, "0mdata": 614, "0m_get_data": 614, "0mx": 614, "0my": 614, "0m_get_x_i": 614, "0mma": 614, "0mmasked_outsid": 614, "0mplt": 614, "0mgcf": 614, "32mnot": 614, "0mhasattr": 614, "32mels": 614, "0mcartopi": 614, "0mcr": 614, "0mlambertconform": 614, "0mcentral_longitud": 614, "0mcentral_latitud": 614, "0mwarn": 614, "overrid": [614, 655], "lambert": [614, 620], "0muserwarn": 614, "0mset_ext": 614, "0mplatecarre": 614, "32melif": 614, "36m2": 614, "0mgrid_project": 614, "0mpm": 614, "0mpcolormesh": 614, "36m1000": 614, "0mtransform": 614, "graphic": 614, "0mset_raster": 614, "admin": [614, 621, 688], "0mstates_provinc": 614, "0mfeatur": 614, "0mnaturalearthfeatur": 614, "0mcategori": 614, "cultur": 614, "0mname": 614, "admin_1_states_provinces_lin": 614, "0mscale": 614, "0mfacecolor": 614, "0mcoastlin": 614, "0madd_featur": 614, "0medgecolor": 614, "pose": 614, "difficulti": 614, "spectif": 614, "32min": 614, "0mmercat": 614, "0mgl": 614, "0mgridlin": 614, "0mxloc": 614, "0myloc": 614, "0mdraw_label": 614, "0mxlabels_top": 614, "0mylabels_right": 614, "0misinst": 614, "0mfigur": 614, "0mcanva": 614, "0mdraw": 614, "maker": 614, "0mxaxi": 614, "0mset_major_formatt": 614, "0mmpl": 614, "0mlongitude_formatt": 614, "0myaxi": 614, "0mlatitude_formatt": 614, "0m_lambert_gridlin": 614, "0mlambert_xtick": 614, "0mlambert_ytick": 614, "32mfrom": 614, "0mio": 614, "0mshaperead": 614, "32mimport": 614, "0mreader": 614, "0madd_geometri": 614, "0mgeometri": 614, "0m_set_titl": 614, "0mplot": 614, "0mappend": 614, "0mplot_var": 614, "0mplot_colorbar": 614, "0mmappabl": 614, "0mlabel": 614, "32mreturn": 614, "31mfile": [614, 618], "git_repo": 614, "31mtype": [614, 618], "fashion": 614, "0marg": 614, "0mshade": 614, "0mantialias": 614, "0mkwarg": 614, "31mdocstr": [614, 618], "pseudocolor": 614, "signatur": [614, 616], "quadrilater": 614, "pcolor": 614, "prefer": [614, 620, 687], "shade": [614, 620], "flat": [614, 632], "gouraud": 614, "cari": 614, "expand": 614, "rc": 614, "regist": [614, 618], "canon": 614, "chosen": 614, "patch": [614, 654], "force_edgecolor": 614, "singular": [614, 617], "opaqu": 614, "solid": [614, 655], "quad": 614, "halfwai": 614, "galleri": [614, 620, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677, 686], "images_contours_and_field": 614, "pcolormesh_grid": 614, "snap": 614, "mesh": 614, "misc": [614, 620], "rasterization_demo": 614, "constructor": 614, "agg_filt": 614, "anim": 614, "antialias": [614, 654, 655], "aa": 614, "capstyl": 614, "clip_box": 614, "bbox": 614, "clip_on": 614, "clip_path": 614, "rgba": 614, "ec": 614, "fc": 614, "gid": 614, "hatch": 614, "in_layout": 614, "joinstyl": 614, "miter": 614, "bevel": 614, "thereof": 614, "offset_transform": 614, "path_effect": 614, "abstractpatheffect": 614, "picker": 614, "pickradiu": 614, "sketch_param": 614, "random": [614, 618], "zorder": 614, "imshow": [614, 620, 637, 638, 639, 642], "_ax": 614, "nrow": [614, 642], "ncolumn": 614, "_differ": 614, "li": 614, "handl": [614, 620], "polycollect": 614, "thu": [614, 623], "almost": 614, "slight": 614, "polygon": 614, "irrespect": 614, "One": [614, 617, 621, 679, 685, 688, 690], "masked_arrai": [614, 627, 668, 679, 685], "1e": [614, 668, 679, 685], "next": [614, 616, 623, 627, 632, 662], "get_gate_lat_lon_alt": [614, 618, 620], "565": [614, 620], "562763": 614, "560526": 614, "888458": 614, "886227": 614, "883991": 614, "562765": 614, "560532": 614, "892834": 614, "890606": 614, "888374": 614, "562769": 614, "56054": 614, "898003": 614, "89578": 614, "893553": 614, "562756": 614, "560509": 614, "880096": 614, "877857": 614, "875618": 614, "560513": 614, "881853": 614, "879616": 614, "877377": 614, "56276": 614, "560518": 614, "884874": 614, "88264": 614, "880404": 614, "92199": 614, "92222": 614, "92245": 614, "186806": 614, "18703": 614, "18723": 614, "922264": 614, "92254": 614, "2396": 614, "23986": 614, "24012": 614, "92231": 614, "92263": 614, "29231": 614, "29262": 614, "29292": 614, "92208": 614, "92218": 614, "02802": 614, "02811": 614, "0282": 614, "92212": 614, "92226": 614, "07571": 614, "07583": 614, "07595": 614, "922356": 614, "133934": 614, "1341": [614, 620], "13428": 614, "setup": [614, 618, 620, 632, 636, 642, 643, 649, 663, 677, 687], "geoaxi": 614, "border": [614, 654], "cbar": [614, 617, 645], "tick_param": [614, 668], "labels": 614, "set_label": [614, 617, 645], "gl": [614, 616, 645], "draw_label": [614, 616, 645], "xlabel_styl": [614, 645], "ylabel_styl": [614, 645], "kevz_velocity_2018_10_10_1458": 614, "specifici": 614, "pull": [614, 617, 620, 621, 622, 623, 633, 688], "pr": [614, 623], "importantli": 614, "api": [614, 620, 677], "abil": [614, 620, 677, 690], "arguement": 614, "appreci": [614, 677], "hello": 615, "welcom": 615, "narr": 615, "feedback": 615, "feel": 615, "know": [615, 617, 618, 690], "fridai": 616, "midwest": 616, "142": 616, "368": [616, 620, 649, 660, 686], "excess": 616, "65": [616, 617, 662, 668], "knot": 616, "mph": 616, "184": 616, "bing": 616, "diamet": 616, "ifram": 616, "spc": [616, 620], "climo": 616, "gmf": 616, "php": 616, "rpt": 616, "230331_rpts_filter": 616, "walworth": 616, "counti": 616, "southeastern": [616, 636], "geneva": 616, "tourist": 616, "especi": [616, 618, 637], "live": 616, "chicagoland": 616, "confirm": [616, 632, 679], "assembl": 616, "summari": [616, 632], "grlevel": 616, "encourag": 616, "peopl": 616, "cookbook": [616, 620, 677, 689], "moor": 616, "focu": 616, "varieti": [616, 618, 621, 630, 631, 666, 688], "forg": [616, 620, 621, 677, 687, 688, 690], "arm_pyart": [616, 621, 623, 677, 687, 688, 690], "shaperead": 616, "shpreader": 616, "shapelyfeatur": 616, "miniforge3": 616, "tqdm": 616, "tqdmwarn": 616, "iprogress": 616, "ipywidget": 616, "readthedoc": 616, "stabl": 616, "user_instal": 616, "autonotebook": 616, "notebook_tqdm": 616, "credit": 616, "censu": 616, "mac": [616, 620, 677], "curl": 616, "linux": [616, 620, 621, 677, 688, 690], "wget": 616, "www2": 616, "geo": [616, 620], "tiger": 616, "tiger2016": 616, "primaryroad": 616, "tl_2016_us_primaryroad": 616, "zip": [616, 617, 626, 627, 628, 630, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677], "xferd": 616, "dload": 616, "upload": [616, 620], "spent": 616, "7m": 616, "cpg": 616, "inflat": 616, "dbf": 616, "prj": 616, "shp": 616, "ea": 616, "iso": 616, "shx": 616, "reader": [616, 619, 620, 633, 644], "geom": 616, "loop": [616, 620, 669], "rec": 616, "fullnam": 616, "interstate_featur": 616, "darkblu": 616, "clean": [616, 617, 620, 662, 673], "filesystem": [616, 617, 644], "month": [616, 632, 633], "kmkx20230401_010517_v06": 616, "kmkx20230401_011057_v06": 616, "kmkx20230401_011638_v06": 616, "kmkx20230401_012219_v06": 616, "kmkx20230401_012759_v06": 616, "kmkx20230401_013341_v06": 616, "kmkx20230401_013922_v06": 616, "kmkx20230401_014502_v06": 616, "kmkx20230401_015042_v06": 616, "kmkx20230401_015623_v06": 616, "kmkx20230401_015928_v06": 616, "plot_configur": 616, "twilight_shift": [616, 673], "cross_correlation_ratio": [616, 617, 632, 646, 647, 665, 666, 684, 685], "plot_radar_ppi": 616, "left_field": 616, "right_field": 616, "plot_config": 616, "precip": 616, "vel_dealia": 616, "dealias_region_bas": [616, 620, 628, 662, 673, 681], "add_field": [616, 621, 626, 628, 662, 665, 666, 667, 668, 673, 680, 681, 688], "corrected_veloc": [616, 628, 662, 669, 673, 681, 684], "plot_numb": 616, "config": [616, 620, 679, 690], "121": [616, 618, 632, 636, 643, 664, 668, 673], "generate_titl": 616, "time_step": 616, "get_start_end": 616, "central_tim": 616, "astimezon": [616, 644], "new_titl": 616, "cdt": 616, "sharon": 616, "Near": 616, "delavan": 616, "6105": 616, "60666": 616, "lightgrei": 616, "lavenderblush": 616, "ppi_velocity_reflectivity_": 616, "flexibl": [616, 620], "hope": 616, "concept": 617, "quickstart": 617, "basic": [617, 620, 677, 678, 680], "visual": [617, 618, 620, 642, 646, 654, 663, 666, 673], "compet": 617, "bytesio": 617, "pil": 617, "ipimag": 617, "repositori": [617, 621, 622, 623, 677, 687, 688, 690], "chicago": 617, "klot": 617, "june": 617, "5th": 617, "start_dat": 617, "yyyi": [617, 618, 619], "dd": [617, 618, 619], "hh": 617, "end_dat": 617, "argonn": 617, "lemont": 617, "il": 617, "sawmil": 617, "creek": 617, "darien": 617, "ie": 617, "slot": 617, "700937896518866": 617, "73884644555692": 617, "99578103231573": 617, "98744136114946": 617, "tower": 617, "scm": [617, 620, 621, 688], "magenta": 617, "cyan": [617, 668], "current_d": 617, "date_str": 617, "date_str_compact": 617, "hour_str": 617, "all_fil": 617, "filtered_fil": 617, "endswith": [617, 644], "_mdm": [617, 644], "although": 617, "pol": 617, "check_radar_field": 617, "file_path": 617, "rb": 617, "radar_data": 617, "klot20240605_040442_v06": 617, "clutter_filter_power_remov": [617, 632], "spectrum_width": [617, 632, 684, 685], "differential_phas": [617, 632, 647, 684, 685], "streamlin": 617, "read_radar_data": 617, "tell": [617, 668, 684], "halt": 617, "unabl": 617, "sometim": [617, 623, 679], "reduc": [617, 646, 666, 687], "nonmeteorolog": 617, "blob": [617, 655], "aforement": 617, "fit": 617, "pure": 617, "aesthet": 617, "decis": 617, "basenam": 617, "markers": 617, "tight_layout": [617, 618, 637, 659, 662], "046": 617, "radar_frame_": 617, "frame": 617, "someth": [617, 677], "rid": 617, "temporarili": 617, "abl": [617, 677, 687], "pillow": 617, "gif_filenam": 617, "radar_anim": 617, "save_al": 617, "append_imag": 617, "durat": 617, "704120": 617, "968328": 617, "frames_dir": 617, "makedir": 617, "exist_ok": 617, "radar_displai": 617, "notabl": [618, 619], "insight": [618, 619], "analyz": [618, 621, 677, 684, 688], "decid": 618, "quicklook": 618, "januari": [618, 621, 677, 688], "wettest": 618, "la": 618, "jolla": 618, "california": 618, "tarfil": 618, "download_arm_data": 618, "0mact": 618, "0mdiscoveri": 618, "0mdownload_arm_data": 618, "0musernam": 618, "0mtoken": 618, "0mdatastream": 618, "0mstartdat": 618, "0menddat": 618, "0mtime": 618, "0moutput": 618, "webservic": 618, "usernam": [618, 687], "log": [618, 620, 623, 644], "adc": [618, 620], "datastream": 618, "acquir": 618, "startdat": 618, "yyyymmdd": 618, "thh": 618, "ss": 618, "15t12": 618, "enddat": 618, "15t13": 618, "hhmmss": 618, "programmat": 618, "rest": 618, "savedata": 618, "cron": 618, "job": 618, "workspac": 618, "disk": 618, "hpss": 618, "armliv": 618, "livedata": 618, "giansiracusa": 618, "giansiracumt": 618, "ornl": 618, "sgpmete13": 618, "jan": 618, "xxxxxxxxxxxxxxxx": 618, "download_data": 618, "mambaforg": 618, "epckasacrcfrs2": 618, "21t01": 618, "20240121": 618, "010020": 618, "010436": 618, "011116": 618, "012914": 618, "012503": 618, "011845": 618, "012257": 618, "010757": 618, "010118": 618, "011434": 618, "012708": 618, "011640": 618, "012051": 618, "hardin": 618, "isom": 618, "lindenmai": 618, "matthew": 618, "nelson": 618, "feng": 618, "deng": 618, "rocqu": 618, "castro": 618, "wendler": 618, "ka": 618, "kasacrcfr": 618, "1469302": 618, "trick": 618, "ones": [618, 642], "798": 618, "runtimewarn": 618, "encount": 618, "intersect": 618, "whic": 618, "ppi_fil": 618, "rhi_fil": 618, "elif": 618, "mainli": 618, "threshold_valu": 618, "suptitl": [618, 626, 628, 637, 657, 669], "too": [618, 620], "And": [618, 620, 627], "remaind": 618, "fromnumer": 618, "784": [618, 620], "maskedarrai": [618, 620], "kth": 618, "idea": [618, 679, 681], "0115": 618, "rhi_radar": 618, "ppi_radar": 618, "achiv": 618, "past": [619, 621, 688], "tag": [619, 620], "kernelspec": 619, "display_nam": 619, "ipykernel": 619, "languag": [619, 621, 677, 688], "language_info": 619, "codemirror_mod": 619, "file_extens": 619, "mimetyp": 619, "nbconvert_export": 619, "pygments_lex": 619, "ipython3": 619, "insert": 619, "nbformat": 619, "nbformat_minor": 619, "care": 619, "isilb": 620, "sinaram": 620, "1532": 620, "zssherman": 620, "get_azimuth": 620, "xradar": [620, 676, 686], "1547": 620, "mgrover1": 620, "1544": 620, "1542": 620, "1541": 620, "bridg": 620, "1537": 620, "columnsect": [620, 663], "1529": 620, "failur": 620, "wheel": 620, "1526": 620, "dep": 620, "bump": 620, "action": [620, 621, 623, 688], "group": [620, 621, 688], "1539": 620, "dependabot": 620, "epcap": 620, "1534": 620, "1530": 620, "1528": 620, "zdist_factor": 620, "1509": 620, "1524": 620, "1519": 620, "codeql": 620, "1515": 620, "pin": [620, 623], "ci": [620, 622, 623], "1507": 620, "xdrlib": 620, "1525": 620, "1518": 620, "1492": 620, "kmuehlbauer": 620, "rtanamachi": 620, "1504": 620, "1487": 620, "1478": 620, "jrobrien91": 620, "1503": 620, "1501": 620, "outdat": 620, "ipynb": [620, 626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675], "1490": 620, "1484": 620, "1482": 620, "1474": 620, "commit": [620, 621, 623, 688], "1506": 620, "1475": 620, "rainbow_wrl": 620, "happyxiaoanan": 620, "reclass": 620, "1495": 620, "rbhupi": 620, "1493": 620, "minor": [620, 637, 680, 683], "get_elev": 620, "1489": 620, "rescal": [620, 665, 666], "1486": 620, "1479": 620, "rcjackson": 620, "app": 620, "cmweather": 620, "1452": 620, "accessor": 620, "1457": 620, "1456": 620, "typo": 620, "1471": 620, "isinst": 620, "1448": 620, "1472": 620, "1470": 620, "1469": 620, "instruct": [620, 677, 689], "1462": 620, "1473": 620, "1468": 620, "1450": 620, "scolli": 620, "dim": 620, "load_kazr": 620, "1446": 620, "1447": 620, "arm_vpt": 620, "1445": 620, "lint": [620, 621, 688], "1444": 620, "mnt": 620, "1440": [620, 679], "dedic": 620, "1442": 620, "1443": 620, "1437": 620, "algorith": 620, "1434": 620, "wolfidan": 620, "1430": 620, "1433": 620, "1428": 620, "neutrinocero": 620, "odim": 620, "1425": 620, "gatemapp": [620, 630, 635, 640, 686], "1418": 620, "hook": [620, 621, 688], "1419": 620, "sphinx": [620, 626, 627, 628, 630, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675], "theme": 620, "1427": 620, "feet": 620, "1423": 620, "leak": 620, "mapper": 620, "1421": 620, "vforcel": 620, "1417": 620, "steepatticstair": 620, "1407": 620, "readm": [620, 687], "1397": 620, "1416": 620, "1413": 620, "1411": 620, "1409": 620, "1401": 620, "joshua": 620, "hampton": 620, "del": [620, 645], "old": 620, "conda_recip": 620, "1399": 620, "ruff": 620, "1388": 620, "wrong": 620, "1390": 620, "1385": 620, "1383": 620, "pkg_resourc": 620, "runtim": 620, "1394": 620, "mail": [620, 621, 677, 688], "1393": 620, "codeown": 620, "1391": 620, "1384": 620, "1382": 620, "1379": 620, "mismatch": 620, "1381": 620, "wrap": 620, "get_gate_area": 620, "1375": 620, "1380": [620, 679], "1372": 620, "exec_modul": 620, "load_modul": 620, "1369": 620, "badg": 620, "read_sigmet": 620, "1351": 620, "zouihao": 620, "unus": 620, "1343": 620, "1342": 620, "range_step": 620, "1338": 620, "max_num_g": 620, "1337": 620, "1327": 620, "revert": 620, "setuptool": 620, "unwant": 620, "cleanup": 620, "1357": 620, "1355": 620, "1339": 620, "1361": 620, "1335": 620, "manipul": [620, 645, 678], "1300": 620, "kylejgillett": 620, "melovato": 620, "tsbiscaro": 620, "1324": 620, "1319": 620, "1314": 620, "add_filt": 620, "1326": 620, "1320": [620, 679], "1325": 620, "jthielen": 620, "1303": 620, "jjhelmu": [620, 690], "wx4stg": 620, "antiviru": 620, "similiar": 620, "1307": 620, "1299": 620, "throw": 620, "convolve1d": 620, "1313": 620, "1306": 620, "1317": 620, "1311": 620, "jfigui": 620, "citat": [620, 621, 646, 677, 688], "1304": 620, "gamaanderson": 620, "hhuangwx": 620, "josephhardine": 620, "meteoswiss": [620, 667, 669], "mdr": 620, "ngui": 620, "tjlang": 620, "1294": 620, "1290": 620, "1285": 620, "1279": 620, "backward": [620, 624], "1278": 620, "1284": 620, "tracer": 620, "1296": 620, "1292": 620, "1287": 620, "cibuildwheel": 620, "1267": 620, "ocefpaf": 620, "1275": 620, "1276": 620, "1265": 620, "dcedgren": 620, "jilling": 620, "zhaobudaola": 620, "1263": 620, "1235": 620, "1215": 620, "1261": 620, "1241": 620, "1240": 620, "gatefi": 620, "1226": 620, "join_radar": 620, "repititon": 620, "iparam": 620, "1218": 620, "1216": 620, "trmm_rsl": 620, "1239": 620, "cftime": 620, "1211": 620, "incorrect": [620, 624, 681], "1231": 620, "ci_setup": 620, "1213": 620, "1264": 620, "1251": 620, "1234": 620, "1228": 620, "subset_radar": 620, "radar_util": 620, "1227": 620, "pyrad": 620, "1220": 620, "tst": 620, "1214": 620, "srbrodzik": 620, "1208": 620, "1204": 620, "1201": [620, 632], "1198": 620, "1196": 620, "catch": 620, "1191": 620, "1207": 620, "pypi": 620, "1206": 620, "unitest": 620, "1200": [620, 679], "1199": 620, "echoclass": 620, "1197": 620, "convv": 620, "awhil": 620, "back": 620, "1195": 620, "1190": 620, "dp": 620, "1184": 620, "solver": [620, 677], "1183": 620, "1176": 620, "1187": 620, "revis": 620, "270": [620, 621, 659, 688], "1185": 620, "1181": 620, "1178": 620, "1171": 620, "1180": 620, "1177": 620, "1173": 620, "sobitp59": 620, "rogu": 620, "1170": 620, "1160": 620, "1152": 620, "1151": 620, "mispel": 620, "1158": 620, "1148": 620, "1167": 620, "1154": 620, "unittest": 620, "1153": 620, "1136": 620, "trigger": 620, "1126": 620, "1118": 620, "1115": 620, "maco": 620, "1147": 620, "prune": 620, "1143": 620, "1141": 620, "1140": [620, 679], "1139": 620, "1137": 620, "1131": 620, "1130": 620, "1129": 620, "1128": 620, "1127": 620, "1125": 620, "1124": 620, "1123": 620, "1120": 620, "1119": 620, "dpr": 620, "1116": 620, "postcard": 620, "1104": 620, "1103": 620, "1122": 620, "gridmapdisplai": [620, 630, 641, 643, 644, 660, 665, 666, 674, 683, 686], "1099": 620, "quick": [620, 632], "1146": 620, "contribut": [620, 621, 688, 689], "1106": 620, "1117": 620, "1113": 620, "submodul": [620, 683], "1110": 620, "forgotten": 620, "1108": 620, "test_echo_class": 620, "1107": 620, "1101": 620, "1098": 620, "1097": 620, "1094": 620, "1080": [620, 679], "registri": 620, "1087": 620, "1096": 620, "1093": 620, "1090": 620, "1089": 620, "1088": 620, "1085": 620, "1084": 620, "analyt": 620, "1081": 620, "1079": 620, "1077": 620, "pmi": 620, "csp": 620, "ritvj": 620, "doesn": [620, 679], "mandat": 620, "1014": 620, "reallynicegui": 620, "hasattr": 620, "1034": 620, "overlap": [620, 645, 654], "mapdisplai": 620, "1029": 620, "azimuth_rhi_plot": 620, "1025": 620, "1019": 620, "rxm25": 620, "1075": 620, "1064": 620, "mute_radar": 620, "1033": 620, "1030": 620, "radxgrid": 620, "1027": 620, "1026": 620, "roadmap": 620, "repo": [620, 621, 688], "1059": 620, "sidebar": 620, "1074": 620, "datetime_util": 620, "1072": 620, "1071": 620, "pydata": 620, "1069": 620, "1068": 620, "1067": 620, "1066": 620, "1063": 620, "codecov": 620, "1061": 620, "1060": 620, "1058": 620, "1056": 620, "1055": 620, "1053": 620, "1051": 620, "1050": 620, "1048": 620, "branch": [620, 621, 623, 688, 690], "1040": 620, "1039": 620, "1038": 620, "1031": 620, "1024": 620, "1020": [620, 679], "humphreyscart": 620, "tkralph": 620, "1003": 620, "997": 620, "1007": 620, "1001": 620, "1010": 620, "travi": 620, "sty": [620, 621, 688], "pep8": [620, 621, 688], "1005": 620, "988": 620, "quba1": 620, "984": 620, "tdwr": 620, "969": 620, "956": 620, "994": 620, "979": 620, "h5py": [620, 677], "978": 620, "june1st": 620, "switch": [620, 621, 688], "973": 620, "maint": [620, 621, 688], "966": 620, "983": 620, "amarouan": 620, "abdelhak": 620, "bmgxyz": 620, "address": [620, 668], "962": 620, "mwilson14": 620, "963": 620, "nonetyp": 620, "regard": 620, "959": 620, "964": 620, "176": 620, "919": 620, "rda": 620, "903": 620, "add_gate_area": 620, "950": 620, "blotchi": 620, "947": 620, "946": 620, "944": 620, "694": 620, "938": 620, "vlouf": 620, "934": 620, "925": 620, "924": 620, "917": 620, "appveyor": 620, "937": 620, "927": 620, "liter": 620, "said": 620, "949": 620, "948": 620, "929": 620, "926": 620, "920": 620, "915": 620, "911": 620, "grwise1": 620, "jsignel": 620, "rumpki": 620, "broke": 620, "913": 620, "msg29": 620, "909": 620, "907": 620, "framework": 620, "910": 620, "912": 620, "napoleon": 620, "902": 620, "rtd": 620, "893": 620, "892": 620, "odimh5": 620, "898": 620, "895": [620, 628, 629, 686], "896": 620, "864": 620, "louiswick": 620, "hilderbrand": 620, "877": 620, "886": 620, "crash": 620, "878": 620, "891": 620, "zflamig": 620, "futur": [620, 621, 624, 688], "890": 620, "889": 620, "885": 620, "dstex": 620, "880": 620, "soon": 620, "879": 620, "plot_grid": [620, 643, 658, 665, 666, 674, 683], "to_xarrai": 620, "873": 620, "876": 620, "elementwis": 620, "anaconda": [620, 621, 623, 677, 687, 688], "faq": 620, "868": 620, "mvanlierwalq": 620, "848": 620, "grid_io": 620, "846": 620, "jhemedin": 620, "841": 620, "nbin": 620, "865": 620, "856": 620, "840": [620, 679], "caus": 620, "852": 620, "849": 620, "get_dataset": 620, "845": 620, "docstr": 620, "838": 620, "836": 620, "cheatsheet": 620, "fortran": 620, "bit": [620, 687], "environ": [620, 677, 687, 689], "contr": 620, "843": 620, "spell": 620, "835": 620, "read_d3r_gcpex_nc": 620, "842": 620, "eccc": 620, "837": 620, "taylbm": 620, "kenkeho": 620, "swnesbitt": 620, "827": 620, "822": 620, "806": 620, "804": 620, "800": [620, 662], "778": 620, "688": [620, 663], "incomplet": 620, "msg5": 620, "832": 620, "820": 620, "812": [620, 647, 660, 686], "deal": 620, "809": 620, "contiuum": 620, "gh": 620, "795": 620, "explicit": 620, "py2": 620, "790": 620, "sh": 620, "kai": 620, "muehlbauer": 620, "789": 620, "777": 620, "indexerror": 620, "check_outli": 620, "776": 620, "juhi24": 620, "770": 620, "imp": 620, "newer": [620, 687], "675": 620, "824": 620, "minu": 620, "803": 620, "738": 620, "799": 620, "792": 620, "favor": 620, "791": 620, "786": 620, "itself": [620, 685], "inc": 620, "794": 620, "rst": 620, "preformat": 620, "779": 620, "eaxmpl": 620, "834": 620, "833": [620, 668], "elsewher": 620, "831": 620, "828": 620, "821": 620, "pytest": [620, 621, 677, 687, 688], "818": 620, "atteun": 620, "817": 620, "simulated_veloc": [620, 684], "802": 620, "grab": [620, 657], "796": 620, "793": 620, "787": 620, "781": 620, "cvd": 620, "775": 620, "774": 620, "769": 620, "nl2": 620, "765": [620, 636, 640, 686], "miaoneng": 620, "gewitterblitz": 620, "liliaow567": 620, "764": 620, "coveral": 620, "messsag": 620, "761": 620, "757": 620, "set_raster": 620, "748": 620, "754": 620, "755": 620, "recompil": 620, "758": 620, "ngoldbaum": 620, "reciev": 620, "752": 620, "gate_id": [620, 684], "749": 620, "746": 620, "744": 620, "zxdawn": 620, "netcdftim": 620, "736": 620, "731": 620, "dot_product": 620, "729": 620, "test_rhi_elev": 620, "twice": [620, 666], "724": 620, "728": 620, "727": 620, "nosetest": 620, "715": 620, "vradh": 620, "vradv": 620, "quantiti": 620, "739": 620, "es5nhc": 620, "735": 620, "wave100": 620, "734": 620, "733": 620, "730": 620, "723": 620, "comp": 620, "721": 620, "cameron": 620, "homey": 620, "716": 620, "cameronhomey": 620, "jamessong": 620, "winash12": 620, "687": 620, "csnardi": 620, "645": 620, "docbuild": 620, "709": 620, "mhpicel": 620, "705": 620, "fromstr": 620, "704": 620, "692": 620, "651": 620, "711": 620, "calculate_velocity_textur": [620, 673, 681], "retreiv": 620, "672": 620, "bucket": [620, 632, 644], "673": 620, "653": 620, "638": 620, "635": 620, "frombuff": 620, "702": 620, "grid_mapp": 620, "707": [620, 654, 660, 686], "706": [620, 667, 670, 686], "goharkai": 620, "infinit": 620, "693": 620, "freemansw1": 620, "683": [620, 627, 629, 686], "674": 620, "668": 620, "contact": 620, "land": 620, "667": [620, 679], "665": 620, "662": 620, "661": 620, "attributeerror": 620, "656": 620, "oserror": 620, "650": 620, "overflowerror": 620, "648": 620, "happier": 620, "647": 620, "640": [620, 634], "639": 620, "634": 620, "620": 620, "itsjm": 620, "kirknorth": 620, "617": 620, "616": 620, "631": 620, "swap": 620, "el": 620, "plot_rai": 620, "618": 620, "_get_angl": 620, "613": 620, "607": 620, "linspac": [620, 621, 642, 646, 662, 665, 666, 679, 688], "603": 620, "627": 620, "623": 620, "596": 620, "595": 620, "632": 620, "630": 620, "625": 620, "tulipasilva": 620, "622": 620, "normbw": 620, "q": 620, "quit": [620, 677], "614": 620, "git": [620, 621, 677, 687, 688, 690], "611": 620, "608": 620, "mrugna": 620, "605": 620, "bld": 620, "kludg": 620, "604": 620, "acknowledg": [620, 677], "602": 620, "qpe": [620, 666], "mustafaalicelik": 620, "580": 620, "577": 620, "576": 620, "575": 620, "azim": 620, "546": 620, "pickl": 620, "unpickl": 620, "543": 620, "vcp": 620, "541": 620, "noaaport": 620, "seper": 620, "540": [620, 679], "521": 620, "459": 620, "590": 620, "bugfix": 620, "l3": 620, "135": 620, "eet": 620, "585": 620, "582": [620, 629], "570": 620, "558": 620, "ctm": 620, "553": 620, "542": 620, "aux_io": [620, 627], "read_gam": 620, "535": 620, "midnight": 620, "523": 620, "importerror": 620, "522": 620, "519": 620, "512": [620, 640], "510": 620, "phase_proc": 620, "zerodivis": 620, "494": 620, "485": 620, "unsupport": 620, "481": 620, "579": 620, "578": 620, "568": 620, "563": 620, "559": 620, "549": 620, "547": 620, "gamicfil": 620, "gamic_hdf5": 620, "536": 620, "524": 620, "513": 620, "balltre": 620, "504": 620, "501": 620, "482": 620, "479": 620, "594": 620, "561": 620, "despeckle_field": 620, "544": 620, "axislabel_flag": 620, "539": 620, "529": 620, "_get_x_z": 620, "491": 620, "486": 620, "586": 620, "572": 620, "fixup": 620, "569": 620, "560": 620, "555": [620, 663], "recip": [620, 623], "554": 620, "nose_arg": 620, "548": 620, "538": 620, "532": 620, "531": 620, "528": 620, "output_to_geotiff": 620, "514": 620, "511": 620, "507": 620, "506": 620, "498": 620, "libgfortran": 620, "497": 620, "495": 620, "493": 620, "489": 620, "488": 620, "argentinean": 620, "480": [620, 679], "bdolan44": 620, "dara74k": 620, "gavi": 620, "jacaicedob": 620, "wx": 620, "pfhein": 620, "tamisalex": 620, "469": 620, "468": 620, "467": 620, "luminos": 620, "464": 620, "455": 620, "hclass": 620, "447": 620, "439": [620, 653, 660, 686], "434": 620, "433": 620, "427": 620, "411": 620, "404": 620, "388": 620, "cross_section_ppi": [620, 659], "380": 620, "472": 620, "471": 620, "470": 620, "prf": 620, "460": 620, "get_field_colormap": 620, "446": 620, "444": 620, "example_cfradial_rhi": 620, "441": [620, 644], "417": 620, "struct": 620, "410": 620, "383": 620, "unicod": 620, "382": 620, "gatefit": 620, "372": 620, "465": 620, "refactor": 620, "463": 620, "decor": 620, "416": 620, "392": 620, "radxcovert": 620, "clarifi": 620, "475": 620, "406": [620, 651, 660, 686], "add_field_lik": [620, 627, 636], "397": 620, "391": 620, "376": 620, "370": 620, "corner_to_point": 620, "473": 620, "466": 620, "456": 620, "outstand": 620, "412": 620, "413": 620, "454": 620, "453": 620, "449": 620, "438": 620, "437": 620, "430": 620, "426": 620, "miniconda": [620, 621, 677, 688], "reactiv": 620, "422": 620, "plot_map_one_radar_to_grid": [620, 638, 640, 686], "420": [620, 679], "419": 620, "408": 620, "resilli": 620, "403": 620, "write_mdv_grid": 620, "402": 620, "401": 620, "399": 620, "395": 620, "documen": 620, "add_2d_latlon_axi": 620, "394": 620, "378": 620, "acess": 620, "377": 620, "373": 620, "deeplycloudi": 620, "358": [620, 621, 688], "edge_netcdf": 620, "read_edge_netcdf": 620, "357": [620, 621, 688], "dealias_fourdd": 620, "348": 620, "346": 620, "326": 620, "308": 620, "361": 620, "refl_filter_flag": 620, "map_gate_to_grid": 620, "334": 620, "region_dealia": 620, "327": 620, "libm": 620, "posix": 620, "319": 620, "unnecessari": 620, "inmemoryfil": 620, "365": 620, "359": [620, 621, 688], "354": 620, "_rsl_interfac": 620, "342": 620, "binstar": 620, "337": 620, "320": 620, "317": 620, "362": 620, "plot_grid_three_panel": 620, "353": 620, "confus": 620, "363": 620, "340": 620, "externalis": 620, "339": 620, "333": 620, "332": 620, "47": [620, 669], "324": 620, "323": 620, "271": 620, "binar": 620, "266": 620, "313": 620, "312": 620, "290": 620, "280": 620, "273": 620, "272": 620, "261": 620, "256": [620, 642, 667], "dealias_phase_unwrap": 620, "radarmapdispl": 620, "249": 620, "discontin": 620, "314": 620, "288": 620, "fault": 620, "276": 620, "dealias_unwrap_phas": 620, "275": 620, "corrupt": 620, "269": 620, "283": 620, "inconsist": 620, "274": 620, "254": [620, 666], "fallback": 620, "245": [620, 673, 676, 686], "316": 620, "ngates_vart": 620, "310": 620, "py3": [620, 690], "nexrad_level2": 620, "nexrad_level3": 620, "309": 620, "1byte": 620, "datatyp": 620, "weathergod": 620, "293": 620, "292": 620, "289": 620, "291": 620, "138": 620, "284": 620, "alter": 620, "267": 620, "latlon": 620, "264": 620, "262": 620, "260": 620, "259": 620, "258": 620, "241": [620, 638], "rebuild": 620, "237": 620, "scientif": [621, 677, 688], "e25": [621, 677, 688], "publish": [621, 688], "easiest": [621, 677, 688], "1st": [621, 677, 688], "Then": [621, 623, 677, 687, 688], "termin": [621, 677, 688, 690], "prompt": [621, 677, 688], "mamba": [621, 688], "openradar": [621, 688], "short": [621, 623, 688], "cours": [621, 636, 688], "ev": [621, 688], "pyart_short_cours": [621, 688], "youtub": [621, 688], "watch": [621, 688], "diip": [621, 688], "q3bkzw": [621, 688], "book": [621, 688], "rule": [621, 688], "pep": [621, 688], "0008": [621, 688], "afterward": [621, 688], "neccessari": [621, 688], "brief": [621, 622, 688], "parti": [621, 688], "explain": [621, 688], "_inverse_dist_squar": [621, 688], "_average1d": [621, 688], "seen": [621, 688], "explan": [621, 622, 688], "privat": [621, 688], "rerun": [621, 688], "test_vad": [621, 688], "test_radar": [621, 679, 688], "make_target_radar": [621, 688], "1000": [621, 639, 648, 654, 655, 662, 666, 683, 688], "ones_lik": [621, 688], "z_start": [621, 688], "z_end": [621, 688], "z_count": [621, 688], "vad_height": [621, 688], "vad_spe": [621, 688], "98665725": [621, 688], "94020686": [621, 688], "88107152": [621, 688], "81939374": [621, 688], "75851962": [621, 688], "vad_direct": [621, 688], "84659496": [621, 688], "30240553": [621, 688], "58658589": [621, 688], "81073051": [621, 688], "01353486": [621, 688], "01335138": [621, 688], "06014712": [621, 688], "12039762": [621, 688], "18410404": [621, 688], "24791911": [621, 688], "98663937": [621, 688], "9398407": [621, 688], "87958641": [621, 688], "81587601": [621, 688], "75205693": [621, 688], "assert_almost_equ": [621, 688], "pyarg": [621, 688], "test_cfradi": [621, 688], "cd": [621, 688], "fork": [621, 623, 688], "cartopy_map": [621, 688], "branch_nam": [621, 688], "task": [621, 630, 672, 688], "mind": [621, 636, 688], "simpli": [621, 665, 673, 681, 683, 687, 688, 690], "acronym": [621, 688], "finish": [621, 688, 690], "quotat": [621, 688], "hit": [621, 688], "depth": [621, 677, 685, 688], "acronymn": [621, 688], "gitwash": [621, 688], "development_workflow": [621, 688], "whitespac": [621, 688], "usual": [621, 633, 688], "vim": [621, 688], "fetch": [621, 627, 637, 662, 666, 667, 668, 669, 688], "ff": [621, 688], "sit": [621, 688], "guidanc": [621, 688], "anyth": 623, "creator": 623, "draft": 623, "shortlog": 623, "uplod": 623, "feedstock": 623, "clone": [623, 677, 687], "meta": 623, "yaml": 623, "sha256": 623, "rerend": 623, "smithi": 623, "bot": 623, "awar": 623, "semant": 624, "earlier": 624, "ceas": 624, "Such": 624, "proceed": 624, "futurewarn": 624, "__doc__": [626, 627, 628, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 665, 666], "sgpcsaprsurcmaci7": [626, 680], "20110520": [626, 680], "095101": [626, 680], "pop": 626, "specific_attenu": [626, 663, 667, 679, 684], "corrected_reflectivity_horizont": [626, 639, 643, 663, 673, 675, 679], "calculate_attenu": 626, "131": [626, 665, 666], "132": [626, 665, 666], "ax3": [626, 628, 658, 662, 665, 666, 668], "133": [626, 663, 665, 666], "004": [626, 629, 686], "plot_attenu": [626, 629, 686], "zach": 627, "sherman": [627, 633], "open_radar_data": [627, 637, 662, 666, 667, 668, 669], "sgpkazrgec1": 627, "20190529": 627, "000002": 627, "cdf": [627, 628, 662, 666], "read_kazr": 627, "reflectivity_copol": 627, "calc_cloud_mask": 627, "cloud_mask_radar": 627, "cloud_mask_2": 627, "ll": 627, "reflectivity_cloud_mask": 627, "flag_valu": 627, "no_cloud": 627, "999999": 627, "int16": 627, "plot_cloud_mask": [627, 629, 686], "ial": 628, "095636": [628, 681], "sonde_fil": 628, "sgpinterpolatedsondec1": 628, "c1": [628, 668, 684], "20110510": 628, "000000": 628, "dt": 628, "read_arm_sonde_vap": 628, "exclude_transit": [628, 638, 639, 643, 644, 664], "exclude_invalid": [628, 662], "exclude_outsid": [628, 644, 662], "dealias_data": 628, "sixth": 628, "221": [628, 647], "223": [628, 647], "ax4": 628, "224": [628, 647], "plot_dealia": [628, 629, 686], "mem": [629, 634, 640, 660, 670, 671, 676, 686], "examples_python": 630, "examples_jupyt": 630, "grover": [632, 636, 642, 643, 649, 657, 663, 664, 673, 674, 675], "filepath": [632, 633], "organ": 632, "radarsit": [632, 633], "_v06": 632, "khgx": 632, "aws_nexrad_level2_fil": [632, 633], "khgx20220322_120125_v06": 632, "relect": 632, "z_": [632, 636, 645, 668], "v_": 632, "noq": 632, "level3": 632, "aws_nexrad_level3_velocity_fil": 632, "hgx_n0u_2022_03_22_12_01_25": 632, "aws_nexrad_level3_reflectivity_fil": 632, "hgx_n0q_2022_03_22_12_01_25": 632, "read_nexrad_level3": 632, "radar_level3_veloc": 632, "radar_level3_reflect": 632, "reflectivity_displai": 632, "velocity_displai": 632, "766": [632, 634, 686], "plot_nexrad_data_aw": [632, 634, 686], "zachari": 633, "zsherman": [633, 690], "tendenc": 633, "gz": 633, "handford": 633, "ca": 633, "khnx": 633, "0203": 633, "v06": 633, "khnx20060724_020338": 633, "clearli": 633, "lucki": 633, "31417": 633, "63111": 633, "plote": [633, 651], "central_latitud": [633, 651, 665, 666, 680], "central_longitud": [633, 651, 665, 666, 680], "874": [633, 634, 686], "plot_older_nexrad_data_aw": [633, 634, 686], "xsapr": [636, 639, 643], "xsapr_sw_fil": [636, 639, 643], "swx_20120520_0641": [636, 639, 642, 643, 645, 649, 659, 663, 664, 665, 666, 673, 674, 675], "xsapr_se_fil": [636, 639, 643], "sex_20120520_0641": [636, 639, 643], "radar_sw": [636, 639, 643], "radar_s": [636, 639, 643], "southwestern": 636, "gmapper": 636, "radar_sw_mapped_to_radar_s": 636, "disp1": 636, "98": [636, 663, 669, 684], "97": [636, 639, 643, 646, 658, 663, 665, 666, 679], "disp2": 636, "remap": 636, "eyebal": 636, "fortun": 636, "reflectivity_se_radar": 636, "reflectivity_sw_radar": 636, "reflectivity_differ": 636, "reflectivity_bia": 636, "southwest": 636, "xspar": 636, "southeast": 636, "neccessarili": 636, "incl_gat": 636, "refl_s": 636, "refl_sw": 636, "values_without_mask": 636, "hist": [636, 673, 681], "histogram2d": 636, "masked_wher": [636, 662, 666, 684], "log_": 636, "plot_compare_two_radars_gatemapp": [636, 640, 686], "solut": 637, "arguabl": 637, "overlook": 637, "neglig": 637, "ze": 637, "2nd": 637, "4th": 637, "purpl": 637, "truncat": 637, "ok": 637, "israel": 637, "silber": 637, "file_nam": 637, "example_plot_ppi_single_sweep": 637, "processed_field": 637, "reflectivity_at_cor": 637, "radar_obj": 637, "nnow": 637, "ax_ind": 637, "sweep_obj": 637, "fig2": 637, "1601": 637, "40000": [637, 639, 643, 651, 683], "set_titl": [637, 642, 662, 665, 666], "nuse": 637, "819": [637, 640, 686], "plot_grid_single_sweep_ppi": [637, 640, 686], "123000": 638, "335": [638, 640, 686], "xsarp": [639, 652, 653], "gatefilter_s": [639, 643], "exclude_abov": [639, 643, 673, 681], "gatefilter_sw": [639, 643], "201": [639, 665, 666, 683], "57861": [639, 643], "363611": [639, 643], "593": [639, 640, 686], "plot_map_two_radars_to_grid": [639, 640, 686], "helper": 642, "vstack": 642, "plot_color_gradi": 642, "cmap_categori": 642, "cmap_list": 642, "figh": 642, "99": 642, "cmap_nam": 642, "pyart_": 642, "va": 642, "transax": 642, "spine": 642, "set_axis_off": 642, "perceptu": [642, 646], "diverg": 642, "meaning": 642, "terrain": 642, "spectral_r": 642, "rememb": 642, "front": 642, "992": [642, 660, 686], "plot_choose_a_colormap": [642, 660, 686], "181": 643, "blue": [643, 654, 655], "plot_cross_sect": [643, 660, 686], "syed44": 644, "purdu": 644, "grid_fil": 644, "20110520100000_nexrad_grid": [644, 658], "read_grid": [644, 658, 662, 666], "gdisplai": 644, "plot_maxcappi": 644, "download_nexrad": 644, "local_d": 644, "utc_dat": 644, "phwa": 644, "nexrad_arch": 644, "3d": 644, "max_rang": 644, "ceil": 644, "font_manag": 644, "findfont": 644, "font": 644, "famili": 644, "courier": 644, "195": [644, 660, 686], "plot_max_cappi": [644, 660, 686], "colobar": 645, "joe": 645, "brien": 645, "obrienj": 645, "perfect": 645, "coord": 645, "gca": 645, "set_major_loc": 645, "nullloc": 645, "axsb": 645, "ppi_map": 645, "set_tick": [645, 668], "060": [645, 660, 686], "plot_modify_colorbar": [645, 660, 686], "promin": [646, 666], "deemphas": 646, "depict": [646, 662], "ultim": 646, "misinterpret": 646, "lmtomkin": [646, 662, 665, 666], "ncsu": [646, 662, 665, 666], "nexrad_fil": [646, 665, 666], "kbgm": 646, "kbgm20200207_132642_v06": 646, "image_mute_radar": [646, 665, 666], "magma_cmap": 646, "magma_r": [646, 662, 665, 666], "grays_cmap": [646, 666], "gray_r": [646, 666], "nonmuted_cmap": 646, "linearsegmentedcolormap": [646, 665, 666], "from_list": [646, 665, 666], "muted_cmap": [646, 666], "nonmuted_reflect": [646, 665], "muted_reflect": [646, 666], "set_aspect": [646, 662, 665, 666, 667], "533": [646, 660, 686], "plot_nexrad_image_muted_reflect": [646, 660, 686], "katx20130717_195021_v06": [647, 685], "plot_nexrad_multiple_mo": [647, 660, 686], "level2_katx_20130717_1950": 648, "ar2v": 648, "875": [648, 660, 685, 686], "plot_nexrad_reflect": [648, 660, 686], "plot_cross_hair": 649, "plot_ppi_cfradi": [649, 660, 686], "158": [650, 651, 660, 686], "jason": [651, 658], "hemeding": [651, 658], "nsaxsaprppic1": 651, "20140201": 651, "184802": 651, "157": 651, "156": 651, "71": 651, "72": 651, "40km": 651, "plot_line_xi": 651, "20000": [651, 683], "200000": [651, 665, 666], "plot_point": 651, "plot_ppi_with_r": [651, 660, 686], "instrument_nam": [652, 653, 685], "agl": 652, "fac": 652, "nplot": [652, 653, 657], "snum": 652, "hsrhi": [652, 653], "3f": [652, 653], "time_start": 652, "num2dat": 652, "only_use_cftime_datetim": 652, "only_use_python_datetim": 652, "figure_titl": 652, "isoformat": 652, "813": [652, 660, 686], "plot_rhi_cfradi": [652, 660, 686], "differnenti": 654, "cori": [654, 655], "weber": [654, 655], "cweber": [654, 655], "220629": 654, "matplolib": 654, "visabl": 654, "flow": 654, "paramt": 654, "compens": 654, "00015": 654, "veri": [654, 662, 665, 666], "moir": 654, "001": 654, "get_start": [654, 655], "get_end": [654, 655], "blur": 654, "nice": [654, 687], "arbirarli": 654, "gaussian_filt": [654, 655], "ang": [654, 655], "levels_rain": 654, "levels_ic": 654, "contours_ic": 654, "contours_rain": 654, "fmt": [654, 655], "0000": [654, 655], "plot_rhi_contours_differential_reflect": [654, 660, 686], "spyi": 655, "034142": 655, "ramp": 655, "pyart_budrd18": 655, "coutour": 655, "major": 655, "axhlin": [655, 662], "axvlin": 655, "00b4ff": 655, "ff6800": 655, "set_ylabel": [655, 662, 668, 669], "cp": 655, "plot_rhi_data_overlai": [655, 660, 686], "110041": 656, "939": [656, 660, 686], "plot_rhi_mdv": [656, 660, 686], "fields_to_plot": 657, "plot_num": 657, "u00b0": 657, "829": [657, 660, 662, 670, 680, 683, 686], "plot_rhi_two_panel": [657, 660, 686], "plot_crosshair": 658, "plot_longitude_slic": 658, "plot_latitude_slic": [658, 683], "637": [658, 660, 686], "plot_three_panel_gridmapdisplai": [658, 660, 686], "225": 659, "xsect": 659, "379": [659, 660, 686], "plot_xsect": [659, 660, 686], "452": 660, "essenti": 662, "distinguish": 662, "insuffici": 662, "tenth": 662, "aggress": 662, "noisi": 662, "ref_data": 662, "ref_data_mask": 662, "masked_outsid": 662, "create_cfad": 662, "freq_norm_mask": 662, "masked_less_equ": [662, 666], "cfad_pm": 662, "plasma": 662, "set_xlabel": [662, 669], "8km": 662, "freq_norm2": 662, "freq_norm0": 662, "freq_norm2_mask": 662, "freq_norm0_mask": 662, "chart": 662, "14km": 662, "12km": 662, "swath": 662, "velocity_dealia": 662, "rdbu_r": 662, "bimod": 662, "reproduc": 662, "2c": 662, "demonstr": [662, 677], "ddop": 662, "910815": 662, "213931": 662, "altitude_data": 662, "field_data": 662, "maxdz": [662, 666], "vvel_data": 662, "w_wind": 662, "vvel_mask": 662, "masked_invalid": [662, 665], "field_data_mask": 662, "cont": 662, "plot_cfad": [662, 670, 686], "maxwel": [663, 664], "site_lon": 663, "73": 663, "site_lat": 663, "latitdu": 663, "pathcollect": 663, "0x7fc80ef230b0": 663, "get_field_loc": 663, "2kb": 663, "176b": 663, "350": 663, "818e": 663, "recalculated_diff_phas": [663, 679], "2778": 663, "unf_dp_phase_shift": [663, 679], "88b": 663, "145": [663, 666], "144": [663, 666], "diff_reflect": [663, 679], "8b": 663, "distance_from_radar": 663, "233": 663, "545": 663, "latitude_of_loc": 663, "longitude_of_loc": 663, "line2d": 663, "0x7fc7f9b45460": 663, "161": [663, 670, 686], "plot_column_subset": [663, 670, 686], "compz": 664, "composite_reflect": 664, "composite_displai": 664, "384": [664, 670, 686], "plot_composite_reflect": [664, 670, 686], "classifc": 665, "summer": [665, 666], "ian": [665, 666], "footprint": 665, "yield": 665, "smoother": 665, "curv": 665, "plot_convstrat_schem": 665, "pick": 665, "radii": 665, "dilat": 665, "conv_strat_yut": 665, "convsf_mask": 665, "masked_equ": [665, 666], "feature_detect": [665, 666], "convsf": [665, 666], "magma_r_cmap": [665, 666], "ref_cmap": [665, 666], "albersequalarea": [665, 666], "convsf_und": 665, "convsf_ov": 665, "uncertainti": [665, 666], "underest": [665, 666], "feature_und": [665, 666], "overest": [665, 666], "feature_ov": [665, 666], "ktbw": [665, 666], "ktbw20220928_190142_v06": [665, 666], "rasumussen": [665, 666], "2003": [665, 666], "reflecit": 665, "kokx": [665, 666], "kokx20210207_161413_v06": [665, 666], "nonmuted_ref": 665, "nonmuted_ref_linear": 665, "mm6": 665, "m3": 665, "snow_rat": [665, 666], "snow_rate_dict": 665, "40500": 665, "034": [665, 666], "ccotd": [665, 666], "rasmussen": [665, 666], "dixon": [665, 666, 677], "vasiloff": [665, 666], "hage": [665, 666], "knight": [665, 666], "vivekanandan": [665, 666], "xu": [665, 666], "nowcast": [665, 666], "accumul": [665, 666], "042": [665, 666], "3c0020": [665, 666], "snuart": [665, 666], "plot_convective_stratiform": [665, 670, 686], "heavili": 666, "customiz": 666, "manuscript": 666, "feature_mask": 666, "19990811": 666, "221202": 666, "convsf_cmap": 666, "140": 666, "253": 666, "231": 666, "csb": 666, "csb_mask": 666, "csl": 666, "convsf_lo": 666, "csl_mask": 666, "csh": 666, "convsf_hi": 666, "csh_mask": 666, "rpm": 666, "csbpm": 666, "set_yticklabel": [666, 668], "lo": 666, "cslpm": 666, "cshpm": 666, "csb_lt": 666, "csb_lt_mask": 666, "csu_lt": 666, "csu_lt_mask": 666, "cso_lt": 666, "cso_lt_mask": 666, "csupm": 666, "csopm": 666, "ztor": 666, "ref_field_ov": 666, "ref_field_und": 666, "2db": 666, "_overest": 666, "_underest": 666, "reflectivity_ov": 666, "reflectivity_und": 666, "snow_rate_ov": 666, "snow_rate_und": 666, "feature_estimate_dict": 666, "bpm": 666, "upm": 666, "opm": 666, "distinct": 666, "scalar_features_mask": 666, "cosine_features_mask": 666, "isol": 666, "faint_featur": 666, "faint_features_mask": 666, "features_faint_strong": 666, "features_faint_strong_mask": 666, "new_dict": 666, "comment_1": 666, "faint_strong_cmap": 666, "faint_strong": 666, "238": 666, "93": 666, "66": 666, "quickli": 666, "quick_image_mut": 666, "muted_ref": 666, "nonmuted_field": 666, "muted_field": 666, "snow_rate_nonmut": 666, "snow_rate_mut": 666, "features_nonmut": 666, "features_mut": 666, "srpm": 666, "srpmm": 666, "csbpmm": 666, "887": [666, 670, 686], "plot_feature_detect": [666, 670, 686], "daniel": [667, 669], "wolfensberg": [667, 669], "mll2217907250u": 667, "003": 667, "preinterpol": 667, "20220628072500_savevol_cosmo_lookup_temp": 667, "nwp_temp": 667, "calculate_attenuation_zphi": 667, "uncorrected_differential_phas": 667, "pia": 667, "pida": 667, "corrected_reflect": [667, 668, 684], "corrected_differential_reflect": [667, 668, 684], "kdp_maesaka": 667, "specific_differential_phas": [667, 684], "hydroclass_semisupervis": [667, 668], "uncorrected_cross_correlation_ratio": 667, "radar_echo_classif": 667, "boundarynorm": 667, "plot_hydrometeor": [667, 670, 686], "gucxprecipradarcmacppis2": 668, "025840": 668, "pyart_carbone42": 668, "corrected_specific_diff_phas": [668, 684], "hydromet_class": 668, "filtered_corrected_specific_diff_phas": [668, 684], "sounding_temperatur": [668, 684], "hydro_classif": 668, "2e9": 668, "pipelin": 668, "hid_color": 668, "lightblu": 668, "mediumblu": 668, "darkorang": 668, "lightpink": 668, "darkgrai": 668, "lime": 668, "yellow": 668, "cmaphid": 668, "listedcolormap": 668, "cmapmeth": 668, "cmapmeth_trop": 668, "adjust_fhc_colorbar_for_pyart": 668, "hd": 668, "adjust_meth_colorbar_for_pyart": 668, "zrain": 668, "z_all": 668, "z_c": 668, "two_panel_plot": 668, "var1": 668, "vmin1": 668, "vmax1": 668, "cmap1": 668, "rdylbu_r": 668, "units1": 668, "var2": 668, "vmin2": 668, "vmax2": 668, "cmap2": 668, "units2": 668, "return_flag": 668, "lim": 668, "plot_hydrometeor_class_x_band": [668, 670, 686], "2682": 669, "5470354519784": 669, "447328651323915": 669, "5273": 669, "055615736172": 669, "7533807586878538": 669, "7815": 669, "51210340485": 669, "341798234730959": 669, "10403": 669, "798749463633": 669, "977668723091483": 669, "14259": 669, "735154148191": 669, "905980195850134": 669, "18533": 669, "70608163625": 669, "262251073494554": 669, "22800": [669, 679], "97541932203": 669, "613871516659856": 669, "27060": [669, 679], "25919727981": 669, "959520922973752": 669, "31310": 669, "269606200978": 669, "29787217825651": 669, "35549": 669, "73140401952": 669, "62760841473937": 669, "39777": 669, "36820153147": 669, "94740904122591": 669, "43991": 669, "90973467566": 669, "25595719181001": 669, "50263": 669, "42219179496": 669, "671291364356875": 669, "58621": 669, "52730140835": 669, "22838316485286": 669, "71003": 669, "14627731778": 669, "68": 669, "92013945430517": 669, "87118": 669, "5253265705": 669, "4666496720165": 669, "106741": 669, "22752280161": 669, "65626102685928": 669, "125477": 669, "00644101389": 669, "124": 669, "97631322406232": 669, "143293": 669, "15816160105": 669, "38701202347875": 669, "160000": 669, "28993562795": 669, "68618156574667": 669, "mla2119412050u": 669, "zlevel": 669, "5000": [669, 683], "u_allsweep": 669, "v_allsweep": 669, "idx": 669, "radar_1sweep": 669, "vad_brown": 669, "u_avg": 669, "nanmean": 669, "v_avg": 669, "sharei": 669, "951": [669, 670, 686], "plot_vad": [669, 670, 686], "496": 670, "000": 671, "xd": [673, 674, 675], "open_cfradial1_datatre": [673, 674, 675], "to_radar": [673, 674, 675], "sweep_0": 673, "vel_textur": [673, 681], "velocity_textur": [673, 681, 684], "At": [673, 681], "velocity_dealias": [673, 681], "plot_dealias_xradar": [673, 676, 686], "101": 674, "10_000": 674, "50_000": 674, "698": [674, 676, 686], "plot_grid_xradar": [674, 676, 686], "720": [675, 676, 679, 686], "plot_xradar": [675, 676, 686], "663": 676, "conceptu": 677, "projectpythia": 677, "understand": 677, "maik": 677, "heistermann": 677, "bam": 677, "kellei": 677, "peura": 677, "pfaff": 677, "wolff": 677, "emerg": 677, "bull": 677, "amer": 677, "soc": 677, "117": 677, "128": 677, "00240": 677, "sophist": 677, "tutori": 677, "materi": 677, "erad": 677, "asr": 677, "asm": 677, "Or": 677, "pyart_env": [677, 680, 683, 690], "wish": 677, "unreleas": 677, "charg": 677, "resourc": [677, 687], "lassen": 677, "radtec": 677, "rsl_path": [677, 687], "usr": 677, "wrapper": 677, "fastest": 677, "cbc": 677, "glpk": 677, "coincbc": [677, 687, 690], "coin_install_dir": [677, 687, 690], "ask": [677, 690], "hypothet": 679, "dict_kei": [679, 684], "rain_rate_a": [679, 684], "volume_numb": 679, "platform_typ": 679, "instrument_typ": 679, "primary_axi": 679, "make_empty_ppi_radar": 679, "59416667": 679, "isn": 679, "240": 679, "660": 679, "780": 679, "960": 679, "1260": 679, "1560": 679, "1620": 679, "1680": 679, "1740": 679, "1860": 679, "1920": 679, "1980": 679, "2040": 679, "2100": 679, "2160": 679, "2220": 679, "2280": 679, "2340": 679, "2400": 679, "2460": 679, "2520": 679, "2580": 679, "2640": 679, "2700": 679, "2760": 679, "2820": 679, "2880": 679, "2940": 679, "3060": 679, "3120": 679, "3180": 679, "3240": 679, "3300": 679, "3360": 679, "3420": 679, "3480": 679, "3540": 679, "3600": 679, "3660": 679, "3720": 679, "3780": 679, "3840": 679, "3900": 679, "3960": 679, "4020": 679, "4080": 679, "4140": 679, "4200": 679, "4260": 679, "4320": 679, "4380": 679, "4440": 679, "4500": 679, "4560": 679, "4620": 679, "4680": 679, "4740": 679, "4800": 679, "4860": 679, "4920": 679, "4980": 679, "5040": 679, "5100": 679, "5160": 679, "5220": 679, "5280": 679, "5340": 679, "5400": 679, "5460": 679, "5520": 679, "5580": 679, "5640": 679, "5700": 679, "5760": 679, "5820": 679, "5880": 679, "5940": 679, "6000": [679, 683], "6060": 679, "6120": 679, "6180": 679, "6240": 679, "6300": 679, "6360": 679, "6420": 679, "6480": 679, "6540": 679, "6600": 679, "6660": 679, "6720": 679, "6780": 679, "6840": 679, "6900": 679, "6960": 679, "7020": 679, "7080": 679, "7140": 679, "7200": [679, 685], "7260": 679, "7320": 679, "7380": 679, "7440": 679, "7560": 679, "7620": 679, "7680": 679, "7740": 679, "7800": 679, "7860": 679, "7920": 679, "7980": 679, "8040": 679, "8100": 679, "8160": 679, "8220": 679, "8280": 679, "8340": 679, "8400": 679, "8460": 679, "8520": 679, "8580": 679, "8640": 679, "8700": 679, "8760": 679, "8820": 679, "8880": 679, "8940": 679, "9000": [679, 683], "9060": 679, "9120": 679, "9180": 679, "9240": 679, "9300": 679, "9360": 679, "9420": 679, "9480": 679, "9540": 679, "9600": 679, "9660": 679, "9720": 679, "9780": 679, "9840": 679, "9900": 679, "9960": 679, "10020": 679, "10080": 679, "10140": 679, "10200": 679, "10260": 679, "10320": 679, "10380": 679, "10440": 679, "10500": 679, "10560": 679, "10620": 679, "10680": 679, "10740": 679, "10800": 679, "10860": 679, "10920": 679, "10980": 679, "11040": 679, "11100": 679, "11160": 679, "11220": 679, "11280": 679, "11340": 679, "11400": 679, "11460": 679, "11520": 679, "11580": 679, "11640": 679, "11700": 679, "11760": 679, "11820": 679, "11880": 679, "11940": 679, "12060": 679, "12120": 679, "12180": 679, "12240": 679, "12300": 679, "12360": 679, "12420": 679, "12480": 679, "12540": 679, "12600": 679, "12660": 679, "12720": 679, "12780": 679, "12840": 679, "12900": 679, "12960": 679, "13020": 679, "13080": 679, "13140": 679, "13200": 679, "13260": 679, "13320": 679, "13380": 679, "13440": 679, "13500": 679, "13560": 679, "13620": 679, "13680": 679, "13740": 679, "13800": 679, "13860": 679, "13920": 679, "13980": 679, "14040": 679, "14100": 679, "14160": 679, "14220": 679, "14280": 679, "14340": 679, "14400": 679, "14460": 679, "14520": 679, "14580": 679, "14640": 679, "14700": 679, "14760": 679, "14820": 679, "14880": 679, "14940": 679, "15060": 679, "15120": 679, "15180": 679, "15240": 679, "15300": 679, "15360": 679, "15420": 679, "15480": 679, "15540": 679, "15600": 679, "15660": 679, "15720": 679, "15780": 679, "15840": 679, "15900": 679, "15960": 679, "16020": 679, "16080": 679, "16140": 679, "16200": 679, "16260": 679, "16320": 679, "16380": 679, "16440": 679, "16500": 679, "16560": 679, "16620": 679, "16680": 679, "16740": 679, "16800": 679, "16860": 679, "16920": 679, "16980": 679, "17040": 679, "17100": 679, "17160": 679, "17220": 679, "17280": 679, "17340": 679, "17400": 679, "17460": 679, "17520": 679, "17580": 679, "17640": 679, "17700": 679, "17760": 679, "17820": 679, "17880": 679, "17940": 679, "18000": [679, 683], "18060": 679, "18120": 679, "18180": 679, "18240": 679, "18300": 679, "18360": 679, "18420": 679, "18480": 679, "18540": 679, "18600": 679, "18660": 679, "18720": 679, "18780": 679, "18840": 679, "18900": 679, "18960": 679, "19020": 679, "19080": 679, "19140": 679, "19200": 679, "19260": 679, "19320": 679, "19380": 679, "19440": 679, "19500": 679, "19560": 679, "19620": 679, "19680": 679, "19740": 679, "19800": 679, "19860": 679, "19920": 679, "19980": 679, "20040": 679, "20100": 679, "20160": 679, "20220": 679, "20280": 679, "20340": 679, "20400": 679, "20460": 679, "20520": 679, "20580": 679, "20640": 679, "20700": 679, "20760": 679, "20820": 679, "20880": 679, "20940": 679, "21000": [679, 683], "21060": 679, "21120": 679, "21180": 679, "21240": 679, "21300": 679, "21360": 679, "21420": 679, "21480": 679, "21540": 679, "21600": 679, "21660": 679, "21720": 679, "21780": 679, "21840": 679, "21900": 679, "21960": 679, "22020": 679, "22080": 679, "22140": 679, "22200": 679, "22260": 679, "22320": 679, "22380": 679, "22440": 679, "22500": 679, "22560": 679, "22620": 679, "22680": 679, "22740": 679, "22860": 679, "22920": 679, "22980": 679, "23040": 679, "23100": 679, "23160": 679, "23220": 679, "23280": 679, "23340": 679, "23400": 679, "23460": 679, "23520": 679, "23580": 679, "23640": 679, "23700": 679, "23760": 679, "23820": 679, "23880": 679, "23940": 679, "24000": [679, 683], "24060": 679, "24120": 679, "24180": 679, "24240": 679, "24300": 679, "24360": 679, "24420": 679, "24480": 679, "24540": 679, "24600": 679, "24660": 679, "24720": 679, "24780": 679, "24840": 679, "24900": 679, "24960": 679, "25020": 679, "25080": 679, "25140": 679, "25200": 679, "25260": 679, "25320": 679, "25380": 679, "25440": 679, "25500": 679, "25560": 679, "25620": 679, "25680": 679, "25740": 679, "25800": 679, "25860": 679, "25920": 679, "25980": 679, "26040": 679, "26100": 679, "26160": 679, "26220": 679, "26280": 679, "26340": 679, "26400": 679, "26460": 679, "26520": 679, "26580": 679, "26640": 679, "26700": 679, "26760": 679, "26820": 679, "26880": 679, "26940": 679, "27000": [679, 683], "27120": 679, "27180": 679, "27240": 679, "27300": 679, "27360": 679, "27420": 679, "27480": 679, "27540": 679, "27600": 679, "27660": 679, "27720": 679, "27780": 679, "27840": 679, "27900": 679, "27960": 679, "28020": 679, "28080": 679, "28140": 679, "28200": 679, "28260": 679, "28320": 679, "28380": 679, "28440": 679, "28500": 679, "28560": 679, "28620": 679, "28680": 679, "28740": 679, "28800": 679, "28860": 679, "28920": 679, "28980": 679, "29040": 679, "29100": 679, "29160": 679, "29220": 679, "29280": 679, "29340": 679, "29400": 679, "29460": 679, "29520": 679, "29580": 679, "29640": 679, "29700": 679, "29760": 679, "29820": 679, "29880": 679, "29940": 679, "30000": [679, 683], "30060": 679, "30120": 679, "30180": 679, "30240": 679, "30300": 679, "30360": 679, "30420": 679, "30480": 679, "30540": 679, "30600": 679, "30660": 679, "30720": 679, "30780": 679, "30840": 679, "30900": 679, "30960": 679, "31020": 679, "31080": 679, "31140": 679, "31200": 679, "31260": 679, "31320": 679, "31380": 679, "31440": 679, "31500": 679, "31560": 679, "31620": 679, "31680": 679, "31740": 679, "31800": 679, "31860": 679, "31920": 679, "31980": 679, "32040": 679, "32100": 679, "32160": 679, "32220": 679, "32280": 679, "32340": 679, "32400": 679, "32460": 679, "32520": 679, "32580": 679, "32640": 679, "32700": 679, "32760": 679, "32820": 679, "32880": 679, "32940": 679, "33000": [679, 683], "33060": 679, "33120": 679, "33180": 679, "33240": 679, "33300": 679, "33360": 679, "33420": 679, "33480": 679, "33540": 679, "33600": 679, "33660": 679, "33720": 679, "33780": 679, "33840": 679, "33900": 679, "33960": 679, "34020": 679, "34080": 679, "34140": 679, "34200": 679, "34260": 679, "34320": 679, "34380": 679, "34440": 679, "34500": 679, "34560": 679, "34620": 679, "34680": 679, "34740": 679, "34800": 679, "34860": 679, "34920": 679, "34980": 679, "35040": 679, "35100": 679, "35160": 679, "35220": 679, "35280": 679, "35340": 679, "35400": 679, "35460": 679, "35520": 679, "35580": 679, "35640": 679, "35700": 679, "35760": 679, "35820": 679, "35880": 679, "35940": 679, "36000": [679, 683], "36060": 679, "36120": 679, "36180": 679, "36240": 679, "36300": 679, "36360": 679, "36420": 679, "36480": 679, "36540": 679, "36600": 679, "36660": 679, "36720": 679, "36780": 679, "36840": 679, "36900": 679, "36960": 679, "37020": 679, "37080": 679, "37140": 679, "37200": 679, "37260": 679, "37320": 679, "37380": 679, "37440": 679, "37500": 679, "37560": 679, "37620": 679, "37680": 679, "37740": 679, "37800": 679, "37860": 679, "37920": 679, "37980": 679, "38040": 679, "38100": 679, "38160": 679, "38220": 679, "38280": 679, "38340": 679, "38400": 679, "38460": 679, "38520": 679, "38580": 679, "38640": 679, "38700": 679, "38760": 679, "38820": 679, "38880": 679, "38940": 679, "39000": [679, 683], "39060": 679, "39120": 679, "39180": 679, "39240": 679, "39300": 679, "39360": 679, "39420": 679, "39480": 679, "39540": 679, "39600": 679, "39660": 679, "39720": 679, "39780": 679, "39840": 679, "39900": 679, "39960": 679, "59416776": 679, "59416886": 679, "59489769": 679, "59489879": 679, "5948999": 679, "59415662": 679, "59414657": 679, "5874659": 679, "58745576": 679, "58744563": 679, "59414621": 679, "59412575": 679, "5805231": 679, "58050246": 679, "58048182": 679, "59419881": 679, "59423095": 679, "61560159": 679, "61563401": 679, "61566644": 679, "59418877": 679, "59421087": 679, "6089062": 679, "6089285": 679, "60895079": 679, "59417836": 679, "59419005": 679, "60196382": 679, "60197561": 679, "60198741": 679, "get_metadata": 679, "ref_dict": 679, "reflecitivity_horizont": 679, "21875": 679, "34375": 679, "0078125": 679, "2109375": 679, "1171875": 679, "59375": 679, "421875": 679, "5625": 679, "7109375": 679, "609375": 679, "5078125": 679, "3828125": 679, "6875": 679, "328125": 679, "3203125": 679, "859375": 679, "6484375": 679, "8515625": 679, "9375": [679, 685], "0234375": 679, "6328125": 679, "2890625": 679, "546875": 679, "578125": 679, "6796875": 679, "ref_gt_0": 680, "mask_dict": 680, "reflectivity_mask": 680, "coolwarm": 680, "sherm": [680, 683], "782": [680, 683], "matplotlibdeprecationwarn": [680, 683], "position": [680, 683], "write_cfradi": 680, "new_radar": 680, "2pi": 681, "wave": 681, "3pi": 681, "erron": 681, "phenomena": [681, 685], "maximium": 681, "unambi": 681, "preprocess": 681, "thankfulli": [681, 683], "surround": [681, 683], "presenc": 681, "524973": 681, "vleociti": 681, "realist": 681, "characterist": 683, "100000": 683, "gates_to_grid": 683, "99000": 683, "98000": 683, "97000": 683, "96000": 683, "95000": 683, "94000": 683, "93000": 683, "92000": 683, "91000": 683, "90000": 683, "89000": 683, "88000": 683, "87000": 683, "86000": 683, "85000": 683, "84000": 683, "83000": 683, "82000": 683, "81000": 683, "80000": 683, "79000": 683, "78000": 683, "77000": 683, "76000": 683, "75000": 683, "74000": 683, "73000": 683, "72000": 683, "71000": 683, "70000": 683, "69000": 683, "68000": 683, "67000": 683, "66000": 683, "65000": 683, "64000": 683, "63000": 683, "62000": 683, "61000": 683, "59000": 683, "58000": 683, "57000": 683, "56000": 683, "55000": 683, "54000": 683, "53000": 683, "52000": 683, "51000": 683, "49000": 683, "48000": 683, "47000": 683, "46000": 683, "45000": 683, "44000": 683, "43000": 683, "42000": 683, "41000": 683, "38000": 683, "37000": 683, "35000": 683, "34000": 683, "32000": 683, "31000": 683, "29000": 683, "28000": 683, "26000": 683, "23000": 683, "22000": 683, "19000": 683, "16000": 683, "14000": 683, "13000": 683, "8000": 683, "longitudn": 683, "latitudn": 683, "suffer": 683, "artifici": 683, "feather": 683, "grid_bett": 683, "1750": 683, "sgpxsaprcmacsuri5": 684, "20171004": 684, "203018": 684, "total_pow": 684, "xsapr_clutt": 684, "signal_to_noise_ratio": 684, "unfolded_differential_phas": 684, "corrected_differential_phas": 684, "filtered_corrected_differential_phas": 684, "path_integrated_attenu": 684, "specific_differential_attenu": 684, "path_integrated_differential_attenu": 684, "nonhydrometeor": 684, "exclude_equ": 684, "refl_arrai": 684, "reflectivity_w_mask": 684, "iter_slic": [684, 685], "9344453454202706": 684, "620691732853737": 684, "3756584054113996": 684, "597935968662154": 684, "696735014111216": 684, "061894569912447": 684, "721673265240488": 684, "086695918593689": 684, "33930700509078": 684, "599363169483158": 684, "836875745223637": 684, "051601529570966": 684, "22435547210836": 684, "378109469982695": 684, "553820234067336": 684, "648943841665002": 684, "837593740986444": 684, "049614721040282": 684, "331202567459613": 684, "585432697375357": 684, "87002341270722": 684, "993012637722325": 684, "061966001642219": 684, "122799449619672": 684, "861035552720102": 684, "74608994279257": 684, "148801770281325": 684, "70860719727862": 684, "989513966551444": 684, "188644935344827": 684, "89301878240611": 684, "172644371021923": 684, "79879842243138": 684, "912806090219976": 684, "766281467013889": 684, "920522471877334": 684, "898600907318164": 684, "971026055481874": 684, "110503947133682": 684, "094456418731509": 684, "0822160050675675": 684, "036430544969512": 684, "259332430219459": 684, "2438254054588604": 684, "473482666015625": 684, "574283685503023": 684, "866719139946832": 684, "771468742643597": 684, "beam_azimuth_angl": 685, "azimuth_angle_from_true_north": 685, "radial_azimuth_coordin": 685, "beam_elevation_angl": 685, "elevation_angle_from_horizontal_plan": 685, "radial_elevation_coordin": 685, "1832": 685, "log_differential_reflectivity_hv": 685, "differential_phase_hv": 685, "equivalent_reflectivity_factor": 685, "cross_correlation_ratio_hv": 685, "correlation_ratio": 685, "meters_per_second": 685, "doppler_spectrum_width": 685, "radial_velocity_of_scatterers_away_from_instru": 685, "target_fixed_angl": 685, "degrees_north": 685, "degrees_east": 685, "projection_range_coordin": 685, "range_to_measurement_volum": 685, "radial_range_coordin": 685, "spacing_is_const": 685, "meters_to_center_of_first_g": 685, "2125": 685, "meters_between_g": 685, "s20": 685, "unitless": 685, "coplan": 685, "vertical_point": 685, "idl": 685, "azimuth_surveil": 685, "elevation_surveil": 685, "sunscan": 685, "manual_ppi": 685, "manual_rhi": 685, "17t19": 685, "21z": 685, "time_in_seconds_since_volume_start": 685, "calendar": 685, "gregorian": 685, "katx": 685, "original_contain": 685, "vcp_pattern": 685, "7470703": 685, "7196045": 685, "6893921": 685, "511719": 685, "get_slic": 685, "sweep_1": 685, "52734375": 685, "indici": 685, "slice_indic": 685, "9066728410400056": 685, "478547577741713": 685, "587792083929423": 685, "871031288639269": 685, "971692217963673": 685, "830616390843327": 685, "108188248095756": 685, "483419908190385": 685, "88976917057903": 685, "852766685681688": 685, "410455582269897": 685, "66444787446138": 685, "997862391449566": 685, "172098402018502": 685, "489752513534416": 685, "712565619531706": 685, "commonli": 685, "345": 686, "9x": 687, "10x": 687, "11x": 687, "But": 687, "bash": 687, "pythonpath": 687, "pth": 687, "build_ext": 687, "segfault": 687, "Theres": 687, "proper": 687, "reinstal": 687, "remedi": 687, "fno": 687, "protector": 687, "d_fortify_sourc": 687, "cflag": 687, "makefil": 687, "troubl": 687, "define_macro": 687, "macro": 687, "extra_compile_arg": 687, "m32": 687, "extra_link_arg": 687, "m64": 687, "proj_lib": 687, "plai": 687, "xx": 687, "xxx": 687, "mpl_toolkit": 687, "conflict": 690, "exit": 690, "led": 690, "manag": 690, "deactiv": 690, "enviro": 690, "scratch": 690, "spyder": 690, "though": 690, "yourusernam": 690, "youranacondadir": 690, "gitter": 690, "im": 690}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [127, 1, 0, "-", "correct"], [175, 1, 0, "-", "exceptions"], [176, 1, 0, "-", "filters"], [211, 1, 0, "-", "graph"], [370, 1, 0, "-", "io"], [391, 1, 0, "-", "lazydict"], [415, 1, 0, "-", "map"], [428, 1, 0, "-", "retrieve"], [470, 1, 0, "-", "testing"], [573, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_antenna"], [122, 0, 1, "", "cartesian_to_geographic"], [123, 0, 1, "", "cartesian_to_geographic_aeqd"], [124, 0, 1, "", "cartesian_vectors_to_geographic"], [125, 0, 1, "", "geographic_to_cartesian"], [126, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[128, 2, 1, "", "GateFilter"], [158, 0, 1, "", "calc_cloud_mask"], [159, 0, 1, "", "calc_noise_floor"], [160, 0, 1, "", "calculate_attenuation"], [161, 0, 1, "", "calculate_attenuation_philinear"], [162, 0, 1, "", "calculate_attenuation_zphi"], [163, 0, 1, "", "cloud_threshold"], [164, 0, 1, "", "correct_bias"], [165, 0, 1, "", "correct_noise_rhohv"], [166, 0, 1, "", "dealias_fourdd"], [167, 0, 1, "", "dealias_region_based"], [168, 0, 1, "", "dealias_unwrap_phase"], [169, 0, 1, "", "despeckle_field"], [170, 0, 1, "", "find_objects"], [171, 0, 1, "", "moment_based_gate_filter"], [172, 0, 1, "", "phase_proc_lp"], [173, 0, 1, "", "phase_proc_lp_gf"], [174, 0, 1, "", "range_correction"]], "pyart.correct.GateFilter": [[129, 3, 1, "", "copy"], [130, 3, 1, "", "exclude_above"], [131, 3, 1, "", "exclude_above_toa"], [132, 3, 1, "", "exclude_all"], [133, 3, 1, "", "exclude_below"], [134, 3, 1, "", "exclude_equal"], [135, 3, 1, "", "exclude_gates"], [136, 3, 1, "", "exclude_inside"], [137, 3, 1, "", "exclude_invalid"], [138, 3, 1, "", "exclude_last_gates"], [139, 3, 1, "", "exclude_masked"], [140, 3, 1, "", "exclude_none"], [141, 3, 1, "", "exclude_not_equal"], [142, 3, 1, "", "exclude_outside"], [143, 3, 1, "", "exclude_transition"], [144, 4, 1, "", "gate_excluded"], [145, 4, 1, "", "gate_included"], [146, 3, 1, "", "include_above"], [147, 3, 1, "", "include_all"], [148, 3, 1, "", "include_below"], [149, 3, 1, "", "include_equal"], [150, 3, 1, "", "include_gates"], [151, 3, 1, "", "include_inside"], [152, 3, 1, "", "include_none"], [153, 3, 1, "", "include_not_equal"], [154, 3, 1, "", "include_not_masked"], [155, 3, 1, "", "include_not_transition"], [156, 3, 1, "", "include_outside"], [157, 3, 1, "", "include_valid"]], "pyart.filters": [[177, 2, 1, "", "GateFilter"], [207, 0, 1, "", "iso0_based_gate_filter"], [208, 0, 1, "", "moment_and_texture_based_gate_filter"], [209, 0, 1, "", "moment_based_gate_filter"], [210, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[178, 3, 1, "", "copy"], [179, 3, 1, "", "exclude_above"], [180, 3, 1, "", "exclude_above_toa"], [181, 3, 1, "", "exclude_all"], [182, 3, 1, "", "exclude_below"], [183, 3, 1, "", "exclude_equal"], [184, 3, 1, "", "exclude_gates"], [185, 3, 1, "", "exclude_inside"], [186, 3, 1, "", "exclude_invalid"], [187, 3, 1, "", "exclude_last_gates"], [188, 3, 1, "", "exclude_masked"], [189, 3, 1, "", "exclude_none"], [190, 3, 1, "", "exclude_not_equal"], [191, 3, 1, "", "exclude_outside"], [192, 3, 1, "", "exclude_transition"], [193, 4, 1, "", "gate_excluded"], [194, 4, 1, "", "gate_included"], [195, 3, 1, "", "include_above"], [196, 3, 1, "", "include_all"], [197, 3, 1, "", "include_below"], [198, 3, 1, "", "include_equal"], [199, 3, 1, "", "include_gates"], [200, 3, 1, "", "include_inside"], [201, 3, 1, "", "include_none"], [202, 3, 1, "", "include_not_equal"], [203, 3, 1, "", "include_not_masked"], [204, 3, 1, "", "include_not_transition"], [205, 3, 1, "", "include_outside"], [206, 3, 1, "", "include_valid"]], "pyart.graph": [[212, 2, 1, "", "AirborneRadarDisplay"], [242, 2, 1, "", "GridMapDisplay"], [259, 2, 1, "", "GridMapDisplayBasemap"], [273, 2, 1, "", "RadarDisplay"], [302, 2, 1, "", "RadarMapDisplay"], [335, 2, 1, "", "RadarMapDisplayBasemap"], [368, 0, 1, "", "plot_convstrat_scheme"], [369, 0, 1, "", "plot_maxcappi"]], "pyart.graph.AirborneRadarDisplay": [[213, 3, 1, "", "generate_az_rhi_title"], [214, 3, 1, "", "generate_filename"], [215, 3, 1, "", "generate_ray_title"], [216, 3, 1, "", "generate_title"], [217, 3, 1, "", "generate_vpt_title"], [218, 3, 1, "", "label_xaxis_r"], [219, 3, 1, "", "label_xaxis_rays"], [220, 3, 1, "", "label_xaxis_time"], [221, 3, 1, "", "label_xaxis_x"], [222, 3, 1, "", "label_yaxis_field"], [223, 3, 1, "", "label_yaxis_y"], [224, 3, 1, "", "label_yaxis_z"], [225, 3, 1, "", "plot"], [226, 3, 1, "", "plot_azimuth_to_rhi"], [227, 3, 1, "", "plot_colorbar"], [228, 3, 1, "", "plot_cr_raster"], [229, 3, 1, "", "plot_cross_hair"], [230, 3, 1, "", "plot_grid_lines"], [231, 3, 1, "", "plot_label"], [232, 3, 1, "", "plot_labels"], [233, 3, 1, "", "plot_ppi"], [234, 3, 1, "", "plot_range_ring"], [235, 3, 1, "", "plot_range_rings"], [236, 3, 1, "", "plot_ray"], [237, 3, 1, "", "plot_rhi"], [238, 3, 1, "", "plot_sweep_grid"], [239, 3, 1, "", "plot_vpt"], [240, 3, 1, "", "set_aspect_ratio"], [241, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[243, 3, 1, "", "cartopy_coastlines"], [244, 3, 1, "", "cartopy_political_boundaries"], [245, 3, 1, "", "cartopy_states"], [246, 3, 1, "", "generate_filename"], [247, 3, 1, "", "generate_grid_title"], [248, 3, 1, "", "generate_latitudinal_level_title"], [249, 3, 1, "", "generate_longitudinal_level_title"], [250, 3, 1, "", "plot_colorbar"], [251, 3, 1, "", "plot_cross_section"], [252, 3, 1, "", "plot_crosshairs"], [253, 3, 1, "", "plot_grid"], [254, 3, 1, "", "plot_latitude_slice"], [255, 3, 1, "", "plot_latitudinal_level"], [256, 3, 1, "", "plot_longitude_slice"], [257, 3, 1, "", "plot_longitudinal_level"], [258, 3, 1, "", "plot_maxcappi"]], "pyart.graph.GridMapDisplayBasemap": [[260, 3, 1, "", "generate_filename"], [261, 3, 1, "", "generate_grid_title"], [262, 3, 1, "", "generate_latitudinal_level_title"], [263, 3, 1, "", "generate_longitudinal_level_title"], [264, 3, 1, "", "get_basemap"], [265, 3, 1, "", "plot_basemap"], [266, 3, 1, "", "plot_colorbar"], [267, 3, 1, "", "plot_crosshairs"], [268, 3, 1, "", "plot_grid"], [269, 3, 1, "", "plot_latitude_slice"], [270, 3, 1, "", "plot_latitudinal_level"], [271, 3, 1, "", "plot_longitude_slice"], [272, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[274, 3, 1, "", "generate_az_rhi_title"], [275, 3, 1, "", "generate_filename"], [276, 3, 1, "", "generate_ray_title"], [277, 3, 1, "", "generate_title"], [278, 3, 1, "", "generate_vpt_title"], [279, 3, 1, "", "label_xaxis_r"], [280, 3, 1, "", "label_xaxis_rays"], [281, 3, 1, "", "label_xaxis_time"], [282, 3, 1, "", "label_xaxis_x"], [283, 3, 1, "", "label_yaxis_field"], [284, 3, 1, "", "label_yaxis_y"], [285, 3, 1, "", "label_yaxis_z"], [286, 3, 1, "", "plot"], [287, 3, 1, "", "plot_azimuth_to_rhi"], [288, 3, 1, "", "plot_colorbar"], [289, 3, 1, "", "plot_cr_raster"], [290, 3, 1, "", "plot_cross_hair"], [291, 3, 1, "", "plot_grid_lines"], [292, 3, 1, "", "plot_label"], [293, 3, 1, "", "plot_labels"], [294, 3, 1, "", "plot_ppi"], [295, 3, 1, "", "plot_range_ring"], [296, 3, 1, "", "plot_range_rings"], [297, 3, 1, "", "plot_ray"], [298, 3, 1, "", "plot_rhi"], [299, 3, 1, "", "plot_vpt"], [300, 3, 1, "", "set_aspect_ratio"], [301, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[303, 3, 1, "", "generate_az_rhi_title"], [304, 3, 1, "", "generate_filename"], [305, 3, 1, "", "generate_ray_title"], [306, 3, 1, "", "generate_title"], [307, 3, 1, "", "generate_vpt_title"], [308, 3, 1, "", "label_xaxis_r"], [309, 3, 1, "", "label_xaxis_rays"], [310, 3, 1, "", "label_xaxis_time"], [311, 3, 1, "", "label_xaxis_x"], [312, 3, 1, "", "label_yaxis_field"], [313, 3, 1, "", "label_yaxis_y"], [314, 3, 1, "", "label_yaxis_z"], [315, 3, 1, "", "plot"], [316, 3, 1, "", "plot_azimuth_to_rhi"], [317, 3, 1, "", "plot_colorbar"], [318, 3, 1, "", "plot_cr_raster"], [319, 3, 1, "", "plot_cross_hair"], [320, 3, 1, "", "plot_grid_lines"], [321, 3, 1, "", "plot_label"], [322, 3, 1, "", "plot_labels"], [323, 3, 1, "", "plot_line_geo"], [324, 3, 1, "", "plot_line_xy"], [325, 3, 1, "", "plot_point"], [326, 3, 1, "", "plot_ppi"], [327, 3, 1, "", "plot_ppi_map"], [328, 3, 1, "", "plot_range_ring"], [329, 3, 1, "", "plot_range_rings"], [330, 3, 1, "", "plot_ray"], [331, 3, 1, "", "plot_rhi"], [332, 3, 1, "", "plot_vpt"], [333, 3, 1, "", "set_aspect_ratio"], [334, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[336, 3, 1, "", "generate_az_rhi_title"], [337, 3, 1, "", "generate_filename"], [338, 3, 1, "", "generate_ray_title"], [339, 3, 1, "", "generate_title"], [340, 3, 1, "", "generate_vpt_title"], [341, 3, 1, "", "label_xaxis_r"], [342, 3, 1, "", "label_xaxis_rays"], [343, 3, 1, "", "label_xaxis_time"], [344, 3, 1, "", "label_xaxis_x"], [345, 3, 1, "", "label_yaxis_field"], [346, 3, 1, "", "label_yaxis_y"], [347, 3, 1, "", "label_yaxis_z"], [348, 3, 1, "", "plot"], [349, 3, 1, "", "plot_azimuth_to_rhi"], [350, 3, 1, "", "plot_colorbar"], [351, 3, 1, "", "plot_cr_raster"], [352, 3, 1, "", "plot_cross_hair"], [353, 3, 1, "", "plot_grid_lines"], [354, 3, 1, "", "plot_label"], [355, 3, 1, "", "plot_labels"], [356, 3, 1, "", "plot_line_geo"], [357, 3, 1, "", "plot_line_xy"], [358, 3, 1, "", "plot_point"], [359, 3, 1, "", "plot_ppi"], [360, 3, 1, "", "plot_ppi_map"], [361, 3, 1, "", "plot_range_ring"], [362, 3, 1, "", "plot_range_rings"], [363, 3, 1, "", "plot_ray"], [364, 3, 1, "", "plot_rhi"], [365, 3, 1, "", "plot_vpt"], [366, 3, 1, "", "set_aspect_ratio"], [367, 3, 1, "", "set_limits"]], "pyart.io": [[371, 0, 1, "", "prepare_for_read"], [372, 0, 1, "", "read"], [373, 0, 1, "", "read_arm_sonde"], [374, 0, 1, "", "read_arm_sonde_vap"], [375, 0, 1, "", "read_cfradial"], [376, 0, 1, "", "read_chl"], [377, 0, 1, "", "read_grid"], [378, 0, 1, "", "read_grid_mdv"], [379, 0, 1, "", "read_mdv"], [380, 0, 1, "", "read_nexrad_archive"], [381, 0, 1, "", "read_nexrad_cdm"], [382, 0, 1, "", "read_nexrad_level3"], [383, 0, 1, "", "read_rsl"], [384, 0, 1, "", "read_sigmet"], [385, 0, 1, "", "read_uf"], [386, 0, 1, "", "write_cfradial"], [387, 0, 1, "", "write_grid"], [388, 0, 1, "", "write_grid_geotiff"], [389, 0, 1, "", "write_grid_mdv"], [390, 0, 1, "", "write_uf"]], "pyart.lazydict": [[392, 2, 1, "", "LazyLoadDict"], [405, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[393, 3, 1, "", "clear"], [394, 3, 1, "", "copy"], [395, 3, 1, "", "get"], [396, 3, 1, "", "has_key"], [397, 3, 1, "", "items"], [398, 3, 1, "", "keys"], [399, 3, 1, "", "pop"], [400, 3, 1, "", "popitem"], [401, 3, 1, "", "set_lazy"], [402, 3, 1, "", "setdefault"], [403, 3, 1, "", "update"], [404, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[406, 3, 1, "", "clear"], [407, 3, 1, "", "get"], [408, 3, 1, "", "items"], [409, 3, 1, "", "keys"], [410, 3, 1, "", "pop"], [411, 3, 1, "", "popitem"], [412, 3, 1, "", "setdefault"], [413, 3, 1, "", "update"], [414, 3, 1, "", "values"]], "pyart.map": [[416, 2, 1, "", "GateMapper"], [420, 0, 1, "", "example_roi_func_constant"], [421, 0, 1, "", "example_roi_func_dist"], [422, 0, 1, "", "example_roi_func_dist_beam"], [423, 0, 1, "", "grid_from_radars"], [424, 0, 1, "", "grid_ppi_sweeps"], [425, 0, 1, "", "grid_rhi_sweeps"], [426, 0, 1, "", "map_gates_to_grid"], [427, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[417, 4, 1, "", "distance_tolerance"], [418, 3, 1, "", "mapped_radar"], [419, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[429, 0, 1, "", "ZtoR"], [430, 0, 1, "", "calculate_snr_from_reflectivity"], [431, 0, 1, "", "calculate_velocity_texture"], [432, 0, 1, "", "composite_reflectivity"], [433, 0, 1, "", "compute_cdr"], [434, 0, 1, "", "compute_evp"], [435, 0, 1, "", "compute_l"], [436, 0, 1, "", "compute_noisedBZ"], [437, 0, 1, "", "compute_qvp"], [438, 0, 1, "", "compute_rqvp"], [439, 0, 1, "", "compute_snr"], [440, 0, 1, "", "compute_svp"], [441, 0, 1, "", "compute_ts_along_coord"], [442, 0, 1, "", "compute_vp"], [443, 0, 1, "", "conv_strat_raut"], [444, 0, 1, "", "conv_strat_yuter"], [445, 0, 1, "", "create_cfad"], [446, 0, 1, "", "dealias_spectra"], [447, 0, 1, "", "est_rain_rate_a"], [448, 0, 1, "", "est_rain_rate_hydro"], [449, 0, 1, "", "est_rain_rate_kdp"], [450, 0, 1, "", "est_rain_rate_z"], [451, 0, 1, "", "est_rain_rate_za"], [452, 0, 1, "", "est_rain_rate_zkdp"], [453, 0, 1, "", "est_rain_rate_zpoly"], [454, 0, 1, "", "feature_detection"], [455, 0, 1, "", "fetch_radar_time_profile"], [456, 0, 1, "", "get_freq_band"], [457, 0, 1, "", "grid_displacement_pc"], [458, 0, 1, "", "grid_shift"], [459, 0, 1, "", "hydroclass_semisupervised"], [460, 0, 1, "", "kdp_maesaka"], [461, 0, 1, "", "kdp_schneebeli"], [462, 0, 1, "", "kdp_vulpiani"], [463, 0, 1, "", "map_profile_to_gates"], [464, 0, 1, "", "quasi_vertical_profile"], [465, 0, 1, "", "spectra_moments"], [466, 0, 1, "", "steiner_conv_strat"], [467, 0, 1, "", "texture_of_complex_phase"], [468, 0, 1, "", "vad_browning"], [469, 0, 1, "", "vad_michelson"]], "pyart.testing": [[471, 2, 1, "", "Grid"], [481, 2, 1, "", "InTemporaryDirectory"], [483, 2, 1, "", "Radar"], [512, 2, 1, "", "RadarSpectra"], [557, 0, 1, "", "get_metadata"], [558, 0, 1, "", "get_test_data"], [559, 0, 1, "", "make_empty_grid"], [560, 0, 1, "", "make_empty_ppi_radar"], [561, 0, 1, "", "make_empty_rhi_radar"], [562, 0, 1, "", "make_empty_spectra_radar"], [563, 0, 1, "", "make_gaussian_storm_grid"], [564, 0, 1, "", "make_normal_storm"], [565, 0, 1, "", "make_single_ray_radar"], [566, 0, 1, "", "make_storm_grid"], [567, 0, 1, "", "make_target_grid"], [568, 0, 1, "", "make_target_radar"], [569, 0, 1, "", "make_target_rhi_radar"], [570, 0, 1, "", "make_target_spectra_radar"], [571, 0, 1, "", "make_velocity_aliased_radar"], [572, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[472, 3, 1, "", "add_field"], [473, 3, 1, "", "get_point_longitude_latitude"], [474, 3, 1, "", "get_projparams"], [475, 3, 1, "", "init_point_altitude"], [476, 3, 1, "", "init_point_longitude_latitude"], [477, 3, 1, "", "init_point_x_y_z"], [478, 4, 1, "", "projection_proj"], [479, 3, 1, "", "to_xarray"], [480, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[482, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[484, 3, 1, "", "add_field"], [485, 3, 1, "", "add_field_like"], [486, 3, 1, "", "add_filter"], [487, 3, 1, "", "check_field_exists"], [488, 3, 1, "", "extract_sweeps"], [489, 3, 1, "", "get_azimuth"], [490, 3, 1, "", "get_elevation"], [491, 3, 1, "", "get_end"], [492, 3, 1, "", "get_field"], [493, 3, 1, "", "get_gate_area"], [494, 3, 1, "", "get_gate_lat_lon_alt"], [495, 3, 1, "", "get_gate_x_y_z"], [496, 3, 1, "", "get_nyquist_vel"], [497, 3, 1, "", "get_slice"], [498, 3, 1, "", "get_start"], [499, 3, 1, "", "get_start_end"], [500, 3, 1, "", "info"], [501, 3, 1, "", "init_gate_altitude"], [502, 3, 1, "", "init_gate_longitude_latitude"], [503, 3, 1, "", "init_gate_x_y_z"], [504, 3, 1, "", "init_rays_per_sweep"], [505, 3, 1, "", "iter_azimuth"], [506, 3, 1, "", "iter_elevation"], [507, 3, 1, "", "iter_end"], [508, 3, 1, "", "iter_field"], [509, 3, 1, "", "iter_slice"], [510, 3, 1, "", "iter_start"], [511, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[513, 4, 1, "", "altitude"], [514, 4, 1, "", "azimuth"], [515, 3, 1, "", "check_field_exists"], [516, 4, 1, "", "elevation"], [517, 4, 1, "", "fields"], [518, 4, 1, "", "fixed_angle"], [519, 4, 1, "", "gate_altitude"], [520, 4, 1, "", "gate_latitude"], [521, 4, 1, "", "gate_longitude"], [522, 4, 1, "", "gate_x"], [523, 4, 1, "", "gate_y"], [524, 4, 1, "", "gate_z"], [525, 3, 1, "", "get_end"], [526, 3, 1, "", "get_slice"], [527, 3, 1, "", "get_start"], [528, 3, 1, "", "get_start_end"], [529, 3, 1, "", "init_gate_altitude"], [530, 3, 1, "", "init_gate_longitude_latitude"], [531, 3, 1, "", "init_gate_x_y_z"], [532, 3, 1, "", "init_rays_per_sweep"], [533, 3, 1, "", "iter_azimuth"], [534, 3, 1, "", "iter_elevation"], [535, 3, 1, "", "iter_end"], [536, 3, 1, "", "iter_field"], [537, 3, 1, "", "iter_slice"], [538, 3, 1, "", "iter_start"], [539, 3, 1, "", "iter_start_end"], [540, 4, 1, "", "latitude"], [541, 4, 1, "", "longitude"], [542, 4, 1, "", "ngates"], [543, 4, 1, "", "npulses_max"], [544, 4, 1, "", "nrays"], [545, 4, 1, "", "nsweeps"], [546, 4, 1, "", "projection"], [547, 4, 1, "", "range"], [548, 4, 1, "", "rays_per_sweep"], [549, 4, 1, "", "scan_type"], [550, 4, 1, "", "sweep_end_ray_index"], [551, 4, 1, "", "sweep_mode"], [552, 4, 1, "", "sweep_number"], [553, 4, 1, "", "sweep_start_ray_index"], [554, 4, 1, "", "time"], [555, 3, 1, "", "to_vpt"], [556, 4, 1, "", "velocity_bins"]], "pyart.util": [[574, 0, 1, "", "angular_mean"], [575, 0, 1, "", "angular_mean_deg"], [576, 0, 1, "", "angular_std"], [577, 0, 1, "", "angular_std_deg"], [578, 0, 1, "", "angular_texture_2d"], [579, 0, 1, "", "column_vertical_profile"], [580, 0, 1, "", "compute_directional_stats"], [581, 0, 1, "", "cross_section_ppi"], [582, 0, 1, "", "cross_section_rhi"], [583, 0, 1, "", "datetime_from_dataset"], [584, 0, 1, "", "datetime_from_grid"], [585, 0, 1, "", "datetime_from_radar"], [586, 0, 1, "", "datetimes_from_dataset"], [587, 0, 1, "", "datetimes_from_radar"], [588, 0, 1, "", "determine_sweeps"], [589, 0, 1, "", "estimate_noise_hs74"], [590, 0, 1, "", "for_azimuth"], [591, 0, 1, "", "get_column_rays"], [592, 0, 1, "", "get_field_location"], [593, 0, 1, "", "image_mute_radar"], [594, 0, 1, "", "interval_mean"], [595, 0, 1, "", "interval_std"], [596, 0, 1, "", "is_vpt"], [597, 0, 1, "", "join_radar"], [598, 0, 1, "", "ma_broadcast_to"], [599, 0, 1, "", "mean_of_two_angles"], [600, 0, 1, "", "mean_of_two_angles_deg"], [601, 0, 1, "", "rolling_window"], [602, 0, 1, "", "simulated_vel_from_profile"], [603, 0, 1, "", "sphere_distance"], [604, 0, 1, "", "subset_radar"], [605, 0, 1, "", "texture"], [606, 0, 1, "", "texture_along_ray"], [607, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 611, 613, 614, 617, 620], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 467], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 557], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 637, 638, 639, 643, 674, 683], "add_field": [32, 46, 472, 484], "get_point_longitude_latitud": [33, 473], "get_projparam": [34, 474], "init_point_altitud": [35, 475], "init_point_longitude_latitud": [36, 476], "init_point_x_y_z": [37, 477], "projection_proj": [38, 478], "to_xarrai": [39, 479], "write": [40, 480], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 612, 613, 617, 618, 621, 623, 636, 638, 639, 663, 677, 680, 685, 688], "add_field_lik": [47, 485], "add_filt": [48, 486], "check_field_exist": [49, 77, 487, 515], "extract_sweep": [50, 488], "get_azimuth": [51, 489], "get_elev": [52, 490], "get_end": [53, 87, 491, 525], "get_field": [54, 492], "get_gate_area": [55, 493], "get_gate_lat_lon_alt": [56, 494], "get_gate_x_y_z": [57, 495], "get_nyquist_vel": [58, 496], "get_slic": [59, 88, 497, 526], "get_start": [60, 89, 498, 527], "get_start_end": [61, 90, 499, 528], "info": [62, 500], "init_gate_altitud": [63, 91, 501, 529], "init_gate_longitude_latitud": [64, 92, 502, 530], "init_gate_x_y_z": [65, 93, 503, 531], "init_rays_per_sweep": [66, 94, 504, 532], "iter_azimuth": [67, 95, 505, 533], "iter_elev": [68, 96, 506, 534], "iter_end": [69, 97, 507, 535], "iter_field": [70, 98, 508, 536], "iter_slic": [71, 99, 509, 537], "iter_start": [72, 100, 510, 538], "iter_start_end": [73, 101, 511, 539], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556], "altitud": [75, 513], "azimuth": [76, 514], "elev": [78, 516], "field": [79, 517, 680], "fixed_angl": [80, 518], "gate_altitud": [81, 519], "gate_latitud": [82, 520], "gate_longitud": [83, 521], "gate_x": [84, 522], "gate_i": [85, 523], "gate_z": [86, 524], "latitud": [102, 540, 633], "longitud": [103, 541, 633], "ngate": [104, 542], "npulses_max": [105, 543], "nrai": [106, 544], "nsweep": [107, 545], "project": [108, 546], "rang": [109, 547, 617], "rays_per_sweep": [110, 548], "scan_typ": [111, 549], "sweep_end_ray_index": [112, 550], "sweep_mod": [113, 551], "sweep_numb": [114, 552], "sweep_start_ray_index": [115, 553], "time": [116, 554, 613, 617, 629, 634, 640, 660, 670, 671, 676, 686], "to_vpt": [117, 555, 607], "velocity_bin": [118, 556], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_antenna": 121, "cartesian_to_geograph": 122, "cartesian_to_geographic_aeqd": 123, "cartesian_vectors_to_geograph": 124, "geographic_to_cartesian": 125, "geographic_to_cartesian_aeqd": 126, "correct": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 618, 625, 626, 630], "gatefilt": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 684], "copi": [129, 178, 394], "exclude_abov": [130, 179], "exclude_above_toa": [131, 180], "exclude_al": [132, 181], "exclude_below": [133, 182], "exclude_equ": [134, 183], "exclude_g": [135, 184], "exclude_insid": [136, 185], "exclude_invalid": [137, 186], "exclude_last_g": [138, 187], "exclude_mask": [139, 188], "exclude_non": [140, 189], "exclude_not_equ": [141, 190], "exclude_outsid": [142, 191], "exclude_transit": [143, 192], "gate_exclud": [144, 193], "gate_includ": [145, 194], "include_abov": [146, 195], "include_al": [147, 196], "include_below": [148, 197], "include_equ": [149, 198], "include_g": [150, 199], "include_insid": [151, 200], "include_non": [152, 201], "include_not_equ": [153, 202], "include_not_mask": [154, 203], "include_not_transit": [155, 204], "include_outsid": [156, 205], "include_valid": [157, 206], "calc_cloud_mask": 158, "calc_noise_floor": 159, "calculate_attenu": 160, "calculate_attenuation_philinear": 161, "calculate_attenuation_zphi": 162, "cloud_threshold": 163, "correct_bia": 164, "correct_noise_rhohv": 165, "dealias_fourdd": 166, "dealias_region_bas": 167, "dealias_unwrap_phas": 168, "despeckle_field": 169, "find_object": 170, "moment_based_gate_filt": [171, 209], "phase_proc_lp": 172, "phase_proc_lp_gf": 173, "range_correct": 174, "except": 175, "filter": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "iso0_based_gate_filt": 207, "moment_and_texture_based_gate_filt": 208, "temp_based_gate_filt": 210, "graph": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "airborneradardisplai": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "generate_az_rhi_titl": [213, 274, 303, 336], "generate_filenam": [214, 246, 260, 275, 304, 337], "generate_ray_titl": [215, 276, 305, 338], "generate_titl": [216, 277, 306, 339], "generate_vpt_titl": [217, 278, 307, 340], "label_xaxis_r": [218, 279, 308, 341], "label_xaxis_rai": [219, 280, 309, 342], "label_xaxis_tim": [220, 281, 310, 343], "label_xaxis_x": [221, 282, 311, 344], "label_yaxis_field": [222, 283, 312, 345], "label_yaxis_i": [223, 284, 313, 346], "label_yaxis_z": [224, 285, 314, 347], "plot": [225, 286, 315, 348, 612, 613, 614, 616, 617, 618, 627, 630, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 664, 667, 669, 675], "plot_azimuth_to_rhi": [226, 287, 316, 349], "plot_colorbar": [227, 250, 266, 288, 317, 350], "plot_cr_rast": [228, 289, 318, 351], "plot_cross_hair": [229, 290, 319, 352], "plot_grid_lin": [230, 291, 320, 353], "plot_label": [231, 232, 292, 293, 321, 322, 354, 355], "plot_ppi": [233, 294, 326, 359], "plot_range_r": [234, 235, 295, 296, 328, 329, 361, 362], "plot_rai": [236, 297, 330, 363], "plot_rhi": [237, 298, 331, 364], "plot_sweep_grid": 238, "plot_vpt": [239, 299, 332, 365], "set_aspect_ratio": [240, 300, 333, 366], "set_limit": [241, 301, 334, 367], "gridmapdisplai": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 658], "cartopy_coastlin": 243, "cartopy_political_boundari": 244, "cartopy_st": 245, "generate_grid_titl": [247, 261], "generate_latitudinal_level_titl": [248, 262], "generate_longitudinal_level_titl": [249, 263], "plot_cross_sect": 251, "plot_crosshair": [252, 267], "plot_grid": [253, 268], "plot_latitude_slic": [254, 269], "plot_latitudinal_level": [255, 270], "plot_longitude_slic": [256, 271], "plot_longitudinal_level": [257, 272], "plot_maxcappi": [258, 369], "gridmapdisplaybasemap": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "get_basemap": 264, "plot_basemap": 265, "radardisplai": [273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "radarmapdisplai": [302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 614], "plot_line_geo": [323, 356], "plot_line_xi": [324, 357], "plot_point": [325, 358], "plot_ppi_map": [327, 360, 614], "radarmapdisplaybasemap": [335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "plot_convstrat_schem": 368, "io": [370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390], "prepare_for_read": 371, "read": [372, 612, 613, 614, 617, 618, 632, 633], "read_arm_sond": 373, "read_arm_sonde_vap": 374, "read_cfradi": 375, "read_chl": 376, "read_grid": 377, "read_grid_mdv": 378, "read_mdv": 379, "read_nexrad_arch": 380, "read_nexrad_cdm": 381, "read_nexrad_level3": 382, "read_rsl": 383, "read_sigmet": 384, "read_uf": 385, "write_cfradi": 386, "write_grid": 387, "write_grid_geotiff": 388, "write_grid_mdv": 389, "write_uf": 390, "lazydict": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "lazyloaddict": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "clear": [393, 406], "get": [395, 407, 677], "has_kei": 396, "item": [397, 408], "kei": [398, 409, 613], "pop": [399, 410], "popitem": [400, 411], "set_lazi": 401, "setdefault": [402, 412], "updat": [403, 413, 623], "valu": [404, 414], "mutablemap": [405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "map": [415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 617, 630, 635, 637, 638, 639, 651, 683], "gatemapp": [416, 417, 418, 419, 636], "distance_toler": 417, "mapped_radar": 418, "time_toler": 419, "example_roi_func_const": 420, "example_roi_func_dist": 421, "example_roi_func_dist_beam": 422, "grid_from_radar": 423, "grid_ppi_sweep": 424, "grid_rhi_sweep": 425, "map_gates_to_grid": 426, "map_to_grid": 427, "retriev": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 618, 630, 661], "ztor": 429, "calculate_snr_from_reflect": 430, "calculate_velocity_textur": 431, "composite_reflect": 432, "compute_cdr": 433, "compute_evp": 434, "compute_l": 435, "compute_noisedbz": 436, "compute_qvp": 437, "compute_rqvp": 438, "compute_snr": 439, "compute_svp": 440, "compute_ts_along_coord": 441, "compute_vp": 442, "conv_strat_raut": 443, "conv_strat_yut": 444, "create_cfad": 445, "dealias_spectra": 446, "est_rain_rate_a": 447, "est_rain_rate_hydro": 448, "est_rain_rate_kdp": 449, "est_rain_rate_z": 450, "est_rain_rate_za": 451, "est_rain_rate_zkdp": 452, "est_rain_rate_zpoli": 453, "feature_detect": 454, "fetch_radar_time_profil": 455, "get_freq_band": 456, "grid_displacement_pc": 457, "grid_shift": 458, "hydroclass_semisupervis": 459, "usag": 459, "kdp_maesaka": 460, "kdp_schneeb": 461, "kdp_vulpiani": 462, "map_profile_to_g": 463, "quasi_vertical_profil": 464, "spectra_mo": 465, "paramet": [465, 614], "steiner_conv_strat": 466, "vad_brown": 468, "vad_michelson": 469, "test": [470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 621, 688], "intemporarydirectori": [481, 482], "cleanup": 482, "get_test_data": 558, "make_empty_grid": 559, "make_empty_ppi_radar": 560, "make_empty_rhi_radar": 561, "make_empty_spectra_radar": 562, "make_gaussian_storm_grid": 563, "make_normal_storm": 564, "make_single_ray_radar": 565, "make_storm_grid": 566, "make_target_grid": 567, "make_target_radar": 568, "make_target_rhi_radar": 569, "make_target_spectra_radar": 570, "make_velocity_aliased_radar": 571, "make_velocity_aliased_rhi_radar": 572, "util": [573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607], "angular_mean": 574, "angular_mean_deg": 575, "angular_std": 576, "angular_std_deg": 577, "angular_texture_2d": 578, "column_vertical_profil": 579, "compute_directional_stat": 580, "cross_section_ppi": 581, "cross_section_rhi": 582, "datetime_from_dataset": 583, "datetime_from_grid": 584, "datetime_from_radar": 585, "datetimes_from_dataset": 586, "datetimes_from_radar": 587, "determine_sweep": 588, "estimate_noise_hs74": 589, "for_azimuth": 590, "assumpt": [590, 603], "get_column_rai": 591, "get_field_loc": 592, "image_mute_radar": 593, "interval_mean": 594, "interval_std": 595, "is_vpt": 596, "join_radar": 597, "ma_broadcast_to": 598, "mean_of_two_angl": 599, "mean_of_two_angles_deg": 600, "rolling_window": 601, "simulated_vel_from_profil": 602, "sphere_dist": 603, "subset_radar": 604, "textur": 605, "texture_along_rai": 606, "api": [608, 618], "refer": [608, 618, 665, 666], "manual": 608, "blog": [609, 617, 619], "blend": 610, "observ": 610, "from": [610, 612, 617, 618, 632, 643, 647, 649, 650, 652, 653, 654, 655, 656, 659, 687], "tracer": 610, "us": [610, 612, 613, 614, 617, 618, 628, 636, 637, 658, 673, 674, 675], "py": [610, 611, 612, 617, 618, 620, 621, 622, 623, 673, 674, 675, 677, 684, 685, 687, 688], "art": [610, 611, 612, 617, 618, 620, 621, 622, 623, 673, 674, 675, 677, 684, 685, 687, 688], "import": [610, 612, 613, 614, 616, 621, 688], "goe": 610, "data": [610, 612, 613, 614, 616, 617, 618, 632, 633, 674, 683, 684], "access": [610, 612, 614, 616, 617], "csapr": 610, "load": [610, 613], "lma": 610, "flash": 610, "june": 610, "17th": 610, "case": 610, "17": [610, 620], "rhi": [610, 618, 652, 653, 654, 655, 656, 657], "activ": 611, "develop": [611, 624], "submit": 611, "pull": 611, "request": 611, "pr": [611, 620], "first": 611, "you": [611, 618], "have": 611, "done": 611, "so": 611, "alreadi": 611, "need": 611, "fork": 611, "github": [611, 621, 623, 688], "repositori": 611, "second": 611, "termin": 611, "clone": 611, "your": [611, 617, 618, 642, 645], "remot": 611, "git": [611, 623], "command": 611, "third": 611, "creat": [611, 612, 613, 617, 623, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 679, 690], "doc": [611, 615], "conda": [611, 623], "environ": [611, 690], "fourth": 611, "we": [611, 617], "instal": [611, 621, 677, 687, 688], "trmm": 611, "rsl": 611, "librari": 611, "lastli": 611, "python": [611, 621, 677, 688], "script": 611, "within": [611, 617], "okai": 611, "should": 611, "now": 611, "readi": 611, "make": [611, 623], "chang": 611, "sourc": [611, 687], "code": [611, 617, 621, 688], "1": [611, 617, 620, 666], "new": [611, 615], "branch": 611, "our": [611, 613, 614, 616, 618], "2": [611, 617, 620, 632, 633, 666], "push": 611, "To": 611, "let": 611, "commit": 611, "after": 611, "thi": [611, 617, 620], "i": [611, 618, 677], "what": [611, 677], "look": 611, "like": 611, "hope": 611, "help": [611, 677], "hail": 612, "storm": 612, "visual": [612, 613, 616], "panda": 612, "motiv": [612, 616, 618, 619], "nexrad": [612, 614, 616, 617, 632, 633, 647, 648], "fsspec": 612, "setup": [612, 616, 621, 622, 688], "filesystem": 612, "bucket": 612, "file": [612, 617, 621, 647, 649, 650, 652, 653, 654, 655, 656, 679, 680, 688], "dataset": 612, "nexradaw": 612, "configur": 612, "search": [612, 618], "download": [612, 616], "spc": 612, "report": 612, "function": [612, 616], "loop": [612, 617], "through": [612, 617, 618], "helper": 612, "scale": 612, "bar": 612, "an": [612, 646, 654, 655, 690], "anim": [612, 617], "imag": [612, 616, 646], "view": [612, 613], "final": [612, 613], "conclus": [612, 614, 616, 618, 619], "work": [613, 665, 666], "vertic": 613, "point": [613, 617, 663], "xarrai": 613, "hvplot": 613, "overview": [613, 617], "ka": 613, "band": 613, "arm": [613, 618, 621, 677, 688], "zenith": 613, "kazr": 613, "instrument": 613, "clean": [613, 618], "up": [613, 614, 617, 690], "bit": 613, "analysi": 613, "subset": 613, "reflect": [613, 626, 646, 648, 654, 655, 664], "veloc": [613, 618, 628, 662, 673, 681], "quick": 613, "extract": [613, 663], "date": [613, 616, 617], "inform": [613, 690], "label": 613, "holoview": 613, "try": [613, 614], "raster": 613, "takeawai": 613, "fix": [614, 620, 633], "weird": 614, "pattern": 614, "when": 614, "level": [614, 617, 632, 633], "3": [614, 617, 620, 632, 658], "The": [614, 616, 618, 619, 621, 677, 685, 688], "recreat": 614, "issu": [614, 633], "set": [614, 617, 668, 690], "matplotlib": 614, "style": [614, 621, 688], "without": 614, "alpha": 614, "add": [614, 616], "argument": 614, "dig": 614, "investig": [614, 616, 618], "pcolormesh": 614, "edgecolor": 614, "modifi": [614, 645], "default": 614, "solut": [614, 618, 619], "sever": 616, "weather": 616, "wisconsin": 616, "outbreak": 616, "focus": 616, "southern": 616, "reproduc": 616, "event": 616, "road": 616, "interst": 616, "featur": [616, 617, 620, 666], "avail": 616, "run": 616, "gif": 617, "post": [617, 619], "cover": 617, "aw": [617, 632], "how": [617, 623, 665, 666], "acquir": 617, "prerequisit": 617, "s3": 617, "filysystem": 617, "select": 617, "station": 617, "period": 617, "option": [617, 677, 687, 690], "individu": 617, "locat": 617, "gener": 617, "list": 617, "check": 617, "plottabl": 617, "product": 617, "ad": [617, 690], "custom": [617, 668], "counti": 617, "zoom": 617, "colorbar": [617, 645], "note": [617, 623], "full": 617, "block": 617, "construct": 617, "properli": 617, "creation": 617, "whole": 617, "summari": [617, 665, 666], "scan": 618, "cloud": [618, 627, 632], "epcap": 618, "problem": [618, 619], "dq": 618, "browser": 618, "act": 618, "token": 618, "live": 618, "pass": 618, "credenti": 618, "take": 618, "peak": 618, "strategi": 618, "sort": 618, "all": 618, "ppi": [618, 637, 649, 650, 651, 659, 675], "appli": 618, "explor": 618, "threshold": 618, "snr": 618, "revis": 618, "where": 618, "slice": 618, "frame": 618, "templat": 619, "changelog": 620, "18": 620, "enhanc": 620, "made": 620, "bug": 620, "other": 620, "merg": 620, "contributor": [620, 621, 688], "releas": [620, 623], "0": 620, "document": [620, 623], "improv": 620, "16": 620, "mainten": 620, "upkeep": 620, "15": 620, "v1": 620, "14": 620, "6": 620, "5": 620, "4": 620, "13": 620, "12": 620, "7": 620, "11": 620, "8": 620, "deprec": 620, "10": 620, "9": 620, "picasso": 620, "": [621, 624, 688], "guid": [621, 624, 688, 689], "toolkit": [621, 677, 688], "link": [621, 688], "cite": [621, 677, 688], "resourc": [621, 688], "continu": 622, "integr": 622, "tag": 623, "prepar": 623, "trigger": 623, "pypi": 623, "upload": 623, "packag": 623, "forg": 623, "announc": 623, "open": 623, "forum": 623, "version": 624, "moment": [625, 630, 647], "exampl": [625, 630, 631, 635, 641, 661, 662, 665, 672], "attenu": 626, "calcul": [627, 664, 667, 669], "mask": [627, 684], "dealia": [628, 673], "doppler": 628, "region": 628, "base": 628, "algorithm": [628, 665, 666], "comput": [629, 634, 640, 660, 670, 671, 676, 686], "galleri": [630, 678], "input": [630, 631], "output": [630, 631], "xradar": [630, 672, 673, 674, 675], "older": 633, "compar": 636, "two": [636, 639, 657], "singl": [637, 638], "sweep": 637, "cartesian": [637, 638, 639, 683], "2d": 637, "weight": 637, "choos": 642, "colormap": 642, "cross": [643, 659], "section": [643, 659], "max": 644, "cappi": 644, "mute": 646, "multipl": [647, 652, 653], "cfradial": 649, "mdv": [650, 654, 655, 656], "cartopi": 651, "panel": [652, 653, 657, 658], "cf": [652, 653], "radial": [652, 653, 673], "contour": [654, 655], "line": [654, 655], "volum": 659, "cfad": 662, "diagram": 662, "valid": 662, "column": 663, "abov": 663, "composit": 664, "convect": [665, 666], "stratiform": [665, 666], "classif": [665, 666, 667, 668], "recommend": [665, 666], "best": [665, 666], "practic": [665, 666], "detect": 666, "part": 666, "warm": 666, "season": 666, "cool": 666, "hydrometeor": [667, 668], "frequenc": 668, "vad": 669, "profil": 669, "can": 677, "do": 677, "short": 677, "cours": 677, "depend": [677, 687, 690], "contribut": 677, "notebook": 678, "basic": 679, "ingest": 679, "netcdf": 679, "manipul": 680, "save": 680, "object": [680, 685], "dealias": 681, "With": 684, "index": 685, "build": 687, "requir": 687, "obtain": 687, "latest": 687, "frequent": 687, "ask": 687, "question": 687, "user": 689, "anaconda": 690, "channel": 690, "path": 690, "more": 690}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[121, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[122, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[123, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[124, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[125, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[126, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[127, "pyart-correct"]], "pyart.correct.GateFilter": [[128, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[129, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[130, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_above_toa": [[131, "pyart-correct-gatefilter-exclude-above-toa"]], "pyart.correct.GateFilter.exclude_all": [[132, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[133, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[134, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[135, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[136, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[137, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_last_gates": [[138, "pyart-correct-gatefilter-exclude-last-gates"]], "pyart.correct.GateFilter.exclude_masked": [[139, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[140, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[141, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[142, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[143, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[144, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[145, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[146, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[147, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[148, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[149, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[150, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[151, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[152, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[153, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[154, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[155, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[156, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[157, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calc_cloud_mask": [[158, "pyart-correct-calc-cloud-mask"]], "pyart.correct.calc_noise_floor": [[159, "pyart-correct-calc-noise-floor"]], "pyart.correct.calculate_attenuation": [[160, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[161, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[162, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.cloud_threshold": [[163, "pyart-correct-cloud-threshold"]], "pyart.correct.correct_bias": [[164, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[165, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[166, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[167, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[168, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[169, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[170, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[171, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[172, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[173, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.range_correction": [[174, "pyart-correct-range-correction"]], "pyart.exceptions": [[175, "pyart-exceptions"]], "pyart.filters": [[176, "pyart-filters"]], "pyart.filters.GateFilter": [[177, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[178, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[179, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_above_toa": [[180, "pyart-filters-gatefilter-exclude-above-toa"]], "pyart.filters.GateFilter.exclude_all": [[181, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[182, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[183, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[184, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[185, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[186, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_last_gates": [[187, "pyart-filters-gatefilter-exclude-last-gates"]], "pyart.filters.GateFilter.exclude_masked": [[188, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[189, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[190, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[191, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[192, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[193, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[194, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[195, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[196, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[197, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[198, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[199, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[200, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[201, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[202, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[203, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[204, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[205, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[206, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[207, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[208, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[209, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[210, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[211, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[212, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[213, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[214, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[215, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[216, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[217, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[218, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[219, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[220, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[221, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[222, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[223, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[224, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[225, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[226, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[227, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[228, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[229, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[230, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[231, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[232, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[233, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[234, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[235, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[236, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[237, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[238, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[239, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[240, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[241, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[242, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[243, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[244, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[245, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[246, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[247, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[248, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[249, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[250, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[251, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[252, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[253, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[254, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[255, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[256, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[257, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplay.plot_maxcappi": [[258, "pyart-graph-gridmapdisplay-plot-maxcappi"]], "pyart.graph.GridMapDisplayBasemap": [[259, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[260, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[261, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[262, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[263, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[264, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[265, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[266, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[267, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[268, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[269, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[270, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[271, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[272, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[273, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[274, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[275, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[276, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[277, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[278, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[279, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[280, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[281, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[282, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[283, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[284, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[285, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[286, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[287, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[288, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[289, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[290, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[291, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[292, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[293, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[294, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[295, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[296, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[297, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[298, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[299, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[300, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[301, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[302, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[303, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[304, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[305, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[306, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[307, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[308, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[309, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[310, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[311, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[312, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[313, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[314, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[315, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[316, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[317, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[318, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[319, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[320, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[321, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[322, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[323, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[324, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[325, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[326, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[327, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[328, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[329, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[330, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[331, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[332, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[333, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[334, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[335, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[336, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[337, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[338, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[339, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[340, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[341, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[342, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[343, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[344, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[345, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[346, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[347, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[348, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[349, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[350, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[351, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[352, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[353, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[354, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[355, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[356, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[357, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[358, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[359, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[360, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[361, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[362, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[363, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[364, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[365, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[366, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[367, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[368, "pyart-graph-plot-convstrat-scheme"]], "pyart.graph.plot_maxcappi": [[369, "pyart-graph-plot-maxcappi"]], "pyart.io": [[370, "pyart-io"]], "pyart.io.prepare_for_read": [[371, "pyart-io-prepare-for-read"]], "pyart.io.read": [[372, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[373, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[374, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[375, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[376, "pyart-io-read-chl"]], "pyart.io.read_grid": [[377, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[378, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[379, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[380, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[381, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[382, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[383, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[384, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[385, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[386, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[387, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[388, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[389, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[390, "pyart-io-write-uf"]], "pyart.lazydict": [[391, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[392, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[393, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[394, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[395, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[396, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[397, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[398, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[399, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[400, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[401, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[402, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[403, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[404, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[405, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[406, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[407, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[408, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[409, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[410, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[411, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[412, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[413, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[414, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[415, "pyart-map"]], "pyart.map.GateMapper": [[416, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[417, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[418, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[419, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[420, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[421, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[422, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[423, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[424, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[425, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[426, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[427, "pyart-map-map-to-grid"]], "pyart.retrieve": [[428, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[429, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[430, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[431, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[432, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[433, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_evp": [[434, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_l": [[435, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[436, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_qvp": [[437, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_rqvp": [[438, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_snr": [[439, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_svp": [[440, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[441, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vp": [[442, "pyart-retrieve-compute-vp"]], "pyart.retrieve.conv_strat_raut": [[443, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[444, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.create_cfad": [[445, "pyart-retrieve-create-cfad"]], "pyart.retrieve.dealias_spectra": [[446, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[447, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[448, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[449, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[450, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[451, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[452, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[453, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[454, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[455, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[456, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[457, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[458, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[459, "pyart-retrieve-hydroclass-semisupervised"]], "Usage": [[459, "usage"]], "pyart.retrieve.kdp_maesaka": [[460, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[461, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[462, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[463, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[464, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[465, "pyart-retrieve-spectra-moments"]], "Parameter": [[465, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[466, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[467, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[468, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[469, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[470, "pyart-testing"]], "pyart.testing.Grid": [[471, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[472, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[473, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[474, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[475, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[476, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[477, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[478, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[479, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[480, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[481, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[482, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[483, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[484, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[485, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[486, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[487, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[488, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[489, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[490, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[491, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[492, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[493, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[494, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[495, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[496, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[497, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[498, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[499, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[500, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[501, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[502, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[503, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[504, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[505, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[506, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[507, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[508, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[509, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[510, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[511, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[512, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[513, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[514, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[515, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[516, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[517, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[518, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[519, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[520, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[521, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[522, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[523, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[524, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[525, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[526, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[527, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[528, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[529, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[530, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[531, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[532, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[533, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[534, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[535, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[536, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[537, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[538, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[539, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[540, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[541, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[542, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[543, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[544, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[545, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[546, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[547, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[548, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[549, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[550, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[551, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[552, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[553, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[554, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[555, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[556, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[557, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[558, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[559, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[560, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[561, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[562, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[563, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[564, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[565, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[566, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[567, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[568, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_rhi_radar": [[569, "pyart-testing-make-target-rhi-radar"]], "pyart.testing.make_target_spectra_radar": [[570, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[571, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[572, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[573, "pyart-util"]], "pyart.util.angular_mean": [[574, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[575, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[576, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[577, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[578, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[579, "pyart-util-column-vertical-profile"]], "pyart.util.compute_directional_stats": [[580, "pyart-util-compute-directional-stats"]], "pyart.util.cross_section_ppi": [[581, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[582, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[583, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[584, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[585, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[586, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[587, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[588, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[589, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[590, "pyart-util-for-azimuth"]], "Assumptions": [[590, "assumptions"], [603, "assumptions"]], "pyart.util.get_column_rays": [[591, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[592, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[593, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[594, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[595, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[596, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[597, "pyart-util-join-radar"]], "pyart.util.ma_broadcast_to": [[598, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[599, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[600, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[601, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[602, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[603, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[604, "pyart-util-subset-radar"]], "pyart.util.texture": [[605, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[606, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[607, "pyart-util-to-vpt"]], "API Reference Manual": [[608, "api-reference-manual"]], "Blog": [[609, "blog"]], "Blending Observations from TRACER using Py-ART": [[610, "blending-observations-from-tracer-using-py-art"]], "Imports": [[610, "imports"], [612, "imports"], [613, "imports"], [614, "imports"], [616, "imports"]], "GOES data access": [[610, "goes-data-access"]], "CSAPR data access": [[610, "csapr-data-access"]], "Load LMA Flash data": [[610, "load-lma-flash-data"]], "June 17th case": [[610, "june-17th-case"]], "June 17 RHI": [[610, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[611, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[611, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[611, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[611, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[611, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[611, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[611, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[611, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[611, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[611, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[611, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[611, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[612, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[612, "motivation"], [616, "motivation"], [618, "motivation"], [619, "motivation"]], "NEXRAD Data Access - fsspec": [[612, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[612, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[612, "read-in-a-file"]], "Visualize the Dataset": [[612, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[612, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[612, "configure-the-search"]], "Search and Download the Data": [[612, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[612, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[612, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[612, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[612, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[612, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[612, "create-an-animation-of-the-images"]], "View the Final Animation": [[612, "view-the-final-animation"]], "Conclusion": [[612, "conclusion"], [614, "conclusion"], [616, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[613, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[613, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[613, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[613, "plot-using-pyart"]], "Load in the data using pyart": [[613, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[613, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[613, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[613, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[613, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[613, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[613, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[613, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[613, "create-our-holoviews-plots"]], "View the Final Visualization": [[613, "view-the-final-visualization"]], "Try Using Rasterize": [[613, "try-using-rasterize"]], "Key Takeaways": [[613, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[614, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[614, "the-data"]], "Data Access": [[614, "data-access"]], "Recreate the Issue Using PyART": [[614, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[614, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[614, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[614, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[614, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[614, "add-in-the-alpha-argument"]], "Dig into the Issue": [[614, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[614, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[614, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[614, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[614, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[614, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[614, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[614, "fixing-the-issue-in-pyart"]], "New Docs": [[615, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[616, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[616, "the-outbreak"]], "Focusing on Southern Wisconsin": [[616, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[616, "reproducing-event-images"]], "Visualizing the Event": [[616, "visualizing-the-event"]], "Access the Data": [[616, "access-the-data"]], "Download the Road Data": [[616, "download-the-road-data"]], "Add the Interstate Date as a feature": [[616, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[616, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[616, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[616, "run-our-plotting-functions"]], "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART": [[617, "creating-animated-gifs-with-nexrad-level-2-radar-data-using-py-art"]], "Overview": [[617, "overview"]], "Within this blog post, we will cover:": [[617, "within-this-blog-post-we-will-cover"]], "1: Accessing NEXRAD data from AWS": [[617, "accessing-nexrad-data-from-aws"]], "2: How to read the data into Py-ART and create plots": [[617, "how-to-read-the-data-into-py-art-and-create-plots"]], "3: How to create animated gifs with acquired radar data from Py-ART": [[617, "how-to-create-animated-gifs-with-acquired-radar-data-from-py-art"]], "Prerequisites": [[617, "prerequisites"]], "Set up the AWS S3 filysystem": [[617, "set-up-the-aws-s3-filysystem"]], "Selecting your date, station, and time period": [[617, "selecting-your-date-station-and-time-period"]], "OPTIONAL* setting up individual locations to be plotted on your map": [[617, "optional-setting-up-individual-locations-to-be-plotted-on-your-map"]], "Generating your file list": [[617, "generating-your-file-list"]], "Checking your plottable radar products": [[617, "checking-your-plottable-radar-products"]], "Reading the data into PyART": [[617, "reading-the-data-into-pyart"]], "Looping through the radar data": [[617, "looping-through-the-radar-data"]], "Plotting code with added features and plotted points": [[617, "plotting-code-with-added-features-and-plotted-points"]], "Customizing the range of plotted data": [[617, "customizing-the-range-of-plotted-data"]], "Counties": [[617, "counties"]], "Location plotting": [[617, "location-plotting"]], "Zooming": [[617, "zooming"]], "Colorbar": [[617, "colorbar"]], "NOTE": [[617, "note"]], "Full code block constructed properly within the for loop.": [[617, "full-code-block-constructed-properly-within-the-for-loop"]], "GIF creation": [[617, "gif-creation"]], "Code in whole": [[617, "code-in-whole"]], "Summary": [[617, "summary"]], "Investigating ARM Scanning Cloud Radar Data from EPCAPE": [[618, "investigating-arm-scanning-cloud-radar-data-from-epcape"]], "The Problem": [[618, "the-problem"], [619, "the-problem"]], "The Solution": [[618, "the-solution"], [619, "the-solution"]], "Searching for data through the DQ Plot Browser": [[618, "searching-for-data-through-the-dq-plot-browser"]], "Use ACT to retrieve data from EPCAPE": [[618, "use-act-to-retrieve-data-from-epcape"]], "Retrieve you API token from ARM Live": [[618, "retrieve-you-api-token-from-arm-live"]], "Pass your Credentials into the Search": [[618, "pass-your-credentials-into-the-search"]], "Read the Data into Py-ART": [[618, "read-the-data-into-py-art"]], "Take a Peak at the Scan Strategy": [[618, "take-a-peak-at-the-scan-strategy"]], "Sort the Scans by Scan Strategy": [[618, "sort-the-scans-by-scan-strategy"]], "Plot all of the PPI Scans": [[618, "plot-all-of-the-ppi-scans"]], "Plot all the RHI Scans": [[618, "plot-all-the-rhi-scans"]], "Apply Corrections to the Velocity Data": [[618, "apply-corrections-to-the-velocity-data"]], "Explore a Threshold for SNR": [[618, "explore-a-threshold-for-snr"]], "Plot our Revised, Cleaned Data": [[618, "plot-our-revised-cleaned-data"]], "Plot where the RHI scan is slicing through using the PPI for a frame of reference": [[618, "plot-where-the-rhi-scan-is-slicing-through-using-the-ppi-for-a-frame-of-reference"]], "Conclusions": [[618, "conclusions"], [619, "conclusions"]], "Blog Post Template": [[619, "blog-post-template"]], "Changelog": [[620, "changelog"]], "Py-ART 1.18.1": [[620, "py-art-1-18-1"]], "Enhancements made": [[620, "enhancements-made"], [620, "id1"], [620, "id5"], [620, "id9"], [620, "id14"], [620, "id29"], [620, "id35"], [620, "id46"], [620, "id49"], [620, "id54"], [620, "id59"], [620, "id62"], [620, "id66"], [620, "id79"], [620, "id89"], [620, "id99"], [620, "id105"], [620, "id111"], [620, "id119"], [620, "id132"], [620, "id136"], [620, "id140"], [620, "id146"], [620, "id152"], [620, "id161"], [620, "id168"], [620, "id175"], [620, "id181"], [620, "id188"], [620, "id194"], [620, "id200"]], "Bugs fixed": [[620, "bugs-fixed"], [620, "id2"], [620, "id6"], [620, "id10"], [620, "id15"], [620, "id22"], [620, "id26"], [620, "id30"], [620, "id36"], [620, "id41"], [620, "id50"], [620, "id55"], [620, "id60"], [620, "id67"], [620, "id72"], [620, "id76"], [620, "id80"], [620, "id85"], [620, "id90"], [620, "id95"], [620, "id100"], [620, "id106"], [620, "id112"], [620, "id116"], [620, "id120"], [620, "id124"], [620, "id129"], [620, "id133"], [620, "id137"], [620, "id141"], [620, "id147"], [620, "id153"], [620, "id157"], [620, "id162"], [620, "id169"], [620, "id176"], [620, "id182"], [620, "id189"], [620, "id195"]], "Other merged PRs": [[620, "other-merged-prs"], [620, "id3"], [620, "id7"], [620, "id12"], [620, "id17"], [620, "id20"], [620, "id24"], [620, "id27"], [620, "id32"], [620, "id37"], [620, "id44"], [620, "id47"], [620, "id52"], [620, "id57"], [620, "id64"], [620, "id70"], [620, "id74"], [620, "id77"], [620, "id83"], [620, "id87"], [620, "id93"], [620, "id97"], [620, "id103"], [620, "id109"], [620, "id114"], [620, "id122"], [620, "id127"], [620, "id134"], [620, "id144"], [620, "id150"], [620, "id155"], [620, "id159"], [620, "id166"], [620, "id173"], [620, "id179"], [620, "id186"], [620, "id192"], [620, "id198"]], "Contributors to this release": [[620, "contributors-to-this-release"], [620, "id4"], [620, "id8"], [620, "id13"], [620, "id18"], [620, "id21"], [620, "id25"], [620, "id28"], [620, "id33"], [620, "id34"], [620, "id38"], [620, "id40"], [620, "id45"], [620, "id48"], [620, "id53"], [620, "id58"], [620, "id61"], [620, "id65"], [620, "id71"], [620, "id75"], [620, "id78"], [620, "id84"], [620, "id88"], [620, "id94"], [620, "id98"], [620, "id104"], [620, "id110"], [620, "id115"], [620, "id118"], [620, "id123"], [620, "id128"], [620, "id131"], [620, "id135"], [620, "id139"], [620, "id145"], [620, "id151"], [620, "id156"], [620, "id160"], [620, "id167"], [620, "id174"], [620, "id180"], [620, "id187"], [620, "id193"], [620, "id199"], [620, "id202"]], "Py-ART 1.18.0": [[620, "py-art-1-18-0"]], "Py-ART 1.17.0": [[620, "py-art-1-17-0"]], "Documentation improvements": [[620, "documentation-improvements"], [620, "id11"], [620, "id16"], [620, "id43"], [620, "id51"], [620, "id56"], [620, "id69"], [620, "id82"], [620, "id92"], [620, "id102"], [620, "id108"], [620, "id126"], [620, "id138"], [620, "id143"], [620, "id149"], [620, "id154"], [620, "id158"], [620, "id164"], [620, "id171"], [620, "id178"], [620, "id184"], [620, "id191"], [620, "id197"]], "Py-ART 1.16.1": [[620, "py-art-1-16-1"]], "Py-ART 1.16.0": [[620, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[620, "maintenance-and-upkeep-improvements"], [620, "id19"], [620, "id23"], [620, "id31"], [620, "id39"], [620, "id42"], [620, "id63"], [620, "id68"], [620, "id73"], [620, "id81"], [620, "id86"], [620, "id91"], [620, "id96"], [620, "id101"], [620, "id107"], [620, "id113"], [620, "id117"], [620, "id121"], [620, "id125"], [620, "id130"], [620, "id142"], [620, "id148"], [620, "id163"], [620, "id170"], [620, "id177"], [620, "id183"], [620, "id190"], [620, "id196"], [620, "id201"]], "Py-ART 1.15.2": [[620, "py-art-1-15-2"]], "Py-ART 1.15.1": [[620, "py-art-1-15-1"]], "Py-ART v1.15.0": [[620, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[620, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[620, "py-art-v1-14-5"]], "Merged PRs": [[620, "merged-prs"]], "Py-ART v1.14.4": [[620, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[620, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[620, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[620, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[620, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[620, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[620, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[620, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[620, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[620, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[620, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[620, "py-art-v1-12-5"]], "PyART v1.12.4": [[620, "pyart-v1-12-4"]], "PyART v1.12.2": [[620, "pyart-v1-12-2"]], "PyART v1.12.0": [[620, "pyart-v1-12-0"]], "PyART v1.11.8": [[620, "pyart-v1-11-8"]], "Deprecated features": [[620, "deprecated-features"], [620, "id165"], [620, "id172"], [620, "id185"]], "PyART v1.11.6": [[620, "pyart-v1-11-6"]], "PyART v1.11.5": [[620, "pyart-v1-11-5"]], "PyART v1.11.3": [[620, "pyart-v1-11-3"]], "PyART v1.11.2": [[620, "pyart-v1-11-2"]], "PyART v1.11.1": [[620, "pyart-v1-11-1"]], "PyART v1.11.0": [[620, "pyart-v1-11-0"]], "PyART v1.10.4": [[620, "pyart-v1-10-4"]], "PyART v1.10.3": [[620, "pyart-v1-10-3"]], "PyART v1.10.2": [[620, "pyart-v1-10-2"]], "PyART v1.10.1": [[620, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[620, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[620, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[620, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[620, "pyart-v1-8-0"]], "PyART v1.7.0": [[620, "pyart-v1-7-0"]], "PyART v1.6.0": [[620, "pyart-v1-6-0"]], "PyART v1.5.0": [[620, "pyart-v1-5-0"]], "PyART v1.4.0": [[620, "pyart-v1-4-0"]], "PyART v1.3.0": [[620, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[621, "contributor-s-guide"], [688, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[621, "the-python-arm-radar-toolkit-py-art"], [688, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[621, "important-links"], [688, "important-links"]], "Citing": [[621, "citing"], [688, "citing"]], "Install": [[621, "install"], [677, "install"], [688, "install"]], "Resources": [[621, "resources"], [688, "resources"]], "Code Style": [[621, "code-style"], [688, "code-style"]], "Python File Setup": [[621, "python-file-setup"], [688, "python-file-setup"]], "Testing": [[621, "testing"], [688, "testing"]], "GitHub": [[621, "github"], [688, "github"]], "Py-ART Continuous Integration Setup": [[622, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[623, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[623, "make-the-tagged-git-release"]], "Prepare the release notes": [[623, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[623, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[623, "documentation"]], "Create conda packages on conda-forge": [[623, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[623, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[624, "developer-s-guide"]], "Versions": [[624, "versions"]], "Moment correction examples": [[625, "moment-correction-examples"], [630, "moment-correction-examples"]], "Correct reflectivity attenuation": [[626, "correct-reflectivity-attenuation"]], "Calculating and Plotting a Cloud Mask": [[627, "calculating-and-plotting-a-cloud-mask"]], "Dealias doppler velocities using the Region Based Algorithm": [[628, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[629, "computation-times"], [634, "computation-times"], [640, "computation-times"], [660, "computation-times"], [670, "computation-times"], [671, "computation-times"], [676, "computation-times"], [686, "computation-times"]], "Example Gallery": [[630, "example-gallery"]], "Input/Output Examples": [[630, "input-output-examples"], [631, "input-output-examples"]], "Mapping examples": [[630, "mapping-examples"], [635, "mapping-examples"]], "Plotting examples": [[630, "plotting-examples"], [641, "plotting-examples"]], "Retrieval Examples": [[630, "retrieval-examples"], [661, "retrieval-examples"]], "Xradar Examples": [[630, "xradar-examples"], [672, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[632, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[632, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[632, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[633, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[633, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[636, "compare-two-radars-using-gatemapper"]], "Map a single PPI sweep to a Cartesian grid using 2D weighting": [[637, "map-a-single-ppi-sweep-to-a-cartesian-grid-using-2d-weighting"]], "Map a single radar to a Cartesian grid": [[638, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[639, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[642, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[643, "plot-a-cross-section-from-a-grid"]], "Plot Max-CAPPI": [[644, "plot-max-cappi"]], "Modify a Colorbar for your Plot": [[645, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[646, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[647, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[648, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[649, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[650, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[651, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[652, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [653, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[654, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [655, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[656, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[657, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[658, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[659, "plot-a-cross-section-from-a-ppi-volume"]], "Creating a CFAD diagram": [[662, "creating-a-cfad-diagram"]], "Velocity example": [[662, "velocity-example"]], "Validation": [[662, "validation"]], "Extract a radar column above a point": [[663, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[664, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[665, "convective-stratiform-classification"]], "How the algorithm works": [[665, "how-the-algorithm-works"], [666, "how-the-algorithm-works"]], "Examples": [[665, "examples"]], "Summary of recommendations and best practices": [[665, "summary-of-recommendations-and-best-practices"], [666, "summary-of-recommendations-and-best-practices"]], "References": [[665, "references"], [666, "references"]], "Feature Detection classification": [[666, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[666, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[666, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[667, "calculate-and-plot-hydrometeor-classification"]], "Hydrometeor Classification with Custom Frequency Settings": [[668, "hydrometeor-classification-with-custom-frequency-settings"]], "Calculate and Plot VAD profile": [[669, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[673, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[674, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[675, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[677, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[677, "what-is-py-art"]], "Citing Py-ART": [[677, "citing-py-art"]], "What can Py-ART do?": [[677, "what-can-py-art-do"]], "Short Courses": [[677, "short-courses"]], "Dependencies": [[677, "dependencies"]], "Optional Dependences": [[677, "optional-dependences"]], "Getting help": [[677, "getting-help"]], "Contributing": [[677, "contributing"]], "Notebook Gallery": [[678, "notebook-gallery"]], "Notebooks": [[678, null]], "Creating a basic ingest of a NetCDF file": [[679, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[680, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[681, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[683, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[684, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[685, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[687, "building-and-installing-py-art"]], "Required Dependencies": [[687, "required-dependencies"]], "Optional Dependencies": [[687, "optional-dependencies"]], "Obtaining the latest source": [[687, "obtaining-the-latest-source"]], "Installing from Source": [[687, "installing-from-source"]], "Frequently asked questions": [[687, "frequently-asked-questions"]], "User Guide": [[689, "user-guide"]], "Setting up an Environment": [[690, "setting-up-an-environment"]], "Anaconda": [[690, "anaconda"]], "Setting a Channel": [[690, "setting-a-channel"]], "Creating an Environment": [[690, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[690, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[690, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [127, "module-pyart.correct"], [175, "module-pyart.exceptions"], [176, "module-pyart.filters"], [211, "module-pyart.graph"], [370, "module-pyart.io"], [391, "module-pyart.lazydict"], [415, "module-pyart.map"], [428, "module-pyart.retrieve"], [470, "module-pyart.testing"], [573, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[121, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[123, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[124, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[126, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[127, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[128, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[141, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[142, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[144, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[145, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[155, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[156, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[157, "pyart.correct.GateFilter.include_valid"]], "calc_cloud_mask() (in module pyart.correct)": [[158, "pyart.correct.calc_cloud_mask"]], "calc_noise_floor() (in module pyart.correct)": [[159, "pyart.correct.calc_noise_floor"]], "calculate_attenuation() (in module pyart.correct)": [[160, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[161, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[162, "pyart.correct.calculate_attenuation_zphi"]], "cloud_threshold() (in module pyart.correct)": [[163, "pyart.correct.cloud_threshold"]], "correct_bias() (in module pyart.correct)": [[164, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[165, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[166, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[167, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[168, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[169, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[170, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[171, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[172, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[173, "pyart.correct.phase_proc_lp_gf"]], "range_correction() (in module pyart.correct)": [[174, "pyart.correct.range_correction"]], "pyart.exceptions": [[175, "module-pyart.exceptions"]], "pyart.filters": [[176, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[177, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[184, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[193, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[194, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[198, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[199, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[200, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[201, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[202, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[203, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[204, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[205, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[206, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[207, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[208, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[209, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[210, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[211, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[212, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[219, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[221, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[225, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[233, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[234, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[235, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[236, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[237, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[238, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[239, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[240, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[241, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[242, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[254, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[255, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[256, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[257, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "plot_maxcappi() (pyart.graph.gridmapdisplay method)": [[258, "pyart.graph.GridMapDisplay.plot_maxcappi"]], "gridmapdisplaybasemap (class in pyart.graph)": [[259, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[268, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[269, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[270, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[271, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[272, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[273, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[280, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[290, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[291, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[292, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[293, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[294, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[295, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[296, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[297, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[298, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[299, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[300, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[301, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[302, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[309, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[310, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[319, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[320, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[325, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[326, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[327, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[328, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[329, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[330, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[331, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[332, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[333, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[334, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[335, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[342, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[343, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[361, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[362, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[363, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[364, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[365, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[366, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[367, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[368, "pyart.graph.plot_convstrat_scheme"]], "plot_maxcappi() (in module pyart.graph)": [[369, "pyart.graph.plot_maxcappi"]], "pyart.io": [[370, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[371, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[372, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[373, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[374, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[375, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[376, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[377, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[378, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[379, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[380, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[381, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[382, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[383, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[384, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[385, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[386, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[387, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[388, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[389, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[390, "pyart.io.write_uf"]], "pyart.lazydict": [[391, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[392, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[394, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[395, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[396, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[397, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[398, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[399, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[400, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[401, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[405, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[406, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[407, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[408, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[409, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[410, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[411, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[412, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[413, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[414, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[415, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[416, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[417, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[418, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[419, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[420, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[421, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[422, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[423, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[424, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[425, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[426, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[427, "pyart.map.map_to_grid"]], "pyart.retrieve": [[428, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[429, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[430, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[431, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[432, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[433, "pyart.retrieve.compute_cdr"]], "compute_evp() (in module pyart.retrieve)": [[434, "pyart.retrieve.compute_evp"]], "compute_l() (in module pyart.retrieve)": [[435, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[436, "pyart.retrieve.compute_noisedBZ"]], "compute_qvp() (in module pyart.retrieve)": [[437, "pyart.retrieve.compute_qvp"]], "compute_rqvp() (in module pyart.retrieve)": [[438, "pyart.retrieve.compute_rqvp"]], "compute_snr() (in module pyart.retrieve)": [[439, "pyart.retrieve.compute_snr"]], "compute_svp() (in module pyart.retrieve)": [[440, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[441, "pyart.retrieve.compute_ts_along_coord"]], "compute_vp() (in module pyart.retrieve)": [[442, "pyart.retrieve.compute_vp"]], "conv_strat_raut() (in module pyart.retrieve)": [[443, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[444, "pyart.retrieve.conv_strat_yuter"]], "create_cfad() (in module pyart.retrieve)": [[445, "pyart.retrieve.create_cfad"]], "dealias_spectra() (in module pyart.retrieve)": [[446, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[447, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[448, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[449, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[450, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[451, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[452, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[453, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[454, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[455, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[456, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[457, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[458, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[459, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[460, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[461, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[462, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[463, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[464, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[465, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[466, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[467, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[468, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[469, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[470, "module-pyart.testing"]], "grid (class in pyart.testing)": [[471, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[472, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[473, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[474, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[475, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[476, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[477, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[478, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[479, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[480, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[481, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[482, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[483, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[484, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[491, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[492, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[493, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[494, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[495, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[496, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[497, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[498, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[499, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[500, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[501, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[502, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[503, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[504, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[505, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[506, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[507, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[508, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[509, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[510, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[511, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[512, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[513, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[514, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[515, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[516, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[517, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[518, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[519, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[520, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[521, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[522, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[523, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[524, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[525, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[526, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[527, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[528, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[529, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[530, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[531, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[532, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[533, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[534, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[535, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[536, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[537, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[538, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[539, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[540, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[541, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[542, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[543, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[544, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[545, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[546, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[547, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[548, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[549, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[550, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[551, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[552, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[553, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[554, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[555, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[556, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[557, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[558, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[559, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[560, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[561, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[562, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[563, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[564, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[565, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[566, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[567, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[568, "pyart.testing.make_target_radar"]], "make_target_rhi_radar() (in module pyart.testing)": [[569, "pyart.testing.make_target_rhi_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[570, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[571, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[572, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[573, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[574, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[575, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[576, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[577, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[578, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[579, "pyart.util.column_vertical_profile"]], "compute_directional_stats() (in module pyart.util)": [[580, "pyart.util.compute_directional_stats"]], "cross_section_ppi() (in module pyart.util)": [[581, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[582, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[583, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[584, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[585, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[586, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[587, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[588, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[589, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[590, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[591, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[592, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[593, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[594, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[595, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[596, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[597, "pyart.util.join_radar"]], "ma_broadcast_to() (in module pyart.util)": [[598, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[599, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[600, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[601, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[602, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[603, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[604, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[605, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[606, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[607, "pyart.util.to_vpt"]]}})