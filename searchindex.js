Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_above_toa", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_last_gates", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_above_toa", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_last_gates", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.create_cfad", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_rhi_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/2024/epcape-blog-post", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_grid_single_sweep_ppi", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_cfad", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_above_toa.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_last_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_above_toa.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_last_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.create_cfad.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_rhi_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/2024/epcape-blog-post.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_grid_single_sweep_ppi.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_cfad.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_above_toa", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_last_gates", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_above_toa", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_last_gates", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_snr", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.create_cfad", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_rhi_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Investigating ARM Scanning Cloud Radar Data from EPCAPE", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single PPI sweep to a Cartesian grid using 2D weighting", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Creating a CFAD diagram", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"stream": [0, 62, 368, 487], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 202, 203, 204, 205, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 246, 247, 248, 249, 250, 251, 252, 253, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 300, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 388, 396, 399, 400, 406, 409, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 458, 468, 470, 473, 481, 482, 499, 567, 568, 579, 587, 589, 597, 599, 601, 602, 604, 605, 627, 636, 647, 648, 666, 669], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 216, 218, 219, 220, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 317, 318, 319, 321, 322, 329, 350, 351, 352, 354, 355, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 389, 394, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 597, 598, 599, 601, 604, 605, 607, 610, 611, 613, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658, 660, 661, 662, 664, 665, 666, 669, 671], "print": [0, 62, 157, 168, 169, 237, 253, 377, 446, 447, 451, 487, 595, 597, 598, 602, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 647, 648, 661, 665, 666], "out": [0, 62, 165, 169, 202, 205, 379, 380, 381, 382, 383, 425, 442, 487, 597, 598, 599, 601, 602, 604, 605, 621, 622, 626, 637, 646, 649, 658, 664, 668, 669, 670], "version": [0, 12, 31, 206, 411, 458, 560, 595, 596, 603, 604, 605, 607, 658, 666, 668, 669, 671], "statu": [0, 596, 605, 669], "inform": [0, 24, 31, 45, 62, 74, 142, 154, 157, 162, 168, 169, 187, 199, 221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 368, 369, 377, 380, 446, 447, 453, 458, 470, 487, 499, 595, 599, 602, 603, 604, 605, 608, 616, 637, 658, 669], "debug": [0, 157, 162, 168, 169, 237, 253, 377, 447, 604], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 121, 123, 124, 132, 137, 142, 143, 144, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 177, 182, 187, 188, 189, 202, 203, 204, 205, 220, 246, 280, 296, 309, 321, 329, 342, 354, 362, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 396, 398, 406, 409, 411, 417, 418, 419, 420, 424, 425, 430, 431, 432, 441, 442, 447, 448, 449, 453, 455, 458, 460, 470, 472, 473, 476, 477, 479, 481, 482, 483, 499, 552, 565, 566, 574, 575, 579, 582, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 610, 611, 615, 616, 619, 620, 621, 625, 626, 627, 628, 631, 637, 644, 645, 647, 648, 654, 658, 660, 661, 662, 664, 665, 666, 668, 669, 671], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 157, 158, 159, 162, 163, 164, 167, 168, 169, 202, 203, 204, 205, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 423, 431, 441, 446, 447, 448, 449, 450, 453, 454, 457, 467, 470, 487, 499, 545, 587, 595, 596, 598, 599, 601, 602, 604, 607, 610, 612, 613, 615, 616, 617, 620, 621, 623, 624, 625, 628, 630, 633, 639, 640, 641, 642, 646, 647, 648, 649, 650, 651, 652, 655, 656, 657, 658, 659, 665, 666, 667, 668, 671], "can": [0, 12, 16, 29, 45, 54, 57, 74, 121, 123, 124, 127, 142, 154, 158, 159, 162, 165, 167, 172, 187, 199, 202, 203, 204, 205, 220, 280, 309, 342, 364, 371, 372, 374, 377, 381, 382, 383, 419, 420, 432, 441, 446, 447, 448, 449, 451, 456, 470, 479, 482, 499, 595, 596, 597, 598, 599, 601, 602, 604, 605, 607, 615, 616, 619, 625, 644, 645, 647, 648, 654, 660, 661, 662, 664, 665, 666, 668, 669, 671], "run": [0, 233, 431, 441, 457, 574, 596, 598, 604, 605, 606, 607, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658, 668, 669, 671], "script": [0, 29, 602, 604, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 122, 125, 127, 132, 134, 142, 143, 149, 154, 157, 158, 159, 161, 162, 163, 164, 167, 168, 169, 171, 172, 177, 179, 187, 188, 194, 199, 202, 203, 204, 205, 207, 221, 222, 223, 228, 231, 232, 233, 234, 237, 245, 246, 248, 250, 252, 253, 259, 260, 262, 264, 266, 267, 281, 282, 283, 288, 291, 292, 293, 296, 310, 311, 312, 318, 320, 321, 324, 325, 326, 329, 343, 344, 345, 351, 353, 354, 357, 358, 359, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 394, 396, 399, 406, 408, 411, 413, 414, 415, 419, 420, 423, 424, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 458, 461, 466, 470, 472, 475, 479, 480, 481, 482, 499, 552, 565, 566, 567, 568, 574, 575, 576, 577, 578, 579, 580, 581, 582, 587, 596, 598, 599, 601, 604, 605, 607, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 633, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 660, 664, 665, 666, 667, 669, 671], "directori": [0, 29, 468, 593, 595, 596, 602, 603, 604, 605, 615, 668, 669], "report": [0, 1, 296, 329, 376, 456, 601, 604, 658], "dependeci": 0, "befor": [0, 31, 56, 162, 166, 169, 409, 431, 441, 455, 458, 481, 597, 598, 599, 605, 619, 647, 658, 662, 666, 669], "build": [0, 121, 123, 124, 127, 132, 134, 142, 149, 154, 172, 177, 179, 187, 194, 199, 383, 597, 601, 604, 605, 607, 658, 669, 670], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 121, 122, 123, 124, 125, 127, 137, 142, 154, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 172, 182, 187, 199, 202, 203, 204, 205, 207, 209, 211, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 298, 300, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323, 324, 325, 326, 328, 329, 331, 333, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 356, 357, 358, 359, 361, 362, 363, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 409, 416, 417, 418, 419, 420, 422, 423, 425, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 470, 472, 479, 481, 482, 499, 552, 560, 565, 566, 567, 568, 574, 575, 582, 587, 589, 590, 591, 592, 596, 600, 601, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 615, 616, 618, 623, 624, 625, 626, 628, 631, 632, 634, 635, 636, 637, 638, 642, 644, 645, 647, 648, 653, 657, 658, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671], "python": [0, 29, 381, 446, 595, 597, 598, 599, 601, 602, 603, 604, 607, 610, 611, 613, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 660, 661, 662, 664, 665, 666, 668, 671], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 202, 203, 204, 205, 221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 296, 310, 312, 320, 321, 325, 326, 329, 343, 345, 353, 354, 358, 359, 369, 370, 371, 372, 376, 378, 381, 408, 423, 424, 430, 431, 441, 444, 445, 446, 447, 448, 449, 450, 453, 454, 458, 470, 499, 550, 560, 566, 577, 578, 587, 593, 598, 599, 601, 603, 608, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 653, 657, 659, 660, 661, 662, 664, 667, 670, 671], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 127, 132, 134, 142, 149, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 177, 179, 187, 194, 199, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 467, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 487, 499, 502, 544, 545, 546, 547, 548, 549, 550, 561, 562, 563, 564, 565, 566, 567, 568, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 595, 597, 598, 602, 604, 605, 640, 647, 648, 661, 662, 664, 666, 668, 669], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 121, 122, 124, 125, 163, 164, 364, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 390, 391, 401, 402, 425, 487, 555, 556, 557, 558, 559, 561, 562, 563, 564, 575, 580, 597, 598, 599, 602, 603, 604, 605, 615, 616, 619, 644, 658, 660, 662, 664, 669], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 127, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 202, 203, 204, 205, 207, 222, 237, 245, 248, 253, 260, 267, 282, 296, 311, 321, 329, 344, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 390, 391, 394, 397, 401, 402, 407, 409, 416, 419, 420, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 451, 452, 454, 455, 456, 457, 458, 459, 466, 467, 471, 472, 473, 475, 476, 477, 479, 487, 496, 524, 542, 546, 547, 548, 549, 552, 566, 574, 575, 577, 578, 579, 582, 583, 586, 589, 591, 592, 595, 596, 598, 599, 601, 604, 605, 615, 619, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 640, 645, 647, 648, 649, 658, 659, 660, 664, 665, 669], "sy": 0, "stdout": [0, 62, 487], "descript": [1, 16, 18, 30, 126, 170, 171, 206, 363, 384, 408, 421, 457, 560, 587, 599, 605, 607, 644, 658, 669], "addit": [1, 2, 7, 8, 12, 14, 19, 162, 163, 164, 166, 220, 221, 228, 232, 233, 234, 246, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 280, 281, 288, 292, 293, 309, 310, 317, 318, 319, 320, 321, 322, 325, 326, 342, 343, 350, 351, 352, 353, 354, 355, 358, 359, 362, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 409, 416, 417, 418, 420, 431, 441, 579, 595, 597, 598, 604, 607, 613, 615, 643, 647, 648, 658], "class": [1, 18, 19, 30, 31, 41, 45, 74, 126, 127, 171, 172, 206, 207, 237, 248, 253, 267, 296, 321, 329, 384, 385, 398, 408, 409, 410, 412, 419, 446, 457, 458, 468, 470, 499, 593, 597, 598, 599, 604, 605, 658, 664, 665, 669], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 126, 159, 166, 167, 171, 202, 203, 204, 205, 206, 220, 221, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 280, 281, 288, 292, 293, 296, 309, 310, 320, 325, 326, 329, 342, 343, 353, 358, 359, 362, 363, 365, 368, 371, 372, 378, 381, 408, 409, 413, 414, 415, 417, 418, 419, 420, 421, 425, 430, 431, 432, 441, 447, 449, 455, 457, 481, 560, 566, 578, 579, 582, 586, 587, 592, 593, 598, 599, 602, 604, 605, 625, 644, 645, 647, 648, 654, 658, 662, 664, 666, 668, 669], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 127, 143, 144, 172, 188, 189, 221, 232, 281, 292, 310, 325, 343, 358, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 595, 601, 604, 610, 611, 613, 614, 617, 619, 620, 621, 622, 625, 626, 627, 628, 631, 633, 636, 637, 639, 640, 641, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658, 660, 661, 662, 664, 665, 666, 667], "write": [1, 15, 363, 379, 380, 381, 382, 383, 457, 468, 603, 604, 613, 614, 661], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 132, 142, 154, 160, 161, 162, 163, 164, 177, 187, 199, 207, 221, 223, 228, 231, 232, 233, 234, 237, 246, 248, 250, 252, 253, 262, 264, 266, 267, 281, 283, 288, 291, 292, 293, 296, 310, 312, 320, 321, 324, 325, 326, 329, 343, 345, 353, 354, 357, 358, 359, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 408, 409, 416, 417, 418, 420, 422, 425, 430, 432, 433, 436, 441, 442, 446, 447, 448, 449, 451, 452, 453, 456, 458, 459, 470, 471, 472, 475, 476, 477, 479, 480, 481, 482, 483, 492, 493, 495, 499, 520, 521, 523, 545, 550, 552, 574, 579, 589, 592, 604, 605, 610, 611, 613, 614, 617, 619, 620, 621, 622, 624, 625, 626, 627, 628, 630, 631, 633, 634, 635, 636, 637, 639, 641, 643, 644, 645, 647, 648, 650, 653, 654, 656, 657, 658, 659, 660, 661, 662, 666, 667, 669], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 137, 157, 158, 159, 162, 163, 165, 166, 168, 169, 182, 220, 224, 228, 229, 231, 232, 233, 234, 246, 280, 284, 288, 289, 291, 292, 293, 309, 313, 320, 321, 322, 324, 325, 326, 342, 346, 353, 354, 355, 357, 358, 359, 363, 368, 375, 381, 382, 416, 419, 420, 428, 432, 445, 447, 449, 458, 470, 476, 477, 479, 480, 481, 482, 483, 499, 546, 547, 548, 549, 550, 566, 574, 575, 592, 595, 598, 599, 601, 605, 607, 608, 625, 627, 644, 658, 666, 669], "format": [1, 12, 13, 39, 40, 45, 74, 209, 211, 221, 223, 228, 231, 232, 233, 234, 269, 271, 281, 283, 288, 291, 292, 293, 298, 300, 310, 312, 320, 321, 324, 325, 326, 331, 333, 343, 345, 353, 354, 357, 358, 359, 363, 365, 374, 376, 378, 379, 380, 382, 466, 467, 470, 499, 595, 597, 598, 599, 602, 604, 605, 607, 637, 658, 660, 669], "These": [1, 29, 127, 162, 172, 259, 381, 420, 597, 602, 605, 615, 625, 647, 658, 665, 668, 669], "auxiliari": 1, "input": [1, 168, 169, 381, 417, 418, 441, 445, 446, 449, 574, 579, 595, 597, 604, 647, 648, 665], "output": [1, 13, 62, 161, 381, 417, 425, 430, 446, 487, 576, 596, 598, 601, 602, 604, 658], "routin": [1, 12, 171, 379, 419, 604, 658], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 122, 125, 142, 154, 157, 158, 159, 162, 163, 164, 166, 167, 169, 171, 187, 199, 202, 203, 204, 205, 206, 221, 227, 228, 232, 233, 234, 246, 248, 250, 252, 259, 262, 264, 266, 281, 287, 288, 292, 293, 310, 316, 317, 318, 319, 320, 321, 322, 325, 326, 343, 349, 350, 351, 352, 353, 354, 355, 358, 359, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 387, 415, 416, 419, 420, 422, 424, 425, 430, 431, 432, 434, 435, 436, 438, 439, 441, 447, 449, 453, 458, 470, 481, 483, 499, 547, 548, 549, 567, 568, 575, 576, 580, 581, 588, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 611, 613, 615, 616, 619, 620, 625, 627, 628, 636, 639, 644, 645, 647, 648, 658, 660, 661, 662, 664, 665, 666, 668, 669, 671], "well": [1, 165, 167, 202, 203, 204, 205, 354, 373, 375, 420, 595, 597, 602, 604, 605, 616, 626, 648, 658, 664, 665, 669], "polish": 1, "those": [1, 48, 55, 143, 144, 163, 164, 188, 189, 377, 419, 420, 473, 480, 593, 599, 601, 644, 671], "io": [1, 127, 172, 416, 595, 596, 597, 598, 599, 601, 602, 604, 605, 610, 611, 615, 616, 617, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658, 661, 662, 664, 665, 666, 667, 668, 669, 671], "thei": [1, 4, 58, 132, 134, 142, 162, 163, 164, 166, 177, 179, 187, 354, 369, 377, 383, 430, 447, 483, 599, 601, 605, 647, 669], "mai": [1, 29, 132, 134, 142, 149, 154, 162, 163, 177, 179, 187, 194, 199, 296, 329, 373, 375, 381, 385, 420, 430, 449, 560, 599, 601, 607, 647, 658], "requir": [1, 31, 45, 74, 121, 123, 124, 162, 165, 166, 377, 381, 417, 418, 420, 455, 458, 470, 499, 575, 595, 596, 604, 605, 616, 658, 669, 671], "depend": [1, 158, 159, 417, 420, 435, 595, 599, 604, 605, 607, 669], "beyond": [1, 668], "standard": [1, 40, 45, 62, 74, 119, 120, 162, 368, 379, 380, 381, 425, 448, 467, 470, 487, 499, 550, 563, 564, 581, 595, 599, 604, 605, 660, 661, 662, 669], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 202, 203, 204, 205, 221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 296, 310, 312, 320, 321, 325, 326, 329, 343, 345, 353, 354, 358, 359, 369, 370, 371, 372, 376, 378, 381, 408, 423, 424, 430, 431, 441, 444, 445, 446, 447, 448, 449, 450, 453, 454, 458, 470, 499, 550, 560, 566, 577, 578, 587, 593, 599, 601, 608, 610, 611, 613, 614, 615, 616, 624, 625, 627, 645, 648, 653, 657, 659, 660, 661, 662, 664, 667, 670, 671], "instal": [1, 10, 121, 123, 124, 165, 166, 381, 598, 601, 604, 607, 670, 671], "non": [1, 121, 123, 124, 164, 377, 379, 430, 431, 441, 447, 449, 599, 604, 647], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 132, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 202, 203, 204, 205, 206, 221, 223, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 291, 292, 293, 310, 312, 320, 321, 324, 325, 326, 343, 345, 353, 354, 357, 358, 359, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 450, 453, 454, 458, 459, 470, 471, 472, 474, 479, 487, 499, 502, 545, 560, 579, 587, 591, 595, 598, 599, 601, 602, 603, 604, 615, 648, 661, 666], "support": [1, 248, 321, 354, 365, 372, 373, 374, 375, 376, 384, 385, 409, 447, 597, 599, 601, 604, 605, 636, 658, 660, 661, 662, 664, 665, 666, 668, 669], "fulli": [1, 371, 601, 668], "test": [1, 12, 162, 368, 373, 375, 385, 596, 599, 604, 606, 607, 610, 611, 619, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 654, 655, 656, 658, 660], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 127, 131, 139, 142, 146, 151, 154, 162, 163, 164, 166, 167, 168, 169, 172, 176, 184, 187, 191, 196, 199, 204, 221, 227, 228, 231, 232, 233, 234, 248, 281, 287, 288, 291, 292, 293, 310, 316, 320, 321, 324, 325, 326, 343, 349, 353, 354, 357, 358, 359, 362, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 386, 398, 399, 416, 417, 418, 419, 420, 424, 430, 431, 441, 442, 445, 447, 449, 458, 460, 470, 473, 481, 482, 499, 575, 593, 595, 596, 597, 598, 599, 600, 604, 605, 607, 613, 625, 644, 645, 646, 647, 650, 658, 666, 667, 669, 671], "pleas": [1, 56, 296, 329, 481, 595, 596, 599, 601, 602, 605, 658, 660, 661, 662, 664, 665, 666, 669], "your": [1, 221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 597, 598, 599, 603, 605, 607, 613, 624, 626, 642, 647, 648, 658, 667, 668, 669, 671], "own": [1, 12, 598, 602, 607, 625, 658, 668], "risk": [1, 597], "bug": [1, 598, 605, 608, 658, 668, 669], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 127, 132, 143, 144, 161, 162, 163, 164, 169, 172, 177, 188, 189, 207, 247, 261, 321, 354, 362, 363, 364, 377, 380, 382, 383, 417, 418, 419, 420, 431, 441, 447, 448, 449, 451, 453, 455, 456, 458, 470, 472, 479, 499, 574, 575, 599, 603, 604, 605, 607, 625, 647, 658, 668, 669, 671], "fix": [1, 595, 598, 605, 606, 608, 613, 614, 617, 639, 660, 667, 668, 669, 671], "them": [1, 4, 5, 6, 56, 162, 163, 164, 165, 237, 253, 321, 354, 368, 377, 420, 481, 598, 602, 605, 607, 625, 658, 669, 671], "prioriti": [1, 671], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 209, 241, 254, 269, 298, 321, 331, 354, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 467, 595, 596, 597, 599, 604, 605, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 669], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 160, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 459, 471, 472, 474, 479, 495, 502, 523, 589, 619, 664], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 129, 130, 132, 134, 141, 142, 143, 144, 145, 147, 149, 154, 155, 157, 162, 163, 164, 168, 169, 172, 174, 175, 177, 179, 186, 187, 188, 189, 190, 192, 194, 199, 200, 209, 221, 223, 228, 231, 232, 233, 234, 237, 246, 248, 250, 252, 253, 259, 262, 264, 266, 269, 281, 283, 288, 291, 292, 293, 298, 310, 312, 320, 321, 324, 325, 326, 331, 343, 345, 353, 354, 357, 358, 359, 362, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 389, 419, 420, 424, 430, 431, 435, 438, 441, 447, 448, 449, 451, 459, 460, 467, 468, 471, 472, 473, 476, 477, 479, 481, 482, 483, 558, 559, 569, 570, 571, 572, 573, 574, 582, 592, 595, 597, 598, 599, 601, 604, 605, 627, 634, 636, 637, 639, 647, 648, 660, 661, 665, 666, 669], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 473, 604], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 162, 163, 164, 220, 221, 222, 228, 232, 233, 234, 246, 248, 249, 250, 251, 252, 259, 262, 263, 264, 265, 266, 280, 281, 282, 288, 292, 293, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 342, 343, 344, 350, 351, 352, 353, 354, 355, 358, 359, 365, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 416, 417, 418, 419, 420, 447, 569, 570, 571, 572, 573, 598, 599, 602, 604], "d3r": [2, 604], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 366, 367, 368, 370, 374, 379, 380, 442, 467, 569, 572, 595, 602, 604, 658, 659], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 34, 40, 45, 46, 47, 49, 54, 74, 77, 121, 123, 124, 132, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 411, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 447, 448, 449, 450, 453, 454, 458, 459, 461, 467, 470, 471, 472, 474, 479, 499, 502, 545, 579, 587, 589, 591, 597, 599, 601, 602, 604], "odim_h5": [2, 8, 604], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 121, 123, 124, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 207, 267, 296, 321, 329, 364, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 385, 419, 420, 424, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 447, 448, 449, 450, 452, 453, 454, 458, 459, 461, 466, 470, 471, 499, 587, 595, 599, 660], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 122, 123, 125, 127, 132, 134, 142, 149, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172, 177, 179, 187, 194, 199, 221, 228, 232, 233, 234, 236, 246, 248, 250, 252, 259, 262, 264, 266, 281, 288, 292, 293, 295, 310, 318, 319, 320, 321, 322, 325, 326, 328, 343, 351, 352, 353, 354, 358, 359, 361, 362, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 420, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 453, 454, 456, 458, 459, 460, 467, 470, 471, 472, 473, 476, 477, 479, 481, 482, 487, 499, 567, 568, 575, 582, 587, 591, 592, 598, 599, 604, 647, 666], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 121, 123, 124, 157, 158, 159, 162, 163, 164, 165, 166, 168, 169, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 387, 389, 416, 419, 420, 423, 424, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 450, 452, 453, 454, 458, 459, 470, 471, 472, 474, 499, 502, 544, 587, 616, 648, 661, 666], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 122, 125, 226, 248, 259, 286, 296, 315, 317, 318, 319, 321, 322, 329, 348, 350, 351, 352, 354, 355, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 396, 406, 425, 450, 458, 470, 499, 595, 597, 598, 599, 601, 604, 605, 619, 623, 624, 626, 627, 642, 645, 647, 648, 655, 658, 659, 667, 669], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 126, 127, 129, 132, 133, 134, 135, 136, 137, 138, 140, 141, 145, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 177, 178, 179, 180, 181, 182, 183, 185, 186, 190, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 220, 221, 222, 223, 228, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 280, 281, 282, 283, 288, 291, 292, 293, 296, 297, 298, 299, 300, 301, 306, 309, 310, 311, 312, 320, 321, 324, 325, 326, 329, 330, 331, 332, 333, 334, 339, 342, 343, 344, 345, 353, 354, 357, 358, 359, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 411, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 466, 470, 471, 472, 473, 474, 479, 482, 495, 499, 502, 523, 546, 547, 548, 549, 550, 552, 555, 556, 557, 558, 559, 565, 566, 578, 579, 587, 589, 590, 591, 595, 597, 598, 599, 601, 602, 604, 605, 610, 613, 615, 619, 620, 621, 622, 625, 626, 628, 639, 643, 644, 645, 646, 647, 648, 649, 654, 656, 658, 659, 660, 662, 664, 665, 666, 669], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 126, 127, 142, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 187, 199, 202, 203, 204, 205, 206, 207, 220, 221, 226, 228, 232, 233, 234, 250, 252, 262, 264, 266, 267, 280, 281, 286, 288, 292, 293, 296, 309, 310, 315, 318, 320, 321, 325, 326, 329, 342, 343, 348, 351, 353, 354, 358, 359, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 408, 409, 411, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 466, 499, 542, 547, 548, 549, 552, 555, 556, 557, 558, 559, 566, 567, 568, 571, 573, 574, 576, 577, 578, 579, 582, 583, 587, 588, 589, 590, 591, 592, 595, 596, 599, 601, 604, 609, 610, 611, 613, 614, 615, 616, 618, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 646, 647, 648, 649, 650, 651, 654, 655, 656, 659, 660, 662, 664, 665, 667, 670], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 121, 123, 124, 142, 154, 160, 162, 165, 166, 167, 187, 199, 203, 204, 209, 211, 221, 222, 227, 228, 232, 233, 234, 245, 246, 247, 248, 249, 250, 251, 252, 259, 260, 261, 262, 263, 264, 265, 266, 269, 271, 281, 282, 287, 288, 292, 293, 298, 300, 310, 311, 316, 319, 320, 321, 325, 326, 331, 333, 343, 344, 349, 352, 353, 354, 358, 359, 362, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 392, 396, 403, 406, 420, 424, 430, 431, 432, 434, 435, 436, 438, 439, 441, 442, 446, 447, 448, 449, 450, 453, 458, 459, 470, 472, 473, 474, 481, 499, 502, 565, 567, 568, 575, 589, 596, 598, 599, 600, 601, 602, 605, 607, 647, 658, 660, 661, 662, 664, 665, 666, 668, 669, 671], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 163, 164, 207, 267, 296, 329, 365, 369, 371, 372, 373, 374, 376, 377, 378, 382, 383, 430, 435, 447, 470, 499, 542, 574, 596, 599, 602, 604, 605, 648, 658, 666, 669], "found": [2, 7, 8, 12, 14, 29, 159, 165, 365, 369, 371, 372, 373, 374, 376, 377, 378, 392, 403, 416, 419, 420, 425, 442, 595, 597, 599, 601, 602, 604, 605, 607, 616, 658, 668, 669, 671], "doe": [2, 7, 8, 12, 14, 49, 77, 121, 123, 124, 162, 163, 164, 221, 223, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 291, 292, 293, 310, 312, 320, 321, 324, 325, 326, 343, 345, 353, 354, 357, 358, 359, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 396, 406, 474, 502, 592, 597, 599, 604, 605, 607, 637, 660, 668, 669, 671], "appear": [2, 7, 8, 12, 14, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 582, 599, 602], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 161, 162, 209, 241, 253, 254, 269, 298, 329, 331, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 382, 389, 396, 406, 408, 432, 435, 438, 439, 470, 499, 552, 575, 591, 596, 598, 599, 601, 602, 605, 607, 615, 625, 647, 658, 664, 666, 668, 669, 671], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 121, 122, 123, 124, 125, 127, 129, 130, 132, 133, 134, 136, 140, 142, 145, 147, 148, 149, 152, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 175, 177, 178, 179, 181, 185, 187, 190, 192, 193, 194, 197, 199, 201, 202, 203, 204, 205, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 245, 246, 248, 250, 252, 259, 260, 262, 264, 266, 281, 282, 283, 285, 288, 289, 290, 291, 292, 293, 310, 311, 312, 314, 317, 318, 319, 320, 321, 323, 324, 325, 326, 343, 344, 345, 347, 350, 351, 352, 353, 354, 356, 357, 358, 359, 362, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 392, 393, 398, 403, 404, 419, 420, 422, 424, 425, 428, 430, 431, 432, 435, 438, 439, 441, 444, 446, 447, 448, 449, 453, 455, 458, 470, 473, 499, 547, 548, 549, 550, 565, 574, 575, 579, 580, 581, 595, 597, 598, 599, 602, 604, 605, 616, 619, 625, 628, 644, 645, 646, 647, 648, 654, 661, 662, 665, 669], "place": [2, 7, 8, 12, 14, 222, 226, 227, 245, 247, 260, 261, 282, 286, 287, 311, 315, 316, 344, 348, 349, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 592, 602, 604, 664, 668], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 122, 125, 127, 157, 158, 159, 162, 163, 164, 167, 168, 169, 172, 202, 203, 204, 205, 207, 237, 246, 253, 267, 296, 319, 329, 352, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 384, 385, 398, 416, 417, 418, 419, 420, 424, 425, 430, 431, 432, 434, 441, 446, 447, 448, 449, 451, 453, 454, 455, 456, 458, 470, 472, 499, 550, 566, 579, 595, 599, 602, 604, 605, 628, 644, 647, 648, 652, 658, 669], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 121, 122, 123, 124, 125, 127, 132, 134, 142, 149, 154, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 172, 177, 179, 187, 194, 199, 202, 203, 204, 205, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 228, 231, 232, 233, 234, 236, 245, 246, 248, 250, 252, 259, 260, 262, 264, 266, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 288, 291, 292, 293, 295, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 320, 321, 324, 325, 326, 328, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 353, 354, 357, 358, 359, 361, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 388, 400, 420, 422, 423, 425, 430, 431, 432, 435, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 458, 470, 476, 477, 479, 481, 482, 487, 499, 547, 548, 549, 574, 575, 587, 596, 597, 604, 605, 636, 637, 644, 647, 648, 658, 668, 669, 671], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 121, 123, 124, 157, 158, 159, 162, 165, 167, 168, 169, 202, 203, 204, 205, 226, 227, 231, 286, 287, 291, 315, 316, 324, 348, 349, 357, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 383, 419, 420, 424, 446, 447, 453, 458, 470, 499, 565, 566, 595, 598, 599, 602, 603, 604, 626, 627, 644, 645, 647], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 157, 158, 159, 162, 163, 164, 167, 168, 169, 202, 203, 204, 205, 221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 423, 431, 441, 446, 447, 448, 449, 450, 453, 454, 587, 595, 596, 599, 601, 604, 615, 619, 646, 654], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 458, 476, 477, 479, 480, 481, 482, 483, 566, 604, 605, 644, 646, 647, 648, 649, 650, 651, 654, 662, 667, 669], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 157, 158, 159, 162, 163, 164, 168, 169, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 382, 423, 425, 430, 447, 448, 449, 450, 454, 458, 459, 470, 471, 472, 499, 544, 546, 552, 587, 602, 603, 604, 616, 634, 635, 639, 666], "dure": [2, 7, 8, 12, 14, 19, 142, 154, 161, 162, 163, 164, 187, 199, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 431, 440, 447, 453, 595, 648, 668, 671], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 121, 122, 123, 124, 125, 129, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 174, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 199, 200, 203, 204, 209, 211, 221, 222, 223, 226, 227, 228, 231, 232, 233, 234, 245, 246, 247, 248, 249, 250, 251, 252, 259, 260, 261, 262, 263, 264, 265, 266, 269, 271, 281, 282, 283, 286, 287, 288, 291, 292, 293, 296, 298, 300, 310, 311, 312, 315, 316, 320, 321, 324, 325, 326, 329, 331, 333, 343, 344, 345, 348, 349, 353, 354, 357, 358, 359, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 392, 393, 396, 398, 403, 404, 406, 409, 416, 417, 418, 419, 420, 422, 424, 425, 430, 431, 432, 434, 435, 438, 439, 441, 442, 446, 447, 448, 449, 453, 455, 458, 459, 460, 470, 472, 473, 480, 481, 482, 483, 487, 499, 552, 565, 567, 568, 574, 575, 576, 579, 582, 588, 589, 591, 592, 593, 595, 597, 598, 599, 600, 601, 603, 604, 605, 607, 610, 615, 616, 619, 620, 625, 626, 627, 628, 631, 636, 637, 644, 645, 647, 648, 660, 661, 662, 664, 665, 666, 668, 669, 671], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 132, 134, 142, 143, 144, 149, 154, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 177, 179, 187, 188, 189, 194, 199, 203, 204, 296, 329, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 417, 418, 420, 425, 432, 446, 471, 472, 546, 592, 596, 600, 602, 608, 644, 660], "success": [2, 7, 8, 12, 14, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 607], "unless": [2, 7, 8, 12, 14, 58, 121, 123, 124, 164, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 382, 483, 599], "explicitli": [2, 7, 8, 12, 14, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 417, 418], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 127, 132, 134, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 171, 172, 177, 179, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 221, 228, 232, 233, 234, 246, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 417, 418, 419, 420, 445, 455, 470, 475, 481, 482, 499, 566, 596, 598, 599, 601, 602, 603, 604, 605, 607, 615, 619, 639, 644, 658, 665, 668, 669], "introduct": [2, 7, 8, 12, 14, 365, 369, 371, 372, 373, 374, 375, 376, 377, 605, 669], "specif": [2, 7, 8, 12, 14, 142, 154, 157, 158, 159, 187, 199, 329, 354, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 420, 434, 435, 436, 438, 439, 442, 446, 447, 448, 449, 579, 597, 599, 602, 604, 605, 610, 625, 647, 648, 658, 669, 671], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 121, 123, 124, 132, 134, 149, 162, 163, 164, 171, 177, 179, 194, 221, 223, 228, 232, 233, 234, 246, 248, 249, 250, 251, 252, 259, 262, 263, 264, 265, 266, 281, 283, 288, 292, 293, 310, 312, 317, 318, 319, 320, 321, 322, 325, 326, 343, 345, 350, 351, 352, 353, 354, 355, 358, 359, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 392, 403, 409, 419, 420, 447, 448, 449, 458, 470, 473, 481, 482, 499, 587, 591, 597, 598, 599, 604, 611, 615, 664, 665, 668], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 132, 134, 142, 149, 154, 157, 162, 163, 164, 168, 169, 172, 177, 179, 187, 194, 199, 209, 211, 221, 223, 228, 231, 232, 233, 234, 237, 246, 248, 250, 252, 253, 259, 262, 264, 266, 269, 271, 281, 283, 288, 291, 292, 293, 298, 300, 310, 312, 320, 321, 324, 325, 326, 331, 333, 343, 345, 353, 354, 357, 358, 359, 362, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 416, 417, 420, 424, 430, 431, 435, 438, 439, 441, 447, 448, 449, 451, 453, 459, 460, 467, 471, 472, 473, 476, 477, 479, 481, 482, 483, 574, 582, 592, 599], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 123, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 162, 163, 164, 168, 169, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 209, 211, 221, 223, 228, 231, 232, 233, 234, 237, 246, 248, 250, 252, 253, 259, 262, 264, 266, 269, 271, 281, 283, 288, 291, 292, 293, 298, 300, 310, 312, 320, 321, 324, 325, 326, 331, 333, 343, 345, 353, 354, 357, 358, 359, 362, 364, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 389, 416, 417, 419, 420, 424, 430, 431, 435, 438, 439, 441, 447, 448, 449, 453, 458, 459, 460, 467, 468, 470, 471, 472, 473, 476, 477, 479, 481, 482, 483, 499, 558, 559, 574, 582, 592, 595, 596, 597, 598, 599, 601, 604, 605, 620, 627, 634, 635, 636, 637, 644, 647, 648, 650, 654, 661, 662, 666, 669], "mdv": [2, 8, 12, 14, 371, 372, 382, 596, 604, 611, 613, 621, 624, 642, 658, 662, 664, 667], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 121, 123, 124, 142, 154, 162, 164, 187, 199, 363, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 396, 406, 597, 598, 599, 601, 602, 604, 605, 615, 616, 619, 620, 637, 669], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 162, 163, 164, 221, 223, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 291, 292, 293, 310, 312, 320, 321, 324, 325, 326, 343, 345, 353, 354, 357, 358, 359, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 417, 418, 424, 595, 596, 597, 598, 599, 601, 602, 604, 610, 619], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 122, 125, 157, 158, 159, 160, 162, 163, 164, 165, 202, 205, 226, 246, 286, 315, 348, 354, 364, 365, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 409, 410, 411, 412, 416, 419, 420, 422, 424, 425, 428, 429, 430, 431, 441, 444, 446, 447, 448, 449, 453, 455, 458, 470, 499, 545, 560, 561, 562, 565, 574, 575, 580, 581, 587, 589, 591, 595, 596, 597, 598, 604, 607, 613, 616, 620, 628, 639, 644, 647, 648, 659, 662, 665, 668], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 143, 144, 157, 158, 159, 161, 162, 164, 168, 169, 188, 189, 221, 232, 248, 281, 292, 310, 321, 325, 343, 354, 358, 365, 369, 371, 372, 373, 374, 375, 376, 377, 417, 418, 420, 447, 455, 475, 481, 482, 567, 568, 582, 589, 595, 596, 597, 599, 601, 604, 605, 608, 619, 620, 627, 637, 647, 648, 661, 662, 664, 669], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 132, 134, 142, 149, 154, 157, 158, 159, 162, 177, 179, 187, 194, 199, 221, 232, 253, 281, 292, 310, 321, 325, 343, 358, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 431, 441, 444, 460, 470, 473, 481, 499, 550, 574, 595, 597, 598, 599, 600, 601, 602, 604, 605, 615, 616, 644, 645, 647, 648, 658, 664, 668, 669, 670, 671], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 121, 123, 124, 162, 163, 164, 321, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 387, 389, 392, 393, 394, 396, 398, 403, 404, 406, 419, 420, 442, 458, 459, 470, 471, 472, 499, 552, 597, 599, 602, 644, 660, 661, 665], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 207, 223, 227, 230, 253, 267, 283, 287, 290, 296, 312, 316, 323, 329, 345, 349, 356, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 411, 417, 418, 420, 432, 442, 445, 473, 566, 567, 568, 577, 598, 599, 601, 602, 603, 604, 605, 607, 615, 658, 669, 670], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 154, 157, 158, 159, 167, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 196, 199, 202, 203, 204, 205, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 430, 447, 448, 449, 451, 455, 456, 473, 611, 621, 665], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 160, 163, 164, 166, 167, 168, 169, 203, 204, 221, 222, 228, 231, 232, 233, 234, 245, 260, 281, 282, 288, 291, 292, 293, 310, 311, 320, 321, 324, 325, 326, 343, 344, 353, 354, 357, 358, 359, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382, 409, 416, 420, 425, 431, 435, 441, 470, 473, 499, 575, 597, 598, 599, 601, 604, 605, 615, 625, 636, 647, 648, 654, 662, 669], "after": [2, 4, 5, 6, 7, 8, 12, 14, 162, 163, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 385, 447, 595, 597, 599, 604, 605, 607, 616, 647, 668, 669, 671], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 121, 122, 123, 124, 125, 127, 132, 134, 142, 149, 154, 157, 158, 159, 162, 163, 164, 167, 168, 169, 172, 177, 179, 187, 194, 199, 202, 203, 204, 205, 221, 223, 228, 231, 232, 233, 234, 235, 236, 246, 248, 281, 283, 288, 291, 292, 293, 294, 295, 310, 312, 320, 321, 324, 325, 326, 327, 328, 343, 345, 353, 354, 357, 358, 359, 360, 361, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 390, 391, 394, 395, 401, 402, 405, 420, 430, 434, 435, 436, 438, 439, 447, 448, 449, 458, 470, 481, 482, 483, 499, 547, 548, 549, 558, 559, 565, 574, 584, 585, 596, 597, 602, 604, 605, 616, 619, 620, 626, 633, 636, 637, 640, 641, 644, 647, 648, 654, 658, 662, 668, 669, 670], "you": [2, 221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 446, 595, 598, 599, 600, 601, 603, 605, 607, 615, 647, 648, 658, 660, 661, 662, 664, 665, 666, 668, 669, 671], "want": [2, 596, 598, 599, 601, 616, 644, 658, 665, 666, 671], "altitud": [2, 31, 45, 56, 74, 168, 169, 207, 417, 420, 425, 432, 453, 458, 470, 481, 499, 576, 588, 595, 598, 604, 637, 644, 650, 660, 664, 666], "provid": [2, 6, 45, 48, 74, 162, 206, 227, 287, 316, 321, 349, 367, 368, 369, 374, 377, 381, 382, 383, 385, 390, 391, 397, 398, 401, 402, 407, 409, 470, 473, 499, 579, 587, 593, 595, 598, 599, 601, 602, 603, 605, 616, 645, 647, 658, 665, 668, 669], "np": [2, 409, 428, 456, 586, 595, 597, 598, 599, 601, 602, 604, 605, 619, 621, 625, 628, 633, 636, 637, 639, 644, 645, 647, 648, 649, 650, 660, 661, 662, 664, 665, 666, 669], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 127, 132, 134, 142, 143, 144, 149, 154, 162, 163, 164, 166, 172, 177, 179, 187, 188, 189, 194, 199, 207, 221, 222, 223, 228, 232, 233, 234, 245, 246, 248, 250, 252, 259, 260, 262, 264, 266, 267, 281, 282, 283, 288, 292, 293, 296, 310, 311, 312, 317, 318, 320, 321, 325, 326, 329, 343, 344, 345, 350, 351, 353, 354, 358, 359, 409, 419, 420, 428, 431, 432, 433, 441, 446, 448, 449, 450, 455, 456, 458, 460, 466, 472, 476, 477, 479, 480, 481, 482, 483, 561, 562, 563, 564, 565, 572, 573, 575, 580, 581, 584, 585, 586, 595, 599, 604, 605, 619, 633, 644, 647, 648, 650, 660, 661, 662, 664, 665, 666, 669], "295": [2, 604], "dtype": [2, 416, 420, 595, 598, 599, 604, 660, 662, 666], "float64": [2, 419, 420, 595, 598, 645, 666], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 128, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 202, 203, 204, 205, 208, 209, 210, 211, 212, 241, 242, 243, 244, 254, 255, 256, 257, 268, 269, 270, 271, 272, 297, 298, 299, 300, 301, 330, 331, 332, 333, 334, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 387, 392, 393, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460, 461, 468, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 492, 493, 494, 495, 496, 497, 498, 512, 513, 514, 515, 520, 521, 522, 523, 524, 525, 526, 542, 544, 545, 546, 547, 548, 549, 550, 552, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 589, 591, 595, 597, 598, 599, 602, 604, 605, 645, 647, 648, 661, 664, 666, 669], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 157, 158, 159, 162, 163, 164, 166, 167, 168, 169, 202, 203, 204, 205, 221, 228, 231, 232, 233, 234, 236, 281, 288, 291, 292, 293, 295, 310, 320, 321, 324, 325, 326, 328, 343, 353, 354, 357, 358, 359, 361, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 385, 398, 416, 417, 418, 419, 420, 422, 423, 424, 425, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 460, 470, 471, 475, 476, 477, 479, 480, 481, 482, 483, 499, 565, 566, 567, 568, 574, 578, 587, 589, 592, 595, 596, 599, 604, 605, 616, 629, 630, 648, 658, 660, 661, 664, 666, 668, 669, 671], "edg": [3, 33, 57, 120, 123, 162, 163, 164, 165, 166, 221, 228, 232, 233, 234, 250, 252, 262, 264, 266, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 432, 445, 449, 460, 482, 550, 597, 598, 599, 636, 637, 647], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 383, 598, 604], "gamic": [4, 604], "hdf5": [4, 8, 604, 658], "unlik": [4, 5, 6, 368], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 162, 163, 164, 165, 166, 167, 204, 221, 223, 228, 231, 232, 233, 234, 248, 281, 283, 288, 291, 292, 293, 310, 312, 320, 321, 324, 325, 326, 343, 345, 353, 354, 357, 358, 359, 365, 368, 370, 373, 375, 377, 381, 409, 420, 431, 441, 451, 455, 458, 466, 470, 499, 547, 548, 549, 597, 598, 599, 602, 605, 644, 647, 648, 658, 660, 668, 669, 671], "still": [4, 5, 6, 162, 296, 329, 368, 383, 420, 582, 601, 602, 604, 605, 615, 669], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 127, 132, 134, 142, 149, 154, 162, 163, 164, 165, 167, 168, 169, 172, 177, 179, 187, 194, 199, 202, 203, 204, 205, 221, 222, 226, 227, 228, 231, 232, 233, 234, 237, 245, 248, 250, 252, 253, 259, 260, 262, 264, 266, 281, 282, 286, 287, 288, 291, 292, 293, 310, 311, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 364, 365, 367, 368, 373, 374, 377, 378, 380, 381, 382, 383, 385, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 442, 446, 447, 448, 449, 453, 454, 455, 458, 460, 470, 475, 479, 492, 493, 495, 496, 499, 520, 521, 523, 524, 565, 566, 567, 568, 575, 577, 578, 579, 580, 581, 587, 591, 595, 596, 597, 598, 599, 601, 602, 604, 605, 607, 611, 615, 616, 619, 625, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 644, 645, 648, 654, 655, 656, 658, 662, 664, 666, 668, 669], "renam": [4, 5, 6, 29, 368, 378, 604], "uniform": [4, 5, 6, 58, 163, 164, 368, 376, 424, 430, 483, 604, 625, 628, 658, 660], "forc": [4, 5, 6, 368, 378, 424, 599, 604], "extract": [4, 221, 281, 310, 343, 377, 430, 442, 566, 567, 568, 578, 601, 604, 613, 619, 641, 643, 644, 647, 648, 651, 658, 667], "valid": [4, 31, 45, 74, 156, 157, 162, 201, 222, 245, 260, 282, 311, 344, 373, 382, 383, 417, 418, 420, 446, 458, 470, 499, 566, 567, 568, 575, 602, 604, 605, 620, 669], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 159, 207, 221, 223, 228, 229, 230, 232, 233, 234, 246, 248, 250, 252, 259, 262, 264, 266, 267, 281, 283, 288, 289, 290, 292, 293, 296, 310, 312, 320, 321, 322, 323, 325, 326, 329, 343, 345, 353, 354, 355, 356, 358, 359, 376, 417, 418, 420, 428, 430, 447, 449, 470, 480, 482, 499, 566, 574, 589, 595, 597, 598, 599, 604, 620, 625, 630, 633, 639, 650, 660, 666], "valid_min": [4, 162, 163, 164, 369, 604, 647, 648, 666], "valid_max": [4, 162, 163, 164, 369, 647, 648, 666], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 132, 134, 137, 142, 143, 144, 149, 154, 162, 163, 164, 168, 169, 177, 179, 182, 187, 188, 189, 194, 199, 221, 228, 232, 233, 234, 248, 253, 281, 288, 292, 293, 310, 320, 321, 325, 326, 329, 343, 353, 354, 358, 359, 373, 374, 376, 377, 379, 383, 385, 409, 420, 424, 435, 438, 439, 447, 448, 449, 455, 457, 458, 470, 471, 472, 476, 477, 479, 481, 482, 499, 575, 596, 597, 598, 601, 604, 605, 606, 607, 608, 625, 644, 647, 648, 658, 661, 662, 665, 668, 669, 671], "present": [4, 29, 31, 45, 74, 221, 228, 232, 233, 234, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 382, 383, 396, 406, 420, 446, 458, 470, 499, 599, 660, 665], "unit": [4, 55, 121, 122, 123, 124, 125, 163, 164, 213, 216, 217, 218, 219, 226, 246, 273, 276, 277, 278, 279, 286, 302, 305, 306, 307, 308, 315, 335, 338, 339, 340, 341, 348, 369, 371, 422, 441, 444, 446, 457, 480, 552, 575, 595, 599, 601, 604, 605, 606, 634, 639, 647, 648, 658, 661, 666, 669], "avail": [4, 16, 45, 56, 57, 58, 74, 142, 154, 157, 158, 159, 166, 187, 199, 206, 246, 248, 250, 252, 262, 264, 266, 371, 381, 470, 481, 482, 483, 499, 595, 597, 598, 599, 604, 607, 613, 615, 625, 644, 658], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 122, 125, 446, 455, 456, 595, 597, 598, 599, 600, 601, 602, 604, 605, 616, 650, 660, 661, 662, 664, 665, 666, 669], "k": [5, 125, 225, 226, 227, 229, 230, 231, 285, 286, 287, 289, 290, 291, 314, 315, 316, 322, 323, 324, 347, 348, 349, 355, 356, 357, 388, 392, 393, 395, 396, 400, 403, 404, 405, 406, 430, 447, 455, 597, 601, 602, 605, 626, 633, 636, 637, 669], "band": [5, 9, 157, 159, 161, 381, 434, 436, 443, 446, 447, 448, 449, 453, 595, 602, 604, 648], "arm": [5, 6, 40, 366, 367, 368, 379, 380, 420, 442, 467, 546, 552, 595, 597, 599, 601, 604, 607, 622, 637, 660, 661, 662, 664, 665, 666, 668, 671], "zenith": 5, "kazr": [5, 6, 604], "ingest": [5, 598, 604, 658, 659], "spectra": [6, 74, 117, 433, 452, 499, 542, 549, 557, 575, 604], "radar_spectra": 6, "delay_field_load": [6, 365, 368, 371, 372, 373, 376, 378], "delai": [6, 365, 368, 371, 372, 373, 376, 604], "load": [6, 29, 365, 368, 371, 372, 373, 376, 384, 385, 394, 604, 620, 666], "until": [6, 29, 163, 365, 368, 371, 372, 373, 376, 607], "particular": [6, 365, 368, 371, 372, 373, 376, 420, 598, 607, 644, 658], "access": [6, 19, 31, 45, 56, 57, 74, 143, 144, 188, 189, 365, 368, 371, 372, 373, 376, 385, 458, 470, 481, 482, 499, 545, 598, 602, 615, 616, 664, 666], "In": [6, 121, 123, 124, 164, 166, 363, 365, 368, 371, 372, 373, 375, 376, 396, 406, 409, 422, 425, 432, 447, 456, 565, 566, 595, 597, 598, 599, 601, 605, 610, 611, 616, 644, 647, 648, 658, 661, 662, 664, 665, 668, 669], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 142, 143, 144, 154, 162, 187, 188, 189, 199, 221, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 365, 368, 369, 371, 372, 373, 376, 379, 380, 383, 458, 461, 462, 463, 464, 470, 481, 482, 488, 489, 490, 491, 499, 516, 517, 518, 519, 595, 598, 599, 601, 602, 645, 660, 666], "radarspectra": [6, 452, 549], "lazyloaddict": [6, 31, 45, 74, 365, 368, 371, 372, 373, 376, 458, 470, 499], "speedup": [6, 248, 321, 354, 368, 599, 604], "where": [6, 15, 56, 57, 119, 122, 125, 129, 132, 133, 134, 135, 136, 138, 140, 141, 142, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 162, 163, 164, 167, 169, 174, 177, 178, 179, 180, 181, 183, 185, 186, 187, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 221, 228, 231, 232, 233, 234, 247, 261, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 362, 368, 425, 431, 432, 441, 450, 456, 481, 482, 567, 568, 576, 579, 591, 595, 596, 599, 601, 604, 615, 616, 619, 625, 628, 644, 645, 647, 658, 661, 665, 671], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 221, 228, 232, 233, 234, 250, 252, 262, 264, 266, 267, 281, 288, 292, 293, 296, 310, 320, 321, 325, 326, 329, 343, 353, 354, 358, 359, 368, 373, 374, 375, 376, 409, 416, 419, 420, 447, 448, 449, 450, 451, 455, 456, 470, 480, 481, 482, 499, 547, 548, 549, 565, 566, 577, 578, 595, 599, 604, 611, 616, 619, 621, 622, 626, 660, 662, 664, 665, 666], "vari": [6, 368, 371, 430, 647, 648], "between": [6, 33, 45, 56, 57, 74, 120, 122, 123, 142, 154, 162, 163, 165, 166, 167, 187, 199, 203, 204, 221, 228, 232, 233, 234, 246, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 362, 368, 373, 376, 382, 383, 409, 430, 431, 435, 441, 460, 470, 481, 482, 499, 560, 574, 588, 595, 597, 598, 599, 605, 607, 619, 626, 636, 644, 647, 662, 664, 669, 671], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 137, 142, 154, 157, 158, 159, 162, 163, 164, 166, 169, 182, 187, 199, 203, 208, 210, 214, 215, 221, 228, 231, 232, 233, 234, 250, 252, 262, 264, 266, 268, 270, 274, 275, 281, 288, 291, 292, 293, 297, 299, 303, 304, 310, 320, 321, 324, 325, 326, 330, 332, 336, 337, 343, 353, 354, 357, 358, 359, 367, 368, 373, 376, 377, 409, 424, 428, 455, 470, 478, 481, 482, 483, 484, 485, 486, 499, 512, 513, 514, 515, 547, 548, 549, 552, 566, 571, 573, 577, 591, 592, 598, 599, 605, 621, 660, 666, 669], "ngates_vari": [6, 368], "recommend": [6, 29, 45, 74, 162, 164, 354, 368, 377, 420, 430, 431, 441, 447, 470, 499, 565, 605, 607, 625, 644, 658, 668, 669, 670, 671], "noxp": [7, 604], "iphex": [7, 604], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 137, 182, 321, 354, 373, 375, 417, 418, 442, 566, 569, 572, 578, 595, 598, 599, 604, 615, 620, 644, 645, 648, 649, 650, 658, 660], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 129, 130, 132, 133, 134, 135, 138, 140, 141, 145, 147, 148, 149, 150, 152, 153, 155, 162, 167, 174, 175, 177, 178, 179, 180, 183, 185, 186, 190, 192, 193, 194, 195, 197, 198, 200, 203, 204, 221, 226, 227, 246, 247, 249, 250, 251, 252, 261, 263, 264, 265, 266, 281, 286, 287, 310, 315, 316, 317, 318, 343, 348, 349, 350, 351, 392, 403, 409, 417, 418, 419, 420, 446, 450, 458, 460, 470, 476, 477, 478, 479, 482, 483, 484, 485, 486, 499, 512, 513, 514, 515, 544, 566, 574, 577, 578, 580, 581, 587, 595, 599, 602, 644, 645, 647, 658], "dataset1": 8, "dataset2": 8, "pattern": [9, 550, 636, 644], "project": [9, 16, 31, 34, 45, 74, 121, 122, 123, 124, 125, 226, 237, 248, 259, 286, 296, 315, 321, 348, 354, 371, 380, 381, 420, 458, 461, 470, 499, 595, 597, 599, 601, 602, 604, 615, 616, 619, 620, 626, 627, 633, 640, 645, 647, 648, 654, 658, 661, 662, 664, 665, 668], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 207, 216, 221, 223, 226, 228, 231, 232, 233, 234, 236, 246, 248, 250, 252, 262, 264, 266, 267, 276, 281, 283, 286, 288, 291, 292, 293, 295, 296, 305, 310, 312, 315, 318, 320, 324, 325, 326, 328, 329, 338, 343, 345, 348, 351, 353, 357, 358, 359, 361, 409, 413, 414, 415, 416, 417, 419, 420, 424, 431, 432, 434, 441, 443, 444, 445, 446, 447, 448, 449, 453, 458, 464, 466, 482, 490, 518, 546, 550, 565, 595, 598, 599, 603, 604, 608, 619, 626, 627, 636, 637, 644, 647, 648, 664, 665, 666], "radx_dir": 10, "first": [10, 45, 58, 74, 162, 164, 246, 366, 367, 376, 379, 409, 420, 431, 441, 447, 448, 449, 453, 470, 483, 499, 569, 571, 574, 584, 585, 595, 597, 598, 599, 601, 605, 607, 611, 615, 616, 630, 639, 644, 645, 647, 648, 654, 662, 664, 665, 666, 669], "convert": [10, 13, 39, 422, 431, 441, 466, 582, 592, 595, 597, 599, 604, 647, 648], "cf": [10, 13, 45, 74, 368, 379, 380, 442, 470, 499, 595, 596, 597, 598, 613, 624, 642, 658, 666, 667], "radial": [10, 13, 45, 74, 162, 163, 368, 379, 424, 447, 470, 499, 565, 587, 596, 598, 599, 601, 604, 609, 613, 615, 624, 642, 653, 657, 658, 662, 666, 667], "radxconvert": 10, "path": [10, 15, 158, 159, 164, 468, 545, 596, 597, 599, 601, 604, 605, 615, 616, 658, 668, 669], "radx": [10, 604], "grid": [11, 24, 45, 74, 206, 223, 225, 233, 237, 241, 247, 248, 249, 251, 253, 254, 259, 261, 262, 263, 265, 283, 285, 312, 314, 345, 347, 363, 370, 371, 380, 381, 382, 413, 414, 415, 416, 417, 418, 419, 420, 430, 431, 432, 441, 444, 445, 453, 470, 499, 546, 550, 551, 553, 554, 570, 589, 595, 599, 604, 613, 618, 623, 624, 627, 637, 640, 642, 644, 647, 648, 653, 657, 658, 659, 667], "produc": [11, 165, 370, 379, 381, 385, 451, 456, 599, 601, 605, 648, 658, 669], "radx2grid": 11, "within": [11, 29, 47, 48, 127, 162, 163, 164, 165, 169, 172, 206, 416, 419, 420, 424, 446, 472, 473, 560, 566, 567, 568, 576, 578, 580, 581, 593, 597, 599, 600, 601, 602, 604, 605, 615, 616, 627, 628, 658, 662, 664, 669, 671], "lrose": 11, "must": [11, 157, 158, 159, 162, 321, 367, 370, 371, 376, 382, 430, 444, 447, 448, 449, 587, 599, 605, 647, 658, 668, 669], "been": [11, 12, 132, 134, 142, 149, 154, 161, 162, 177, 179, 187, 194, 199, 253, 329, 368, 370, 373, 374, 375, 377, 575, 596, 601, 605, 615, 647, 658, 664, 668, 669], "write_grid": [11, 370], "ident": [11, 163, 164, 370, 419, 648], "layout": [11, 33, 370, 460, 604], "rainbow": 12, "rainbow5": [12, 604], "5": [12, 31, 157, 159, 162, 165, 166, 167, 168, 204, 221, 228, 231, 232, 233, 234, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 380, 430, 431, 435, 441, 446, 458, 550, 574, 582, 595, 596, 597, 598, 599, 601, 602, 603, 605, 610, 611, 616, 625, 628, 630, 631, 632, 635, 636, 637, 638, 639, 640, 644, 645, 647, 648, 649, 650, 654, 660, 662, 665, 666, 669], "22": [12, 595, 597, 601, 604, 615, 625, 645, 647, 651, 667], "3": [12, 45, 74, 119, 120, 162, 163, 202, 203, 205, 233, 371, 375, 381, 416, 417, 418, 420, 424, 430, 431, 441, 470, 499, 546, 550, 566, 593, 595, 596, 597, 598, 601, 603, 605, 610, 611, 613, 616, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 657, 658, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671], "34": [12, 441, 453, 595, 619, 623, 647, 648, 667], "16": [12, 430, 434, 455, 595, 596, 597, 599, 602, 605, 610, 611, 612, 619, 632, 638, 644, 646, 662, 666, 669], "35": [12, 164, 168, 169, 595, 597, 598, 625, 634, 636, 637, 644, 665, 667], "1": [12, 31, 45, 55, 74, 119, 122, 125, 142, 162, 164, 168, 169, 187, 267, 368, 373, 374, 375, 380, 419, 420, 422, 427, 430, 431, 432, 435, 441, 446, 447, 449, 458, 470, 480, 499, 550, 566, 574, 575, 586, 593, 595, 597, 598, 599, 601, 602, 605, 607, 608, 610, 611, 615, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 647, 649, 650, 655, 658, 660, 661, 662, 664, 666, 669], "sinc": [12, 425, 447, 595, 597, 598, 599, 620, 647, 648, 661, 664, 666], "evolv": [12, 595], "constantli": 12, "guaranti": 12, "work": [12, 122, 125, 248, 296, 321, 329, 354, 373, 375, 453, 596, 597, 599, 601, 602, 604, 605, 607, 608, 616, 644, 658, 660, 661, 662, 664, 665, 666, 668, 669, 671], "necessari": [12, 595], "user": [12, 29, 48, 158, 159, 165, 354, 381, 430, 473, 566, 591, 595, 598, 599, 601, 602, 604, 605, 658, 660, 661, 662, 664, 665, 666, 668, 669, 671], "adapt": [12, 119, 595, 671], "code": [12, 29, 162, 444, 446, 455, 595, 597, 601, 602, 604, 608, 610, 611, 613, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658, 668, 671], "accord": [12, 161, 377, 420, 427, 434, 435, 436, 438, 439], "its": [12, 447, 597, 598, 601, 604, 605, 607, 608, 658, 668, 669, 671], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 365, 376, 392, 393, 403, 404, 458, 459, 471, 472, 474, 483, 502, 598, 599, 604], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 136, 162, 163, 164, 165, 167, 168, 169, 181, 202, 203, 204, 205, 207, 226, 286, 315, 348, 354, 377, 380, 381, 397, 407, 409, 416, 417, 419, 420, 424, 432, 442, 458, 466, 470, 472, 473, 476, 477, 483, 492, 493, 494, 495, 496, 497, 498, 499, 520, 521, 522, 523, 524, 525, 526, 544, 546, 547, 548, 549, 556, 565, 568, 572, 573, 580, 581, 590, 592, 595, 596, 598, 599, 601, 602, 604, 605, 607, 608, 613, 616, 619, 620, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 638, 639, 640, 641, 642, 644, 645, 647, 648, 654, 655, 656, 658, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670], "issu": [12, 29, 296, 329, 377, 380, 598, 602, 603, 604, 605, 613, 614, 617, 658, 667, 668, 669, 671], "upstream": [12, 596, 605, 607, 669], "reflect": [12, 47, 117, 127, 143, 144, 157, 158, 159, 160, 165, 167, 168, 169, 172, 188, 189, 203, 204, 223, 283, 312, 345, 362, 409, 420, 422, 423, 425, 428, 429, 430, 431, 432, 435, 437, 438, 439, 440, 441, 446, 447, 453, 472, 542, 555, 556, 558, 559, 579, 595, 596, 597, 601, 602, 604, 609, 611, 612, 613, 615, 616, 619, 620, 621, 622, 624, 625, 626, 627, 629, 632, 635, 638, 639, 641, 642, 643, 644, 645, 647, 648, 651, 654, 656, 658, 660, 661, 662, 664, 665, 666, 667], "dbz": [12, 157, 161, 168, 169, 422, 428, 429, 430, 431, 441, 453, 596, 598, 601, 615, 619, 627, 634, 635, 641, 644, 647, 648, 666], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 162, 163, 164, 424, 432, 433, 444, 455, 456, 483, 542, 565, 587, 599, 601, 604, 605, 609, 612, 613, 615, 625, 629, 637, 639, 653, 657, 658, 659, 665, 666, 667, 669], "v": [12, 41, 42, 44, 392, 393, 396, 403, 404, 406, 430, 455, 456, 597, 602, 605, 636, 637, 648, 650, 669], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 575, 666], "width": [12, 247, 261, 321, 354, 420, 597, 598, 599, 601, 604, 666], "w": [12, 62, 164, 430, 487, 595, 649], "wu": [12, 416, 664], "wv": 12, "wvu": 12, "differenti": [12, 17, 157, 158, 159, 168, 169, 203, 432, 436, 439, 446, 447, 448, 449, 451, 454, 604, 629, 644, 658], "zdr": [12, 158, 159, 161, 203, 426], "zdru": 12, "co": [12, 119, 122, 125, 431, 432, 441, 595, 597, 620, 644, 647, 648], "polar": [12, 371, 372, 449, 598, 620], "correl": [12, 167, 203, 204, 444, 446, 579, 601, 628, 629, 646, 647, 648], "coeffici": [12, 157, 158, 159, 168, 169, 422, 430, 446, 579, 595, 604, 628, 629, 646], "rhohv": [12, 161, 167, 203, 204, 426, 427, 604, 628, 666], "rhohvu": 12, "phase": [12, 17, 157, 158, 159, 164, 168, 169, 203, 436, 439, 444, 446, 447, 448, 449, 451, 454, 604, 629, 658, 662], "phidp": [12, 158, 159, 168, 169, 203, 447, 604, 658], "uphidp": 12, "uphidpu": 12, "kdp": [12, 168, 169, 436, 439, 447, 448, 449, 604, 649, 658], "ukdp": 12, "ukdpu": 12, "signal": [12, 161, 167, 204, 423, 575, 598, 602], "qualiti": [12, 161, 167, 204, 436, 448, 449, 595, 601, 602, 615], "sqi": [12, 604], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 158, 159, 205, 446, 595, 649], "temp": [12, 604], "posit": [12, 45, 74, 122, 125, 158, 159, 162, 425, 447, 470, 499, 598, 604, 619, 625, 627, 666], "bin": [12, 45, 74, 119, 120, 159, 376, 432, 433, 470, 499, 574, 575, 595, 604, 619, 644, 662, 666], "respect": [12, 45, 74, 431, 441, 453, 470, 499, 599], "iso0": [12, 158, 202], "cfradial_outfil": 13, "head": [13, 45, 74, 207, 470, 499], "ridgelin": 13, "instrument": [13, 45, 74, 142, 154, 167, 187, 199, 203, 204, 383, 470, 499, 602, 604, 662, 666], "rxm": [13, 604], "25": [13, 417, 418, 430, 595, 597, 601, 604, 615, 619, 636, 637, 640, 645, 660, 665], "rli": 13, "here": [13, 132, 134, 142, 149, 154, 177, 179, 187, 194, 199, 259, 595, 596, 597, 598, 599, 601, 602, 603, 607, 619, 644, 647, 648, 654, 658, 660, 665, 668, 671], "float": [13, 24, 58, 122, 125, 132, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 177, 202, 203, 204, 205, 207, 208, 221, 223, 224, 228, 229, 231, 232, 233, 234, 246, 247, 248, 249, 250, 251, 252, 259, 261, 262, 263, 264, 265, 266, 267, 268, 281, 283, 284, 288, 289, 291, 292, 293, 296, 297, 310, 312, 313, 319, 320, 321, 322, 324, 325, 326, 329, 330, 343, 345, 346, 352, 353, 354, 355, 357, 358, 359, 362, 381, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 443, 444, 445, 447, 448, 449, 450, 451, 453, 483, 546, 550, 561, 562, 563, 564, 565, 566, 567, 568, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 599, 602], "offset": [13, 157, 168, 169, 207, 267, 296, 319, 329, 352, 431, 441, 574, 582, 595, 598, 599, 648], "exist": [13, 28, 32, 46, 47, 49, 77, 132, 134, 142, 149, 154, 166, 167, 177, 179, 187, 194, 199, 203, 204, 377, 447, 459, 468, 471, 472, 474, 502, 544, 592, 597, 598, 599, 604, 607, 610, 658, 660], "enter": [13, 596, 599, 605, 669], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 168, 169, 205, 207, 221, 226, 227, 246, 247, 249, 251, 259, 261, 263, 265, 267, 281, 286, 287, 296, 310, 315, 316, 319, 321, 329, 343, 348, 349, 352, 354, 455, 460, 480, 481, 562, 564, 566, 567, 568, 576, 577, 578, 582, 585, 588, 597, 599, 602, 604, 605, 641, 645, 666, 669], "sinarame_h5": [14, 15, 604], "take": [15, 47, 163, 419, 420, 423, 447, 472, 597, 598, 599, 605, 615, 616, 619, 627, 647, 648, 669], "everi": [15, 448, 449, 605, 606, 658, 669], "one": [15, 25, 31, 39, 40, 45, 47, 74, 132, 134, 142, 149, 154, 166, 167, 177, 179, 187, 194, 199, 204, 379, 380, 382, 409, 416, 419, 420, 425, 447, 448, 449, 455, 458, 466, 467, 470, 472, 499, 567, 568, 574, 579, 583, 587, 596, 598, 599, 601, 603, 604, 605, 607, 613, 618, 619, 620, 625, 644, 658, 661, 666, 669, 671], "volum": [15, 45, 74, 162, 164, 165, 321, 354, 373, 374, 375, 383, 409, 417, 418, 442, 470, 499, 567, 568, 570, 589, 592, 595, 598, 599, 601, 602, 604, 613, 620, 624, 642, 667], "folder": [15, 595, 602, 605, 669], "cfradial": [15, 368, 596, 604, 613, 624, 625, 639, 641, 642, 656, 660, 667], "each": [15, 31, 39, 41, 45, 55, 74, 137, 157, 158, 159, 163, 164, 165, 182, 221, 228, 232, 233, 234, 250, 252, 262, 264, 266, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 377, 381, 383, 409, 416, 419, 420, 432, 446, 455, 458, 466, 470, 480, 499, 547, 548, 549, 595, 598, 599, 602, 604, 605, 615, 621, 636, 639, 644, 647, 648, 665, 666, 669], "act": [16, 435, 438, 439, 595, 604, 644, 647, 660], "commun": [16, 595, 602, 605, 658, 669, 671], "softwar": [16, 233, 374, 381, 599, 601, 605, 658, 660, 661, 662, 664, 665, 666, 668, 669], "namespac": [16, 604], "current": [16, 27, 33, 132, 134, 142, 149, 154, 162, 177, 179, 187, 194, 199, 209, 211, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 245, 246, 247, 248, 250, 252, 259, 260, 261, 262, 264, 266, 269, 271, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 300, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 331, 333, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 361, 372, 410, 412, 447, 460, 574, 595, 596, 598, 599, 601, 602, 605, 669], "extens": [16, 209, 241, 254, 269, 298, 331, 381, 598, 607, 668], "wradlib": [16, 604, 658], "http": [16, 373, 374, 375, 422, 425, 431, 432, 436, 437, 441, 444, 566, 579, 595, 597, 599, 601, 602, 605, 616, 628, 637, 644, 647, 648, 658, 668, 669, 671], "org": [16, 422, 425, 431, 432, 436, 437, 441, 444, 566, 579, 602, 604, 605, 628, 644, 647, 648, 658, 669], "phidp_field": [17, 157, 158, 159, 168, 169, 447, 448, 449, 454, 610, 649], "phidp_texture_field": [17, 454], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 123, 127, 143, 144, 157, 158, 159, 167, 168, 169, 172, 188, 189, 202, 203, 204, 205, 207, 267, 296, 329, 419, 420, 423, 424, 430, 431, 441, 444, 451, 452, 454, 455, 456, 458, 460, 470, 481, 482, 499, 565, 566, 574, 575, 576, 577, 578, 588, 595, 604, 605, 610, 613, 619, 620, 636, 637, 643, 647, 651, 654, 658, 662, 665, 667, 669], "textur": [17, 203, 424, 454, 565, 591, 604, 654, 658, 662], "real": [17, 162, 454, 613, 624, 647, 648, 671], "part": [17, 432, 434, 454, 574, 598, 599, 601, 604, 615, 644, 658, 660, 661, 662, 664, 665, 666], "complex": [17, 454], "shift": [17, 168, 169, 207, 267, 296, 329, 445, 448, 454, 574, 604, 662], "texture_field": [17, 454], "refer": [17, 31, 45, 47, 74, 119, 122, 125, 157, 158, 159, 161, 162, 163, 164, 168, 169, 373, 374, 375, 416, 422, 425, 428, 430, 431, 432, 434, 436, 437, 440, 441, 446, 447, 448, 449, 451, 453, 454, 455, 456, 458, 470, 472, 499, 566, 575, 579, 596, 601, 604, 605, 644, 658, 666, 669], "gourlei": [17, 161, 454], "j": [17, 122, 125, 164, 168, 169, 425, 430, 431, 441, 446, 448, 449, 451, 453, 454, 455, 456, 566, 596, 599, 602, 605, 610, 611, 621, 622, 629, 630, 632, 634, 638, 641, 647, 648, 658, 669], "p": [17, 20, 22, 28, 119, 122, 125, 416, 430, 434, 451, 454, 544, 566, 575, 598, 605, 658, 669], "tabari": [17, 454], "parent": [17, 454], "du": [17, 454], "chatelet": [17, 454], "fuzzi": [17, 454], "logic": [17, 132, 134, 142, 149, 154, 177, 179, 187, 194, 199, 454], "algorithm": [17, 127, 162, 163, 164, 172, 416, 420, 430, 431, 441, 446, 447, 453, 454, 595, 604, 605, 609, 612, 613, 654, 658, 667, 669], "separ": [17, 417, 418, 430, 444, 453, 454, 575, 579, 615, 620, 628, 648, 671], "precipit": [17, 420, 422, 430, 436, 440, 446, 454, 579, 595, 597, 599, 604, 605, 619, 628, 647, 648, 658, 669], "nonprecipit": [17, 454], "echo": [17, 430, 431, 441, 446, 454, 604, 644, 647, 648, 665], "polarimetr": [17, 157, 158, 159, 161, 168, 169, 435, 436, 446, 451, 454, 566, 604, 610], "observ": [17, 119, 431, 441, 447, 454, 644, 647, 648], "journal": [17, 162, 164, 416, 434, 436, 454, 575, 605, 658, 669], "atmospher": [17, 45, 74, 119, 120, 162, 163, 420, 434, 450, 454, 470, 499, 595, 598, 599, 601, 602, 605, 615, 658, 660, 661, 662, 664, 665, 666, 669], "ocean": [17, 162, 168, 169, 431, 434, 440, 441, 451, 454, 566, 595, 599, 602, 615, 647, 648], "technologi": [17, 162, 434, 454], "24": [17, 454, 595, 597, 604, 616, 617], "8": [17, 62, 157, 162, 168, 203, 246, 248, 250, 252, 262, 264, 266, 430, 454, 487, 595, 597, 598, 599, 601, 607, 616, 619, 626, 633, 636, 640, 644, 645, 648, 654, 660, 661, 662, 664, 665, 666], "1439": [17, 454], "1451": [17, 454], "filetyp": [19, 25, 599], "need": [19, 45, 54, 56, 57, 74, 381, 431, 441, 470, 479, 481, 482, 499, 576, 588, 597, 598, 599, 602, 603, 604, 605, 607, 615, 619, 625, 647, 648, 658, 660, 661, 662, 664, 665, 666, 668, 669, 671], "being": [19, 21, 162, 221, 223, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 291, 292, 293, 310, 312, 320, 321, 324, 325, 326, 343, 345, 353, 354, 357, 358, 359, 420, 425, 449, 580, 581, 597, 599, 601, 604, 637, 668], "keep": [19, 162, 377, 589, 599, 605, 619, 647, 648, 669, 671], "string": [19, 31, 45, 74, 223, 226, 227, 231, 234, 247, 261, 283, 286, 287, 291, 293, 312, 315, 316, 317, 318, 319, 322, 324, 326, 345, 348, 349, 350, 351, 352, 355, 357, 359, 419, 420, 442, 444, 448, 449, 451, 455, 456, 458, 470, 499, 597, 598, 599, 604, 605, 625, 669], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 127, 162, 163, 172, 207, 267, 296, 329, 385, 462, 463, 464, 488, 489, 490, 491, 516, 517, 518, 519, 599, 602, 604, 627], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 132, 142, 143, 144, 154, 169, 177, 187, 188, 189, 199, 377, 447, 448, 449, 451, 455, 456, 458, 470, 494, 497, 498, 499, 522, 525, 526, 577, 595, 597, 599, 604, 615, 633], "dic": [22, 31, 45, 46, 74, 385, 458, 470, 471, 499], "colormap": [23, 206, 221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 381, 598, 599, 604, 613, 624, 628, 642, 648, 649, 667], "select": [24, 50, 59, 88, 164, 475, 484, 513, 595, 598, 601, 604, 607], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 122, 125, 127, 154, 157, 158, 160, 162, 163, 165, 166, 167, 168, 169, 172, 199, 202, 203, 204, 205, 207, 220, 221, 228, 231, 232, 233, 234, 235, 248, 262, 267, 280, 281, 288, 291, 292, 293, 294, 296, 309, 310, 319, 320, 321, 324, 325, 326, 327, 329, 342, 343, 352, 353, 354, 357, 358, 359, 360, 377, 381, 409, 417, 418, 419, 420, 423, 425, 430, 431, 432, 435, 437, 438, 439, 441, 445, 446, 447, 448, 451, 453, 455, 456, 460, 470, 475, 476, 477, 479, 480, 481, 482, 483, 499, 550, 574, 582, 595, 596, 597, 598, 599, 601, 602, 605, 607, 608, 610, 611, 612, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 660, 661, 662, 664, 665, 666, 667, 668, 669], "limit": [24, 162, 163, 167, 168, 169, 202, 203, 204, 205, 223, 236, 259, 283, 295, 312, 328, 345, 361, 371, 382, 417, 418, 447, 589, 598, 599, 604, 620, 621, 622, 626, 644, 664], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 142, 154, 162, 163, 164, 166, 167, 187, 199, 203, 204, 209, 211, 220, 221, 223, 228, 232, 233, 234, 269, 271, 280, 281, 283, 288, 292, 293, 298, 300, 309, 310, 312, 320, 321, 325, 326, 331, 333, 342, 343, 345, 353, 354, 358, 359, 373, 374, 375, 377, 409, 417, 418, 424, 455, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 492, 493, 494, 495, 496, 497, 498, 499, 512, 513, 514, 515, 520, 521, 522, 523, 524, 525, 526, 547, 548, 567, 568, 574, 595, 596, 598, 599, 601, 602, 604, 611, 613, 615, 618, 619, 623, 636, 637, 639, 644, 645, 647, 648, 650, 654, 662, 665, 666, 667], "get": [24, 238, 239, 240, 258, 368, 385, 395, 405, 409, 595, 596, 598, 599, 601, 604, 616, 636, 637, 644, 647, 648, 660, 662, 665, 666, 668, 670, 671], "relat": [24, 159, 206, 382, 422, 431, 435, 438, 439, 440, 441, 448, 453, 566, 598, 604, 605, 647, 648, 658, 668, 669], "instac": 24, "nyquist": [24, 58, 162, 163, 164, 424, 483, 565, 604, 654, 662, 666], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 142, 154, 159, 162, 163, 165, 166, 168, 169, 187, 199, 203, 209, 210, 211, 220, 224, 228, 229, 231, 232, 233, 241, 242, 243, 244, 246, 248, 254, 255, 256, 257, 259, 262, 269, 270, 271, 280, 284, 288, 289, 291, 292, 298, 299, 300, 309, 313, 320, 321, 322, 324, 325, 331, 332, 333, 342, 346, 353, 354, 355, 357, 358, 381, 417, 418, 420, 424, 428, 431, 441, 447, 449, 455, 458, 460, 470, 476, 477, 479, 480, 481, 482, 483, 499, 547, 548, 549, 550, 565, 566, 575, 577, 591, 597, 599, 604, 605, 669], "consid": [24, 157, 165, 166, 362, 417, 418, 430, 431, 441, 567, 568, 574, 575, 582, 620, 647], "vmin": [24, 221, 223, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 291, 292, 293, 310, 312, 320, 321, 324, 325, 326, 343, 345, 353, 354, 357, 358, 359, 381, 595, 596, 597, 598, 599, 601, 602, 604, 610, 611, 615, 616, 619, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 654, 655, 656, 661, 662, 664, 665], "vmax": [24, 221, 223, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 291, 292, 293, 310, 312, 320, 321, 324, 325, 326, 343, 345, 353, 354, 357, 358, 359, 381, 595, 596, 597, 598, 599, 601, 602, 604, 610, 611, 615, 616, 619, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 654, 655, 656, 661, 662, 664, 665], "2": [24, 119, 122, 164, 165, 166, 203, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 246, 247, 248, 250, 252, 261, 262, 264, 266, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295, 310, 312, 315, 316, 320, 323, 324, 325, 326, 328, 343, 345, 348, 349, 353, 354, 356, 357, 358, 359, 361, 373, 374, 375, 377, 393, 404, 409, 416, 417, 418, 420, 424, 430, 431, 432, 441, 447, 455, 546, 550, 565, 579, 595, 597, 598, 599, 601, 602, 605, 608, 612, 617, 619, 620, 625, 626, 627, 630, 632, 633, 636, 637, 640, 644, 645, 647, 649, 650, 654, 658, 660, 661, 662, 664, 665, 666, 669], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 385, 420, 458, 472, 473, 475, 476, 477, 479, 592, 598, 603, 604, 648, 661], "field_map": 25, "anoth": [25, 409, 579, 598, 599, 604, 619, 660, 665, 668, 671], "fill": [27, 157, 158, 159, 453, 599, 602, 604, 648, 660, 661], "empti": [28, 393, 404, 448, 449, 544, 546, 549, 596, 604, 660], "control": [29, 162, 377, 379, 380, 420, 447, 601, 602, 644, 664], "singl": [29, 163, 164, 165, 166, 226, 227, 229, 231, 286, 287, 289, 291, 315, 316, 322, 324, 348, 349, 355, 357, 381, 420, 552, 574, 592, 595, 598, 599, 601, 604, 605, 613, 615, 618, 619, 623, 645, 667, 669], "self": [29, 168, 169, 598, 599, 605, 661, 664, 669], "descrip": 29, "exampl": [29, 47, 127, 172, 221, 228, 231, 232, 233, 234, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 385, 409, 413, 414, 415, 419, 420, 455, 468, 472, 574, 595, 596, 597, 598, 599, 600, 602, 604, 605, 610, 611, 612, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 660, 662, 665, 666, 667, 669, 671], "default_config": 29, "modifi": [29, 45, 74, 165, 470, 499, 596, 604, 605, 613, 624, 642, 667, 669], "environment": [29, 595, 596, 658, 668], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 207, 237, 253, 267, 296, 329, 379, 380, 409, 417, 435, 442, 446, 447, 450, 451, 458, 466, 467, 470, 480, 499, 575, 595, 597, 598, 604, 615, 619, 644, 645, 647, 648, 658, 660, 661, 666, 668], "pyart_config": 29, "point": [29, 31, 33, 47, 123, 157, 158, 159, 169, 224, 229, 246, 247, 261, 284, 289, 296, 313, 318, 319, 322, 346, 351, 352, 355, 371, 372, 375, 377, 381, 416, 419, 420, 431, 432, 441, 453, 458, 460, 472, 546, 575, 578, 582, 592, 595, 597, 599, 601, 604, 607, 613, 626, 633, 643, 644, 647, 651, 654, 658, 662, 664, 666, 667], "new": [29, 47, 48, 50, 132, 134, 142, 149, 154, 165, 177, 179, 187, 194, 199, 433, 445, 451, 455, 472, 473, 475, 579, 589, 601, 604, 605, 607, 608, 619, 645, 648, 649, 654, 658, 661, 662, 669, 671], "execut": [29, 604, 612, 617, 623, 642, 651, 652, 657, 667], "full": [29, 62, 165, 166, 377, 487, 601, 602, 604, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656], "permiss": 29, "secur": 29, "do": [29, 45, 74, 162, 167, 203, 204, 381, 382, 470, 499, 599, 601, 602, 604, 605, 616, 647, 648, 660, 661, 662, 664, 665, 668, 669, 671], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 127, 132, 134, 142, 149, 154, 157, 159, 168, 169, 172, 177, 179, 187, 194, 199, 233, 246, 382, 383, 385, 396, 398, 406, 417, 418, 419, 430, 442, 447, 448, 449, 455, 458, 472, 479, 481, 482, 574, 575, 593, 598, 599, 604, 605, 607, 610, 631, 644, 654, 655, 656, 658, 665, 669], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 143, 144, 162, 188, 189, 376, 385, 458, 468, 470, 472, 476, 477, 479, 481, 499, 560, 595, 597, 599, 604, 605, 606, 607, 608, 644, 647, 648, 661, 664, 666, 668, 669], "home": [29, 601, 602, 605, 610, 616, 669, 671], "make": [29, 31, 458, 546, 550, 551, 553, 554, 597, 598, 599, 601, 602, 603, 604, 605, 606, 608, 619, 627, 636, 644, 647, 654, 658, 660, 661, 668, 669, 671], "adjust": [29, 122, 236, 295, 328, 361, 430, 599, 604, 625, 628, 636, 648], "login": [29, 602], "": [29, 31, 45, 58, 62, 74, 119, 120, 122, 125, 163, 164, 168, 169, 209, 211, 221, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 269, 271, 281, 288, 292, 293, 298, 300, 310, 320, 325, 326, 331, 333, 343, 353, 358, 359, 390, 391, 397, 401, 402, 407, 409, 411, 416, 431, 432, 434, 435, 441, 443, 444, 447, 448, 449, 451, 453, 456, 458, 470, 483, 487, 499, 575, 579, 595, 596, 597, 598, 599, 601, 602, 604, 606, 607, 615, 616, 619, 625, 627, 628, 637, 644, 645, 647, 648, 650, 654, 658, 660, 661, 662, 664, 665, 666, 670], "also": [29, 45, 74, 132, 177, 206, 222, 245, 260, 282, 311, 344, 374, 375, 379, 381, 383, 395, 405, 409, 417, 431, 441, 470, 499, 595, 596, 597, 598, 599, 601, 602, 604, 605, 615, 619, 644, 647, 648, 658, 660, 664, 666, 668, 669, 670, 671], "shell": 29, "session": 29, "modif": [29, 47, 472, 604], "last": [29, 45, 74, 162, 221, 222, 228, 232, 233, 234, 245, 250, 252, 253, 260, 262, 264, 266, 281, 282, 288, 292, 293, 310, 311, 320, 321, 325, 326, 329, 343, 344, 353, 354, 358, 359, 470, 499, 574, 598, 599, 601, 603, 604, 621, 648, 666], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 137, 157, 158, 159, 163, 164, 169, 182, 246, 478, 486, 494, 498, 512, 515, 522, 526, 595, 597, 598, 599, 601, 602, 604, 605, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658, 669], "interact": [30, 595, 598], "weather": [30, 119, 162, 416, 447, 597, 599, 604, 605, 615, 625, 658, 660, 661, 662, 664, 665, 666, 669], "time": [31, 39, 40, 45, 74, 162, 209, 211, 221, 223, 228, 232, 233, 234, 269, 271, 281, 283, 288, 292, 293, 298, 300, 310, 312, 320, 321, 325, 326, 331, 333, 343, 345, 353, 354, 358, 359, 366, 367, 377, 379, 380, 409, 412, 420, 430, 442, 444, 458, 466, 467, 470, 499, 569, 572, 595, 596, 597, 599, 601, 602, 604, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 660, 666, 671], "origin_latitud": [31, 458], "origin_longitud": [31, 458], "origin_altitud": [31, 458], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 207, 209, 218, 221, 223, 226, 228, 231, 232, 233, 234, 236, 246, 248, 250, 252, 262, 264, 266, 267, 269, 278, 281, 283, 286, 288, 291, 292, 293, 295, 296, 298, 307, 310, 312, 315, 318, 320, 324, 325, 326, 328, 329, 331, 340, 343, 345, 348, 351, 353, 357, 358, 359, 361, 409, 413, 414, 415, 416, 417, 418, 419, 420, 431, 441, 444, 445, 453, 458, 464, 466, 482, 490, 518, 546, 595, 597, 598, 599, 602, 608, 619, 626, 627, 636, 637, 644, 645, 647, 648], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 157, 159, 168, 169, 219, 279, 308, 341, 371, 381, 382, 413, 414, 415, 416, 418, 419, 420, 422, 425, 430, 431, 435, 438, 439, 440, 441, 444, 458, 464, 466, 470, 482, 490, 499, 518, 546, 610, 620, 634, 636, 637, 647, 648, 661], "radar_latitud": [31, 458, 576, 588], "radar_longitud": [31, 458, 576, 588], "radar_altitud": [31, 458], "radar_tim": [31, 458], "radar_nam": [31, 458], "store": [31, 45, 74, 162, 163, 164, 385, 420, 425, 458, 470, 499, 595, 597, 599, 602, 604, 615, 645, 658, 661, 664, 666, 671], "rectilinear": [31, 458], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 371, 408, 409, 416, 419, 420, 458, 460, 466, 470, 499, 613, 618, 623, 626, 658, 659, 667], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 221, 228, 232, 233, 234, 250, 252, 262, 264, 266, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 380, 408, 409, 411, 416, 420, 432, 458, 460, 466, 470, 481, 499, 546, 565, 595, 597, 598, 599, 604, 609, 613, 616, 618, 619, 620, 621, 622, 645, 658, 664, 666], "section": [31, 45, 47, 74, 221, 246, 281, 310, 343, 418, 420, 458, 470, 472, 499, 567, 568, 595, 599, 600, 603, 604, 605, 613, 624, 642, 644, 647, 648, 658, 667, 669], "To": [31, 47, 167, 202, 203, 204, 205, 379, 380, 382, 458, 472, 592, 597, 602, 605, 607, 648, 658, 661, 664, 668, 669, 671], "creat": [31, 42, 45, 47, 50, 74, 162, 163, 164, 165, 167, 202, 203, 204, 205, 206, 207, 220, 234, 237, 253, 267, 280, 293, 296, 309, 321, 326, 329, 342, 354, 359, 374, 379, 380, 381, 382, 383, 419, 420, 451, 456, 458, 468, 470, 472, 475, 499, 586, 587, 589, 595, 599, 601, 604, 605, 610, 611, 613, 616, 619, 621, 622, 624, 625, 627, 641, 642, 643, 647, 648, 651, 656, 658, 659, 661, 664, 667, 669], "legaci": [31, 425, 458], "from_legacy_paramet": [31, 458], "ax": [31, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 246, 247, 248, 250, 252, 259, 260, 261, 262, 264, 266, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 353, 354, 356, 357, 358, 359, 360, 361, 413, 414, 415, 431, 441, 445, 453, 458, 595, 596, 597, 598, 599, 601, 602, 604, 610, 611, 615, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 640, 644, 645, 646, 647, 648, 649, 650, 654, 662], "moment": [31, 39, 45, 74, 117, 161, 162, 163, 164, 167, 203, 204, 373, 374, 375, 420, 452, 458, 466, 470, 499, 542, 575, 598, 604, 616, 624, 642, 658, 665, 667], "describ": [31, 45, 74, 167, 202, 203, 204, 205, 247, 261, 441, 458, 470, 499, 601, 647, 648], "geograph": [31, 45, 56, 74, 121, 122, 123, 124, 125, 296, 321, 329, 354, 380, 420, 458, 470, 481, 499, 599, 658], "origin": [31, 39, 162, 163, 164, 207, 267, 296, 329, 377, 379, 380, 385, 387, 416, 420, 441, 458, 466, 567, 568, 595, 596, 597, 599, 604, 605, 619, 620, 621, 622, 644, 646, 647, 648, 669], "distanc": [31, 39, 57, 119, 120, 221, 232, 281, 292, 310, 325, 343, 358, 409, 410, 413, 414, 415, 417, 418, 419, 420, 428, 444, 449, 458, 466, 482, 566, 567, 568, 576, 577, 578, 588, 595, 596, 597, 619, 629, 634, 635, 636], "axi": [31, 39, 45, 74, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 245, 246, 247, 248, 250, 252, 259, 260, 261, 262, 264, 266, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 310, 311, 312, 313, 314, 315, 316, 320, 321, 323, 324, 325, 326, 328, 343, 344, 345, 346, 347, 348, 349, 353, 354, 356, 357, 358, 359, 361, 371, 381, 458, 466, 470, 499, 595, 598, 599, 602, 610, 626, 637, 644, 647, 650, 666], "dimension": [31, 39, 162, 164, 416, 432, 441, 453, 458, 466, 619, 644, 647, 648], "space": [31, 45, 74, 123, 223, 283, 312, 345, 382, 420, 430, 431, 441, 444, 458, 470, 499, 595, 598, 616, 647, 660], "along": [31, 163, 166, 246, 249, 250, 251, 252, 263, 264, 265, 266, 458, 566, 567, 568, 577, 578, 589, 591, 597, 598, 599, 604, 647, 654], "three": [31, 164, 167, 204, 381, 432, 441, 453, 458, 598, 607, 644, 647, 648], "repeat": [31, 458], "throughout": [31, 458, 644], "nz": [31, 458], "nx": [31, 458], "ny": [31, 458], "dimens": [31, 162, 371, 417, 418, 420, 424, 425, 431, 441, 442, 444, 447, 449, 453, 458, 565, 589, 595, 598, 599, 604, 620, 645, 647, 648, 660, 664, 666], "transform": [31, 45, 74, 121, 122, 123, 124, 125, 226, 233, 286, 296, 315, 329, 348, 354, 380, 420, 430, 458, 470, 499, 597, 599, 604, 625, 647, 648], "proj": [31, 45, 74, 121, 123, 124, 259, 329, 458, 470, 499, 604], "pyart_aeqd": [31, 45, 74, 121, 123, 124, 458, 470, 499], "nativ": [31, 45, 74, 121, 123, 124, 365, 420, 425, 458, 470, 499, 604], "azimuth": [31, 45, 51, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 207, 208, 221, 223, 226, 228, 232, 233, 234, 250, 252, 262, 264, 266, 267, 268, 281, 283, 286, 288, 292, 293, 296, 297, 310, 312, 315, 320, 321, 325, 326, 329, 330, 343, 345, 348, 353, 354, 358, 359, 377, 381, 418, 425, 449, 455, 456, 458, 470, 476, 480, 482, 492, 499, 520, 566, 567, 568, 574, 576, 577, 592, 598, 599, 604, 605, 639, 641, 645, 660, 666, 669], "equidist": [31, 45, 74, 121, 122, 123, 124, 125, 226, 286, 315, 348, 354, 381, 420, 458, 470, 499, 599], "pyproj": [31, 45, 74, 121, 123, 124, 458, 470, 499, 604, 668], "projparam": [31, 34, 45, 74, 121, 123, 124, 458, 461, 470, 499], "special": [31, 45, 74, 458, 470, 499, 599], "_include_lon_0_lat_0": [31, 45, 74, 458, 470, 499], "remov": [31, 45, 56, 57, 74, 157, 158, 159, 162, 167, 202, 203, 204, 205, 221, 228, 232, 233, 234, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 386, 392, 393, 399, 403, 404, 431, 432, 441, 458, 470, 481, 482, 499, 597, 599, 602, 604, 605, 610, 621, 627, 636, 644, 647, 662, 665, 669], "interpret": [31, 45, 74, 163, 164, 380, 458, 470, 499, 580, 581, 599, 644], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 207, 226, 227, 246, 247, 248, 249, 251, 252, 259, 261, 263, 265, 266, 267, 286, 287, 296, 315, 316, 317, 319, 321, 329, 348, 349, 350, 352, 354, 420, 458, 460, 463, 466, 470, 481, 499, 566, 576, 577, 578, 588, 595, 597, 598, 599, 602, 613, 614, 617, 626, 633, 640, 645, 647, 648, 660, 661, 666, 667], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 207, 226, 227, 246, 247, 248, 249, 250, 251, 259, 261, 263, 264, 265, 267, 286, 287, 296, 315, 316, 317, 319, 321, 329, 348, 349, 350, 352, 354, 420, 458, 460, 463, 466, 470, 481, 499, 566, 576, 577, 578, 588, 595, 597, 598, 599, 602, 613, 614, 617, 626, 633, 640, 645, 647, 648, 660, 661, 666, 667], "ad": [31, 45, 47, 74, 166, 168, 169, 253, 319, 352, 417, 419, 430, 431, 441, 458, 470, 472, 499, 550, 596, 598, 601, 602, 604, 605, 636, 637, 660, 661, 668, 669], "lon_0": [31, 45, 74, 122, 125, 321, 354, 458, 470, 499, 633], "lat_0": [31, 45, 74, 122, 125, 321, 354, 458, 470, 499, 633], "get_projparam": [31, 458], "evalu": [31, 385, 387, 436, 458, 601, 604], "locat": [31, 33, 45, 55, 56, 57, 74, 207, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 245, 246, 248, 250, 252, 259, 260, 262, 264, 266, 267, 281, 282, 283, 286, 287, 288, 289, 290, 292, 293, 296, 310, 311, 312, 315, 316, 318, 320, 321, 322, 323, 325, 326, 329, 343, 344, 345, 348, 349, 351, 353, 354, 355, 356, 358, 359, 373, 374, 376, 382, 409, 416, 419, 420, 458, 460, 470, 480, 481, 482, 499, 546, 560, 566, 576, 577, 578, 595, 596, 597, 599, 601, 604, 605, 631, 633, 645, 654, 655, 656, 658, 664, 668, 669], "up": [31, 45, 74, 132, 134, 142, 149, 154, 158, 159, 177, 179, 187, 194, 199, 417, 418, 422, 425, 432, 435, 438, 439, 450, 458, 470, 499, 565, 596, 597, 601, 602, 603, 604, 607, 644, 647, 662, 666, 670], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 246, 377, 383, 442, 458, 470, 485, 486, 497, 498, 499, 514, 515, 525, 526, 570, 595, 596, 597, 598, 599, 601, 602, 605, 615, 625, 626, 636, 637, 658, 660, 669, 670], "collect": [31, 142, 154, 187, 199, 367, 373, 374, 375, 377, 408, 419, 420, 458, 598, 599, 605, 615, 630, 645, 658, 669, 670, 671], "nradar": [31, 458], "whose": [31, 376, 415, 458, 595], "wa": [31, 56, 57, 142, 163, 164, 187, 221, 228, 232, 233, 234, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 458, 481, 482, 579, 595, 597, 599, 601, 602, 604, 658, 671], "projection_proj": [31, 458], "instanc": [31, 42, 48, 162, 163, 164, 221, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 382, 383, 425, 458, 473, 579, 583, 587, 597, 599, 604], "valueerror": [31, 32, 46, 47, 458, 459, 471, 472, 599], "point_z": [31, 380, 458, 644], "point_x": [31, 380, 458], "point_i": [31, 380, 458], "func": [31, 458, 598, 604], "init_point_x_y_z": [31, 458], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 458, 463, 464, 470, 481, 489, 490, 491, 499, 517, 518, 519, 665], "point_latitud": [31, 380, 458], "point_longitud": [31, 380, 458], "perform": [31, 45, 56, 57, 58, 74, 132, 134, 142, 149, 154, 161, 162, 163, 164, 166, 177, 179, 187, 194, 199, 221, 226, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 286, 288, 291, 292, 293, 310, 315, 320, 321, 324, 325, 326, 329, 343, 348, 353, 354, 357, 358, 359, 373, 376, 381, 417, 418, 441, 447, 458, 470, 481, 482, 483, 499, 592, 598, 599, 609, 610, 611, 613, 621, 622, 626, 658], "invers": [31, 45, 74, 455, 458, 470, 499, 595], "rel": [31, 45, 74, 158, 202, 233, 319, 352, 420, 458, 470, 499, 595, 604, 605, 648, 666, 669], "init_point_longitude_latitud": [31, 458], "point_altitud": [31, 35, 380, 458, 462], "init_point_altitud": [31, 458], "init": [31, 237, 253, 385, 458, 576, 602, 604], "field_dict": [32, 459], "replace_exist": [32, 46, 47, 48, 459, 471, 472, 473, 601, 604, 605, 647, 648, 654, 661, 662, 669], "add": [32, 46, 47, 165, 169, 221, 223, 228, 231, 232, 233, 234, 246, 247, 248, 250, 252, 259, 261, 262, 264, 266, 281, 283, 288, 291, 292, 293, 310, 312, 320, 321, 324, 325, 326, 343, 345, 353, 354, 357, 358, 359, 446, 459, 471, 472, 596, 597, 598, 604, 605, 619, 625, 626, 627, 636, 637, 639, 645, 647, 648, 649, 654, 662, 668, 669, 671], "replac": [32, 46, 47, 48, 132, 134, 142, 149, 154, 163, 164, 177, 179, 187, 194, 199, 459, 471, 472, 473, 594, 602, 604], "overwrit": [32, 459, 574], "alreadi": [32, 46, 47, 459, 471, 472], "level": [33, 39, 41, 42, 45, 62, 74, 158, 159, 241, 242, 243, 244, 248, 250, 252, 254, 255, 256, 257, 262, 264, 266, 373, 374, 375, 381, 382, 444, 453, 455, 460, 466, 470, 487, 499, 575, 595, 597, 598, 604, 605, 636, 637, 640, 644, 646, 655, 658, 664, 666, 669], "height": [33, 39, 41, 42, 158, 159, 202, 248, 262, 321, 354, 417, 418, 420, 423, 431, 432, 441, 442, 450, 453, 455, 456, 460, 466, 587, 595, 598, 599, 601, 604, 605, 625, 634, 644, 645, 650, 665, 669], "determin": [33, 45, 74, 162, 163, 164, 246, 248, 250, 252, 259, 262, 264, 266, 321, 354, 362, 365, 373, 374, 377, 382, 383, 424, 431, 434, 435, 436, 438, 439, 441, 453, 455, 460, 470, 499, 574, 575, 582, 587, 590, 598, 599, 604, 605, 647, 654, 669], "same": [33, 45, 47, 55, 56, 57, 74, 122, 125, 134, 149, 162, 179, 194, 233, 321, 354, 371, 377, 381, 382, 383, 420, 431, 432, 441, 444, 450, 460, 470, 472, 480, 481, 482, 499, 550, 574, 576, 588, 592, 595, 599, 602, 605, 615, 636, 637, 644, 647, 648, 660, 665, 669, 671], "interpol": [33, 57, 120, 123, 221, 228, 232, 233, 234, 246, 250, 252, 262, 264, 266, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 367, 373, 419, 420, 442, 449, 450, 455, 460, 482, 587, 599, 604, 605, 616, 647, 648, 664, 669], "extrapol": [33, 120, 123, 221, 228, 232, 233, 234, 250, 252, 262, 264, 266, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 460, 599], "boundari": [33, 120, 123, 166, 239, 240, 259, 354, 449, 460, 550, 599, 649], "center": [33, 45, 57, 74, 119, 120, 122, 123, 125, 163, 221, 226, 228, 232, 233, 234, 247, 249, 250, 251, 252, 261, 262, 263, 264, 265, 266, 281, 286, 288, 292, 293, 296, 310, 315, 320, 321, 325, 326, 343, 348, 353, 354, 358, 359, 373, 375, 413, 414, 415, 460, 470, 482, 499, 546, 550, 565, 595, 597, 598, 599, 601, 625, 654, 662, 666], "2d": [33, 55, 56, 57, 120, 371, 381, 446, 449, 460, 480, 481, 482, 565, 595, 599, 613, 618, 619, 623, 644, 666, 667], "point_": [36, 37, 463, 464], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 143, 144, 188, 189, 410, 412, 455, 465, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 595, 599, 605, 669], "xarrai": [39, 237, 246, 248, 417, 418, 466, 566, 578, 595, 604, 640, 645, 654, 658, 668], "netcdf4": [40, 374, 379, 380, 467, 595, 596, 604, 634, 658, 660, 668, 671], "arm_time_vari": [40, 379, 380, 467], "arm_alt_lat_lon_vari": [40, 380, 467], "save": [40, 209, 221, 223, 228, 232, 233, 234, 241, 254, 269, 281, 283, 288, 292, 293, 298, 310, 312, 320, 321, 325, 326, 331, 343, 345, 353, 354, 358, 359, 380, 382, 467, 599, 601, 658, 659], "netcdf4_class": [40, 379, 380, 467], "netcdf3_class": [40, 379, 380, 467], "netcdf3_64bit": [40, 379, 380, 467], "base_tim": [40, 379, 380, 467, 598, 645], "time_offset": [40, 379, 380, 467, 598, 645], "alt": [40, 56, 380, 467, 481, 598, 599, 602, 604], "lat": [40, 56, 121, 122, 123, 124, 125, 246, 247, 248, 249, 250, 251, 252, 261, 263, 264, 265, 266, 317, 319, 321, 350, 352, 380, 381, 467, 481, 595, 598, 599, 602, 604, 626, 627, 640, 664], "lon": [40, 56, 121, 122, 123, 124, 125, 246, 247, 248, 249, 250, 251, 252, 261, 263, 264, 265, 266, 317, 319, 321, 350, 352, 380, 381, 467, 481, 595, 598, 599, 602, 604, 627, 640], "speed": [41, 42, 420, 455, 456, 565, 598, 599, 601, 604, 605, 650, 669], "direct": [41, 62, 377, 447, 455, 456, 487, 604, 605, 650, 669], "horizont": [41, 42, 43, 44, 45, 74, 157, 160, 161, 162, 221, 222, 223, 228, 232, 233, 234, 245, 246, 248, 250, 252, 260, 262, 264, 266, 281, 282, 283, 288, 292, 293, 310, 311, 312, 320, 321, 325, 326, 343, 344, 345, 353, 354, 358, 359, 366, 367, 417, 418, 455, 470, 499, 587, 597, 598, 601, 604, 605, 627, 637, 655, 666, 669], "wind": [41, 42, 43, 44, 162, 163, 366, 367, 455, 456, 587, 597, 598, 599, 601, 604, 605, 650, 669], "profil": [41, 162, 366, 367, 442, 448, 449, 450, 451, 566, 587, 604, 605, 611, 613, 643, 644, 651, 667, 669], "1d": [41, 42, 120, 123, 446, 595, 604, 666], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 207, 267, 296, 318, 321, 329, 351, 354, 409, 410, 412, 413, 414, 415, 416, 419, 420, 423, 431, 441, 444, 447, 450, 453, 455, 481, 482, 483, 546, 576, 588, 598, 599, 604, 605, 619, 650, 664, 666, 669], "abov": [41, 42, 45, 47, 74, 129, 130, 145, 157, 158, 159, 162, 165, 166, 167, 168, 169, 174, 175, 190, 202, 203, 204, 205, 226, 227, 286, 287, 315, 316, 348, 349, 362, 420, 423, 430, 431, 441, 455, 470, 472, 499, 566, 574, 575, 577, 578, 595, 596, 597, 598, 604, 605, 607, 613, 619, 635, 637, 643, 644, 650, 651, 654, 658, 660, 662, 667, 669, 671], "sea": [41, 42, 45, 74, 455, 470, 499, 598, 604, 605, 669], "were": [41, 42, 132, 134, 142, 177, 179, 187, 455, 597, 599, 601, 605, 669], "sampl": [41, 42, 455, 456, 457, 551, 553, 554, 575, 595, 597, 598, 602, 604, 605, 615, 616, 625, 646, 649, 650, 658, 669], "per": [41, 42, 43, 44, 58, 162, 420, 455, 483, 547, 548, 549, 605, 669], "second": [41, 42, 43, 44, 47, 58, 119, 162, 377, 385, 409, 449, 455, 472, 483, 574, 584, 585, 595, 598, 601, 605, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 665, 666, 669], "north": [41, 45, 74, 246, 248, 259, 321, 354, 470, 499, 566, 578, 595, 598, 599, 629, 666], "east": [41, 221, 232, 246, 281, 292, 310, 325, 343, 358, 566, 578, 595, 598, 599, 629], "u_wind": [41, 42, 455, 456, 605, 650, 669], "compon": [41, 42, 43, 44, 430, 598, 605, 620, 669], "v_wind": [41, 42, 455, 456, 605, 650, 669], "classmethod": 42, "_rang": [45, 74, 428, 470, 499], "scan_typ": [45, 74, 207, 220, 267, 280, 296, 309, 329, 342, 470, 499, 602, 666], "sweep_numb": [45, 74, 470, 499, 598, 604, 634, 660, 666], "sweep_mod": [45, 74, 368, 470, 499, 598, 604, 660, 666], "fixed_angl": [45, 74, 207, 267, 296, 329, 470, 499, 598, 602, 604, 634, 635, 639, 660, 666], "sweep_start_ray_index": [45, 74, 470, 499, 598, 660, 666], "sweep_end_ray_index": [45, 74, 470, 499, 598, 660, 666], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 207, 221, 223, 228, 232, 233, 234, 250, 252, 262, 264, 266, 267, 281, 283, 288, 292, 293, 296, 310, 312, 320, 321, 325, 326, 329, 343, 345, 353, 354, 358, 359, 377, 417, 449, 470, 477, 482, 493, 499, 521, 568, 574, 582, 595, 598, 599, 601, 604, 619, 620, 646, 660, 666], "altitude_agl": [45, 74, 470, 499, 598, 666], "target_scan_r": [45, 74, 470, 499, 604, 666], "rays_are_index": [45, 74, 470, 499], "ray_angle_r": [45, 74, 470, 499], "scan_rat": [45, 74, 383, 470, 499, 604, 666], "antenna_transit": [45, 56, 57, 74, 142, 154, 187, 199, 221, 228, 232, 233, 234, 267, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 470, 481, 482, 499, 599, 666], "instrument_paramet": [45, 74, 162, 383, 446, 470, 499, 598, 601, 662, 666], "radar_calibr": [45, 74, 470, 499, 666], "rotat": [45, 74, 207, 470, 499], "tilt": [45, 74, 207, 233, 321, 354, 451, 470, 499, 599, 604, 616, 633, 640], "roll": [45, 74, 207, 377, 470, 499, 586, 591], "drift": [45, 74, 207, 470, 499], "pitch": [45, 74, 207, 470, 499], "georefs_appli": [45, 74, 470, 499], "antenna": [45, 56, 57, 74, 119, 120, 142, 154, 187, 199, 202, 205, 221, 228, 232, 233, 234, 267, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 425, 470, 481, 482, 499, 599, 604, 609, 613, 618, 619, 620, 621, 622, 658, 664, 666], "structur": [45, 74, 383, 430, 441, 453, 470, 499, 602, 615, 647, 648, 665], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 127, 159, 163, 164, 167, 172, 202, 203, 204, 205, 234, 293, 326, 359, 381, 415, 419, 420, 430, 431, 441, 447, 470, 475, 476, 477, 479, 480, 481, 482, 483, 499, 579, 597, 598, 599, 604, 605, 609, 612, 613, 615, 654, 658, 662, 665, 666, 667, 669], "global": [45, 74, 470, 499, 595, 620, 666, 668], "4": [45, 74, 119, 120, 368, 371, 416, 422, 430, 450, 470, 499, 595, 596, 597, 598, 603, 605, 611, 615, 616, 620, 623, 625, 628, 629, 634, 635, 636, 637, 639, 640, 644, 647, 648, 650, 654, 655, 658, 665, 669], "repres": [45, 74, 162, 417, 418, 446, 470, 499, 547, 548, 592, 604, 644, 648], "under": [45, 74, 162, 163, 164, 420, 470, 499, 604, 605, 647, 648, 658, 668, 669], "sub": [45, 74, 470, 499, 595, 604], "convent": [45, 74, 162, 470, 499, 595, 598, 599, 615, 658, 666], "meta_group": [45, 74, 470, 499, 666], "scan": [45, 74, 117, 162, 163, 164, 165, 207, 220, 221, 223, 234, 267, 280, 281, 283, 293, 296, 309, 310, 312, 326, 329, 342, 343, 345, 359, 373, 417, 425, 470, 499, 542, 547, 548, 574, 576, 582, 587, 592, 595, 596, 597, 598, 604, 616, 619, 630, 631, 641, 644], "ppi": [45, 74, 163, 164, 165, 166, 220, 224, 228, 280, 284, 288, 309, 313, 320, 321, 342, 346, 353, 354, 417, 418, 449, 470, 499, 547, 548, 552, 555, 558, 567, 568, 574, 595, 596, 599, 604, 613, 618, 623, 624, 627, 628, 640, 642, 653, 655, 657, 658, 666, 667], "rhi": [45, 74, 220, 221, 232, 280, 281, 292, 309, 310, 325, 342, 343, 358, 418, 449, 470, 499, 548, 556, 559, 567, 568, 574, 596, 604, 613, 624, 642, 644, 658, 666, 667], "sector": [45, 74, 470, 499, 595, 604, 666], "multipl": [45, 74, 430, 470, 499, 596, 597, 604, 605, 613, 618, 624, 636, 642, 665, 667, 669, 671], "mode": [45, 62, 74, 364, 470, 487, 499, 595, 598, 604, 605, 644, 666, 668, 669], "ground": [45, 74, 425, 470, 499, 598, 599, 602, 615], "target": [45, 74, 381, 470, 499, 551, 553, 554, 555, 556, 557, 558, 559, 566, 576, 577, 578, 588, 598, 666], "angl": [45, 51, 52, 74, 119, 120, 207, 221, 233, 267, 281, 296, 310, 329, 343, 449, 451, 470, 476, 477, 499, 561, 562, 563, 564, 566, 567, 568, 574, 576, 577, 584, 585, 592, 595, 598, 604, 620, 639, 641, 650, 660, 666], "thr": [45, 74, 470, 499], "index": [45, 60, 74, 89, 167, 204, 234, 248, 250, 252, 262, 264, 266, 293, 326, 359, 381, 409, 425, 451, 470, 485, 499, 514, 595, 597, 598, 599, 601, 604, 659], "rays_per_sweep": [45, 66, 74, 94, 470, 491, 499, 519, 547, 548], "upon": [45, 74, 167, 202, 203, 204, 205, 470, 499, 597, 601, 604], "prior": [45, 47, 74, 166, 168, 169, 221, 228, 231, 232, 233, 234, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 377, 470, 472, 499, 599, 607, 616, 658], "init_rays_per_sweep": [45, 74, 470, 499], "intend": [45, 74, 470, 499], "rate": [45, 74, 422, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 470, 499, 604, 647, 648], "whether": [45, 74, 132, 177, 368, 416, 470, 499, 598, 599, 665], "regular": [45, 74, 382, 470, 499, 599, 602, 625, 644], "angular": [45, 74, 470, 499, 565, 584, 585], "resolut": [45, 74, 221, 223, 224, 228, 229, 232, 233, 234, 259, 281, 283, 284, 288, 289, 292, 293, 310, 312, 313, 320, 321, 322, 325, 326, 343, 345, 346, 353, 354, 355, 358, 359, 373, 420, 430, 431, 441, 447, 453, 470, 499, 550, 597, 598, 599, 602, 616, 630, 633, 654, 655, 662, 664, 665], "express": [45, 74, 470, 499], "360": [45, 74, 165, 166, 322, 355, 470, 499, 574, 604, 650, 660, 666], "represent": [45, 74, 470, 499], "forbidden": [45, 74, 470, 499], "plane": [45, 74, 381, 417, 418, 470, 499, 595, 666], "180": [45, 74, 122, 470, 499, 574, 595, 597, 598, 605, 648, 660, 669], "gate_z": [45, 57, 74, 470, 482, 499], "gate_x": [45, 57, 74, 470, 482, 499], "gate_i": [45, 57, 74, 470, 482, 499], "system": [45, 74, 121, 122, 123, 168, 169, 364, 373, 381, 411, 416, 470, 499, 604, 605, 668, 669], "assum": [45, 74, 119, 120, 162, 165, 444, 447, 449, 450, 470, 499, 574, 597, 601], "earth": [45, 74, 119, 120, 122, 125, 470, 499, 576, 588, 595, 599], "radiu": [45, 74, 119, 120, 122, 125, 413, 414, 415, 416, 419, 420, 431, 441, 453, 470, 499, 576, 588, 647, 664], "model": [45, 74, 119, 120, 163, 374, 380, 430, 470, 499, 598, 649], "init_gate_x_y_z": [45, 74, 470, 499], "gate_latitud": [45, 56, 64, 74, 92, 470, 481, 489, 499, 517, 595], "gate_longitud": [45, 56, 64, 74, 92, 470, 481, 489, 499, 517, 595, 660], "init_gate_longitude_latitud": [45, 74, 470, 499, 660], "gate_altitud": [45, 56, 63, 74, 91, 470, 481, 488, 499, 516, 595], "init_gate_altitud": [45, 74, 470, 499, 660], "actual": [45, 74, 377, 381, 416, 430, 470, 499, 671], "flag": [45, 74, 162, 267, 377, 448, 449, 451, 453, 470, 499, 582, 595, 602, 604, 671], "transit": [45, 56, 57, 74, 142, 154, 167, 187, 199, 203, 204, 221, 228, 232, 233, 234, 267, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 448, 470, 481, 482, 499, 599, 604], "ye": [45, 74, 162, 470, 499], "about": [45, 74, 470, 499, 595, 597, 602, 603, 604], "aircraft": [45, 74, 233, 377, 470, 499, 566], "longitudin": [45, 74, 233, 244, 252, 256, 257, 266, 470, 499], "vertic": [45, 74, 161, 162, 221, 222, 223, 228, 232, 233, 234, 242, 245, 246, 248, 250, 252, 260, 262, 264, 266, 281, 282, 283, 288, 292, 293, 310, 311, 312, 320, 321, 325, 326, 343, 344, 345, 353, 354, 358, 359, 381, 417, 418, 432, 444, 451, 470, 499, 566, 582, 592, 595, 597, 604, 637, 644, 649, 650, 655], "orthogon": [45, 74, 470, 499], "platform": [45, 74, 470, 499, 595, 607], "right": [45, 74, 470, 499, 597, 600, 601, 602, 604, 625, 626, 644, 658], "wing": [45, 74, 470, 499], "down": [45, 74, 470, 499, 593, 597], "track": [45, 74, 470, 499, 595, 599, 604], "compass": [45, 74, 470, 499], "clockwis": [45, 74, 470, 499], "nose": [45, 74, 470, 499, 604], "had": [45, 74, 382, 470, 499, 602, 604, 615, 671], "georefer": [45, 74, 470, 499], "lead": [45, 74, 470, 499, 599, 619], "centric": [45, 74, 470, 499], "avaiabl": [45, 74, 470, 499], "radar_paramet": [45, 74, 470, 499, 598], "subconvent": [45, 74, 470, 499], "calibr": [45, 74, 434, 470, 499, 598], "ngate": [45, 55, 74, 470, 480, 499, 547, 548, 549, 595, 604, 660, 666], "nrai": [45, 55, 74, 428, 470, 480, 499, 549, 577, 604, 660, 666], "nsweep": [45, 74, 470, 499, 547, 548, 620, 634, 635, 650, 666], "loos": [46, 47, 471, 472], "existing_field_nam": [47, 472], "note": [47, 119, 132, 134, 142, 149, 154, 159, 162, 166, 177, 179, 187, 194, 199, 248, 321, 368, 371, 372, 382, 417, 418, 420, 430, 444, 446, 447, 455, 472, 574, 596, 599, 602, 604, 605, 615, 616, 620, 627, 647, 648, 668, 669], "made": [47, 379, 424, 472, 592, 596, 598, 599, 605, 606, 669], "done": [47, 162, 166, 453, 472, 605, 607, 660, 668, 669, 671], "both": [47, 162, 167, 204, 365, 444, 445, 472, 595, 599, 604, 605, 616, 619, 620, 622, 626, 641, 648, 658, 664, 665, 668, 669], "numpi": [47, 134, 149, 179, 194, 472, 595, 597, 598, 599, 601, 602, 604, 605, 607, 610, 619, 621, 625, 628, 633, 636, 637, 639, 644, 645, 647, 648, 649, 650, 658, 660, 661, 662, 664, 665, 666, 668, 669, 671], "see": [47, 120, 127, 162, 172, 220, 234, 246, 249, 251, 259, 263, 265, 280, 293, 309, 321, 326, 342, 354, 359, 371, 379, 380, 420, 430, 431, 441, 444, 453, 472, 595, 597, 599, 601, 602, 604, 605, 615, 616, 625, 644, 647, 648, 658, 660, 662, 664, 665, 669], "how": [47, 377, 379, 380, 472, 595, 596, 597, 598, 599, 601, 602, 604, 606, 615, 616, 625, 626, 627, 644, 658, 661, 664, 665, 671], "reflectivity_copi": [47, 472], "gatefilt": [48, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 202, 203, 204, 205, 221, 228, 231, 232, 233, 234, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 409, 419, 420, 425, 447, 448, 449, 451, 455, 456, 473, 595, 597, 599, 601, 602, 604, 605, 611, 619, 621, 622, 626, 644, 646, 654, 659, 662, 669], "updat": [48, 473, 574, 596, 600, 601, 604, 605, 627, 647, 658, 669], "mask": [48, 132, 134, 138, 142, 149, 153, 154, 162, 163, 164, 165, 167, 177, 179, 183, 187, 194, 198, 199, 202, 203, 204, 205, 221, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 373, 374, 375, 420, 425, 432, 450, 473, 550, 579, 599, 602, 604, 610, 619, 621, 644, 647, 648, 654, 659, 660, 661, 666], "filter": [48, 127, 132, 134, 142, 149, 154, 162, 163, 164, 165, 166, 167, 221, 228, 232, 233, 234, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 409, 419, 420, 424, 447, 448, 449, 473, 595, 597, 599, 601, 602, 604, 611, 619, 621, 622, 626, 644, 646, 654, 662, 665], "equal": [48, 121, 123, 124, 133, 134, 140, 148, 149, 152, 163, 178, 179, 185, 193, 194, 197, 354, 371, 382, 430, 453, 455, 473, 574, 599, 628, 644, 647, 648, 649, 665], "condit": [48, 127, 132, 134, 142, 149, 154, 162, 172, 177, 179, 187, 194, 199, 382, 436, 473, 595, 611, 661, 665], "append": [48, 473, 601, 602, 604, 650], "filtered_": [48, 473], "prefix": [48, 468, 473], "check": [49, 58, 77, 163, 164, 165, 166, 376, 424, 430, 450, 474, 483, 502, 576, 588, 592, 597, 598, 601, 602, 604, 605, 607, 658, 668, 669, 670], "keyerror": [49, 77, 392, 393, 403, 404, 474, 502, 668], "array_lik": [50, 475, 581], "view": [51, 52, 54, 385, 390, 391, 397, 401, 402, 407, 476, 477, 479, 595, 602, 626, 662, 664, 666], "possibl": [51, 52, 54, 377, 476, 477, 479, 575, 599, 601, 602, 604, 608, 625, 644, 647, 648, 662, 664], "underli": [51, 52, 54, 221, 228, 232, 233, 234, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 365, 476, 477, 479, 599, 658], "get_gate_x_y_z": [54, 479, 636, 637], "obtain": [54, 57, 479, 482, 602, 605, 650, 660, 669], "plot": [54, 57, 206, 207, 208, 209, 210, 211, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 451, 456, 479, 482, 595, 596, 604, 610, 611, 615, 616, 619, 620, 621, 622, 642, 643, 644, 645, 647, 648, 651, 653, 654, 657, 658, 660, 661, 662, 664, 665, 667], "correct": [54, 57, 172, 202, 203, 204, 205, 371, 442, 447, 479, 482, 552, 595, 597, 601, 604, 605, 608, 611, 612, 616, 627, 644, 649, 654, 658, 662, 667, 669], "spatial": [54, 57, 162, 479, 482, 595, 664], "context": [54, 57, 479, 482, 597, 645], "request": [54, 123, 373, 419, 420, 445, 479, 599, 604, 605, 606, 607, 658, 669], "area": [55, 221, 223, 228, 232, 233, 234, 235, 281, 283, 288, 292, 293, 294, 310, 312, 320, 321, 325, 326, 327, 343, 345, 353, 354, 358, 359, 360, 430, 449, 453, 480, 579, 595, 597, 599, 601], "squar": [55, 424, 444, 447, 455, 480], "assumpt": [55, 447, 480], "size": [55, 159, 162, 163, 165, 166, 203, 224, 284, 313, 346, 415, 417, 418, 419, 420, 424, 431, 432, 440, 441, 447, 449, 480, 550, 565, 591, 598, 627, 640, 645, 647, 648], "m": [55, 58, 164, 202, 205, 209, 269, 298, 331, 416, 420, 424, 428, 430, 434, 441, 444, 446, 447, 448, 451, 453, 480, 483, 565, 566, 579, 589, 595, 597, 598, 599, 601, 602, 604, 605, 607, 615, 628, 637, 644, 647, 648, 650, 654, 658, 668, 669], "reset_gate_coord": [56, 481], "filter_transit": [56, 57, 221, 228, 232, 233, 234, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 481, 482, 599], "With": [56, 57, 481, 482, 658, 659, 660], "therefor": [56, 57, 447, 481, 482, 595, 662, 666], "more": [56, 57, 62, 163, 166, 381, 416, 419, 420, 425, 430, 431, 441, 453, 481, 482, 487, 567, 568, 595, 596, 597, 598, 599, 600, 602, 604, 605, 619, 625, 636, 637, 644, 658, 662, 666, 669], "effici": [56, 57, 419, 430, 481, 482, 658, 662], "than": [56, 57, 163, 169, 221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 430, 431, 432, 441, 447, 481, 482, 574, 579, 597, 598, 599, 602, 644, 647, 671], "through": [56, 57, 246, 446, 481, 482, 598, 599, 601, 603, 605, 619, 625, 669], "No": [56, 57, 164, 221, 228, 232, 233, 234, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 381, 420, 481, 482, 599], "get_field": [57, 482, 636, 637], "check_uniform": [58, 483], "lookuperror": [58, 483], "except": [58, 381, 398, 483, 599, 604, 664], "skip": [58, 163, 164, 376, 424, 483, 597, 604, 605, 669], "nyquist_veloc": [58, 163, 164, 383, 483, 598, 601, 662, 666], "slice": [59, 71, 88, 99, 249, 250, 251, 252, 263, 264, 265, 266, 484, 496, 513, 524, 640, 664, 666], "_io": [62, 487], "textiowrapp": [62, 487], "encod": [62, 382, 487, 604], "utf": [62, 487], "compact": [62, 487], "c": [62, 119, 122, 125, 157, 159, 161, 162, 164, 259, 354, 430, 434, 436, 443, 446, 447, 448, 449, 451, 456, 487, 552, 595, 599, 601, 602, 604, 605, 619, 648, 658, 661, 664, 668, 669, 671], "f": [62, 259, 354, 396, 406, 487, 595, 596, 597, 598, 599, 601, 602, 616, 620, 625, 634, 635, 639, 644, 647, 648, 658, 671], "minim": [62, 447, 453, 487], "everyth": [62, 487, 599, 605, 616, 669], "screen": [62, 487], "gate_": [65, 93, 490, 518], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 396, 406, 447, 449, 492, 493, 494, 495, 496, 497, 498, 520, 521, 522, 523, 524, 525, 526, 601, 666], "over": [69, 72, 73, 97, 100, 101, 162, 163, 202, 221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 430, 431, 441, 494, 497, 498, 522, 525, 526, 575, 595, 599, 601, 604, 619, 647, 648, 650, 658, 661, 666], "npulses_max": [74, 499, 549], "velocity_bin": [74, 499], "simpl": [117, 409, 542, 604, 661, 662], "vpt": [117, 212, 220, 234, 272, 280, 293, 301, 309, 326, 334, 342, 359, 542, 582, 598, 604], "mean": [117, 119, 455, 542, 550, 561, 562, 575, 580, 584, 585, 595, 598, 604, 605, 608, 615, 616, 644, 665, 666, 669], "kilomet": [119, 417, 431, 441], "equat": [119, 447, 575, 595, 604], "28": [119, 595, 597, 599, 604, 647, 648, 650], "b": [119, 362, 422, 430, 431, 441, 448, 456, 595, 596, 597, 598, 602, 604, 605, 648, 658, 669], "doviak": 119, "zrnic": 119, "sqrt": [119, 122, 595, 636, 637, 650], "r": [119, 121, 122, 123, 124, 125, 162, 164, 168, 169, 213, 226, 227, 247, 261, 273, 286, 287, 302, 315, 316, 317, 318, 335, 348, 349, 350, 351, 422, 430, 431, 432, 435, 438, 439, 440, 441, 453, 455, 575, 579, 595, 605, 615, 628, 636, 637, 644, 647, 648, 669], "sin": [119, 122, 125, 595, 597], "theta_": 119, "arcsin": [119, 122, 597], "frac": 119, "theta_a": 119, "arc": [119, 576], "length": [119, 168, 169, 447, 597, 599, 604], "effect": [119, 132, 134, 142, 149, 154, 177, 179, 187, 194, 199, 233, 419, 420, 597, 620, 636, 644], "taken": [119, 168, 169, 221, 281, 310, 343, 552, 567, 568, 575, 580, 581, 629], "6371": [119, 122, 125, 576, 588, 597], "km": [119, 122, 125, 207, 224, 229, 230, 236, 267, 284, 289, 290, 295, 296, 313, 322, 323, 328, 329, 346, 354, 355, 356, 361, 418, 428, 430, 431, 441, 447, 550, 576, 588, 596, 597, 598, 599, 602, 620, 629, 634, 635, 637, 644, 645, 655, 664], "doppler": [119, 162, 163, 164, 455, 575, 598, 605, 609, 612, 613, 629, 639, 644, 658, 666, 667, 669], "edit": [119, 603, 604, 605, 669], "1993": 119, "21": [119, 440, 595, 597, 601], "vector": [120, 123, 221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 428, 444, 595, 597, 599, 604], "util": [120, 159, 162, 163, 233, 434, 457, 598, 602, 604, 605, 616, 628, 641, 645, 647, 648, 658, 669], "antenna_to_cartesian": [120, 604], "detail": [120, 127, 162, 172, 246, 259, 321, 354, 379, 380, 416, 420, 431, 441, 595, 597, 599, 601, 606, 607, 644, 647, 648, 658, 666], "cartograph": [121, 122, 123, 124, 125, 329], "differ": [121, 123, 124, 162, 362, 409, 417, 418, 430, 431, 435, 441, 447, 596, 597, 598, 599, 602, 604, 605, 613, 615, 619, 644, 647, 648, 653, 664, 668, 669], "pass": [121, 123, 124, 162, 163, 164, 220, 221, 228, 232, 233, 234, 246, 248, 250, 252, 259, 262, 264, 266, 280, 281, 288, 292, 293, 309, 310, 317, 318, 319, 320, 321, 322, 325, 326, 342, 343, 350, 351, 352, 353, 354, 355, 358, 359, 364, 365, 373, 375, 416, 420, 447, 597, 599, 604, 607, 615, 616, 661, 664], "desir": [121, 123, 124, 132, 134, 142, 149, 154, 177, 179, 187, 194, 199, 385, 431, 441, 455, 545, 589, 597, 598, 645, 665], "6370997": [122, 125], "rho": 122, "arctan2": [122, 650], "correspond": [122, 125, 143, 144, 188, 189, 220, 248, 262, 280, 309, 342, 366, 392, 403, 417, 420, 566, 575, 577, 597, 599, 605, 615, 628, 662, 666, 669], "typic": [122, 125, 127, 132, 134, 142, 149, 154, 163, 172, 177, 179, 187, 194, 199, 381, 416, 419, 620, 671], "snyder": [122, 125], "manual": [122, 125, 602, 604, 607, 658], "geolog": [122, 125], "survei": [122, 125], "profession": [122, 125], "paper": [122, 125, 658], "1395": [122, 125, 604], "1987": [122, 125], "pp": [122, 125], "191": [122, 125], "202": [122, 125], "find": [123, 163, 166, 409, 416, 419, 420, 441, 442, 595, 599, 601, 602, 604, 616, 648, 658, 671], "arcco": 125, "exclude_bas": [127, 172], "boolean": [127, 134, 143, 144, 149, 172, 179, 188, 189, 194, 362, 431, 441, 451, 604, 665], "variou": [127, 165, 167, 172, 202, 203, 204, 205, 566, 578, 597, 604, 613, 643, 658], "exclude_below": [127, 172, 595, 597, 601, 602, 619, 646, 654, 665], "suggest": [127, 172, 596, 604], "begin": [127, 162, 163, 164, 168, 169, 172, 209, 211, 228, 232, 269, 271, 288, 292, 298, 300, 320, 325, 331, 333, 353, 358, 371, 372, 375, 377, 604], "import": [127, 172, 451, 455, 456, 468, 596, 602, 604, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 660, 661, 662, 664, 665, 666, 668], "radar_fil": [127, 172, 611, 625, 627], "nc": [127, 172, 595, 596, 598, 602, 604, 610, 619, 620, 622, 625, 626, 627, 631, 633, 634, 635, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 660, 661, 665], "10": [127, 137, 159, 165, 168, 169, 172, 182, 416, 420, 431, 432, 436, 437, 441, 446, 448, 449, 566, 579, 595, 597, 598, 599, 601, 602, 605, 611, 616, 619, 620, 621, 625, 628, 629, 631, 633, 636, 637, 640, 644, 647, 648, 650, 654, 658, 660, 661, 662, 664, 665, 666, 669], "normalized_coherent_pow": [127, 172, 595, 665], "75": [127, 172, 235, 294, 327, 360, 381, 431, 441, 446, 595, 601, 619, 636, 644, 647, 660, 664, 665], "exclude_mask": [129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 142, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 174, 175, 177, 178, 179, 180, 181, 182, 185, 186, 187, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 621], "op": [129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 598], "inclus": [129, 130, 132, 135, 141, 145, 147, 150, 155, 174, 175, 177, 180, 186, 190, 192, 195, 200, 416, 420, 546, 604, 625], "toa": [130, 175, 419, 420, 423, 450], "below": [132, 147, 162, 165, 167, 168, 169, 177, 192, 202, 203, 204, 205, 221, 228, 231, 232, 233, 234, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 419, 420, 430, 431, 435, 438, 439, 441, 447, 574, 575, 595, 596, 597, 598, 599, 625, 644, 647, 660, 662, 665, 670], "compar": [132, 162, 177, 425, 565, 605, 613, 618, 623, 625, 644, 647, 648, 667, 669], "against": [132, 162, 177, 606, 607, 636], "mark": [132, 142, 143, 144, 154, 162, 177, 187, 188, 189, 199, 596], "exclus": [132, 177, 620], "oper": [132, 134, 142, 149, 154, 177, 179, 187, 194, 199, 377, 416, 420, 436, 440, 441, 449, 453, 595, 598, 599, 605, 647, 648, 668, 669], "merg": [132, 134, 142, 149, 154, 163, 177, 179, 187, 194, 199, 367, 574, 605, 607, 669], "AND": [132, 134, 142, 149, 154, 177, 179, 187, 194, 199], "OR": [132, 134, 142, 149, 154, 177, 179, 187, 194, 199, 595], "gener": [132, 134, 142, 149, 154, 177, 179, 187, 194, 199, 208, 209, 210, 211, 212, 221, 223, 228, 231, 232, 233, 234, 241, 242, 243, 244, 246, 248, 250, 252, 254, 255, 256, 257, 262, 264, 266, 268, 269, 270, 271, 272, 281, 283, 288, 291, 292, 293, 297, 298, 299, 300, 301, 310, 312, 320, 321, 324, 325, 326, 330, 331, 332, 333, 334, 343, 345, 353, 354, 357, 358, 359, 380, 383, 398, 409, 419, 420, 442, 447, 597, 599, 600, 602, 604, 607, 610, 611, 613, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658], "meet": [132, 134, 142, 149, 154, 177, 179, 187, 194, 199, 379, 658], "result": [132, 134, 142, 149, 154, 162, 163, 164, 177, 179, 187, 194, 199, 221, 228, 231, 232, 233, 234, 250, 252, 262, 264, 266, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 364, 380, 385, 417, 418, 420, 425, 451, 456, 586, 597, 598, 599, 605, 616, 620, 644, 648, 649, 658, 664, 669], "previous": [132, 134, 142, 149, 154, 177, 179, 187, 194, 199, 615, 644, 647], "becaus": [132, 134, 142, 177, 179, 187, 447, 647, 671], "invalid": [132, 134, 136, 142, 167, 177, 179, 181, 187, 202, 203, 204, 205, 595, 602], "shape": [134, 149, 179, 194, 371, 450, 595, 598, 599, 601, 602, 604, 605, 647, 660, 664, 665, 666, 669], "v1": [135, 141, 150, 155, 180, 186, 195, 200, 595, 596, 607, 668], "v2": [135, 141, 150, 155, 180, 186, 195, 200, 605, 669], "insid": [135, 150, 180, 195, 661], "interv": [135, 141, 150, 155, 163, 167, 180, 186, 195, 200, 204, 565, 580, 581, 595, 602, 604], "occur": [136, 156, 166, 181, 201, 373, 374, 595, 662, 666], "nan": [136, 156, 162, 167, 181, 201, 204, 449, 595, 598, 604, 645], "inf": [136, 156, 167, 181, 201, 204, 604], "n_gate": [137, 182], "try": [137, 182, 424, 447, 597, 602, 603, 664, 665], "ring": [137, 182, 229, 230, 289, 290, 322, 323, 355, 356, 597, 620, 621, 633], "artifact": [137, 163, 182, 604, 662, 664], "some": [137, 182, 296, 329, 393, 404, 449, 468, 596, 597, 598, 599, 601, 602, 603, 604, 616, 625, 626, 644, 645, 647, 658, 662, 664, 668], "outsid": [141, 155, 167, 186, 200, 204, 228, 231, 233, 234, 246, 248, 250, 252, 262, 264, 266, 288, 291, 293, 320, 321, 324, 326, 353, 354, 357, 359, 430, 599, 604, 605, 644, 669], "trans_valu": [142, 154, 187, 199], "construct": [142, 154, 187, 199, 420, 598], "element": [143, 144, 162, 163, 164, 165, 166, 188, 189, 383, 417, 418, 419, 420, 424, 450, 565, 580, 581, 584, 585, 597, 598, 599], "NOT": [143, 144, 188, 189], "gate_includ": [143, 188, 665], "lost": [143, 144, 188, 189, 449, 592, 595, 664], "again": [143, 144, 188, 189, 599, 607, 616, 627, 648, 668], "gate_exclud": [144, 189, 665], "z_offset": 157, "doc": [157, 158, 159, 169, 595, 599, 604, 605, 607, 610, 616, 658, 668, 669, 671], "15": [157, 447, 579, 595, 596, 597, 598, 602, 610, 611, 615, 616, 617, 625, 628, 634, 635, 636, 637, 640, 641, 644, 645, 648, 650, 662, 666, 667], "fzl": [157, 158, 159, 168, 169], "4000": [157, 168, 169, 664], "rhv_min": 157, "ncp_min": 157, "a_coef": [157, 159], "06": [157, 595, 597, 601, 623, 667], "beta": [157, 159, 434, 435, 436, 437, 438, 439], "refl_field": [157, 158, 159, 167, 168, 169, 203, 204, 420, 423, 429, 430, 431, 435, 437, 438, 439, 440, 446, 453, 610, 647, 649], "ncp_field": [157, 167, 168, 169, 204, 610], "rhv_field": [157, 167, 168, 169, 203, 204, 446, 610, 649], "spec_at_field": [157, 158, 159], "corr_refl_field": [157, 158, 159], "attenu": [157, 158, 159, 434, 435, 438, 604, 609, 612, 613, 649, 658, 667], "phi": [157, 159, 168, 604, 610], "copol_coeff": [157, 552, 610, 645, 646, 660], "norm_coherent_pow": [157, 552, 610, 660], "proc_dp_phase_shift": [157, 610, 645, 660], "reflectivity_horizont": [157, 162, 552, 596, 610, 619, 625, 627, 631, 633, 634, 635, 639, 641, 644, 645, 646, 647, 648, 655, 660, 661], "supress": [157, 237, 248, 253, 321, 354, 599, 604], "freez": [157, 158, 159], "layer": [157, 158, 159, 202, 205, 381, 435, 447, 451, 550], "combin": [157, 158, 159, 583, 595, 597, 598, 605, 607, 669], "minimum": [157, 167, 168, 169, 203, 204, 205, 221, 223, 228, 231, 232, 233, 234, 281, 283, 288, 291, 292, 293, 310, 312, 320, 321, 324, 325, 326, 343, 345, 353, 354, 357, 358, 359, 381, 416, 420, 430, 431, 432, 441, 546, 550, 575, 595, 597, 599, 602, 604, 644, 647, 664], "normal": [157, 167, 168, 169, 204, 221, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 432, 599, 636, 644], "coher": [157, 167, 168, 169, 204], "power": [157, 159, 167, 168, 169, 204, 434, 435, 436, 437, 438, 439, 595, 598], "zdr_field": [157, 158, 159, 161, 203, 426, 446, 649], "spec_at": [157, 158, 159, 610, 649], "cor_z": [157, 158, 159, 610, 649], "gu": [157, 159], "et": [157, 159, 161, 430, 431, 432, 436, 440, 441, 446, 447, 453, 647, 648], "al": [157, 159, 161, 430, 431, 432, 436, 440, 441, 446, 447, 448, 453, 647, 648], "heavi": [157, 159, 579, 597, 628, 636, 648], "rain": [157, 159, 430, 434, 435, 436, 437, 440, 441, 453, 604, 628, 636, 647, 648, 649], "jamc": [157, 159, 449, 566], "2011": [157, 159, 645], "50": [157, 159, 565, 595, 596, 597, 598, 601, 622, 640, 644, 645, 649, 664, 666], "39": [157, 159, 595, 597, 645], "58": [157, 159, 430, 598, 644, 645], "pia_coef": 158, "pida_coef": 158, "temp_field": [158, 159, 205, 446, 649], "iso0_field": [158, 159, 202], "pia_field": [158, 159], "spec_diff_at_field": [158, 159], "pida_field": [158, 159], "corr_zdr_field": [158, 159], "temp_ref": [158, 159, 649], "linear": [158, 168, 169, 246, 373, 431, 441, 449, 575, 587, 598, 599, 604, 647, 648, 658], "dependec": 158, "comput": [158, 159, 161, 203, 426, 427, 428, 429, 431, 441, 447, 448, 449, 561, 562, 563, 564, 565, 580, 581, 584, 585, 591, 595, 598, 604, 644, 649, 650, 658], "either": [158, 159, 162, 163, 164, 221, 222, 223, 228, 231, 232, 233, 234, 245, 246, 248, 250, 252, 260, 262, 264, 266, 281, 282, 283, 288, 291, 292, 293, 310, 311, 312, 320, 324, 325, 326, 343, 344, 345, 353, 357, 358, 359, 367, 396, 406, 435, 438, 439, 605, 644, 647, 668, 669], "frequenc": [158, 159, 383, 432, 434, 435, 436, 438, 439, 443, 446, 447, 448, 449, 598, 644], "refl": [158, 159, 634], "integr": [158, 159, 595, 598], "pida_coeff": 158, "0c": [158, 159], "isotherm": [158, 159], "height_over_iso0": [158, 159, 665], "fixed_fzl": [158, 159], "pia_dict": [158, 159], "spec_diff_at": [158, 159, 649], "pida_dict": [158, 159], "cor_zdr": [158, 159, 649], "smooth_window_len": 159, "d": [159, 164, 209, 269, 298, 331, 385, 386, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 430, 449, 456, 566, 595, 597, 598, 599, 602, 605, 645, 658, 669], "forumul": 159, "smooth": [159, 166, 447, 576, 588, 599, 636, 637, 664], "window": [159, 162, 168, 169, 203, 424, 449, 455, 565, 574, 586, 591, 604, 605, 658, 669], "expon": [159, 168, 169, 422, 434, 435, 436, 437, 438, 439], "law": [159, 434, 435, 436, 437, 438, 439], "ryzhkov": [159, 434, 451, 566], "potenti": [159, 434, 595, 602], "rainfal": [159, 430, 434, 435, 436, 437, 438, 439, 440, 447, 449], "estim": [159, 202, 205, 223, 283, 312, 345, 417, 428, 434, 435, 436, 437, 438, 439, 440, 447, 448, 449, 451, 566, 575, 598, 604, 647, 648], "mitig": [159, 434], "partial": [159, 434, 604], "beam": [159, 415, 419, 420, 434, 598], "blockag": [159, 434], "network": [159, 163, 375, 434, 597], "jaot": [159, 161], "2014": [159, 434, 448, 451, 658], "31": [159, 373, 434, 595, 597, 598, 601, 616, 645], "599": [159, 434], "619": [159, 434, 604], "bia": [160, 604], "magnitud": [160, 447, 650, 666], "corrected_field": 160, "urhohv_field": 161, "snr_field": [161, 423, 429], "nh_field": 161, "nv_field": 161, "rhohv_field": [161, 426, 427], "nois": [161, 423, 428, 429, 575, 598, 602, 604, 644, 662], "eq": [161, 634], "6": [161, 203, 430, 435, 595, 597, 598, 602, 616, 619, 620, 625, 626, 630, 633, 644, 645, 646, 649, 650, 660, 662, 665, 666], "2006": [161, 616], "subtract": [161, 431, 441], "uncorrect": [161, 595, 654], "snr": [161, 423, 429, 604], "channel": [161, 381, 595, 598, 604, 607], "meteo": 161, "franc": 161, "23": [161, 595, 597, 598, 650], "1340": 161, "1356": [161, 604], "last_radar": 162, "sonde_profil": 162, "filt": 162, "rsl_badval": 162, "131072": 162, "keep_origin": [162, 163, 164], "set_limit": [162, 163, 164, 596, 628, 629, 630, 632, 634, 635, 636, 637, 639, 644], "vel_field": [162, 163, 164, 424, 456, 644, 654, 662], "corr_vel_field": [162, 163, 164], "last_vel_field": 162, "max_shear": 162, "05": [162, 419, 420, 595, 597, 640, 644, 645, 667], "sign": [162, 604, 636, 637, 644], "dealia": [162, 163, 164, 433, 601, 604, 609, 612, 613, 644, 653, 657, 662, 667], "4dd": [162, 604], "univers": [162, 378, 440, 595, 604, 658], "washington": 162, "previou": [162, 321, 354, 599, 602, 604, 607], "sound": [162, 604], "For": [162, 249, 251, 263, 265, 371, 381, 419, 446, 447, 595, 596, 598, 599, 604, 605, 608, 615, 619, 644, 649, 658, 665, 666, 669, 671], "best": [162, 597, 644], "argument": [162, 163, 164, 221, 228, 232, 233, 234, 246, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 281, 288, 292, 293, 310, 317, 318, 319, 320, 321, 322, 325, 326, 343, 350, 351, 352, 353, 354, 355, 358, 359, 373, 375, 383, 385, 416, 420, 448, 449, 604, 605, 669], "_fourdd_interfac": 162, "fourdd_dealia": 162, "fine": 162, "tune": [162, 647, 648], "behavior": [162, 321, 354, 371, 385, 599, 604, 608], "fourdd": 162, "document": [162, 249, 251, 259, 263, 265, 321, 354, 374, 379, 380, 587, 593, 596, 598, 599, 600, 602, 605, 606, 658, 664, 669], "dealias": [162, 163, 164, 433, 604, 605, 611, 615, 654, 658, 659, 669], "mean_doppler_veloc": [162, 598, 602, 639, 644, 645, 654, 660], "successfulli": 162, "greatli": 162, "improv": [162, 448, 449, 579, 599, 607, 628, 648], "final": [162, 448, 449, 595, 596, 602, 603, 607, 620, 644, 647], "horizontalwindprofil": [162, 366, 367, 456, 587, 604, 605, 669], "sond": [162, 163, 366, 367, 442, 604, 611], "moment_based_gate_filt": [162, 163, 164, 420, 597], "bergen": 162, "alber": 162, "bad": [162, 447, 448, 449, 453], "rsl": [162, 365, 376, 377, 604, 658, 668], "procedur": [162, 163, 164], "fail": [162, 163, 164, 371, 381, 604, 605, 669], "otherwis": [162, 392, 403, 435, 438, 439, 444, 607], "maxshear": 162, "maximum": [162, 163, 167, 168, 169, 202, 203, 204, 221, 223, 228, 231, 232, 233, 234, 281, 283, 288, 291, 292, 293, 310, 312, 320, 321, 324, 325, 326, 343, 345, 353, 354, 357, 358, 359, 362, 381, 416, 417, 418, 420, 425, 431, 435, 438, 439, 441, 447, 546, 550, 565, 574, 582, 595, 597, 599, 644, 646, 647, 654, 666], "shear": 162, "incorpor": [162, 441, 647], "match": [162, 165, 166, 207, 267, 296, 329, 377, 409, 602, 604, 619, 627, 648], "toward": 162, "neg": [162, 221, 232, 281, 292, 310, 325, 343, 358, 447, 574, 595, 604, 625], "compthresh": 162, "fraction": [162, 417, 418, 432, 597, 644, 647, 666], "threshold": [162, 165, 166, 167, 202, 203, 204, 205, 362, 430, 431, 435, 438, 439, 441, 575, 579, 595, 597, 601, 644, 647, 654, 662, 665], "continu": [162, 164, 598, 604, 605, 669], "unfold": [162, 163, 168, 169, 447], "compthresh2": 162, "thresh": [162, 435, 438, 439], "adjac": [162, 599], "count": [162, 432, 619, 662, 666], "assign": [162, 597, 604, 647], "question": [162, 363, 420, 599, 658], "ckval": 162, "absolut": [162, 565, 648], "stdthresh": 162, "deviat": [162, 550, 563, 564, 581, 595, 662], "portion": [162, 601, 664], "epsilon": 162, "miss": [162, 446, 447, 448, 449, 453, 595, 604, 616], "maxcount": 162, "allow": [162, 165, 166, 220, 280, 309, 342, 409, 430, 566, 574, 596, 599, 602, 604, 608, 619, 666, 671], "fold": [162, 163, 615], "pass2": 162, "retain": [162, 163, 164, 167, 202, 203, 204, 205, 592], "rm": 162, "what": [162, 171, 420, 595, 598, 599, 601, 602, 603, 604, 605, 615, 625, 654, 660, 662, 665, 669, 671], "left": [162, 319, 352, 597, 599, 601, 602, 625, 627, 644], "proxim": 162, "side": [162, 602, 644], "doubl": [162, 381, 647], "captur": [162, 430, 654], "suffici": [162, 644], "good": [162, 163, 595, 596, 607], "mingood": 162, "ba_mincount": 162, "neighbor": [162, 373, 420, 595, 604, 620, 664], "ba_edgecount": 162, "usuccess": 162, "radialvelvolum": 162, "lastvelvolum": 162, "unfoldedvolum": 162, "sondvolum": 162, "vr_corr": 162, "due": [162, 425, 430, 595, 597, 599, 604, 619, 662, 668, 671], "call": [162, 165, 220, 221, 223, 228, 232, 233, 234, 248, 280, 281, 283, 288, 292, 293, 309, 310, 312, 320, 321, 325, 326, 342, 343, 345, 353, 354, 358, 359, 376, 381, 385, 566, 578, 596, 598, 599, 605, 607, 662, 666, 669, 671], "999": [162, 385, 595, 604], "long": [162, 436, 604, 648, 661, 666], "n": [162, 424, 430, 446, 565, 595, 597, 598, 599, 601, 602, 615, 619, 620, 628, 639, 641, 645, 647, 648, 652, 658, 671], "jame": 162, "houz": [162, 362, 431, 432, 441, 453, 644, 647, 648], "jr": [162, 431, 441, 453, 647, 648], "four": [162, 373, 374, 376], "dealis": 162, "scheme": [162, 362, 416, 431, 441, 447, 596, 647], "2001": 162, "18": [162, 593, 595, 597, 626, 637, 644, 657], "1674": 162, "ref_vel_field": 163, "interval_split": 163, "interval_limit": 163, "skip_between_rai": 163, "100": [163, 165, 167, 204, 224, 229, 246, 284, 289, 313, 346, 383, 420, 456, 595, 597, 598, 599, 601, 622, 626, 636, 637, 644, 650], "skip_along_rai": 163, "nyquist_vel": [163, 164, 601, 644, 654, 662], "check_nyquist_uniform": [163, 164, 424], "rays_wrap_around": [163, 164], "region": [163, 169, 259, 321, 354, 425, 430, 579, 595, 597, 598, 599, 601, 602, 604, 605, 609, 612, 613, 615, 628, 647, 648, 654, 665, 667, 669], "similar": [163, 598, 599, 619, 664], "pair": [163, 246, 373, 385, 393, 398, 404, 597, 660], "accomplish": [163, 377, 613, 653], "problem": [163, 168, 169, 296, 329, 420, 616], "dynam": [163, 595], "reduct": 163, "anchor": 163, "onc": [163, 599, 605, 607, 647, 668, 669, 671], "complet": [163, 604], "simul": [163, 587, 604], "simulated_vel_from_profil": [163, 605, 669], "segment": [163, 317, 318, 350, 351, 604], "split": [163, 579, 595], "larger": [163, 599, 647], "longer": [163, 574, 597, 604, 605, 658, 668, 669], "process": [163, 168, 169, 595, 598, 601, 602, 604, 605, 607, 615, 648, 658, 669], "better": [163, 224, 229, 284, 289, 313, 322, 346, 355, 602, 604, 648, 658, 662], "seem": 163, "compromis": 163, "free": [163, 600, 601, 658], "cover": [163, 595], "entir": [163, 164, 221, 228, 232, 233, 234, 250, 252, 262, 264, 266, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 420, 589, 595, 598, 599, 602, 644], "join": [163, 468, 604], "gap": [163, 165, 166, 664], "connect": [163, 164], "disabl": [163, 164, 167, 202, 203, 204, 205], "across": [163, 597, 604, 644, 646], "so": [163, 221, 232, 281, 292, 310, 325, 343, 358, 377, 420, 595, 598, 599, 601, 602, 604, 605, 615, 616, 644, 647, 658, 669, 671], "averag": [163, 362, 431, 441, 575, 580, 601, 647, 648, 650], "individu": [163, 164, 420, 602], "attempt": [163, 164, 379, 380, 604], "de": [163, 164, 352, 558, 559], "alias": [163, 164, 558, 559, 601, 604, 662, 666], "corr_vel": [163, 164], "unwrap_unit": 164, "skip_check": [164, 604], "multi": [164, 604], "unwrap": [164, 168, 169, 604], "independ": 164, "often": [164, 425], "give": [164, 381, 599, 602, 606, 607, 654, 655, 656, 658, 662, 665], "superior": 164, "lower": [164, 246, 248, 250, 252, 262, 264, 266, 430, 598, 602, 620, 621, 622], "contamin": [164, 453], "clutter": [164, 602, 662, 665], "poor": 164, "verif": [164, 566, 604], "appropi": [164, 220, 280, 309, 342], "offer": [164, 596], "extrem": [164, 644], "miguel": 164, "arevallilo": 164, "herraez": 164, "david": [164, 599], "burton": 164, "michael": [164, 599, 602], "lalor": 164, "munther": 164, "gdeisat": 164, "fast": 164, "two": [164, 383, 416, 431, 441, 444, 445, 453, 550, 583, 584, 585, 597, 598, 599, 601, 602, 604, 607, 613, 618, 623, 624, 626, 641, 642, 661, 664, 667], "sort": [164, 597, 601, 603, 604], "reliabl": 164, "follow": [164, 167, 203, 204, 379, 380, 382, 383, 396, 406, 419, 420, 430, 446, 447, 595, 597, 598, 599, 601, 602, 605, 607, 608, 615, 645, 658, 668, 669], "noncontinu": 164, "optic": 164, "vol": 164, "41": [164, 597, 645, 650, 664], "2002": 164, "7437": 164, "abdul": 164, "rahman": 164, "h": [164, 209, 259, 269, 298, 331, 354, 451, 575, 595, 597, 598, 619, 627, 644], "osten": 164, "gorecki": 164, "e": [164, 166, 168, 169, 221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 366, 381, 396, 406, 430, 431, 432, 441, 447, 453, 579, 595, 596, 598, 599, 605, 615, 628, 644, 647, 648, 668, 669], "l": [164, 168, 169, 225, 229, 230, 259, 285, 289, 290, 314, 323, 347, 354, 356, 427, 441, 579, 595, 599, 628, 644, 648], "novak": 164, "ed": 164, "metrologi": 164, "2005": [164, 431, 441, 647, 648], "32": [164, 430, 550, 595, 604, 625, 629, 630, 631, 641, 645, 648, 650, 666], "40": [164, 259, 430, 595, 598, 602, 611, 620, 622, 627, 631, 633, 636, 644, 647, 648, 654], "intern": [164, 599], "societi": [164, 422, 425, 436], "photon": 164, "label_dict": [165, 166], "delta": [165, 166, 448], "despeckl": [165, 604, 644], "identifi": [165, 166, 362, 431, 441, 575, 595, 599, 601, 628, 647, 648, 665], "small": [165, 166, 430, 431, 441, 453, 604, 619, 620, 636], "investig": [165, 166, 451, 615], "scipi": [165, 166, 447, 587, 595, 604, 605, 636, 637, 658, 668, 669, 671], "core": [165, 166, 362, 381, 409, 420, 430, 431, 441, 448, 449, 566, 578, 598, 602, 604, 605, 647, 669], "queri": [165, 166, 420, 595, 599, 602], "speckl": [165, 647], "find_object": 165, "tupl": [165, 166, 221, 223, 226, 227, 228, 231, 232, 233, 234, 236, 246, 248, 250, 252, 262, 264, 266, 281, 283, 286, 287, 288, 291, 292, 293, 295, 310, 312, 315, 316, 320, 321, 324, 325, 326, 328, 343, 345, 348, 349, 353, 354, 357, 358, 359, 361, 393, 404, 416, 417, 418, 420, 424, 444, 445, 546, 565, 599, 604], "contigu": [165, 166], "perman": 165, "deg": [165, 166, 202, 205, 447, 589, 595, 650], "label": [166, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 231, 232, 233, 234, 245, 246, 248, 250, 252, 260, 262, 264, 266, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 286, 287, 288, 291, 292, 293, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 315, 316, 319, 320, 321, 324, 325, 326, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 348, 349, 352, 353, 354, 357, 358, 359, 592, 595, 597, 599, 601, 602, 604, 619, 626, 627, 636, 637, 641, 649], "period": [166, 574, 595, 598, 602, 662], "account": [166, 604], "g": [166, 381, 416, 441, 447, 449, 456], "examin": [166, 364, 377, 380, 598, 601, 605, 658, 669], "box": [166, 381, 649], "alwai": [166, 365, 377, 430, 431, 441, 447, 599, 604, 608, 658], "readi": 166, "min_ncp": [167, 168, 204], "min_rhv": [167, 168, 203, 204], "min_refl": [167, 204], "20": [167, 203, 204, 451, 566, 593, 595, 596, 597, 598, 599, 601, 602, 615, 616, 619, 620, 626, 627, 628, 631, 633, 634, 635, 636, 637, 639, 644, 646, 647, 648, 655, 656, 660, 664, 666], "max_refl": [167, 204], "undesir": [167, 202, 203, 204, 205, 420], "cross": [167, 203, 204, 221, 224, 246, 281, 284, 310, 313, 343, 346, 418, 567, 568, 595, 598, 601, 604, 613, 624, 633, 642, 644, 647, 666, 667], "ratio": [167, 203, 204, 235, 294, 327, 360, 423, 426, 595, 598, 601, 602, 666], "min_rhi": [167, 204], "criteria": [167, 202, 203, 204, 205, 420, 447, 453, 602], "built": [167, 202, 203, 204, 205, 419, 420], "lowest": [167, 202, 203, 204, 205, 425, 450, 601, 615, 619, 645, 647, 648], "greatest": [167, 204], "self_const": [168, 169], "60000": [168, 169, 622, 626, 664], "low_z": [168, 169], "high_z": [168, 169], "53": [168, 169, 595, 597, 601, 650], "min_phidp": [168, 169], "01": [168, 169, 319, 352, 447, 595, 597, 598, 601, 602, 612, 623, 625, 642, 651, 667], "sys_phas": 168, "overide_sys_phas": 168, "nowrap": [168, 169], "really_verbos": [168, 169], "lp_solver": [168, 169], "pyglpk": [168, 169, 604, 658, 668], "kdp_field": [168, 169, 435, 436, 438, 439, 446, 447, 448, 449, 649], "unf_field": [168, 169], "window_len": [168, 169], "proc": [168, 169, 447, 604], "coef": [168, 169, 604], "914": [168, 169, 604], "lp": [168, 169, 604, 658], "consist": [168, 169, 604, 644, 664], "factor": [168, 169, 383, 425, 434, 435, 436, 437, 438, 439, 565, 595, 596, 598, 604, 627, 635, 641, 664], "low": [168, 169, 373, 447, 620, 628], "high": [168, 169, 221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 430, 447, 598, 599, 601, 620, 649], "copolar": [168, 169, 446, 646], "automat": [168, 377, 382, 383, 420, 424, 453, 597, 599, 602, 604, 605, 607, 631, 658, 669], "lpx": [168, 169], "messag": [168, 169, 237, 253, 373, 596, 604, 607, 616], "suppress": [168, 169, 447], "cvxopt": [168, 169, 604, 658, 668], "cylp": [168, 169, 604, 658, 668, 671], "cylp_mp": [168, 169], "modul": [168, 169, 552, 593, 599, 604, 605, 615, 616, 658, 661, 662, 664, 665, 666, 668, 669], "solv": [168, 169, 603, 604], "horizon": [168, 169, 446], "sobel": [168, 169], "worker": [168, 169], "link": [168, 169, 597, 598, 601, 602, 604], "1z": [168, 169], "reproc_phas": [168, 169], "sob_kdp": [168, 169], "recalcul": [168, 169, 660], "giangrand": [168, 169, 658], "mcgraw": [168, 169], "lei": [168, 169], "applic": [168, 169, 221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 381, 431, 441, 586, 599, 601, 605, 669], "program": [168, 169, 604, 605, 658, 669], "atmo": [168, 169, 430, 440, 446, 451, 566, 579, 605, 628, 648, 669], "tech": [168, 169, 446, 579, 628, 648], "2013": [168, 169, 448, 451, 666], "30": [168, 169, 430, 431, 441, 595, 597, 598, 599, 602, 619, 620, 627, 631, 633, 644, 647, 648, 662], "1716": [168, 169], "system_phas": 169, "ncpt": 169, "first_gate_sysp": 169, "carri": 169, "smaller": [169, 354, 420, 595, 598, 599, 605, 647, 669], "off": [169, 221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 445, 451, 595, 599, 625, 647, 648], "custom": [170, 220, 221, 222, 223, 228, 232, 233, 234, 245, 246, 248, 250, 252, 260, 262, 264, 266, 280, 281, 282, 283, 288, 292, 293, 309, 310, 311, 312, 320, 321, 325, 326, 342, 343, 344, 345, 353, 354, 358, 359, 419, 430, 599, 664], "max_h_iso0": 202, "thick": [202, 205], "400": [202, 205, 604, 660], "beamwidth": [202, 205], "primarili": [202, 205], "melt": [202, 205, 435, 447, 451, 579, 628, 647, 648, 649], "db": [202, 205, 423, 602, 636, 666], "phi_field": 203, "textzdr_field": 203, "textrhv_field": 203, "textphi_field": 203, "textrefl_field": 203, "wind_siz": [203, 424, 591, 662], "7": [203, 371, 455, 591, 595, 597, 598, 599, 601, 605, 607, 616, 626, 628, 640, 644, 651, 665, 666, 669], "max_textphi": 203, "max_textrhv": 203, "max_textzdr": 203, "85": [203, 595, 599, 650], "max_textrefl": 203, "move": [203, 575, 597, 601, 604, 619], "highest": 203, "min_temp": 205, "There": [206, 597, 599, 601, 607, 625, 668, 671], "colorblind": [206, 596, 601, 625], "friendli": [206, 596, 601, 604, 625], "revers": [206, 221, 232, 281, 292, 310, 325, 343, 358, 377, 447, 604], "_r": 206, "matplotlib": [206, 221, 223, 226, 227, 228, 232, 233, 234, 246, 247, 248, 250, 252, 261, 262, 264, 266, 281, 283, 286, 287, 288, 292, 293, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 381, 595, 596, 597, 598, 601, 602, 604, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 658, 660, 661, 662, 664, 665, 668, 671], "pyart_colormap": 206, "bluebrown10": [206, 625], "bluebrown11": [206, 625], "brbu10": [206, 625], "brbu12": [206, 625], "bu10": [206, 625], "bu7": [206, 625], "budor12": [206, 625], "budor18": [206, 625], "budrd12": [206, 625], "budrd18": [206, 625], "bugr14": [206, 625], "bugy8": [206, 625], "buor10": [206, 625], "buor12": [206, 625], "buor8": [206, 625], "buorr14": [206, 625], "carbone11": [206, 625], "carbone17": [206, 625], "carbone42": [206, 625], "cat12": [206, 625], "ewilson17": [206, 625], "grmg16": [206, 625], "gray5": [206, 625], "gray9": [206, 625], "nwsref": [206, 625], "nwsvel": [206, 625], "nws_spw": [206, 625], "pd17": [206, 625], "rrate11": [206, 625], "rdylbu11b": [206, 625], "refdiff": [206, 625], "scook18": [206, 625], "stepseq25": [206, 625], "symgray12": [206, 625], "theodore16": [206, 625], "wild25": [206, 625], "langrainbow12": [206, 625], "homeyerrainbow": [206, 604, 625], "balanc": [206, 604, 625], "chasespectr": [206, 625], "spectralextend": [206, 625], "displai": [207, 221, 223, 228, 232, 233, 234, 236, 267, 281, 283, 288, 292, 293, 295, 296, 310, 312, 320, 321, 325, 326, 328, 329, 343, 345, 353, 354, 358, 359, 361, 381, 425, 455, 456, 596, 597, 598, 599, 601, 602, 604, 605, 610, 611, 615, 616, 620, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 660, 661, 662, 664, 665, 669], "airborn": [207, 604], "plot_var": [207, 267, 296, 329], "order": [207, 267, 296, 329, 362, 377, 382, 383, 409, 431, 441, 447, 565, 595, 602, 604, 605, 610, 647, 648, 658, 669], "cb": [207, 267, 296, 329, 627, 648], "colorbar": [207, 221, 222, 223, 228, 231, 232, 233, 234, 245, 246, 248, 250, 252, 253, 260, 262, 264, 266, 267, 281, 282, 283, 288, 291, 292, 293, 296, 310, 311, 312, 320, 321, 324, 325, 326, 329, 343, 344, 345, 353, 354, 357, 358, 359, 595, 597, 598, 599, 604, 613, 619, 624, 625, 641, 642, 644, 648, 667], "loc": [207, 267, 296, 329, 595, 597, 601, 602, 626], "titl": [208, 210, 211, 212, 221, 223, 228, 231, 232, 233, 234, 242, 243, 244, 246, 248, 250, 252, 255, 256, 257, 262, 264, 266, 268, 270, 271, 272, 281, 283, 288, 291, 292, 293, 297, 299, 300, 301, 310, 312, 320, 321, 324, 325, 326, 330, 332, 333, 334, 343, 345, 353, 354, 357, 358, 359, 596, 597, 598, 599, 601, 603, 604, 610, 611, 619, 627, 629, 630, 632, 634, 635, 639, 666], "ext": [209, 241, 254, 269, 298, 331], "png": [209, 241, 254, 269, 298, 331, 596, 597, 599, 601], "datetime_format": [209, 211, 269, 271, 298, 300, 331, 333], "use_sweep_tim": [209, 211, 269, 271, 298, 300, 331, 333], "form": [209, 223, 241, 254, 269, 283, 298, 312, 331, 345, 595, 599, 604], "radar_name_field_sweep_tim": [209, 269, 298, 331], "datetim": [209, 211, 228, 232, 234, 269, 271, 288, 292, 293, 298, 300, 320, 325, 326, 331, 333, 353, 358, 359, 366, 367, 383, 569, 570, 571, 572, 573, 597, 601, 604], "strftime": [209, 211, 228, 232, 269, 271, 288, 292, 298, 300, 320, 325, 331, 333, 353, 358, 597, 598], "suitabl": [209, 241, 254, 269, 298, 331, 430, 599], "xaxi": [213, 216, 273, 276, 302, 305, 335, 338, 627], "static": [214, 215, 224, 225, 229, 235, 236, 274, 275, 284, 285, 289, 294, 295, 303, 304, 313, 314, 327, 328, 336, 337, 346, 347, 360, 361, 596], "yaxi": [214, 215, 217, 218, 219, 274, 275, 277, 278, 279, 303, 304, 306, 307, 308, 336, 337, 339, 340, 341], "keyword": [220, 280, 309, 321, 342, 354, 373, 375, 595, 599, 604, 661, 664], "plot_ppi": [220, 280, 309, 342, 604, 611, 649, 654, 656, 660], "plot_sweep_grid": [220, 604], "target_azimuth": [221, 281, 310, 343, 567], "mask_tupl": [221, 228, 231, 232, 233, 234, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 599], "norm": [221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 447, 599, 604, 627, 649], "cmap": [221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 381, 595, 596, 597, 598, 599, 601, 602, 619, 625, 626, 627, 628, 632, 635, 637, 639, 640, 644, 646, 647, 648, 654, 655, 656, 661, 662], "mask_outsid": [221, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 596, 599, 604, 634, 635, 644], "title_flag": [221, 223, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 291, 292, 293, 310, 312, 320, 321, 324, 325, 326, 343, 345, 353, 354, 357, 358, 359, 599, 639], "axislabel": [221, 223, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 291, 292, 293, 310, 312, 320, 324, 325, 326, 343, 345, 353, 357, 358, 359, 596, 629, 634, 635], "axislabels_flag": [221, 223, 228, 231, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 291, 292, 293, 310, 312, 320, 324, 325, 326, 343, 345, 353, 357, 358, 359, 604, 647, 648], "colorbar_flag": [221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 597, 599], "colorbar_label": [221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 596, 599, 601, 610, 611, 615, 629, 630, 634, 635, 636, 637, 641, 654], "colorbar_ori": [221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 601, 604], "reverse_xaxi": [221, 232, 281, 292, 310, 325, 343, 358], "fig": [221, 222, 223, 228, 231, 232, 233, 234, 245, 246, 248, 250, 252, 260, 262, 264, 266, 281, 282, 283, 288, 291, 292, 293, 310, 311, 312, 320, 321, 324, 325, 326, 343, 344, 345, 353, 354, 357, 358, 359, 595, 596, 597, 598, 599, 601, 602, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 644, 646, 648, 649, 650, 654, 662, 664, 665], "tick": [221, 222, 223, 228, 232, 233, 234, 245, 246, 248, 250, 252, 260, 262, 264, 266, 281, 282, 283, 288, 292, 293, 310, 311, 312, 320, 321, 325, 326, 343, 344, 345, 353, 354, 358, 359, 599, 604, 625, 627, 647, 648, 649], "ticklab": [221, 222, 223, 228, 232, 233, 234, 245, 246, 248, 250, 252, 260, 262, 264, 266, 281, 282, 283, 288, 292, 293, 310, 311, 312, 320, 321, 325, 326, 343, 344, 345, 353, 354, 358, 359, 599, 604, 647, 648, 649], "raster": [221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 381, 599, 604], "pseudo": [221, 281, 310, 343, 604], "associ": [221, 281, 310, 343, 398, 430, 595, 607, 644], "pcolormesh": [221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 595, 604, 619, 636, 644, 647, 648], "integ": [221, 281, 310, 343, 383, 424, 444, 445], "ncp": [221, 228, 231, 232, 233, 234, 281, 288, 291, 292, 293, 310, 320, 321, 324, 325, 326, 343, 353, 354, 357, 358, 359, 599], "lumin": [221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 599], "scale": [221, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 382, 383, 419, 420, 427, 430, 447, 448, 595, 598, 599, 628], "west": [221, 232, 281, 292, 310, 325, 343, 358, 595, 599, 629], "leav": [221, 223, 228, 232, 233, 234, 246, 248, 250, 252, 262, 264, 266, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 597, 599], "orient": [221, 222, 223, 228, 232, 233, 234, 245, 246, 248, 250, 252, 260, 262, 264, 266, 281, 282, 283, 288, 292, 293, 310, 311, 312, 320, 321, 325, 326, 343, 344, 345, 353, 354, 358, 359, 597, 599, 600, 649, 650], "treat": [221, 228, 232, 233, 234, 250, 252, 262, 264, 266, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 599], "themselv": [221, 228, 232, 233, 234, 250, 252, 262, 264, 266, 281, 288, 292, 293, 310, 320, 321, 325, 326, 343, 353, 354, 358, 359, 599], "figur": [221, 222, 223, 228, 231, 232, 233, 234, 245, 246, 248, 250, 252, 260, 262, 264, 266, 281, 282, 283, 288, 291, 292, 293, 310, 311, 312, 320, 321, 324, 325, 326, 343, 344, 345, 353, 354, 357, 358, 359, 596, 597, 598, 599, 601, 602, 603, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 646, 647, 648, 654, 661, 662, 664, 665], "render": [221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 598, 599], "rather": [221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 599], "larg": [221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 447, 453, 599, 601, 604], "Be": [221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 599, 607], "sure": [221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 598, 599, 603, 604, 607, 619, 627, 647, 668, 671], "dpi": [221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 597, 599, 601], "pdf": [221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 599], "ep": [221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 599], "svg": [221, 223, 228, 232, 233, 234, 281, 283, 288, 292, 293, 310, 312, 320, 321, 325, 326, 343, 345, 353, 354, 358, 359, 599], "mappabl": [222, 245, 253, 260, 282, 311, 344], "cax": [222, 245, 260, 282, 311, 344, 649], "imag": [222, 245, 260, 282, 311, 344, 430, 445, 565, 579, 595, 596, 598, 599, 604, 613, 624, 642, 645, 647, 648, 667], "contourset": [222, 245, 253, 260, 282, 311, 344], "etc": [222, 245, 248, 253, 260, 282, 311, 321, 344, 354, 380, 441, 597, 599, 604, 644], "onto": [222, 245, 260, 262, 282, 311, 321, 344, 354, 409, 416, 420, 450, 599, 602], "drawn": [222, 245, 260, 282, 311, 344, 599], "target_rang": [223, 283, 312, 345], "delta_x": [223, 283, 312, 345], "delta_i": [223, 283, 312, 345], "az_limit": [223, 283, 312, 345], "el_limit": [223, 283, 312, 345], "corner": [223, 283, 312, 319, 345, 352, 599, 600, 604], "reflector": [223, 283, 312, 345, 604], "griddata": [223, 283, 312, 345], "min": [223, 283, 312, 345, 595, 599, 650], "max": [223, 283, 312, 345, 381, 595, 599, 604, 615, 619, 620, 625, 626, 631, 639, 650, 654, 655, 656], "npt": [224, 229, 284, 289, 313, 322, 346, 355], "hair": [224, 284, 313, 346, 633], "higher": [224, 229, 284, 289, 313, 322, 346, 355, 420, 598, 602, 644, 662, 664], "col": [225, 229, 230, 285, 289, 290, 314, 323, 347, 356, 598, 620], "line": [225, 231, 247, 248, 259, 261, 285, 291, 314, 317, 318, 321, 322, 324, 347, 350, 351, 354, 355, 357, 381, 447, 596, 597, 598, 599, 604, 605, 607, 613, 624, 626, 642, 644, 645, 667, 668, 669, 671], "color": [225, 226, 227, 229, 230, 247, 285, 286, 287, 289, 290, 314, 315, 316, 318, 321, 322, 323, 347, 348, 349, 354, 356, 381, 596, 597, 598, 599, 601, 602, 626, 627, 628, 636, 637, 644, 645, 647, 648, 649], "linestyl": [225, 229, 230, 247, 285, 289, 290, 314, 323, 347, 356, 597, 599, 601, 626, 627, 637], "symbol": [226, 227, 286, 287, 315, 316, 319, 348, 349, 352], "text_color": [226, 227, 286, 287, 315, 316, 348, 349], "text": [226, 227, 286, 287, 315, 316, 319, 348, 349, 352, 468, 597, 603, 604, 607, 625, 634, 650, 658, 662], "just": [226, 227, 286, 287, 315, 316, 348, 349, 371, 574, 602, 604, 605, 625, 628, 660, 666, 669, 671], "marker": [226, 227, 231, 247, 261, 286, 287, 291, 315, 316, 324, 348, 349, 357, 595, 597], "title_datetime_format": [228, 232, 288, 292, 320, 325, 353, 358], "title_use_sweep_tim": [228, 232, 288, 292, 320, 325, 353, 358], "range_ring_location_km": [229, 289, 322, 355], "lw": [229, 230, 289, 290, 323, 356, 599, 601, 644], "range_r": [230, 290, 323, 356], "seri": [230, 290, 323, 356, 595, 598], "draw": [230, 248, 259, 290, 321, 323, 354, 356, 597, 599], "format_str": [231, 291, 324, 357], "ray_min": [231, 291, 324, 357], "ray_max": [231, 291, 324, 357], "style": [231, 247, 261, 291, 317, 318, 322, 324, 350, 351, 355, 357, 381, 604], "ignoretilt": 233, "antenna_to_cartesian_track_rel": 233, "slant": [233, 417], "ncar": 233, "soloii": 233, "time_axis_flag": [234, 293, 326, 359, 598], "date_time_form": [234, 293, 326, 359], "tz": [234, 293, 326, 359, 597], "zone": [234, 293, 326, 359], "info": [234, 293, 321, 326, 354, 359, 599, 604, 649, 666], "aspect_ratio": [235, 294, 327, 360], "aspect": [235, 294, 327, 360, 625], "xlim": [236, 295, 328, 361, 595, 596, 599, 601, 602, 630, 632, 636, 637, 664], "ylim": [236, 295, 328, 361, 595, 596, 598, 599, 601, 602, 630, 632, 634, 635, 636, 637, 639, 641, 644], "cartopi": [237, 238, 239, 240, 248, 296, 321, 595, 597, 599, 601, 602, 604, 605, 613, 615, 616, 619, 620, 624, 626, 627, 640, 642, 645, 647, 648, 654, 658, 661, 662, 664, 665, 667, 668, 669, 671], "coastlin": [238, 248, 321, 354, 595, 599], "polit": 239, "state": [240, 448, 597, 599, 601, 604], "grid_name_field_level_tim": [241, 254], "latitudin": [243, 250, 264], "step": [246, 381, 596, 598, 602, 607, 615, 636, 637, 647, 671], "interp_typ": 246, "x_axi": [246, 626], "metpi": [246, 597, 599, 601, 604], "design": [246, 579, 595, 605, 636, 647, 648, 658, 669], "geodes": 246, "nearest": [246, 373, 417, 420, 442, 567, 568, 587, 595, 599, 604, 664], "dataarrai": 246, "interp": [246, 449], "ex": [246, 449, 597, 601, 602, 603, 625], "upper": [246, 248, 250, 252, 262, 264, 266, 597, 601, 602, 626], "colormesh": [246, 248, 250, 252, 262, 264, 266], "64": [246, 248, 250, 252, 262, 264, 266, 596, 625, 630, 631, 632, 636, 638, 640, 641, 645, 665, 668], "linewidth": [247, 261, 597, 599, 601, 627, 636, 637], "crosshair": [247, 261, 599], "lat_lin": [248, 259, 321, 354, 597, 599, 619, 633, 645], "lon_lin": [248, 259, 321, 354, 597, 599, 619, 633, 645], "embellish": [248, 321, 354, 597, 627], "add_grid_lin": [248, 321, 597], "reason": [248, 259, 599], "america": [248, 259, 321, 354, 599], "cr": [248, 296, 321, 595, 597, 599, 601, 602, 615, 616, 619, 620, 626, 627, 633, 640, 645, 647, 648, 649, 654, 661, 662, 665], "subsequ": [248, 321, 599], "geoax": [248, 321, 599, 661, 664], "platecarre": [248, 321, 595, 597, 599, 601, 602, 615, 619, 626, 627, 640, 645, 647, 648, 654, 662, 665], "shapefil": [248, 321, 354, 599], "certain": [248, 321, 363, 445, 579, 599, 604, 647, 648, 665], "plot_latitudinal_level": [249, 263], "y_index": [250, 264], "basemap": [250, 252, 253, 258, 259, 262, 264, 266, 329, 350, 351, 352, 354, 355, 604, 658, 668], "plot_longitudinal_level": [251, 265], "x_index": [252, 266], "top": [253, 420, 450, 595, 597, 600, 604, 605, 625, 644, 645, 664, 669], "veric": 255, "area_thresh": [259, 354], "10000": [259, 354, 456, 620, 626, 647, 648, 664], "auto_rang": 259, "min_lon": [259, 321, 354, 597, 599, 619, 633, 665], "92": [259, 634, 645], "max_lon": [259, 321, 354, 597, 599, 619, 633, 665], "86": [259, 599], "min_lat": [259, 321, 354, 597, 599, 619, 633, 665], "max_lat": [259, 321, 354, 597, 599, 619, 633, 665], "44": [259, 431, 441, 595, 597, 647, 648, 668], "databas": [259, 354, 601], "merc": [259, 354], "mercat": [259, 620], "line_styl": [261, 317, 318, 322, 350, 351, 355, 633], "plot_rhi": [280, 309, 342, 595], "plot_vpt": [280, 309, 342, 598], "grid_project": [296, 419, 420, 599], "progress": [296, 329], "correctli": [296, 329, 604], "github": [296, 329, 597, 600, 604, 637, 658, 668, 671], "tracker": [296, 329, 605, 658, 669], "azimuthalequidist": 296, "line_lon": [317, 350], "line_lat": [317, 350], "compat": [317, 318, 319, 322, 350, 351, 352, 355, 378, 597, 604, 608, 671], "line_x": [318, 351], "line_i": [318, 351], "ro": [319, 352], "label_text": [319, 352], "label_offset": [319, 352], "bottom": [319, 352, 597, 599, 625, 627], "110m": [321, 599], "shapefile_kwarg": [321, 599], "alpha": [321, 354, 434, 435, 436, 437, 438, 439, 597, 601, 627, 636, 644], "edgecolor": [321, 354, 597, 601, 636], "face": [321, 354, 599], "reson": [321, 354, 599], "lambertconform": [321, 599, 616, 633, 661], "domain": [321, 354, 595, 599, 619], "neither": [321, 354, 385, 599], "extend": [321, 354, 377, 599], "word": [321, 599], "10m": [321, 597, 599, 602, 616, 633], "50m": [321, 599, 654, 662, 665], "naturalearthfeatur": [321, 599], "tranpar": [321, 354, 599], "overplot": [321, 354, 599], "pixel": [321, 354, 444, 445, 550, 595, 599], "lcc": 354, "cylindr": 354, "mill": 354, "exhibit": 354, "distort": 354, "aea": 354, "laea": 354, "conform": [354, 599, 658, 660], "tmerc": 354, "stere": 354, "aeqd": 354, "cass": 354, "even": [354, 430, 449, 601, 604, 636, 644, 658, 664, 671], "cyl": [354, 604], "cannot": [354, 365, 597, 599], "lake": [354, 601], "esri": 354, "background": [354, 362, 431, 441, 453, 599, 603, 633, 640, 647, 648], "untest": 354, "always_core_thr": [362, 431, 441, 647, 648], "use_cosin": [362, 431, 441, 647, 648], "max_diff": [362, 431, 441, 647, 648], "zero_diff_cos_v": [362, 431, 441, 647, 648], "use_addit": [362, 431, 441, 647, 648], "scalar_diff": [362, 431, 441, 647, 648], "convect": [362, 430, 431, 441, 453, 595, 604, 613, 643, 651, 667], "stratiform": [362, 430, 431, 441, 453, 604, 613, 643, 651, 667], "classif": [362, 430, 431, 435, 441, 446, 453, 604, 613, 643, 651, 667], "cosin": [362, 431, 441, 647, 648], "scalar": [362, 431, 441, 597, 599, 604, 647], "classifi": [362, 430, 431, 441, 446, 604, 647, 648, 649], "eqn": [362, 431, 441], "b1": [362, 431, 441, 602], "yuter": [362, 431, 432, 441, 453, 579, 628, 644, 647, 648], "1997": [362, 431, 441, 647, 648], "zero": [362, 379, 431, 441, 445, 447, 587, 604, 644, 647, 648, 661, 665], "multipli": [362, 431, 441, 598, 647, 660], "most": [363, 371, 597, 598, 599, 604, 625, 644, 648, 662, 664, 671], "storage_opt": [364, 373, 375], "anon": [364, 373, 375, 595, 597, 601], "open": [364, 373, 375, 468, 595, 598, 599, 601, 603, 604, 605, 630, 658, 660, 661, 662, 664, 665, 666, 669, 671], "binari": [364, 441, 595, 607], "transpar": [364, 597, 599, 604, 636], "decompress": [364, 604], "gzip": [364, 371, 372], "bzip2": [364, 604], "close": [364, 441, 447, 596, 597, 601, 602, 604], "compress": [364, 371, 372, 599, 604], "backend": [364, 373], "googl": [364, 373, 604, 605, 669], "cloud": [364, 373, 430, 447, 597, 598, 605, 607, 613, 614, 617, 658, 667, 669, 671], "storag": [364, 373, 545], "amazon": [364, 373, 595, 597, 599, 601, 615, 616], "web": [364, 373, 381, 595, 599, 601, 602, 615, 616], "servic": [364, 373, 595, 597, 599, 601, 602, 607, 615, 616, 625], "s3": [364, 373, 597, 601, 615, 616, 628, 647, 648], "file_lik": 364, "use_rsl": 365, "read_": 365, "trmm": [365, 377, 604, 658, 668], "librari": [365, 374, 377, 380, 381, 595, 597, 598, 599, 601, 604, 605, 606, 658, 660, 661, 662, 664, 665, 666, 668, 669], "choos": [365, 599, 613, 624, 642, 647, 648, 667, 671], "Not": [365, 372], "typeerror": [365, 604], "launch_datetim": 366, "date": [366, 367, 593, 597, 599, 602, 603, 604, 615, 616], "radiosond": 366, "launch": 366, "record": [366, 601, 602, 666], "target_datetim": 367, "closest": [367, 409], "profile_datetim": 367, "use_arm_scan_nam": 368, "scan_nam": [368, 595, 598, 604], "use_file_field_attribut": 369, "csu": [369, 604], "chill": 369, "chl": [369, 604], "field_file_nam": 369, "long_nam": [369, 446, 595, 598, 647, 648, 661, 666], "zlib": [371, 372], "read_mdv": [371, 596, 611, 621, 632, 636, 637, 638], "interchang": 371, "vlevel": 371, "proj_polar_radar": 371, "9": [371, 437, 446, 575, 595, 597, 598, 599, 601, 603, 616, 621, 626, 628, 637, 645, 646, 647, 648, 654, 658, 660, 665, 666], "proj_rhi_radar": 371, "13": [371, 575, 595, 598, 601, 616, 639, 640, 642, 644, 658, 665, 666, 667], "vlevel_typ": 371, "vert_type_z": 371, "vert_type_elev": 371, "vert_type_az": 371, "17": [371, 597, 598, 634, 639, 642], "vert_type_pressur": 371, "vert_type_theta": 371, "unknown": [371, 604], "station": [373, 374, 599, 616], "linear_interp": 373, "nexrad": [373, 374, 375, 376, 595, 604, 613, 614, 617, 624, 628, 642, 647, 648, 658, 666, 667], "archiv": [373, 597, 599, 601, 602, 629, 658], "host": [373, 375, 597, 607], "noaa": [373, 375, 377, 595, 597, 599, 601, 615, 616, 628, 647, 648], "nation": [373, 375, 595, 597, 599, 601, 615, 625], "climat": [373, 375, 598, 599, 601, 604, 605, 658, 660, 661, 662, 664, 665, 666, 669], "ucar": [373, 374, 595], "thredd": [373, 374, 380], "server": [373, 374], "letter": [373, 374, 376], "icao": [373, 374, 604], "older": [373, 374, 604, 605, 613, 614, 617, 658, 667, 669], "mix": [373, 430, 579, 628, 647, 648], "constant": [373, 413, 419, 420, 444, 447, 595, 598, 604, 616], "fsspec": [373, 375, 601, 604], "cut": [373, 374, 375, 445], "www": [373, 374, 375, 444, 597, 601, 605, 669], "ncdc": [373, 375], "gov": [373, 375, 595, 596, 597, 601, 602, 610, 611, 615, 616, 619, 621, 622, 625, 626, 627, 629, 630, 631, 632, 634, 636, 637, 638, 639, 641, 645, 646, 654, 655, 656], "edu": [373, 374, 444, 595, 628, 644, 647, 648], "catalog": [373, 374, 595], "html": [373, 374, 444, 597, 601, 604, 605, 658, 668, 669], "common": [374, 598, 604, 620, 658, 668], "cdm": [374, 380], "url": [374, 597, 599, 602, 616], "java": [374, 380], "tool": [374, 380, 595, 598, 602, 658, 668], "opendap": 374, "accept": [374, 448, 449, 599, 602, 604, 605, 669], "compil": [374, 448, 604, 658, 668], "unidata": [374, 595, 615], "htm": 374, "product": [375, 377, 425, 456, 595, 599, 604], "nw": [375, 601], "wsr": 375, "88d": 375, "iii": 375, "distribut": [375, 431, 432, 440, 441, 455, 550, 561, 562, 563, 564, 580, 581, 604, 605, 644, 647, 648, 658, 669], "roc": 375, "wsr88d": [375, 376], "level_iii": 375, "level3info": 375, "asp": 375, "radar_format": 376, "callid": 376, "skip_range_check": 376, "rsl_radar": 376, "id": [376, 381, 595, 602, 604], "verifi": [376, 582, 592], "ioerror": 376, "time_ord": [377, 604], "full_xhdr": 377, "noaa_hh_hdr": 377, "ignore_xhdr": 377, "ignore_sweep_start_m": 377, "sigmet": [377, 604, 658], "iri": [377, 604, 658, 668], "sequenti": [377, 625], "re": [377, 430, 597, 605, 669], "manner": 377, "determind": 377, "maintain": [377, 416, 604], "yet": [377, 615, 620], "warn": [377, 380, 446, 595, 597, 598, 599, 601, 602, 604, 610, 616, 619, 664], "reverse_and_rol": 377, "strictli": 377, "increas": [377, 420, 447, 450, 595, 599, 605, 625, 644, 664, 669], "becom": [377, 647, 661, 664], "thisopt": 377, "strict": 377, "header": [377, 604], "decod": [377, 604], "hurrican": [377, 599, 647, 648], "hunter": 377, "millisecond": 377, "precis": [377, 430], "explic": 377, "read_rsl": [377, 668], "error": [377, 381, 448, 449, 595, 597, 599, 603, 604, 620, 668], "uf": [378, 383, 604, 658], "introduc": [378, 449], "implement": [378, 385, 398, 419, 436, 444, 598, 599, 604, 605, 610, 648, 669], "time_refer": [379, 660], "compliant": 379, "mani": [379, 604, 605, 658, 664, 669, 671], "outlin": [379, 447, 575], "_zlib": [379, 380], "_deflatelevel": [379, 380], "_shuffl": [379, 380], "_fletcher32": [379, 380], "_contingu": [379, 380], "_chunksiz": [379, 380], "_endian": [379, 380], "_least_significant_digit": [379, 380], "_fillvalu": [379, 380, 604, 661, 666], "write_proj_coord_si": 380, "proj_coord_si": 380, "write_point_x_y_z": 380, "write_point_lon_lat_alt": 380, "projectioncoordinatesystem": 380, "toolsui": 380, "written": [380, 382, 383, 604, 607, 658], "appropri": [380, 575, 599, 608], "understood": 380, "rgb": 381, "viridi": [381, 647, 648], "color_level": 381, "warp": 381, "sld": 381, "use_doublequot": 381, "geotiff": [381, 604, 658], "wgs84": 381, "sphere": [381, 576, 588], "latter": [381, 599], "usabl": [381, 595], "byte": [381, 604], "former": 381, "gi": 381, "while": [381, 599, 602, 620, 658, 662, 671], "show": [381, 595, 596, 597, 599, 601, 602, 603, 604, 605, 610, 611, 615, 616, 619, 620, 621, 622, 625, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 647, 648, 654, 660, 662, 664, 665, 666, 669], "lack": [381, 396, 406], "composit": [381, 425, 595, 598, 604, 613, 643, 651, 667], "gdal": [381, 604, 658], "via": [381, 417, 418, 597, 599, 607], "conda": [381, 601, 604, 605, 658, 668, 669, 671], "rbg": 381, "tabl": [381, 595], "column": [381, 566, 577, 578, 595, 597, 598, 599, 604, 613, 643, 651, 667], "categor": [381, 597, 649], "255": [381, 604, 648], "hydrometeor": [381, 435, 446, 604, 613, 643, 651, 662, 667], "gdalwarp": 381, "command": [381, 604, 605, 607, 658, 661, 669, 671], "o": [381, 468, 597, 599, 605, 627, 658, 668, 669], "az": [381, 597, 604, 634, 635], "descriptor": 381, "tiff": 381, "don": [381, 598, 599, 604, 619], "t": [381, 430, 431, 441, 447, 448, 451, 456, 595, 598, 599, 602, 604, 619, 644, 647, 648, 658, 660], "quot": 381, "help": [381, 457, 597, 598, 599, 601, 602, 605, 607, 619, 625, 647, 669, 671], "translat": 381, "sr": [381, 595], "instead": [381, 595, 597, 599, 602, 604, 605, 616, 644, 647, 664, 668, 669, 671], "mdv_field_nam": [382, 604], "field_write_ord": [382, 383], "sentinel": [382, 383], "float32": [382, 595, 598, 599, 604, 645, 660, 662, 666], "_write_as_dtyp": 382, "writabl": 382, "satisfi": 382, "xy": [382, 420], "irregular": 382, "exce": [382, 647, 648], "122": [382, 602, 615, 619, 626, 646, 654], "uint8": 382, "uint16": 382, "scale_factor": [382, 598], "add_offset": [382, 598], "uncompress": 382, "sai": [382, 605, 669], "uf_field_nam": 383, "radar_field_nam": 383, "volume_start": 383, "templates_extra": 383, "radar_beam_width_h": [383, 598], "radar_beam_width_v": [383, 598], "radar_receiver_bandwidth": 383, "prt": [383, 598], "polarization_mod": 383, "round": [383, 417, 418, 599, 602, 604], "_uf_scale_factor": 383, "charact": 383, "advanc": [383, 595], "usag": 383, "templat": [383, 604, 607], "mandatory_head": 383, "optional_head": 383, "field_head": 383, "lazi": [384, 385, 387, 394, 604], "set_lazi": 385, "callabl": [385, 394, 598, 599], "cach": 385, "tradit": 385, "supplement": 385, "syntax": [385, 604], "prevent": [385, 420, 597, 604, 605, 669], "comparison": [385, 604, 619, 648], "__cmp__": 385, "__ge__": 385, "__gt__": 385, "__le__": 385, "__lt__": 385, "__ne__": 385, "nor": 385, "viewitem": 385, "viewkei": 385, "viewvalu": 385, "fromkei": 385, "tradition": 385, "referenc": 385, "lazyloaddictionari": 385, "henc": 385, "key1": 385, "value1": 385, "key2": 385, "value2": 385, "lazy_func": 385, "lambda": 385, "lazykey1": 385, "item": [386, 396, 399, 406, 604], "els": [388, 389, 400, 598, 602], "value_cal": 394, "concret": 398, "__getitem__": [398, 598], "__setitem__": 398, "__delitem__": 398, "__iter__": 398, "__len__": 398, "robust": [408, 430, 604], "src_radar": 409, "dest_radar": 409, "distance_toler": [409, 619], "500": [409, 597, 601, 619, 626, 630], "gatefilter_src": [409, 619], "time_toler": [409, 619], "60": [409, 595, 610, 615, 619, 622, 627, 655, 660, 662, 664], "kd": 409, "tree": [409, 420, 654, 655, 656], "physic": [409, 425, 431, 441, 647, 648], "easi": [409, 425, 658], "equival": [409, 596, 598, 604, 615, 627, 635, 641], "src_radar_i": 409, "src_radar_x": 409, "destin": [409, 411, 597, 601, 604, 619], "toler": [409, 410, 412, 567, 568, 604], "src_radar_tim": 409, "dest_radar_tim": 409, "gate_mapp": 409, "src": [409, 601], "dest": 409, "dest_index": 409, "radar_map": 409, "mapped_radar": [409, 619], "adequ": [409, 619], "getter": [410, 412], "field_list": [411, 445], "zg": [413, 414, 415], "yg": [413, 414, 415], "xg": [413, 414, 415], "roi": [413, 414, 415, 417, 418, 420, 604, 620], "influenc": [413, 416, 419, 420, 664], "grow": [414, 415, 419, 420, 605, 669], "virtual": [415, 419, 420], "grid_shap": [416, 417, 418, 419, 420, 546, 620, 621, 622, 626, 647, 648, 655, 664], "grid_limit": [416, 417, 418, 419, 420, 546, 620, 621, 622, 626, 647, 648, 655, 664], "gridding_algo": 416, "map_gates_to_grid": [416, 604], "copy_field_dtyp": [416, 604], "map_to_grid": [416, 419, 604], "significantli": [416, 420], "faster": [416, 420, 599, 604], "barn": [416, 420, 604, 664], "1964": 416, "techniqu": [416, 430, 648], "maxim": 416, "numer": [416, 604], "analysi": [416, 430, 578, 599, 602, 604], "meteorologi": [416, 422, 425, 447, 456, 575], "climatologi": [416, 456], "396": [416, 598], "409": [416, 604], "cressman": [416, 420, 664], "1959": 416, "monthli": 416, "review": [416, 596, 604], "87": [416, 595, 597], "367": 416, "374": [416, 604], "paulei": [416, 664], "1990": [416, 664], "theoret": 416, "discret": 416, "respons": 416, "118": 416, "1145": [416, 604], "1164": [416, 604], "target_sweep": [417, 418], "grid_siz": [417, 418, 419, 420], "801": [417, 418, 604], "auto": [417, 418, 599, 601, 625], "max_z": [417, 418], "12000": [417, 418, 660, 664], "el_rounding_frac": 417, "add_grid_altitud": 417, "weight": [417, 418, 419, 420, 446, 447, 455, 595, 604, 613, 618, 623, 664, 667], "grid_from_radar": [417, 418, 419, 420, 620, 621, 622, 626, 647, 648, 655, 664], "receiv": [417, 418, 598, 601, 604, 662], "h_factor": [417, 418, 419, 420, 620], "dist_factor": [417, 418, 419, 620], "radar_d": [417, 418], "third": [417, 418, 605, 669], "az_rounding_frac": 418, "12": [418, 595, 597, 598, 602, 603, 610, 612, 615, 616, 620, 627, 634, 644, 645, 648, 658, 661, 665, 666, 667], "grid_origin": [419, 420, 622, 626], "grid_origin_alt": [419, 420], "map_roi": [419, 420], "weighting_funct": [419, 420, 664], "barnes2": [419, 420, 604], "17000": [419, 420, 664], "roi_func": [419, 420, 604, 664], "dist_beam": [419, 420, 664], "constant_roi": [419, 420, 604], "z_factor": [419, 420], "xy_factor": [419, 420], "02": [419, 420, 595, 598, 628, 642, 647, 648, 651, 667], "min_radiu": [419, 420, 604, 664], "250": [419, 420, 666], "nb": [419, 420], "bsp": [419, 420], "linearli": 419, "roifunct": 419, "dist": [419, 420, 580, 581, 595, 597], "get_roi": 419, "cython": [419, 604], "around": [419, 431, 441, 550, 565, 601, 602, 621, 636, 639, 644, 647, 660, 662], "copy_field_data": 420, "kd_tree": 420, "leafsiz": 420, "nearbi": [420, 622], "coodin": 420, "azimut": 420, "similarili": 420, "example_roi_func_const": 420, "example_roi_func_dist": 420, "example_roi_func_dist_beam": 420, "altern": [420, 425, 599, 647], "foreach": 420, "metet": 420, "sacr": 420, "sapr": [420, 552], "dist_mean": 420, "preserv": [420, 602, 662], "less": [420, 430, 431, 432, 441, 449, 579, 602, 644, 647], "memori": [420, 604], "slower": [420, 447], "It": [420, 449, 565, 575, 597, 599, 602, 605, 608, 619, 669, 671], "leaf": 420, "lookup": 420, "affect": 420, "optim": [420, 447, 604], "natur": [420, 430, 599], "ref_field": [422, 648, 661], "300": [422, 595, 597, 598, 599, 601, 628, 629, 660], "save_nam": [422, 648], "nws_primary_pr": 422, "mm": [422, 602, 603, 647, 648], "hr": [422, 647, 648], "author": [422, 425, 441, 579, 596, 602, 603, 607, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656], "laura": [422, 441, 579, 628, 644, 647, 648], "tomkin": [422, 441, 579, 628, 644, 647, 648], "look": [422, 425, 432, 451, 595, 597, 598, 599, 601, 602, 603, 604, 615, 616, 619, 620, 627, 658, 660, 662, 664, 666], "expect": [422, 449, 605, 669], "relationship": [422, 430, 440], "american": [422, 425], "meteorolog": [422, 425, 436, 456, 599], "2022": [422, 425, 579, 595, 598, 603, 615, 628, 647, 648, 658], "glossari": [422, 425], "ametsoc": [422, 425], "wiki": [422, 425, 444], "r_relat": 422, "25000": [423, 664], "floor": 423, "measur": [423, 431, 434, 440, 441, 446, 447, 448, 449, 566, 598, 599, 601, 602, 605, 647, 648, 658, 660, 661, 662, 664, 665, 666, 669], "nyq": [424, 601, 654, 662], "check_nyq_uniform": 424, "deriv": [424, 447, 449], "vel_dict": 424, "entri": [424, 666], "am": [425, 601, 605, 658, 669], "dry": [425, 649], "world": [425, 613, 624], "aloft": 425, "oppos": [425, 628], "nwp": [425, 649], "why": [425, 599, 603, 605, 669], "would": [425, 595, 596, 597, 598, 601, 602, 604, 605, 615, 616, 662, 664, 669], "think": 425, "turn": [425, 451, 625, 647, 648, 658], "spin": [425, 602], "randi": [425, 601], "chase": [425, 601], "dopplerchas": [425, 604], "cdr_field": 426, "circular": [426, 580, 581, 604, 647], "depolar": [426, 598], "cdr": 426, "l_field": 427, "logarithm": 427, "log10": [427, 619], "l_field_out": 427, "noisedbz_v": 428, "ref_dist": 428, "noise_field": [428, 429], "noisedbz": 428, "cappi_level": 430, "zr_a": 430, "200": [430, 605, 669], "zr_b": 430, "core_wt_threshold": 430, "conv_wt_threshold": 430, "conv_scale_km": 430, "min_reflect": 430, "conv_min_refl": 430, "conv_core_threshold": 430, "42": [430, 431, 441, 453, 595, 597, 598, 601, 645, 647, 648], "override_check": 430, "computation": 430, "\u00e0": 430, "trou": 430, "wavelet": 430, "atwt": 430, "multiresolut": 430, "focus": [430, 595, 597, 598], "raut": 430, "2008": [430, 616], "2020": [430, 566, 599, 602, 604, 605, 628, 658, 668, 669], "convers": [430, 565, 598], "sensit": 430, "howev": [430, 447, 599, 662], "intermedi": 430, "signific": 430, "approxim": [430, 595, 598, 604], "break": [430, 602, 606, 607], "season": 430, "2018": [430, 599], "discuss": [430, 599, 608], "insensit": 430, "variat": [430, 440, 447, 604], "dyadic": 430, "scale_break_us": 430, "greater": [430, 453, 599, 647], "bypass": 430, "saniti": 430, "fall": 430, "categori": [430, 597, 602], "strong": [430, 441, 597, 648], "updraft": 430, "activ": [430, 671], "collis": 430, "coalesc": 430, "wide": [430, 644], "remain": 430, "intens": [430, 453, 550], "unclassifi": [430, 595], "karekar": 430, "puranik": 430, "infrar": [430, 595], "satellit": [430, 595], "ieee": [430, 448], "geosci": [430, 448], "remot": [430, 448, 597, 598, 599, 604, 605, 615, 669], "sen": [430, 448], "lett": 430, "328": 430, "330": [430, 604], "seed": 430, "reeder": 430, "jakob": 430, "cascad": 430, "downscal": 430, "geophi": 430, "123": [430, 432, 620, 623, 644, 667], "2050": 430, "2067": 430, "louf": 430, "gayatri": 430, "murugavel": 430, "konwar": 430, "prabhakaran": 430, "tran": 430, "5409": 430, "5415": 430, "dx": [431, 441, 453, 647, 648], "dy": [431, 441, 453, 597, 647, 648], "level_m": [431, 441, 648], "bkg_rad_km": [431, 441, 647, 648], "11": [431, 441, 586, 595, 597, 602, 616, 645, 648, 655, 658, 665, 666, 667], "55": [431, 441, 595, 597, 640, 647, 648], "calc_thr": [431, 441, 647, 648], "weak_echo_thr": [431, 441, 647, 648], "min_dbz_us": [431, 647], "db_averag": [431, 441, 647, 648], "remove_small_object": [431, 441, 647, 648], "min_km2_siz": [431, 441, 647, 648], "val_for_max_conv_rad": [431, 647], "max_conv_rad_km": [431, 647], "cs_core": 431, "nosfcecho": [431, 441, 647, 648], "weakecho": [431, 441, 647, 648], "sf": [431, 647], "conv": [431, 647], "estimate_flag": [431, 441, 647, 648], "estimate_offset": [431, 441, 647, 648], "partit": [431, 441, 453, 602, 610], "pars": [431, 441, 598, 599, 604], "least": [431, 441, 647], "simpler": [431, 441, 647], "percentag": [431, 441], "weak": [431, 441, 647, 648], "surfac": [431, 441, 598, 647, 648], "snow": [431, 435, 441, 566, 579, 598, 628, 647, 648, 649], "underestim": [431, 441, 647, 648], "wih": [431, 441], "convsf_dict": [431, 647, 648], "raindrop": [431, 441, 647, 648], "pacif": [431, 441, 647, 648], "warm": [431, 441, 447, 647], "pool": [431, 441, 647, 648], "implic": [431, 441, 647, 648], "appl": [431, 441, 449, 451, 453, 455, 566, 605, 647, 648, 669], "meteor": [431, 441, 449, 451, 453, 455, 566, 605, 647, 648, 658, 669], "36": [431, 441, 595, 616, 619, 622, 626, 640, 645, 647, 648, 650, 664], "847": [431, 441, 604, 647, 648], "867": [431, 441, 604, 647, 648], "doi": [431, 432, 436, 437, 441, 446, 448, 449, 566, 579, 595, 598, 599, 601, 602, 605, 628, 644, 647, 648, 658, 660, 661, 662, 664, 665, 666, 669], "1175": [431, 432, 441, 449, 566, 604, 644, 647, 648, 658], "1520": [431, 432, 441, 604, 644, 647, 648], "0450": [431, 441, 647, 648], "036": [431, 441, 647, 648], "3c0847": [431, 441, 647, 648], "morsdo": [431, 441, 647, 648], "3e2": [431, 432, 441, 644, 647, 648], "smith": [431, 441, 647, 648], "wilheit": [431, 441, 647, 648], "zipser": [431, 441, 647, 648], "character": [431, 441, 453, 647, 648], "tropic": [431, 441, 647, 648], "kwajex": [431, 441, 647, 648], "385": [431, 441, 604, 647, 648], "415": [431, 441, 647, 648], "jam2206": [431, 441, 647, 648], "field_bin": [432, 644], "altitude_bin": [432, 644], "field_mask": [432, 644], "min_frac_thr": [432, 644], "contour": [432, 604, 613, 624, 642, 644, 667], "diagram": [432, 613, 643, 651, 667], "cfad": [432, 604, 613, 643, 651, 667], "1995": [432, 441, 453, 644, 647, 648], "histogram": [432, 619, 644, 662], "largest": 432, "row": [432, 595, 597, 599, 644], "creation": [432, 604], "total": [432, 447, 448, 449, 598, 601, 610, 611, 612, 615, 616, 617, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 667], "freq_norm": [432, 644], "height_edg": [432, 644], "field_edg": [432, 644], "kinemat": [432, 455, 605, 644, 669], "microphys": [432, 595, 644], "evolut": [432, 644], "florida": [432, 599, 644], "cumulonimbu": [432, 644], "ii": [432, 644, 658, 666], "mon": [432, 644], "wea": [432, 644], "rev": [432, 644], "1941": [432, 644], "1963": [432, 644], "0493": [432, 644], "3c1941": [432, 644], "tdkame": [432, 644], "the_spectra": 433, "vel_bin": 433, "wavelength": [433, 595, 598], "left_limit": 433, "right_limit": 433, "new_spectra": 433, "new_bin": 433, "a_field": [434, 435, 438], "rr_field": [434, 435, 436, 437, 438, 439, 440], "go": [434, 435, 436, 438, 439, 589, 596, 597, 602, 604, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 661], "diederich": 434, "simmer": [434, 451], "zhang": [434, 451, 566], "tromel": [434, 451], "2015": [434, 437, 451, 658], "wavelenght": 434, "hydrometeorologi": 434, "487": [434, 595], "502": [434, 604], "alphazr": 435, "0376": [435, 437, 438, 439], "betazr": 435, "6112": [435, 437, 438, 439], "alphaz": [435, 438, 439], "betaz": [435, 438, 439], "alphaa": [435, 438], "betaa": [435, 438], "mp_factor": 435, "hydro_field": [435, 446], "main_field": [435, 438, 439], "thresh_max": [435, 438, 439], "main": [435, 438, 439, 595, 597, 598, 599, 604, 605, 631, 669], "secondari": [435, 438, 439, 604], "figuera": [436, 446], "term": [436, 604], "monitor": 436, "french": 436, "sever": [436, 597, 604, 648], "quantit": 436, "ideal": [436, 598], "quarterli": 436, "royal": 436, "2012": [436, 447, 449], "1002": [436, 604], "qj": 436, "1934": 436, "fabri": 437, "fr\u00e9d\u00e9ric": 437, "meterologi": 437, "ch": [437, 649, 650], "pg": 437, "148": 437, "165": 437, "1017": 437, "cbo9781107707405": 437, "blend": [438, 439, 599, 636], "rain_main": [438, 439], "alphakdp": 439, "betakdp": 439, "polynomi": 440, "develop": [440, 441, 595, 599, 604, 648, 658, 668], "mcgill": [440, 658], "doell": 440, "systemat": 440, "drop": [440, 598, 599, 604], "northern": [440, 597], "germani": 440, "seven": 440, "year": [440, 595, 597, 601, 603, 615, 616], "1998": 440, "technol": [440, 451, 566], "1545": [440, 604], "1556": 440, "joss": 440, "switzerland": 440, "vdf": 440, "hochschulverlag": 440, "ag": [440, 649], "eth": 440, "zurich": 440, "134": [440, 595, 657], "min_val_us": [441, 648], "binary_clos": 441, "val_for_max_rad": [441, 648], "max_rad_km": [441, 648], "core_v": [441, 648], "bkgd_val": [441, 648], "feat_val": [441, 648], "overest_field": [441, 648], "underest_field": [441, 648], "detect": [441, 599, 604, 613, 631, 643, 647, 651, 662, 667], "featur": [441, 596, 597, 599, 602, 608, 613, 628, 643, 644, 647, 651, 658, 667], "2023": [441, 601, 658], "steiner": [441, 453, 604, 647, 648], "lauratomkin": [441, 579, 604], "overestim": [441, 647, 648], "feature_dict": [441, 648], "climatolog": [441, 453, 647, 648], "storm": [441, 453, 550, 551, 553, 595, 598, 599, 601, 628, 647, 648, 664], "gaug": [441, 453, 647, 648], "1978": [441, 453, 647, 648], "2007": [441, 453, 647, 648], "miller": [441, 579, 628, 648], "2024": [441, 593, 602, 648], "identif": [441, 579, 628, 648], "faint": [441, 648], "winter": [441, 628, 647, 648], "prep": [441, 648], "sonde_dset": 442, "time_kei": 442, "height_kei": 442, "nvar": 442, "vap": 442, "startard": 442, "ncvar": 442, "return_d": 442, "freq": 443, "hz": [443, 446, 634], "freq_band": 443, "grid1": 444, "grid2": 444, "return_valu": 444, "displac": 444, "en": [444, 601, 604, 605, 658, 668, 669], "wikipedia": 444, "phase_correl": 444, "inspir": 444, "christoph": 444, "gohlk": 444, "lfd": 444, "uci": 444, "imreg": 444, "advect": [444, 445, 604], "trim_edg": 445, "shifted_grid": 445, "subset": [445, 589, 595, 597, 601, 604, 613, 643, 645], "mass_cent": 446, "approach": [446, 595, 598, 620], "besic": 446, "2016": [446, 595, 598, 599, 601, 605, 658, 660, 661, 662, 664, 665, 666, 669], "ndarrai": [446, 666], "centroid": 446, "nclass": 446, "nvariabl": 446, "hydro": [446, 649], "ventura": 446, "grazioli": [446, 448], "gabella": 446, "germann": 446, "bern": [446, 448], "statist": [446, 604, 605, 669], "cluster": 446, "semi": 446, "supervis": 446, "mea": [446, 579, 628, 648], "4425": 446, "4445": 446, "5194": [446, 579, 628, 648], "amt": [446, 579, 628, 648], "block": [446, 595, 602, 604], "2e9": 446, "cg": 447, "backscatt": [447, 451], "clpf": 447, "length_scal": 447, "first_guess": 447, "finite_ord": 447, "fill_valu": [447, 448, 449, 453, 599, 660, 661, 666], "psidp_field": [447, 448, 449, 649], "verbos": [447, 451, 604, 605, 669], "maesaka": 447, "monoton": [447, 450, 625], "propag": [447, 448, 449], "notat": 447, "primari": [447, 598], "proport": 447, "dr": 447, "analys": [447, 448, 449], "cost": [447, 604], "nonlinear": 447, "conjug": 447, "gradient": [447, 604, 625], "broyden": 447, "fletcher": 447, "goldfarb": 447, "shanno": 447, "bfg": 447, "100k": 447, "consider": [447, 601, 647, 648], "parameter": 447, "attentu": 447, "constraint": 447, "bring": [447, 595], "guess": 447, "root": [447, 668, 671], "signifi": [447, 453], "everywher": 447, "exactli": [447, 602, 619], "avoid": [447, 604, 607, 671], "converg": 447, "fact": [447, 449], "closer": 447, "finit": 447, "accuraci": 447, "maxit": 447, "met": 447, "achiev": 447, "somewhat": 447, "arbitrari": 447, "parallel": [447, 448, 449], "thread": [447, 599], "cpu": 447, "multiprocess": 447, "capabl": [447, 598, 662, 666], "relev": [447, 602, 608], "kdp_dict": [447, 448, 449], "phidpf_dict": 447, "phidpr_dict": [447, 448, 449], "forward": [447, 576, 577], "iwanami": 447, "maki": 447, "seventh": 447, "european": 447, "confer": 447, "hydrologi": 447, "rcov": 448, "pcov": 448, "prefilter_psidp": [448, 449], "filter_opt": [448, 449], "kalman": 448, "schneeb": 448, "psidp": [448, 449], "char": [448, 449], "capit": [448, 449], "intercept": 448, "slope": 448, "3x3": 448, "covari": 448, "matrix": [448, 599, 604], "4x4": 448, "filter_psidp": [448, 449, 604], "enabl": [448, 449, 598, 601, 604], "kdp_std_dict": 448, "dev": [448, 598, 601, 602, 605, 664, 669], "ensembl": 448, "52": [448, 451, 595, 598, 645], "5137": 448, "5149": 448, "1109": [448, 604], "tgr": 448, "2287017": 448, "windsiz": 449, "n_iter": 449, "vulpiani": [449, 604], "pre": [449, 604, 605, 669], "advantag": 449, "eat": 449, "gianfranco": 449, "mario": 449, "montopoli": 449, "luca": 449, "delli": 449, "passeri": 449, "antonio": 449, "gioia": 449, "pietro": 449, "giordano": 449, "frank": 449, "marzano": 449, "On": [449, 596, 597], "dual": [449, 604], "mountain": 449, "climatol": [449, 566, 647, 648], "51": [449, 595, 645], "405": [449, 604], "425": [449, 604], "05024": 449, "profile_field": 450, "height_field": 450, "3re": 450, "whole": [450, 604], "height_dict": 450, "profile_dict": 450, "desired_angl": [451, 604], "quasi": 451, "qvp": [451, 604], "wanted_angl": 451, "dictonari": 451, "quasai": 451, "troemel": 451, "kumjian": 451, "clim": [451, 598, 599], "2529": 451, "2548": 451, "meteorol": [451, 647, 648], "54": [451, 595, 597, 598, 616], "2344": 451, "2359": 451, "reev": 451, "tschallen": 451, "wai": [451, 598, 605, 607, 619, 660, 669, 671], "submit": [451, 599, 658], "work_level": 453, "3000": [453, 660, 664], "peak_rel": 453, "area_rel": 453, "medium": 453, "bkg_rad": 453, "11000": [453, 664], "use_intens": 453, "bright": [453, 595], "sgp": [453, 546], "peaked": 453, "eclass": 453, "z_want": [455, 456, 605, 650, 669], "valid_ray_min": [455, 605, 669], "velocity_azimuth_displai": [455, 605, 669], "one_sweep_radar": 455, "extract_sweep": [455, 601, 620, 644, 647, 648, 650], "vad": [455, 456, 604, 605, 613, 643, 651, 667, 669], "amount": [455, 598, 601, 605, 648, 664, 669], "_averag1d": [455, 605, 669], "idw": 455, "brown": [455, 604, 605, 669], "wexler": [455, 605, 669], "1968": [455, 605, 669], "105": [455, 605, 650, 669], "113": [455, 605, 645, 669], "linespac": 456, "michelson": [456, 604, 658], "andersson": 456, "koistinen": [456, 658], "collier": 456, "riedl": 456, "szturc": 456, "gjertsen": 456, "nielsen": 456, "overgaard": 456, "2000": [456, 595, 621, 664], "baltex": 456, "centr": 456, "methodologi": [456, 566, 662], "smhi": 456, "swedish": 456, "hydrolog": 456, "institut": [456, 595, 666], "norrkop": 456, "suffix": 468, "tmp": 468, "dir": 468, "temporari": [468, 604], "my_cwd": 468, "getcwd": 468, "tmpdir": 468, "_": [468, 597, 601, 602, 615, 616, 649], "txt": [468, 604, 668], "wt": 468, "assert": [468, 604, 605, 669], "isfil": 468, "path_to_fil": 545, "local": [545, 596, 597, 601, 604, 605, 658, 668, 669], "without": [546, 560, 595, 598, 604, 668], "site": [546, 595, 597, 598, 599, 600, 601, 602, 610, 616, 645, 661, 664, 668], "oklahoma": [546, 601], "puls": [549, 598, 604, 662], "min_valu": 550, "max_valu": 550, "45": [550, 597, 605, 628, 637, 647, 648, 669], "grid_len": 550, "sigma": [550, 551, 636, 637], "mu": [550, 551], "masked_boundari": 550, "gaussian": [550, 551, 604, 636], "dp_phase_shift": [552, 645, 660], "diff_phas": [552, 660], "differential_reflect": [552, 615, 629, 636, 665, 666], "rectangular": [553, 554, 599, 604], "alia": [558, 559, 599, 604], "miscellan": 560, "depreci": [560, 604], "caution": [560, 644], "radian": [561, 563, 584, 595], "std": [563, 564, 581, 586], "convolut": 565, "ndimag": [565, 604, 636, 637], "generic_filt": 565, "pi": [565, 595, 662], "std_dev": 565, "azimuth_spread": 566, "spatial_spread": 566, "spatial_rang": 566, "sphere_dist": [566, 578], "for_azimuth": [566, 578], "get_sweep_rai": 566, "subset_field": 566, "assemble_column": 566, "murphi": 566, "columnar": 566, "cvp": [566, 604], "ic": [566, 636, 649], "situ": 566, "37": [566, 595, 598, 619, 645, 648, 665], "1623": 566, "1642": 566, "jtech": 566, "0011": 566, "bukov\u010di\u0107": 566, "zrni\u0107": 566, "59": [566, 595, 598], "991": [566, 604], "1009": [566, 604], "19": [566, 595, 597, 598, 604, 650, 666], "0140": 566, "az_tol": 567, "radar_rhi": 567, "target_elev": 568, "el_tol": 568, "radar_ppi": 568, "epoch": [569, 570, 571, 572, 573, 595], "max_offset": 574, "running_win_dt": 574, "deg_rng": 574, "consider_2pi_jump": 574, "is_ppi": 574, "wise": 574, "could": [574, 599, 602, 605, 616, 669], "strategi": [574, 595], "might": [574, 596, 660, 671], "goe": [574, 599], "shot": 574, "navg": 575, "nnoise_min": 575, "hildebrand": [575, 604], "sehkon": 575, "1974": 575, "spectral": [575, 595, 598, 604], "articl": 575, "peak": [575, 598, 662], "var": [575, 590, 591, 595], "varianc": [575, 620], "nnois": 575, "sekhon": [575, 604], "808": 575, "811": [575, 604], "target_latitud": [576, 588], "target_longitud": [576, 588], "bear": [576, 597], "alongitudeg": 576, "great": [576, 588], "circl": [576, 588, 647], "known": [576, 604, 605, 666, 669], "6371000": [576, 588], "calculatitude": 576, "degress": [576, 588], "further": [578, 596, 598, 602], "get_column_rai": 578, "mute_field": [579, 628], "mute_threshold": [579, 628], "field_threshold": [579, 628], "discern": 579, "mute": [579, 604, 613, 624, 642, 647, 648, 667], "allen": [579, 628, 648], "5515": [579, 628, 648], "5525": [579, 628, 648], "interval_min": [580, 581], "interval_max": [580, 581], "endpoint": [580, 581], "to_vpt": 582, "90": [582, 595, 597, 598, 605, 669], "verticl": 582, "radar1": 583, "radar2": 583, "angles1": 584, "angles2": 584, "angle1": 585, "angle2": 585, "eg": 586, "ma": [586, 605, 619, 621, 644, 647, 648, 661, 665, 669], "interp_kind": 587, "sim_vel_field": 587, "kind": [587, 595, 602, 610], "slinear": 587, "quadrat": 587, "cubic": 587, "interp1d": [587, 605, 669], "sim_vel": [587, 605, 669], "rng_min": 589, "rng_max": 589, "ele_min": 589, "ele_max": 589, "azi_min": 589, "azi_max": 589, "coverag": [589, 595, 604, 605, 669], "11pt": 590, "stdev": 590, "texarrai": 590, "pyradarobj": 590, "tex": 591, "single_scan": 592, "is_vpt": 592, "mislabel": 592, "properli": [592, 605, 616, 669], "releas": [593, 600, 605, 608, 658, 661, 664, 668, 669], "post18": 593, "jun": 593, "guid": [593, 595, 596, 604, 658], "public": [593, 595, 599, 601, 602, 604, 605, 660, 661, 662, 664, 665, 666, 669], "broken": [593, 604], "aerosol": 595, "experi": 595, "depart": [595, 598, 599, 601, 660, 661, 662, 664, 665, 666], "energi": [595, 598, 599, 601, 660, 661, 662, 664, 665, 666], "iop": 595, "goal": 595, "studi": 595, "lifecycl": 595, "houston": [595, 615], "impact": [595, 601, 636], "uniqu": 595, "suit": [595, 604, 664], "seabreez": 595, "coast": [595, 599], "cleaner": [595, 665], "air": [595, 599, 602], "pollut": 595, "click": [595, 596, 602, 607], "post": [595, 597, 598, 599, 601, 602, 604, 607, 658], "overlai": 595, "texa": [595, 615], "lightn": 595, "csapr2": 595, "wildfir": 595, "smoke": 595, "entrain": 595, "juli": [595, 616], "we": [595, 597, 598, 599, 601, 602, 605, 608, 615, 616, 619, 625, 644, 645, 647, 648, 654, 660, 661, 662, 664, 665, 666, 668, 669, 670, 671], "highlight": [595, 596, 599], "minut": [595, 597, 598, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656], "pyart": [595, 597, 601, 602, 605, 607, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658, 660, 661, 662, 664, 665, 666, 668, 669, 671], "pyplot": [595, 596, 597, 598, 599, 601, 602, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 660, 661, 662, 664, 665], "plt": [595, 596, 597, 598, 599, 601, 602, 604, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 660, 661, 662, 664, 665], "xr": [595, 598], "s3f": 595, "ccr": [595, 597, 599, 601, 602, 615, 616, 619, 620, 626, 627, 633, 640, 645, 647, 648, 654, 661, 662, 665], "panda": [595, 598, 601, 604, 671], "pd": [595, 597, 598, 601], "kdtree": 595, "inlin": [595, 636, 637], "download": [595, 596, 598, 599, 602, 604, 605, 610, 611, 613, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658, 669, 671], "longwav": 595, "ensur": [595, 597, 604, 648], "c13": 595, "denot": [595, 620], "anonym": [595, 597], "credenti": 595, "s3filesystem": 595, "day_no": 595, "168": 595, "dai": [595, 601], "16th": 595, "leap": 595, "hour": [595, 599, 601, 615, 616], "goes16": 595, "abi": 595, "l1b": 595, "radc": 595, "02d": 595, "fi": 595, "or_abi": 595, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 595, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 595, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 595, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 595, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 595, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 595, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 595, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 595, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 595, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 595, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 595, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 595, "goes_d": 595, "open_dataset": [595, 598], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 595, "lt": [595, 598], "gt": [595, 598], "1500": [595, 660], "2500": 595, "number_of_time_bound": 595, "number_of_image_bound": 595, "num_star_look": 595, "datetime64": [595, 598, 645], "07": [595, 597, 598, 616, 628, 647, 648, 666], "1282": 595, "1013": 595, "y_imag": 595, "08624": 595, "x_imag": 595, "03136": 595, "band_id": 595, "int8": 595, "band_wavelength": 595, "33": [595, 598, 599, 648, 666], "t_star_look": 595, "band_wavelength_star_look": 595, "rad": [595, 598], "dqf": 595, "time_bound": 595, "goes_imager_project": 595, "int32": [595, 666], "2147483647": 595, "y_image_bound": 595, "x_image_bound": 595, "algorithm_dynamic_input_data_contain": 595, "processing_parm_version_contain": 595, "algorithm_product_version_contain": 595, "star_id": 595, "channel_integration_tim": 595, "336": [595, 604], "channel_gain_field": 595, "naming_author": 595, "nesdi": 595, "standard_name_vocabulari": 595, "v35": 595, "commerc": 595, "production_sit": 595, "wcda": 595, "timeline_id": 595, "date_cr": 595, "12t20": 595, "09": [595, 597, 602, 623, 642, 647, 648, 657, 667], "3z": 595, "time_coverage_start": [595, 660, 666], "time_coverage_end": [595, 660], "08": [595, 617, 642, 667], "7z": 595, "lut_filenam": 595, "spacelookparam": 595, "fm1a_cdrl79revp_pr_09_00_02": 595, "f45b564c": 595, "dcb9": 595, "498a": 595, "ac56": 595, "da80a1d735a5xarrai": 595, "datasetdimens": [595, 598], "1500x": 595, "2500number_of_time_bound": 595, "2number_of_image_bound": 595, "2band": 595, "1num_star_look": 595, "24coordin": 595, "j2000": 595, "mid": 595, "secondsstandard_nam": 595, "timeaxi": 595, "tbound": 595, "time_boundsarrai": 595, "x27": [595, 598], "537394048": 595, "float640": 595, "04432": 595, "04427unit": 595, "radaxi": 595, "ylong_nam": 595, "coordinatestandard_nam": 595, "projection_y_coordinatearrai": 595, "128212": 595, "128156": 595, "1281": 595, "04438": 595, "044324": 595, "044268": 595, "03856": 595, "03861unit": 595, "xlong_nam": 595, "projection_x_coordinatearrai": 595, "101332": 595, "101276": 595, "10122": 595, "0385": 595, "038556": 595, "038612": 595, "imagestandard_nam": 595, "projection_y_coordinateunit": 595, "yarrai": 595, "projection_x_coordinateunit": 595, "numberstandard_nam": 595, "sensor_band_identifierunit": 595, "1arrai": [595, 598], "central": [595, 597, 601], "wavelengthstandard_nam": 595, "sensor_band_central_radiation_wavelengthunit": 595, "umarrai": 595, "star": 595, "tarrai": 595, "01t11": 595, "43": [595, 598, 601], "000000000": [595, 598], "starstandard_nam": 595, "radiancesstandard_nam": 595, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 595, "12valid_rang": 595, "4094": 595, "mw": 595, "cm": [595, 637], "1resolut": 595, "000056": 595, "radgrid_map": 595, "goes_imager_projectioncell_method": 595, "pointancillary_vari": 595, "3750000": 595, "radianc": 595, "flagsstandard_nam": 595, "status_flagvalid_rang": 595, "1grid_map": 595, "pointflag_valu": 595, "flag_mean": 595, "good_pixel_qf": 595, "conditionally_usable_pixel_qf": 595, "out_of_range_pixel_qf": 595, "no_value_pixel_qf": 595, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 595, "5percent_good_pixel_qf": 595, "0percent_conditionally_usable_pixel_qf": 595, "0percent_out_of_range_pixel_qf": 595, "0percent_no_value_pixel_qf": 595, "0percent_focal_plane_temperature_threshold_exceeded_qf": 595, "00": [595, 597, 598, 601, 602, 604, 612, 617, 623, 642, 651, 652, 657, 667], "326423040": 595, "748365056": 595, "projectiongrid_mapping_nam": 595, "geostationaryperspective_point_height": 595, "35786023": 595, "0semi_major_axi": 595, "6378137": 595, "0semi_minor_axi": 595, "6356752": 595, "31414inverse_flatten": 595, "298": 595, "2572221latitude_of_projection_origin": 595, "0longitude_of_projection_origin": 595, "0sweep_angle_axi": 595, "south": [595, 599, 629], "extent": [595, 597, 598, 601, 620, 622], "imageunit": 595, "radarrai": 595, "12824": 595, "04424": 595, "10136": 595, "03864": 595, "nominal_satellite_subpoint_lat": 595, "nomin": 595, "subpoint": 595, "standard_nam": [595, 647, 648, 661, 666], "latitudeunit": [595, 598], "degrees_northarrai": 595, "nominal_satellite_subpoint_lon": 595, "longitudeunit": [595, 598], "degrees_eastarrai": 595, "199997": 595, "nominal_satellite_height": 595, "gr": 595, "80": [595, 597, 611, 640, 646], "ellipsoid": 595, "height_above_reference_ellipsoidunit": 595, "kmarrai": 595, "35786": 595, "023438": 595, "geospatial_lat_lon_ext": 595, "geospati": 595, "referencesgeospatial_westbound_longitud": 595, "152": [595, 648], "10928geospatial_northbound_latitud": 595, "56": [595, 598, 650], "76145geospatial_eastbound_longitud": 595, "94688geospatial_southbound_latitud": 595, "14": [595, 598, 599, 601, 602, 616, 622, 623, 625, 627, 654, 666, 667], "57134geospatial_lat_cent": 595, "083002geospatial_lon_cent": 595, "096954geospatial_lat_nadir": 595, "0geospatial_lon_nadir": 595, "0geospatial_lat_unit": 595, "degrees_northgeospatial_lon_unit": 595, "96921e": 595, "yaw_flip_flag": 595, "spacecraft": 595, "yaw": 595, "flip": 595, "configurationvalid_rang": 595, "1flag_valu": 595, "truearrai": 595, "esun": 595, "bandpass": 595, "solar": 595, "irradi": 595, "sun": 595, "distancestandard_nam": 595, "toa_shortwave_irradiance_per_unit_wavelengthunit": 595, "um": 595, "1cell_method": 595, "meanarrai": 595, "kappa0": 595, "incom": 595, "d2": 595, "instantan": [595, 604], "divid": 595, "reflectanceunit": 595, "planck_fk1": 595, "wavenumb": 595, "c2": 595, "nu3": 595, "emiss": 595, "monochromat": 595, "nu": 595, "constantsunit": 595, "10803": 595, "299805": 595, "planck_fk2": 595, "karrai": 595, "1392": [595, 604], "73999": 595, "planck_bc1": 595, "bc_1": 595, "bc_2": 595, "planck_funct": 595, "wavenumberunit": 595, "0755": 595, "planck_bc2": 595, "99975": 595, "valid_pixel_count": 595, "condition": 595, "pixelsunit": 595, "countgrid_map": 595, "sum": [595, 603, 644], "comment": [595, 596, 637, 666], "3702838": 595, "missing_pixel_count": 595, "saturated_pixel_count": 595, "satur": 595, "radiometr": 595, "geoloc": 595, "undersaturated_pixel_count": 595, "undersatur": 595, "focal_plane_temperature_threshold_exceeded_count": 595, "exceed": 595, "thresholdunit": 595, "min_radiance_value_of_valid_pixel": 595, "pixelsstandard_nam": 595, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 595, "6443": 595, "185": 595, "5699": 595, "849287": 595, "max_radiance_value_of_valid_pixel": 595, "154": [595, 633], "23053": 595, "mean_radiance_value_of_valid_pixel": 595, "197975": 595, "std_dev_radiance_value_of_valid_pixel": 595, "toa_outgoing_radiance_per_unit_wavenumberunit": 595, "standard_devi": 595, "985853": 595, "maximum_focal_plane_temperatur": 595, "focal": 595, "valuevalid_rang": 595, "951939": 595, "focal_plane_temperature_threshold_increas": 595, "bound": [595, 598, 648], "81": [595, 597, 666], "focal_plane_temperature_threshold_decreas": 595, "decreas": [595, 644], "percent_uncorrectable_l0_error": 595, "percent": 595, "l0": 595, "errorsvalid_rang": 595, "percentgrid_map": 595, "earth_sun_distance_anomaly_in_au": 595, "anomali": [595, 648], "astronom": 595, "unitsunit": 595, "uacell_method": 595, "016543": 595, "datainput_abi_l0_data": 595, "m6_g16_s20221932006173_e20221932008557_c": 595, "ncarrai": 595, "filenamesl1b_processing_parm_vers": 595, "parm": 595, "rad_g16_v01r00": 595, "ziparrai": 595, "packag": [595, 596, 597, 598, 599, 601, 602, 604, 605, 610, 616, 658, 661, 664, 668, 669, 671], "versionalgorithm_vers": 595, "alg": 595, "rad_v01r00": 595, "zipproduct_vers": 595, "v01r00arrai": 595, "stararrai": 595, "vnir": 595, "ir": 595, "telemetryunit": 595, "countarrai": 595, "gain": [595, 598], "noaaconvent": 595, "7standard_name_vocabulari": 595, "administr": [595, 599, 615], "servicesproject": 595, "goesproduction_sit": 595, "wcdasproduction_environ": 595, "oespatial_resolut": 595, "2km": 595, "nadirmetadata_convent": 595, "discoveri": [595, 602], "0orbital_slot": 595, "eastplatform_id": 595, "g16instrument_typ": 595, "baselin": 595, "scene_id": 595, "conusinstrument_id": 595, "fm1titl": 595, "radiancessummari": 595, "digit": 595, "outgo": 595, "engin": 595, "radiancekeywords_vocabulari": 595, "nasa": 595, "master": [595, 604, 607, 637], "gcmd": 595, "scienc": [595, 599, 601, 660, 661, 662, 664, 665, 666], "0iso_series_metadata_id": 595, "a70be540": 595, "c38b": 595, "11e0": 595, "962b": 595, "0800200c9a66licens": 595, "restrict": 595, "approv": 595, "processing_level": 595, "aeronaut": 595, "l1bcdm_data_typ": 595, "imagedataset_nam": 595, "ncproduction_data_sourc": 595, "realtimetimeline_id": 595, "6date_cr": 595, "3ztime_coverage_start": 595, "3ztime_coverage_end": 595, "7zlut_filenam": 595, "637827000": 595, "h5": [595, 604], "qtableband13": 595, "fm1a_cdrl79revh_do_08_00_00": 595, "582860861": 595, "caltargettimeinterv": 595, "fm1a_cdrl79revp_do_08_00_01": 595, "611906620": 595, "bandsaturationlimit": 595, "600000000": 595, "solarspacelookparam": 595, "fm1a_adr1233_pr_09_08_25": 595, "709281036": 595, "deadrowlistparam": 595, "mirror_record": 595, "fm1a_cdrl79revg_do_07_00_00": 595, "kalmanastroconst": 595, "xml": [595, 601], "kalmanfiltercontrol": 595, "fm1a_pr_09_08_02": 595, "677650371": 595, "kalmanmeasmaxsens": 595, "fmaa_int_only_do_09_01_00": 595, "652936814": 595, "kalmanpreprocessorcontrol": 595, "fm1a_cdrl79revj_pr_09_06_02": 595, "657795700": 595, "kalmanreferencedata": 595, "888": 595, "kalmanstarcatalog": 595, "abi_navigationrdp_band13": 595, "fm1a_cdrl79revj_do_07_00_00": 595, "abi_navigationparameters_band13": 595, "fm1a_cdrl79revh_do_07_00_00": 595, "abi_resamplingimplementation_band13": 595, "fm1a_cdrl79revh_do_07_02_00": 595, "602129336": 595, "abi_resamplingparameters_band13": 595, "starlookparam": 595, "stardetectionparam": 595, "resamplingscaledconvers": 595, "fmaa_int_only_do_08_00_00": 595, "1111": [595, 598, 604], "blockreleaseregion": 595, "2222": 595, "csv": [595, 597], "ir_retrievalparamet": 595, "fm1a_cdrl79revh_do_09_01_00": 595, "652936750": 595, "radiancelut_band13": 595, "fm1a_cdrl79reve_do_08_00_00": 595, "ict_record": 595, "fm1a_tmabi_18_159_pr_09_00_02": 595, "icm_conversionconst": 595, "fm1a_cdrl43": 595, "18_do_09_01_00": 595, "icm_sensorcoeffici": 595, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 595, "676949608": 595, "h5id": 595, "da80a1d735a5": 595, "team": 595, "bobbi": [595, 619], "jackson": [595, 619], "pug": 595, "l2": [595, 604], "file_id": 595, "def": [595, 597, 601, 604, 605, 625, 648, 669], "calculate_degre": 595, "x_coordinate_1d": 595, "y_coordinate_1d": 595, "projection_info": 595, "lon_origin": 595, "attr": 595, "longitude_of_projection_origin": 595, "perspective_point_height": 595, "semi_major_axi": 595, "r_eq": 595, "r_pol": 595, "semi_minor_axi": 595, "matric": 595, "x_coordinate_2d": 595, "y_coordinate_2d": 595, "meshgrid": [595, 619, 644], "lambda_0": 595, "a_var": 595, "b_var": 595, "c_var": 595, "r_": 595, "s_x": 595, "s_y": 595, "s_z": 595, "conu": 595, "seterr": 595, "abi_lat": 595, "arctan": 595, "abi_lon": 595, "crop": 595, "our": [595, 597, 600, 615, 616, 619, 625, 626, 645, 647, 648, 654, 658], "interest": [595, 597, 598, 599, 601, 602, 619, 647], "circ": 595, "95": [595, 597, 645, 666], "nan_to_num": 595, "9999": [595, 666], "lat_rang": 595, "lon_rang": 595, "lat_min": 595, "lat_max": 595, "lat_min_bound": 595, "argmin": 595, "ab": 595, "lat_max_bound": 595, "lon_min": 595, "lon_max": 595, "lon_min_bound": 595, "lon_max_bound": 595, "a1": [595, 598, 602, 633], "disoveri": 595, "toolkit": [595, 598, 599, 601, 602, 660, 661, 662, 664, 665, 666], "5439": [595, 598, 602], "1467901": 595, "page": [595, 600, 604, 607], "autom": [595, 601, 602], "catalogu": 595, "adam": [595, 604], "theisen": 595, "geometri": [595, 601, 604], "cell_track_info": 595, "read_csv": [595, 597], "raw": [595, 610, 611, 620], "githubusercont": 595, "com": [595, 605, 616, 637, 668, 669, 671], "adamtheisen": [595, 604], "cell": [595, 602, 604, 636, 655], "stat": [595, 604], "houcsapr": 595, "20220617": 595, "index_col": 595, "parse_d": 595, "unnam": 595, "scan_mod": [595, 598, 604], "template_nam": 595, "azimuth_min": 595, "azimuth_max": 595, "elevation_min": 595, "elevation_max": 595, "range_min": 595, "range_max": 595, "cell_azimuth": 595, "cell_rang": 595, "cell_zh": 595, "ngates_gt_0": 595, "ngates_gt_10": 595, "ngates_gt_30": 595, "ngates_gt_50": 595, "ngates_gt_10_5km": 595, "ngates_gt40_5km": 595, "03": [595, 598, 615, 642, 651, 657, 667], "hou": 595, "303": [595, 604], "74450": 595, "637207": 595, "383545": 595, "109900": 595, "297": 595, "59216": 595, "307": [595, 604], "63367": 595, "021240": 595, "988037": 595, "910767": 595, "700": [595, 598, 601, 604], "930866": 595, "78": 595, "302": 595, "64587": 595, "645874": 595, "1800": [595, 597, 660], "776333": 595, "55798": 595, "59094": 595, "97546": 595, "99744": 595, "975464": 595, "900": [595, 660], "972101": 595, "46": [595, 645], "2826": 595, "301": [595, 604], "48132": 595, "50330": 595, "648193": 595, "382324": 595, "503296": 595, "62400": 595, "327583": 595, "990": 595, "989": [595, 604], "210": [595, 648], "995": [595, 604], "2827": 595, "305": [595, 604, 647, 651, 667], "70007": 595, "404297": 595, "700073": 595, "13600": 595, "29": [595, 598], "037998": 595, "2828": 595, "23510": 595, "26807": 595, "235107": 595, "459156": 595, "2829": 595, "296": [595, 604], "08704": 595, "306": [595, 604], "16150": 595, "999268": 595, "998291": 595, "646362": 595, "59100": 595, "882927": 595, "807": 595, "783": [595, 604], "27": [595, 599, 645, 648, 651, 667], "63": [595, 666], "830": 595, "2830": 595, "05835": 595, "08032": 595, "058350": 595, "62800": 595, "198204": 595, "767": [595, 604], "76": 595, "773": [595, 604], "2831": 595, "notebook": [595, 597, 598, 603, 604, 610, 611, 613, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 661, 664, 665, 671], "much": [595, 597, 598, 599, 601, 602, 604, 644, 662, 664, 665], "frequent": 595, "start_hour": 595, "end_hour": 595, "utc": [595, 597, 598, 599, 602, 615, 616, 639], "48": [595, 597, 622], "04": [595, 598, 601, 612, 623, 642, 645, 651, 657, 667], "26": 595, "38": [595, 598, 616], "57": [595, 647, 648], "rjackson": [595, 619], "paw": 595, "houcsapr2cfrs2": 595, "20220712": 595, "200714": 595, "easili": [595, 601], "eol": 595, "cgi": 595, "codiac": 595, "fgr_form": 595, "016": 595, "densiti": [595, 649], "lma_d": 595, "lylout_220712_000000_86400_map500m": 595, "afternoon": 595, "203229": 595, "lylout_220617_000000_86400_map500m": 595, "radarmapdisplai": [595, 597, 601, 602, 604, 615, 616, 619, 627, 633, 645, 654, 656, 660, 661, 662, 664, 665], "subplot": [595, 597, 598, 599, 601, 602, 604, 615, 619, 625, 626, 627, 639, 644, 645, 646, 647, 648, 649, 650, 654, 662], "subplot_kw": 595, "disp": 595, "graph": [595, 596, 597, 598, 599, 601, 602, 604, 610, 611, 615, 616, 619, 620, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 654, 655, 656, 660, 661, 662, 664, 665], "150": [595, 596, 632, 662], "plot_ppi_map": [595, 597, 601, 602, 604, 615, 616, 619, 627, 633, 645, 654, 661, 662, 665], "flash_tim": 595, "squeez": [595, 660], "argwher": [595, 619], "logical_and": [595, 619], "flash_time_start": 595, "17t20": 595, "scatter": [595, 597, 601, 602, 626, 645], "flash_center_longitud": 595, "flash_center_latitud": 595, "set_xlim": [595, 640, 644, 649], "96": [595, 597, 598, 619, 658, 665], "94": [595, 666], "set_ylim": [595, 640, 644, 649], "deprecationwarn": [595, 664], "escap": 595, "sequenc": [595, 599], "xf": 595, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 595, "ipykernel_41252": 595, "2371313213": 595, "opt": [595, 596, 598, 599, 604], "anaconda3": [595, 598, 599, 658, 661, 664, 668, 671], "env": [595, 596, 598, 599, 601, 602, 604, 610, 616, 658, 661, 664, 671], "pyart_env2": 595, "lib": [595, 598, 599, 601, 602, 610, 616, 661, 664, 668], "python3": [595, 598, 599, 601, 602, 603, 610, 616], "mpl": [595, 604, 649, 661, 664], "gridlin": [595, 599, 601, 627], "451": [595, 598], "userwarn": [595, 602, 610, 616], "xlabels_top": [595, 599], "deprec": [595, 599, 607, 661, 664], "top_label": [595, 601, 627], "toggl": [595, 604], "visibl": [595, 599, 604], "ylabels_right": [595, 599], "right_label": [595, 601, 627], "strike": 595, "overlaid": 595, "csapr_rhi": 595, "203012": 595, "flash_alt": 595, "flash_init_altitud": 595, "flash_lon": 595, "flash_init_longitud": 595, "flash_lat": 595, "flash_init_latitud": 595, "rhi_lon": 595, "flatten": [595, 619], "rhi_lat": 595, "rhi_alt": 595, "kdtree_data": 595, "stack": [595, 598, 601, 605, 668, 669], "inp_data": 595, "where_in_rhi": 595, "flash_rang": 595, "1e3": 595, "motiv": [596, 599], "blog": [596, 601, 604, 605, 669], "come": [596, 599, 647], "colorschem": 596, "vision": 596, "defici": 596, "illustr": 596, "collabor": 596, "contributor": [596, 607, 658, 670], "guidenc": 596, "ve": 596, "trip": [596, 665], "me": 596, "assist": 596, "https_link_to_your_fork": 596, "unfamiliar": 596, "yml": [596, 604, 658, 671], "slightli": [596, 599, 627], "latest": [596, 604, 605, 658, 669], "button": [596, 600, 607], "kshrc": 596, "export": [596, 668, 671], "pip": [596, 605, 668, 669, 671], "checkout": [596, 605, 607, 669], "newblog_post": 596, "plot_ppi_mdv": [596, 632, 642, 667], "radardisplai": [596, 597, 598, 602, 604, 610, 611, 620, 625, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 641, 644, 646, 649], "jonathan": [596, 610, 611, 621, 622, 629, 630, 632, 634, 638, 641, 671], "helmu": [596, 599, 601, 605, 610, 611, 621, 622, 629, 630, 632, 634, 638, 641, 658, 660, 661, 662, 664, 665, 666, 669, 671], "jhelmu": [596, 604, 610, 611, 621, 622, 629, 630, 632, 634, 638, 641], "anl": [596, 610, 611, 615, 616, 619, 621, 622, 625, 626, 627, 629, 630, 631, 632, 634, 636, 637, 638, 639, 641, 645, 646, 654, 655, 656], "licens": [596, 605, 610, 611, 615, 616, 619, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658, 669], "bsd": [596, 605, 610, 611, 615, 616, 619, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658, 669], "claus": [596, 605, 610, 611, 615, 616, 619, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 669], "get_test_data": [596, 610, 611, 619, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 654, 655, 656], "110635": [596, 621, 632, 664], "figsiz": [596, 597, 598, 599, 601, 602, 610, 611, 615, 616, 619, 620, 625, 626, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 646, 647, 648, 649, 654, 661, 662, 664, 665], "add_subplot": [596, 610, 611, 620, 621, 622, 629, 630, 631, 632, 634, 635, 636, 637, 638, 641], "111": [596, 597, 599, 602, 619, 621, 622, 627, 630, 631, 632, 636, 637, 638, 645], "get_cmap": [596, 628, 647, 648], "jet": 596, "colorbind": 596, "pyart_homeyerrainbow": [596, 598, 619, 625, 626, 627, 632, 635, 639, 640, 646], "plot_rhi_cfradial_singlescan": [596, 635, 642, 667], "panel": [596, 602, 613, 624, 642, 644, 667], "sgpxsaprrhicmaci5": [596, 634, 635, 639, 644], "c0": [596, 610, 634, 635, 639, 644, 661], "20110524": [596, 634, 635, 639, 644], "015604_nc4": [596, 634, 635, 639, 644], "read_cfradi": [596, 610, 619, 622, 626, 634, 635, 639, 644, 649, 650], "subplots_adjust": [596, 598, 625, 634, 635], "hspace": [596, 598, 634, 635], "xlabel": [596, 598, 619, 634, 635, 662], "ylabel": [596, 598, 619, 634, 635, 662], "stage": 596, "my": [596, 668], "untrack": [596, 605, 669], "blog_pr": 596, "restor": 596, "discard": 596, "_static": 596, "As": [596, 598, 605, 660, 662, 664, 665, 669], "statement": [596, 604, 605, 669], "hint": [596, 599, 606], "wait": [596, 599], "editor": [596, 603, 605, 669, 671], "enh": [596, 604], "abort": 596, "person": 596, "addition": [596, 599], "anyon": 596, "respond": 596, "walk": [597, 598, 601, 602, 603], "septemb": 597, "2021": [597, 647, 648], "thunderstorm": 597, "southern": 597, "wisconsin": [597, 604], "illinoi": 597, "trail": 597, "damag": [597, 601], "milwauke": [597, 601], "madison": 597, "imageri": [597, 601], "russ": 597, "schumach": 597, "colorado": 597, "unvers": 597, "put": 597, "togeth": [597, 598, 599, 604], "hi": [597, 648], "glob": [597, 598, 601, 602, 605, 669], "math": 597, "atan2": 597, "tempfil": 597, "cfeatur": [597, 599, 601, 602], "mcolor": [597, 599, 628, 647, 648], "mdate": 597, "uscounti": [597, 601], "imageio": 597, "pytz": [597, 604], "temploc": 597, "mkdtemp": 597, "filterwarn": [597, 598, 599, 601, 619], "let": [597, 598, 599, 600, 602, 604, 605, 615, 616, 619, 625, 627, 644, 645, 647, 648, 654, 660, 662, 664, 665, 666, 669, 671], "machin": [597, 598, 601, 602, 671], "kmkx": [597, 601], "nexrad_path": 597, "level2": [597, 601, 604, 615, 616, 628, 647, 648], "d_": 597, "kmkx20210907_170101_v06": 597, "kmkx20210907_170739_v06": 597, "kmkx20210907_171431_v06": 597, "kmkx20210907_172123_v06": 597, "kmkx20210907_172814_v06": 597, "kmkx20210907_173452_v06": 597, "kmkx20210907_174130_v06": 597, "kmkx20210907_174807_v06": 597, "kmkx20210907_175459_v06": 597, "kmkx20210907_175459_v06_mdm": 597, "read_nexrad_arch": [597, 601, 615, 616, 628, 629, 630, 647, 648], "possibli": 597, "add_featur": [597, 599, 601, 602], "pyart_chasespectr": [597, 601, 602, 655, 656], "70": [597, 598, 601, 615, 619, 626, 656], "set_ext": 597, "easier": [597, 598, 599], "scroll": 597, "radar_id": 597, "timestamp": [597, 598], "tz_local": 597, "later": [597, 599, 661, 664], "interfac": [597, 602, 604], "conn": 597, "nexradawsinterfac": 597, "get_avail_scans_in_rang": 597, "len": [597, 625, 639, 649, 660], "kmkx20210907_151132_v06": 597, "kmkx20210907_152621_v06": 597, "kmkx20210907_150152_v06": 597, "kmkx20210907_151622_v06": 597, "kmkx20210907_152121_v06": 597, "kmkx20210907_150642_v06": 597, "kmkx20210907_155424_v06_mdm": 597, "kmkx20210907_153610_v06": 597, "kmkx20210907_154814_v06": 597, "kmkx20210907_155424_v06": 597, "kmkx20210907_154205_v06": 597, "kmkx20210907_160034_v06": 597, "kmkx20210907_160607_v06": 597, "kmkx20210907_161141_v06": 597, "kmkx20210907_163532_v06": 597, "kmkx20210907_161714_v06": 597, "kmkx20210907_162924_v06": 597, "kmkx20210907_164816_v06": 597, "kmkx20210907_165433_v06": 597, "kmkx20210907_165433_v06_mdm": 597, "kmkx20210907_162247_v06": 597, "kmkx20210907_153134_v06": 597, "kmkx20210907_164149_v06": 597, "kmkx20210907_182057_v06": 597, "kmkx20210907_182749_v06": 597, "kmkx20210907_184048_v06": 597, "kmkx20210907_180841_v06": 597, "kmkx20210907_183440_v06": 597, "kmkx20210907_185431_v06_mdm": 597, "kmkx20210907_181448_v06": 597, "kmkx20210907_180150_v06": 597, "kmkx20210907_185431_v06": 597, "kmkx20210907_190109_v06": 597, "kmkx20210907_190703_v06": 597, "kmkx20210907_193238_v06": 597, "kmkx20210907_191951_v06": 597, "kmkx20210907_191327_v06": 597, "kmkx20210907_195642_v06": 597, "kmkx20210907_194459_v06": 597, "kmkx20210907_195642_v06_mdm": 597, "kmkx20210907_193849_v06": 597, "kmkx20210907_184739_v06": 597, "kmkx20210907_192614_v06": 597, "kmkx20210907_195056_v06": 597, "now": [597, 598, 599, 601, 602, 604, 616, 619, 620, 625, 627, 645, 647, 648, 654, 660, 662, 668], "predict": 597, "tornado": [597, 601], "offic": [597, 599, 601, 660, 661, 662, 664, 665, 666], "acces": 597, "internet": 597, "wcm": 597, "2021_wind": 597, "read_spc_report": 597, "start_tim": 597, "end_tim": 597, "hazard": 597, "timezon": 597, "gmt": 597, "torn": 597, "df": 597, "datafram": 597, "conver": 597, "to_datetim": [597, 598, 601], "set_index": 597, "inplac": 597, "ambigu": 597, "nat": 597, "nonexist": 597, "shift_forward": 597, "tz_convert": 597, "timedelta": [597, 601], "wind_report": 597, "tornado_report": 597, "hail_report": 597, "om": 597, "yr": 597, "mo": 597, "st": 597, "stf": 597, "stn": 597, "elon": 597, "wid": 597, "sn": 597, "sg": 597, "f1": 597, "f2": 597, "f3": 597, "f4": 597, "657521": 597, "tx": 597, "7500": [597, 660], "331": [597, 604], "657522": 597, "4300": 597, "657523": 597, "0500": 597, "167": 597, "657524": 597, "0200": 597, "657525": 597, "1595": 597, "663777": 597, "sc": 597, "0100": [597, 602], "663778": 597, "663779": 597, "2200": 597, "663780": 597, "1900": 597, "49": [597, 598], "663781": 597, "1100": [597, 604], "6261": 597, "gc_latlon_bear_dist": 597, "lat1": 597, "lon1": 597, "decim": 597, "lat2": 597, "lon2": 597, "lat1r": 597, "deg2rad": 597, "lon1r": 597, "bearr": 597, "lat2r": 597, "lon2r": 597, "rad2deg": [597, 650], "add_scale_lin": 597, "fontsiz": [597, 598, 599, 602, 610, 611, 625, 627, 636, 637], "fontweight": 597, "zoom": [597, 598], "black": [597, 604, 626, 644, 645], "frac_lat": 597, "frac_lon": 597, "e1": 597, "get_ext": 597, "center_lon": 597, "center_lat": 597, "shorten": 597, "hash": [597, 607], "lat1a": 597, "lon1a": 597, "lat1b": 597, "lon1b": 597, "lat2a": 597, "lon2a": 597, "lat2b": 597, "lon2b": 597, "horizontalalign": 597, "verticalalign": 597, "enumer": 597, "iter_success": 597, "mdm": 597, "this_tim": 597, "open_pyart": 597, "map_panel_ax": [597, 640], "x_cut_panel_ax": [597, 640], "y_cut_panel_ax": [597, 640], "masking_data_with_gatefilt": [597, 604], "ax1": [597, 598, 602, 610, 611, 626, 640, 641, 644, 647, 648, 654], "add_ax": [597, 640], "recogniz": 597, "with_scal": 597, "500k": 597, "grai": [597, 599, 601, 627, 628, 644], "plot_colorbar": 597, "pad": 597, "plot_range_r": [597, 604, 620, 630, 631, 633], "dash": [597, 599, 637], "set_xtick": [597, 644, 661, 664], "arang": [597, 602, 605, 619, 633, 636, 637, 644, 645, 649, 650, 669], "set_ytick": [597, 644, 661, 664], "wind_reports_now": 597, "slon": 597, "tolist": 597, "slat": 597, "facecolor": [597, 599, 601], "deepskyblu": 597, "tornado_reports_now": 597, "tab": [597, 607, 626], "red": [597, 636, 637], "hail_reports_now": 597, "lawngreen": 597, "legend": [597, 601, 602, 626], "savefig": [597, 599, 601], "_dz_rpt": 597, "bbox_inch": 597, "tight": 597, "white": [597, 599, 636], "mp4": 597, "map_imag": 597, "gif_titl": 597, "delet": [597, 604, 605, 627, 669], "gif": 597, "get_writ": 597, "fp": 597, "writer": [597, 604], "imread": 597, "append_data": 597, "ffmpeg_writ": 597, "divis": [597, 604], "macro_block_s": 597, "resiz": 597, "1930": 597, "1766": 597, "1936": 597, "1776": 597, "video": 597, "codec": 597, "player": 597, "incompat": [597, 604, 608], "ipython": [597, 601, 603, 671], "browser": 597, "event": [597, 602, 647, 648], "overview": [597, 600, 607], "retrospect": 597, "ecosystem": 598, "By": [598, 599, 602, 608], "learn": [598, 658], "portal": [598, 599], "march": [598, 601, 615], "shown": [598, 625], "offici": [598, 605, 669], "probe": 598, "millimet": 598, "ghz": 598, "purpos": [598, 599, 647, 648], "nearli": [598, 636], "bokeh": 598, "formatt": 598, "datetimetickformatt": 598, "hv": 598, "guckazrcfrgem1": 598, "20220314": 598, "000003": 598, "0x7f7dbd517400": 598, "linear_depolarization_ratio": 598, "mean_doppler_velocity_crosspolar_v": 598, "reflectivity_crosspolar_v": 598, "signal_to_noise_ratio_copolar_h": [598, 602], "signal_to_noise_ratio_crosspolar_v": 598, "spectral_width": 598, "spectral_width_crosspolar_v": 598, "vertical": 598, "awai": [598, 599], "pyart_bal": [598, 599, 602, 619, 639, 654, 662], "substanti": 598, "211": [598, 641], "ax2": [598, 602, 610, 611, 619, 626, 640, 641, 644, 646, 647, 648, 654, 662], "212": [598, 641], "pangeo": 598, "1736": 598, "600": [598, 660], "r_calib": 598, "14t00": 598, "489e": 598, "806e": 598, "107": 598, "886e": 598, "command_lin": 598, "kazrcfr_ingest": 598, "guc": 598, "m1": 598, "process_vers": 598, "kazrcfr": 598, "el7": 598, "dod_vers": 598, "kazrcfrg": 598, "input_sourc": 598, "guckazrm1": 598, "kazr_moments_": 598, "site_id": 598, "software_vers": 598, "wed": 598, "mar": 598, "leachman": 598, "1498936": 598, "histori": [598, 666], "dsmgr": 598, "procnode2": 598, "1736rang": 598, "600frequenc": 598, "1sweep": 598, "1r_calib": 598, "1coordin": 598, "453818": 598, "startstandard_nam": 598, "timearrai": 598, "453818000": 598, "527426000": 598, "601027000": 598, "002026000": 598, "075634000": 598, "149219000": 598, "float323": 598, "10long_nam": 598, "transmit": [598, 662], "frequencyunit": 598, "hzstandard_nam": 598, "radiation_frequencymeta_group": 598, "instrument_parametersarrai": 598, "float32100": 598, "130": 598, "803e": 598, "04long_nam": 598, "volumeunit": 598, "mmeters_between_g": 598, "979246meters_to_center_of_first_g": 598, "679245spacing_is_const": 598, "truestandard_nam": 598, "projection_range_coordinateaxi": 598, "radial_range_coordinatearrai": 598, "679245": 598, "6585": 598, "160": [598, 650, 664], "63774": 598, "17998": 598, "18028": 598, "268": [598, 626, 642, 667], "18058": 598, "248": 598, "northunit": 598, "degreestandard_nam": 598, "sensor_to_target_azimuth_angleaxi": 598, "radial_azimuth_coordinatearrai": 598, "planeunit": 598, "sensor_to_target_elevation_angleaxi": 598, "radial_elevation_coordinatearrai": 598, "00long_nam": 598, "epochancillary_vari": 598, "time_offsetarrai": 598, "base_timeancillary_vari": 598, "base_timearrai": 598, "unspecifiedunit": 598, "dbstandard_nam": 598, "radar_linear_depolarization_ratiounpacking_detail": 598, "unpack": 598, "pack": [598, 604], "1041600": 598, "motion": 598, "instrumentunit": 598, "sstandard_nam": 598, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 598, "crosspolar": 598, "channelunit": 598, "factorunit": 598, "dbzstandard_nam": 598, "equivalent_reflectivity_factorunpacking_detail": 598, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 598, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 598, "widthunit": 598, "radar_doppler_spectrum_widthunpacking_detail": 598, "angleunit": 598, "degreearrai": 598, "n_sampl": 598, "momentsunit": 598, "1meta_group": 598, "instrument_parametersstandard_nam": 598, "number_of_samples_used_to_compute_momentsarrai": 598, "noise_figur": 598, "methodunit": 598, "dbarrai": 598, "67": [598, 647, 648], "8043": 598, "unambigu": [598, 666], "velocityunit": 598, "smeta_group": 598, "968252": 598, "repetit": 598, "timeunit": 598, "sarrai": 598, "00027": 598, "transmitt": 598, "r_calib_radar_constant_copol": 598, "copolarunit": 598, "dbmeta_group": 598, "radar_calibrationstandard_nam": 598, "calibrated_radar_constant_h_channelarrai": 598, "996191": 598, "r_calib_radar_constant_crosspol": 598, "crosspolarunit": 598, "405288": 598, "r_calib_two_way_radome_loss_h": 598, "radom": 598, "loss": 598, "radar_calibration_two_way_radome_loss_h_channelarrai": 598, "half": 598, "radar_measured_sky_noise_h": 598, "sky": 598, "dbmarrai": 598, "69": [598, 633], "03703": 598, "035995": 598, "0373": 598, "03814": 598, "05106": 598, "05984": 598, "radar_measured_sky_noise_v": 598, "radar_measured_transmit_pow": 598, "powerunit": 598, "dbmmeta_group": 598, "radar_transmit_powerarrai": 598, "143": [598, 650], "receiver_gain_copol": 598, "copolunit": 598, "sweepunit": 598, "1735": 598, "s22": 598, "basedunit": 598, "unambiguous_rang": [598, 666], "rangeunit": 598, "mmeta_group": 598, "unambiguous_rangearrai": 598, "40479": 598, "477": [598, 604], "degree_nstandard_nam": 598, "latitudevalid_min": 598, "0valid_max": 598, "0arrai": 598, "956158": 598, "degree_estandard_nam": 598, "longitudevalid_min": 598, "106": 598, "987854": 598, "altitudeunit": 598, "mstandard_nam": 598, "altitudearrai": 598, "2886": 598, "levelunit": 598, "heightarrai": 598, "m1convent": 598, "radar_calibrationprocess_vers": 598, "el7dod_vers": 598, "1input_sourc": 598, "kazr_moments_20220314": 598, "000005": 598, "datsite_id": 598, "gucplatform_id": 598, "kazrcfrgefacility_id": 598, "m1data_level": 598, "a1location_descript": 598, "laboratori": 598, "sail": 598, "mt": 598, "crest": 598, "butt": [598, 599], "coloradodatastream": 598, "a1antenna_altitud": 598, "mantenna_diamet": 598, "mcomment": 598, "digital_rx_dec": 598, "24dualpol": 598, "0fft_len": 598, "512filter_length": 598, "67institut": 598, "radiat": [598, 599, 601, 602, 605, 658, 660, 661, 662, 664, 665, 666, 669], "research": [598, 599, 601, 605, 658, 660, 661, 662, 664, 665, 666, 669], "facilityn_g": 598, "1024num_spectral_averag": 598, "15pulse_compression_ratio": 598, "3range_gate_spacing_m": 598, "979246range_offset_ch1": 598, "mrange_offset_ch2": 598, "mscan_mod": 598, "pointingscan_nam": 598, "vptsoftware_vers": 598, "leachmantitl": 598, "momentsdoi": 598, "1498936histori": 598, "isel": 598, "coupl": [598, 602], "extra": [598, 601, 604], "won": 598, "600rang": 598, "600coordin": 598, "395940000": 598, "469427000": 598, "542946000": 598, "360000": 598, "quadmesh": [598, 599], "0x7f7dad654f10": 598, "meant": [598, 600], "popular": [598, 601], "jump": 598, "bar": 598, "hover": 598, "inspect": 598, "clabel": [598, 636, 637], "xformatt": 598, "ref_plot": 598, "7000": [598, 664], "platform_id": 598, "location_descript": 598, "xtick": [598, 661, 664], "ytick": [598, 661, 664], "vel_plot": 598, "prepar": [598, 599, 601, 602, 605, 660, 661, 662, 664, 665, 666, 669], "plot1": 598, "plot2": 598, "datashad": 598, "lazili": 598, "coars": 598, "intial": 598, "unfortun": 598, "ref_plot_rast": 598, "param": [598, 604], "dynamic_oper": 598, "outofboundsdatetim": 598, "nanosecond": 598, "54168": 598, "invok": 598, "x_rang": 598, "13t23": 598, "417014000": 598, "579705000": 598, "y_rang": 598, "traceback": 598, "recent": [598, 604, 671], "mgrover": [598, 601, 602, 615, 619, 625, 626, 631, 639, 645, 646, 654, 655, 656], "277": [598, 604], "get_plot_fram": 598, "map_obj": 598, "1344": 598, "val": 598, "_execute_callback": 598, "tuple_kei": 598, "retval": 598, "callback": 598, "arg": 598, "708": 598, "__call__": 598, "ret": 598, "__init__": [598, 605, 616, 669], "1043": [598, 604], "obj": 598, "resolv": [598, 604], "1032": [598, 604], "1044": 598, "1036": 598, "_process": 598, "1018": [598, 604], "process_el": 598, "194": 598, "_appli": 598, "141": 598, "1514": 598, "predic": [598, 602], "207": 598, "pipelined_fn": 598, "method_fn": 598, "1223": 598, "super": [598, 630, 661, 664], "710": [598, 604], "map_fn": 598, "214": 598, "1133": [598, 604], "astyp": 598, "int64": 598, "1497": [598, 604], "apply_ufunc": 598, "1159": 598, "apply_dataarray_vfunc": 598, "286": [598, 604], "result_var": 598, "data_var": 598, "750": [598, 604], "apply_variable_ufunc": 598, "as_compatible_data": 598, "234": 598, "_possibly_convert_object": 598, "178": 598, "asarrai": 598, "ravel": 598, "reshap": 598, "sanitize_arrai": 598, "567": [598, 604], "subarr": 598, "_try_cast": 598, "raise_cast_failur": 598, "726": [598, 604], "sanitize_to_nanosecond": 598, "arr": 598, "cast": 598, "1717": 598, "ensure_datetime64n": 598, "_lib": 598, "tslib": 598, "pyx": [598, 604], "257": 598, "np_datetim": 598, "120": [598, 660], "check_dts_bound": 598, "saw": 598, "few": [598, 604, 607, 671], "pro": 598, "con": 598, "thing": [598, 605, 669], "clear": [598, 602], "push": [598, 604, 605, 607, 669], "share": 598, "ran": [598, 605, 669], "shareabl": 598, "workflow": [598, 601, 604], "mb": [598, 612, 617, 623, 642, 651, 652, 657, 667], "difficult": [598, 619], "jupyterbook": 598, "jupyt": [598, 601, 604, 610, 611, 613, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 671], "campaign": [598, 602, 648], "twitter": 599, "nou": 599, "dryglick": 599, "notic": [599, 602, 604, 619, 627], "odd": 599, "directli": [599, 625], "grei": 599, "darker": 599, "moir\u00e9": 599, "ryan": 599, "dopplershift": [599, 604], "turbul": 599, "forecast": 599, "ncei": 599, "search": [599, 658, 668], "aw": [599, 601, 604, 613, 614, 616, 617, 667], "mention": [599, 604, 605, 658, 669, 671], "he": 599, "n0u": [599, 615], "elgin": 599, "panhandl": 599, "kevx": 599, "1458": 599, "octob": 599, "landfal": 599, "gulf": 599, "lookl": 599, "webpag": 599, "cart": 599, "sent": 599, "email": [599, 602, 604], "websit": 599, "ftp": 599, "unzip": [599, 601], "kmob_sdus54_n0uevx_201810101458": 599, "partli": [599, 601, 660, 661, 662, 664, 665, 666], "facil": [599, 601, 602, 605, 658, 660, 661, 662, 664, 665, 666, 669], "cite": [599, 601, 602, 604, 660, 661, 662, 664, 665, 666], "jj": [599, 601, 660, 661, 662, 664, 665, 666], "sm": [599, 601, 660, 661, 662, 664, 665, 666], "colli": [599, 601, 605, 658, 660, 661, 662, 664, 665, 666, 669], "jor": [599, 601, 605, 658, 660, 661, 662, 664, 665, 666, 669], "5334": [599, 601, 605, 658, 660, 661, 662, 664, 665, 666, 669], "119": [599, 601, 605, 616, 630, 642, 658, 660, 661, 662, 664, 665, 666, 667, 669], "read_level3": 599, "dark": 599, "dark_background": 599, "okai": 599, "88": [599, 601, 645], "83": 599, "31msignatur": [599, 602], "0m": [599, 601, 602], "0mdisplai": 599, "34m": [599, 602], "0mplot_ppi_map": 599, "0mfield": 599, "0msweep": 599, "36m0": 599, "0mmask_tupl": 599, "32mnone": [599, 602], "0mvmin": 599, "0mvmax": 599, "0mcmap": 599, "0mnorm": 599, "0mmask_outsid": 599, "32mfals": 599, "0mtitl": 599, "0mtitle_flag": 599, "32mtrue": 599, "0mcolorbar_flag": 599, "0mcolorbar_label": 599, "0max": 599, "0mfig": 599, "0mlat_lin": 599, "0mlon_lin": 599, "0mproject": 599, "0mmin_lon": 599, "0mmax_lon": 599, "0mmin_lat": 599, "0mmax_lat": 599, "0mwidth": 599, "0mheight": 599, "0mlon_0": 599, "0mlat_0": 599, "0mresolut": 599, "0mshapefil": 599, "0mshapefile_kwarg": 599, "0medg": 599, "0mgatefilt": 599, "0mfilter_transit": 599, "0membelish": 599, "0mraster": 599, "0mtick": 599, "0mticklab": 599, "0malpha": 599, "31msourc": 599, "32mdef": 599, "0mself": 599, "embelish": [599, 604], "31m": 599, "0mparse_vmin_vmax": 599, "0m_radar": 599, "0mparse_cmap": 599, "32mif": 599, "32mi": 599, "0mnp": 599, "0marang": 599, "36m30": 599, "36m46": 599, "36m1": 599, "36m110": 599, "36m75": 599, "0mloc": 599, "0mdata": 599, "0m_get_data": 599, "0mx": 599, "0my": 599, "0m_get_x_i": 599, "0mma": 599, "0mmasked_outsid": 599, "0mplt": 599, "0mgcf": 599, "32mnot": 599, "0mhasattr": 599, "32mels": 599, "0mcartopi": 599, "0mcr": 599, "0mlambertconform": 599, "0mcentral_longitud": 599, "0mcentral_latitud": 599, "0mwarn": 599, "overrid": [599, 637], "lambert": [599, 604], "0muserwarn": 599, "0mset_ext": 599, "0mplatecarre": 599, "32melif": 599, "36m2": 599, "0mgrid_project": 599, "0mpm": 599, "0mpcolormesh": 599, "36m1000": 599, "0mtransform": 599, "graphic": 599, "0mset_raster": 599, "admin": [599, 605, 669], "0mstates_provinc": 599, "0mfeatur": 599, "0mnaturalearthfeatur": 599, "0mcategori": 599, "cultur": 599, "0mname": 599, "admin_1_states_provinces_lin": 599, "0mscale": 599, "0mfacecolor": 599, "0mcoastlin": 599, "0madd_featur": 599, "0medgecolor": 599, "pose": 599, "difficulti": 599, "spectif": 599, "32min": 599, "0mmercat": 599, "0mgl": 599, "0mgridlin": 599, "0mxloc": 599, "0myloc": 599, "0mdraw_label": 599, "0mxlabels_top": 599, "0mylabels_right": 599, "0misinst": 599, "0mfigur": 599, "0mcanva": 599, "0mdraw": 599, "maker": 599, "0mxaxi": 599, "0mset_major_formatt": 599, "0mmpl": 599, "0mlongitude_formatt": 599, "0myaxi": 599, "0mlatitude_formatt": 599, "0m_lambert_gridlin": 599, "0mlambert_xtick": 599, "0mlambert_ytick": 599, "32mfrom": 599, "0mio": 599, "0mshaperead": 599, "32mimport": 599, "0mreader": 599, "0madd_geometri": 599, "0mgeometri": 599, "0m_set_titl": 599, "0mplot": 599, "0mappend": 599, "0mplot_var": 599, "0mplot_colorbar": 599, "0mmappabl": 599, "0mlabel": 599, "32mreturn": 599, "31mfile": [599, 602], "git_repo": 599, "31mtype": [599, 602], "fashion": 599, "0marg": 599, "0mshade": 599, "0mantialias": 599, "0mkwarg": 599, "31mdocstr": [599, 602], "pseudocolor": 599, "signatur": [599, 601], "quadrilater": 599, "pcolor": 599, "prefer": [599, 604, 668], "ref": [599, 616, 640, 648], "shade": [599, 604], "flat": [599, 615], "gouraud": 599, "cari": 599, "expand": 599, "rc": 599, "regist": [599, 602], "canon": 599, "chosen": 599, "patch": [599, 636], "force_edgecolor": 599, "singular": 599, "opaqu": 599, "solid": [599, 637], "quad": 599, "halfwai": 599, "galleri": [599, 604, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656, 658, 667], "images_contours_and_field": 599, "pcolormesh_grid": 599, "snap": 599, "mesh": 599, "misc": [599, 604], "rasterization_demo": 599, "constructor": 599, "agg_filt": 599, "anim": 599, "antialias": [599, 636, 637], "aa": 599, "capstyl": 599, "clip_box": 599, "bbox": 599, "clip_on": 599, "clip_path": 599, "rgba": 599, "ec": 599, "fc": 599, "gid": 599, "hatch": 599, "in_layout": 599, "joinstyl": 599, "miter": 599, "bevel": 599, "thereof": 599, "offset_transform": 599, "path_effect": 599, "abstractpatheffect": 599, "picker": 599, "pickradiu": 599, "sketch_param": 599, "random": [599, 602], "zorder": 599, "imshow": [599, 604, 620, 621, 622, 625], "_ax": 599, "nrow": [599, 625], "ncolumn": 599, "_differ": 599, "li": 599, "handl": [599, 604], "polycollect": 599, "thu": [599, 607], "almost": 599, "slight": 599, "polygon": 599, "irrespect": 599, "One": [599, 605, 660, 666, 669, 671], "masked_arrai": [599, 660, 666], "1e": [599, 660, 666], "next": [599, 601, 607, 615, 644], "get_gate_lat_lon_alt": [599, 602, 604], "565": [599, 604], "562763": 599, "560526": 599, "888458": 599, "886227": 599, "883991": 599, "562765": 599, "560532": 599, "892834": 599, "890606": 599, "888374": 599, "562769": 599, "56054": 599, "898003": 599, "89578": 599, "893553": 599, "562756": 599, "560509": 599, "880096": 599, "877857": 599, "875618": 599, "560513": 599, "881853": 599, "879616": 599, "877377": 599, "56276": 599, "560518": 599, "884874": 599, "88264": 599, "880404": 599, "92199": 599, "92222": 599, "92245": 599, "186806": 599, "18703": 599, "18723": 599, "922264": 599, "92254": 599, "2396": 599, "23986": 599, "24012": 599, "92231": 599, "92263": 599, "29231": 599, "29262": 599, "29292": 599, "92208": 599, "92218": 599, "02802": 599, "02811": 599, "0282": 599, "92212": 599, "92226": 599, "07571": 599, "07583": 599, "07595": 599, "922356": 599, "133934": 599, "1341": [599, 604], "13428": 599, "setup": [599, 602, 604, 615, 619, 625, 626, 631, 645, 658, 668], "geoaxi": 599, "border": [599, 636], "cbar": [599, 627], "tick_param": 599, "labels": 599, "set_label": [599, 627], "gl": [599, 601, 627], "draw_label": [599, 601, 627], "xlabel_styl": [599, 627], "ylabel_styl": [599, 627], "kevz_velocity_2018_10_10_1458": 599, "specifici": 599, "pull": [599, 604, 605, 606, 607, 616, 669], "pr": [599, 607], "importantli": 599, "api": [599, 604, 658], "abil": [599, 604, 658, 671], "arguement": 599, "explor": [599, 601], "appreci": [599, 658], "hello": 600, "welcom": 600, "narr": 600, "feedback": 600, "feel": 600, "know": [600, 602, 671], "fridai": 601, "midwest": 601, "142": 601, "368": [601, 604], "excess": 601, "65": [601, 644], "knot": 601, "mph": 601, "184": 601, "hail": [601, 604, 649], "bing": 601, "inch": 601, "diamet": 601, "ifram": 601, "spc": [601, 604], "climo": 601, "gmf": 601, "php": 601, "rpt": 601, "230331_rpts_filter": 601, "walworth": 601, "counti": 601, "southeastern": [601, 619], "geneva": 601, "tourist": 601, "especi": [601, 602, 620], "live": 601, "chicagoland": 601, "confirm": [601, 615, 660], "assembl": 601, "summari": [601, 615], "grlevel": 601, "encourag": 601, "peopl": 601, "cookbook": [601, 604, 658, 670], "moor": 601, "focu": 601, "varieti": [601, 602, 605, 613, 614, 648, 669], "forg": [601, 604, 605, 658, 668, 669, 671], "arm_pyart": [601, 605, 607, 658, 668, 669, 671], "shaperead": 601, "shpreader": 601, "shapelyfeatur": 601, "miniforge3": 601, "tqdm": 601, "tqdmwarn": 601, "iprogress": 601, "ipywidget": 601, "readthedoc": 601, "stabl": 601, "user_instal": 601, "autonotebook": 601, "notebook_tqdm": 601, "credit": 601, "censu": 601, "mac": [601, 604, 658], "curl": 601, "linux": [601, 604, 605, 658, 669, 671], "wget": 601, "www2": 601, "geo": [601, 604], "tiger": 601, "tiger2016": 601, "primaryroad": 601, "tl_2016_us_primaryroad": 601, "zip": [601, 613, 616, 620, 625, 658], "xferd": 601, "dload": 601, "upload": [601, 604], "spent": 601, "7m": 601, "cpg": 601, "inflat": 601, "dbf": 601, "prj": 601, "shp": 601, "ea": 601, "iso": 601, "shx": 601, "reader": [601, 603, 604, 616], "geom": 601, "loop": [601, 604, 650], "rec": 601, "fullnam": 601, "interstate_featur": 601, "darkblu": 601, "clean": [601, 604, 644, 654], "filesystem": 601, "month": [601, 615, 616], "kmkx20230401_010517_v06": 601, "kmkx20230401_011057_v06": 601, "kmkx20230401_011638_v06": 601, "kmkx20230401_012219_v06": 601, "kmkx20230401_012759_v06": 601, "kmkx20230401_013341_v06": 601, "kmkx20230401_013922_v06": 601, "kmkx20230401_014502_v06": 601, "kmkx20230401_015042_v06": 601, "kmkx20230401_015623_v06": 601, "kmkx20230401_015928_v06": 601, "plot_configur": 601, "twilight_shift": [601, 654], "cross_correlation_ratio": [601, 615, 628, 629, 647, 648, 665, 666], "plot_radar_ppi": 601, "left_field": 601, "right_field": 601, "plot_config": 601, "precip": 601, "vel_dealia": 601, "dealias_region_bas": [601, 604, 611, 644, 654, 662], "add_field": [601, 605, 610, 611, 644, 647, 648, 649, 654, 661, 662, 669], "corrected_veloc": [601, 611, 644, 650, 654, 662, 665], "plot_numb": 601, "config": [601, 604, 660, 671], "121": [601, 602, 615, 619, 626, 646, 654], "generate_titl": 601, "time_step": 601, "get_start_end": 601, "central_tim": 601, "astimezon": 601, "new_titl": 601, "cdt": 601, "sharon": 601, "Near": 601, "delavan": 601, "6105": 601, "60666": 601, "lightgrei": 601, "lavenderblush": 601, "ppi_velocity_reflectivity_": 601, "flexibl": [601, 604], "hope": 601, "visual": [602, 604, 625, 628, 636, 645, 648, 654], "notabl": [602, 603], "insight": [602, 603], "analyz": [602, 605, 658, 665, 669], "decid": 602, "quicklook": 602, "januari": [602, 605, 658, 669], "wettest": 602, "la": 602, "jolla": 602, "california": 602, "tarfil": 602, "download_arm_data": 602, "0mact": 602, "0mdiscoveri": 602, "0mdownload_arm_data": 602, "0musernam": 602, "0mtoken": 602, "0mdatastream": 602, "0mstartdat": 602, "0menddat": 602, "0mtime": 602, "0moutput": 602, "webservic": 602, "usernam": [602, 668], "log": [602, 604, 607], "adc": [602, 604], "datastream": 602, "acquir": 602, "startdat": 602, "yyyi": [602, 603], "dd": [602, 603], "yyyymmdd": 602, "thh": 602, "ss": 602, "15t12": 602, "enddat": 602, "15t13": 602, "hhmmss": 602, "programmat": 602, "rest": 602, "savedata": 602, "cron": 602, "job": 602, "workspac": 602, "elimin": [602, 662, 664], "disk": 602, "hpss": 602, "armliv": 602, "livedata": 602, "giansiracusa": 602, "giansiracumt": 602, "ornl": 602, "sgpmete13": 602, "jan": 602, "2017": 602, "xxxxxxxxxxxxxxxx": 602, "download_data": 602, "mambaforg": 602, "epckasacrcfrs2": 602, "21t01": 602, "20240121": 602, "010020": 602, "010436": 602, "011116": 602, "012914": 602, "012503": 602, "011845": 602, "012257": 602, "010757": 602, "010118": 602, "011434": 602, "012708": 602, "011640": 602, "012051": 602, "bharadwaj": 602, "hardin": 602, "isom": 602, "johnson": 602, "lindenmai": 602, "matthew": 602, "nelson": 602, "feng": 602, "deng": 602, "rocqu": 602, "castro": 602, "wendler": 602, "ka": 602, "kasacrcfr": 602, "1469302": 602, "trick": 602, "ones": [602, 625], "798": 602, "runtimewarn": 602, "encount": 602, "intersect": 602, "whic": 602, "ppi_fil": 602, "rhi_fil": 602, "elif": 602, "mainli": 602, "threshold_valu": 602, "suptitl": [602, 610, 611, 620, 639, 650], "tight_layout": [602, 620, 641, 644], "too": [602, 604], "And": [602, 604], "remaind": 602, "fromnumer": [602, 610], "784": [602, 604], "maskedarrai": [602, 604, 610], "kth": [602, 610], "idea": [602, 660, 662], "0115": 602, "rhi_radar": 602, "ppi_radar": 602, "achiv": 602, "past": [603, 605, 669], "tag": [603, 604], "kernelspec": 603, "display_nam": 603, "ipykernel": 603, "languag": [603, 605, 658, 669], "language_info": 603, "codemirror_mod": 603, "file_extens": 603, "mimetyp": 603, "nbconvert_export": 603, "pygments_lex": 603, "ipython3": 603, "insert": 603, "nbformat": 603, "nbformat_minor": 603, "care": 603, "isilb": 604, "sinaram": 604, "1532": 604, "zssherman": 604, "get_azimuth": 604, "xradar": [604, 657, 667], "1547": 604, "mgrover1": 604, "1544": 604, "1542": 604, "1541": 604, "bridg": 604, "1537": 604, "columnsect": [604, 645], "1529": 604, "failur": 604, "wheel": 604, "1526": 604, "dep": 604, "bump": 604, "action": [604, 605, 607, 669], "group": [604, 605, 669], "1539": 604, "dependabot": 604, "epcap": 604, "1534": 604, "1530": 604, "1528": 604, "zdist_factor": 604, "1509": 604, "1524": 604, "1519": 604, "codeql": 604, "1515": 604, "pin": [604, 607], "ci": [604, 606, 607], "1507": 604, "xdrlib": 604, "1525": 604, "1518": 604, "1492": 604, "kmuehlbauer": 604, "rtanamachi": 604, "1504": 604, "1487": 604, "1478": 604, "jrobrien91": 604, "1503": 604, "1501": 604, "outdat": 604, "ipynb": [604, 610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656], "1490": 604, "1484": 604, "1482": 604, "1474": 604, "commit": [604, 605, 607, 669], "1506": 604, "1475": 604, "rainbow_wrl": 604, "happyxiaoanan": 604, "reclass": 604, "1495": 604, "rbhupi": 604, "1493": 604, "minor": [604, 620, 661, 664], "get_elev": 604, "1489": 604, "rescal": [604, 647, 648], "1486": 604, "1479": 604, "rcjackson": 604, "app": 604, "cmweather": 604, "1452": 604, "accessor": 604, "1457": 604, "syedhamidali": 604, "1456": 604, "typo": 604, "1471": 604, "isinst": 604, "1448": 604, "1472": 604, "1470": 604, "1469": 604, "instruct": [604, 658, 670], "1462": 604, "1473": 604, "1468": 604, "1450": 604, "scolli": 604, "dim": 604, "load_kazr": 604, "1446": 604, "1447": 604, "arm_vpt": 604, "1445": 604, "lint": [604, 605, 669], "1444": 604, "mnt": 604, "1440": [604, 660], "dedic": 604, "1442": 604, "1443": 604, "1437": 604, "algorith": 604, "1434": 604, "wolfidan": 604, "1430": 604, "1433": 604, "1428": 604, "neutrinocero": 604, "odim": 604, "1425": 604, "gatemapp": [604, 613, 618, 623, 667], "1418": 604, "hook": [604, 605, 669], "1419": 604, "sphinx": [604, 610, 611, 613, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 654, 655, 656], "theme": 604, "1427": 604, "feet": 604, "1423": 604, "leak": 604, "mapper": 604, "1421": 604, "vforcel": 604, "1417": 604, "steepatticstair": 604, "1407": 604, "readm": [604, 668], "1397": 604, "1416": 604, "1413": 604, "1411": 604, "1409": 604, "1401": 604, "joshua": 604, "hampton": 604, "del": [604, 627], "old": 604, "conda_recip": 604, "1399": 604, "ruff": 604, "1388": 604, "wrong": 604, "1390": 604, "1385": 604, "1383": 604, "pkg_resourc": 604, "runtim": 604, "1394": 604, "mail": [604, 605, 658, 669], "1393": 604, "codeown": 604, "1391": 604, "1384": 604, "1382": 604, "1379": 604, "mismatch": 604, "1381": 604, "wrap": 604, "get_gate_area": 604, "1375": 604, "1380": [604, 660], "1372": 604, "exec_modul": 604, "load_modul": 604, "1369": 604, "badg": 604, "1363": 604, "read_sigmet": 604, "1351": 604, "zouihao": 604, "unus": 604, "1343": 604, "1342": 604, "range_step": 604, "1338": 604, "max_num_g": 604, "1337": 604, "1327": 604, "revert": 604, "setuptool": 604, "unwant": 604, "cleanup": 604, "1357": 604, "1355": 604, "1339": 604, "1361": 604, "1335": 604, "manipul": [604, 627, 659], "1300": 604, "kylejgillett": 604, "melovato": 604, "tsbiscaro": 604, "1324": 604, "1319": 604, "1314": 604, "add_filt": 604, "1326": 604, "1320": [604, 660], "1325": 604, "jthielen": 604, "1303": 604, "jjhelmu": [604, 671], "wx4stg": 604, "antiviru": 604, "similiar": 604, "1307": 604, "1299": 604, "throw": 604, "convolve1d": 604, "1313": 604, "1306": 604, "1317": 604, "1311": 604, "jfigui": 604, "citat": [604, 605, 628, 658, 669], "1304": 604, "gamaanderson": 604, "hhuangwx": 604, "josephhardine": 604, "meteoswiss": [604, 649, 650], "mdr": 604, "ngui": 604, "tjlang": 604, "1294": 604, "1290": 604, "1285": 604, "1279": 604, "backward": [604, 608], "1278": 604, "1284": 604, "tracer": 604, "1296": 604, "1292": 604, "1287": 604, "cibuildwheel": 604, "1267": 604, "ocefpaf": 604, "1275": 604, "1276": 604, "1265": 604, "dcedgren": 604, "jilling": 604, "zhaobudaola": 604, "1263": 604, "1235": 604, "1215": 604, "1261": 604, "1241": 604, "1240": 604, "gatefi": 604, "1226": 604, "join_radar": 604, "repititon": 604, "iparam": 604, "1218": 604, "1216": 604, "trmm_rsl": 604, "1239": 604, "cftime": 604, "1211": 604, "incorrect": [604, 608, 662], "1231": 604, "ci_setup": 604, "1213": 604, "1264": 604, "basic": [604, 658, 659, 661], "1251": 604, "1234": 604, "1228": 604, "subset_radar": 604, "radar_util": 604, "1227": 604, "pyrad": 604, "1220": 604, "tst": 604, "median": 604, "1214": 604, "srbrodzik": 604, "1208": 604, "1204": 604, "1201": [604, 615], "1198": 604, "1196": 604, "catch": 604, "1191": 604, "1207": 604, "pypi": 604, "1206": 604, "unitest": 604, "1200": [604, 660], "1199": 604, "echoclass": 604, "1197": 604, "convv": 604, "awhil": 604, "back": 604, "1195": 604, "1190": 604, "dp": 604, "1184": 604, "solver": [604, 658], "1183": 604, "1176": 604, "1187": 604, "revis": 604, "270": [604, 605, 641, 669], "1185": 604, "1181": 604, "1178": 604, "1171": 604, "1180": 604, "1177": 604, "1173": 604, "sobitp59": 604, "rogu": 604, "1170": 604, "1160": 604, "1152": 604, "1151": 604, "mispel": 604, "1158": 604, "1148": 604, "1167": 604, "1154": 604, "unittest": 604, "1153": 604, "scm": [604, 605, 669], "1136": 604, "trigger": 604, "1126": 604, "1118": 604, "1115": 604, "maco": 604, "1147": 604, "prune": 604, "1143": 604, "1141": 604, "1140": [604, 660], "1139": 604, "1137": 604, "1131": 604, "1130": 604, "1129": 604, "1128": 604, "1127": 604, "1125": 604, "1124": 604, "1123": 604, "1120": 604, "1119": 604, "dpr": 604, "1116": 604, "postcard": 604, "1104": 604, "1103": 604, "1122": 604, "gridmapdisplai": [604, 613, 624, 626, 642, 647, 648, 655, 664, 667], "1099": 604, "quick": [604, 615], "1146": 604, "contribut": [604, 605, 669, 670], "1106": 604, "1117": 604, "1113": 604, "submodul": [604, 664], "1110": 604, "forgotten": 604, "1108": 604, "test_echo_class": 604, "1107": 604, "1101": 604, "1098": 604, "1097": 604, "1094": 604, "1080": [604, 660], "registri": 604, "1087": 604, "1096": 604, "1093": 604, "1090": 604, "1089": 604, "1088": 604, "1085": 604, "1084": 604, "analyt": 604, "1081": 604, "1079": 604, "1077": 604, "pmi": 604, "csp": 604, "ritvj": 604, "doesn": [604, 660], "mandat": 604, "1014": 604, "reallynicegui": 604, "hasattr": 604, "1034": 604, "overlap": [604, 627, 636], "mapdisplai": 604, "1029": 604, "azimuth_rhi_plot": 604, "1025": 604, "1019": 604, "rxm25": 604, "1075": 604, "1064": 604, "mute_radar": 604, "1033": 604, "1030": 604, "radxgrid": 604, "1027": 604, "1026": 604, "roadmap": 604, "repo": [604, 605, 669], "1059": 604, "sidebar": 604, "1074": 604, "datetime_util": 604, "1072": 604, "1071": 604, "pydata": 604, "1069": 604, "1068": 604, "1067": 604, "1066": 604, "1063": 604, "codecov": 604, "1061": 604, "1060": 604, "1058": 604, "1056": 604, "1055": 604, "1053": 604, "1051": 604, "1050": 604, "1048": 604, "branch": [604, 605, 607, 669, 671], "1040": 604, "1039": 604, "1038": 604, "1031": 604, "1024": 604, "1020": [604, 660], "humphreyscart": 604, "tkralph": 604, "1003": 604, "997": 604, "1007": 604, "1001": 604, "1010": 604, "travi": 604, "sty": [604, 605, 669], "pep8": [604, 605, 669], "1005": 604, "988": 604, "quba1": 604, "984": 604, "tdwr": 604, "969": 604, "956": 604, "994": 604, "979": 604, "h5py": [604, 658], "978": 604, "june1st": 604, "switch": [604, 605, 669], "973": 604, "maint": [604, 605, 669], "966": 604, "983": 604, "amarouan": 604, "abdelhak": 604, "bmgxyz": 604, "address": 604, "962": 604, "mwilson14": 604, "963": 604, "nonetyp": 604, "regard": 604, "959": [604, 640, 642, 667], "964": 604, "176": 604, "919": 604, "rda": 604, "903": 604, "add_gate_area": 604, "950": 604, "blotchi": 604, "947": 604, "946": 604, "944": 604, "694": [604, 651], "938": 604, "vlouf": 604, "934": 604, "925": 604, "924": 604, "917": 604, "appveyor": 604, "937": 604, "927": 604, "liter": 604, "said": 604, "949": 604, "948": 604, "929": 604, "926": 604, "920": 604, "915": 604, "911": 604, "grwise1": 604, "jsignel": 604, "rumpki": 604, "broke": 604, "913": 604, "msg29": 604, "909": 604, "907": 604, "framework": 604, "910": 604, "912": 604, "napoleon": 604, "902": 604, "rtd": 604, "893": 604, "892": 604, "odimh5": 604, "898": 604, "895": 604, "896": 604, "864": 604, "louiswick": 604, "hilderbrand": 604, "877": 604, "886": 604, "crash": 604, "878": 604, "891": 604, "zflamig": 604, "futur": [604, 605, 608, 669], "890": 604, "889": 604, "885": 604, "dstex": 604, "880": 604, "soon": 604, "879": 604, "plot_grid": [604, 626, 640, 647, 648, 655, 664], "to_xarrai": 604, "873": 604, "876": 604, "elementwis": 604, "anaconda": [604, 605, 607, 658, 668, 669], "faq": 604, "868": [604, 635, 642, 667], "mvanlierwalq": 604, "848": 604, "grid_io": 604, "846": 604, "jhemedin": 604, "841": 604, "nbin": 604, "865": 604, "856": 604, "840": [604, 660], "caus": 604, "852": 604, "849": 604, "get_dataset": 604, "845": 604, "docstr": 604, "838": [604, 615, 617, 667], "836": 604, "cheatsheet": 604, "fortran": 604, "bit": [604, 668], "environ": [604, 658, 668, 670], "contr": 604, "843": 604, "spell": 604, "835": 604, "read_d3r_gcpex_nc": 604, "842": 604, "eccc": 604, "837": 604, "taylbm": 604, "kenkeho": 604, "swnesbitt": 604, "827": 604, "822": 604, "806": 604, "804": 604, "800": [604, 644], "778": 604, "688": [604, 645], "incomplet": 604, "msg5": 604, "832": [604, 633, 639, 642, 667], "820": [604, 610], "812": 604, "deal": 604, "809": 604, "contiuum": 604, "gh": 604, "795": 604, "explicit": 604, "py2": 604, "790": 604, "sh": 604, "kai": 604, "muehlbauer": 604, "789": [604, 667], "777": 604, "indexerror": 604, "check_outli": 604, "776": 604, "juhi24": 604, "770": 604, "imp": 604, "newer": [604, 668], "675": 604, "824": 604, "minu": 604, "803": 604, "738": 604, "799": 604, "792": 604, "favor": 604, "791": 604, "786": 604, "itself": [604, 666], "inc": 604, "794": 604, "rst": 604, "preformat": 604, "779": 604, "eaxmpl": 604, "834": [604, 634, 642, 667], "833": 604, "elsewher": 604, "831": 604, "828": 604, "821": 604, "pytest": [604, 605, 658, 668, 669], "818": 604, "atteun": 604, "817": 604, "simulated_veloc": [604, 665], "802": 604, "grab": [604, 639], "796": 604, "793": 604, "787": 604, "781": 604, "cvd": 604, "775": 604, "774": 604, "769": 604, "nl2": 604, "765": 604, "miaoneng": 604, "gewitterblitz": 604, "liliaow567": 604, "764": 604, "coveral": 604, "messsag": 604, "761": 604, "757": 604, "set_raster": 604, "748": 604, "754": 604, "755": 604, "recompil": 604, "758": 604, "ngoldbaum": 604, "reciev": 604, "752": 604, "gate_id": [604, 665], "749": 604, "746": [604, 621, 623, 667], "744": 604, "zxdawn": 604, "netcdftim": 604, "736": 604, "731": 604, "dot_product": 604, "729": 604, "test_rhi_elev": 604, "twice": [604, 648], "724": 604, "728": 604, "727": 604, "nosetest": 604, "715": 604, "vradh": 604, "vradv": 604, "quantiti": 604, "739": 604, "es5nhc": 604, "735": 604, "wave100": 604, "734": [604, 650, 651, 667], "733": 604, "730": 604, "723": 604, "comp": 604, "721": 604, "cameron": 604, "homey": 604, "716": 604, "cameronhomey": 604, "jamessong": 604, "winash12": 604, "687": 604, "csnardi": 604, "645": 604, "docbuild": 604, "709": 604, "mhpicel": 604, "705": 604, "fromstr": 604, "704": 604, "692": 604, "651": 604, "711": 604, "calculate_velocity_textur": [604, 654, 662], "retreiv": 604, "672": 604, "bucket": [604, 615], "673": 604, "653": 604, "638": 604, "635": 604, "frombuff": 604, "702": 604, "grid_mapp": 604, "707": 604, "706": 604, "goharkai": 604, "infinit": 604, "693": 604, "freemansw1": 604, "683": 604, "674": 604, "668": 604, "contact": 604, "land": 604, "667": [604, 660], "665": 604, "662": 604, "661": 604, "attributeerror": 604, "656": 604, "oserror": 604, "650": 604, "overflowerror": 604, "648": 604, "happier": 604, "647": 604, "640": 604, "639": 604, "634": 604, "620": 604, "itsjm": 604, "kirknorth": 604, "617": 604, "616": 604, "631": 604, "swap": 604, "el": 604, "plot_rai": 604, "618": 604, "_get_angl": 604, "613": 604, "607": 604, "linspac": [604, 605, 625, 628, 644, 647, 648, 660, 669], "603": 604, "627": [604, 623], "623": 604, "596": 604, "595": 604, "632": [604, 655, 657, 667], "630": 604, "625": [604, 636, 642, 667], "tulipasilva": 604, "622": 604, "normbw": 604, "q": 604, "quit": [604, 658], "614": 604, "git": [604, 605, 658, 668, 669, 671], "611": 604, "608": 604, "mrugna": 604, "605": 604, "bld": 604, "kludg": 604, "604": 604, "acknowledg": [604, 658], "602": 604, "qpe": [604, 648], "598": 604, "mustafaalicelik": 604, "580": 604, "577": 604, "576": 604, "575": 604, "562": 604, "azim": 604, "546": 604, "pickl": 604, "unpickl": 604, "543": 604, "vcp": 604, "541": [604, 649, 651, 667], "noaaport": 604, "seper": 604, "540": [604, 660], "521": 604, "459": 604, "590": 604, "bugfix": 604, "l3": 604, "135": [604, 632, 642, 667], "eet": 604, "585": 604, "582": 604, "574": 604, "570": 604, "558": 604, "ctm": 604, "553": 604, "542": 604, "aux_io": 604, "read_gam": 604, "535": 604, "midnight": 604, "523": 604, "importerror": 604, "522": 604, "519": 604, "512": 604, "510": 604, "phase_proc": 604, "zerodivis": 604, "494": 604, "485": 604, "unsupport": 604, "481": 604, "579": 604, "578": 604, "568": 604, "563": 604, "559": 604, "549": 604, "547": 604, "gamicfil": 604, "gamic_hdf5": 604, "536": 604, "524": 604, "513": 604, "balltre": 604, "504": 604, "501": 604, "482": 604, "479": 604, "594": 604, "561": 604, "despeckle_field": 604, "544": 604, "axislabel_flag": 604, "539": 604, "529": 604, "_get_x_z": 604, "491": 604, "486": 604, "586": 604, "583": 604, "572": 604, "fixup": 604, "569": 604, "560": 604, "555": [604, 645], "recip": [604, 607], "554": 604, "nose_arg": 604, "548": [604, 637, 642, 667], "538": 604, "532": 604, "531": 604, "528": 604, "output_to_geotiff": 604, "514": 604, "511": 604, "507": 604, "506": 604, "498": [604, 611, 612, 667], "libgfortran": 604, "497": 604, "495": 604, "493": 604, "489": 604, "488": 604, "argentinean": 604, "480": [604, 660], "bdolan44": 604, "dara74k": 604, "gavi": 604, "jacaicedob": 604, "wx": 604, "pfhein": 604, "tamisalex": 604, "469": 604, "468": 604, "467": 604, "luminos": 604, "464": 604, "455": 604, "hclass": 604, "447": 604, "439": 604, "434": 604, "433": 604, "427": 604, "411": 604, "404": 604, "388": 604, "cross_section_ppi": [604, 641], "380": 604, "472": 604, "471": 604, "470": 604, "prf": 604, "460": 604, "get_field_colormap": 604, "446": 604, "444": 604, "example_cfradial_rhi": 604, "441": 604, "417": 604, "struct": 604, "410": 604, "383": 604, "unicod": 604, "382": 604, "gatefit": 604, "372": 604, "465": 604, "refactor": 604, "463": 604, "decor": 604, "416": 604, "392": 604, "radxcovert": 604, "clarifi": 604, "475": 604, "406": 604, "add_field_lik": [604, 619], "397": 604, "391": 604, "376": 604, "370": [604, 641, 642, 667], "corner_to_point": 604, "473": 604, "466": 604, "456": 604, "outstand": 604, "412": 604, "413": 604, "454": 604, "453": 604, "449": 604, "438": 604, "437": 604, "430": 604, "426": 604, "miniconda": [604, 605, 658, 669], "reactiv": 604, "422": 604, "plot_map_one_radar_to_grid": [604, 621, 623, 667], "420": [604, 660], "419": 604, "408": 604, "resilli": 604, "403": 604, "write_mdv_grid": 604, "402": 604, "401": 604, "399": 604, "395": 604, "documen": 604, "add_2d_latlon_axi": 604, "394": [604, 617], "378": 604, "acess": 604, "377": 604, "373": 604, "deeplycloudi": 604, "358": [604, 605, 669], "edge_netcdf": 604, "read_edge_netcdf": 604, "357": [604, 605, 669], "dealias_fourdd": 604, "348": 604, "346": 604, "326": 604, "308": 604, "361": 604, "refl_filter_flag": 604, "map_gate_to_grid": 604, "334": 604, "region_dealia": 604, "327": 604, "libm": 604, "posix": 604, "319": 604, "unnecessari": 604, "inmemoryfil": 604, "365": 604, "359": [604, 605, 631, 642, 667, 669], "354": 604, "_rsl_interfac": 604, "342": 604, "binstar": 604, "337": 604, "320": 604, "317": 604, "362": 604, "plot_grid_three_panel": 604, "353": [604, 642], "confus": 604, "363": 604, "340": 604, "externalis": 604, "339": 604, "333": 604, "332": 604, "47": [604, 650], "324": 604, "323": 604, "271": 604, "binar": 604, "266": 604, "313": 604, "312": 604, "290": 604, "280": 604, "273": 604, "272": 604, "261": 604, "256": [604, 625, 649], "dealias_phase_unwrap": 604, "radarmapdispl": 604, "249": 604, "discontin": 604, "315": 604, "314": [604, 638, 642, 667], "288": 604, "fault": 604, "276": 604, "dealias_unwrap_phas": 604, "275": 604, "corrupt": 604, "269": 604, "283": 604, "inconsist": 604, "274": 604, "254": [604, 648], "fallback": 604, "245": 604, "316": 604, "ngates_vart": 604, "310": 604, "py3": [604, 671], "nexrad_level2": 604, "nexrad_level3": 604, "309": 604, "1byte": 604, "datatyp": 604, "weathergod": 604, "293": 604, "292": 604, "289": 604, "291": 604, "138": 604, "284": 604, "alter": 604, "267": 604, "latlon": 604, "264": 604, "262": 604, "260": 604, "259": 604, "258": 604, "241": [604, 616, 621], "rebuild": 604, "237": 604, "scientif": [605, 658, 669], "repositori": [605, 606, 607, 658, 668, 669, 671], "e25": [605, 658, 669], "publish": [605, 669], "easiest": [605, 658, 669], "1st": [605, 658, 669], "Then": [605, 607, 658, 668, 669], "termin": [605, 658, 669, 671], "prompt": [605, 658, 669], "mamba": [605, 669], "openradar": [605, 669], "short": [605, 607, 669], "cours": [605, 619, 669], "ev": [605, 669], "pyart_short_cours": [605, 669], "youtub": [605, 669], "watch": [605, 669], "diip": [605, 669], "q3bkzw": [605, 669], "book": [605, 669], "rule": [605, 669], "pep": [605, 669], "0008": [605, 669], "afterward": [605, 669], "neccessari": [605, 669], "brief": [605, 606, 669], "parti": [605, 669], "explain": [605, 669], "_inverse_dist_squar": [605, 669], "_average1d": [605, 669], "seen": [605, 669], "explan": [605, 606, 669], "privat": [605, 669], "rerun": [605, 669], "test_vad": [605, 669], "test_radar": [605, 660, 669], "make_target_radar": [605, 669], "1000": [605, 622, 630, 636, 637, 644, 648, 664, 669], "ones_lik": [605, 669], "z_start": [605, 669], "z_end": [605, 669], "z_count": [605, 669], "vad_height": [605, 669], "vad_spe": [605, 669], "98665725": [605, 669], "94020686": [605, 669], "88107152": [605, 669], "81939374": [605, 669], "75851962": [605, 669], "vad_direct": [605, 669], "84659496": [605, 669], "30240553": [605, 669], "58658589": [605, 669], "81073051": [605, 669], "01353486": [605, 669], "01335138": [605, 669], "06014712": [605, 669], "12039762": [605, 669], "18410404": [605, 669], "24791911": [605, 669], "98663937": [605, 669], "9398407": [605, 669], "87958641": [605, 669], "81587601": [605, 669], "75205693": [605, 669], "assert_almost_equ": [605, 669], "pyarg": [605, 669], "test_cfradi": [605, 669], "cd": [605, 669], "fork": [605, 607, 669], "cartopy_map": [605, 669], "branch_nam": [605, 669], "task": [605, 613, 653, 669], "mind": [605, 619, 669], "simpli": [605, 647, 654, 662, 664, 668, 669, 671], "acronym": [605, 669], "finish": [605, 669, 671], "quotat": [605, 669], "hit": [605, 669], "depth": [605, 658, 666, 669], "acronymn": [605, 669], "gitwash": [605, 669], "development_workflow": [605, 669], "whitespac": [605, 669], "usual": [605, 616, 669], "vim": [605, 669], "fetch": [605, 620, 644, 648, 649, 650, 669], "ff": [605, 669], "sit": [605, 669], "guidanc": [605, 669], "anyth": 607, "creator": 607, "draft": 607, "shortlog": 607, "uplod": 607, "feedstock": 607, "clone": [607, 658, 668], "meta": 607, "yaml": 607, "sha256": 607, "rerend": 607, "smithi": 607, "bot": 607, "sometim": [607, 660], "awar": 607, "semant": 608, "earlier": 608, "ceas": 608, "Such": 608, "proceed": 608, "futurewarn": 608, "runner": [610, 616], "micromamba": [610, 616], "_core": 610, "__doc__": [610, 611, 615, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 647, 648], "sgpcsaprsurcmaci7": [610, 661], "20110520": [610, 661], "095101": [610, 661], "pop": 610, "specific_attenu": [610, 645, 649, 660, 665], "corrected_reflectivity_horizont": [610, 622, 626, 645, 654, 656, 660], "calculate_attenu": 610, "131": [610, 647, 648], "132": [610, 647, 648], "ax3": [610, 611, 640, 644, 647, 648], "133": [610, 645, 647, 648], "090": [610, 612, 667], "plot_attenu": [610, 612, 667], "ial": 611, "095636": [611, 662], "sonde_fil": 611, "sgpinterpolatedsondec1": 611, "c1": [611, 665], "20110510": 611, "000000": 611, "cdf": [611, 644, 648], "dt": 611, "read_arm_sonde_vap": 611, "exclude_transit": [611, 621, 622, 626, 646], "exclude_invalid": [611, 644], "exclude_outsid": [611, 644], "dealias_data": 611, "sixth": 611, "221": [611, 629], "222": [611, 629], "223": [611, 629], "ax4": 611, "224": [611, 629], "plot_dealia": [611, 612, 667], "587": 612, "mem": [612, 617, 623, 642, 651, 652, 657, 667], "examples_python": 613, "examples_jupyt": 613, "grover": [615, 619, 625, 626, 631, 639, 645, 646, 654, 655, 656], "filepath": [615, 616], "organ": 615, "radarsit": [615, 616], "_v06": 615, "khgx": 615, "aws_nexrad_level2_fil": [615, 616], "khgx20220322_120125_v06": 615, "differential_phas": [615, 629, 665, 666], "clutter_filter_power_remov": 615, "spectrum_width": [615, 665, 666], "relect": 615, "z_": [615, 619, 627], "v_": 615, "noq": 615, "level3": 615, "aws_nexrad_level3_velocity_fil": 615, "hgx_n0u_2022_03_22_12_01_25": 615, "aws_nexrad_level3_reflectivity_fil": 615, "hgx_n0q_2022_03_22_12_01_25": 615, "read_nexrad_level3": 615, "radar_level3_veloc": 615, "radar_level3_reflect": 615, "reflectivity_displai": 615, "velocity_displai": 615, "plot_nexrad_data_aw": [615, 617, 667], "zachari": 616, "sherman": 616, "zsherman": [616, 671], "tendenc": 616, "gz": 616, "handford": 616, "ca": 616, "khnx": 616, "0203": 616, "v06": 616, "khnx20060724_020338": 616, "nexrad_arch": 616, "231": [616, 648], "clearli": 616, "lucki": 616, "31417": 616, "63111": 616, "plote": [616, 633], "central_latitud": [616, 633, 647, 648, 661], "central_longitud": [616, 633, 647, 648, 661], "downloadwarn": 616, "naturalearth": 616, "amazonaw": 616, "10m_physic": 616, "ne_10m_coastlin": 616, "10m_cultur": 616, "ne_10m_admin_1_states_provinces_lin": 616, "557": [616, 617, 667], "plot_older_nexrad_data_aw": [616, 617, 667], "xsapr": [619, 622, 626], "xsapr_sw_fil": [619, 622, 626], "swx_20120520_0641": [619, 622, 625, 626, 627, 631, 641, 645, 646, 647, 648, 654, 655, 656], "xsapr_se_fil": [619, 622, 626], "sex_20120520_0641": [619, 622, 626], "radar_sw": [619, 622, 626], "radar_s": [619, 622, 626], "southwestern": 619, "gmapper": 619, "radar_sw_mapped_to_radar_s": 619, "disp1": 619, "98": [619, 645, 650, 665], "97": [619, 622, 626, 628, 640, 645, 647, 648, 660], "disp2": 619, "remap": 619, "eyebal": 619, "fortun": 619, "reflectivity_se_radar": 619, "reflectivity_sw_radar": 619, "reflectivity_differ": 619, "reflectivity_bia": 619, "southwest": 619, "xspar": 619, "southeast": 619, "neccessarili": 619, "incl_gat": 619, "refl_s": 619, "refl_sw": 619, "values_without_mask": 619, "hist": [619, 654, 662], "histogram2d": 619, "masked_wher": [619, 644, 648, 665], "log_": 619, "678": [619, 623, 667], "plot_compare_two_radars_gatemapp": [619, 623, 667], "solut": 620, "arguabl": 620, "overlook": 620, "neglig": 620, "ze": 620, "2nd": 620, "4th": 620, "purpl": 620, "truncat": 620, "ok": 620, "israel": 620, "silber": 620, "open_radar_data": [620, 644, 648, 649, 650], "file_nam": 620, "example_plot_ppi_single_sweep": 620, "processed_field": 620, "reflectivity_at_cor": 620, "radar_obj": 620, "nnow": 620, "ax_ind": 620, "sweep_obj": 620, "fig2": 620, "1601": 620, "40000": [620, 622, 626, 633, 664], "set_titl": [620, 625, 644, 647, 648], "nuse": 620, "plot_grid_single_sweep_ppi": [620, 623, 667], "123000": 621, "xsarp": [622, 634, 635], "gatefilter_s": [622, 626], "exclude_abov": [622, 626, 654, 662], "gatefilter_sw": [622, 626], "201": [622, 647, 648, 664], "50000": [622, 626, 647, 648, 664], "57861": [622, 626], "363611": [622, 626], "080": [622, 623, 667], "plot_map_two_radars_to_grid": [622, 623, 667], "helper": 625, "vstack": 625, "plot_color_gradi": 625, "cmap_categori": 625, "cmap_list": 625, "figh": 625, "99": 625, "cmap_nam": 625, "pyart_": 625, "va": 625, "transax": 625, "spine": 625, "set_axis_off": 625, "perceptu": [625, 628], "light": [625, 649], "diverg": 625, "meaning": 625, "terrain": 625, "spectral_r": 625, "rememb": 625, "front": 625, "013": [625, 642, 667], "plot_choose_a_colormap": [625, 642, 667], "181": 626, "blue": [626, 636, 637], "plot_cross_sect": [626, 642, 667], "colobar": 627, "joe": 627, "brien": 627, "obrienj": 627, "perfect": 627, "coord": 627, "gca": 627, "set_major_loc": 627, "nullloc": 627, "axsb": 627, "ppi_map": 627, "set_tick": 627, "068": [627, 642, 667], "plot_modify_colorbar": [627, 642, 667], "reduc": [628, 648, 668], "promin": [628, 648], "deemphas": 628, "depict": [628, 644], "ultim": 628, "misinterpret": 628, "lmtomkin": [628, 644, 647, 648], "ncsu": [628, 644, 647, 648], "nexrad_fil": [628, 647, 648], "kbgm": 628, "kbgm20200207_132642_v06": 628, "image_mute_radar": [628, 647, 648], "magma_cmap": 628, "magma_r": [628, 644, 647, 648], "grays_cmap": [628, 648], "gray_r": [628, 648], "nonmuted_cmap": 628, "linearsegmentedcolormap": [628, 647, 648], "from_list": [628, 647, 648], "muted_cmap": [628, 648], "nonmuted_reflect": [628, 647], "muted_reflect": [628, 648], "set_aspect": [628, 644, 647, 648, 649], "659": [628, 642, 667], "plot_nexrad_image_muted_reflect": [628, 642, 667], "katx20130717_195021_v06": [629, 666], "551": [629, 642, 667], "plot_nexrad_multiple_mo": [629, 642, 667], "level2_katx_20130717_1950": 630, "ar2v": 630, "plot_nexrad_reflect": [630, 642, 667], "plot_cross_hair": 631, "plot_ppi_cfradi": [631, 642, 667], "jason": [633, 640], "hemeding": [633, 640], "nsaxsaprppic1": 633, "20140201": 633, "184802": 633, "157": 633, "156": 633, "71": 633, "158": 633, "72": 633, "40km": 633, "plot_line_xi": 633, "20000": [633, 664], "200000": [633, 647, 648], "plot_point": 633, "plot_ppi_with_r": [633, 642, 667], "instrument_nam": [634, 635, 666], "agl": 634, "fac": 634, "nplot": [634, 635, 639], "snum": 634, "hsrhi": [634, 635], "3f": [634, 635], "time_start": 634, "num2dat": 634, "only_use_cftime_datetim": 634, "only_use_python_datetim": 634, "figure_titl": 634, "isoformat": 634, "plot_rhi_cfradi": [634, 642, 667], "differnenti": 636, "cori": [636, 637], "weber": [636, 637], "cweber": [636, 637], "220629": 636, "matplolib": 636, "visabl": 636, "flow": 636, "paramt": 636, "compens": 636, "00015": 636, "veri": [636, 644, 647, 648], "moir": 636, "001": 636, "get_start": [636, 637], "get_end": [636, 637], "blur": 636, "nice": [636, 668], "arbirarli": 636, "gaussian_filt": [636, 637], "ang": [636, 637], "levels_rain": 636, "levels_ic": 636, "contours_ic": 636, "contours_rain": 636, "fmt": [636, 637], "0000": [636, 637], "plot_rhi_contours_differential_reflect": [636, 642, 667], "spyi": 637, "034142": 637, "ramp": 637, "blob": 637, "pyart_budrd18": 637, "coutour": 637, "dot": 637, "major": 637, "axhlin": [637, 644], "axvlin": 637, "00b4ff": 637, "ff6800": 637, "set_ylabel": [637, 644, 650], "cp": 637, "plot_rhi_data_overlai": [637, 642, 667], "110041": 638, "plot_rhi_mdv": [638, 642, 667], "fields_to_plot": 639, "plot_num": 639, "u00b0": 639, "plot_rhi_two_panel": [639, 642, 667], "20110520100000_nexrad_grid": 640, "read_grid": [640, 644, 648], "plot_crosshair": 640, "plot_longitude_slic": 640, "plot_latitude_slic": [640, 664], "plot_three_panel_gridmapdisplai": [640, 642, 667], "225": 641, "xsect": 641, "plot_xsect": [641, 642, 667], "essenti": 644, "distinguish": 644, "insuffici": 644, "tenth": 644, "aggress": 644, "noisi": 644, "ref_data": 644, "ref_data_mask": 644, "masked_outsid": 644, "create_cfad": 644, "15000": [644, 660, 664], "freq_norm_mask": 644, "masked_less_equ": [644, 648], "cfad_pm": 644, "plasma": 644, "set_xlabel": [644, 650], "8km": 644, "widen": 644, "freq_norm2": 644, "freq_norm0": 644, "freq_norm2_mask": 644, "freq_norm0_mask": 644, "chart": 644, "14km": 644, "12km": 644, "swath": 644, "velocity_dealia": 644, "rdbu_r": 644, "bimod": 644, "reproduc": 644, "2c": 644, "demonstr": [644, 658], "ddop": 644, "910815": 644, "213931": 644, "altitude_data": 644, "field_data": 644, "maxdz": [644, 648], "vvel_data": 644, "w_wind": 644, "vvel_mask": 644, "masked_invalid": [644, 647], "field_data_mask": 644, "cont": 644, "763": [644, 651, 667], "plot_cfad": [644, 651, 667], "maxwel": [645, 646], "site_lon": 645, "73": 645, "site_lat": 645, "latitdu": 645, "pathcollect": 645, "0x7f1c018f65a0": 645, "get_field_loc": 645, "2kb": 645, "176b": 645, "350": 645, "818e": 645, "recalculated_diff_phas": [645, 660], "2778": 645, "unf_dp_phase_shift": [645, 660], "88b": 645, "145": [645, 648], "144": [645, 648], "diff_reflect": [645, 660], "8b": 645, "20t06": 645, "distance_from_radar": 645, "233": 645, "545": 645, "latitude_of_loc": 645, "longitude_of_loc": 645, "line2d": 645, "0x7f1c01d75f40": 645, "155": [645, 651, 667], "plot_column_subset": [645, 651, 667], "compz": 646, "composite_reflect": 646, "composite_displai": 646, "229": [646, 651, 667], "plot_composite_reflect": [646, 651, 667], "classifc": 647, "summer": [647, 648], "ian": [647, 648], "footprint": 647, "yield": 647, "smoother": 647, "curv": 647, "plot_convstrat_schem": 647, "pick": 647, "radii": 647, "dilat": 647, "conv_strat_yut": 647, "convsf_mask": 647, "masked_equ": [647, 648], "feature_detect": [647, 648], "convsf": [647, 648], "magma_r_cmap": [647, 648], "ref_cmap": [647, 648], "albersequalarea": [647, 648], "convsf_und": 647, "convsf_ov": 647, "uncertainti": [647, 648], "underest": [647, 648], "feature_und": [647, 648], "overest": [647, 648], "feature_ov": [647, 648], "ktbw": [647, 648], "ktbw20220928_190142_v06": [647, 648], "rasumussen": [647, 648], "2003": [647, 648], "reflecit": 647, "kokx": [647, 648], "kokx20210207_161413_v06": [647, 648], "nonmuted_ref": 647, "nonmuted_ref_linear": 647, "mm6": 647, "m3": 647, "snow_rat": [647, 648], "snow_rate_dict": 647, "40500": 647, "034": [647, 648], "ccotd": [647, 648], "rasmussen": [647, 648], "dixon": [647, 648, 658], "vasiloff": [647, 648], "hage": [647, 648], "knight": [647, 648], "vivekanandan": [647, 648], "xu": [647, 648], "nowcast": [647, 648], "accumul": [647, 648], "042": [647, 648], "3c0020": [647, 648], "snuart": [647, 648], "plot_convective_stratiform": [647, 651, 667], "heavili": 648, "customiz": 648, "manuscript": 648, "feature_mask": 648, "19990811": 648, "221202": 648, "convsf_cmap": 648, "140": 648, "253": 648, "csb": 648, "csb_mask": 648, "csl": 648, "convsf_lo": 648, "csl_mask": 648, "csh": 648, "convsf_hi": 648, "csh_mask": 648, "rpm": 648, "csbpm": 648, "set_yticklabel": 648, "lo": 648, "cslpm": 648, "cshpm": 648, "csb_lt": 648, "csb_lt_mask": 648, "csu_lt": 648, "csu_lt_mask": 648, "cso_lt": 648, "cso_lt_mask": 648, "csupm": 648, "csopm": 648, "ztor": 648, "ref_field_ov": 648, "ref_field_und": 648, "2db": 648, "_overest": 648, "_underest": 648, "reflectivity_ov": 648, "reflectivity_und": 648, "snow_rate_ov": 648, "snow_rate_und": 648, "feature_estimate_dict": 648, "bpm": 648, "upm": 648, "opm": 648, "distinct": 648, "scalar_features_mask": 648, "cosine_features_mask": 648, "isol": 648, "faint_featur": 648, "faint_features_mask": 648, "features_faint_strong": 648, "features_faint_strong_mask": 648, "new_dict": 648, "comment_1": 648, "faint_strong_cmap": 648, "faint_strong": 648, "238": 648, "93": 648, "66": 648, "quickli": 648, "quick_image_mut": 648, "muted_ref": 648, "nonmuted_field": 648, "muted_field": 648, "snow_rate_nonmut": 648, "snow_rate_mut": 648, "features_nonmut": 648, "features_mut": 648, "srpm": 648, "srpmm": 648, "csbpmm": 648, "968": [648, 651, 667], "plot_feature_detect": [648, 651, 667], "daniel": [649, 650], "wolfensberg": [649, 650], "mll2217907250u": 649, "003": 649, "preinterpol": 649, "20220628072500_savevol_cosmo_lookup_temp": 649, "nwp_temp": 649, "calculate_attenuation_zphi": 649, "uncorrected_differential_phas": 649, "pia": 649, "pida": 649, "corrected_reflect": [649, 665], "corrected_differential_reflect": [649, 665], "kdp_maesaka": 649, "specific_differential_phas": [649, 665], "hydroclass_semisupervis": 649, "uncorrected_cross_correlation_ratio": 649, "radar_echo_classif": 649, "lr": 649, "rp": 649, "rn": 649, "vi": 649, "mh": 649, "ih": 649, "hdg": 649, "boundarynorm": 649, "aggreg": 649, "crystal": 649, "rime": 649, "particl": 649, "wet": 649, "graupel": 649, "plot_hydrometeor": [649, 651, 667], "2682": 650, "5470354519784": 650, "447328651323915": 650, "5273": 650, "055615736172": 650, "7533807586878538": 650, "7815": 650, "51210340485": 650, "341798234730959": 650, "10403": 650, "798749463633": 650, "977668723091483": 650, "14259": 650, "735154148191": 650, "905980195850134": 650, "18533": 650, "70608163625": 650, "262251073494554": 650, "22800": [650, 660], "97541932203": 650, "613871516659856": 650, "27060": [650, 660], "25919727981": 650, "959520922973752": 650, "31310": 650, "269606200978": 650, "29787217825651": 650, "35549": 650, "73140401952": 650, "62760841473937": 650, "39777": 650, "36820153147": 650, "94740904122591": 650, "43991": 650, "90973467566": 650, "25595719181001": 650, "50263": 650, "42219179496": 650, "671291364356875": 650, "58621": 650, "52730140835": 650, "22838316485286": 650, "71003": 650, "14627731778": 650, "68": 650, "92013945430517": 650, "87118": 650, "5253265705": 650, "4666496720165": 650, "106741": 650, "22752280161": 650, "65626102685928": 650, "125477": 650, "00644101389": 650, "124": 650, "97631322406232": 650, "143293": 650, "15816160105": 650, "38701202347875": 650, "160000": 650, "28993562795": 650, "68618156574667": 650, "mla2119412050u": 650, "zlevel": 650, "5000": [650, 664], "u_allsweep": 650, "v_allsweep": 650, "idx": 650, "radar_1sweep": 650, "vad_brown": 650, "u_avg": 650, "nanmean": 650, "v_avg": 650, "sharei": 650, "plot_vad": [650, 651, 667], "000": 652, "xd": [654, 655, 656], "open_cfradial1_datatre": [654, 655, 656], "sweep_0": 654, "vel_textur": [654, 662], "velocity_textur": [654, 662, 665], "At": [654, 662], "velocity_dealias": [654, 662], "816": [654, 657, 667], "plot_dealias_xradar": [654, 657, 667], "101": 655, "10_000": 655, "50_000": 655, "plot_grid_xradar": [655, 657, 667], "686": [656, 657, 667], "plot_xradar": [656, 657, 667], "conceptu": 658, "projectpythia": 658, "understand": 658, "someth": 658, "maik": 658, "heistermann": 658, "bam": 658, "kellei": 658, "peura": 658, "pfaff": 658, "wolff": 658, "emerg": 658, "bull": 658, "amer": 658, "soc": 658, "117": 658, "128": 658, "00240": 658, "abl": [658, 668], "sophist": 658, "tutori": 658, "materi": 658, "erad": 658, "asr": 658, "asm": 658, "Or": 658, "pyart_env": [658, 661, 664, 671], "wish": 658, "unreleas": 658, "charg": 658, "resourc": [658, 668], "lassen": 658, "radtec": 658, "rsl_path": [658, 668], "usr": 658, "wrapper": 658, "fastest": 658, "cbc": 658, "glpk": 658, "coincbc": [658, 668, 671], "coin_install_dir": [658, 668, 671], "ask": [658, 671], "hypothet": 660, "dict_kei": [660, 665], "rain_rate_a": [660, 665], "volume_numb": 660, "platform_typ": 660, "instrument_typ": 660, "primary_axi": 660, "make_empty_ppi_radar": 660, "59416667": 660, "isn": 660, "240": 660, "660": 660, "720": 660, "780": 660, "960": 660, "1260": 660, "1560": 660, "1620": 660, "1680": 660, "1740": 660, "1860": 660, "1920": 660, "1980": 660, "2040": 660, "2100": 660, "2160": 660, "2220": 660, "2280": 660, "2340": 660, "2400": 660, "2460": 660, "2520": 660, "2580": 660, "2640": 660, "2700": 660, "2760": 660, "2820": 660, "2880": 660, "2940": 660, "3060": 660, "3120": 660, "3180": 660, "3240": 660, "3300": 660, "3360": 660, "3420": 660, "3480": 660, "3540": 660, "3600": 660, "3660": 660, "3720": 660, "3780": 660, "3840": 660, "3900": 660, "3960": 660, "4020": 660, "4080": 660, "4140": 660, "4200": 660, "4260": 660, "4320": 660, "4380": 660, "4440": 660, "4500": 660, "4560": 660, "4620": 660, "4680": 660, "4740": 660, "4800": 660, "4860": 660, "4920": 660, "4980": 660, "5040": 660, "5100": 660, "5160": 660, "5220": 660, "5280": 660, "5340": 660, "5400": 660, "5460": 660, "5520": 660, "5580": 660, "5640": 660, "5700": 660, "5760": 660, "5820": 660, "5880": 660, "5940": 660, "6000": [660, 664], "6060": 660, "6120": 660, "6180": 660, "6240": 660, "6300": 660, "6360": 660, "6420": 660, "6480": 660, "6540": 660, "6600": 660, "6660": 660, "6720": 660, "6780": 660, "6840": 660, "6900": 660, "6960": 660, "7020": 660, "7080": 660, "7140": 660, "7200": [660, 666], "7260": 660, "7320": 660, "7380": 660, "7440": 660, "7560": 660, "7620": 660, "7680": 660, "7740": 660, "7800": 660, "7860": 660, "7920": 660, "7980": 660, "8040": 660, "8100": 660, "8160": 660, "8220": 660, "8280": 660, "8340": 660, "8400": 660, "8460": 660, "8520": 660, "8580": 660, "8640": 660, "8700": 660, "8760": 660, "8820": 660, "8880": 660, "8940": 660, "9000": [660, 664], "9060": 660, "9120": 660, "9180": 660, "9240": 660, "9300": 660, "9360": 660, "9420": 660, "9480": 660, "9540": 660, "9600": 660, "9660": 660, "9720": 660, "9780": 660, "9840": 660, "9900": 660, "9960": 660, "10020": 660, "10080": 660, "10140": 660, "10200": 660, "10260": 660, "10320": 660, "10380": 660, "10440": 660, "10500": 660, "10560": 660, "10620": 660, "10680": 660, "10740": 660, "10800": 660, "10860": 660, "10920": 660, "10980": 660, "11040": 660, "11100": 660, "11160": 660, "11220": 660, "11280": 660, "11340": 660, "11400": 660, "11460": 660, "11520": 660, "11580": 660, "11640": 660, "11700": 660, "11760": 660, "11820": 660, "11880": 660, "11940": 660, "12060": 660, "12120": 660, "12180": 660, "12240": 660, "12300": 660, "12360": 660, "12420": 660, "12480": 660, "12540": 660, "12600": 660, "12660": 660, "12720": 660, "12780": 660, "12840": 660, "12900": 660, "12960": 660, "13020": 660, "13080": 660, "13140": 660, "13200": 660, "13260": 660, "13320": 660, "13380": 660, "13440": 660, "13500": 660, "13560": 660, "13620": 660, "13680": 660, "13740": 660, "13800": 660, "13860": 660, "13920": 660, "13980": 660, "14040": 660, "14100": 660, "14160": 660, "14220": 660, "14280": 660, "14340": 660, "14400": 660, "14460": 660, "14520": 660, "14580": 660, "14640": 660, "14700": 660, "14760": 660, "14820": 660, "14880": 660, "14940": 660, "15060": 660, "15120": 660, "15180": 660, "15240": 660, "15300": 660, "15360": 660, "15420": 660, "15480": 660, "15540": 660, "15600": 660, "15660": 660, "15720": 660, "15780": 660, "15840": 660, "15900": 660, "15960": 660, "16020": 660, "16080": 660, "16140": 660, "16200": 660, "16260": 660, "16320": 660, "16380": 660, "16440": 660, "16500": 660, "16560": 660, "16620": 660, "16680": 660, "16740": 660, "16800": 660, "16860": 660, "16920": 660, "16980": 660, "17040": 660, "17100": 660, "17160": 660, "17220": 660, "17280": 660, "17340": 660, "17400": 660, "17460": 660, "17520": 660, "17580": 660, "17640": 660, "17700": 660, "17760": 660, "17820": 660, "17880": 660, "17940": 660, "18000": [660, 664], "18060": 660, "18120": 660, "18180": 660, "18240": 660, "18300": 660, "18360": 660, "18420": 660, "18480": 660, "18540": 660, "18600": 660, "18660": 660, "18720": 660, "18780": 660, "18840": 660, "18900": 660, "18960": 660, "19020": 660, "19080": 660, "19140": 660, "19200": 660, "19260": 660, "19320": 660, "19380": 660, "19440": 660, "19500": 660, "19560": 660, "19620": 660, "19680": 660, "19740": 660, "19800": 660, "19860": 660, "19920": 660, "19980": 660, "20040": 660, "20100": 660, "20160": 660, "20220": 660, "20280": 660, "20340": 660, "20400": 660, "20460": 660, "20520": 660, "20580": 660, "20640": 660, "20700": 660, "20760": 660, "20820": 660, "20880": 660, "20940": 660, "21000": [660, 664], "21060": 660, "21120": 660, "21180": 660, "21240": 660, "21300": 660, "21360": 660, "21420": 660, "21480": 660, "21540": 660, "21600": 660, "21660": 660, "21720": 660, "21780": 660, "21840": 660, "21900": 660, "21960": 660, "22020": 660, "22080": 660, "22140": 660, "22200": 660, "22260": 660, "22320": 660, "22380": 660, "22440": 660, "22500": 660, "22560": 660, "22620": 660, "22680": 660, "22740": 660, "22860": 660, "22920": 660, "22980": 660, "23040": 660, "23100": 660, "23160": 660, "23220": 660, "23280": 660, "23340": 660, "23400": 660, "23460": 660, "23520": 660, "23580": 660, "23640": 660, "23700": 660, "23760": 660, "23820": 660, "23880": 660, "23940": 660, "24000": [660, 664], "24060": 660, "24120": 660, "24180": 660, "24240": 660, "24300": 660, "24360": 660, "24420": 660, "24480": 660, "24540": 660, "24600": 660, "24660": 660, "24720": 660, "24780": 660, "24840": 660, "24900": 660, "24960": 660, "25020": 660, "25080": 660, "25140": 660, "25200": 660, "25260": 660, "25320": 660, "25380": 660, "25440": 660, "25500": 660, "25560": 660, "25620": 660, "25680": 660, "25740": 660, "25800": 660, "25860": 660, "25920": 660, "25980": 660, "26040": 660, "26100": 660, "26160": 660, "26220": 660, "26280": 660, "26340": 660, "26400": 660, "26460": 660, "26520": 660, "26580": 660, "26640": 660, "26700": 660, "26760": 660, "26820": 660, "26880": 660, "26940": 660, "27000": [660, 664], "27120": 660, "27180": 660, "27240": 660, "27300": 660, "27360": 660, "27420": 660, "27480": 660, "27540": 660, "27600": 660, "27660": 660, "27720": 660, "27780": 660, "27840": 660, "27900": 660, "27960": 660, "28020": 660, "28080": 660, "28140": 660, "28200": 660, "28260": 660, "28320": 660, "28380": 660, "28440": 660, "28500": 660, "28560": 660, "28620": 660, "28680": 660, "28740": 660, "28800": 660, "28860": 660, "28920": 660, "28980": 660, "29040": 660, "29100": 660, "29160": 660, "29220": 660, "29280": 660, "29340": 660, "29400": 660, "29460": 660, "29520": 660, "29580": 660, "29640": 660, "29700": 660, "29760": 660, "29820": 660, "29880": 660, "29940": 660, "30000": [660, 664], "30060": 660, "30120": 660, "30180": 660, "30240": 660, "30300": 660, "30360": 660, "30420": 660, "30480": 660, "30540": 660, "30600": 660, "30660": 660, "30720": 660, "30780": 660, "30840": 660, "30900": 660, "30960": 660, "31020": 660, "31080": 660, "31140": 660, "31200": 660, "31260": 660, "31320": 660, "31380": 660, "31440": 660, "31500": 660, "31560": 660, "31620": 660, "31680": 660, "31740": 660, "31800": 660, "31860": 660, "31920": 660, "31980": 660, "32040": 660, "32100": 660, "32160": 660, "32220": 660, "32280": 660, "32340": 660, "32400": 660, "32460": 660, "32520": 660, "32580": 660, "32640": 660, "32700": 660, "32760": 660, "32820": 660, "32880": 660, "32940": 660, "33000": [660, 664], "33060": 660, "33120": 660, "33180": 660, "33240": 660, "33300": 660, "33360": 660, "33420": 660, "33480": 660, "33540": 660, "33600": 660, "33660": 660, "33720": 660, "33780": 660, "33840": 660, "33900": 660, "33960": 660, "34020": 660, "34080": 660, "34140": 660, "34200": 660, "34260": 660, "34320": 660, "34380": 660, "34440": 660, "34500": 660, "34560": 660, "34620": 660, "34680": 660, "34740": 660, "34800": 660, "34860": 660, "34920": 660, "34980": 660, "35040": 660, "35100": 660, "35160": 660, "35220": 660, "35280": 660, "35340": 660, "35400": 660, "35460": 660, "35520": 660, "35580": 660, "35640": 660, "35700": 660, "35760": 660, "35820": 660, "35880": 660, "35940": 660, "36000": [660, 664], "36060": 660, "36120": 660, "36180": 660, "36240": 660, "36300": 660, "36360": 660, "36420": 660, "36480": 660, "36540": 660, "36600": 660, "36660": 660, "36720": 660, "36780": 660, "36840": 660, "36900": 660, "36960": 660, "37020": 660, "37080": 660, "37140": 660, "37200": 660, "37260": 660, "37320": 660, "37380": 660, "37440": 660, "37500": 660, "37560": 660, "37620": 660, "37680": 660, "37740": 660, "37800": 660, "37860": 660, "37920": 660, "37980": 660, "38040": 660, "38100": 660, "38160": 660, "38220": 660, "38280": 660, "38340": 660, "38400": 660, "38460": 660, "38520": 660, "38580": 660, "38640": 660, "38700": 660, "38760": 660, "38820": 660, "38880": 660, "38940": 660, "39000": [660, 664], "39060": 660, "39120": 660, "39180": 660, "39240": 660, "39300": 660, "39360": 660, "39420": 660, "39480": 660, "39540": 660, "39600": 660, "39660": 660, "39720": 660, "39780": 660, "39840": 660, "39900": 660, "39960": 660, "59416776": 660, "59416886": 660, "59489769": 660, "59489879": 660, "5948999": 660, "59415662": 660, "59414657": 660, "5874659": 660, "58745576": 660, "58744563": 660, "59414621": 660, "59412575": 660, "5805231": 660, "58050246": 660, "58048182": 660, "59419881": 660, "59423095": 660, "61560159": 660, "61563401": 660, "61566644": 660, "59418877": 660, "59421087": 660, "6089062": 660, "6089285": 660, "60895079": 660, "59417836": 660, "59419005": 660, "60196382": 660, "60197561": 660, "60198741": 660, "get_metadata": 660, "ref_dict": 660, "reflecitivity_horizont": 660, "21875": 660, "34375": 660, "0078125": 660, "2109375": 660, "1171875": 660, "59375": 660, "421875": 660, "5625": 660, "7109375": 660, "609375": 660, "5078125": 660, "3828125": 660, "6875": 660, "328125": 660, "3203125": 660, "859375": 660, "6484375": 660, "8515625": 660, "9375": [660, 666], "0234375": 660, "6328125": 660, "2890625": 660, "546875": 660, "578125": 660, "6796875": 660, "ref_gt_0": 661, "mask_dict": 661, "reflectivity_mask": 661, "coolwarm": 661, "sherm": [661, 664], "782": [661, 664], "matplotlibdeprecationwarn": [661, 664], "position": [661, 664], "829": [661, 664], "write_cfradi": 661, "new_radar": 661, "2pi": 662, "wave": 662, "3pi": 662, "erron": 662, "phenomena": [662, 666], "maximium": 662, "unambi": 662, "preprocess": 662, "thankfulli": [662, 664], "surround": [662, 664], "presenc": 662, "524973": 662, "vleociti": 662, "realist": 662, "characterist": 664, "100000": 664, "gates_to_grid": 664, "99000": 664, "98000": 664, "97000": 664, "96000": 664, "95000": 664, "94000": 664, "93000": 664, "92000": 664, "91000": 664, "90000": 664, "89000": 664, "88000": 664, "87000": 664, "86000": 664, "85000": 664, "84000": 664, "83000": 664, "82000": 664, "81000": 664, "80000": 664, "79000": 664, "78000": 664, "77000": 664, "76000": 664, "75000": 664, "74000": 664, "73000": 664, "72000": 664, "71000": 664, "70000": 664, "69000": 664, "68000": 664, "67000": 664, "66000": 664, "65000": 664, "64000": 664, "63000": 664, "62000": 664, "61000": 664, "59000": 664, "58000": 664, "57000": 664, "56000": 664, "55000": 664, "54000": 664, "53000": 664, "52000": 664, "51000": 664, "49000": 664, "48000": 664, "47000": 664, "46000": 664, "45000": 664, "44000": 664, "43000": 664, "42000": 664, "41000": 664, "38000": 664, "37000": 664, "35000": 664, "34000": 664, "32000": 664, "31000": 664, "29000": 664, "28000": 664, "26000": 664, "23000": 664, "22000": 664, "19000": 664, "16000": 664, "14000": 664, "13000": 664, "8000": 664, "longitudn": 664, "latitudn": 664, "suffer": 664, "artifici": 664, "feather": 664, "grid_bett": 664, "1750": 664, "sgpxsaprcmacsuri5": 665, "20171004": 665, "203018": 665, "total_pow": 665, "xsapr_clutt": 665, "sounding_temperatur": 665, "signal_to_noise_ratio": 665, "unfolded_differential_phas": 665, "corrected_differential_phas": 665, "filtered_corrected_differential_phas": 665, "corrected_specific_diff_phas": 665, "filtered_corrected_specific_diff_phas": 665, "path_integrated_attenu": 665, "specific_differential_attenu": 665, "path_integrated_differential_attenu": 665, "nonhydrometeor": 665, "exclude_equ": 665, "tell": 665, "refl_arrai": 665, "reflectivity_w_mask": 665, "iter_slic": [665, 666], "9344453454202706": 665, "620691732853737": 665, "3756584054113996": 665, "597935968662154": 665, "696735014111216": 665, "061894569912447": 665, "721673265240488": 665, "086695918593689": 665, "33930700509078": 665, "599363169483158": 665, "836875745223637": 665, "051601529570966": 665, "22435547210836": 665, "378109469982695": 665, "553820234067336": 665, "648943841665002": 665, "837593740986444": 665, "049614721040282": 665, "331202567459613": 665, "585432697375357": 665, "87002341270722": 665, "993012637722325": 665, "061966001642219": 665, "122799449619672": 665, "861035552720102": 665, "74608994279257": 665, "148801770281325": 665, "70860719727862": 665, "989513966551444": 665, "188644935344827": 665, "89301878240611": 665, "172644371021923": 665, "79879842243138": 665, "912806090219976": 665, "766281467013889": 665, "920522471877334": 665, "898600907318164": 665, "971026055481874": 665, "110503947133682": 665, "094456418731509": 665, "0822160050675675": 665, "036430544969512": 665, "259332430219459": 665, "2438254054588604": 665, "473482666015625": 665, "574283685503023": 665, "866719139946832": 665, "771468742643597": 665, "beam_azimuth_angl": 666, "azimuth_angle_from_true_north": 666, "radial_azimuth_coordin": 666, "beam_elevation_angl": 666, "elevation_angle_from_horizontal_plan": 666, "radial_elevation_coordin": 666, "1832": 666, "log_differential_reflectivity_hv": 666, "875": 666, "differential_phase_hv": 666, "equivalent_reflectivity_factor": 666, "cross_correlation_ratio_hv": 666, "correlation_ratio": 666, "meters_per_second": 666, "doppler_spectrum_width": 666, "radial_velocity_of_scatterers_away_from_instru": 666, "target_fixed_angl": 666, "degrees_north": 666, "degrees_east": 666, "projection_range_coordin": 666, "range_to_measurement_volum": 666, "radial_range_coordin": 666, "spacing_is_const": 666, "meters_to_center_of_first_g": 666, "2125": 666, "meters_between_g": 666, "s20": 666, "unitless": 666, "coplan": 666, "vertical_point": 666, "idl": 666, "azimuth_surveil": 666, "elevation_surveil": 666, "sunscan": 666, "manual_ppi": 666, "manual_rhi": 666, "17t19": 666, "21z": 666, "time_in_seconds_since_volume_start": 666, "calendar": 666, "gregorian": 666, "katx": 666, "original_contain": 666, "vcp_pattern": 666, "7470703": 666, "7196045": 666, "6893921": 666, "511719": 666, "get_slic": 666, "sweep_1": 666, "52734375": 666, "indici": 666, "slice_indic": 666, "9066728410400056": 666, "478547577741713": 666, "587792083929423": 666, "871031288639269": 666, "971692217963673": 666, "830616390843327": 666, "108188248095756": 666, "483419908190385": 666, "88976917057903": 666, "852766685681688": 666, "410455582269897": 666, "66444787446138": 666, "997862391449566": 666, "172098402018502": 666, "489752513534416": 666, "712565619531706": 666, "commonli": 666, "9x": 668, "10x": 668, "11x": 668, "But": 668, "bash": 668, "pythonpath": 668, "pth": 668, "build_ext": 668, "segfault": 668, "Theres": 668, "proper": 668, "reinstal": 668, "remedi": 668, "fno": 668, "protector": 668, "d_fortify_sourc": 668, "cflag": 668, "makefil": 668, "troubl": 668, "define_macro": 668, "macro": 668, "extra_compile_arg": 668, "m32": 668, "extra_link_arg": 668, "m64": 668, "proj_lib": 668, "plai": 668, "xx": 668, "xxx": 668, "mpl_toolkit": 668, "conflict": 671, "exit": 671, "led": 671, "manag": 671, "deactiv": 671, "enviro": 671, "scratch": 671, "spyder": 671, "enhanc": 671, "though": 671, "yourusernam": 671, "youranacondadir": 671, "gitter": 671, "im": 671}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [126, 1, 0, "-", "correct"], [170, 1, 0, "-", "exceptions"], [171, 1, 0, "-", "filters"], [206, 1, 0, "-", "graph"], [363, 1, 0, "-", "io"], [384, 1, 0, "-", "lazydict"], [408, 1, 0, "-", "map"], [421, 1, 0, "-", "retrieve"], [457, 1, 0, "-", "testing"], [560, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_geographic"], [122, 0, 1, "", "cartesian_to_geographic_aeqd"], [123, 0, 1, "", "cartesian_vectors_to_geographic"], [124, 0, 1, "", "geographic_to_cartesian"], [125, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[127, 2, 1, "", "GateFilter"], [157, 0, 1, "", "calculate_attenuation"], [158, 0, 1, "", "calculate_attenuation_philinear"], [159, 0, 1, "", "calculate_attenuation_zphi"], [160, 0, 1, "", "correct_bias"], [161, 0, 1, "", "correct_noise_rhohv"], [162, 0, 1, "", "dealias_fourdd"], [163, 0, 1, "", "dealias_region_based"], [164, 0, 1, "", "dealias_unwrap_phase"], [165, 0, 1, "", "despeckle_field"], [166, 0, 1, "", "find_objects"], [167, 0, 1, "", "moment_based_gate_filter"], [168, 0, 1, "", "phase_proc_lp"], [169, 0, 1, "", "phase_proc_lp_gf"]], "pyart.correct.GateFilter": [[128, 3, 1, "", "copy"], [129, 3, 1, "", "exclude_above"], [130, 3, 1, "", "exclude_above_toa"], [131, 3, 1, "", "exclude_all"], [132, 3, 1, "", "exclude_below"], [133, 3, 1, "", "exclude_equal"], [134, 3, 1, "", "exclude_gates"], [135, 3, 1, "", "exclude_inside"], [136, 3, 1, "", "exclude_invalid"], [137, 3, 1, "", "exclude_last_gates"], [138, 3, 1, "", "exclude_masked"], [139, 3, 1, "", "exclude_none"], [140, 3, 1, "", "exclude_not_equal"], [141, 3, 1, "", "exclude_outside"], [142, 3, 1, "", "exclude_transition"], [143, 4, 1, "", "gate_excluded"], [144, 4, 1, "", "gate_included"], [145, 3, 1, "", "include_above"], [146, 3, 1, "", "include_all"], [147, 3, 1, "", "include_below"], [148, 3, 1, "", "include_equal"], [149, 3, 1, "", "include_gates"], [150, 3, 1, "", "include_inside"], [151, 3, 1, "", "include_none"], [152, 3, 1, "", "include_not_equal"], [153, 3, 1, "", "include_not_masked"], [154, 3, 1, "", "include_not_transition"], [155, 3, 1, "", "include_outside"], [156, 3, 1, "", "include_valid"]], "pyart.filters": [[172, 2, 1, "", "GateFilter"], [202, 0, 1, "", "iso0_based_gate_filter"], [203, 0, 1, "", "moment_and_texture_based_gate_filter"], [204, 0, 1, "", "moment_based_gate_filter"], [205, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[173, 3, 1, "", "copy"], [174, 3, 1, "", "exclude_above"], [175, 3, 1, "", "exclude_above_toa"], [176, 3, 1, "", "exclude_all"], [177, 3, 1, "", "exclude_below"], [178, 3, 1, "", "exclude_equal"], [179, 3, 1, "", "exclude_gates"], [180, 3, 1, "", "exclude_inside"], [181, 3, 1, "", "exclude_invalid"], [182, 3, 1, "", "exclude_last_gates"], [183, 3, 1, "", "exclude_masked"], [184, 3, 1, "", "exclude_none"], [185, 3, 1, "", "exclude_not_equal"], [186, 3, 1, "", "exclude_outside"], [187, 3, 1, "", "exclude_transition"], [188, 4, 1, "", "gate_excluded"], [189, 4, 1, "", "gate_included"], [190, 3, 1, "", "include_above"], [191, 3, 1, "", "include_all"], [192, 3, 1, "", "include_below"], [193, 3, 1, "", "include_equal"], [194, 3, 1, "", "include_gates"], [195, 3, 1, "", "include_inside"], [196, 3, 1, "", "include_none"], [197, 3, 1, "", "include_not_equal"], [198, 3, 1, "", "include_not_masked"], [199, 3, 1, "", "include_not_transition"], [200, 3, 1, "", "include_outside"], [201, 3, 1, "", "include_valid"]], "pyart.graph": [[207, 2, 1, "", "AirborneRadarDisplay"], [237, 2, 1, "", "GridMapDisplay"], [253, 2, 1, "", "GridMapDisplayBasemap"], [267, 2, 1, "", "RadarDisplay"], [296, 2, 1, "", "RadarMapDisplay"], [329, 2, 1, "", "RadarMapDisplayBasemap"], [362, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[208, 3, 1, "", "generate_az_rhi_title"], [209, 3, 1, "", "generate_filename"], [210, 3, 1, "", "generate_ray_title"], [211, 3, 1, "", "generate_title"], [212, 3, 1, "", "generate_vpt_title"], [213, 3, 1, "", "label_xaxis_r"], [214, 3, 1, "", "label_xaxis_rays"], [215, 3, 1, "", "label_xaxis_time"], [216, 3, 1, "", "label_xaxis_x"], [217, 3, 1, "", "label_yaxis_field"], [218, 3, 1, "", "label_yaxis_y"], [219, 3, 1, "", "label_yaxis_z"], [220, 3, 1, "", "plot"], [221, 3, 1, "", "plot_azimuth_to_rhi"], [222, 3, 1, "", "plot_colorbar"], [223, 3, 1, "", "plot_cr_raster"], [224, 3, 1, "", "plot_cross_hair"], [225, 3, 1, "", "plot_grid_lines"], [226, 3, 1, "", "plot_label"], [227, 3, 1, "", "plot_labels"], [228, 3, 1, "", "plot_ppi"], [229, 3, 1, "", "plot_range_ring"], [230, 3, 1, "", "plot_range_rings"], [231, 3, 1, "", "plot_ray"], [232, 3, 1, "", "plot_rhi"], [233, 3, 1, "", "plot_sweep_grid"], [234, 3, 1, "", "plot_vpt"], [235, 3, 1, "", "set_aspect_ratio"], [236, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[238, 3, 1, "", "cartopy_coastlines"], [239, 3, 1, "", "cartopy_political_boundaries"], [240, 3, 1, "", "cartopy_states"], [241, 3, 1, "", "generate_filename"], [242, 3, 1, "", "generate_grid_title"], [243, 3, 1, "", "generate_latitudinal_level_title"], [244, 3, 1, "", "generate_longitudinal_level_title"], [245, 3, 1, "", "plot_colorbar"], [246, 3, 1, "", "plot_cross_section"], [247, 3, 1, "", "plot_crosshairs"], [248, 3, 1, "", "plot_grid"], [249, 3, 1, "", "plot_latitude_slice"], [250, 3, 1, "", "plot_latitudinal_level"], [251, 3, 1, "", "plot_longitude_slice"], [252, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[254, 3, 1, "", "generate_filename"], [255, 3, 1, "", "generate_grid_title"], [256, 3, 1, "", "generate_latitudinal_level_title"], [257, 3, 1, "", "generate_longitudinal_level_title"], [258, 3, 1, "", "get_basemap"], [259, 3, 1, "", "plot_basemap"], [260, 3, 1, "", "plot_colorbar"], [261, 3, 1, "", "plot_crosshairs"], [262, 3, 1, "", "plot_grid"], [263, 3, 1, "", "plot_latitude_slice"], [264, 3, 1, "", "plot_latitudinal_level"], [265, 3, 1, "", "plot_longitude_slice"], [266, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[268, 3, 1, "", "generate_az_rhi_title"], [269, 3, 1, "", "generate_filename"], [270, 3, 1, "", "generate_ray_title"], [271, 3, 1, "", "generate_title"], [272, 3, 1, "", "generate_vpt_title"], [273, 3, 1, "", "label_xaxis_r"], [274, 3, 1, "", "label_xaxis_rays"], [275, 3, 1, "", "label_xaxis_time"], [276, 3, 1, "", "label_xaxis_x"], [277, 3, 1, "", "label_yaxis_field"], [278, 3, 1, "", "label_yaxis_y"], [279, 3, 1, "", "label_yaxis_z"], [280, 3, 1, "", "plot"], [281, 3, 1, "", "plot_azimuth_to_rhi"], [282, 3, 1, "", "plot_colorbar"], [283, 3, 1, "", "plot_cr_raster"], [284, 3, 1, "", "plot_cross_hair"], [285, 3, 1, "", "plot_grid_lines"], [286, 3, 1, "", "plot_label"], [287, 3, 1, "", "plot_labels"], [288, 3, 1, "", "plot_ppi"], [289, 3, 1, "", "plot_range_ring"], [290, 3, 1, "", "plot_range_rings"], [291, 3, 1, "", "plot_ray"], [292, 3, 1, "", "plot_rhi"], [293, 3, 1, "", "plot_vpt"], [294, 3, 1, "", "set_aspect_ratio"], [295, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[297, 3, 1, "", "generate_az_rhi_title"], [298, 3, 1, "", "generate_filename"], [299, 3, 1, "", "generate_ray_title"], [300, 3, 1, "", "generate_title"], [301, 3, 1, "", "generate_vpt_title"], [302, 3, 1, "", "label_xaxis_r"], [303, 3, 1, "", "label_xaxis_rays"], [304, 3, 1, "", "label_xaxis_time"], [305, 3, 1, "", "label_xaxis_x"], [306, 3, 1, "", "label_yaxis_field"], [307, 3, 1, "", "label_yaxis_y"], [308, 3, 1, "", "label_yaxis_z"], [309, 3, 1, "", "plot"], [310, 3, 1, "", "plot_azimuth_to_rhi"], [311, 3, 1, "", "plot_colorbar"], [312, 3, 1, "", "plot_cr_raster"], [313, 3, 1, "", "plot_cross_hair"], [314, 3, 1, "", "plot_grid_lines"], [315, 3, 1, "", "plot_label"], [316, 3, 1, "", "plot_labels"], [317, 3, 1, "", "plot_line_geo"], [318, 3, 1, "", "plot_line_xy"], [319, 3, 1, "", "plot_point"], [320, 3, 1, "", "plot_ppi"], [321, 3, 1, "", "plot_ppi_map"], [322, 3, 1, "", "plot_range_ring"], [323, 3, 1, "", "plot_range_rings"], [324, 3, 1, "", "plot_ray"], [325, 3, 1, "", "plot_rhi"], [326, 3, 1, "", "plot_vpt"], [327, 3, 1, "", "set_aspect_ratio"], [328, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[330, 3, 1, "", "generate_az_rhi_title"], [331, 3, 1, "", "generate_filename"], [332, 3, 1, "", "generate_ray_title"], [333, 3, 1, "", "generate_title"], [334, 3, 1, "", "generate_vpt_title"], [335, 3, 1, "", "label_xaxis_r"], [336, 3, 1, "", "label_xaxis_rays"], [337, 3, 1, "", "label_xaxis_time"], [338, 3, 1, "", "label_xaxis_x"], [339, 3, 1, "", "label_yaxis_field"], [340, 3, 1, "", "label_yaxis_y"], [341, 3, 1, "", "label_yaxis_z"], [342, 3, 1, "", "plot"], [343, 3, 1, "", "plot_azimuth_to_rhi"], [344, 3, 1, "", "plot_colorbar"], [345, 3, 1, "", "plot_cr_raster"], [346, 3, 1, "", "plot_cross_hair"], [347, 3, 1, "", "plot_grid_lines"], [348, 3, 1, "", "plot_label"], [349, 3, 1, "", "plot_labels"], [350, 3, 1, "", "plot_line_geo"], [351, 3, 1, "", "plot_line_xy"], [352, 3, 1, "", "plot_point"], [353, 3, 1, "", "plot_ppi"], [354, 3, 1, "", "plot_ppi_map"], [355, 3, 1, "", "plot_range_ring"], [356, 3, 1, "", "plot_range_rings"], [357, 3, 1, "", "plot_ray"], [358, 3, 1, "", "plot_rhi"], [359, 3, 1, "", "plot_vpt"], [360, 3, 1, "", "set_aspect_ratio"], [361, 3, 1, "", "set_limits"]], "pyart.io": [[364, 0, 1, "", "prepare_for_read"], [365, 0, 1, "", "read"], [366, 0, 1, "", "read_arm_sonde"], [367, 0, 1, "", "read_arm_sonde_vap"], [368, 0, 1, "", "read_cfradial"], [369, 0, 1, "", "read_chl"], [370, 0, 1, "", "read_grid"], [371, 0, 1, "", "read_grid_mdv"], [372, 0, 1, "", "read_mdv"], [373, 0, 1, "", "read_nexrad_archive"], [374, 0, 1, "", "read_nexrad_cdm"], [375, 0, 1, "", "read_nexrad_level3"], [376, 0, 1, "", "read_rsl"], [377, 0, 1, "", "read_sigmet"], [378, 0, 1, "", "read_uf"], [379, 0, 1, "", "write_cfradial"], [380, 0, 1, "", "write_grid"], [381, 0, 1, "", "write_grid_geotiff"], [382, 0, 1, "", "write_grid_mdv"], [383, 0, 1, "", "write_uf"]], "pyart.lazydict": [[385, 2, 1, "", "LazyLoadDict"], [398, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[386, 3, 1, "", "clear"], [387, 3, 1, "", "copy"], [388, 3, 1, "", "get"], [389, 3, 1, "", "has_key"], [390, 3, 1, "", "items"], [391, 3, 1, "", "keys"], [392, 3, 1, "", "pop"], [393, 3, 1, "", "popitem"], [394, 3, 1, "", "set_lazy"], [395, 3, 1, "", "setdefault"], [396, 3, 1, "", "update"], [397, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[399, 3, 1, "", "clear"], [400, 3, 1, "", "get"], [401, 3, 1, "", "items"], [402, 3, 1, "", "keys"], [403, 3, 1, "", "pop"], [404, 3, 1, "", "popitem"], [405, 3, 1, "", "setdefault"], [406, 3, 1, "", "update"], [407, 3, 1, "", "values"]], "pyart.map": [[409, 2, 1, "", "GateMapper"], [413, 0, 1, "", "example_roi_func_constant"], [414, 0, 1, "", "example_roi_func_dist"], [415, 0, 1, "", "example_roi_func_dist_beam"], [416, 0, 1, "", "grid_from_radars"], [417, 0, 1, "", "grid_ppi_sweeps"], [418, 0, 1, "", "grid_rhi_sweeps"], [419, 0, 1, "", "map_gates_to_grid"], [420, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[410, 4, 1, "", "distance_tolerance"], [411, 3, 1, "", "mapped_radar"], [412, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[422, 0, 1, "", "ZtoR"], [423, 0, 1, "", "calculate_snr_from_reflectivity"], [424, 0, 1, "", "calculate_velocity_texture"], [425, 0, 1, "", "composite_reflectivity"], [426, 0, 1, "", "compute_cdr"], [427, 0, 1, "", "compute_l"], [428, 0, 1, "", "compute_noisedBZ"], [429, 0, 1, "", "compute_snr"], [430, 0, 1, "", "conv_strat_raut"], [431, 0, 1, "", "conv_strat_yuter"], [432, 0, 1, "", "create_cfad"], [433, 0, 1, "", "dealias_spectra"], [434, 0, 1, "", "est_rain_rate_a"], [435, 0, 1, "", "est_rain_rate_hydro"], [436, 0, 1, "", "est_rain_rate_kdp"], [437, 0, 1, "", "est_rain_rate_z"], [438, 0, 1, "", "est_rain_rate_za"], [439, 0, 1, "", "est_rain_rate_zkdp"], [440, 0, 1, "", "est_rain_rate_zpoly"], [441, 0, 1, "", "feature_detection"], [442, 0, 1, "", "fetch_radar_time_profile"], [443, 0, 1, "", "get_freq_band"], [444, 0, 1, "", "grid_displacement_pc"], [445, 0, 1, "", "grid_shift"], [446, 0, 1, "", "hydroclass_semisupervised"], [447, 0, 1, "", "kdp_maesaka"], [448, 0, 1, "", "kdp_schneebeli"], [449, 0, 1, "", "kdp_vulpiani"], [450, 0, 1, "", "map_profile_to_gates"], [451, 0, 1, "", "quasi_vertical_profile"], [452, 0, 1, "", "spectra_moments"], [453, 0, 1, "", "steiner_conv_strat"], [454, 0, 1, "", "texture_of_complex_phase"], [455, 0, 1, "", "vad_browning"], [456, 0, 1, "", "vad_michelson"]], "pyart.testing": [[458, 2, 1, "", "Grid"], [468, 2, 1, "", "InTemporaryDirectory"], [470, 2, 1, "", "Radar"], [499, 2, 1, "", "RadarSpectra"], [544, 0, 1, "", "get_metadata"], [545, 0, 1, "", "get_test_data"], [546, 0, 1, "", "make_empty_grid"], [547, 0, 1, "", "make_empty_ppi_radar"], [548, 0, 1, "", "make_empty_rhi_radar"], [549, 0, 1, "", "make_empty_spectra_radar"], [550, 0, 1, "", "make_gaussian_storm_grid"], [551, 0, 1, "", "make_normal_storm"], [552, 0, 1, "", "make_single_ray_radar"], [553, 0, 1, "", "make_storm_grid"], [554, 0, 1, "", "make_target_grid"], [555, 0, 1, "", "make_target_radar"], [556, 0, 1, "", "make_target_rhi_radar"], [557, 0, 1, "", "make_target_spectra_radar"], [558, 0, 1, "", "make_velocity_aliased_radar"], [559, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[459, 3, 1, "", "add_field"], [460, 3, 1, "", "get_point_longitude_latitude"], [461, 3, 1, "", "get_projparams"], [462, 3, 1, "", "init_point_altitude"], [463, 3, 1, "", "init_point_longitude_latitude"], [464, 3, 1, "", "init_point_x_y_z"], [465, 4, 1, "", "projection_proj"], [466, 3, 1, "", "to_xarray"], [467, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[469, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[471, 3, 1, "", "add_field"], [472, 3, 1, "", "add_field_like"], [473, 3, 1, "", "add_filter"], [474, 3, 1, "", "check_field_exists"], [475, 3, 1, "", "extract_sweeps"], [476, 3, 1, "", "get_azimuth"], [477, 3, 1, "", "get_elevation"], [478, 3, 1, "", "get_end"], [479, 3, 1, "", "get_field"], [480, 3, 1, "", "get_gate_area"], [481, 3, 1, "", "get_gate_lat_lon_alt"], [482, 3, 1, "", "get_gate_x_y_z"], [483, 3, 1, "", "get_nyquist_vel"], [484, 3, 1, "", "get_slice"], [485, 3, 1, "", "get_start"], [486, 3, 1, "", "get_start_end"], [487, 3, 1, "", "info"], [488, 3, 1, "", "init_gate_altitude"], [489, 3, 1, "", "init_gate_longitude_latitude"], [490, 3, 1, "", "init_gate_x_y_z"], [491, 3, 1, "", "init_rays_per_sweep"], [492, 3, 1, "", "iter_azimuth"], [493, 3, 1, "", "iter_elevation"], [494, 3, 1, "", "iter_end"], [495, 3, 1, "", "iter_field"], [496, 3, 1, "", "iter_slice"], [497, 3, 1, "", "iter_start"], [498, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[500, 4, 1, "", "altitude"], [501, 4, 1, "", "azimuth"], [502, 3, 1, "", "check_field_exists"], [503, 4, 1, "", "elevation"], [504, 4, 1, "", "fields"], [505, 4, 1, "", "fixed_angle"], [506, 4, 1, "", "gate_altitude"], [507, 4, 1, "", "gate_latitude"], [508, 4, 1, "", "gate_longitude"], [509, 4, 1, "", "gate_x"], [510, 4, 1, "", "gate_y"], [511, 4, 1, "", "gate_z"], [512, 3, 1, "", "get_end"], [513, 3, 1, "", "get_slice"], [514, 3, 1, "", "get_start"], [515, 3, 1, "", "get_start_end"], [516, 3, 1, "", "init_gate_altitude"], [517, 3, 1, "", "init_gate_longitude_latitude"], [518, 3, 1, "", "init_gate_x_y_z"], [519, 3, 1, "", "init_rays_per_sweep"], [520, 3, 1, "", "iter_azimuth"], [521, 3, 1, "", "iter_elevation"], [522, 3, 1, "", "iter_end"], [523, 3, 1, "", "iter_field"], [524, 3, 1, "", "iter_slice"], [525, 3, 1, "", "iter_start"], [526, 3, 1, "", "iter_start_end"], [527, 4, 1, "", "latitude"], [528, 4, 1, "", "longitude"], [529, 4, 1, "", "ngates"], [530, 4, 1, "", "npulses_max"], [531, 4, 1, "", "nrays"], [532, 4, 1, "", "nsweeps"], [533, 4, 1, "", "projection"], [534, 4, 1, "", "range"], [535, 4, 1, "", "rays_per_sweep"], [536, 4, 1, "", "scan_type"], [537, 4, 1, "", "sweep_end_ray_index"], [538, 4, 1, "", "sweep_mode"], [539, 4, 1, "", "sweep_number"], [540, 4, 1, "", "sweep_start_ray_index"], [541, 4, 1, "", "time"], [542, 3, 1, "", "to_vpt"], [543, 4, 1, "", "velocity_bins"]], "pyart.util": [[561, 0, 1, "", "angular_mean"], [562, 0, 1, "", "angular_mean_deg"], [563, 0, 1, "", "angular_std"], [564, 0, 1, "", "angular_std_deg"], [565, 0, 1, "", "angular_texture_2d"], [566, 0, 1, "", "column_vertical_profile"], [567, 0, 1, "", "cross_section_ppi"], [568, 0, 1, "", "cross_section_rhi"], [569, 0, 1, "", "datetime_from_dataset"], [570, 0, 1, "", "datetime_from_grid"], [571, 0, 1, "", "datetime_from_radar"], [572, 0, 1, "", "datetimes_from_dataset"], [573, 0, 1, "", "datetimes_from_radar"], [574, 0, 1, "", "determine_sweeps"], [575, 0, 1, "", "estimate_noise_hs74"], [576, 0, 1, "", "for_azimuth"], [577, 0, 1, "", "get_column_rays"], [578, 0, 1, "", "get_field_location"], [579, 0, 1, "", "image_mute_radar"], [580, 0, 1, "", "interval_mean"], [581, 0, 1, "", "interval_std"], [582, 0, 1, "", "is_vpt"], [583, 0, 1, "", "join_radar"], [584, 0, 1, "", "mean_of_two_angles"], [585, 0, 1, "", "mean_of_two_angles_deg"], [586, 0, 1, "", "rolling_window"], [587, 0, 1, "", "simulated_vel_from_profile"], [588, 0, 1, "", "sphere_distance"], [589, 0, 1, "", "subset_radar"], [590, 0, 1, "", "texture"], [591, 0, 1, "", "texture_along_ray"], [592, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 596, 598, 599, 604], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 454], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 544], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 620, 621, 622, 626, 655, 664], "add_field": [32, 46, 459, 471], "get_point_longitude_latitud": [33, 460], "get_projparam": [34, 461], "init_point_altitud": [35, 462], "init_point_longitude_latitud": [36, 463], "init_point_x_y_z": [37, 464], "projection_proj": [38, 465], "to_xarrai": [39, 466], "write": [40, 467], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 597, 598, 602, 605, 607, 619, 621, 622, 645, 658, 661, 666, 669], "add_field_lik": [47, 472], "add_filt": [48, 473], "check_field_exist": [49, 77, 474, 502], "extract_sweep": [50, 475], "get_azimuth": [51, 476], "get_elev": [52, 477], "get_end": [53, 87, 478, 512], "get_field": [54, 479], "get_gate_area": [55, 480], "get_gate_lat_lon_alt": [56, 481], "get_gate_x_y_z": [57, 482], "get_nyquist_vel": [58, 483], "get_slic": [59, 88, 484, 513], "get_start": [60, 89, 485, 514], "get_start_end": [61, 90, 486, 515], "info": [62, 487], "init_gate_altitud": [63, 91, 488, 516], "init_gate_longitude_latitud": [64, 92, 489, 517], "init_gate_x_y_z": [65, 93, 490, 518], "init_rays_per_sweep": [66, 94, 491, 519], "iter_azimuth": [67, 95, 492, 520], "iter_elev": [68, 96, 493, 521], "iter_end": [69, 97, 494, 522], "iter_field": [70, 98, 495, 523], "iter_slic": [71, 99, 496, 524], "iter_start": [72, 100, 497, 525], "iter_start_end": [73, 101, 498, 526], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "altitud": [75, 500], "azimuth": [76, 501], "elev": [78, 503], "field": [79, 504, 661], "fixed_angl": [80, 505], "gate_altitud": [81, 506], "gate_latitud": [82, 507], "gate_longitud": [83, 508], "gate_x": [84, 509], "gate_i": [85, 510], "gate_z": [86, 511], "latitud": [102, 527, 616], "longitud": [103, 528, 616], "ngate": [104, 529], "npulses_max": [105, 530], "nrai": [106, 531], "nsweep": [107, 532], "project": [108, 533], "rang": [109, 534], "rays_per_sweep": [110, 535], "scan_typ": [111, 536], "sweep_end_ray_index": [112, 537], "sweep_mod": [113, 538], "sweep_numb": [114, 539], "sweep_start_ray_index": [115, 540], "time": [116, 541, 598, 612, 617, 623, 642, 651, 652, 657, 667], "to_vpt": [117, 542, 592], "velocity_bin": [118, 543], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_geograph": 121, "cartesian_to_geographic_aeqd": 122, "cartesian_vectors_to_geograph": 123, "geographic_to_cartesian": 124, "geographic_to_cartesian_aeqd": 125, "correct": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 602, 609, 610, 613], "gatefilt": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 665], "copi": [128, 173, 387], "exclude_abov": [129, 174], "exclude_above_toa": [130, 175], "exclude_al": [131, 176], "exclude_below": [132, 177], "exclude_equ": [133, 178], "exclude_g": [134, 179], "exclude_insid": [135, 180], "exclude_invalid": [136, 181], "exclude_last_g": [137, 182], "exclude_mask": [138, 183], "exclude_non": [139, 184], "exclude_not_equ": [140, 185], "exclude_outsid": [141, 186], "exclude_transit": [142, 187], "gate_exclud": [143, 188], "gate_includ": [144, 189], "include_abov": [145, 190], "include_al": [146, 191], "include_below": [147, 192], "include_equ": [148, 193], "include_g": [149, 194], "include_insid": [150, 195], "include_non": [151, 196], "include_not_equ": [152, 197], "include_not_mask": [153, 198], "include_not_transit": [154, 199], "include_outsid": [155, 200], "include_valid": [156, 201], "calculate_attenu": 157, "calculate_attenuation_philinear": 158, "calculate_attenuation_zphi": 159, "correct_bia": 160, "correct_noise_rhohv": 161, "dealias_fourdd": 162, "dealias_region_bas": 163, "dealias_unwrap_phas": 164, "despeckle_field": 165, "find_object": 166, "moment_based_gate_filt": [167, 204], "phase_proc_lp": 168, "phase_proc_lp_gf": 169, "except": 170, "filter": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "iso0_based_gate_filt": 202, "moment_and_texture_based_gate_filt": 203, "temp_based_gate_filt": 205, "graph": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "airborneradardisplai": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "generate_az_rhi_titl": [208, 268, 297, 330], "generate_filenam": [209, 241, 254, 269, 298, 331], "generate_ray_titl": [210, 270, 299, 332], "generate_titl": [211, 271, 300, 333], "generate_vpt_titl": [212, 272, 301, 334], "label_xaxis_r": [213, 273, 302, 335], "label_xaxis_rai": [214, 274, 303, 336], "label_xaxis_tim": [215, 275, 304, 337], "label_xaxis_x": [216, 276, 305, 338], "label_yaxis_field": [217, 277, 306, 339], "label_yaxis_i": [218, 278, 307, 340], "label_yaxis_z": [219, 279, 308, 341], "plot": [220, 280, 309, 342, 597, 598, 599, 601, 602, 613, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 646, 649, 650, 656], "plot_azimuth_to_rhi": [221, 281, 310, 343], "plot_colorbar": [222, 245, 260, 282, 311, 344], "plot_cr_rast": [223, 283, 312, 345], "plot_cross_hair": [224, 284, 313, 346], "plot_grid_lin": [225, 285, 314, 347], "plot_label": [226, 227, 286, 287, 315, 316, 348, 349], "plot_ppi": [228, 288, 320, 353], "plot_range_r": [229, 230, 289, 290, 322, 323, 355, 356], "plot_rai": [231, 291, 324, 357], "plot_rhi": [232, 292, 325, 358], "plot_sweep_grid": 233, "plot_vpt": [234, 293, 326, 359], "set_aspect_ratio": [235, 294, 327, 360], "set_limit": [236, 295, 328, 361], "gridmapdisplai": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 640], "cartopy_coastlin": 238, "cartopy_political_boundari": 239, "cartopy_st": 240, "generate_grid_titl": [242, 255], "generate_latitudinal_level_titl": [243, 256], "generate_longitudinal_level_titl": [244, 257], "plot_cross_sect": 246, "plot_crosshair": [247, 261], "plot_grid": [248, 262], "plot_latitude_slic": [249, 263], "plot_latitudinal_level": [250, 264], "plot_longitude_slic": [251, 265], "plot_longitudinal_level": [252, 266], "gridmapdisplaybasemap": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "get_basemap": 258, "plot_basemap": 259, "radardisplai": [267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295], "radarmapdisplai": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 599], "plot_line_geo": [317, 350], "plot_line_xi": [318, 351], "plot_point": [319, 352], "plot_ppi_map": [321, 354, 599], "radarmapdisplaybasemap": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361], "plot_convstrat_schem": 362, "io": [363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383], "prepare_for_read": 364, "read": [365, 597, 598, 599, 602, 615, 616], "read_arm_sond": 366, "read_arm_sonde_vap": 367, "read_cfradi": 368, "read_chl": 369, "read_grid": 370, "read_grid_mdv": 371, "read_mdv": 372, "read_nexrad_arch": 373, "read_nexrad_cdm": 374, "read_nexrad_level3": 375, "read_rsl": 376, "read_sigmet": 377, "read_uf": 378, "write_cfradi": 379, "write_grid": 380, "write_grid_geotiff": 381, "write_grid_mdv": 382, "write_uf": 383, "lazydict": [384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "lazyloaddict": [385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "clear": [386, 399], "get": [388, 400, 658], "has_kei": 389, "item": [390, 401], "kei": [391, 402, 598], "pop": [392, 403], "popitem": [393, 404], "set_lazi": 394, "setdefault": [395, 405], "updat": [396, 406, 607], "valu": [397, 407], "mutablemap": [398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "map": [408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 613, 618, 620, 621, 622, 633, 664], "gatemapp": [409, 410, 411, 412, 619], "distance_toler": 410, "mapped_radar": 411, "time_toler": 412, "example_roi_func_const": 413, "example_roi_func_dist": 414, "example_roi_func_dist_beam": 415, "grid_from_radar": 416, "grid_ppi_sweep": 417, "grid_rhi_sweep": 418, "map_gates_to_grid": 419, "map_to_grid": 420, "retriev": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 602, 613, 643], "ztor": 422, "calculate_snr_from_reflect": 423, "calculate_velocity_textur": 424, "composite_reflect": 425, "compute_cdr": 426, "compute_l": 427, "compute_noisedbz": 428, "compute_snr": 429, "conv_strat_raut": 430, "conv_strat_yut": 431, "create_cfad": 432, "dealias_spectra": 433, "est_rain_rate_a": 434, "est_rain_rate_hydro": 435, "est_rain_rate_kdp": 436, "est_rain_rate_z": 437, "est_rain_rate_za": 438, "est_rain_rate_zkdp": 439, "est_rain_rate_zpoli": 440, "feature_detect": 441, "fetch_radar_time_profil": 442, "get_freq_band": 443, "grid_displacement_pc": 444, "grid_shift": 445, "hydroclass_semisupervis": 446, "kdp_maesaka": 447, "kdp_schneeb": 448, "kdp_vulpiani": 449, "map_profile_to_g": 450, "quasi_vertical_profil": 451, "spectra_mo": 452, "paramet": [452, 599], "steiner_conv_strat": 453, "vad_brown": 455, "vad_michelson": 456, "test": [457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 605, 669], "intemporarydirectori": [468, 469], "cleanup": 469, "get_test_data": 545, "make_empty_grid": 546, "make_empty_ppi_radar": 547, "make_empty_rhi_radar": 548, "make_empty_spectra_radar": 549, "make_gaussian_storm_grid": 550, "make_normal_storm": 551, "make_single_ray_radar": 552, "make_storm_grid": 553, "make_target_grid": 554, "make_target_radar": 555, "make_target_rhi_radar": 556, "make_target_spectra_radar": 557, "make_velocity_aliased_radar": 558, "make_velocity_aliased_rhi_radar": 559, "util": [560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592], "angular_mean": 561, "angular_mean_deg": 562, "angular_std": 563, "angular_std_deg": 564, "angular_texture_2d": 565, "column_vertical_profil": 566, "cross_section_ppi": 567, "cross_section_rhi": 568, "datetime_from_dataset": 569, "datetime_from_grid": 570, "datetime_from_radar": 571, "datetimes_from_dataset": 572, "datetimes_from_radar": 573, "determine_sweep": 574, "estimate_noise_hs74": 575, "for_azimuth": 576, "assumpt": [576, 588], "get_column_rai": 577, "get_field_loc": 578, "image_mute_radar": 579, "interval_mean": 580, "interval_std": 581, "is_vpt": 582, "join_radar": 583, "mean_of_two_angl": 584, "mean_of_two_angles_deg": 585, "rolling_window": 586, "simulated_vel_from_profil": 587, "sphere_dist": 588, "subset_radar": 589, "textur": 590, "texture_along_rai": 591, "api": [593, 602], "refer": [593, 602, 647, 648], "manual": 593, "blog": [594, 603], "blend": 595, "observ": 595, "from": [595, 597, 602, 615, 626, 629, 631, 632, 634, 635, 636, 637, 638, 641, 668], "tracer": 595, "us": [595, 597, 598, 599, 602, 611, 619, 620, 640, 654, 655, 656], "py": [595, 596, 597, 602, 604, 605, 606, 607, 654, 655, 656, 658, 665, 666, 668, 669], "art": [595, 596, 597, 602, 604, 605, 606, 607, 654, 655, 656, 658, 665, 666, 668, 669], "import": [595, 597, 598, 599, 601, 605, 669], "goe": 595, "data": [595, 597, 598, 599, 601, 602, 615, 616, 655, 664, 665], "access": [595, 597, 599, 601], "csapr": 595, "load": [595, 598], "lma": 595, "flash": 595, "june": 595, "17th": 595, "case": 595, "17": [595, 604], "rhi": [595, 602, 634, 635, 636, 637, 638, 639], "activ": 596, "develop": [596, 608], "submit": 596, "pull": 596, "request": 596, "pr": [596, 604], "first": 596, "you": [596, 602], "have": 596, "done": 596, "so": 596, "alreadi": 596, "need": 596, "fork": 596, "github": [596, 605, 607, 669], "repositori": 596, "second": 596, "termin": 596, "clone": 596, "your": [596, 602, 625, 627], "remot": 596, "git": [596, 607], "command": 596, "third": 596, "creat": [596, 597, 598, 607, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 660, 671], "doc": [596, 600], "conda": [596, 607], "environ": [596, 671], "fourth": 596, "we": 596, "instal": [596, 605, 658, 668, 669], "trmm": 596, "rsl": 596, "librari": 596, "lastli": 596, "python": [596, 605, 658, 669], "script": 596, "within": 596, "okai": 596, "should": 596, "now": 596, "readi": 596, "make": [596, 607], "chang": 596, "sourc": [596, 668], "code": [596, 605, 669], "1": [596, 604, 648], "new": [596, 600], "branch": 596, "our": [596, 598, 599, 601, 602], "2": [596, 604, 615, 616, 648], "push": 596, "To": 596, "let": 596, "commit": 596, "after": 596, "thi": [596, 604], "i": [596, 602, 658], "what": [596, 658], "look": 596, "like": 596, "hope": 596, "help": [596, 658], "hail": 597, "storm": 597, "visual": [597, 598, 601], "panda": 597, "motiv": [597, 601, 602, 603], "nexrad": [597, 599, 601, 615, 616, 629, 630], "fsspec": 597, "setup": [597, 601, 605, 606, 669], "filesystem": 597, "bucket": 597, "file": [597, 605, 629, 631, 632, 634, 635, 636, 637, 638, 660, 661, 669], "dataset": 597, "nexradaw": 597, "configur": 597, "search": [597, 602], "download": [597, 601], "spc": 597, "report": 597, "function": [597, 601], "loop": 597, "through": [597, 602], "helper": 597, "scale": 597, "bar": 597, "an": [597, 628, 636, 637, 671], "anim": 597, "imag": [597, 601, 628], "view": [597, 598], "final": [597, 598], "conclus": [597, 599, 601, 602, 603], "work": [598, 647, 648], "vertic": 598, "point": [598, 645], "xarrai": 598, "hvplot": 598, "overview": 598, "ka": 598, "band": 598, "arm": [598, 602, 605, 658, 669], "zenith": 598, "kazr": 598, "instrument": 598, "clean": [598, 602], "up": [598, 599, 671], "bit": 598, "analysi": 598, "subset": 598, "reflect": [598, 610, 628, 630, 636, 637, 646], "veloc": [598, 602, 611, 644, 654, 662], "quick": 598, "extract": [598, 645], "date": [598, 601], "inform": [598, 671], "label": 598, "holoview": 598, "try": [598, 599], "raster": 598, "takeawai": 598, "fix": [599, 604, 616], "weird": 599, "pattern": 599, "when": 599, "level": [599, 615, 616], "3": [599, 604, 615, 640], "The": [599, 601, 602, 603, 605, 658, 666, 669], "recreat": 599, "issu": [599, 616], "set": [599, 671], "matplotlib": 599, "style": [599, 605, 669], "without": 599, "alpha": 599, "add": [599, 601], "argument": 599, "dig": 599, "investig": [599, 601, 602], "pcolormesh": 599, "edgecolor": 599, "modifi": [599, 627], "default": 599, "solut": [599, 602, 603], "sever": 601, "weather": 601, "wisconsin": 601, "outbreak": 601, "focus": 601, "southern": 601, "reproduc": 601, "event": 601, "road": 601, "interst": 601, "featur": [601, 604, 648], "avail": 601, "run": 601, "scan": 602, "cloud": [602, 615], "epcap": 602, "problem": [602, 603], "dq": 602, "browser": 602, "act": 602, "token": 602, "live": 602, "pass": 602, "credenti": 602, "take": 602, "peak": 602, "strategi": 602, "sort": 602, "all": 602, "ppi": [602, 620, 631, 632, 633, 641, 656], "appli": 602, "explor": 602, "threshold": 602, "snr": 602, "revis": 602, "where": 602, "slice": 602, "frame": 602, "post": 603, "templat": 603, "changelog": 604, "18": 604, "enhanc": 604, "made": 604, "bug": 604, "other": 604, "merg": 604, "contributor": [604, 605, 669], "releas": [604, 607], "0": 604, "document": [604, 607], "improv": 604, "16": 604, "mainten": 604, "upkeep": 604, "15": 604, "v1": 604, "14": 604, "6": 604, "5": 604, "4": 604, "13": 604, "12": 604, "7": 604, "11": 604, "8": 604, "deprec": 604, "10": 604, "9": 604, "picasso": 604, "": [605, 608, 669], "guid": [605, 608, 669, 670], "toolkit": [605, 658, 669], "link": [605, 669], "cite": [605, 658, 669], "resourc": [605, 669], "continu": 606, "integr": 606, "how": [607, 647, 648], "tag": 607, "prepar": 607, "note": 607, "trigger": 607, "pypi": 607, "upload": 607, "packag": 607, "forg": 607, "announc": 607, "open": 607, "forum": 607, "version": 608, "moment": [609, 613, 629], "exampl": [609, 613, 614, 618, 624, 643, 644, 647, 653], "attenu": 610, "dealia": [611, 654], "doppler": 611, "region": 611, "base": 611, "algorithm": [611, 647, 648], "comput": [612, 617, 623, 642, 651, 652, 657, 667], "galleri": [613, 659], "input": [613, 614], "output": [613, 614], "xradar": [613, 653, 654, 655, 656], "aw": 615, "older": 616, "compar": 619, "two": [619, 622, 639], "singl": [620, 621], "sweep": 620, "cartesian": [620, 621, 622, 664], "2d": 620, "weight": 620, "choos": 625, "colormap": 625, "cross": [626, 641], "section": [626, 641], "colorbar": 627, "mute": 628, "multipl": [629, 634, 635], "cfradial": 631, "mdv": [632, 636, 637, 638], "cartopi": 633, "panel": [634, 635, 639, 640], "cf": [634, 635], "radial": [634, 635, 654], "contour": [636, 637], "line": [636, 637], "volum": 641, "cfad": 644, "diagram": 644, "valid": 644, "column": 645, "abov": 645, "calcul": [646, 649, 650], "composit": 646, "convect": [647, 648], "stratiform": [647, 648], "classif": [647, 648, 649], "summari": [647, 648], "recommend": [647, 648], "best": [647, 648], "practic": [647, 648], "detect": 648, "part": 648, "warm": 648, "season": 648, "cool": 648, "hydrometeor": 649, "vad": 650, "profil": 650, "can": 658, "do": 658, "short": 658, "cours": 658, "depend": [658, 668, 671], "option": [658, 668, 671], "contribut": 658, "notebook": 659, "basic": 660, "ingest": 660, "netcdf": 660, "manipul": 661, "save": 661, "object": [661, 666], "dealias": 662, "mask": 665, "With": 665, "index": 666, "build": 668, "requir": 668, "obtain": 668, "latest": 668, "frequent": 668, "ask": 668, "question": 668, "user": 670, "anaconda": 671, "channel": 671, "ad": 671, "path": 671, "more": 671}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[126, "pyart-correct"]], "pyart.correct.GateFilter": [[127, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[128, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[129, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_above_toa": [[130, "pyart-correct-gatefilter-exclude-above-toa"]], "pyart.correct.GateFilter.exclude_all": [[131, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[132, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[133, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[134, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[135, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[136, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_last_gates": [[137, "pyart-correct-gatefilter-exclude-last-gates"]], "pyart.correct.GateFilter.exclude_masked": [[138, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[139, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[140, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[141, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[142, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[143, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[144, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[145, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[146, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[147, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[148, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[149, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[150, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[151, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[152, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[153, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[154, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[155, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[156, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[157, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[158, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[159, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[160, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[161, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[162, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[163, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[164, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[165, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[166, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[167, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[168, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[169, "pyart-correct-phase-proc-lp-gf"]], "pyart.exceptions": [[170, "pyart-exceptions"]], "pyart.filters": [[171, "pyart-filters"]], "pyart.filters.GateFilter": [[172, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[173, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[174, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_above_toa": [[175, "pyart-filters-gatefilter-exclude-above-toa"]], "pyart.filters.GateFilter.exclude_all": [[176, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[177, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[178, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[179, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[180, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[181, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_last_gates": [[182, "pyart-filters-gatefilter-exclude-last-gates"]], "pyart.filters.GateFilter.exclude_masked": [[183, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[184, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[185, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[186, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[187, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[188, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[189, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[190, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[191, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[192, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[193, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[194, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[195, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[196, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[197, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[198, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[199, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[200, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[201, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[202, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[203, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[204, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[205, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[206, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[207, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[208, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[209, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[210, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[211, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[212, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[213, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[214, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[215, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[216, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[217, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[218, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[219, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[220, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[221, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[222, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[223, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[224, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[225, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[226, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[227, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[228, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[229, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[230, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[231, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[232, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[233, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[234, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[235, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[236, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[237, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[238, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[239, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[240, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[241, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[242, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[243, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[244, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[245, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[246, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[247, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[248, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[249, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[250, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[251, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[252, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[253, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[254, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[255, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[256, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[257, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[258, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[259, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[260, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[261, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[262, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[263, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[264, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[265, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[266, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[267, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[268, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[269, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[270, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[271, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[272, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[273, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[274, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[275, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[276, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[277, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[278, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[279, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[280, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[281, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[282, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[283, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[284, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[285, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[286, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[287, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[288, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[289, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[290, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[291, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[292, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[293, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[294, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[295, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[296, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[297, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[298, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[299, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[300, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[301, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[302, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[303, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[304, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[305, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[306, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[307, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[308, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[309, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[310, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[311, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[312, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[313, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[314, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[315, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[316, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[317, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[318, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[319, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[320, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[321, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[322, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[323, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[324, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[325, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[326, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[327, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[328, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[329, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[330, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[331, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[332, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[333, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[334, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[335, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[336, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[337, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[338, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[339, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[340, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[341, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[342, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[343, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[344, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[345, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[346, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[347, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[348, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[349, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[350, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[351, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[352, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[353, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[354, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[355, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[356, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[357, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[358, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[359, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[360, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[361, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[362, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[363, "pyart-io"]], "pyart.io.prepare_for_read": [[364, "pyart-io-prepare-for-read"]], "pyart.io.read": [[365, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[366, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[367, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[368, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[369, "pyart-io-read-chl"]], "pyart.io.read_grid": [[370, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[371, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[372, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[373, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[374, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[375, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[376, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[377, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[378, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[379, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[380, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[381, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[382, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[383, "pyart-io-write-uf"]], "pyart.lazydict": [[384, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[385, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[386, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[387, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[388, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[389, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[390, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[391, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[392, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[393, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[394, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[395, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[396, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[397, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[398, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[399, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[400, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[401, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[402, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[403, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[404, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[405, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[406, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[407, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[408, "pyart-map"]], "pyart.map.GateMapper": [[409, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[410, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[411, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[412, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[413, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[414, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[415, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[416, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[417, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[418, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[419, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[420, "pyart-map-map-to-grid"]], "pyart.retrieve": [[421, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[422, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[423, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[424, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[425, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[426, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_l": [[427, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[428, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_snr": [[429, "pyart-retrieve-compute-snr"]], "pyart.retrieve.conv_strat_raut": [[430, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[431, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.create_cfad": [[432, "pyart-retrieve-create-cfad"]], "pyart.retrieve.dealias_spectra": [[433, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[434, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[435, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[436, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[437, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[438, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[439, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[440, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[441, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[442, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[443, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[444, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[445, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[446, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_maesaka": [[447, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[448, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[449, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[450, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[451, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[452, "pyart-retrieve-spectra-moments"]], "Parameter": [[452, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[453, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[454, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[455, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[456, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[457, "pyart-testing"]], "pyart.testing.Grid": [[458, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[459, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[460, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[461, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[462, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[463, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[464, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[465, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[466, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[467, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[468, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[469, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[470, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[471, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[472, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[473, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[474, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[475, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[476, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[477, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[478, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[479, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[480, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[481, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[482, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[483, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[484, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[485, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[486, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[487, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[488, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[489, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[490, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[491, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[492, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[493, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[494, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[495, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[496, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[497, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[498, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[499, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[500, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[501, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[502, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[503, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[504, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[505, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[506, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[507, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[508, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[509, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[510, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[511, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[512, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[513, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[514, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[515, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[516, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[517, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[518, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[519, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[520, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[521, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[522, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[523, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[524, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[525, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[526, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[527, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[528, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[529, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[530, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[531, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[532, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[533, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[534, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[535, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[536, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[537, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[538, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[539, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[540, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[541, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[542, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[543, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[544, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[545, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[546, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[547, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[548, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[549, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[550, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[551, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[552, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[553, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[554, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[555, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_rhi_radar": [[556, "pyart-testing-make-target-rhi-radar"]], "pyart.testing.make_target_spectra_radar": [[557, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[558, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[559, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[560, "pyart-util"]], "pyart.util.angular_mean": [[561, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[562, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[563, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[564, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[565, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[566, "pyart-util-column-vertical-profile"]], "pyart.util.cross_section_ppi": [[567, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[568, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[569, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[570, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[571, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[572, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[573, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[574, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[575, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[576, "pyart-util-for-azimuth"]], "Assumptions": [[576, "assumptions"], [588, "assumptions"]], "pyart.util.get_column_rays": [[577, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[578, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[579, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[580, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[581, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[582, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[583, "pyart-util-join-radar"]], "pyart.util.mean_of_two_angles": [[584, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[585, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[586, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[587, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[588, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[589, "pyart-util-subset-radar"]], "pyart.util.texture": [[590, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[591, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[592, "pyart-util-to-vpt"]], "API Reference Manual": [[593, "api-reference-manual"]], "Blog": [[594, "blog"]], "Blending Observations from TRACER using Py-ART": [[595, "blending-observations-from-tracer-using-py-art"]], "Imports": [[595, "imports"], [597, "imports"], [598, "imports"], [599, "imports"], [601, "imports"]], "GOES data access": [[595, "goes-data-access"]], "CSAPR data access": [[595, "csapr-data-access"]], "Load LMA Flash data": [[595, "load-lma-flash-data"]], "June 17th case": [[595, "june-17th-case"]], "June 17 RHI": [[595, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[596, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[596, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[596, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[596, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[596, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[596, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[596, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[596, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[596, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[596, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[596, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[596, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[597, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[597, "motivation"], [601, "motivation"], [602, "motivation"], [603, "motivation"]], "NEXRAD Data Access - fsspec": [[597, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[597, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[597, "read-in-a-file"]], "Visualize the Dataset": [[597, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[597, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[597, "configure-the-search"]], "Search and Download the Data": [[597, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[597, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[597, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[597, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[597, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[597, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[597, "create-an-animation-of-the-images"]], "View the Final Animation": [[597, "view-the-final-animation"]], "Conclusion": [[597, "conclusion"], [599, "conclusion"], [601, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[598, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[598, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[598, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[598, "plot-using-pyart"]], "Load in the data using pyart": [[598, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[598, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[598, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[598, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[598, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[598, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[598, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[598, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[598, "create-our-holoviews-plots"]], "View the Final Visualization": [[598, "view-the-final-visualization"]], "Try Using Rasterize": [[598, "try-using-rasterize"]], "Key Takeaways": [[598, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[599, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[599, "the-data"]], "Data Access": [[599, "data-access"]], "Recreate the Issue Using PyART": [[599, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[599, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[599, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[599, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[599, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[599, "add-in-the-alpha-argument"]], "Dig into the Issue": [[599, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[599, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[599, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[599, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[599, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[599, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[599, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[599, "fixing-the-issue-in-pyart"]], "New Docs": [[600, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[601, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[601, "the-outbreak"]], "Focusing on Southern Wisconsin": [[601, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[601, "reproducing-event-images"]], "Visualizing the Event": [[601, "visualizing-the-event"]], "Access the Data": [[601, "access-the-data"]], "Download the Road Data": [[601, "download-the-road-data"]], "Add the Interstate Date as a feature": [[601, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[601, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[601, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[601, "run-our-plotting-functions"]], "Investigating ARM Scanning Cloud Radar Data from EPCAPE": [[602, "investigating-arm-scanning-cloud-radar-data-from-epcape"]], "The Problem": [[602, "the-problem"], [603, "the-problem"]], "The Solution": [[602, "the-solution"], [603, "the-solution"]], "Searching for data through the DQ Plot Browser": [[602, "searching-for-data-through-the-dq-plot-browser"]], "Use ACT to retrieve data from EPCAPE": [[602, "use-act-to-retrieve-data-from-epcape"]], "Retrieve you API token from ARM Live": [[602, "retrieve-you-api-token-from-arm-live"]], "Pass your Credentials into the Search": [[602, "pass-your-credentials-into-the-search"]], "Read the Data into Py-ART": [[602, "read-the-data-into-py-art"]], "Take a Peak at the Scan Strategy": [[602, "take-a-peak-at-the-scan-strategy"]], "Sort the Scans by Scan Strategy": [[602, "sort-the-scans-by-scan-strategy"]], "Plot all of the PPI Scans": [[602, "plot-all-of-the-ppi-scans"]], "Plot all the RHI Scans": [[602, "plot-all-the-rhi-scans"]], "Apply Corrections to the Velocity Data": [[602, "apply-corrections-to-the-velocity-data"]], "Explore a Threshold for SNR": [[602, "explore-a-threshold-for-snr"]], "Plot our Revised, Cleaned Data": [[602, "plot-our-revised-cleaned-data"]], "Plot where the RHI scan is slicing through using the PPI for a frame of reference": [[602, "plot-where-the-rhi-scan-is-slicing-through-using-the-ppi-for-a-frame-of-reference"]], "Conclusions": [[602, "conclusions"], [603, "conclusions"]], "Blog Post Template": [[603, "blog-post-template"]], "Changelog": [[604, "changelog"]], "Py-ART 1.18.1": [[604, "py-art-1-18-1"]], "Enhancements made": [[604, "enhancements-made"], [604, "id1"], [604, "id5"], [604, "id9"], [604, "id14"], [604, "id29"], [604, "id35"], [604, "id46"], [604, "id49"], [604, "id54"], [604, "id59"], [604, "id62"], [604, "id66"], [604, "id79"], [604, "id89"], [604, "id99"], [604, "id105"], [604, "id111"], [604, "id119"], [604, "id132"], [604, "id136"], [604, "id140"], [604, "id146"], [604, "id152"], [604, "id161"], [604, "id168"], [604, "id175"], [604, "id181"], [604, "id188"], [604, "id194"], [604, "id200"]], "Bugs fixed": [[604, "bugs-fixed"], [604, "id2"], [604, "id6"], [604, "id10"], [604, "id15"], [604, "id22"], [604, "id26"], [604, "id30"], [604, "id36"], [604, "id41"], [604, "id50"], [604, "id55"], [604, "id60"], [604, "id67"], [604, "id72"], [604, "id76"], [604, "id80"], [604, "id85"], [604, "id90"], [604, "id95"], [604, "id100"], [604, "id106"], [604, "id112"], [604, "id116"], [604, "id120"], [604, "id124"], [604, "id129"], [604, "id133"], [604, "id137"], [604, "id141"], [604, "id147"], [604, "id153"], [604, "id157"], [604, "id162"], [604, "id169"], [604, "id176"], [604, "id182"], [604, "id189"], [604, "id195"]], "Other merged PRs": [[604, "other-merged-prs"], [604, "id3"], [604, "id7"], [604, "id12"], [604, "id17"], [604, "id20"], [604, "id24"], [604, "id27"], [604, "id32"], [604, "id37"], [604, "id44"], [604, "id47"], [604, "id52"], [604, "id57"], [604, "id64"], [604, "id70"], [604, "id74"], [604, "id77"], [604, "id83"], [604, "id87"], [604, "id93"], [604, "id97"], [604, "id103"], [604, "id109"], [604, "id114"], [604, "id122"], [604, "id127"], [604, "id134"], [604, "id144"], [604, "id150"], [604, "id155"], [604, "id159"], [604, "id166"], [604, "id173"], [604, "id179"], [604, "id186"], [604, "id192"], [604, "id198"]], "Contributors to this release": [[604, "contributors-to-this-release"], [604, "id4"], [604, "id8"], [604, "id13"], [604, "id18"], [604, "id21"], [604, "id25"], [604, "id28"], [604, "id33"], [604, "id34"], [604, "id38"], [604, "id40"], [604, "id45"], [604, "id48"], [604, "id53"], [604, "id58"], [604, "id61"], [604, "id65"], [604, "id71"], [604, "id75"], [604, "id78"], [604, "id84"], [604, "id88"], [604, "id94"], [604, "id98"], [604, "id104"], [604, "id110"], [604, "id115"], [604, "id118"], [604, "id123"], [604, "id128"], [604, "id131"], [604, "id135"], [604, "id139"], [604, "id145"], [604, "id151"], [604, "id156"], [604, "id160"], [604, "id167"], [604, "id174"], [604, "id180"], [604, "id187"], [604, "id193"], [604, "id199"], [604, "id202"]], "Py-ART 1.18.0": [[604, "py-art-1-18-0"]], "Py-ART 1.17.0": [[604, "py-art-1-17-0"]], "Documentation improvements": [[604, "documentation-improvements"], [604, "id11"], [604, "id16"], [604, "id43"], [604, "id51"], [604, "id56"], [604, "id69"], [604, "id82"], [604, "id92"], [604, "id102"], [604, "id108"], [604, "id126"], [604, "id138"], [604, "id143"], [604, "id149"], [604, "id154"], [604, "id158"], [604, "id164"], [604, "id171"], [604, "id178"], [604, "id184"], [604, "id191"], [604, "id197"]], "Py-ART 1.16.1": [[604, "py-art-1-16-1"]], "Py-ART 1.16.0": [[604, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[604, "maintenance-and-upkeep-improvements"], [604, "id19"], [604, "id23"], [604, "id31"], [604, "id39"], [604, "id42"], [604, "id63"], [604, "id68"], [604, "id73"], [604, "id81"], [604, "id86"], [604, "id91"], [604, "id96"], [604, "id101"], [604, "id107"], [604, "id113"], [604, "id117"], [604, "id121"], [604, "id125"], [604, "id130"], [604, "id142"], [604, "id148"], [604, "id163"], [604, "id170"], [604, "id177"], [604, "id183"], [604, "id190"], [604, "id196"], [604, "id201"]], "Py-ART 1.15.2": [[604, "py-art-1-15-2"]], "Py-ART 1.15.1": [[604, "py-art-1-15-1"]], "Py-ART v1.15.0": [[604, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[604, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[604, "py-art-v1-14-5"]], "Merged PRs": [[604, "merged-prs"]], "Py-ART v1.14.4": [[604, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[604, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[604, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[604, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[604, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[604, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[604, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[604, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[604, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[604, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[604, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[604, "py-art-v1-12-5"]], "PyART v1.12.4": [[604, "pyart-v1-12-4"]], "PyART v1.12.2": [[604, "pyart-v1-12-2"]], "PyART v1.12.0": [[604, "pyart-v1-12-0"]], "PyART v1.11.8": [[604, "pyart-v1-11-8"]], "Deprecated features": [[604, "deprecated-features"], [604, "id165"], [604, "id172"], [604, "id185"]], "PyART v1.11.6": [[604, "pyart-v1-11-6"]], "PyART v1.11.5": [[604, "pyart-v1-11-5"]], "PyART v1.11.3": [[604, "pyart-v1-11-3"]], "PyART v1.11.2": [[604, "pyart-v1-11-2"]], "PyART v1.11.1": [[604, "pyart-v1-11-1"]], "PyART v1.11.0": [[604, "pyart-v1-11-0"]], "PyART v1.10.4": [[604, "pyart-v1-10-4"]], "PyART v1.10.3": [[604, "pyart-v1-10-3"]], "PyART v1.10.2": [[604, "pyart-v1-10-2"]], "PyART v1.10.1": [[604, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[604, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[604, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[604, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[604, "pyart-v1-8-0"]], "PyART v1.7.0": [[604, "pyart-v1-7-0"]], "PyART v1.6.0": [[604, "pyart-v1-6-0"]], "PyART v1.5.0": [[604, "pyart-v1-5-0"]], "PyART v1.4.0": [[604, "pyart-v1-4-0"]], "PyART v1.3.0": [[604, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[605, "contributor-s-guide"], [669, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[605, "the-python-arm-radar-toolkit-py-art"], [669, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[605, "important-links"], [669, "important-links"]], "Citing": [[605, "citing"], [669, "citing"]], "Install": [[605, "install"], [658, "install"], [669, "install"]], "Resources": [[605, "resources"], [669, "resources"]], "Code Style": [[605, "code-style"], [669, "code-style"]], "Python File Setup": [[605, "python-file-setup"], [669, "python-file-setup"]], "Testing": [[605, "testing"], [669, "testing"]], "GitHub": [[605, "github"], [669, "github"]], "Py-ART Continuous Integration Setup": [[606, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[607, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[607, "make-the-tagged-git-release"]], "Prepare the release notes": [[607, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[607, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[607, "documentation"]], "Create conda packages on conda-forge": [[607, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[607, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[608, "developer-s-guide"]], "Versions": [[608, "versions"]], "Moment correction examples": [[609, "moment-correction-examples"], [613, "moment-correction-examples"]], "Correct reflectivity attenuation": [[610, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[611, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[612, "computation-times"], [617, "computation-times"], [623, "computation-times"], [642, "computation-times"], [651, "computation-times"], [652, "computation-times"], [657, "computation-times"], [667, "computation-times"]], "Example Gallery": [[613, "example-gallery"]], "Input/Output Examples": [[613, "input-output-examples"], [614, "input-output-examples"]], "Mapping examples": [[613, "mapping-examples"], [618, "mapping-examples"]], "Plotting examples": [[613, "plotting-examples"], [624, "plotting-examples"]], "Retrieval Examples": [[613, "retrieval-examples"], [643, "retrieval-examples"]], "Xradar Examples": [[613, "xradar-examples"], [653, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[615, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[615, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[615, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[616, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[616, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[619, "compare-two-radars-using-gatemapper"]], "Map a single PPI sweep to a Cartesian grid using 2D weighting": [[620, "map-a-single-ppi-sweep-to-a-cartesian-grid-using-2d-weighting"]], "Map a single radar to a Cartesian grid": [[621, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[622, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[625, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[626, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[627, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[628, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[629, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[630, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[631, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[632, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[633, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[634, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [635, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[636, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [637, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[638, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[639, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[640, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[641, "plot-a-cross-section-from-a-ppi-volume"]], "Creating a CFAD diagram": [[644, "creating-a-cfad-diagram"]], "Velocity example": [[644, "velocity-example"]], "Validation": [[644, "validation"]], "Extract a radar column above a point": [[645, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[646, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[647, "convective-stratiform-classification"]], "How the algorithm works": [[647, "how-the-algorithm-works"], [648, "how-the-algorithm-works"]], "Examples": [[647, "examples"]], "Summary of recommendations and best practices": [[647, "summary-of-recommendations-and-best-practices"], [648, "summary-of-recommendations-and-best-practices"]], "References": [[647, "references"], [648, "references"]], "Feature Detection classification": [[648, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[648, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[648, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[649, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[650, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[654, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[655, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[656, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[658, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[658, "what-is-py-art"]], "Citing Py-ART": [[658, "citing-py-art"]], "What can Py-ART do?": [[658, "what-can-py-art-do"]], "Short Courses": [[658, "short-courses"]], "Dependencies": [[658, "dependencies"]], "Optional Dependences": [[658, "optional-dependences"]], "Getting help": [[658, "getting-help"]], "Contributing": [[658, "contributing"]], "Notebook Gallery": [[659, "notebook-gallery"]], "Notebooks": [[659, null]], "Creating a basic ingest of a NetCDF file": [[660, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[661, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[662, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[664, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[665, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[666, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[668, "building-and-installing-py-art"]], "Required Dependencies": [[668, "required-dependencies"]], "Optional Dependencies": [[668, "optional-dependencies"]], "Obtaining the latest source": [[668, "obtaining-the-latest-source"]], "Installing from Source": [[668, "installing-from-source"]], "Frequently asked questions": [[668, "frequently-asked-questions"]], "User Guide": [[670, "user-guide"]], "Setting up an Environment": [[671, "setting-up-an-environment"]], "Anaconda": [[671, "anaconda"]], "Setting a Channel": [[671, "setting-a-channel"]], "Creating an Environment": [[671, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[671, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[671, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [126, "module-pyart.correct"], [170, "module-pyart.exceptions"], [171, "module-pyart.filters"], [206, "module-pyart.graph"], [363, "module-pyart.io"], [384, "module-pyart.lazydict"], [408, "module-pyart.map"], [421, "module-pyart.retrieve"], [457, "module-pyart.testing"], [560, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[126, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[127, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[128, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[141, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[142, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[143, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[144, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[145, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[155, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[156, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[157, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[158, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[159, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[160, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[161, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[162, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[163, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[164, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[165, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[166, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[167, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[168, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[169, "pyart.correct.phase_proc_lp_gf"]], "pyart.exceptions": [[170, "module-pyart.exceptions"]], "pyart.filters": [[171, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[172, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[184, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[188, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[189, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[198, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[199, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[200, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[201, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[202, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[203, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[204, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[205, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[206, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[207, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[210, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[211, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[214, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[215, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[220, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[221, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[233, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[234, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[235, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[236, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[237, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[253, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[254, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[255, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[256, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[257, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[258, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[267, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[268, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[270, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[271, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[274, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[275, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[281, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[284, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[285, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[289, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[290, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[291, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[292, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[293, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[294, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[295, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[296, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[297, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[299, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[300, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[301, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[303, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[304, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[310, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[313, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[314, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[325, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[326, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[327, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[328, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[329, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[330, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[332, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[333, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[334, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[342, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[360, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[361, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[362, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[363, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[364, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[365, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[366, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[367, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[368, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[369, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[370, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[371, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[372, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[373, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[374, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[375, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[376, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[377, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[378, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[379, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[380, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[381, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[382, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[383, "pyart.io.write_uf"]], "pyart.lazydict": [[384, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[385, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[386, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[394, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[395, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[396, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[397, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[398, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[399, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[400, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[401, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[402, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[403, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[404, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[405, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[406, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[407, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[408, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[409, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[410, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[411, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[412, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[413, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[414, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[415, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[416, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[417, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[418, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[419, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[420, "pyart.map.map_to_grid"]], "pyart.retrieve": [[421, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[422, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[423, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[424, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[425, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[426, "pyart.retrieve.compute_cdr"]], "compute_l() (in module pyart.retrieve)": [[427, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[428, "pyart.retrieve.compute_noisedBZ"]], "compute_snr() (in module pyart.retrieve)": [[429, "pyart.retrieve.compute_snr"]], "conv_strat_raut() (in module pyart.retrieve)": [[430, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[431, "pyart.retrieve.conv_strat_yuter"]], "create_cfad() (in module pyart.retrieve)": [[432, "pyart.retrieve.create_cfad"]], "dealias_spectra() (in module pyart.retrieve)": [[433, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[434, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[435, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[436, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[437, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[438, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[439, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[440, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[441, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[442, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[443, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[444, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[445, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[446, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[447, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[448, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[449, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[450, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[451, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[452, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[453, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[454, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[455, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[456, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[457, "module-pyart.testing"]], "grid (class in pyart.testing)": [[458, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[459, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[460, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[461, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[462, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[463, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[464, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[465, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[466, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[467, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[468, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[469, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[470, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[471, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[472, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[473, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[474, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[475, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[476, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[477, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[478, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[479, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[480, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[481, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[482, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[483, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[484, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[491, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[492, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[493, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[494, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[495, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[496, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[497, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[498, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[499, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[500, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[501, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[502, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[503, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[504, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[505, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[506, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[507, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[508, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[509, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[510, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[511, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[512, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[513, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[514, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[515, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[516, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[517, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[518, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[519, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[520, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[521, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[522, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[523, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[524, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[525, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[526, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[527, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[528, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[529, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[530, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[531, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[532, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[533, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[534, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[535, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[536, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[537, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[538, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[539, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[540, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[541, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[542, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[543, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[544, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[545, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[546, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[547, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[548, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[549, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[550, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[551, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[552, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[553, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[554, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[555, "pyart.testing.make_target_radar"]], "make_target_rhi_radar() (in module pyart.testing)": [[556, "pyart.testing.make_target_rhi_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[557, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[558, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[559, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[560, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[561, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[562, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[563, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[564, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[565, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[566, "pyart.util.column_vertical_profile"]], "cross_section_ppi() (in module pyart.util)": [[567, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[568, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[569, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[570, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[571, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[572, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[573, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[574, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[575, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[576, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[577, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[578, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[579, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[580, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[581, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[582, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[583, "pyart.util.join_radar"]], "mean_of_two_angles() (in module pyart.util)": [[584, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[585, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[586, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[587, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[588, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[589, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[590, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[591, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[592, "pyart.util.to_vpt"]]}})