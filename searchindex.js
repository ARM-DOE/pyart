Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_antenna", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_above_toa", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_last_gates", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calc_cloud_mask", "API/generated/pyart.correct.calc_noise_floor", "API/generated/pyart.correct.calc_zdr_offset", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.cloud_threshold", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.correct.range_correction", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_above_toa", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_last_gates", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_maxcappi", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.graph.plot_maxcappi", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_evp", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_qvp", "API/generated/pyart.retrieve.compute_rqvp", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.compute_svp", "API/generated/pyart.retrieve.compute_ts_along_coord", "API/generated/pyart.retrieve.compute_vp", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.create_cappi", "API/generated/pyart.retrieve.create_cfad", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_rhi_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.compute_directional_stats", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.ma_broadcast_to", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/2024/animated-gifs-with-pyart", "blog_posts/2024/epcape-blog-post", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_cloud_mask", "examples/correct/plot_dealias", "examples/correct/plot_zdr_check", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_grid_single_sweep_ppi", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_cappi", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_corner_reflector", "examples/plotting/plot_cross_section", "examples/plotting/plot_max_cappi", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_cfad", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_hydrometeor_class_x_band", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/pyart_2_0", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_antenna.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_above_toa.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_last_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calc_cloud_mask.rst", "API/generated/pyart.correct.calc_noise_floor.rst", "API/generated/pyart.correct.calc_zdr_offset.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.cloud_threshold.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.correct.range_correction.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_above_toa.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_last_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_maxcappi.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.graph.plot_maxcappi.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_evp.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_qvp.rst", "API/generated/pyart.retrieve.compute_rqvp.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.compute_svp.rst", "API/generated/pyart.retrieve.compute_ts_along_coord.rst", "API/generated/pyart.retrieve.compute_vp.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.create_cappi.rst", "API/generated/pyart.retrieve.create_cfad.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_rhi_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.compute_directional_stats.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.ma_broadcast_to.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/2024/animated-gifs-with-pyart.ipynb", "blog_posts/2024/epcape-blog-post.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_cloud_mask.rst", "examples/correct/plot_dealias.rst", "examples/correct/plot_zdr_check.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_grid_single_sweep_ppi.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_cappi.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_corner_reflector.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_max_cappi.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_cfad.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_hydrometeor_class_x_band.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/pyart_2_0.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_antenna", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_above_toa", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_last_gates", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calc_cloud_mask", "pyart.correct.calc_noise_floor", "pyart.correct.calc_zdr_offset", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.cloud_threshold", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.correct.range_correction", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_above_toa", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_last_gates", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplay.plot_maxcappi", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.graph.plot_maxcappi", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_evp", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_qvp", "pyart.retrieve.compute_rqvp", "pyart.retrieve.compute_snr", "pyart.retrieve.compute_svp", "pyart.retrieve.compute_ts_along_coord", "pyart.retrieve.compute_vp", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.create_cappi", "pyart.retrieve.create_cfad", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_rhi_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.compute_directional_stats", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.ma_broadcast_to", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART", "Investigating ARM Scanning Cloud Radar Data from EPCAPE", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Calculating and Plotting a Cloud Mask", "Dealias doppler velocities using the Region Based Algorithm", "ZDR Bias Calculation", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single PPI sweep to a Cartesian grid using 2D weighting", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Compare PPI vs CAPPI", "Choose a Colormap for your Plot", "Plot a Corner Reflector", "Plot a Cross Section from a Grid", "Plot Max-CAPPI", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Creating a CFAD diagram", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Hydrometeor Classification with Custom Frequency Settings", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Py-ART 2.0", "Setting up an Environment"], "terms": {"stream": [0, 62, 376, 502], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 208, 209, 210, 211, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 278, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 340, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 396, 404, 407, 408, 414, 417, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 483, 485, 488, 496, 497, 514, 583, 584, 595, 604, 606, 614, 616, 618, 619, 620, 622, 623, 650, 659, 670, 671, 690, 693], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 222, 224, 225, 226, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 324, 325, 326, 328, 329, 336, 357, 358, 359, 361, 362, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 397, 402, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 614, 615, 616, 618, 622, 623, 625, 628, 629, 630, 631, 633, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682, 684, 685, 686, 688, 689, 690, 693, 696], "print": [0, 62, 161, 173, 174, 243, 260, 385, 462, 502, 612, 614, 615, 619, 620, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 670, 671, 673, 685, 689, 690], "out": [0, 62, 160, 170, 174, 208, 211, 387, 388, 389, 390, 391, 433, 457, 502, 614, 615, 616, 618, 619, 620, 622, 623, 629, 641, 642, 648, 649, 660, 669, 672, 682, 688, 692, 693, 694], "version": [0, 12, 31, 212, 419, 461, 473, 575, 612, 613, 621, 622, 623, 625, 682, 690, 692, 693, 695, 696], "statu": [0, 613, 623, 693], "inform": [0, 24, 31, 45, 62, 74, 143, 155, 161, 167, 173, 174, 193, 205, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 376, 377, 385, 388, 461, 462, 468, 473, 485, 502, 514, 612, 616, 620, 621, 622, 623, 626, 636, 660, 673, 682, 693], "debug": [0, 161, 167, 173, 174, 243, 260, 385, 462, 622], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 122, 124, 125, 133, 138, 143, 144, 145, 158, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 174, 183, 188, 193, 194, 195, 208, 209, 210, 211, 226, 252, 287, 303, 316, 328, 336, 349, 361, 369, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 404, 406, 414, 417, 419, 425, 426, 427, 428, 432, 433, 435, 438, 439, 441, 442, 443, 444, 445, 447, 456, 457, 461, 462, 463, 464, 468, 470, 473, 475, 485, 487, 488, 491, 492, 494, 496, 497, 498, 514, 567, 580, 581, 590, 591, 595, 598, 609, 610, 611, 612, 614, 615, 616, 617, 618, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 635, 636, 639, 640, 641, 645, 646, 647, 648, 649, 650, 651, 654, 660, 667, 668, 670, 671, 673, 678, 682, 684, 685, 686, 688, 689, 690, 692, 693, 695, 696], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 161, 162, 163, 167, 168, 169, 172, 173, 174, 208, 209, 210, 211, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 431, 445, 456, 461, 462, 463, 464, 465, 468, 469, 472, 482, 485, 502, 514, 560, 604, 612, 613, 615, 616, 618, 620, 622, 625, 628, 629, 632, 633, 635, 636, 637, 640, 641, 643, 644, 645, 646, 649, 651, 653, 656, 662, 663, 664, 665, 669, 670, 671, 672, 674, 675, 676, 679, 680, 681, 682, 683, 689, 690, 691, 692, 696], "can": [0, 12, 16, 29, 45, 54, 57, 74, 122, 124, 125, 128, 143, 155, 162, 163, 167, 170, 172, 178, 193, 205, 208, 209, 210, 211, 226, 287, 316, 349, 370, 372, 379, 380, 382, 385, 389, 390, 391, 427, 428, 435, 438, 439, 441, 442, 443, 447, 456, 461, 462, 463, 464, 466, 471, 485, 494, 497, 514, 600, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 625, 629, 635, 636, 639, 646, 667, 668, 670, 671, 673, 678, 684, 685, 686, 688, 689, 690, 692, 693, 695, 696], "run": [0, 239, 445, 456, 472, 590, 613, 615, 619, 622, 623, 624, 625, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682, 692, 693, 696], "script": [0, 29, 620, 622, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 121, 123, 126, 128, 133, 135, 143, 144, 150, 155, 160, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 177, 178, 183, 185, 193, 194, 200, 205, 208, 209, 210, 211, 213, 227, 228, 229, 234, 237, 238, 239, 240, 243, 251, 252, 254, 256, 258, 260, 266, 267, 269, 271, 273, 274, 288, 289, 290, 295, 298, 299, 300, 303, 317, 318, 319, 325, 327, 328, 331, 332, 333, 336, 350, 351, 352, 358, 360, 361, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 402, 404, 407, 414, 416, 419, 421, 422, 423, 427, 428, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 473, 476, 481, 485, 487, 490, 494, 495, 496, 497, 514, 567, 580, 581, 583, 584, 590, 591, 592, 593, 594, 595, 596, 597, 598, 604, 613, 615, 616, 618, 622, 623, 625, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 653, 656, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 684, 688, 689, 690, 691, 693, 695, 696], "directori": [0, 29, 370, 483, 610, 612, 613, 619, 620, 621, 622, 623, 635, 692, 693], "report": [0, 1, 303, 336, 384, 471, 618, 622, 682], "dependeci": 0, "befor": [0, 31, 56, 167, 171, 174, 417, 435, 438, 439, 441, 443, 445, 456, 470, 473, 496, 614, 615, 616, 623, 639, 670, 682, 686, 690, 693], "build": [0, 122, 124, 125, 128, 133, 135, 143, 150, 155, 178, 183, 185, 193, 200, 205, 391, 614, 618, 622, 623, 625, 682, 693, 694], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 122, 123, 124, 125, 126, 128, 138, 143, 155, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 178, 188, 193, 205, 208, 209, 210, 211, 213, 215, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 258, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 307, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 340, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 363, 364, 365, 366, 368, 369, 370, 371, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 393, 417, 424, 425, 426, 427, 428, 430, 431, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 485, 487, 494, 496, 497, 514, 567, 575, 580, 581, 582, 583, 584, 590, 591, 598, 600, 604, 606, 607, 608, 609, 613, 617, 618, 621, 622, 623, 624, 625, 627, 628, 629, 631, 632, 633, 634, 635, 636, 638, 643, 644, 645, 646, 648, 649, 651, 654, 655, 657, 658, 659, 660, 661, 665, 667, 668, 670, 671, 673, 677, 681, 682, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 696], "python": [0, 29, 389, 612, 614, 615, 616, 618, 619, 620, 621, 622, 625, 628, 629, 630, 631, 633, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 684, 685, 686, 688, 689, 690, 692, 696], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 122, 124, 125, 128, 158, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 208, 209, 210, 211, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 303, 317, 319, 327, 328, 332, 333, 336, 350, 352, 360, 361, 365, 366, 370, 377, 378, 379, 380, 384, 386, 389, 416, 431, 432, 444, 445, 446, 456, 459, 460, 461, 462, 463, 464, 465, 468, 469, 473, 485, 514, 565, 575, 581, 593, 594, 604, 610, 615, 616, 618, 621, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 681, 683, 684, 685, 686, 688, 691, 694, 696], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 183, 185, 193, 200, 205, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 482, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 502, 514, 517, 559, 560, 561, 562, 563, 564, 565, 576, 577, 578, 579, 580, 581, 582, 583, 584, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 612, 614, 615, 620, 622, 623, 663, 670, 671, 673, 685, 686, 688, 690, 692, 693], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 122, 123, 125, 126, 168, 169, 370, 372, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 398, 399, 409, 410, 433, 502, 570, 571, 572, 573, 574, 576, 577, 578, 579, 591, 596, 614, 615, 616, 619, 620, 621, 622, 623, 635, 636, 639, 667, 682, 684, 686, 688, 693], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 128, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 208, 209, 210, 211, 213, 228, 243, 251, 254, 260, 267, 274, 289, 303, 318, 328, 336, 351, 370, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 398, 399, 402, 405, 409, 410, 415, 417, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 466, 467, 469, 470, 471, 472, 473, 474, 481, 482, 486, 487, 488, 490, 491, 492, 494, 502, 511, 539, 557, 561, 562, 563, 564, 567, 581, 590, 591, 593, 594, 595, 598, 599, 603, 606, 608, 609, 612, 613, 615, 616, 618, 619, 622, 623, 629, 635, 639, 645, 647, 649, 650, 651, 655, 656, 657, 658, 659, 660, 661, 662, 663, 668, 670, 671, 672, 673, 682, 683, 684, 688, 689, 693], "sy": [0, 370, 446, 645, 649], "stdout": [0, 62, 502], "descript": [1, 16, 18, 30, 127, 176, 177, 212, 371, 392, 416, 429, 472, 575, 604, 616, 623, 625, 667, 682, 693], "addit": [1, 2, 7, 8, 12, 14, 19, 167, 168, 169, 171, 226, 227, 234, 238, 239, 240, 252, 254, 255, 256, 257, 258, 269, 270, 271, 272, 273, 287, 288, 295, 299, 300, 316, 317, 324, 325, 326, 327, 328, 329, 332, 333, 349, 350, 357, 358, 359, 360, 361, 362, 365, 366, 369, 370, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 417, 424, 425, 426, 428, 445, 456, 595, 612, 614, 615, 619, 622, 625, 633, 635, 666, 670, 671, 682], "class": [1, 18, 19, 30, 31, 41, 45, 74, 127, 128, 177, 178, 212, 213, 243, 254, 260, 274, 303, 328, 336, 392, 393, 406, 416, 417, 418, 420, 427, 461, 472, 473, 483, 485, 514, 610, 614, 615, 616, 622, 623, 682, 688, 689, 693], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 127, 158, 160, 163, 171, 172, 177, 208, 209, 210, 211, 212, 226, 227, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 287, 288, 295, 299, 300, 303, 316, 317, 327, 332, 333, 336, 349, 350, 360, 365, 366, 369, 370, 371, 373, 376, 379, 380, 386, 389, 416, 417, 421, 422, 423, 425, 426, 427, 428, 429, 433, 439, 444, 445, 447, 456, 461, 462, 464, 470, 472, 496, 575, 581, 594, 595, 598, 603, 604, 609, 610, 615, 616, 619, 620, 622, 623, 629, 646, 667, 668, 670, 671, 673, 678, 682, 686, 688, 690, 692, 693, 695], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 128, 144, 145, 178, 194, 195, 227, 238, 288, 299, 317, 332, 350, 365, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 612, 618, 622, 628, 629, 630, 631, 633, 634, 637, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 654, 656, 659, 660, 662, 663, 664, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682, 684, 685, 686, 688, 689, 690, 691, 695], "write": [1, 15, 371, 387, 388, 389, 390, 391, 472, 483, 621, 622, 633, 634, 685], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 133, 143, 155, 158, 159, 160, 164, 165, 166, 167, 168, 169, 175, 183, 193, 205, 213, 227, 229, 234, 237, 238, 239, 240, 243, 252, 254, 256, 258, 260, 269, 271, 273, 274, 288, 290, 295, 298, 299, 300, 303, 317, 319, 327, 328, 331, 332, 333, 336, 350, 352, 360, 361, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 416, 417, 424, 425, 426, 428, 430, 433, 435, 438, 439, 441, 442, 443, 444, 446, 447, 448, 451, 456, 457, 461, 462, 463, 464, 466, 467, 468, 471, 473, 474, 485, 486, 487, 490, 491, 492, 494, 495, 496, 497, 498, 507, 508, 510, 514, 535, 536, 538, 560, 565, 567, 582, 590, 595, 606, 609, 622, 623, 628, 629, 630, 631, 633, 634, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 656, 657, 658, 659, 660, 662, 664, 666, 667, 668, 670, 671, 673, 674, 677, 678, 680, 681, 682, 683, 684, 685, 686, 690, 691, 693, 695], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 138, 161, 162, 163, 164, 167, 168, 170, 171, 173, 174, 188, 226, 230, 234, 235, 237, 238, 239, 240, 252, 287, 291, 295, 296, 298, 299, 300, 316, 320, 327, 328, 329, 331, 332, 333, 349, 353, 360, 361, 362, 364, 365, 366, 371, 376, 383, 389, 390, 424, 427, 428, 435, 437, 438, 439, 441, 447, 460, 462, 464, 473, 485, 491, 492, 494, 495, 496, 497, 498, 514, 561, 562, 563, 564, 565, 581, 582, 590, 591, 609, 612, 615, 616, 618, 623, 625, 626, 646, 650, 667, 682, 690, 693], "format": [1, 12, 13, 39, 40, 45, 74, 215, 217, 227, 229, 234, 237, 238, 239, 240, 276, 278, 288, 290, 295, 298, 299, 300, 305, 307, 317, 319, 327, 328, 331, 332, 333, 338, 340, 350, 352, 360, 361, 364, 365, 366, 370, 371, 373, 382, 384, 386, 387, 388, 390, 481, 482, 485, 514, 612, 614, 615, 616, 619, 620, 622, 623, 625, 631, 660, 682, 684, 693], "These": [1, 29, 128, 167, 178, 266, 389, 428, 614, 620, 623, 635, 646, 670, 682, 689, 692, 693, 695], "auxiliari": 1, "input": [1, 173, 174, 389, 425, 426, 456, 460, 461, 464, 590, 595, 612, 614, 622, 670, 671, 689], "output": [1, 13, 62, 166, 389, 425, 433, 444, 461, 502, 592, 613, 615, 618, 620, 622, 682], "routin": [1, 12, 177, 387, 427, 622, 682], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 123, 126, 143, 155, 160, 161, 162, 163, 167, 168, 169, 171, 172, 174, 177, 193, 205, 208, 209, 210, 211, 212, 227, 233, 234, 238, 239, 240, 252, 254, 256, 258, 266, 269, 271, 273, 288, 294, 295, 299, 300, 317, 323, 324, 325, 326, 327, 328, 329, 332, 333, 350, 356, 357, 358, 359, 360, 361, 362, 365, 366, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 395, 423, 424, 427, 428, 430, 432, 433, 442, 444, 445, 447, 449, 450, 451, 453, 454, 456, 461, 462, 464, 468, 473, 485, 496, 498, 514, 562, 563, 564, 583, 584, 591, 592, 596, 597, 605, 609, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 625, 629, 630, 631, 633, 635, 636, 639, 640, 646, 650, 651, 659, 662, 667, 668, 670, 671, 673, 682, 684, 685, 686, 688, 689, 690, 692, 693, 696], "well": [1, 170, 172, 208, 209, 210, 211, 361, 381, 383, 428, 612, 614, 619, 620, 622, 623, 636, 648, 671, 682, 688, 689, 693], "polish": 1, "those": [1, 48, 55, 144, 145, 168, 169, 194, 195, 385, 427, 428, 488, 495, 610, 616, 618, 667, 696], "io": [1, 128, 178, 424, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 628, 630, 631, 635, 636, 637, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682, 685, 686, 688, 689, 690, 691, 692, 693, 696], "thei": [1, 4, 58, 133, 135, 143, 167, 168, 169, 171, 183, 185, 193, 361, 377, 385, 391, 442, 444, 462, 498, 616, 618, 619, 623, 670, 693], "mai": [1, 29, 133, 135, 143, 150, 155, 167, 168, 183, 185, 193, 200, 205, 303, 336, 381, 383, 389, 393, 428, 444, 464, 575, 616, 618, 619, 625, 670, 682], "requir": [1, 31, 45, 74, 122, 124, 125, 167, 170, 171, 385, 389, 425, 426, 428, 470, 473, 485, 514, 591, 612, 613, 619, 622, 623, 636, 682, 693, 696], "depend": [1, 162, 163, 425, 428, 450, 612, 616, 622, 623, 625, 693], "beyond": [1, 692], "standard": [1, 40, 45, 62, 74, 119, 120, 167, 376, 387, 388, 389, 433, 463, 482, 485, 502, 514, 565, 578, 579, 597, 612, 616, 622, 623, 684, 685, 686, 693, 695], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 122, 124, 125, 128, 158, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 208, 209, 210, 211, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 303, 317, 319, 327, 328, 332, 333, 336, 350, 352, 360, 361, 365, 366, 370, 377, 378, 379, 380, 384, 386, 389, 416, 431, 432, 444, 445, 446, 456, 459, 460, 461, 462, 463, 464, 465, 468, 469, 473, 485, 514, 565, 575, 581, 593, 594, 604, 610, 616, 618, 626, 628, 630, 633, 634, 635, 636, 644, 646, 649, 650, 668, 671, 677, 681, 683, 684, 685, 686, 688, 691, 694, 696], "instal": [1, 10, 122, 124, 125, 170, 171, 389, 615, 618, 622, 625, 694, 695, 696], "non": [1, 122, 124, 125, 169, 385, 387, 444, 445, 456, 462, 464, 616, 622, 670], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 133, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 183, 208, 209, 210, 211, 212, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 461, 462, 463, 464, 465, 468, 469, 473, 474, 485, 486, 487, 489, 494, 502, 514, 517, 560, 575, 595, 604, 608, 612, 615, 616, 618, 620, 621, 622, 635, 671, 685, 690, 695], "support": [1, 254, 328, 361, 370, 373, 380, 381, 382, 383, 384, 392, 393, 417, 462, 614, 616, 618, 622, 623, 659, 682, 684, 685, 686, 688, 689, 690, 692, 693], "fulli": [1, 379, 618, 692], "test": [1, 12, 167, 376, 381, 383, 393, 613, 616, 622, 624, 625, 628, 630, 639, 641, 642, 646, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 678, 679, 680, 682, 684], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 128, 132, 140, 143, 147, 152, 155, 167, 168, 169, 171, 172, 173, 174, 178, 182, 190, 193, 197, 202, 205, 210, 227, 233, 234, 237, 238, 239, 240, 254, 288, 294, 295, 298, 299, 300, 317, 323, 327, 328, 331, 332, 333, 350, 356, 360, 361, 364, 365, 366, 369, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 406, 407, 424, 425, 426, 427, 428, 432, 435, 438, 439, 441, 443, 444, 445, 446, 456, 457, 460, 462, 464, 473, 475, 485, 488, 496, 497, 514, 591, 610, 612, 613, 614, 615, 616, 617, 619, 622, 623, 625, 633, 646, 667, 668, 669, 670, 674, 682, 690, 691, 693, 696], "pleas": [1, 56, 303, 336, 496, 612, 613, 616, 618, 620, 623, 682, 684, 685, 686, 688, 689, 690, 693], "your": [1, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 614, 615, 616, 621, 623, 625, 633, 644, 648, 665, 670, 671, 682, 691, 692, 693, 696], "own": [1, 12, 615, 619, 620, 625, 646, 682, 692], "risk": [1, 614], "bug": [1, 615, 623, 626, 682, 692, 693], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 128, 133, 144, 145, 166, 167, 168, 169, 174, 178, 183, 194, 195, 213, 253, 268, 328, 361, 369, 371, 372, 385, 388, 390, 391, 425, 426, 427, 428, 445, 456, 462, 463, 464, 466, 468, 470, 471, 473, 485, 487, 494, 514, 590, 591, 616, 619, 621, 622, 623, 625, 629, 631, 646, 670, 673, 682, 692, 693, 696], "fix": [1, 442, 446, 612, 615, 623, 624, 626, 633, 634, 637, 662, 684, 691, 692, 693, 696], "them": [1, 4, 5, 6, 56, 167, 168, 169, 170, 243, 260, 328, 361, 376, 385, 428, 496, 615, 620, 623, 625, 646, 682, 693, 696], "prioriti": [1, 696], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 215, 247, 261, 276, 305, 328, 338, 361, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 482, 612, 613, 614, 616, 619, 622, 623, 629, 631, 647, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 693, 695], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 165, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 435, 438, 439, 441, 442, 443, 474, 486, 487, 489, 494, 510, 517, 538, 606, 639, 688], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 124, 128, 130, 131, 133, 135, 142, 143, 144, 145, 146, 148, 150, 155, 156, 161, 167, 168, 169, 173, 174, 178, 180, 181, 183, 185, 192, 193, 194, 195, 196, 198, 200, 205, 206, 215, 227, 229, 234, 237, 238, 239, 240, 243, 252, 254, 256, 258, 259, 260, 266, 269, 271, 273, 276, 288, 290, 295, 298, 299, 300, 305, 317, 319, 327, 328, 331, 332, 333, 338, 350, 352, 360, 361, 364, 365, 366, 369, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 397, 427, 428, 432, 444, 445, 450, 453, 456, 461, 462, 463, 464, 474, 475, 482, 483, 486, 487, 488, 491, 492, 494, 496, 497, 498, 573, 574, 585, 586, 587, 588, 589, 590, 598, 609, 612, 614, 615, 616, 618, 619, 622, 623, 629, 649, 650, 657, 659, 660, 662, 670, 671, 673, 684, 685, 689, 690, 693], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 488, 622], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 167, 168, 169, 226, 227, 228, 234, 238, 239, 240, 252, 254, 255, 256, 257, 258, 259, 266, 269, 270, 271, 272, 273, 287, 288, 289, 295, 299, 300, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 349, 350, 351, 357, 358, 359, 360, 361, 362, 365, 366, 370, 373, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 424, 425, 426, 427, 428, 462, 585, 586, 587, 588, 589, 615, 616, 620, 622], "d3r": [2, 622], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 374, 375, 376, 378, 382, 387, 388, 457, 482, 585, 588, 612, 620, 622, 682, 683], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 34, 40, 45, 46, 47, 49, 54, 74, 77, 122, 124, 125, 133, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 183, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 419, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 462, 463, 464, 465, 468, 469, 473, 474, 476, 482, 485, 486, 487, 489, 494, 514, 517, 560, 582, 595, 604, 606, 608, 614, 616, 618, 620, 622], "odim_h5": [2, 8, 622], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 122, 124, 125, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 213, 274, 303, 328, 336, 370, 372, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 393, 427, 428, 432, 434, 436, 437, 440, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 464, 465, 467, 468, 469, 473, 474, 476, 481, 485, 486, 514, 604, 612, 616, 684], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 123, 124, 126, 128, 133, 135, 143, 150, 155, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 178, 183, 185, 193, 200, 205, 227, 234, 238, 239, 240, 242, 252, 254, 256, 258, 266, 269, 271, 273, 288, 295, 299, 300, 302, 317, 325, 326, 327, 328, 329, 332, 333, 335, 350, 358, 359, 360, 361, 365, 366, 368, 369, 370, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 428, 431, 432, 434, 436, 437, 440, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 471, 473, 474, 475, 482, 485, 486, 487, 488, 491, 492, 494, 496, 497, 502, 514, 583, 584, 591, 598, 604, 608, 609, 615, 616, 622, 670, 690, 695], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 122, 124, 125, 161, 162, 163, 167, 168, 169, 170, 171, 173, 174, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 395, 397, 424, 427, 428, 431, 432, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 461, 465, 467, 468, 469, 473, 474, 485, 486, 487, 489, 514, 517, 559, 604, 636, 671, 685, 690], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 123, 126, 232, 254, 266, 293, 303, 322, 324, 325, 326, 328, 329, 336, 355, 357, 358, 359, 361, 362, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 404, 414, 433, 465, 473, 485, 514, 612, 614, 615, 616, 618, 622, 623, 639, 643, 644, 648, 649, 650, 665, 668, 670, 671, 679, 682, 683, 691, 693, 695], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 183, 184, 185, 186, 187, 188, 189, 191, 192, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 226, 227, 228, 229, 234, 237, 238, 239, 240, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 287, 288, 289, 290, 295, 298, 299, 300, 303, 304, 305, 306, 307, 308, 313, 316, 317, 318, 319, 327, 328, 331, 332, 333, 336, 337, 338, 339, 340, 341, 346, 349, 350, 351, 352, 360, 361, 364, 365, 366, 370, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 419, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 481, 485, 486, 487, 488, 489, 494, 497, 510, 514, 517, 538, 561, 562, 563, 564, 565, 567, 570, 571, 572, 573, 574, 580, 581, 582, 594, 595, 604, 606, 607, 608, 612, 614, 615, 616, 618, 619, 620, 622, 623, 628, 629, 633, 635, 639, 640, 641, 642, 645, 646, 648, 649, 651, 662, 666, 667, 668, 669, 670, 671, 672, 678, 680, 682, 683, 684, 686, 688, 689, 690, 693], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 121, 127, 128, 143, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 193, 205, 208, 209, 210, 211, 212, 213, 226, 227, 232, 234, 238, 239, 240, 256, 258, 269, 271, 273, 274, 287, 288, 293, 295, 299, 300, 303, 316, 317, 322, 325, 327, 328, 332, 333, 336, 349, 350, 355, 358, 360, 361, 365, 366, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 416, 417, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 481, 514, 557, 562, 563, 564, 567, 570, 571, 572, 573, 574, 581, 582, 583, 584, 587, 589, 590, 592, 593, 594, 595, 598, 599, 604, 605, 606, 607, 608, 609, 612, 613, 616, 618, 622, 627, 628, 629, 630, 633, 634, 635, 636, 638, 640, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 671, 672, 673, 674, 675, 678, 679, 680, 683, 684, 686, 688, 689, 691, 694, 695], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 122, 124, 125, 143, 155, 164, 165, 167, 170, 171, 172, 193, 205, 209, 210, 215, 217, 227, 228, 233, 234, 238, 239, 240, 251, 252, 253, 254, 255, 256, 257, 258, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 288, 289, 294, 295, 299, 300, 305, 307, 317, 318, 323, 326, 327, 328, 332, 333, 338, 340, 350, 351, 356, 359, 360, 361, 365, 366, 369, 370, 373, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 393, 400, 404, 411, 414, 428, 432, 435, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 461, 462, 463, 464, 465, 468, 473, 474, 485, 487, 488, 489, 496, 514, 517, 580, 583, 584, 591, 606, 613, 615, 616, 617, 618, 620, 623, 625, 670, 682, 684, 685, 686, 688, 689, 690, 692, 693, 696], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 168, 169, 213, 274, 303, 336, 373, 377, 379, 380, 381, 382, 384, 385, 386, 390, 391, 435, 438, 439, 441, 443, 444, 450, 461, 462, 485, 514, 557, 582, 590, 613, 616, 620, 622, 623, 671, 673, 682, 690, 693], "found": [2, 7, 8, 12, 14, 29, 163, 170, 373, 377, 379, 380, 381, 382, 384, 385, 386, 400, 411, 424, 427, 428, 433, 457, 612, 614, 616, 618, 620, 622, 623, 625, 636, 649, 682, 692, 693, 696], "doe": [2, 7, 8, 12, 14, 49, 77, 122, 124, 125, 167, 168, 169, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 370, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 404, 414, 489, 517, 609, 614, 616, 622, 623, 625, 660, 673, 684, 692, 693, 695, 696], "appear": [2, 7, 8, 12, 14, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 598, 616, 619, 620], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 166, 167, 215, 247, 260, 261, 276, 305, 336, 338, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 390, 397, 404, 414, 416, 447, 450, 453, 454, 461, 485, 514, 567, 591, 608, 613, 615, 616, 618, 619, 620, 623, 625, 635, 646, 670, 682, 688, 690, 692, 693, 695, 696], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 122, 123, 124, 125, 126, 128, 130, 131, 133, 134, 135, 137, 141, 143, 146, 148, 149, 150, 153, 155, 157, 158, 159, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 181, 183, 184, 185, 187, 191, 193, 196, 198, 199, 200, 203, 205, 207, 208, 209, 210, 211, 227, 228, 229, 231, 234, 235, 236, 237, 238, 239, 240, 251, 252, 254, 256, 258, 266, 267, 269, 271, 273, 288, 289, 290, 292, 295, 296, 297, 298, 299, 300, 317, 318, 319, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 350, 351, 352, 354, 357, 358, 359, 360, 361, 363, 364, 365, 366, 369, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 400, 401, 406, 411, 412, 427, 428, 430, 432, 433, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 450, 453, 454, 456, 459, 461, 462, 463, 464, 468, 470, 473, 485, 488, 514, 562, 563, 564, 565, 580, 582, 590, 591, 595, 596, 597, 612, 614, 615, 616, 619, 620, 622, 623, 636, 639, 646, 651, 667, 668, 669, 670, 671, 678, 685, 686, 689, 693], "place": [2, 7, 8, 12, 14, 228, 232, 233, 251, 253, 267, 268, 289, 293, 294, 318, 322, 323, 351, 355, 356, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 609, 619, 620, 622, 688, 692], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 123, 126, 128, 158, 159, 161, 162, 163, 164, 167, 168, 169, 172, 173, 174, 178, 208, 209, 210, 211, 213, 243, 252, 260, 274, 303, 326, 336, 359, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 392, 393, 406, 424, 425, 426, 427, 428, 432, 433, 435, 436, 438, 444, 445, 446, 447, 449, 450, 456, 461, 462, 463, 464, 466, 468, 469, 470, 471, 473, 485, 487, 514, 565, 581, 595, 612, 616, 619, 620, 622, 623, 651, 667, 670, 671, 676, 682, 693], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 161, 162, 163, 165, 167, 168, 169, 170, 172, 173, 174, 178, 183, 185, 193, 200, 205, 208, 209, 210, 211, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 234, 237, 238, 239, 240, 242, 251, 252, 254, 256, 258, 266, 267, 269, 271, 273, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 295, 298, 299, 300, 302, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 327, 328, 331, 332, 333, 335, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 360, 361, 364, 365, 366, 368, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 396, 408, 428, 430, 431, 433, 442, 444, 445, 446, 447, 450, 453, 454, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 473, 485, 491, 492, 494, 496, 497, 502, 514, 562, 563, 564, 582, 590, 591, 604, 613, 614, 622, 623, 659, 660, 667, 670, 671, 673, 682, 692, 693, 696], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 122, 124, 125, 161, 162, 163, 167, 170, 172, 173, 174, 208, 209, 210, 211, 232, 233, 237, 293, 294, 298, 322, 323, 331, 355, 356, 364, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 391, 427, 428, 432, 439, 442, 461, 462, 468, 473, 485, 514, 580, 581, 612, 615, 616, 619, 620, 621, 622, 648, 649, 650, 667, 668, 670, 695], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 161, 162, 163, 167, 168, 169, 172, 173, 174, 208, 209, 210, 211, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 431, 445, 456, 461, 462, 463, 464, 465, 468, 469, 604, 612, 613, 616, 618, 622, 635, 639, 669, 678], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 473, 491, 492, 494, 495, 496, 497, 498, 581, 619, 622, 623, 645, 667, 669, 670, 671, 672, 673, 674, 675, 678, 686, 691, 693], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 161, 162, 163, 167, 168, 169, 173, 174, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 390, 431, 433, 444, 462, 463, 464, 465, 469, 473, 474, 485, 486, 487, 514, 559, 561, 567, 604, 620, 621, 622, 636, 657, 658, 662, 690], "dure": [2, 7, 8, 12, 14, 19, 143, 155, 166, 167, 168, 169, 193, 205, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 445, 455, 462, 468, 612, 671, 692, 696], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 122, 123, 124, 125, 126, 130, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 155, 156, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 180, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 205, 206, 209, 210, 215, 217, 227, 228, 229, 232, 233, 234, 237, 238, 239, 240, 251, 252, 253, 254, 255, 256, 257, 258, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 288, 289, 290, 293, 294, 295, 298, 299, 300, 303, 305, 307, 317, 318, 319, 322, 323, 327, 328, 331, 332, 333, 336, 338, 340, 350, 351, 352, 355, 356, 360, 361, 364, 365, 366, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 400, 401, 404, 406, 411, 412, 414, 417, 424, 425, 426, 427, 428, 430, 432, 433, 435, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 453, 454, 456, 457, 461, 462, 463, 464, 468, 470, 473, 474, 475, 485, 487, 488, 495, 496, 497, 498, 502, 514, 567, 580, 583, 584, 590, 591, 592, 595, 598, 600, 605, 606, 608, 609, 610, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 628, 635, 636, 639, 640, 646, 647, 648, 649, 650, 651, 654, 659, 660, 667, 668, 670, 671, 673, 684, 685, 686, 688, 689, 690, 692, 693, 695, 696], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 133, 135, 143, 144, 145, 150, 155, 161, 162, 163, 167, 168, 169, 170, 172, 173, 174, 183, 185, 193, 194, 195, 200, 205, 209, 210, 303, 336, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 425, 426, 428, 433, 447, 461, 486, 487, 561, 609, 613, 617, 619, 620, 626, 629, 667, 684], "success": [2, 7, 8, 12, 14, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 625], "unless": [2, 7, 8, 12, 14, 58, 122, 124, 125, 169, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 390, 498, 616], "explicitli": [2, 7, 8, 12, 14, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 425, 426], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 128, 133, 135, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 167, 168, 169, 170, 171, 172, 177, 178, 183, 185, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 227, 234, 238, 239, 240, 252, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 370, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 425, 426, 427, 428, 460, 470, 485, 490, 496, 497, 514, 581, 600, 613, 615, 616, 618, 619, 620, 621, 622, 623, 625, 635, 639, 662, 667, 682, 689, 692, 693], "introduct": [2, 7, 8, 12, 14, 373, 377, 379, 380, 381, 382, 383, 384, 385, 623, 693], "specif": [2, 7, 8, 12, 14, 143, 155, 161, 162, 163, 193, 205, 336, 361, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 428, 449, 450, 451, 453, 454, 457, 461, 462, 463, 464, 595, 614, 616, 620, 622, 623, 628, 646, 670, 671, 673, 682, 693, 696], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 122, 124, 125, 133, 135, 150, 167, 168, 169, 177, 183, 185, 200, 227, 229, 234, 238, 239, 240, 252, 254, 255, 256, 257, 258, 266, 269, 270, 271, 272, 273, 288, 290, 295, 299, 300, 317, 319, 324, 325, 326, 327, 328, 329, 332, 333, 350, 352, 357, 358, 359, 360, 361, 362, 365, 366, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 400, 411, 417, 427, 428, 446, 462, 463, 464, 473, 485, 488, 496, 497, 514, 604, 608, 614, 615, 616, 619, 622, 630, 635, 688, 689, 692], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 124, 128, 133, 135, 143, 150, 155, 161, 167, 168, 169, 173, 174, 178, 183, 185, 193, 200, 205, 215, 217, 227, 229, 234, 237, 238, 239, 240, 243, 252, 254, 256, 258, 260, 266, 269, 271, 273, 276, 278, 288, 290, 295, 298, 299, 300, 305, 307, 317, 319, 327, 328, 331, 332, 333, 338, 340, 350, 352, 360, 361, 364, 365, 366, 369, 370, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 424, 425, 428, 432, 444, 445, 446, 450, 453, 454, 456, 461, 462, 463, 464, 468, 474, 475, 482, 486, 487, 488, 491, 492, 494, 496, 497, 498, 590, 598, 609, 616], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 124, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 161, 167, 168, 169, 173, 174, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 215, 217, 227, 229, 234, 237, 238, 239, 240, 243, 252, 254, 256, 258, 259, 260, 266, 269, 271, 273, 276, 278, 288, 290, 295, 298, 299, 300, 305, 307, 317, 319, 327, 328, 331, 332, 333, 338, 340, 350, 352, 360, 361, 364, 365, 366, 369, 370, 372, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 397, 424, 425, 427, 428, 432, 444, 445, 446, 450, 453, 454, 456, 461, 462, 463, 464, 468, 473, 474, 475, 482, 483, 485, 486, 487, 488, 491, 492, 494, 496, 497, 498, 514, 573, 574, 590, 598, 609, 612, 613, 614, 615, 616, 618, 619, 622, 623, 640, 649, 650, 657, 658, 659, 660, 667, 670, 671, 673, 674, 678, 685, 686, 690, 693], "mdv": [2, 8, 12, 14, 379, 380, 390, 613, 622, 630, 633, 641, 644, 665, 682, 686, 688, 691], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 122, 124, 125, 143, 155, 167, 169, 193, 205, 371, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 404, 414, 614, 615, 616, 618, 620, 622, 623, 635, 636, 639, 640, 660, 693], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 167, 168, 169, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 425, 426, 432, 461, 612, 613, 614, 615, 616, 618, 619, 620, 622, 639], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 123, 126, 160, 161, 162, 163, 165, 167, 168, 169, 170, 208, 211, 232, 252, 293, 322, 355, 361, 370, 372, 373, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 417, 418, 419, 420, 424, 427, 428, 430, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 456, 459, 461, 462, 463, 464, 468, 470, 473, 485, 514, 560, 575, 576, 577, 580, 582, 590, 591, 596, 597, 600, 604, 606, 608, 612, 613, 614, 615, 619, 622, 625, 629, 631, 633, 636, 640, 651, 662, 667, 670, 671, 673, 683, 686, 689, 692, 695], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 144, 145, 161, 162, 163, 166, 167, 169, 173, 174, 194, 195, 227, 238, 254, 288, 299, 317, 328, 332, 350, 361, 365, 373, 377, 379, 380, 381, 382, 383, 384, 385, 425, 426, 428, 446, 462, 470, 490, 496, 497, 583, 584, 598, 600, 606, 612, 613, 614, 616, 618, 622, 623, 626, 639, 640, 650, 660, 670, 671, 685, 686, 688, 693], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 133, 135, 143, 150, 155, 160, 161, 162, 163, 167, 183, 185, 193, 200, 205, 227, 238, 260, 288, 299, 317, 328, 332, 350, 365, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 442, 445, 456, 459, 475, 485, 488, 496, 514, 565, 590, 612, 614, 615, 616, 617, 618, 620, 622, 623, 629, 635, 636, 667, 668, 670, 671, 673, 682, 688, 692, 693, 694, 695, 696], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 122, 124, 125, 167, 168, 169, 328, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 392, 393, 395, 397, 400, 401, 402, 404, 406, 411, 412, 414, 427, 428, 457, 461, 473, 474, 485, 486, 487, 514, 567, 614, 616, 619, 620, 667, 684, 685, 689], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 213, 229, 233, 236, 260, 274, 290, 294, 297, 303, 319, 323, 330, 336, 352, 356, 363, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 419, 425, 426, 428, 435, 438, 439, 441, 442, 443, 446, 447, 457, 460, 488, 581, 583, 584, 593, 615, 616, 618, 620, 621, 622, 623, 625, 635, 682, 693, 694], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 155, 161, 162, 163, 172, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 202, 205, 208, 209, 210, 211, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 444, 462, 463, 464, 466, 470, 471, 488, 630, 641, 645, 649, 689], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 165, 168, 169, 171, 172, 173, 174, 209, 210, 227, 228, 234, 237, 238, 239, 240, 251, 267, 288, 289, 295, 298, 299, 300, 317, 318, 327, 328, 331, 332, 333, 350, 351, 360, 361, 364, 365, 366, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 417, 424, 428, 433, 445, 446, 450, 456, 485, 488, 514, 591, 614, 615, 616, 618, 619, 622, 623, 629, 631, 635, 645, 646, 659, 670, 671, 673, 678, 686, 693], "after": [2, 4, 5, 6, 7, 8, 12, 14, 167, 168, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 393, 462, 612, 614, 616, 622, 623, 625, 636, 670, 692, 693, 696], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 122, 123, 124, 125, 126, 128, 133, 135, 143, 150, 155, 160, 161, 162, 163, 167, 168, 169, 172, 173, 174, 178, 183, 185, 193, 200, 205, 208, 209, 210, 211, 227, 229, 234, 237, 238, 239, 240, 241, 242, 252, 254, 288, 290, 295, 298, 299, 300, 301, 302, 317, 319, 327, 328, 331, 332, 333, 334, 335, 350, 352, 360, 361, 364, 365, 366, 367, 368, 370, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 398, 399, 402, 403, 409, 410, 413, 428, 439, 444, 449, 450, 451, 453, 454, 462, 463, 464, 473, 485, 496, 497, 498, 514, 562, 563, 564, 573, 574, 580, 590, 601, 602, 613, 614, 620, 622, 623, 631, 633, 636, 639, 640, 647, 648, 656, 659, 660, 663, 664, 666, 667, 670, 671, 675, 678, 682, 686, 691, 692, 693, 694], "you": [2, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 461, 612, 615, 616, 617, 618, 619, 621, 623, 625, 635, 670, 671, 682, 684, 685, 686, 688, 689, 690, 692, 693, 696], "want": [2, 613, 615, 616, 618, 619, 631, 636, 667, 682, 689, 690, 696], "altitud": [2, 31, 45, 56, 74, 173, 174, 213, 370, 425, 428, 433, 446, 447, 468, 473, 485, 496, 514, 592, 605, 612, 615, 622, 645, 660, 667, 674, 684, 688, 690], "provid": [2, 6, 45, 48, 74, 167, 212, 233, 294, 323, 328, 356, 370, 375, 376, 377, 382, 385, 389, 390, 391, 393, 398, 399, 405, 406, 409, 410, 415, 417, 446, 461, 485, 488, 514, 595, 604, 610, 612, 615, 616, 618, 619, 620, 621, 623, 636, 668, 670, 682, 689, 692, 693], "np": [2, 417, 437, 471, 603, 612, 614, 615, 616, 618, 620, 622, 623, 629, 639, 641, 646, 649, 651, 656, 659, 660, 662, 667, 668, 670, 671, 672, 673, 674, 684, 685, 686, 688, 689, 690, 693], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 126, 128, 133, 135, 143, 144, 145, 150, 155, 159, 164, 167, 168, 169, 171, 175, 178, 183, 185, 193, 194, 195, 200, 205, 213, 227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 266, 267, 269, 271, 273, 274, 288, 289, 290, 295, 299, 300, 303, 317, 318, 319, 324, 325, 327, 328, 332, 333, 336, 350, 351, 352, 357, 358, 360, 361, 365, 366, 370, 417, 427, 428, 437, 445, 447, 448, 456, 461, 463, 464, 465, 470, 471, 473, 475, 481, 487, 491, 492, 494, 495, 496, 497, 498, 576, 577, 578, 579, 580, 588, 589, 591, 596, 597, 600, 601, 602, 603, 612, 616, 622, 623, 639, 656, 667, 670, 671, 674, 684, 685, 686, 688, 689, 690, 693], "295": [2, 622], "dtype": [2, 424, 428, 612, 615, 616, 622, 629, 684, 686, 690], "float64": [2, 427, 428, 612, 615, 668, 690], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 208, 209, 210, 211, 214, 215, 216, 217, 218, 247, 248, 249, 250, 261, 262, 263, 264, 275, 276, 277, 278, 279, 304, 305, 306, 307, 308, 337, 338, 339, 340, 341, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 395, 400, 401, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 483, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 507, 508, 509, 510, 511, 512, 513, 527, 528, 529, 530, 535, 536, 537, 538, 539, 540, 541, 557, 559, 560, 561, 562, 563, 564, 565, 567, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606, 608, 612, 614, 615, 616, 619, 620, 622, 623, 649, 668, 670, 671, 673, 685, 688, 690, 693], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 159, 161, 162, 163, 167, 168, 169, 171, 172, 173, 174, 175, 208, 209, 210, 211, 227, 234, 237, 238, 239, 240, 242, 288, 295, 298, 299, 300, 302, 317, 327, 328, 331, 332, 333, 335, 350, 360, 361, 364, 365, 366, 368, 370, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 406, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 438, 441, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 485, 486, 490, 491, 492, 494, 495, 496, 497, 498, 514, 580, 581, 583, 584, 590, 594, 604, 606, 609, 612, 613, 616, 619, 622, 623, 636, 652, 653, 671, 682, 684, 685, 688, 690, 692, 693, 696], "edg": [3, 33, 57, 120, 124, 167, 168, 169, 170, 171, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 447, 460, 464, 475, 497, 565, 614, 615, 616, 659, 660, 670], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 391, 615, 622], "gamic": [4, 622], "hdf5": [4, 8, 622, 682], "unlik": [4, 5, 6, 376], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 167, 168, 169, 170, 171, 172, 210, 227, 229, 234, 237, 238, 239, 240, 254, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 373, 376, 378, 381, 383, 385, 389, 417, 428, 445, 456, 466, 470, 473, 481, 485, 514, 562, 563, 564, 614, 615, 616, 620, 623, 667, 670, 671, 682, 684, 692, 693, 696], "still": [4, 5, 6, 167, 303, 336, 376, 391, 428, 598, 618, 620, 622, 623, 635, 693, 695], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 128, 133, 135, 143, 150, 155, 167, 168, 169, 170, 172, 173, 174, 178, 183, 185, 193, 200, 205, 208, 209, 210, 211, 227, 228, 232, 233, 234, 237, 238, 239, 240, 243, 251, 254, 256, 258, 260, 266, 267, 269, 271, 273, 288, 289, 293, 294, 295, 298, 299, 300, 317, 318, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 372, 373, 375, 376, 381, 382, 385, 386, 388, 389, 390, 391, 393, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 439, 442, 446, 457, 461, 462, 463, 464, 468, 469, 470, 473, 475, 485, 490, 494, 507, 508, 510, 511, 514, 535, 536, 538, 539, 580, 581, 582, 583, 584, 591, 593, 594, 595, 596, 597, 604, 608, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 625, 630, 635, 636, 639, 646, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 667, 668, 671, 678, 679, 680, 682, 686, 688, 690, 692, 693], "renam": [4, 5, 6, 29, 376, 386, 622], "uniform": [4, 5, 6, 58, 168, 169, 376, 384, 432, 444, 498, 622, 646, 651, 682, 684], "forc": [4, 5, 6, 376, 386, 432, 616, 622], "extract": [4, 160, 227, 288, 317, 350, 370, 385, 442, 444, 457, 581, 583, 584, 594, 618, 622, 633, 639, 664, 666, 667, 670, 671, 675, 682, 691], "valid": [4, 31, 45, 74, 157, 161, 167, 207, 228, 251, 267, 289, 318, 351, 381, 390, 391, 425, 426, 428, 435, 438, 439, 441, 461, 473, 485, 514, 581, 582, 583, 584, 591, 620, 622, 623, 640, 693], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 121, 163, 175, 213, 227, 229, 234, 235, 236, 238, 239, 240, 252, 254, 256, 258, 266, 269, 271, 273, 274, 288, 290, 295, 296, 297, 299, 300, 303, 317, 319, 327, 328, 329, 330, 332, 333, 336, 350, 352, 360, 361, 362, 363, 365, 366, 370, 384, 425, 426, 428, 435, 437, 439, 441, 442, 444, 462, 464, 485, 495, 497, 514, 581, 582, 590, 606, 612, 614, 615, 616, 622, 629, 631, 640, 646, 649, 653, 656, 662, 674, 684, 690], "valid_min": [4, 167, 168, 169, 377, 622, 670, 671, 690], "valid_max": [4, 167, 168, 169, 377, 670, 671, 690], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 133, 135, 138, 143, 144, 145, 150, 155, 167, 168, 169, 173, 174, 183, 185, 188, 193, 194, 195, 200, 205, 227, 234, 238, 239, 240, 254, 260, 288, 295, 299, 300, 317, 327, 328, 332, 333, 336, 350, 360, 361, 365, 366, 381, 382, 384, 385, 387, 391, 393, 417, 428, 432, 435, 438, 439, 441, 443, 450, 453, 454, 462, 463, 464, 470, 472, 473, 485, 486, 487, 491, 492, 494, 496, 497, 514, 591, 613, 614, 615, 618, 619, 622, 623, 624, 625, 626, 646, 667, 670, 671, 673, 682, 685, 686, 689, 692, 693, 696], "present": [4, 29, 31, 45, 74, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 390, 391, 404, 414, 428, 461, 473, 485, 514, 616, 684, 689], "unit": [4, 55, 122, 123, 124, 125, 126, 168, 169, 219, 222, 223, 224, 225, 232, 252, 280, 283, 284, 285, 286, 293, 309, 312, 313, 314, 315, 322, 342, 345, 346, 347, 348, 355, 377, 379, 430, 456, 459, 472, 495, 567, 591, 612, 616, 618, 622, 623, 624, 629, 657, 662, 670, 671, 673, 682, 685, 690, 693], "avail": [4, 16, 45, 56, 57, 58, 74, 143, 155, 161, 162, 163, 171, 193, 205, 212, 252, 254, 256, 258, 269, 271, 273, 379, 389, 446, 485, 496, 497, 498, 514, 600, 612, 614, 615, 616, 619, 622, 625, 633, 635, 646, 667, 682], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 123, 126, 450, 461, 470, 471, 612, 614, 615, 616, 617, 618, 619, 620, 622, 623, 636, 674, 684, 685, 686, 688, 689, 690, 693], "k": [5, 126, 158, 159, 164, 231, 232, 233, 235, 236, 237, 292, 293, 294, 296, 297, 298, 321, 322, 323, 329, 330, 331, 354, 355, 356, 362, 363, 364, 396, 400, 401, 403, 404, 408, 411, 412, 413, 414, 444, 462, 470, 614, 618, 620, 623, 648, 656, 659, 660, 693], "band": [5, 9, 161, 163, 166, 389, 435, 449, 451, 458, 461, 462, 463, 464, 468, 612, 620, 622, 671, 673], "arm": [5, 6, 40, 158, 159, 164, 374, 375, 376, 387, 388, 428, 457, 482, 561, 567, 612, 614, 616, 618, 622, 625, 629, 642, 660, 684, 685, 686, 688, 689, 690, 692, 695, 696], "zenith": 5, "kazr": [5, 6, 622, 629], "ingest": [5, 615, 622, 682, 683], "spectra": [6, 74, 117, 448, 467, 514, 557, 564, 572, 591, 622], "radar_spectra": 6, "delay_field_load": [6, 373, 376, 379, 380, 381, 384, 386], "delai": [6, 373, 376, 379, 380, 381, 384, 622], "load": [6, 29, 373, 376, 379, 380, 381, 384, 392, 393, 402, 622, 640, 645, 649, 690], "until": [6, 29, 168, 373, 376, 379, 380, 381, 384, 619, 625], "particular": [6, 373, 376, 379, 380, 381, 384, 428, 442, 615, 625, 667, 682], "access": [6, 19, 31, 45, 56, 57, 74, 144, 145, 194, 195, 373, 376, 379, 380, 381, 384, 393, 473, 485, 496, 497, 514, 560, 615, 620, 635, 636, 688, 690, 695], "In": [6, 122, 124, 125, 169, 171, 371, 373, 376, 379, 380, 381, 383, 384, 404, 414, 417, 430, 433, 442, 447, 462, 471, 580, 581, 612, 614, 615, 616, 618, 619, 623, 628, 629, 630, 631, 636, 645, 667, 670, 671, 682, 685, 686, 688, 689, 692, 693, 695], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 143, 144, 145, 155, 167, 193, 194, 195, 205, 227, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 370, 373, 376, 377, 379, 380, 381, 384, 387, 388, 391, 473, 476, 477, 478, 479, 485, 496, 497, 503, 504, 505, 506, 514, 531, 532, 533, 534, 612, 615, 616, 618, 620, 668, 684, 690], "radarspectra": [6, 467, 564], "lazyloaddict": [6, 31, 45, 74, 373, 376, 379, 380, 381, 384, 473, 485, 514], "speedup": [6, 254, 328, 361, 376, 616, 622], "where": [6, 15, 56, 57, 119, 123, 126, 130, 133, 134, 135, 136, 137, 139, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 163, 167, 168, 169, 172, 174, 180, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 227, 234, 237, 238, 239, 240, 253, 268, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 369, 370, 376, 433, 435, 438, 439, 441, 442, 443, 445, 447, 456, 465, 471, 496, 497, 583, 584, 592, 595, 608, 612, 613, 616, 618, 622, 635, 636, 639, 646, 651, 667, 668, 670, 673, 682, 685, 689, 696], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 121, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 274, 288, 295, 299, 300, 303, 317, 327, 328, 332, 333, 336, 350, 360, 361, 365, 366, 376, 381, 382, 383, 384, 417, 424, 427, 428, 462, 463, 464, 465, 466, 470, 471, 485, 495, 496, 497, 514, 562, 563, 564, 580, 581, 593, 594, 612, 616, 622, 630, 639, 641, 642, 645, 648, 649, 684, 686, 688, 689, 690], "vari": [6, 376, 379, 444, 670, 671], "between": [6, 33, 45, 56, 57, 74, 120, 123, 124, 143, 155, 167, 168, 170, 171, 172, 193, 205, 209, 210, 227, 234, 238, 239, 240, 252, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 369, 376, 381, 384, 389, 390, 391, 417, 444, 445, 450, 456, 475, 485, 496, 497, 514, 575, 590, 605, 612, 614, 615, 616, 623, 625, 639, 647, 648, 659, 667, 670, 686, 688, 693, 696], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 138, 143, 155, 161, 162, 163, 167, 168, 169, 171, 174, 188, 193, 205, 209, 214, 216, 220, 221, 227, 234, 237, 238, 239, 240, 256, 258, 269, 271, 273, 275, 277, 281, 282, 288, 295, 298, 299, 300, 304, 306, 310, 311, 317, 327, 328, 331, 332, 333, 337, 339, 343, 344, 350, 360, 361, 364, 365, 366, 375, 376, 381, 384, 385, 417, 432, 437, 470, 485, 493, 496, 497, 498, 499, 500, 501, 514, 527, 528, 529, 530, 562, 563, 564, 567, 581, 582, 587, 589, 593, 608, 609, 615, 616, 623, 641, 649, 684, 690, 693], "ngates_vari": [6, 376], "recommend": [6, 29, 45, 74, 167, 169, 361, 376, 385, 428, 444, 445, 456, 462, 485, 514, 580, 623, 625, 646, 667, 682, 692, 693, 694, 695, 696], "noxp": [7, 622], "iphex": [7, 622], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 138, 188, 328, 361, 370, 381, 383, 425, 426, 457, 581, 585, 588, 594, 612, 615, 616, 622, 629, 631, 635, 640, 645, 647, 667, 668, 671, 672, 673, 674, 682, 684], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 130, 131, 133, 134, 135, 136, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 156, 167, 172, 180, 181, 183, 184, 185, 186, 189, 191, 192, 196, 198, 199, 200, 201, 203, 204, 206, 209, 210, 227, 232, 233, 252, 253, 255, 256, 257, 258, 268, 270, 271, 272, 273, 288, 293, 294, 317, 322, 323, 324, 325, 350, 355, 356, 357, 358, 400, 411, 417, 425, 426, 427, 428, 439, 461, 465, 473, 475, 485, 491, 492, 493, 494, 497, 498, 499, 500, 501, 514, 527, 528, 529, 530, 559, 581, 590, 593, 594, 596, 597, 604, 612, 616, 620, 667, 668, 670, 682, 695], "dataset1": 8, "dataset2": 8, "pattern": [9, 565, 659, 667], "project": [9, 16, 31, 34, 45, 74, 122, 123, 124, 125, 126, 232, 243, 254, 259, 266, 293, 303, 322, 328, 355, 361, 370, 379, 388, 389, 428, 435, 438, 439, 441, 443, 473, 476, 485, 514, 612, 614, 616, 618, 619, 620, 622, 635, 636, 639, 640, 648, 650, 656, 663, 668, 670, 671, 678, 682, 685, 686, 688, 689, 692], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 126, 213, 222, 227, 229, 232, 234, 237, 238, 239, 240, 242, 252, 254, 256, 258, 269, 271, 273, 274, 283, 288, 290, 293, 295, 298, 299, 300, 302, 303, 312, 317, 319, 322, 325, 327, 331, 332, 333, 335, 336, 345, 350, 352, 355, 358, 360, 364, 365, 366, 368, 417, 421, 422, 423, 424, 425, 427, 428, 432, 445, 447, 449, 456, 458, 459, 460, 461, 462, 463, 464, 468, 473, 479, 481, 497, 505, 533, 561, 565, 580, 612, 615, 616, 619, 621, 622, 626, 639, 648, 650, 659, 660, 667, 670, 671, 673, 688, 689, 690], "radx_dir": 10, "first": [10, 45, 58, 74, 167, 169, 252, 374, 375, 384, 387, 417, 428, 445, 456, 462, 463, 464, 468, 485, 498, 514, 585, 587, 590, 601, 602, 612, 614, 615, 616, 618, 619, 623, 625, 629, 630, 635, 636, 653, 662, 667, 668, 670, 671, 678, 686, 688, 689, 690, 693], "convert": [10, 13, 39, 430, 445, 456, 481, 598, 609, 612, 614, 616, 622, 670, 671], "cf": [10, 13, 45, 74, 376, 387, 388, 457, 485, 514, 612, 613, 614, 615, 633, 644, 665, 682, 690, 691], "radial": [10, 13, 45, 74, 167, 168, 376, 387, 432, 462, 485, 514, 580, 604, 613, 615, 616, 618, 622, 627, 633, 635, 644, 665, 677, 681, 682, 686, 690, 691], "radxconvert": 10, "path": [10, 15, 162, 163, 169, 483, 560, 613, 614, 616, 618, 619, 622, 623, 635, 636, 682, 692, 693], "radx": [10, 622], "grid": [11, 24, 45, 74, 212, 229, 231, 239, 243, 247, 253, 254, 255, 257, 260, 261, 266, 268, 269, 270, 272, 290, 292, 319, 321, 352, 354, 370, 371, 378, 379, 388, 389, 390, 421, 422, 423, 424, 425, 426, 427, 428, 435, 438, 439, 441, 443, 444, 445, 447, 456, 459, 460, 468, 485, 514, 561, 565, 566, 568, 569, 586, 606, 612, 616, 619, 622, 633, 638, 643, 644, 649, 650, 660, 663, 665, 667, 670, 671, 677, 681, 682, 683, 691, 695], "produc": [11, 170, 378, 387, 389, 393, 466, 471, 616, 618, 623, 671, 682, 693], "radx2grid": 11, "within": [11, 29, 47, 48, 128, 167, 168, 169, 170, 174, 178, 212, 424, 427, 428, 432, 435, 438, 439, 441, 443, 461, 487, 488, 575, 581, 583, 584, 592, 594, 596, 597, 610, 614, 616, 617, 618, 620, 622, 623, 635, 636, 649, 650, 651, 682, 686, 688, 693, 696], "lrose": 11, "must": [11, 161, 162, 163, 167, 328, 375, 378, 379, 384, 389, 390, 444, 459, 462, 463, 464, 604, 616, 623, 670, 682, 692, 693], "been": [11, 12, 133, 135, 143, 150, 155, 166, 167, 183, 185, 193, 200, 205, 260, 336, 376, 378, 381, 382, 383, 385, 591, 613, 618, 623, 635, 670, 682, 688, 692, 693, 695], "write_grid": [11, 378], "ident": [11, 168, 169, 378, 427, 671], "layout": [11, 33, 378, 475, 622], "rainbow": 12, "rainbow5": [12, 622], "5": [12, 31, 158, 161, 163, 167, 170, 171, 172, 173, 210, 227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 388, 444, 445, 450, 456, 461, 473, 565, 590, 598, 612, 613, 614, 615, 616, 618, 619, 620, 621, 623, 628, 630, 631, 645, 646, 647, 651, 653, 654, 655, 658, 659, 660, 661, 662, 663, 667, 668, 670, 671, 672, 673, 674, 678, 684, 686, 689, 690, 693], "22": [12, 612, 614, 618, 622, 635, 646, 668], "3": [12, 45, 74, 119, 120, 167, 168, 208, 209, 211, 239, 379, 383, 389, 424, 425, 426, 428, 432, 444, 445, 456, 461, 485, 514, 561, 565, 581, 612, 613, 614, 615, 618, 621, 623, 628, 629, 630, 631, 633, 636, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 681, 682, 684, 685, 686, 688, 689, 690, 691, 692, 693, 696], "34": [12, 456, 468, 612, 643, 670, 671, 691], "16": [12, 444, 449, 470, 612, 613, 614, 616, 620, 623, 628, 630, 639, 655, 661, 667, 669, 686, 690, 693], "35": [12, 169, 173, 174, 612, 614, 615, 639, 646, 657, 659, 660, 667, 689], "1": [12, 31, 45, 55, 74, 119, 123, 126, 143, 158, 159, 164, 167, 169, 173, 174, 193, 274, 376, 381, 382, 383, 388, 389, 427, 428, 430, 435, 436, 438, 439, 441, 442, 444, 445, 447, 450, 456, 461, 462, 464, 473, 485, 495, 514, 565, 581, 582, 590, 591, 603, 610, 612, 614, 615, 616, 618, 620, 623, 625, 626, 628, 629, 631, 635, 639, 640, 641, 642, 645, 646, 648, 650, 652, 653, 654, 656, 657, 658, 659, 660, 662, 663, 664, 667, 668, 670, 672, 673, 674, 679, 682, 684, 685, 686, 688, 690, 693, 695], "sinc": [12, 433, 462, 612, 614, 615, 616, 640, 670, 671, 685, 688, 690], "evolv": [12, 612], "constantli": 12, "guaranti": 12, "work": [12, 123, 126, 254, 303, 328, 336, 361, 381, 383, 468, 613, 614, 616, 618, 619, 620, 622, 623, 625, 626, 667, 682, 684, 685, 686, 688, 689, 690, 692, 693, 695, 696], "necessari": [12, 612, 619], "user": [12, 29, 48, 162, 163, 170, 361, 389, 444, 461, 488, 581, 608, 612, 615, 616, 618, 620, 622, 623, 673, 682, 684, 685, 686, 688, 689, 690, 692, 693, 695, 696], "adapt": [12, 119, 612, 696], "code": [12, 29, 167, 459, 470, 612, 614, 618, 620, 622, 626, 628, 629, 630, 631, 633, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682, 692, 695, 696], "accord": [12, 166, 385, 428, 436, 449, 450, 451, 453, 454], "its": [12, 462, 600, 614, 615, 618, 619, 622, 623, 625, 626, 682, 692, 693, 696], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 373, 384, 400, 401, 411, 412, 473, 474, 486, 487, 489, 498, 517, 615, 616, 619, 622], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 137, 158, 167, 168, 169, 170, 172, 173, 174, 187, 208, 209, 210, 211, 213, 232, 293, 322, 355, 361, 370, 385, 388, 389, 405, 415, 417, 424, 425, 427, 428, 432, 438, 441, 447, 457, 473, 481, 485, 487, 488, 491, 492, 498, 507, 508, 509, 510, 511, 512, 513, 514, 535, 536, 537, 538, 539, 540, 541, 559, 561, 562, 563, 564, 571, 580, 584, 588, 589, 596, 597, 607, 609, 612, 613, 615, 616, 618, 619, 620, 622, 623, 625, 626, 629, 633, 636, 639, 640, 644, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 661, 662, 663, 664, 665, 667, 668, 670, 671, 673, 678, 679, 680, 682, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694], "issu": [12, 29, 303, 336, 385, 388, 615, 620, 621, 622, 623, 633, 634, 637, 673, 682, 691, 692, 693, 696], "upstream": [12, 613, 623, 625, 693], "reflect": [12, 47, 117, 128, 144, 145, 158, 159, 161, 162, 163, 165, 170, 172, 173, 174, 175, 178, 194, 195, 209, 210, 229, 290, 319, 352, 369, 417, 428, 430, 431, 433, 437, 440, 444, 445, 447, 450, 452, 453, 454, 455, 456, 461, 462, 468, 487, 557, 570, 571, 573, 574, 595, 612, 613, 614, 618, 619, 620, 622, 627, 629, 630, 631, 632, 633, 635, 636, 639, 640, 641, 642, 644, 645, 646, 648, 649, 650, 652, 655, 658, 661, 662, 664, 665, 666, 667, 668, 670, 671, 675, 678, 680, 682, 684, 685, 686, 688, 689, 690, 691], "dbz": [12, 161, 166, 173, 174, 430, 437, 440, 444, 445, 456, 461, 468, 613, 615, 618, 619, 631, 635, 639, 650, 657, 658, 664, 667, 670, 671, 673, 690], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 167, 168, 169, 432, 446, 447, 448, 459, 470, 471, 498, 557, 580, 604, 616, 618, 619, 622, 623, 627, 632, 633, 635, 646, 652, 660, 662, 673, 677, 681, 682, 683, 689, 690, 691, 693], "v": [12, 41, 42, 44, 400, 401, 404, 411, 412, 414, 434, 436, 444, 470, 471, 614, 619, 620, 623, 633, 644, 659, 660, 665, 671, 674, 691, 693], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 591, 690], "width": [12, 253, 268, 328, 361, 370, 428, 614, 615, 616, 618, 622, 690], "w": [12, 62, 169, 444, 461, 502, 612, 672], "wu": [12, 424, 688], "wv": 12, "wvu": 12, "differenti": [12, 17, 161, 162, 163, 173, 174, 209, 447, 451, 454, 461, 462, 463, 464, 466, 469, 622, 652, 667, 682], "zdr": [12, 160, 162, 163, 166, 209, 434, 461, 627, 632, 633, 673, 691], "zdru": 12, "co": [12, 119, 123, 126, 434, 436, 445, 447, 456, 612, 614, 640, 667, 670, 671], "polar": [12, 379, 380, 464, 615, 640], "correl": [12, 172, 209, 210, 459, 461, 595, 618, 631, 651, 652, 669, 670, 671], "coeffici": [12, 161, 162, 163, 173, 174, 430, 444, 461, 595, 612, 622, 651, 652, 669], "rhohv": [12, 166, 172, 209, 210, 434, 436, 461, 622, 631, 651, 673, 690], "rhohvu": 12, "phase": [12, 17, 161, 162, 163, 169, 173, 174, 209, 441, 451, 454, 459, 461, 462, 463, 464, 466, 469, 622, 652, 682, 686], "phidp": [12, 162, 163, 173, 174, 209, 462, 622, 682], "uphidp": 12, "uphidpu": 12, "kdp": [12, 173, 174, 451, 454, 461, 462, 463, 464, 622, 672, 673, 682], "ukdp": 12, "ukdpu": 12, "signal": [12, 166, 172, 210, 431, 591, 615, 620], "qualiti": [12, 158, 159, 164, 166, 172, 210, 451, 463, 464, 612, 618, 620, 635], "sqi": [12, 622], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 162, 163, 211, 461, 612, 672], "temp": [12, 622], "posit": [12, 45, 74, 123, 126, 162, 163, 167, 370, 433, 446, 462, 485, 514, 615, 622, 639, 645, 646, 650, 690], "bin": [12, 45, 74, 119, 120, 121, 163, 384, 435, 438, 439, 441, 443, 447, 448, 485, 514, 590, 591, 612, 622, 639, 667, 686, 690], "respect": [12, 45, 74, 445, 456, 461, 468, 485, 514, 616], "iso0": [12, 162, 208, 461], "cfradial_outfil": 13, "head": [13, 45, 74, 213, 485, 514], "ridgelin": 13, "instrument": [13, 45, 74, 143, 155, 172, 193, 205, 209, 210, 391, 485, 514, 620, 622, 673, 686, 690], "rxm": [13, 622], "25": [13, 425, 426, 444, 612, 614, 618, 622, 635, 639, 649, 659, 660, 663, 668, 671, 673, 675, 684, 689, 691], "rli": 13, "here": [13, 133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 266, 612, 613, 614, 615, 616, 618, 620, 621, 625, 631, 639, 667, 670, 671, 673, 678, 682, 684, 689, 692, 696], "float": [13, 24, 58, 123, 126, 133, 158, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 183, 208, 209, 210, 211, 213, 214, 227, 229, 230, 234, 235, 237, 238, 239, 240, 252, 253, 254, 255, 256, 257, 258, 266, 268, 269, 270, 271, 272, 273, 274, 275, 288, 290, 291, 295, 296, 298, 299, 300, 303, 304, 317, 319, 320, 326, 327, 328, 329, 331, 332, 333, 336, 337, 350, 352, 353, 359, 360, 361, 362, 364, 365, 366, 369, 370, 389, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 498, 561, 565, 576, 577, 578, 579, 580, 581, 583, 584, 590, 591, 592, 593, 594, 595, 596, 597, 598, 605, 606, 616, 620], "offset": [13, 158, 161, 173, 174, 213, 274, 303, 326, 336, 359, 445, 456, 590, 598, 612, 615, 616, 671], "exist": [13, 28, 32, 46, 47, 49, 77, 133, 135, 143, 150, 155, 171, 172, 183, 185, 193, 200, 205, 209, 210, 385, 462, 474, 483, 486, 487, 489, 517, 559, 609, 614, 615, 616, 622, 625, 628, 682, 684], "enter": [13, 613, 616, 623, 693], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 126, 173, 174, 211, 213, 227, 232, 233, 252, 253, 255, 257, 266, 268, 270, 272, 274, 288, 293, 294, 303, 317, 322, 323, 326, 328, 336, 350, 355, 356, 359, 361, 435, 441, 470, 475, 495, 496, 577, 579, 581, 583, 584, 592, 593, 594, 598, 602, 605, 614, 616, 620, 622, 623, 664, 668, 690, 693], "sinarame_h5": [14, 15, 622], "take": [15, 47, 168, 427, 428, 431, 462, 487, 614, 615, 616, 623, 629, 631, 635, 636, 639, 650, 670, 671, 693], "everi": [15, 463, 464, 623, 624, 682, 693], "one": [15, 25, 31, 39, 40, 45, 47, 74, 133, 135, 143, 150, 155, 171, 172, 183, 185, 193, 200, 205, 210, 387, 388, 390, 417, 424, 427, 428, 433, 462, 463, 464, 470, 473, 481, 482, 485, 487, 514, 582, 583, 584, 590, 595, 599, 604, 613, 615, 616, 618, 619, 621, 622, 623, 625, 633, 638, 639, 640, 646, 667, 682, 685, 690, 693, 696], "volum": [15, 45, 74, 167, 169, 170, 328, 361, 381, 382, 383, 391, 417, 425, 426, 435, 438, 439, 441, 442, 443, 457, 461, 485, 514, 583, 584, 586, 606, 609, 612, 615, 616, 618, 620, 622, 633, 640, 644, 665, 691], "folder": [15, 612, 620, 623, 693], "cfradial": [15, 376, 613, 622, 633, 644, 646, 662, 664, 665, 680, 684, 691], "each": [15, 31, 39, 41, 45, 55, 74, 138, 159, 160, 161, 162, 163, 164, 168, 169, 170, 188, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 385, 389, 391, 417, 424, 427, 428, 442, 447, 461, 470, 473, 481, 485, 495, 514, 562, 563, 564, 612, 615, 616, 619, 620, 622, 623, 635, 641, 649, 659, 662, 667, 670, 671, 689, 690, 693, 695], "act": [16, 450, 453, 454, 612, 622, 667, 670, 684], "commun": [16, 612, 620, 623, 682, 693, 696], "softwar": [16, 239, 382, 389, 616, 618, 623, 682, 684, 685, 686, 688, 689, 690, 692, 693], "namespac": [16, 622], "current": [16, 27, 33, 133, 135, 143, 150, 155, 167, 183, 185, 193, 200, 205, 215, 217, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 251, 252, 253, 254, 256, 258, 266, 267, 268, 269, 271, 273, 276, 278, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 338, 340, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 368, 380, 418, 420, 435, 438, 439, 441, 442, 443, 462, 475, 590, 612, 613, 615, 616, 618, 620, 623, 693], "extens": [16, 215, 247, 261, 276, 305, 338, 389, 615, 625, 692], "wradlib": [16, 622, 682], "http": [16, 158, 159, 164, 381, 382, 383, 430, 433, 434, 436, 445, 446, 447, 450, 451, 452, 456, 459, 461, 581, 595, 612, 614, 616, 618, 620, 623, 651, 660, 667, 670, 671, 682, 692, 693, 695, 696], "org": [16, 158, 159, 164, 430, 433, 434, 436, 445, 446, 447, 450, 451, 452, 456, 459, 461, 581, 595, 620, 622, 623, 651, 667, 670, 671, 682, 693], "phidp_field": [17, 161, 162, 163, 173, 174, 462, 463, 464, 469, 628, 672], "phidp_texture_field": [17, 469], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 124, 128, 144, 145, 158, 159, 160, 161, 162, 163, 164, 172, 173, 174, 178, 194, 195, 208, 209, 210, 211, 213, 274, 303, 336, 370, 427, 428, 431, 432, 444, 445, 456, 459, 466, 467, 469, 470, 471, 473, 475, 485, 496, 497, 514, 580, 581, 590, 591, 592, 593, 594, 605, 612, 622, 623, 627, 628, 632, 633, 639, 640, 659, 660, 666, 670, 675, 678, 682, 686, 689, 691, 693], "textur": [17, 209, 432, 469, 580, 608, 622, 678, 682, 686], "real": [17, 167, 469, 633, 644, 670, 671, 696], "part": [17, 158, 159, 164, 447, 449, 469, 590, 615, 616, 618, 622, 635, 667, 682, 684, 685, 686, 688, 689, 690], "complex": [17, 469], "shift": [17, 173, 174, 213, 274, 303, 336, 460, 463, 469, 590, 622, 686], "texture_field": [17, 469], "refer": [17, 31, 45, 47, 74, 119, 123, 126, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 173, 174, 381, 382, 383, 424, 430, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 455, 456, 461, 462, 463, 464, 466, 468, 469, 470, 471, 473, 485, 487, 514, 581, 591, 595, 613, 618, 622, 623, 667, 682, 690, 693], "gourlei": [17, 166, 469], "j": [17, 123, 126, 158, 159, 164, 169, 173, 174, 433, 434, 436, 444, 445, 450, 456, 461, 463, 464, 466, 468, 469, 470, 471, 581, 613, 616, 620, 623, 628, 630, 641, 642, 652, 653, 655, 657, 661, 664, 670, 671, 682, 693], "p": [17, 20, 22, 28, 119, 123, 126, 158, 159, 164, 424, 438, 439, 441, 444, 449, 466, 469, 559, 581, 591, 615, 623, 682, 693], "tabari": [17, 469], "parent": [17, 469], "du": [17, 469], "chatelet": [17, 469], "fuzzi": [17, 469], "logic": [17, 133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 469], "algorithm": [17, 128, 167, 168, 169, 178, 424, 428, 444, 445, 456, 461, 462, 468, 469, 612, 622, 623, 627, 632, 633, 678, 682, 691, 693, 695], "separ": [17, 425, 426, 444, 459, 468, 469, 591, 595, 635, 640, 651, 671, 696], "precipit": [17, 428, 430, 439, 441, 444, 451, 455, 461, 469, 595, 612, 614, 616, 622, 623, 639, 651, 670, 671, 673, 682, 693], "nonprecipit": [17, 469], "echo": [17, 444, 445, 456, 461, 469, 622, 667, 670, 671, 689], "polarimetr": [17, 161, 162, 163, 166, 173, 174, 435, 436, 438, 439, 441, 450, 451, 461, 466, 469, 581, 622, 628], "observ": [17, 119, 439, 441, 445, 456, 462, 469, 667, 670, 671], "journal": [17, 167, 169, 424, 449, 451, 469, 591, 623, 682, 693], "atmospher": [17, 45, 74, 119, 120, 167, 168, 428, 449, 465, 469, 485, 514, 612, 615, 616, 618, 620, 623, 635, 682, 684, 685, 686, 688, 689, 690, 693], "ocean": [17, 158, 159, 164, 167, 173, 174, 434, 436, 445, 449, 455, 456, 466, 469, 581, 612, 616, 620, 635, 670, 671], "technologi": [17, 167, 449, 469], "24": [17, 469, 612, 614, 622, 636], "8": [17, 62, 161, 167, 173, 209, 252, 254, 256, 258, 269, 271, 273, 444, 461, 469, 502, 612, 614, 615, 616, 618, 619, 625, 631, 636, 639, 648, 649, 659, 663, 667, 668, 671, 675, 678, 684, 685, 686, 688, 689, 690], "1439": [17, 469], "1451": [17, 469], "filetyp": [19, 25, 616], "need": [19, 45, 54, 56, 57, 74, 389, 445, 456, 485, 494, 496, 497, 514, 592, 605, 614, 615, 616, 619, 620, 621, 622, 623, 625, 635, 639, 646, 670, 671, 682, 684, 685, 686, 688, 689, 690, 692, 693, 696], "being": [19, 21, 167, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 428, 433, 464, 596, 597, 614, 616, 618, 619, 622, 660, 692], "keep": [19, 167, 385, 606, 616, 623, 639, 670, 671, 693, 696], "string": [19, 31, 45, 74, 158, 159, 160, 175, 229, 232, 233, 237, 240, 253, 268, 290, 293, 294, 298, 300, 319, 322, 323, 324, 325, 326, 329, 331, 333, 352, 355, 356, 357, 358, 359, 362, 364, 366, 370, 427, 428, 457, 459, 463, 464, 466, 470, 471, 473, 485, 514, 614, 615, 616, 622, 623, 646, 693], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 128, 167, 168, 178, 213, 274, 303, 336, 393, 477, 478, 479, 503, 504, 505, 506, 531, 532, 533, 534, 616, 620, 622, 650, 673], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 133, 143, 144, 145, 155, 174, 183, 193, 194, 195, 205, 370, 385, 446, 462, 463, 464, 466, 470, 471, 473, 485, 509, 512, 513, 514, 537, 540, 541, 593, 612, 614, 616, 622, 635, 645, 656], "dic": [22, 31, 45, 46, 74, 393, 473, 485, 486, 514], "colormap": [23, 212, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 370, 389, 615, 616, 622, 633, 644, 651, 665, 671, 672, 691, 695], "select": [24, 50, 59, 88, 169, 435, 438, 439, 441, 443, 490, 499, 528, 612, 615, 618, 622, 625, 673], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 123, 126, 128, 155, 158, 161, 162, 164, 165, 167, 168, 170, 171, 172, 173, 174, 178, 205, 208, 209, 210, 211, 213, 226, 227, 234, 237, 238, 239, 240, 241, 254, 269, 274, 287, 288, 295, 298, 299, 300, 301, 303, 316, 317, 326, 327, 328, 331, 332, 333, 334, 336, 349, 350, 359, 360, 361, 364, 365, 366, 367, 385, 389, 417, 425, 426, 427, 428, 431, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 445, 446, 447, 450, 452, 453, 454, 456, 460, 461, 462, 463, 466, 468, 470, 471, 475, 485, 490, 491, 492, 494, 495, 496, 497, 498, 514, 565, 582, 590, 598, 612, 613, 614, 615, 616, 618, 619, 620, 623, 625, 626, 628, 629, 630, 631, 632, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694], "limit": [24, 167, 168, 172, 173, 174, 208, 209, 210, 211, 229, 242, 266, 290, 302, 319, 335, 352, 368, 370, 379, 390, 425, 426, 462, 606, 615, 616, 619, 622, 640, 641, 642, 648, 649, 667, 688], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 143, 155, 167, 168, 169, 171, 172, 193, 205, 209, 210, 215, 217, 226, 227, 229, 234, 238, 239, 240, 276, 278, 287, 288, 290, 295, 299, 300, 305, 307, 316, 317, 319, 327, 328, 332, 333, 338, 340, 349, 350, 352, 360, 361, 365, 366, 381, 382, 383, 385, 417, 425, 426, 432, 438, 441, 446, 470, 485, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 507, 508, 509, 510, 511, 512, 513, 514, 527, 528, 529, 530, 535, 536, 537, 538, 539, 540, 541, 562, 563, 583, 584, 590, 612, 613, 615, 616, 618, 619, 620, 622, 630, 633, 635, 638, 639, 643, 659, 660, 662, 667, 668, 670, 671, 673, 674, 678, 686, 689, 690, 691], "get": [24, 159, 175, 244, 245, 246, 265, 376, 393, 403, 413, 417, 612, 613, 615, 616, 618, 619, 622, 636, 659, 660, 667, 670, 671, 673, 684, 686, 689, 690, 692, 694, 696], "relat": [24, 163, 212, 390, 430, 445, 450, 453, 454, 455, 456, 463, 468, 581, 615, 622, 623, 670, 671, 682, 692, 693], "instac": 24, "nyquist": [24, 58, 167, 168, 169, 432, 446, 498, 580, 622, 673, 678, 686, 690], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 143, 155, 158, 163, 164, 167, 168, 170, 171, 173, 174, 193, 205, 209, 215, 216, 217, 226, 230, 234, 235, 237, 238, 239, 247, 248, 249, 250, 252, 254, 261, 262, 263, 264, 266, 269, 276, 277, 278, 287, 291, 295, 296, 298, 299, 305, 306, 307, 316, 320, 327, 328, 329, 331, 332, 338, 339, 340, 349, 353, 360, 361, 362, 364, 365, 370, 389, 425, 426, 428, 432, 435, 437, 438, 439, 441, 445, 446, 456, 462, 464, 470, 473, 475, 485, 491, 492, 494, 495, 496, 497, 498, 514, 562, 563, 564, 565, 580, 581, 582, 591, 593, 608, 614, 616, 622, 623, 693], "consid": [24, 161, 170, 171, 369, 425, 426, 444, 445, 456, 582, 583, 584, 590, 591, 598, 640, 670], "vmin": [24, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 259, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 370, 389, 612, 613, 614, 615, 616, 618, 619, 620, 622, 628, 630, 635, 636, 639, 642, 645, 646, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 673, 678, 679, 680, 685, 686, 688, 689, 695], "vmax": [24, 227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 259, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 370, 389, 612, 613, 614, 615, 616, 618, 619, 620, 622, 628, 630, 635, 636, 639, 642, 645, 646, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 673, 678, 679, 680, 685, 686, 688, 689, 695], "2": [24, 119, 123, 169, 170, 171, 209, 227, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 252, 253, 254, 256, 258, 268, 269, 271, 273, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 317, 319, 322, 323, 327, 330, 331, 332, 333, 335, 350, 352, 355, 356, 360, 361, 363, 364, 365, 366, 368, 381, 382, 383, 385, 401, 412, 417, 424, 425, 426, 428, 432, 434, 436, 439, 444, 445, 447, 456, 461, 462, 470, 561, 565, 580, 595, 612, 614, 615, 616, 618, 620, 623, 626, 629, 631, 637, 639, 640, 645, 646, 647, 648, 650, 655, 656, 659, 660, 663, 667, 668, 670, 673, 674, 678, 682, 684, 685, 686, 688, 689, 690, 693, 694], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 393, 428, 473, 487, 488, 490, 491, 492, 494, 609, 615, 621, 622, 629, 671, 685], "field_map": 25, "anoth": [25, 417, 435, 438, 439, 441, 443, 595, 615, 616, 622, 639, 684, 689, 692, 696], "fill": [27, 161, 162, 163, 468, 616, 620, 622, 671, 684, 685], "empti": [28, 401, 412, 463, 464, 559, 561, 564, 613, 622, 684], "control": [29, 158, 159, 164, 167, 385, 387, 388, 428, 461, 462, 618, 619, 620, 667, 688], "singl": [29, 168, 169, 170, 171, 232, 233, 235, 237, 293, 294, 296, 298, 322, 323, 329, 331, 355, 356, 362, 364, 389, 428, 567, 590, 609, 612, 615, 616, 618, 622, 623, 633, 635, 638, 639, 643, 668, 691, 693], "self": [29, 173, 174, 615, 616, 623, 685, 688, 693], "descrip": 29, "exampl": [29, 47, 128, 178, 227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 393, 417, 421, 422, 423, 427, 428, 470, 483, 487, 590, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 628, 629, 630, 631, 632, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 668, 669, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 684, 686, 689, 690, 691, 693, 695, 696], "default_config": 29, "modifi": [29, 45, 74, 170, 485, 514, 613, 622, 623, 633, 644, 665, 691, 693], "environment": [29, 612, 613, 682, 692], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 160, 213, 243, 260, 274, 303, 336, 387, 388, 417, 425, 450, 457, 461, 462, 465, 466, 473, 481, 482, 485, 495, 514, 591, 612, 614, 615, 619, 622, 635, 639, 667, 668, 670, 671, 673, 682, 684, 685, 690, 692], "pyart_config": 29, "point": [29, 31, 33, 47, 124, 161, 162, 163, 164, 174, 230, 235, 252, 253, 268, 291, 296, 303, 320, 325, 326, 329, 353, 358, 359, 362, 379, 380, 383, 385, 389, 424, 427, 428, 435, 438, 439, 441, 443, 445, 447, 456, 468, 473, 475, 487, 561, 582, 591, 594, 598, 609, 612, 614, 616, 618, 622, 625, 631, 633, 648, 656, 666, 667, 670, 675, 678, 682, 686, 688, 690, 691], "new": [29, 47, 48, 50, 133, 135, 143, 150, 155, 170, 183, 185, 193, 200, 205, 435, 438, 439, 441, 442, 443, 448, 460, 466, 470, 487, 488, 490, 595, 606, 618, 619, 622, 623, 625, 626, 629, 639, 649, 668, 671, 672, 678, 682, 685, 686, 693, 696], "execut": [29, 622, 632, 637, 643, 665, 675, 676, 681, 691], "full": [29, 62, 170, 171, 385, 502, 618, 620, 622, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680], "permiss": 29, "secur": 29, "do": [29, 45, 74, 167, 172, 209, 210, 389, 390, 485, 514, 616, 618, 619, 620, 622, 623, 636, 670, 671, 684, 685, 686, 688, 689, 692, 693, 696], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 128, 133, 135, 143, 150, 155, 161, 163, 173, 174, 178, 183, 185, 193, 200, 205, 239, 252, 390, 391, 393, 404, 406, 414, 425, 426, 427, 444, 457, 462, 463, 464, 470, 473, 487, 494, 496, 497, 590, 591, 610, 615, 616, 622, 623, 625, 628, 654, 667, 678, 679, 680, 682, 689, 693, 695], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 144, 145, 167, 194, 195, 384, 393, 473, 483, 485, 487, 491, 492, 494, 496, 514, 575, 612, 614, 616, 619, 622, 623, 624, 625, 626, 667, 670, 671, 673, 685, 688, 690, 692, 693, 695], "home": [29, 618, 620, 623, 693, 696], "make": [29, 31, 473, 561, 565, 566, 568, 569, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 626, 639, 650, 659, 667, 670, 678, 682, 684, 685, 692, 693, 696], "adjust": [29, 123, 242, 302, 335, 368, 444, 616, 622, 646, 651, 659, 671], "login": [29, 620], "": [29, 31, 45, 58, 62, 74, 119, 120, 123, 126, 168, 169, 173, 174, 215, 217, 227, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 276, 278, 288, 295, 299, 300, 305, 307, 317, 327, 332, 333, 338, 340, 350, 360, 365, 366, 370, 398, 399, 405, 409, 410, 415, 417, 419, 424, 434, 438, 445, 447, 449, 450, 456, 458, 459, 462, 463, 464, 466, 468, 471, 473, 485, 498, 502, 514, 591, 595, 612, 613, 614, 615, 616, 618, 619, 620, 622, 624, 625, 629, 635, 636, 639, 646, 649, 650, 651, 660, 667, 668, 670, 671, 673, 674, 678, 682, 684, 685, 686, 688, 689, 690, 694, 695], "also": [29, 45, 74, 133, 183, 212, 228, 251, 267, 289, 318, 351, 382, 383, 387, 389, 391, 403, 413, 417, 425, 445, 456, 485, 514, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 635, 639, 667, 670, 671, 682, 684, 688, 690, 692, 693, 694, 696], "shell": 29, "session": 29, "modif": [29, 47, 487, 622], "last": [29, 45, 74, 167, 227, 228, 234, 238, 239, 240, 251, 256, 258, 260, 267, 269, 271, 273, 288, 289, 295, 299, 300, 317, 318, 327, 328, 332, 333, 336, 350, 351, 360, 361, 365, 366, 485, 514, 590, 615, 616, 618, 621, 622, 641, 649, 671, 690], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 138, 161, 162, 163, 168, 169, 174, 188, 252, 493, 501, 509, 513, 527, 530, 537, 541, 612, 614, 615, 616, 618, 619, 620, 622, 623, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682, 693], "interact": [30, 612, 615], "weather": [30, 119, 167, 424, 434, 435, 439, 462, 614, 616, 619, 622, 623, 635, 646, 682, 684, 685, 686, 688, 689, 690, 693], "time": [31, 39, 40, 45, 74, 159, 164, 167, 215, 217, 227, 229, 234, 238, 239, 240, 276, 278, 288, 290, 295, 299, 300, 305, 307, 317, 319, 327, 328, 332, 333, 338, 340, 350, 352, 360, 361, 365, 366, 374, 375, 385, 387, 388, 417, 420, 428, 435, 438, 439, 441, 442, 443, 444, 457, 459, 473, 481, 482, 485, 514, 585, 588, 612, 613, 614, 616, 618, 620, 622, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 684, 690, 696], "origin_latitud": [31, 473], "origin_longitud": [31, 473], "origin_altitud": [31, 473], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 126, 213, 215, 224, 227, 229, 232, 234, 237, 238, 239, 240, 242, 252, 254, 256, 258, 269, 271, 273, 274, 276, 285, 288, 290, 293, 295, 298, 299, 300, 302, 303, 305, 314, 317, 319, 322, 325, 327, 331, 332, 333, 335, 336, 338, 347, 350, 352, 355, 358, 360, 364, 365, 366, 368, 417, 421, 422, 423, 424, 425, 426, 427, 428, 434, 445, 456, 459, 460, 468, 473, 479, 481, 497, 505, 533, 561, 612, 614, 615, 616, 619, 620, 626, 639, 648, 649, 650, 659, 660, 667, 668, 670, 671], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 121, 161, 163, 173, 174, 225, 286, 315, 348, 370, 379, 389, 390, 421, 422, 423, 424, 426, 427, 428, 430, 433, 444, 445, 450, 453, 454, 455, 456, 459, 473, 479, 481, 485, 497, 505, 514, 533, 561, 619, 628, 640, 657, 659, 660, 670, 671, 673, 685], "radar_latitud": [31, 473, 592, 605], "radar_longitud": [31, 473, 592, 605], "radar_altitud": [31, 473], "radar_tim": [31, 473], "radar_nam": [31, 370, 473], "store": [31, 45, 74, 167, 168, 169, 393, 428, 433, 435, 438, 439, 441, 442, 443, 473, 485, 514, 612, 614, 616, 620, 622, 635, 668, 682, 685, 688, 690, 696], "rectilinear": [31, 473], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 126, 379, 416, 417, 424, 427, 428, 473, 475, 481, 485, 514, 633, 638, 643, 648, 649, 682, 683, 691], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 126, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 370, 388, 416, 417, 419, 424, 428, 442, 447, 473, 475, 481, 485, 496, 514, 561, 580, 612, 614, 615, 616, 622, 627, 633, 636, 638, 639, 640, 641, 642, 668, 682, 688, 690], "section": [31, 45, 47, 74, 227, 252, 288, 317, 350, 426, 428, 473, 485, 487, 514, 583, 584, 612, 616, 617, 621, 622, 623, 633, 644, 665, 667, 670, 671, 682, 691, 693], "To": [31, 47, 172, 208, 209, 210, 211, 387, 388, 390, 473, 487, 609, 614, 619, 620, 623, 625, 671, 673, 682, 685, 688, 692, 693, 696], "creat": [31, 42, 45, 47, 50, 74, 167, 168, 169, 170, 172, 208, 209, 210, 211, 212, 213, 226, 240, 243, 260, 274, 287, 300, 303, 316, 328, 333, 336, 349, 361, 366, 370, 382, 387, 388, 389, 390, 391, 427, 428, 435, 438, 439, 441, 442, 443, 446, 466, 471, 473, 483, 485, 487, 490, 514, 603, 604, 606, 612, 616, 618, 622, 623, 628, 629, 630, 633, 636, 639, 641, 642, 644, 645, 646, 649, 650, 664, 665, 666, 670, 671, 675, 680, 682, 683, 685, 688, 691, 693], "legaci": [31, 433, 473], "from_legacy_paramet": [31, 473], "ax": [31, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 251, 252, 253, 254, 256, 258, 266, 267, 268, 269, 271, 273, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361, 363, 364, 365, 366, 367, 368, 421, 422, 423, 445, 456, 460, 468, 473, 612, 613, 614, 615, 616, 618, 619, 620, 622, 628, 630, 631, 635, 639, 640, 641, 642, 645, 646, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 663, 667, 668, 669, 670, 671, 672, 673, 674, 678, 686], "moment": [31, 39, 45, 74, 117, 160, 166, 167, 168, 169, 172, 209, 210, 381, 382, 383, 428, 467, 473, 481, 485, 514, 557, 591, 615, 622, 644, 665, 682, 689, 691], "describ": [31, 45, 74, 172, 208, 209, 210, 211, 253, 268, 456, 473, 485, 514, 618, 670, 671], "geograph": [31, 45, 56, 74, 122, 123, 124, 125, 126, 303, 328, 336, 361, 388, 428, 473, 485, 496, 514, 616, 682], "origin": [31, 39, 167, 168, 169, 213, 274, 303, 336, 385, 387, 388, 393, 395, 424, 428, 456, 473, 481, 583, 584, 612, 613, 614, 616, 622, 623, 629, 639, 640, 641, 642, 667, 669, 670, 671, 693], "distanc": [31, 39, 57, 119, 120, 121, 227, 238, 288, 299, 317, 332, 350, 365, 417, 418, 421, 422, 423, 425, 426, 427, 428, 435, 437, 441, 459, 461, 464, 473, 481, 497, 581, 583, 584, 592, 593, 594, 605, 612, 613, 614, 639, 652, 657, 658, 659], "axi": [31, 39, 45, 74, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 251, 252, 253, 254, 256, 258, 266, 267, 268, 269, 271, 273, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 317, 318, 319, 320, 321, 322, 323, 327, 328, 330, 331, 332, 333, 335, 350, 351, 352, 353, 354, 355, 356, 360, 361, 363, 364, 365, 366, 368, 379, 389, 473, 481, 485, 514, 582, 612, 615, 616, 620, 648, 660, 667, 670, 674, 690], "dimension": [31, 39, 167, 169, 424, 447, 456, 468, 473, 481, 639, 667, 670, 671], "space": [31, 45, 74, 124, 229, 290, 319, 352, 390, 428, 444, 445, 456, 459, 473, 485, 514, 612, 615, 670, 684], "along": [31, 160, 168, 171, 252, 255, 256, 257, 258, 270, 271, 272, 273, 442, 473, 581, 582, 583, 584, 593, 594, 606, 608, 614, 615, 616, 622, 670, 678], "three": [31, 169, 172, 210, 389, 447, 456, 468, 473, 615, 625, 667, 670, 671], "repeat": [31, 473], "throughout": [31, 473, 667], "nz": [31, 473], "nx": [31, 473], "ny": [31, 473], "dimens": [31, 167, 370, 379, 425, 426, 428, 432, 433, 445, 456, 457, 459, 462, 464, 468, 473, 580, 606, 612, 615, 616, 622, 640, 668, 670, 671, 684, 688, 690], "transform": [31, 45, 74, 122, 123, 124, 125, 126, 232, 239, 293, 303, 322, 336, 355, 361, 388, 428, 444, 461, 473, 485, 514, 614, 616, 619, 622, 646, 670, 671], "proj": [31, 45, 74, 122, 124, 125, 266, 336, 473, 485, 514, 622], "pyart_aeqd": [31, 45, 74, 122, 124, 125, 473, 485, 514], "nativ": [31, 45, 74, 122, 124, 125, 373, 428, 433, 473, 485, 514, 622], "azimuth": [31, 45, 51, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 126, 213, 214, 227, 229, 232, 234, 238, 239, 240, 256, 258, 269, 271, 273, 274, 275, 288, 290, 293, 295, 299, 300, 303, 304, 317, 319, 322, 327, 328, 332, 333, 336, 337, 350, 352, 355, 360, 361, 365, 366, 385, 389, 426, 433, 435, 441, 442, 464, 470, 471, 473, 485, 491, 495, 497, 507, 514, 535, 581, 583, 584, 590, 592, 593, 609, 615, 616, 622, 623, 662, 664, 668, 684, 690, 693], "equidist": [31, 45, 74, 122, 123, 124, 125, 126, 232, 293, 322, 355, 361, 389, 428, 473, 485, 514, 616], "pyproj": [31, 45, 74, 122, 124, 125, 473, 485, 514, 622, 692], "projparam": [31, 34, 45, 74, 122, 124, 125, 473, 476, 485, 514], "special": [31, 45, 74, 473, 485, 514, 616], "_include_lon_0_lat_0": [31, 45, 74, 473, 485, 514], "remov": [31, 45, 56, 57, 74, 161, 162, 163, 167, 172, 208, 209, 210, 211, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 394, 400, 401, 407, 411, 412, 445, 447, 456, 473, 485, 496, 497, 514, 614, 616, 619, 620, 622, 623, 628, 641, 649, 650, 659, 667, 670, 686, 689, 693, 695], "interpret": [31, 45, 74, 168, 169, 388, 436, 473, 485, 514, 596, 597, 616, 667], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 122, 123, 124, 126, 213, 232, 233, 252, 253, 254, 255, 257, 258, 266, 268, 270, 272, 273, 274, 293, 294, 303, 322, 323, 324, 326, 328, 336, 355, 356, 357, 359, 361, 370, 428, 435, 441, 443, 473, 475, 478, 481, 485, 496, 514, 581, 592, 593, 594, 605, 612, 614, 615, 616, 619, 620, 633, 634, 637, 648, 656, 663, 668, 670, 671, 684, 685, 690, 691], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 122, 123, 124, 126, 213, 232, 233, 252, 253, 254, 255, 256, 257, 266, 268, 270, 271, 272, 274, 293, 294, 303, 322, 323, 324, 326, 328, 336, 355, 356, 357, 359, 361, 370, 428, 435, 441, 443, 473, 475, 478, 481, 485, 496, 514, 581, 592, 593, 594, 605, 612, 614, 615, 616, 619, 620, 633, 634, 637, 648, 656, 663, 668, 670, 671, 684, 685, 690, 691], "ad": [31, 45, 47, 74, 171, 173, 174, 260, 326, 359, 425, 427, 444, 445, 456, 473, 485, 487, 514, 565, 613, 615, 618, 620, 622, 623, 659, 660, 684, 685, 692, 693], "lon_0": [31, 45, 74, 123, 126, 328, 361, 473, 485, 514, 656], "lat_0": [31, 45, 74, 123, 126, 328, 361, 473, 485, 514, 656], "get_projparam": [31, 473], "evalu": [31, 393, 395, 451, 473, 618, 622], "locat": [31, 33, 45, 55, 56, 57, 74, 213, 227, 228, 229, 232, 233, 234, 235, 236, 238, 239, 240, 251, 252, 254, 256, 258, 266, 267, 269, 271, 273, 274, 288, 289, 290, 293, 294, 295, 296, 297, 299, 300, 303, 317, 318, 319, 322, 323, 325, 327, 328, 329, 330, 332, 333, 336, 350, 351, 352, 355, 356, 358, 360, 361, 362, 363, 365, 366, 381, 382, 384, 390, 417, 424, 427, 428, 473, 475, 485, 495, 496, 497, 514, 561, 575, 581, 592, 593, 594, 612, 613, 614, 616, 618, 622, 623, 654, 656, 668, 678, 679, 680, 682, 688, 692, 693], "up": [31, 45, 74, 133, 135, 143, 150, 155, 162, 163, 183, 185, 193, 200, 205, 425, 426, 430, 433, 439, 447, 450, 453, 454, 465, 473, 485, 514, 580, 613, 614, 618, 620, 621, 622, 625, 631, 647, 667, 670, 686, 690, 694], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 252, 385, 391, 442, 457, 473, 485, 500, 501, 512, 513, 514, 529, 530, 540, 541, 586, 612, 613, 614, 615, 616, 618, 619, 620, 623, 635, 646, 648, 659, 660, 682, 684, 693, 694], "collect": [31, 143, 155, 193, 205, 375, 381, 382, 383, 385, 416, 427, 428, 473, 615, 616, 623, 635, 653, 668, 682, 693, 694, 696], "nradar": [31, 473], "whose": [31, 384, 423, 473, 612], "wa": [31, 56, 57, 143, 168, 169, 193, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 473, 496, 497, 595, 612, 614, 616, 618, 619, 620, 622, 682, 696], "projection_proj": [31, 473], "instanc": [31, 42, 48, 167, 168, 169, 227, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 390, 391, 433, 473, 488, 595, 599, 604, 614, 616, 622], "valueerror": [31, 32, 46, 47, 473, 474, 486, 487, 616], "point_z": [31, 388, 473, 667], "point_x": [31, 388, 473], "point_i": [31, 388, 473], "func": [31, 473, 615, 622], "init_point_x_y_z": [31, 473], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 473, 478, 479, 485, 496, 504, 505, 506, 514, 532, 533, 534, 689], "point_latitud": [31, 388, 473], "point_longitud": [31, 388, 473], "perform": [31, 45, 56, 57, 58, 74, 133, 135, 143, 150, 155, 166, 167, 168, 169, 171, 183, 185, 193, 200, 205, 227, 232, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 293, 295, 298, 299, 300, 317, 322, 327, 328, 331, 332, 333, 336, 350, 355, 360, 361, 364, 365, 366, 381, 384, 389, 425, 426, 435, 438, 439, 441, 456, 462, 473, 485, 496, 497, 498, 514, 609, 615, 616, 627, 628, 630, 633, 641, 642, 648, 649, 682], "invers": [31, 45, 74, 470, 473, 485, 514, 612], "rel": [31, 45, 74, 162, 208, 239, 326, 359, 428, 473, 485, 514, 612, 622, 623, 671, 690, 693], "init_point_longitude_latitud": [31, 473], "point_altitud": [31, 35, 388, 473, 477], "init_point_altitud": [31, 473], "init": [31, 243, 260, 393, 473, 592, 620, 622], "field_dict": [32, 461, 474], "replace_exist": [32, 46, 47, 48, 474, 486, 487, 488, 618, 622, 623, 670, 671, 673, 678, 685, 686, 693], "add": [32, 46, 47, 170, 174, 227, 229, 234, 237, 238, 239, 240, 252, 253, 254, 256, 258, 266, 268, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 370, 435, 438, 439, 441, 443, 461, 474, 486, 487, 613, 614, 615, 619, 622, 623, 639, 646, 648, 650, 659, 660, 662, 668, 670, 671, 672, 673, 678, 686, 692, 693, 695, 696], "replac": [32, 46, 47, 48, 133, 135, 143, 150, 155, 168, 169, 183, 185, 193, 200, 205, 474, 486, 487, 488, 611, 619, 620, 622], "overwrit": [32, 474, 590, 629], "alreadi": [32, 46, 47, 474, 486, 487], "level": [33, 39, 41, 42, 45, 62, 74, 162, 163, 247, 248, 249, 250, 254, 256, 258, 261, 262, 263, 264, 269, 271, 273, 381, 382, 383, 389, 390, 459, 468, 470, 475, 481, 485, 502, 514, 591, 612, 614, 615, 622, 623, 659, 660, 663, 667, 669, 679, 682, 688, 690, 693, 695], "height": [33, 39, 41, 42, 158, 159, 160, 162, 163, 164, 175, 208, 254, 269, 328, 361, 425, 426, 428, 431, 435, 438, 439, 441, 443, 445, 446, 447, 456, 457, 461, 465, 468, 470, 471, 475, 481, 604, 612, 615, 616, 618, 622, 623, 645, 646, 657, 667, 668, 674, 689, 693], "determin": [33, 45, 74, 158, 160, 167, 168, 169, 252, 254, 256, 258, 266, 269, 271, 273, 328, 361, 369, 370, 373, 381, 382, 385, 390, 391, 432, 445, 446, 449, 450, 451, 453, 454, 456, 468, 470, 475, 485, 514, 590, 591, 598, 604, 607, 615, 616, 622, 623, 670, 678, 693], "same": [33, 45, 47, 55, 56, 57, 74, 123, 126, 135, 150, 167, 185, 200, 239, 328, 361, 379, 385, 389, 390, 391, 428, 445, 446, 447, 456, 459, 465, 475, 485, 487, 495, 496, 497, 514, 565, 590, 592, 605, 609, 612, 616, 619, 620, 623, 635, 659, 660, 667, 670, 671, 684, 689, 693, 696], "interpol": [33, 57, 120, 124, 227, 234, 238, 239, 240, 252, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 375, 381, 427, 428, 435, 438, 439, 441, 443, 457, 464, 465, 470, 475, 497, 604, 616, 622, 623, 670, 671, 688, 693], "extrapol": [33, 120, 124, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 475, 616], "boundari": [33, 120, 124, 171, 245, 246, 266, 361, 464, 475, 565, 616, 672], "center": [33, 45, 57, 74, 119, 120, 121, 123, 124, 126, 168, 227, 232, 234, 238, 239, 240, 253, 255, 256, 257, 258, 268, 269, 270, 271, 272, 273, 288, 293, 295, 299, 300, 303, 317, 322, 327, 328, 332, 333, 350, 355, 360, 361, 365, 366, 381, 383, 421, 422, 423, 435, 438, 439, 441, 443, 475, 485, 497, 514, 561, 565, 580, 612, 614, 615, 616, 618, 619, 646, 678, 686, 690], "2d": [33, 55, 56, 57, 120, 379, 389, 461, 464, 475, 495, 496, 497, 580, 612, 616, 629, 633, 638, 639, 643, 667, 690, 691], "point_": [36, 37, 478, 479], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 144, 145, 194, 195, 418, 420, 470, 480, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 612, 616, 623, 693], "xarrai": [39, 243, 252, 254, 370, 425, 426, 481, 581, 594, 612, 622, 663, 668, 678, 682, 692], "netcdf4": [40, 382, 387, 388, 482, 612, 613, 622, 657, 682, 684, 692, 696], "arm_time_vari": [40, 387, 388, 482], "arm_alt_lat_lon_vari": [40, 388, 482], "save": [40, 215, 227, 229, 234, 238, 239, 240, 247, 261, 276, 288, 290, 295, 299, 300, 305, 317, 319, 327, 328, 332, 333, 338, 350, 352, 360, 361, 365, 366, 370, 388, 390, 482, 616, 618, 619, 682, 683], "netcdf4_class": [40, 387, 388, 482], "netcdf3_class": [40, 387, 388, 482], "netcdf3_64bit": [40, 387, 388, 482], "base_tim": [40, 387, 388, 482, 615, 668], "time_offset": [40, 387, 388, 482, 615, 668], "alt": [40, 56, 388, 482, 496, 615, 616, 620, 622], "lat": [40, 56, 122, 123, 124, 125, 126, 252, 253, 254, 255, 256, 257, 258, 268, 270, 271, 272, 273, 324, 326, 328, 357, 359, 388, 389, 435, 441, 443, 482, 496, 612, 615, 616, 619, 620, 622, 648, 650, 663, 688], "lon": [40, 56, 122, 123, 124, 125, 126, 252, 253, 254, 255, 256, 257, 258, 268, 270, 271, 272, 273, 324, 326, 328, 357, 359, 388, 389, 435, 441, 443, 482, 496, 612, 615, 616, 619, 620, 622, 650, 663], "speed": [41, 42, 428, 470, 471, 580, 615, 616, 618, 622, 623, 674, 693], "direct": [41, 62, 385, 462, 470, 471, 502, 622, 623, 674, 693], "horizont": [41, 42, 43, 44, 45, 74, 161, 165, 166, 167, 227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 299, 300, 317, 318, 319, 327, 328, 332, 333, 350, 351, 352, 360, 361, 365, 366, 374, 375, 425, 426, 446, 470, 485, 514, 604, 614, 615, 618, 622, 623, 650, 660, 679, 690, 693, 695], "wind": [41, 42, 43, 44, 167, 168, 374, 375, 470, 471, 604, 614, 615, 616, 618, 622, 623, 674, 693], "profil": [41, 160, 167, 374, 375, 435, 438, 439, 441, 443, 457, 463, 464, 465, 466, 581, 604, 622, 623, 630, 633, 666, 667, 675, 691, 693], "1d": [41, 42, 120, 124, 461, 582, 612, 622, 690], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 126, 160, 213, 274, 303, 325, 328, 336, 358, 361, 417, 418, 420, 421, 422, 423, 424, 427, 428, 431, 445, 446, 456, 459, 462, 465, 468, 470, 496, 497, 498, 561, 592, 605, 615, 616, 622, 623, 639, 645, 674, 688, 690, 693], "abov": [41, 42, 45, 47, 74, 130, 131, 146, 161, 162, 163, 167, 170, 171, 172, 173, 174, 180, 181, 196, 208, 209, 210, 211, 232, 233, 293, 294, 322, 323, 355, 356, 369, 428, 431, 444, 445, 456, 470, 485, 487, 514, 581, 590, 591, 593, 594, 612, 613, 614, 615, 622, 623, 625, 633, 639, 658, 660, 666, 667, 674, 675, 678, 682, 684, 686, 691, 693, 696], "sea": [41, 42, 45, 74, 470, 485, 514, 615, 622, 623, 693], "were": [41, 42, 133, 135, 143, 183, 185, 193, 470, 614, 616, 618, 619, 623, 693, 695], "sampl": [41, 42, 159, 164, 470, 471, 472, 566, 568, 569, 591, 612, 614, 615, 620, 622, 623, 635, 636, 645, 646, 669, 672, 674, 682, 693, 695], "per": [41, 42, 43, 44, 58, 167, 370, 428, 470, 498, 562, 563, 564, 623, 693], "second": [41, 42, 43, 44, 47, 58, 119, 167, 385, 393, 417, 464, 470, 487, 498, 590, 601, 602, 612, 615, 618, 623, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 689, 690, 693], "north": [41, 45, 74, 252, 254, 266, 328, 361, 485, 514, 581, 594, 612, 615, 616, 652, 690], "east": [41, 227, 238, 252, 288, 299, 317, 332, 350, 365, 581, 594, 612, 615, 616, 652], "u_wind": [41, 42, 470, 471, 623, 674, 693], "compon": [41, 42, 43, 44, 444, 615, 623, 640, 693], "v_wind": [41, 42, 470, 471, 623, 674, 693], "classmethod": 42, "_rang": [45, 74, 437, 485, 514], "scan_typ": [45, 74, 213, 226, 274, 287, 303, 316, 336, 349, 485, 514, 620, 690], "sweep_numb": [45, 74, 485, 514, 615, 622, 657, 684, 690], "sweep_mod": [45, 74, 376, 485, 514, 615, 622, 684, 690], "fixed_angl": [45, 74, 213, 274, 303, 336, 485, 514, 615, 620, 622, 657, 658, 662, 684, 690], "sweep_start_ray_index": [45, 74, 485, 514, 615, 684, 690], "sweep_end_ray_index": [45, 74, 485, 514, 615, 684, 690], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 121, 213, 227, 229, 234, 238, 239, 240, 256, 258, 269, 271, 273, 274, 288, 290, 295, 299, 300, 303, 317, 319, 327, 328, 332, 333, 336, 350, 352, 360, 361, 365, 366, 385, 425, 438, 441, 442, 464, 485, 492, 497, 508, 514, 536, 584, 590, 598, 612, 615, 616, 618, 619, 622, 639, 640, 647, 669, 684, 690], "altitude_agl": [45, 74, 485, 514, 615, 690], "target_scan_r": [45, 74, 485, 514, 622, 690], "rays_are_index": [45, 74, 485, 514], "ray_angle_r": [45, 74, 485, 514], "scan_rat": [45, 74, 391, 485, 514, 622, 690], "antenna_transit": [45, 56, 57, 74, 143, 155, 193, 205, 227, 234, 238, 239, 240, 274, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 485, 496, 497, 514, 616, 690], "instrument_paramet": [45, 74, 167, 391, 461, 485, 514, 615, 618, 673, 686, 690], "radar_calibr": [45, 74, 485, 514, 690], "rotat": [45, 74, 213, 485, 514], "tilt": [45, 74, 213, 239, 328, 361, 466, 485, 514, 616, 622, 636, 656, 663], "roll": [45, 74, 213, 385, 485, 514, 603, 608], "drift": [45, 74, 213, 485, 514], "pitch": [45, 74, 213, 485, 514], "georefs_appli": [45, 74, 485, 514], "antenna": [45, 56, 57, 74, 119, 120, 121, 143, 155, 193, 205, 208, 211, 227, 234, 238, 239, 240, 274, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 433, 442, 485, 496, 497, 514, 616, 622, 627, 633, 638, 639, 640, 641, 642, 682, 688, 690], "structur": [45, 74, 391, 444, 456, 468, 485, 514, 620, 635, 670, 671, 689], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 128, 163, 168, 169, 172, 178, 208, 209, 210, 211, 240, 300, 333, 366, 370, 389, 423, 427, 428, 439, 444, 445, 456, 462, 485, 490, 491, 492, 494, 495, 496, 497, 498, 514, 595, 614, 615, 616, 619, 622, 623, 627, 631, 632, 633, 635, 678, 682, 686, 689, 690, 691, 693, 695], "global": [45, 74, 485, 514, 612, 640, 690, 692], "4": [45, 74, 119, 120, 370, 376, 379, 424, 430, 444, 461, 465, 485, 514, 612, 613, 614, 615, 619, 621, 623, 632, 635, 640, 643, 646, 657, 658, 659, 660, 662, 663, 667, 670, 671, 673, 674, 678, 679, 682, 689, 693], "repres": [45, 74, 167, 425, 426, 461, 485, 514, 562, 563, 609, 619, 622, 667, 671], "under": [45, 74, 167, 168, 169, 428, 485, 514, 619, 622, 623, 670, 671, 682, 692, 693], "sub": [45, 74, 485, 514, 612, 622], "convent": [45, 74, 167, 485, 514, 612, 615, 616, 635, 682, 690], "meta_group": [45, 74, 485, 514, 690], "scan": [45, 74, 117, 158, 159, 160, 164, 167, 168, 169, 170, 213, 226, 227, 229, 240, 274, 287, 288, 290, 300, 303, 316, 317, 319, 333, 336, 349, 350, 352, 366, 381, 425, 433, 485, 514, 557, 562, 563, 590, 592, 598, 604, 609, 612, 613, 614, 615, 619, 622, 631, 639, 653, 654, 664, 667], "ppi": [45, 74, 168, 169, 170, 171, 226, 230, 234, 287, 291, 295, 316, 320, 327, 328, 349, 353, 360, 361, 425, 426, 438, 441, 464, 485, 514, 562, 563, 567, 570, 573, 583, 584, 590, 612, 613, 616, 619, 622, 633, 638, 643, 644, 650, 651, 663, 665, 677, 679, 681, 682, 690, 691], "rhi": [45, 74, 226, 227, 238, 287, 288, 299, 316, 317, 332, 349, 350, 365, 426, 438, 441, 464, 485, 514, 563, 571, 574, 583, 584, 590, 613, 622, 633, 644, 665, 667, 682, 690, 691], "sector": [45, 74, 485, 514, 612, 622, 690], "multipl": [45, 74, 444, 485, 514, 613, 614, 622, 623, 633, 638, 644, 659, 665, 689, 691, 693, 696], "mode": [45, 62, 74, 372, 434, 442, 485, 502, 514, 612, 615, 622, 623, 667, 690, 692, 693], "ground": [45, 74, 433, 439, 485, 514, 615, 616, 620, 635], "target": [45, 74, 389, 485, 514, 566, 568, 569, 570, 571, 572, 573, 574, 581, 592, 593, 594, 605, 615, 690], "angl": [45, 51, 52, 74, 119, 120, 121, 213, 227, 239, 274, 288, 303, 317, 336, 350, 438, 441, 442, 464, 466, 485, 491, 492, 514, 576, 577, 578, 579, 581, 583, 584, 590, 592, 593, 601, 602, 609, 612, 615, 622, 640, 662, 664, 674, 684, 690], "thr": [45, 74, 485, 514], "index": [45, 60, 74, 89, 172, 210, 240, 254, 256, 258, 269, 271, 273, 300, 333, 366, 389, 417, 433, 446, 466, 485, 500, 514, 529, 612, 614, 615, 616, 618, 619, 622, 683], "rays_per_sweep": [45, 66, 74, 94, 485, 506, 514, 534, 562, 563], "upon": [45, 74, 172, 208, 209, 210, 211, 485, 514, 614, 618, 622], "prior": [45, 47, 74, 171, 173, 174, 227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 385, 485, 487, 514, 616, 625, 629, 636, 682], "init_rays_per_sweep": [45, 74, 485, 514], "intend": [45, 74, 439, 485, 514, 619], "rate": [45, 74, 430, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 461, 485, 514, 622, 670, 671], "whether": [45, 74, 133, 183, 370, 376, 424, 446, 485, 514, 615, 616, 689], "regular": [45, 74, 390, 435, 438, 439, 441, 443, 485, 514, 616, 620, 646, 667], "angular": [45, 74, 485, 514, 580, 601, 602], "resolut": [45, 74, 227, 229, 230, 234, 235, 238, 239, 240, 266, 288, 290, 291, 295, 296, 299, 300, 317, 319, 320, 327, 328, 329, 332, 333, 350, 352, 353, 360, 361, 362, 365, 366, 381, 428, 435, 438, 439, 441, 443, 444, 445, 456, 462, 468, 485, 514, 565, 614, 615, 616, 620, 636, 653, 656, 678, 679, 686, 688, 689, 695], "express": [45, 74, 485, 514], "360": [45, 74, 170, 171, 329, 362, 485, 514, 590, 622, 674, 684, 690], "represent": [45, 74, 485, 514], "forbidden": [45, 74, 485, 514], "plane": [45, 74, 389, 425, 426, 485, 514, 612, 690], "180": [45, 74, 121, 123, 485, 514, 590, 612, 614, 615, 623, 671, 684, 693], "gate_z": [45, 57, 74, 485, 497, 514], "gate_x": [45, 57, 74, 485, 497, 514], "gate_i": [45, 57, 74, 485, 497, 514], "system": [45, 74, 122, 123, 124, 173, 174, 372, 381, 389, 419, 424, 485, 514, 619, 622, 623, 692, 693], "assum": [45, 74, 119, 120, 167, 170, 459, 462, 464, 465, 485, 514, 590, 614, 618], "earth": [45, 74, 119, 120, 123, 126, 485, 514, 592, 605, 612, 616], "radiu": [45, 74, 119, 120, 123, 126, 421, 422, 423, 424, 427, 428, 445, 456, 468, 485, 514, 592, 605, 670, 688], "model": [45, 74, 119, 120, 168, 382, 388, 444, 485, 514, 615, 672], "init_gate_x_y_z": [45, 74, 485, 514], "gate_latitud": [45, 56, 64, 74, 92, 485, 496, 504, 514, 532, 612], "gate_longitud": [45, 56, 64, 74, 92, 485, 496, 504, 514, 532, 612, 684], "init_gate_longitude_latitud": [45, 74, 485, 514, 684], "gate_altitud": [45, 56, 63, 74, 91, 485, 496, 503, 514, 531, 612], "init_gate_altitud": [45, 74, 485, 514, 684], "actual": [45, 74, 385, 389, 424, 444, 485, 514, 619, 696], "flag": [45, 74, 167, 274, 385, 463, 464, 468, 485, 514, 598, 612, 620, 622, 696], "transit": [45, 56, 57, 74, 143, 155, 172, 193, 205, 209, 210, 227, 234, 238, 239, 240, 274, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 439, 441, 463, 485, 496, 497, 514, 616, 622], "ye": [45, 74, 167, 485, 514], "about": [45, 74, 485, 514, 612, 614, 620, 621, 622], "aircraft": [45, 74, 239, 385, 485, 514, 581], "longitudin": [45, 74, 239, 250, 258, 263, 264, 273, 485, 514], "vertic": [45, 74, 160, 166, 167, 227, 228, 229, 234, 238, 239, 240, 248, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 299, 300, 317, 318, 319, 327, 328, 332, 333, 350, 351, 352, 360, 361, 365, 366, 389, 425, 426, 435, 438, 439, 441, 443, 447, 459, 461, 466, 485, 514, 581, 598, 609, 612, 614, 619, 622, 631, 660, 667, 672, 673, 674, 679, 695], "orthogon": [45, 74, 485, 514], "platform": [45, 74, 485, 514, 612, 625], "right": [45, 74, 485, 514, 614, 617, 618, 619, 620, 622, 646, 648, 667, 682], "wing": [45, 74, 485, 514], "down": [45, 74, 485, 514, 610, 614], "track": [45, 74, 485, 514, 612, 616, 619, 622], "compass": [45, 74, 485, 514], "clockwis": [45, 74, 485, 514], "nose": [45, 74, 485, 514, 622], "had": [45, 74, 390, 485, 514, 620, 622, 635, 696], "georefer": [45, 74, 485, 514], "lead": [45, 74, 485, 514, 616, 639], "centric": [45, 74, 485, 514], "avaiabl": [45, 74, 485, 514], "radar_paramet": [45, 74, 485, 514, 615], "subconvent": [45, 74, 485, 514], "calibr": [45, 74, 449, 485, 514, 615], "ngate": [45, 55, 74, 485, 495, 514, 562, 563, 564, 612, 622, 684, 690], "nrai": [45, 55, 74, 437, 485, 495, 514, 564, 593, 622, 684, 690], "nsweep": [45, 74, 485, 514, 562, 563, 640, 657, 658, 674, 690], "loos": [46, 47, 486, 487, 600], "existing_field_nam": [47, 487], "note": [47, 119, 133, 135, 143, 150, 155, 163, 167, 171, 183, 185, 193, 200, 205, 254, 328, 370, 376, 379, 380, 390, 425, 426, 428, 444, 446, 459, 461, 462, 470, 487, 590, 613, 616, 620, 622, 623, 635, 636, 640, 650, 670, 671, 673, 692, 693], "made": [47, 387, 432, 487, 609, 613, 615, 616, 619, 623, 624, 693], "done": [47, 167, 171, 468, 487, 623, 625, 684, 692, 693, 696], "both": [47, 167, 172, 210, 373, 459, 460, 461, 487, 612, 616, 619, 622, 623, 636, 639, 640, 642, 645, 648, 664, 671, 682, 688, 689, 692, 693], "numpi": [47, 135, 150, 164, 185, 200, 487, 600, 612, 614, 615, 616, 618, 620, 622, 623, 625, 629, 639, 641, 646, 649, 651, 656, 659, 660, 662, 667, 668, 670, 671, 672, 673, 674, 682, 684, 685, 686, 688, 689, 690, 692, 693, 696], "see": [47, 120, 128, 167, 178, 226, 240, 252, 255, 257, 266, 270, 272, 287, 300, 316, 328, 333, 349, 361, 366, 379, 387, 388, 428, 444, 445, 456, 459, 468, 487, 612, 614, 616, 618, 620, 622, 623, 635, 636, 646, 667, 670, 671, 682, 684, 686, 688, 689, 693], "how": [47, 385, 387, 388, 487, 612, 613, 614, 615, 616, 618, 620, 622, 624, 629, 631, 635, 636, 645, 646, 647, 648, 649, 650, 667, 673, 682, 685, 688, 689, 696], "reflectivity_copi": [47, 487], "gatefilt": [48, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 208, 209, 210, 211, 227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 417, 427, 428, 433, 446, 462, 463, 464, 466, 470, 471, 488, 612, 614, 616, 618, 620, 622, 623, 630, 631, 639, 641, 642, 645, 648, 649, 667, 669, 678, 683, 686, 693], "updat": [48, 158, 488, 590, 613, 617, 618, 622, 623, 650, 670, 682, 693], "mask": [48, 133, 135, 139, 143, 150, 154, 155, 158, 167, 168, 169, 170, 172, 183, 185, 189, 193, 200, 204, 205, 208, 209, 210, 211, 227, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 381, 382, 383, 389, 428, 433, 435, 438, 439, 441, 443, 446, 447, 465, 488, 565, 595, 600, 616, 620, 622, 627, 632, 633, 639, 641, 649, 667, 670, 671, 673, 678, 683, 684, 685, 690, 691], "filter": [48, 128, 133, 135, 143, 150, 155, 160, 167, 168, 169, 170, 171, 172, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 417, 427, 428, 432, 446, 462, 463, 464, 488, 612, 614, 616, 618, 620, 622, 629, 630, 631, 639, 641, 642, 645, 648, 649, 667, 669, 678, 686, 689], "equal": [48, 122, 124, 125, 134, 135, 141, 149, 150, 153, 158, 168, 184, 185, 191, 199, 200, 203, 361, 379, 390, 444, 468, 470, 488, 590, 616, 651, 667, 670, 671, 672, 689], "condit": [48, 128, 133, 135, 143, 150, 155, 167, 178, 183, 185, 193, 200, 205, 390, 451, 488, 612, 630, 685, 689], "append": [48, 488, 618, 619, 620, 622, 674], "filtered_": [48, 488], "prefix": [48, 483, 488], "check": [49, 58, 77, 168, 169, 170, 171, 384, 432, 444, 465, 489, 498, 517, 592, 605, 609, 614, 615, 618, 620, 622, 623, 625, 682, 692, 693, 694], "keyerror": [49, 77, 400, 401, 411, 412, 489, 517, 692], "array_lik": [50, 490, 597], "view": [51, 52, 54, 393, 398, 399, 405, 409, 410, 415, 446, 491, 492, 494, 612, 620, 648, 686, 688, 690], "possibl": [51, 52, 54, 385, 491, 492, 494, 591, 616, 618, 620, 622, 626, 646, 667, 670, 671, 686, 688], "underli": [51, 52, 54, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 373, 491, 492, 494, 616, 682], "get_gate_x_y_z": [54, 494, 659, 660], "obtain": [54, 57, 494, 497, 620, 623, 674, 684, 693], "plot": [54, 57, 212, 213, 214, 215, 216, 217, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 435, 438, 439, 441, 443, 466, 471, 494, 497, 612, 613, 622, 627, 628, 630, 631, 632, 635, 636, 639, 640, 641, 642, 645, 665, 666, 667, 668, 670, 671, 673, 675, 677, 678, 681, 682, 684, 685, 686, 688, 689, 691], "correct": [54, 57, 178, 208, 209, 210, 211, 379, 457, 462, 494, 497, 567, 612, 614, 618, 622, 623, 626, 629, 630, 631, 632, 636, 650, 667, 672, 678, 682, 686, 691, 693], "spatial": [54, 57, 167, 494, 497, 612, 688], "context": [54, 57, 494, 497, 614, 649, 668], "request": [54, 124, 381, 427, 428, 460, 494, 616, 622, 623, 624, 625, 682, 693], "area": [55, 227, 229, 234, 238, 239, 240, 241, 288, 290, 295, 299, 300, 301, 317, 319, 327, 328, 332, 333, 334, 350, 352, 360, 361, 365, 366, 367, 444, 464, 468, 495, 595, 612, 614, 616, 618], "squar": [55, 432, 459, 462, 470, 495], "assumpt": [55, 462, 495], "size": [55, 163, 164, 167, 168, 170, 171, 209, 230, 291, 320, 353, 423, 425, 426, 427, 428, 432, 445, 447, 455, 456, 462, 464, 495, 565, 580, 608, 615, 650, 663, 668, 670, 671], "m": [55, 58, 121, 169, 208, 211, 215, 276, 305, 338, 424, 428, 432, 435, 437, 438, 439, 441, 442, 443, 444, 449, 450, 456, 459, 461, 462, 463, 466, 468, 495, 498, 580, 581, 595, 606, 612, 614, 615, 616, 618, 619, 620, 622, 623, 625, 631, 635, 647, 649, 651, 660, 667, 670, 671, 673, 674, 678, 682, 692, 693], "reset_gate_coord": [56, 496], "filter_transit": [56, 57, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 496, 497, 616], "With": [56, 57, 496, 497, 682, 683, 684], "therefor": [56, 57, 462, 496, 497, 612, 631, 686, 690], "more": [56, 57, 62, 168, 171, 389, 424, 427, 428, 433, 444, 445, 456, 468, 496, 497, 502, 583, 584, 612, 613, 614, 615, 616, 617, 620, 622, 623, 629, 639, 646, 659, 660, 667, 682, 686, 690, 693], "effici": [56, 57, 427, 444, 496, 497, 682, 686], "than": [56, 57, 158, 168, 174, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 444, 445, 447, 456, 462, 496, 497, 590, 595, 614, 615, 616, 620, 667, 670, 696], "through": [56, 57, 252, 450, 461, 496, 497, 615, 616, 618, 621, 623, 639, 646, 693], "No": [56, 57, 169, 227, 234, 238, 239, 240, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 389, 428, 496, 497, 616, 619], "get_field": [57, 497, 659, 660], "check_uniform": [58, 498], "lookuperror": [58, 498], "except": [58, 389, 406, 498, 616, 619, 622, 649, 688], "skip": [58, 168, 169, 384, 432, 498, 614, 619, 622, 623, 693], "nyquist_veloc": [58, 168, 169, 391, 498, 615, 618, 673, 686, 690], "slice": [59, 71, 88, 99, 255, 256, 257, 258, 270, 271, 272, 273, 499, 511, 528, 539, 663, 688, 690], "_io": [62, 502], "textiowrapp": [62, 502], "encod": [62, 390, 502, 622], "utf": [62, 502], "compact": [62, 502], "c": [62, 119, 123, 126, 161, 163, 166, 167, 169, 266, 361, 435, 438, 444, 449, 451, 458, 461, 462, 463, 464, 466, 471, 502, 567, 612, 616, 618, 620, 622, 623, 639, 671, 673, 682, 685, 688, 692, 693, 696], "f": [62, 266, 361, 404, 414, 502, 612, 613, 614, 615, 616, 618, 619, 620, 640, 646, 649, 657, 658, 662, 667, 670, 671, 682, 696], "minim": [62, 462, 468, 502], "everyth": [62, 502, 616, 619, 623, 636, 693], "screen": [62, 502], "gate_": [65, 93, 505, 533], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 164, 404, 414, 462, 464, 507, 508, 509, 510, 511, 512, 513, 535, 536, 537, 538, 539, 540, 541, 618, 690], "over": [69, 72, 73, 97, 100, 101, 164, 167, 168, 208, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 444, 445, 456, 509, 512, 513, 537, 540, 541, 591, 612, 616, 618, 619, 622, 639, 670, 671, 674, 682, 685, 690], "npulses_max": [74, 514, 564], "velocity_bin": [74, 514], "simpl": [117, 417, 557, 622, 685, 686], "vpt": [117, 160, 218, 226, 240, 279, 287, 300, 308, 316, 333, 341, 349, 366, 557, 598, 615, 622, 631], "mean": [117, 119, 160, 435, 438, 439, 441, 470, 557, 565, 576, 577, 582, 591, 596, 601, 602, 612, 615, 622, 623, 626, 635, 636, 667, 689, 690, 693], "kilomet": [119, 425, 445, 456], "equat": [119, 462, 591, 612, 622], "28": [119, 612, 614, 616, 622, 670, 671, 674], "b": [119, 369, 430, 444, 445, 456, 463, 471, 612, 613, 614, 615, 620, 622, 623, 671, 682, 693], "doviak": 119, "zrnic": [119, 441], "sqrt": [119, 123, 612, 659, 660, 674], "r": [119, 122, 123, 124, 125, 126, 167, 169, 173, 174, 219, 232, 233, 253, 268, 280, 293, 294, 309, 322, 323, 324, 325, 342, 355, 356, 357, 358, 430, 435, 439, 444, 445, 447, 450, 453, 454, 455, 456, 468, 470, 591, 595, 612, 623, 635, 651, 659, 660, 667, 670, 671, 673, 693], "sin": [119, 123, 126, 612, 614], "theta_": 119, "arcsin": [119, 123, 614], "frac": 119, "theta_a": 119, "arc": [119, 592], "length": [119, 173, 174, 462, 614, 616, 622, 673], "effect": [119, 133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 239, 427, 428, 614, 640, 659, 667], "taken": [119, 173, 174, 227, 288, 317, 350, 567, 583, 584, 591, 596, 597, 652], "6371": [119, 123, 126, 592, 605, 614], "km": [119, 123, 126, 213, 230, 235, 236, 242, 274, 291, 296, 297, 302, 303, 320, 329, 330, 335, 336, 353, 361, 362, 363, 368, 370, 426, 437, 444, 445, 456, 461, 462, 565, 592, 605, 613, 614, 615, 616, 620, 640, 652, 657, 658, 660, 667, 668, 679, 688, 695], "doppler": [119, 167, 168, 169, 470, 591, 615, 623, 627, 632, 633, 652, 662, 667, 682, 690, 691, 693], "edit": [119, 621, 622, 623, 693], "1993": 119, "21": [119, 434, 455, 612, 614, 618], "vector": [120, 124, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 437, 446, 459, 461, 612, 614, 616, 622], "util": [120, 163, 167, 168, 239, 449, 472, 615, 620, 622, 623, 636, 651, 664, 668, 670, 671, 682, 693], "antenna_to_cartesian": [120, 622], "detail": [120, 128, 167, 178, 252, 266, 328, 361, 387, 388, 424, 428, 445, 456, 612, 614, 616, 618, 624, 625, 667, 670, 671, 682, 690, 695], "cartograph": [122, 123, 124, 125, 126, 336], "differ": [122, 124, 125, 167, 369, 417, 425, 426, 444, 445, 450, 456, 462, 613, 614, 615, 616, 620, 622, 623, 633, 635, 639, 667, 670, 671, 677, 688, 692, 693], "pass": [122, 124, 125, 167, 168, 169, 226, 227, 234, 238, 239, 240, 252, 254, 256, 258, 266, 269, 271, 273, 287, 288, 295, 299, 300, 316, 317, 324, 325, 326, 327, 328, 329, 332, 333, 349, 350, 357, 358, 359, 360, 361, 362, 365, 366, 370, 372, 373, 381, 383, 424, 428, 462, 614, 616, 622, 625, 635, 636, 649, 685, 688], "desir": [122, 124, 125, 133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 393, 439, 445, 456, 470, 560, 606, 614, 615, 668, 689], "6370997": [123, 126], "rho": 123, "arctan2": [123, 674], "correspond": [123, 126, 144, 145, 194, 195, 226, 254, 269, 287, 316, 349, 374, 400, 411, 425, 428, 581, 591, 593, 614, 616, 623, 635, 651, 686, 690, 693], "typic": [123, 126, 128, 133, 135, 143, 150, 155, 168, 178, 183, 185, 193, 200, 205, 389, 424, 427, 631, 640, 695, 696], "snyder": [123, 126], "manual": [123, 126, 619, 620, 622, 625, 682], "geolog": [123, 126], "survei": [123, 126], "profession": [123, 126], "paper": [123, 126, 682], "1395": [123, 126, 622], "1987": [123, 126], "pp": [123, 126, 435, 438, 439, 441], "191": [123, 126], "202": [123, 126], "find": [124, 168, 171, 417, 424, 427, 428, 456, 457, 612, 616, 618, 620, 622, 636, 671, 682, 696], "arcco": 126, "exclude_bas": [128, 178], "boolean": [128, 135, 144, 145, 150, 178, 185, 194, 195, 200, 369, 445, 456, 622, 689], "variou": [128, 170, 172, 178, 208, 209, 210, 211, 581, 594, 614, 622, 633, 666, 682], "exclude_below": [128, 178, 612, 614, 618, 620, 631, 639, 669, 678, 689], "suggest": [128, 178, 613, 622], "begin": [128, 167, 168, 169, 173, 174, 178, 215, 217, 234, 238, 276, 278, 295, 299, 305, 307, 327, 332, 338, 340, 360, 365, 379, 380, 383, 385, 622], "import": [128, 178, 466, 470, 471, 483, 613, 619, 620, 622, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 684, 685, 686, 688, 689, 690, 692, 695], "radar_fil": [128, 178, 619, 630, 646, 650], "nc": [128, 178, 612, 613, 615, 620, 622, 628, 631, 639, 640, 642, 646, 647, 648, 649, 650, 654, 656, 657, 658, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 684, 685, 689, 695], "10": [128, 138, 158, 159, 163, 164, 170, 173, 174, 178, 188, 424, 428, 434, 435, 436, 441, 445, 447, 450, 451, 452, 456, 461, 463, 464, 581, 595, 612, 614, 615, 616, 618, 619, 620, 623, 630, 631, 632, 639, 640, 641, 645, 646, 649, 651, 652, 654, 656, 659, 660, 663, 667, 670, 671, 673, 674, 675, 678, 681, 682, 684, 685, 686, 688, 689, 690, 691, 693], "normalized_coherent_pow": [128, 178, 612, 689], "75": [128, 178, 241, 301, 334, 367, 389, 445, 456, 461, 612, 618, 639, 659, 667, 670, 684, 688, 689], "exclude_mask": [130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 641, 649], "op": [130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 615], "inclus": [130, 131, 133, 136, 142, 146, 148, 151, 156, 180, 181, 183, 186, 192, 196, 198, 201, 206, 424, 428, 561, 622, 646], "toa": [131, 181, 427, 428, 431, 465], "below": [133, 148, 167, 170, 172, 173, 174, 183, 198, 208, 209, 210, 211, 227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 427, 428, 444, 445, 450, 453, 454, 456, 462, 590, 591, 612, 613, 614, 615, 616, 619, 646, 667, 670, 684, 686, 689, 694, 695], "compar": [133, 167, 183, 433, 580, 623, 633, 638, 643, 644, 646, 665, 667, 670, 671, 691, 693], "against": [133, 167, 183, 624, 625, 659], "mark": [133, 143, 144, 145, 155, 167, 183, 193, 194, 195, 205, 613, 619], "exclus": [133, 183, 640], "oper": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 385, 424, 428, 434, 451, 455, 456, 464, 468, 612, 615, 616, 623, 670, 671, 692, 693], "merg": [133, 135, 143, 150, 155, 168, 183, 185, 193, 200, 205, 375, 590, 623, 625, 693], "AND": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205], "OR": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 612], "gener": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 214, 215, 216, 217, 218, 227, 229, 234, 237, 238, 239, 240, 247, 248, 249, 250, 252, 254, 256, 258, 261, 262, 263, 264, 269, 271, 273, 275, 276, 277, 278, 279, 288, 290, 295, 298, 299, 300, 304, 305, 306, 307, 308, 317, 319, 327, 328, 331, 332, 333, 337, 338, 339, 340, 341, 350, 352, 360, 361, 364, 365, 366, 370, 388, 391, 406, 417, 427, 428, 457, 462, 614, 616, 617, 620, 622, 625, 628, 629, 630, 631, 633, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682], "meet": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 387, 682], "result": [133, 135, 143, 150, 155, 164, 167, 168, 169, 183, 185, 193, 200, 205, 227, 234, 237, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 372, 388, 393, 425, 426, 428, 433, 466, 471, 582, 603, 614, 615, 616, 623, 631, 636, 640, 667, 671, 672, 682, 688, 693], "previous": [133, 135, 143, 150, 155, 183, 185, 193, 200, 205, 635, 667, 670, 695], "becaus": [133, 135, 143, 183, 185, 193, 462, 670, 696], "invalid": [133, 135, 137, 143, 172, 183, 185, 187, 193, 208, 209, 210, 211, 612, 620], "shape": [135, 150, 185, 200, 379, 465, 600, 612, 615, 616, 618, 620, 622, 623, 670, 684, 688, 689, 690, 693], "v1": [136, 142, 151, 156, 186, 192, 201, 206, 612, 613, 625, 692], "v2": [136, 142, 151, 156, 186, 192, 201, 206, 623, 693], "insid": [136, 151, 186, 201, 685], "interv": [136, 142, 151, 156, 168, 172, 186, 192, 201, 206, 210, 370, 580, 596, 597, 612, 620, 622], "occur": [137, 157, 171, 187, 207, 381, 382, 612, 686, 690], "nan": [137, 157, 167, 172, 187, 207, 210, 464, 612, 615, 622, 629, 668], "inf": [137, 157, 172, 187, 207, 210, 622], "n_gate": [138, 188], "try": [138, 160, 188, 432, 462, 614, 619, 620, 621, 649, 688, 689], "ring": [138, 188, 235, 236, 296, 297, 329, 330, 362, 363, 370, 614, 640, 641, 649, 656], "artifact": [138, 168, 188, 622, 686, 688], "some": [138, 188, 303, 336, 401, 412, 464, 483, 613, 614, 615, 616, 618, 619, 620, 621, 622, 636, 646, 648, 667, 668, 670, 673, 682, 686, 688, 692, 695], "outsid": [142, 156, 172, 192, 206, 210, 234, 237, 239, 240, 252, 254, 256, 258, 269, 271, 273, 295, 298, 300, 327, 328, 331, 333, 360, 361, 364, 366, 439, 444, 616, 622, 623, 667, 693, 695], "trans_valu": [143, 155, 193, 205], "construct": [143, 155, 193, 205, 428, 615], "element": [144, 145, 167, 168, 169, 170, 171, 194, 195, 391, 425, 426, 427, 428, 432, 465, 580, 596, 597, 601, 602, 614, 615, 616], "NOT": [144, 145, 194, 195], "gate_includ": [144, 194, 689], "lost": [144, 145, 194, 195, 464, 609, 612, 688], "again": [144, 145, 194, 195, 616, 625, 636, 650, 671, 673, 692], "gate_exclud": [145, 195, 689], "noise_threshold": 158, "45": [158, 565, 614, 623, 651, 660, 670, 671, 693], "threshold_offset": 158, "counts_threshold": 158, "12": [158, 426, 612, 614, 615, 619, 620, 621, 635, 640, 650, 657, 667, 668, 671, 682, 685, 689, 690], "primari": [158, 462, 615], "cloud": [158, 159, 164, 372, 381, 444, 462, 614, 615, 623, 625, 627, 632, 633, 634, 637, 682, 691, 693, 696], "threshold": [158, 164, 167, 170, 171, 172, 208, 209, 210, 211, 369, 444, 445, 450, 453, 454, 456, 591, 595, 612, 614, 618, 631, 667, 670, 678, 686, 689], "nois": [158, 159, 164, 166, 175, 431, 437, 440, 591, 615, 620, 622, 629, 667, 686], "detect": [158, 456, 616, 622, 633, 654, 666, 670, 675, 686, 691], "greater": [158, 444, 468, 616, 670], "count": [158, 167, 447, 639, 686, 690], "kollia": [158, 159, 164], "jo": [158, 159, 164], "borqu": [158, 159, 164], "tatarev": [158, 159, 164], "lamer": [158, 159, 164], "n": [158, 159, 164, 167, 432, 444, 450, 461, 580, 612, 614, 615, 616, 618, 620, 635, 639, 640, 651, 662, 664, 668, 670, 671, 676, 682, 696], "bharadwaj": [158, 159, 164, 620], "widen": [158, 159, 164, 667], "johnson": [158, 159, 164, 620], "e": [158, 159, 164, 169, 171, 173, 174, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 370, 374, 389, 404, 414, 442, 444, 445, 447, 456, 462, 468, 595, 612, 613, 615, 616, 619, 623, 635, 649, 651, 667, 670, 671, 692, 693], "clothiaux": [158, 159, 164], "2014": [158, 159, 163, 164, 449, 463, 466, 682], "ii": [158, 159, 164, 447, 667, 682, 690], "process": [158, 159, 164, 168, 173, 174, 612, 615, 618, 619, 620, 622, 623, 625, 635, 649, 671, 673, 682, 693], "atmo": [158, 159, 164, 173, 174, 434, 436, 444, 450, 455, 461, 466, 581, 595, 619, 623, 651, 671, 693], "technol": [158, 159, 164, 434, 436, 455, 466, 581], "31": [158, 159, 163, 164, 381, 449, 612, 614, 615, 618, 636, 668], "583": [158, 159, 164, 434, 622], "598": [158, 159, 164, 622], "doi": [158, 159, 164, 434, 436, 445, 447, 450, 451, 452, 456, 461, 463, 464, 581, 595, 612, 615, 616, 618, 620, 623, 651, 667, 670, 671, 682, 684, 685, 686, 688, 689, 690, 693], "1175": [158, 159, 164, 434, 436, 445, 447, 456, 464, 581, 622, 667, 670, 671, 682], "jtech": [158, 159, 164, 438, 441, 581], "d": [158, 159, 163, 164, 169, 215, 276, 305, 338, 393, 394, 396, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 439, 441, 444, 464, 471, 581, 612, 614, 615, 616, 619, 620, 623, 631, 649, 668, 682, 693], "13": [158, 159, 164, 379, 591, 612, 615, 618, 645, 649, 662, 665, 667, 673, 682, 689, 690, 691], "00045": [158, 159, 164], "floor": [159, 164, 175, 431, 629], "height_rang": [160, 631], "zdr_var": [160, 631], "bia": [160, 165, 622, 627, 632, 633, 691], "tupl": [160, 170, 171, 227, 229, 232, 233, 234, 237, 238, 239, 240, 242, 252, 254, 256, 258, 269, 271, 273, 288, 290, 293, 294, 295, 298, 299, 300, 302, 317, 319, 322, 323, 327, 328, 331, 332, 333, 335, 350, 352, 355, 356, 360, 361, 364, 365, 366, 368, 401, 412, 424, 425, 426, 428, 432, 459, 460, 561, 580, 600, 616, 622], "minimum": [160, 161, 172, 173, 174, 209, 210, 211, 227, 229, 234, 237, 238, 239, 240, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 370, 389, 424, 428, 435, 438, 439, 441, 442, 444, 445, 447, 456, 561, 565, 582, 591, 612, 614, 616, 619, 620, 622, 667, 670, 688], "maximum": [160, 167, 168, 172, 173, 174, 208, 209, 210, 227, 229, 234, 237, 238, 239, 240, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 369, 370, 389, 424, 425, 426, 428, 433, 435, 438, 439, 441, 442, 443, 445, 450, 453, 454, 456, 462, 561, 565, 580, 590, 598, 612, 614, 616, 619, 667, 669, 670, 678, 690], "automat": [160, 173, 370, 385, 390, 391, 428, 432, 468, 614, 616, 620, 622, 623, 625, 654, 682, 693], "z_offset": 161, "doc": [161, 162, 163, 174, 612, 616, 622, 623, 625, 682, 692, 693, 696], "15": [161, 462, 595, 612, 613, 614, 615, 620, 628, 630, 646, 651, 657, 658, 659, 660, 663, 664, 667, 668, 671, 673, 674, 686, 690], "fzl": [161, 162, 163, 173, 174], "4000": [161, 173, 174, 688], "rhv_min": 161, "ncp_min": 161, "a_coef": [161, 163], "06": [161, 612, 614, 618, 619, 643, 691], "beta": [161, 163, 449, 450, 451, 452, 453, 454], "refl_field": [161, 162, 163, 172, 173, 174, 209, 210, 428, 431, 440, 444, 445, 450, 452, 453, 454, 455, 461, 468, 628, 670, 672, 673], "ncp_field": [161, 172, 173, 174, 210, 628], "rhv_field": [161, 172, 173, 174, 209, 210, 461, 628, 672, 673], "spec_at_field": [161, 162, 163], "corr_refl_field": [161, 162, 163], "attenu": [161, 162, 163, 449, 450, 453, 622, 627, 632, 633, 672, 682, 691], "phi": [161, 163, 173, 622, 628], "copol_coeff": [161, 567, 628, 668, 669, 684], "norm_coherent_pow": [161, 567, 628, 684], "proc_dp_phase_shift": [161, 628, 668, 684], "reflectivity_horizont": [161, 167, 567, 613, 628, 639, 646, 650, 654, 656, 657, 658, 662, 664, 667, 668, 669, 670, 671, 679, 684, 685, 695], "supress": [161, 243, 254, 260, 328, 361, 616, 622], "freez": [161, 162, 163, 435, 439], "layer": [161, 162, 163, 208, 211, 389, 450, 462, 466, 565], "combin": [161, 162, 163, 599, 612, 614, 615, 623, 625, 693], "normal": [161, 172, 173, 174, 210, 227, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 447, 461, 600, 616, 659, 667], "coher": [161, 172, 173, 174, 210], "power": [161, 163, 172, 173, 174, 210, 370, 439, 449, 450, 451, 452, 453, 454, 612, 615], "zdr_field": [161, 162, 163, 166, 209, 434, 461, 672, 673], "spec_at": [161, 162, 163, 628, 672], "cor_z": [161, 162, 163, 628, 672], "gu": [161, 163], "et": [161, 163, 166, 444, 445, 447, 451, 455, 456, 461, 462, 468, 670, 671], "al": [161, 163, 166, 444, 445, 447, 451, 455, 456, 461, 462, 463, 468, 670, 671], "heavi": [161, 163, 595, 614, 651, 659, 671], "rain": [161, 163, 435, 439, 444, 449, 450, 451, 452, 455, 456, 461, 468, 622, 631, 651, 659, 670, 671, 672, 673], "jamc": [161, 163, 464, 581], "2011": [161, 163, 619, 668], "50": [161, 163, 370, 438, 442, 443, 461, 580, 612, 613, 614, 615, 618, 642, 663, 667, 668, 672, 673, 688, 690], "39": [161, 163, 612, 614, 668], "58": [161, 163, 444, 615, 667, 668], "pia_coef": 162, "pida_coef": 162, "temp_field": [162, 163, 211, 461, 672, 673], "iso0_field": [162, 163, 208, 461], "pia_field": [162, 163], "spec_diff_at_field": [162, 163], "pida_field": [162, 163], "corr_zdr_field": [162, 163], "temp_ref": [162, 163, 461, 672], "linear": [162, 173, 174, 252, 381, 434, 445, 456, 464, 591, 604, 615, 616, 622, 670, 671, 682], "dependec": 162, "comput": [162, 163, 166, 209, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 456, 461, 462, 463, 464, 576, 577, 578, 579, 580, 582, 596, 597, 601, 602, 608, 612, 615, 622, 667, 672, 674, 682], "either": [162, 163, 167, 168, 169, 227, 228, 229, 234, 237, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 298, 299, 300, 317, 318, 319, 327, 331, 332, 333, 350, 351, 352, 360, 364, 365, 366, 375, 404, 414, 435, 438, 439, 441, 450, 453, 454, 461, 623, 667, 670, 692, 693], "frequenc": [162, 163, 391, 447, 449, 450, 451, 453, 454, 458, 461, 462, 463, 464, 615, 633, 666, 667, 675, 691], "refl": [162, 163, 657], "integr": [162, 163, 612, 615], "pida_coeff": 162, "0c": [162, 163], "isotherm": [162, 163], "height_over_iso0": [162, 163, 461, 689], "fixed_fzl": [162, 163], "pia_dict": [162, 163], "spec_diff_at": [162, 163, 672], "pida_dict": [162, 163], "cor_zdr": [162, 163, 672], "smooth_window_len": 163, "forumul": 163, "smooth": [163, 171, 462, 592, 605, 616, 659, 660, 688], "window": [163, 167, 173, 174, 209, 432, 464, 470, 580, 590, 603, 608, 622, 623, 682, 693], "expon": [163, 173, 174, 430, 449, 450, 451, 452, 453, 454], "law": [163, 449, 450, 451, 452, 453, 454], "ryzhkov": [163, 435, 436, 438, 449, 466, 581], "potenti": [163, 449, 612, 620], "rainfal": [163, 444, 449, 450, 451, 452, 453, 454, 455, 462, 464, 619], "estim": [163, 208, 211, 229, 290, 319, 352, 425, 434, 437, 449, 450, 451, 452, 453, 454, 455, 462, 463, 464, 466, 581, 591, 615, 622, 670, 671], "mitig": [163, 449], "partial": [163, 449, 622], "beam": [163, 423, 427, 428, 449, 615], "blockag": [163, 449], "network": [163, 168, 383, 449, 614], "jaot": [163, 166], "599": [163, 449], "619": [163, 449, 622], "n_avg": 164, "nfft": 164, "averag": [164, 168, 369, 435, 438, 439, 441, 445, 456, 582, 591, 596, 618, 631, 670, 671, 674], "scalar": [164, 369, 445, 456, 614, 616, 622, 670], "magnitud": [165, 462, 674, 690], "corrected_field": 165, "urhohv_field": 166, "snr_field": [166, 431, 440], "nh_field": 166, "nv_field": 166, "rhohv_field": [166, 434, 436], "eq": [166, 657], "6": [166, 209, 444, 450, 461, 612, 614, 615, 619, 620, 636, 639, 640, 646, 648, 653, 656, 667, 668, 669, 672, 673, 674, 684, 686, 689, 690], "2006": [166, 636], "subtract": [166, 445, 456], "uncorrect": [166, 612, 678], "snr": [166, 431, 440, 622], "channel": [166, 389, 612, 615, 622, 625], "meteo": 166, "franc": 166, "23": [166, 612, 614, 615, 619, 637, 674], "1340": 166, "1356": [166, 622], "last_radar": 167, "sonde_profil": 167, "filt": 167, "rsl_badval": 167, "131072": 167, "keep_origin": [167, 168, 169], "set_limit": [167, 168, 169, 613, 629, 651, 652, 653, 655, 657, 658, 659, 660, 662, 667, 673], "vel_field": [167, 168, 169, 432, 446, 471, 667, 678, 686], "corr_vel_field": [167, 168, 169], "last_vel_field": 167, "max_shear": 167, "05": [167, 427, 428, 612, 614, 619, 663, 667, 668, 691], "sign": [167, 622, 659, 660, 667], "dealia": [167, 168, 169, 448, 618, 622, 627, 632, 633, 667, 677, 681, 686, 691], "4dd": [167, 622], "univers": [167, 386, 455, 612, 622, 682], "washington": 167, "previou": [167, 328, 361, 616, 620, 622, 625], "sound": [167, 622], "For": [167, 255, 257, 270, 272, 379, 389, 427, 461, 462, 612, 613, 615, 616, 619, 622, 623, 626, 635, 639, 667, 672, 682, 689, 690, 693, 695, 696], "best": [167, 614, 667], "argument": [167, 168, 169, 227, 234, 238, 239, 240, 252, 254, 255, 256, 257, 258, 269, 270, 271, 272, 273, 288, 295, 299, 300, 317, 324, 325, 326, 327, 328, 329, 332, 333, 350, 357, 358, 359, 360, 361, 362, 365, 366, 370, 381, 383, 391, 393, 424, 428, 463, 464, 622, 623, 693], "_fourdd_interfac": 167, "fourdd_dealia": 167, "fine": 167, "tune": [167, 670, 671], "behavior": [167, 328, 361, 379, 393, 616, 622, 626], "fourdd": 167, "document": [167, 255, 257, 266, 270, 272, 328, 361, 382, 387, 388, 604, 610, 613, 615, 616, 617, 620, 623, 624, 682, 688, 693], "dealias": [167, 168, 169, 448, 622, 623, 630, 635, 678, 682, 683, 693, 695], "mean_doppler_veloc": [167, 615, 620, 662, 667, 668, 678, 684], "successfulli": [167, 619], "greatli": 167, "improv": [167, 463, 464, 595, 616, 625, 651, 671], "final": [167, 463, 464, 612, 613, 620, 621, 625, 640, 667, 670], "horizontalwindprofil": [167, 374, 375, 471, 604, 622, 623, 693], "sond": [167, 168, 374, 375, 457, 622, 630], "moment_based_gate_filt": [167, 168, 169, 428, 614], "bergen": 167, "alber": 167, "bad": [167, 462, 463, 464, 468], "rsl": [167, 373, 384, 385, 622, 682, 692, 695], "procedur": [167, 168, 169], "fail": [167, 168, 169, 379, 389, 619, 622, 623, 693], "otherwis": [167, 400, 411, 435, 438, 439, 441, 442, 443, 450, 453, 454, 459, 600, 625], "maxshear": 167, "shear": 167, "incorpor": [167, 456, 670, 673], "match": [167, 170, 171, 175, 213, 274, 303, 336, 385, 417, 620, 622, 639, 650, 671], "toward": 167, "neg": [167, 227, 238, 288, 299, 317, 332, 350, 365, 462, 590, 612, 622, 646], "compthresh": 167, "fraction": [167, 425, 426, 447, 614, 619, 667, 670, 690], "continu": [167, 169, 615, 619, 622, 623, 693], "unfold": [167, 168, 173, 174, 462], "compthresh2": 167, "thresh": [167, 450, 453, 454], "adjac": [167, 616], "assign": [167, 389, 461, 614, 622, 670], "question": [167, 371, 428, 616, 682], "ckval": 167, "absolut": [167, 580, 671], "stdthresh": 167, "deviat": [167, 565, 578, 579, 597, 612, 686], "portion": [167, 618, 688], "epsilon": 167, "miss": [167, 461, 462, 463, 464, 468, 612, 622, 636, 673], "maxcount": 167, "allow": [167, 170, 171, 226, 287, 316, 349, 417, 444, 581, 590, 613, 616, 619, 620, 622, 626, 639, 690, 696], "fold": [167, 168, 635], "pass2": 167, "retain": [167, 168, 169, 172, 208, 209, 210, 211, 609], "rm": 167, "what": [167, 177, 428, 612, 615, 616, 618, 619, 620, 621, 622, 623, 635, 646, 678, 684, 686, 689, 693, 696], "left": [167, 326, 359, 614, 616, 618, 620, 646, 650, 667], "proxim": 167, "side": [167, 620, 667], "doubl": [167, 389, 670], "captur": [167, 444, 678], "suffici": [167, 667], "good": [167, 168, 612, 613, 625], "mingood": 167, "ba_mincount": 167, "neighbor": [167, 381, 428, 612, 622, 640, 688], "ba_edgecount": 167, "usuccess": 167, "radialvelvolum": 167, "lastvelvolum": 167, "unfoldedvolum": 167, "sondvolum": 167, "vr_corr": 167, "due": [167, 433, 444, 612, 614, 616, 619, 622, 639, 686, 692, 696], "call": [167, 170, 226, 227, 229, 234, 238, 239, 240, 254, 287, 288, 290, 295, 299, 300, 316, 317, 319, 327, 328, 332, 333, 349, 350, 352, 360, 361, 365, 366, 384, 389, 393, 581, 594, 613, 615, 616, 619, 623, 625, 686, 690, 693, 696], "999": [167, 393, 612, 622], "long": [167, 451, 622, 671, 685, 690], "jame": 167, "houz": [167, 369, 445, 447, 456, 468, 667, 670, 671], "jr": [167, 445, 456, 468, 670, 671], "four": [167, 381, 382, 384], "dealis": 167, "scheme": [167, 369, 424, 445, 456, 462, 613, 670], "2001": [167, 436], "18": [167, 436, 612, 614, 648, 660, 667], "1674": 167, "ref_vel_field": 168, "interval_split": 168, "interval_limit": 168, "skip_between_rai": 168, "100": [168, 170, 172, 210, 230, 235, 252, 259, 291, 296, 320, 353, 370, 391, 428, 471, 612, 614, 615, 616, 618, 642, 648, 659, 660, 667, 674], "skip_along_rai": 168, "nyquist_vel": [168, 169, 618, 667, 678, 686], "check_nyquist_uniform": [168, 169, 432], "rays_wrap_around": [168, 169], "region": [168, 174, 266, 328, 361, 433, 444, 595, 612, 614, 615, 616, 618, 620, 622, 623, 627, 631, 632, 633, 635, 651, 670, 671, 678, 689, 691, 693, 695], "similar": [168, 615, 616, 639, 688], "pair": [168, 252, 381, 393, 401, 406, 412, 614, 684], "accomplish": [168, 385, 633, 677], "problem": [168, 173, 174, 303, 336, 428, 636], "dynam": [168, 612], "reduct": 168, "anchor": 168, "onc": [168, 616, 619, 623, 625, 670, 692, 693, 696], "complet": [168, 622], "simul": [168, 604, 622], "simulated_vel_from_profil": [168, 623, 693], "segment": [168, 324, 325, 357, 358, 622], "split": [168, 595, 612], "larger": [168, 616, 670], "longer": [168, 590, 614, 622, 623, 682, 692, 693], "better": [168, 230, 235, 291, 296, 320, 329, 353, 362, 619, 620, 622, 671, 682, 686], "seem": 168, "compromis": 168, "free": [168, 617, 618, 682], "cover": [168, 612], "entir": [168, 169, 227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 428, 606, 612, 615, 616, 620, 667], "join": [168, 483, 619, 622], "gap": [168, 170, 171, 688], "connect": [168, 169], "disabl": [168, 169, 172, 208, 209, 210, 211, 619], "across": [168, 370, 614, 622, 667, 669], "so": [168, 227, 238, 288, 299, 317, 332, 350, 365, 385, 428, 612, 615, 616, 618, 619, 620, 622, 623, 629, 635, 636, 667, 670, 682, 693, 696], "individu": [168, 169, 428, 620], "attempt": [168, 169, 387, 388, 622, 673], "de": [168, 169, 359, 573, 574], "alias": [168, 169, 573, 574, 618, 622, 686, 690], "corr_vel": [168, 169], "unwrap_unit": 169, "skip_check": [169, 622], "multi": [169, 622], "unwrap": [169, 173, 174, 622], "independ": 169, "often": [169, 433, 619], "give": [169, 389, 616, 620, 624, 625, 678, 679, 680, 682, 686, 689], "superior": 169, "lower": [169, 252, 254, 256, 258, 269, 271, 273, 444, 615, 619, 620, 640, 641, 642], "contamin": [169, 468], "clutter": [169, 619, 620, 686, 689], "poor": 169, "verif": [169, 581, 622], "appropi": [169, 226, 287, 316, 349], "offer": [169, 613, 695], "extrem": [169, 667], "miguel": 169, "arevallilo": 169, "herraez": 169, "david": [169, 616], "burton": 169, "michael": [169, 616, 620], "lalor": 169, "munther": 169, "gdeisat": 169, "fast": 169, "two": [169, 391, 424, 442, 445, 456, 459, 460, 468, 565, 599, 601, 602, 614, 615, 616, 618, 619, 620, 622, 625, 633, 638, 643, 644, 648, 664, 665, 685, 688, 691], "sort": [169, 614, 618, 619, 621, 622, 649], "reliabl": 169, "follow": [169, 172, 209, 210, 387, 388, 390, 391, 404, 414, 427, 428, 444, 461, 462, 612, 614, 615, 616, 618, 619, 620, 623, 625, 626, 635, 668, 682, 692, 693, 695], "noncontinu": 169, "optic": 169, "vol": [169, 435, 438, 439, 441], "41": [169, 614, 619, 668, 674, 688, 691], "2002": 169, "7437": 169, "abdul": 169, "rahman": 169, "h": [169, 215, 266, 276, 305, 338, 361, 434, 438, 466, 591, 612, 614, 615, 639, 649, 650, 667], "osten": 169, "gorecki": 169, "l": [169, 173, 174, 231, 235, 236, 266, 292, 296, 297, 321, 330, 354, 361, 363, 436, 456, 595, 612, 616, 651, 667, 671], "novak": 169, "ed": 169, "metrologi": 169, "2005": [169, 445, 456, 670, 671], "32": [169, 439, 444, 565, 612, 622, 646, 652, 653, 654, 664, 668, 671, 674, 690], "40": [169, 266, 444, 612, 615, 620, 630, 640, 642, 650, 654, 656, 659, 667, 670, 671, 678], "intern": [169, 616], "societi": [169, 430, 433, 451], "photon": 169, "label_dict": [170, 171], "delta": [170, 171, 463], "despeckl": [170, 622, 667], "identifi": [170, 171, 369, 445, 456, 591, 612, 616, 618, 651, 670, 671, 673, 689], "small": [170, 171, 444, 445, 456, 468, 622, 639, 640, 659], "investig": [170, 171, 466, 635], "scipi": [170, 171, 462, 604, 612, 622, 623, 659, 660, 682, 692, 693, 696], "core": [170, 171, 369, 370, 389, 417, 428, 444, 445, 456, 463, 464, 581, 594, 615, 620, 622, 623, 670, 693], "queri": [170, 171, 428, 612, 616, 620], "speckl": [170, 670], "find_object": 170, "contigu": [170, 171], "perman": 170, "deg": [170, 171, 208, 211, 229, 290, 319, 352, 435, 441, 442, 443, 461, 462, 606, 612, 647, 674], "label": [171, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 237, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 293, 294, 295, 298, 299, 300, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 323, 326, 327, 328, 331, 332, 333, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 355, 356, 359, 360, 361, 364, 365, 366, 609, 612, 614, 616, 618, 619, 620, 622, 639, 648, 650, 659, 660, 664, 672], "period": [171, 590, 612, 615, 620, 686], "account": [171, 622], "g": [171, 370, 389, 424, 441, 456, 462, 464, 471], "examin": [171, 372, 385, 388, 615, 618, 623, 682, 693], "box": [171, 389, 629, 672], "alwai": [171, 373, 385, 444, 445, 456, 462, 616, 622, 626, 682], "readi": 171, "min_ncp": [172, 173, 210], "min_rhv": [172, 173, 209, 210], "min_refl": [172, 210], "20": [172, 209, 210, 466, 581, 612, 613, 614, 615, 616, 618, 620, 635, 636, 639, 640, 648, 650, 651, 654, 656, 657, 658, 659, 660, 662, 665, 667, 669, 670, 671, 673, 675, 679, 680, 684, 688, 690, 691, 695], "max_refl": [172, 210], "undesir": [172, 208, 209, 210, 211, 428], "cross": [172, 209, 210, 227, 230, 252, 288, 291, 317, 320, 350, 353, 426, 583, 584, 612, 615, 618, 622, 631, 633, 644, 656, 665, 667, 670, 690, 691], "ratio": [172, 209, 210, 241, 301, 334, 367, 431, 434, 612, 615, 618, 620, 631, 690], "min_rhi": [172, 210], "criteria": [172, 208, 209, 210, 211, 428, 462, 468, 620], "built": [172, 208, 209, 210, 211, 427, 428, 619], "lowest": [172, 208, 209, 210, 211, 433, 465, 618, 619, 635, 639, 668, 670, 671], "greatest": [172, 210], "self_const": [173, 174], "60000": [173, 174, 642, 648, 688], "low_z": [173, 174], "high_z": [173, 174], "53": [173, 174, 612, 614, 618, 674], "min_phidp": [173, 174], "01": [173, 174, 326, 359, 462, 612, 614, 615, 618, 620, 632, 646, 665, 675, 691], "sys_phas": 173, "overide_sys_phas": 173, "nowrap": [173, 174], "really_verbos": [173, 174], "lp_solver": [173, 174], "pyglpk": [173, 174, 622, 682, 692], "kdp_field": [173, 174, 450, 451, 453, 454, 461, 462, 463, 464, 672, 673], "unf_field": [173, 174], "window_len": [173, 174], "proc": [173, 174, 462, 622], "coef": [173, 174, 622], "914": [173, 174, 622], "lp": [173, 174, 622, 682], "consist": [173, 174, 622, 667, 688, 695], "factor": [173, 174, 391, 433, 449, 450, 451, 452, 453, 454, 580, 612, 613, 615, 619, 622, 650, 658, 664, 688], "low": [173, 174, 381, 462, 619, 640, 651], "high": [173, 174, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 444, 461, 462, 615, 616, 618, 640, 672, 673], "copolar": [173, 174, 461, 669], "lpx": [173, 174], "messag": [173, 174, 243, 260, 381, 613, 619, 622, 625, 636], "suppress": [173, 174, 462], "cvxopt": [173, 174, 622, 682, 692], "cylp": [173, 174, 622, 682, 692, 696], "cylp_mp": [173, 174], "modul": [173, 174, 567, 610, 616, 622, 623, 635, 636, 682, 685, 686, 688, 689, 690, 692, 693, 695], "solv": [173, 174, 621, 622], "horizon": [173, 174, 461], "sobel": [173, 174], "worker": [173, 174], "link": [173, 174, 614, 615, 618, 620, 622], "1z": [173, 174], "reproc_phas": [173, 174], "sob_kdp": [173, 174], "recalcul": [173, 174, 684], "giangrand": [173, 174, 682], "mcgraw": [173, 174], "lei": [173, 174], "applic": [173, 174, 227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 389, 445, 456, 603, 616, 618, 623, 693], "program": [173, 174, 622, 623, 682, 693], "tech": [173, 174, 450, 461, 595, 651, 671], "2013": [173, 174, 463, 466, 690], "30": [173, 174, 438, 439, 444, 445, 456, 612, 614, 615, 616, 619, 620, 631, 639, 640, 649, 650, 654, 656, 667, 670, 671, 686], "1716": [173, 174], "system_phas": 174, "ncpt": 174, "first_gate_sysp": 174, "carri": 174, "smaller": [174, 361, 428, 612, 615, 616, 623, 670, 693], "off": [174, 227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 460, 612, 616, 646, 670, 671], "help": [175, 389, 472, 614, 615, 616, 618, 620, 623, 625, 639, 646, 670, 693, 696], "custom": [176, 226, 227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 287, 288, 289, 290, 295, 299, 300, 316, 317, 318, 319, 327, 328, 332, 333, 349, 350, 351, 352, 360, 361, 365, 366, 370, 427, 444, 616, 633, 666, 675, 688, 691], "max_h_iso0": 208, "thick": [208, 211], "400": [208, 211, 622, 684], "beamwidth": [208, 211], "primarili": [208, 211], "melt": [208, 211, 450, 461, 462, 466, 595, 651, 670, 671, 672, 673], "db": [208, 211, 431, 620, 631, 659, 673, 690], "phi_field": 209, "textzdr_field": 209, "textrhv_field": 209, "textphi_field": 209, "textrefl_field": 209, "wind_siz": [209, 432, 608, 686], "7": [209, 379, 461, 470, 608, 612, 614, 615, 616, 618, 619, 623, 625, 641, 648, 651, 656, 663, 667, 673, 689, 690, 693], "max_textphi": 209, "max_textrhv": 209, "max_textzdr": 209, "85": [209, 612, 616, 673, 674], "max_textrefl": 209, "move": [209, 591, 614, 618, 622, 639, 695], "highest": 209, "min_temp": 211, "There": [212, 614, 616, 618, 625, 646, 692, 696], "colorblind": [212, 613, 618, 646], "friendli": [212, 613, 618, 622, 646], "revers": [212, 227, 238, 288, 299, 317, 332, 350, 365, 385, 462, 622], "_r": 212, "matplotlib": [212, 227, 229, 232, 233, 234, 238, 239, 240, 252, 253, 254, 256, 258, 268, 269, 271, 273, 288, 290, 293, 294, 295, 299, 300, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 370, 389, 612, 613, 614, 615, 618, 619, 620, 622, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 682, 684, 685, 686, 688, 689, 692, 696], "pyart_colormap": 212, "bluebrown10": [212, 646], "bluebrown11": [212, 646], "brbu10": [212, 646], "brbu12": [212, 646], "bu10": [212, 646], "bu7": [212, 646], "budor12": [212, 646], "budor18": [212, 646], "budrd12": [212, 646], "budrd18": [212, 646], "bugr14": [212, 646], "bugy8": [212, 646], "buor10": [212, 646], "buor12": [212, 646], "buor8": [212, 646], "buorr14": [212, 646], "carbone11": [212, 646], "carbone17": [212, 646], "carbone42": [212, 646], "cat12": [212, 646], "ewilson17": [212, 646], "grmg16": [212, 646], "gray5": [212, 646], "gray9": [212, 646], "nwsref": [212, 646], "nwsvel": [212, 646], "nws_spw": [212, 646], "pd17": [212, 646], "rrate11": [212, 646], "rdylbu11b": [212, 646], "refdiff": [212, 646], "scook18": [212, 646], "stepseq25": [212, 646], "symgray12": [212, 646], "theodore16": [212, 646], "wild25": [212, 646], "langrainbow12": [212, 646], "homeyerrainbow": [212, 622, 646, 647], "balanc": [212, 622, 646], "chasespectr": [212, 646, 695], "spectralextend": [212, 646], "displai": [213, 227, 229, 234, 238, 239, 240, 242, 274, 288, 290, 295, 299, 300, 302, 303, 317, 319, 327, 328, 332, 333, 335, 336, 350, 352, 360, 361, 365, 366, 368, 370, 389, 433, 470, 471, 613, 614, 615, 616, 618, 619, 620, 622, 623, 628, 629, 630, 635, 636, 640, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 684, 685, 686, 688, 689, 693, 695], "airborn": [213, 622], "plot_var": [213, 274, 303, 336], "order": [213, 274, 303, 336, 369, 385, 390, 391, 417, 445, 456, 461, 462, 580, 612, 619, 620, 622, 623, 670, 671, 682, 693], "cb": [213, 274, 303, 336, 650, 671, 673], "colorbar": [213, 227, 228, 229, 234, 237, 238, 239, 240, 251, 252, 254, 256, 258, 259, 260, 267, 269, 271, 273, 274, 288, 289, 290, 295, 298, 299, 300, 303, 317, 318, 319, 327, 328, 331, 332, 333, 336, 350, 351, 352, 360, 361, 364, 365, 366, 370, 612, 614, 615, 616, 622, 633, 639, 644, 646, 664, 665, 667, 671, 691], "loc": [213, 274, 303, 336, 612, 614, 618, 619, 620, 648], "titl": [214, 216, 217, 218, 227, 229, 234, 237, 238, 239, 240, 248, 249, 250, 252, 254, 256, 258, 259, 262, 263, 264, 269, 271, 273, 275, 277, 278, 279, 288, 290, 295, 298, 299, 300, 304, 306, 307, 308, 317, 319, 327, 328, 331, 332, 333, 337, 339, 340, 341, 350, 352, 360, 361, 364, 365, 366, 370, 613, 614, 615, 616, 618, 619, 621, 622, 628, 630, 639, 650, 652, 653, 655, 657, 658, 662, 690], "ext": [215, 247, 261, 276, 305, 338], "png": [215, 247, 261, 276, 305, 338, 370, 613, 614, 616, 618, 619], "datetime_format": [215, 217, 276, 278, 305, 307, 338, 340], "use_sweep_tim": [215, 217, 276, 278, 305, 307, 338, 340], "form": [215, 229, 247, 261, 276, 290, 305, 319, 338, 352, 612, 616, 622], "radar_name_field_sweep_tim": [215, 276, 305, 338], "datetim": [215, 217, 234, 238, 240, 276, 278, 295, 299, 300, 305, 307, 327, 332, 333, 338, 340, 360, 365, 366, 374, 375, 391, 435, 438, 439, 441, 442, 443, 585, 586, 587, 588, 589, 614, 618, 619, 622, 649], "strftime": [215, 217, 234, 238, 276, 278, 295, 299, 305, 307, 327, 332, 338, 340, 360, 365, 614, 615, 619, 649], "suitabl": [215, 247, 261, 276, 305, 338, 444, 616], "xaxi": [219, 222, 280, 283, 309, 312, 342, 345, 650], "static": [220, 221, 230, 231, 235, 241, 242, 281, 282, 291, 292, 296, 301, 302, 310, 311, 320, 321, 334, 335, 343, 344, 353, 354, 367, 368, 613], "yaxi": [220, 221, 223, 224, 225, 281, 282, 284, 285, 286, 310, 311, 313, 314, 315, 343, 344, 346, 347, 348], "keyword": [226, 287, 316, 328, 349, 361, 370, 381, 383, 612, 616, 622, 685, 688], "plot_ppi": [226, 287, 316, 349, 622, 630, 645, 672, 673, 678, 680, 684], "plot_sweep_grid": [226, 622], "target_azimuth": [227, 288, 317, 350, 583], "mask_tupl": [227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 616], "norm": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 462, 616, 622, 650, 672], "cmap": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 259, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 370, 389, 612, 613, 614, 615, 616, 618, 619, 620, 639, 646, 647, 648, 649, 650, 651, 655, 658, 660, 662, 663, 667, 669, 670, 671, 673, 678, 679, 680, 685, 686, 695], "mask_outsid": [227, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 613, 616, 622, 657, 658, 667, 673], "title_flag": [227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 328, 331, 332, 333, 350, 352, 360, 361, 364, 365, 366, 616, 662], "axislabel": [227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 331, 332, 333, 350, 352, 360, 364, 365, 366, 613, 652, 657, 658], "axislabels_flag": [227, 229, 234, 237, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 298, 299, 300, 317, 319, 327, 331, 332, 333, 350, 352, 360, 364, 365, 366, 622, 670, 671], "colorbar_flag": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 614, 616, 619], "colorbar_label": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 613, 616, 618, 628, 630, 635, 652, 653, 657, 658, 659, 660, 664, 673, 678], "colorbar_ori": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 618, 622], "reverse_xaxi": [227, 238, 288, 299, 317, 332, 350, 365], "fig": [227, 228, 229, 234, 237, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 298, 299, 300, 317, 318, 319, 327, 328, 331, 332, 333, 350, 351, 352, 360, 361, 364, 365, 366, 612, 613, 614, 615, 616, 618, 619, 620, 628, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 667, 669, 671, 672, 673, 674, 678, 686, 688, 689], "tick": [227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 299, 300, 317, 318, 319, 327, 328, 332, 333, 350, 351, 352, 360, 361, 365, 366, 616, 622, 646, 650, 670, 671, 672], "ticklab": [227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 299, 300, 317, 318, 319, 327, 328, 332, 333, 350, 351, 352, 360, 361, 365, 366, 616, 622, 670, 671, 672], "raster": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 389, 616, 622], "pseudo": [227, 288, 317, 350, 622], "associ": [227, 288, 317, 350, 406, 444, 612, 625, 667, 695], "pcolormesh": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 370, 612, 622, 639, 659, 667, 670, 671], "integ": [227, 288, 317, 350, 391, 432, 459, 460], "ncp": [227, 234, 237, 238, 239, 240, 288, 295, 298, 299, 300, 317, 327, 328, 331, 332, 333, 350, 360, 361, 364, 365, 366, 616], "lumin": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 616], "scale": [227, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 370, 390, 391, 427, 428, 436, 444, 462, 463, 612, 615, 616, 651], "west": [227, 238, 288, 299, 317, 332, 350, 365, 612, 616, 652], "leav": [227, 229, 234, 238, 239, 240, 252, 254, 256, 258, 269, 271, 273, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 614, 616], "orient": [227, 228, 229, 234, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 299, 300, 317, 318, 319, 327, 328, 332, 333, 350, 351, 352, 360, 361, 365, 366, 461, 614, 616, 617, 619, 672, 674], "treat": [227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 616], "themselv": [227, 234, 238, 239, 240, 256, 258, 269, 271, 273, 288, 295, 299, 300, 317, 327, 328, 332, 333, 350, 360, 361, 365, 366, 616], "figur": [227, 228, 229, 234, 237, 238, 239, 240, 251, 252, 254, 256, 258, 267, 269, 271, 273, 288, 289, 290, 295, 298, 299, 300, 317, 318, 319, 327, 328, 331, 332, 333, 350, 351, 352, 360, 361, 364, 365, 366, 613, 614, 615, 616, 618, 619, 620, 621, 628, 630, 635, 636, 639, 640, 641, 642, 646, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 669, 670, 671, 673, 678, 685, 686, 688, 689], "render": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 615, 616], "rather": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 616], "larg": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 462, 468, 616, 618, 619, 622], "Be": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 616, 625], "sure": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 615, 616, 619, 621, 622, 625, 639, 650, 670, 692, 696], "dpi": [227, 229, 234, 238, 239, 240, 259, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 370, 614, 616, 618], "pdf": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 616], "ep": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 616], "svg": [227, 229, 234, 238, 239, 240, 288, 290, 295, 299, 300, 317, 319, 327, 328, 332, 333, 350, 352, 360, 361, 365, 366, 616], "mappabl": [228, 251, 260, 267, 289, 318, 351, 619], "cax": [228, 251, 267, 289, 318, 351, 672], "imag": [228, 251, 267, 289, 318, 351, 444, 460, 580, 595, 612, 613, 615, 616, 619, 622, 633, 644, 665, 668, 670, 671, 691], "contourset": [228, 251, 260, 267, 289, 318, 351], "etc": [228, 251, 254, 260, 267, 289, 318, 328, 351, 361, 388, 435, 438, 439, 441, 443, 456, 614, 616, 622, 667], "onto": [228, 251, 267, 269, 289, 318, 328, 351, 361, 417, 424, 428, 465, 616, 620], "drawn": [228, 251, 267, 289, 318, 351, 616], "target_rang": [229, 290, 319, 352, 647], "delta_x": [229, 290, 319, 352], "delta_i": [229, 290, 319, 352], "az_limit": [229, 290, 319, 352], "el_limit": [229, 290, 319, 352, 647], "corner": [229, 290, 319, 326, 352, 359, 616, 617, 622, 633, 644, 665, 691], "reflector": [229, 290, 319, 352, 622, 633, 644, 665, 691], "griddata": [229, 290, 319, 352], "min": [229, 290, 319, 352, 612, 616, 674], "max": [229, 290, 319, 352, 370, 389, 612, 616, 622, 633, 635, 639, 640, 644, 646, 647, 648, 654, 662, 665, 674, 678, 679, 680, 691], "npt": [230, 235, 291, 296, 320, 329, 353, 362], "hair": [230, 291, 320, 353, 656], "higher": [230, 235, 291, 296, 320, 329, 353, 362, 428, 615, 620, 667, 686, 688], "col": [231, 235, 236, 292, 296, 297, 321, 330, 354, 363, 615, 640], "line": [231, 237, 253, 254, 266, 268, 292, 298, 321, 324, 325, 328, 329, 331, 354, 357, 358, 361, 362, 364, 370, 389, 462, 613, 614, 615, 616, 619, 622, 623, 625, 633, 644, 648, 665, 667, 668, 691, 692, 693, 696], "color": [231, 232, 233, 235, 236, 253, 292, 293, 294, 296, 297, 321, 322, 323, 325, 328, 329, 330, 354, 355, 356, 361, 363, 370, 389, 613, 614, 615, 616, 618, 619, 620, 648, 650, 651, 659, 660, 667, 668, 670, 671, 672, 673], "linestyl": [231, 235, 236, 253, 292, 296, 297, 321, 330, 354, 363, 614, 616, 618, 648, 650, 660], "symbol": [232, 233, 293, 294, 322, 323, 326, 355, 356, 359], "text_color": [232, 233, 293, 294, 322, 323, 355, 356], "text": [232, 233, 293, 294, 322, 323, 326, 355, 356, 359, 483, 614, 621, 622, 625, 646, 657, 674, 682, 686], "just": [232, 233, 293, 294, 322, 323, 355, 356, 379, 590, 620, 622, 623, 646, 651, 684, 690, 693, 696], "marker": [232, 233, 237, 253, 268, 293, 294, 298, 322, 323, 331, 355, 356, 364, 612, 614, 619], "title_datetime_format": [234, 238, 295, 299, 327, 332, 360, 365], "title_use_sweep_tim": [234, 238, 295, 299, 327, 332, 360, 365], "range_ring_location_km": [235, 296, 329, 362], "lw": [235, 236, 296, 297, 330, 363, 616, 618, 667], "range_r": [236, 259, 297, 330, 363, 370, 649], "seri": [236, 297, 330, 363, 442, 612, 615], "draw": [236, 254, 266, 297, 328, 330, 361, 363, 614, 616], "format_str": [237, 298, 331, 364], "ray_min": [237, 298, 331, 364], "ray_max": [237, 298, 331, 364], "style": [237, 253, 268, 298, 324, 325, 329, 331, 357, 358, 362, 364, 389, 622, 649], "ignoretilt": 239, "antenna_to_cartesian_track_rel": 239, "slant": [239, 425, 441], "ncar": 239, "soloii": 239, "time_axis_flag": [240, 300, 333, 366, 615], "date_time_form": [240, 300, 333, 366], "tz": [240, 300, 333, 366, 614], "zone": [240, 300, 333, 366], "info": [240, 300, 328, 333, 361, 366, 616, 622, 649, 672, 673, 690], "aspect_ratio": [241, 301, 334, 367], "aspect": [241, 301, 334, 367, 646], "xlim": [242, 302, 335, 368, 612, 613, 616, 618, 619, 620, 629, 653, 655, 659, 660, 673, 688], "ylim": [242, 302, 335, 368, 612, 613, 615, 616, 618, 619, 620, 653, 655, 657, 658, 659, 660, 662, 664, 667, 673], "cartopi": [243, 244, 245, 246, 254, 303, 328, 370, 612, 614, 616, 618, 619, 620, 622, 623, 633, 635, 636, 639, 640, 644, 648, 650, 663, 665, 668, 670, 671, 678, 682, 685, 686, 688, 689, 691, 692, 693, 696], "coastlin": [244, 254, 328, 361, 612, 616], "polit": 245, "state": [246, 463, 614, 616, 618, 622], "grid_name_field_level_tim": [247, 261], "latitudin": [249, 256, 271], "step": [252, 389, 435, 438, 439, 441, 442, 443, 613, 615, 620, 625, 635, 659, 660, 670, 696], "interp_typ": 252, "x_axi": [252, 648], "metpi": [252, 614, 616, 618, 619, 622], "design": [252, 595, 612, 623, 659, 670, 671, 682, 693], "geodes": 252, "nearest": [252, 381, 425, 428, 435, 438, 439, 441, 443, 457, 583, 584, 604, 612, 616, 622, 688], "dataarrai": 252, "interp": [252, 464], "ex": [252, 464, 614, 618, 620, 621, 646], "upper": [252, 254, 256, 258, 269, 271, 273, 614, 618, 619, 620, 648], "colormesh": [252, 254, 256, 258, 269, 271, 273], "64": [252, 254, 256, 258, 269, 271, 273, 613, 646, 653, 654, 655, 659, 661, 663, 664, 668, 689, 692], "linewidth": [253, 268, 614, 616, 618, 619, 650, 659, 660], "crosshair": [253, 268, 616], "lat_lin": [254, 259, 266, 328, 361, 370, 614, 616, 639, 656, 668], "lon_lin": [254, 259, 266, 328, 361, 370, 614, 616, 639, 656, 668], "embellish": [254, 328, 361, 614, 650], "add_grid_lin": [254, 328, 614], "reason": [254, 266, 616], "america": [254, 266, 328, 361, 616], "cr": [254, 303, 328, 370, 461, 612, 614, 616, 618, 619, 620, 635, 636, 639, 640, 648, 650, 656, 663, 668, 670, 671, 672, 678, 685, 686, 689], "subsequ": [254, 328, 616], "geoax": [254, 328, 616, 685, 688], "platecarre": [254, 328, 612, 614, 616, 618, 619, 620, 635, 639, 648, 650, 663, 668, 670, 671, 678, 686, 689], "shapefil": [254, 328, 361, 616], "certain": [254, 328, 371, 460, 595, 616, 622, 670, 671, 689], "plot_latitudinal_level": [255, 270], "y_index": [256, 271], "basemap": [256, 258, 260, 265, 266, 269, 271, 273, 336, 357, 358, 359, 361, 362, 622, 682, 692], "plot_longitudinal_level": [257, 272], "x_index": [258, 273], "add_map": [259, 370], "savedir": [259, 370], "show_figur": [259, 370], "add_slogan": [259, 370, 649], "top": [260, 428, 465, 612, 614, 617, 622, 623, 646, 667, 668, 688, 693], "veric": 262, "area_thresh": [266, 361], "10000": [266, 361, 435, 438, 439, 441, 443, 471, 640, 648, 649, 670, 671, 688], "auto_rang": 266, "min_lon": [266, 328, 361, 614, 616, 639, 656, 689], "92": [266, 657, 668], "max_lon": [266, 328, 361, 614, 616, 639, 656, 689], "86": [266, 616], "min_lat": [266, 328, 361, 614, 616, 639, 656, 689], "max_lat": [266, 328, 361, 614, 616, 639, 656, 689], "44": [266, 445, 456, 612, 614, 670, 671, 692], "databas": [266, 361, 618], "merc": [266, 361], "mercat": [266, 640], "line_styl": [268, 324, 325, 329, 357, 358, 362, 656], "plot_rhi": [287, 316, 349, 612], "plot_vpt": [287, 316, 349, 615], "grid_project": [303, 427, 428, 616], "progress": [303, 336, 619, 695], "correctli": [303, 336, 619, 622, 649], "github": [303, 336, 614, 617, 622, 660, 682, 692, 695, 696], "tracker": [303, 336, 623, 682, 693], "azimuthalequidist": 303, "line_lon": [324, 357], "line_lat": [324, 357], "compat": [324, 325, 326, 329, 357, 358, 359, 362, 386, 614, 622, 626, 695, 696], "line_x": [325, 358], "line_i": [325, 358], "ro": [326, 359], "label_text": [326, 359], "label_offset": [326, 359], "bottom": [326, 359, 614, 616, 646, 650], "110m": [328, 616], "shapefile_kwarg": [328, 616], "alpha": [328, 361, 389, 449, 450, 451, 452, 453, 454, 614, 618, 650, 659, 667], "edgecolor": [328, 361, 614, 618, 659], "face": [328, 361, 616], "reson": [328, 361, 616], "lambertconform": [328, 616, 636, 656, 685], "domain": [328, 361, 612, 616, 639], "neither": [328, 361, 393, 616], "extend": [328, 361, 385, 616], "word": [328, 616], "10m": [328, 614, 616, 620, 636, 656], "50m": [328, 616, 678, 686, 689], "naturalearthfeatur": [328, 616], "tranpar": [328, 361, 616], "overplot": [328, 361, 616], "pixel": [328, 361, 389, 459, 460, 565, 612, 616], "lcc": 361, "cylindr": 361, "mill": 361, "exhibit": 361, "distort": 361, "aea": 361, "laea": 361, "conform": [361, 616, 682, 684], "tmerc": 361, "stere": 361, "aeqd": 361, "cass": 361, "even": [361, 444, 464, 618, 622, 659, 667, 682, 688, 696], "cyl": [361, 622], "cannot": [361, 373, 614, 616], "lake": [361, 618], "esri": 361, "background": [361, 369, 370, 389, 445, 456, 468, 616, 621, 656, 663, 670, 671], "untest": 361, "always_core_thr": [369, 445, 456, 670, 671], "use_cosin": [369, 445, 456, 670, 671], "max_diff": [369, 445, 456, 670, 671], "zero_diff_cos_v": [369, 445, 456, 670, 671], "use_addit": [369, 445, 456, 670, 671], "scalar_diff": [369, 445, 456, 670, 671], "convect": [369, 444, 445, 456, 468, 612, 619, 622, 633, 666, 675, 691], "stratiform": [369, 444, 445, 456, 468, 622, 633, 666, 675, 691], "classif": [369, 444, 445, 450, 456, 461, 468, 622, 633, 666, 675, 691], "cosin": [369, 445, 456, 670, 671], "classifi": [369, 444, 445, 456, 461, 622, 670, 671, 672], "eqn": [369, 445, 456], "b1": [369, 445, 456, 620], "yuter": [369, 445, 447, 456, 468, 595, 651, 667, 670, 671], "1997": [369, 445, 456, 670, 671], "zero": [369, 387, 389, 445, 456, 460, 462, 604, 619, 622, 631, 667, 670, 671, 685, 689], "multipli": [369, 445, 456, 615, 670, 684], "constant": [370, 381, 421, 427, 428, 446, 459, 462, 612, 615, 622, 645], "plan": [370, 446, 645], "cappi": [370, 446, 633, 644, 665, 691], "ref": [370, 616, 649, 663, 671], "vel": 370, "pyart_homeyerrainbow": [370, 613, 615, 639, 646, 648, 649, 650, 655, 658, 662, 663, 669], "dot": [370, 660], "inch": [370, 618], "slogan": 370, "It": [370, 428, 464, 580, 591, 614, 616, 620, 623, 626, 639, 693, 695, 696], "byte": [370, 389, 622], "decod": [370, 385, 622], "charact": [370, 391], "featur": [370, 456, 613, 614, 616, 620, 626, 633, 651, 666, 667, 670, 675, 682, 691], "author": [370, 430, 433, 456, 595, 613, 620, 621, 625, 628, 629, 630, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 674, 678, 679, 680], "hamid": [370, 446, 645, 649], "ali": [370, 446, 645, 649], "syedhamidali": [370, 446, 622], "most": [371, 379, 614, 615, 616, 622, 646, 667, 671, 686, 688, 696], "storage_opt": [372, 381, 383], "anon": [372, 381, 383, 612, 614, 618, 619, 649], "open": [372, 381, 383, 483, 612, 615, 616, 618, 619, 621, 622, 623, 653, 682, 684, 685, 686, 688, 689, 690, 693, 696], "binari": [372, 456, 612, 625], "transpar": [372, 389, 614, 616, 622, 659], "decompress": [372, 622], "gzip": [372, 379, 380], "bzip2": [372, 622], "close": [372, 456, 462, 613, 614, 618, 619, 620, 622, 631], "compress": [372, 379, 380, 616, 622], "backend": [372, 381], "googl": [372, 381, 622, 623, 693], "storag": [372, 381, 560], "amazon": [372, 381, 612, 614, 616, 618, 635, 636], "web": [372, 381, 389, 612, 616, 618, 620, 635, 636], "servic": [372, 381, 612, 614, 616, 618, 620, 625, 635, 636, 646], "s3": [372, 381, 614, 618, 635, 636, 649, 651, 670, 671], "file_lik": 372, "use_rsl": 373, "read_": 373, "trmm": [373, 385, 622, 682, 692], "librari": [373, 382, 385, 388, 389, 612, 614, 615, 616, 618, 622, 623, 624, 682, 684, 685, 686, 688, 689, 690, 692, 693, 695], "choos": [373, 616, 633, 644, 665, 670, 671, 691, 696], "Not": [373, 380, 461], "typeerror": [373, 622], "launch_datetim": 374, "date": [374, 375, 610, 614, 616, 620, 621, 622, 635, 636, 649], "radiosond": 374, "launch": 374, "record": [374, 618, 620, 690], "target_datetim": 375, "closest": [375, 417, 435, 438, 439, 441, 443], "profile_datetim": 375, "use_arm_scan_nam": 376, "scan_nam": [376, 612, 615, 622], "use_file_field_attribut": 377, "csu": [377, 622], "chill": 377, "chl": [377, 622], "field_file_nam": 377, "long_nam": [377, 612, 615, 629, 670, 671, 673, 685, 690], "zlib": [379, 380], "read_mdv": [379, 613, 630, 641, 655, 659, 660, 661], "interchang": 379, "vlevel": 379, "proj_polar_radar": 379, "9": [379, 450, 452, 461, 591, 612, 614, 615, 616, 618, 619, 621, 628, 651, 660, 663, 668, 669, 670, 671, 673, 682, 684, 689, 690], "proj_rhi_radar": 379, "vlevel_typ": 379, "vert_type_z": 379, "vert_type_elev": 379, "vert_type_az": 379, "17": [379, 614, 615, 657, 662], "vert_type_pressur": 379, "vert_type_theta": 379, "unknown": [379, 622], "station": [381, 382, 616, 636], "linear_interp": 381, "nexrad": [381, 382, 383, 384, 612, 622, 633, 634, 637, 644, 649, 651, 665, 670, 671, 682, 690, 691], "archiv": [381, 614, 616, 618, 620, 652, 682], "host": [381, 383, 614, 625], "noaa": [381, 383, 385, 612, 614, 616, 618, 619, 635, 636, 649, 651, 670, 671], "nation": [381, 383, 612, 614, 616, 618, 619, 635, 646], "climat": [381, 383, 615, 616, 618, 622, 623, 682, 684, 685, 686, 688, 689, 690, 693], "ucar": [381, 382, 612], "thredd": [381, 382, 388], "server": [381, 382], "letter": [381, 382, 384], "icao": [381, 382, 622], "older": [381, 382, 622, 623, 633, 634, 637, 682, 691, 693], "mix": [381, 444, 595, 651, 670, 671], "fsspec": [381, 383, 618, 619, 622, 649], "cut": [381, 382, 383, 460], "www": [381, 382, 383, 459, 614, 618, 623, 693], "ncdc": [381, 383], "gov": [381, 383, 612, 613, 614, 618, 620, 628, 630, 635, 636, 639, 641, 642, 646, 647, 648, 650, 652, 653, 654, 655, 657, 659, 660, 661, 662, 664, 668, 669, 678, 679, 680], "edu": [381, 382, 459, 612, 645, 649, 651, 667, 670, 671], "catalog": [381, 382, 612], "html": [381, 382, 459, 614, 618, 622, 623, 682, 692, 693], "common": [382, 615, 622, 640, 682, 692], "cdm": [382, 388], "url": [382, 614, 616, 620], "java": [382, 388], "tool": [382, 388, 612, 615, 620, 682, 692], "opendap": 382, "accept": [382, 435, 438, 439, 441, 463, 464, 616, 620, 622, 623, 693], "compil": [382, 463, 619, 622, 682, 692], "unidata": [382, 612, 635], "htm": 382, "product": [383, 385, 433, 471, 612, 616, 622], "nw": [383, 618, 619], "wsr": 383, "88d": 383, "iii": 383, "distribut": [383, 445, 447, 455, 456, 470, 565, 576, 577, 578, 579, 596, 597, 622, 623, 667, 670, 671, 682, 693], "roc": 383, "wsr88d": [383, 384], "level_iii": 383, "level3info": 383, "asp": 383, "radar_format": 384, "callid": 384, "skip_range_check": 384, "rsl_radar": 384, "id": [384, 389, 612, 620, 622], "verifi": [384, 598, 609], "ioerror": 384, "time_ord": [385, 622], "full_xhdr": 385, "noaa_hh_hdr": 385, "ignore_xhdr": 385, "ignore_sweep_start_m": 385, "sigmet": [385, 622, 682], "iri": [385, 622, 682, 692], "sequenti": [385, 646], "re": [385, 444, 614, 623, 693], "manner": 385, "determind": 385, "maintain": [385, 424, 622], "yet": [385, 635, 640], "warn": [385, 388, 461, 612, 614, 615, 616, 618, 619, 620, 622, 639, 649, 673, 688], "reverse_and_rol": 385, "strictli": 385, "increas": [385, 428, 462, 465, 612, 616, 623, 646, 667, 688, 693], "becom": [385, 670, 685, 688], "thisopt": 385, "strict": 385, "header": [385, 622], "hurrican": [385, 616, 670, 671], "hunter": 385, "millisecond": [385, 619], "precis": [385, 444], "explic": 385, "read_rsl": [385, 692], "error": [385, 389, 463, 464, 612, 614, 616, 619, 621, 622, 640, 649, 692], "uf": [386, 391, 622, 682], "introduc": [386, 464], "implement": [386, 393, 406, 427, 451, 459, 615, 616, 619, 622, 623, 628, 671, 693], "time_refer": [387, 684], "compliant": 387, "mani": [387, 622, 623, 682, 688, 693, 696], "outlin": [387, 462, 591], "_zlib": [387, 388], "_deflatelevel": [387, 388], "_shuffl": [387, 388], "_fletcher32": [387, 388], "_contingu": [387, 388], "_chunksiz": [387, 388], "_endian": [387, 388], "_least_significant_digit": [387, 388], "_fillvalu": [387, 388, 622, 685, 690], "write_proj_coord_si": 388, "proj_coord_si": 388, "write_point_x_y_z": 388, "write_point_lon_lat_alt": 388, "projectioncoordinatesystem": 388, "toolsui": 388, "written": [388, 390, 391, 622, 625, 682], "appropri": [388, 591, 616, 626], "understood": 388, "rgb": 389, "viridi": [389, 670, 671], "color_level": 389, "warp": 389, "sld": 389, "use_doublequot": 389, "transparent_bg": 389, "opac": 389, "geotiff": [389, 622, 682], "wgs84": 389, "sphere": [389, 592, 605], "latter": [389, 616], "usabl": [389, 612], "former": 389, "gi": 389, "while": [389, 616, 619, 620, 640, 682, 686, 696], "show": [389, 612, 613, 614, 616, 618, 620, 621, 622, 623, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 670, 671, 673, 678, 684, 686, 688, 689, 690, 693], "lack": [389, 404, 414], "composit": [389, 433, 612, 615, 622, 633, 666, 675, 691], "gdal": [389, 622, 682], "via": [389, 425, 426, 614, 616, 625], "conda": [389, 618, 622, 623, 682, 692, 693, 696], "rbg": 389, "tabl": [389, 612], "column": [389, 581, 593, 594, 612, 614, 615, 616, 622, 633, 666, 675, 691], "categor": [389, 614, 672], "255": [389, 622, 671], "hydrometeor": [389, 450, 461, 622, 633, 666, 675, 686, 691], "gdalwarp": 389, "command": [389, 622, 623, 625, 682, 685, 693, 696], "o": [389, 483, 614, 616, 619, 623, 650, 682, 692, 693], "az": [389, 614, 622, 657, 658], "descriptor": 389, "tiff": 389, "don": [389, 615, 616, 619, 622, 639], "t": [389, 438, 444, 445, 456, 462, 463, 466, 471, 612, 615, 616, 619, 620, 622, 639, 667, 670, 671, 682, 684], "quot": 389, "translat": 389, "sr": [389, 612], "instead": [389, 612, 614, 616, 619, 620, 622, 623, 636, 667, 670, 688, 692, 693, 696], "opaqu": [389, 616], "mdv_field_nam": [390, 622], "field_write_ord": [390, 391], "sentinel": [390, 391], "float32": [390, 612, 615, 616, 622, 668, 684, 686, 690], "_write_as_dtyp": 390, "writabl": 390, "satisfi": 390, "xy": [390, 428], "irregular": 390, "exce": [390, 670, 671], "122": [390, 620, 635, 639, 648, 669, 673, 678], "uint8": 390, "uint16": 390, "scale_factor": [390, 615], "add_offset": [390, 615], "uncompress": 390, "sai": [390, 623, 693], "uf_field_nam": 391, "radar_field_nam": 391, "volume_start": 391, "templates_extra": 391, "radar_beam_width_h": [391, 615], "radar_beam_width_v": [391, 615], "radar_receiver_bandwidth": 391, "prt": [391, 615], "polarization_mod": 391, "round": [391, 425, 426, 616, 620, 622], "_uf_scale_factor": 391, "advanc": [391, 612], "usag": 391, "templat": [391, 622, 625], "mandatory_head": 391, "optional_head": 391, "field_head": 391, "lazi": [392, 393, 395, 402, 622], "set_lazi": 393, "callabl": [393, 402, 615, 616], "cach": 393, "tradit": 393, "supplement": 393, "syntax": [393, 622], "prevent": [393, 428, 614, 622, 623, 693], "comparison": [393, 622, 639, 645, 671], "__cmp__": 393, "__ge__": 393, "__gt__": 393, "__le__": 393, "__lt__": 393, "__ne__": 393, "nor": 393, "viewitem": 393, "viewkei": 393, "viewvalu": 393, "fromkei": 393, "tradition": 393, "referenc": 393, "lazyloaddictionari": 393, "henc": 393, "key1": 393, "value1": 393, "key2": 393, "value2": 393, "lazy_func": 393, "lambda": 393, "lazykey1": 393, "item": [394, 404, 407, 414, 622], "els": [396, 397, 408, 615, 619, 620, 649, 673], "value_cal": 402, "concret": 406, "__getitem__": [406, 615], "__setitem__": 406, "__delitem__": 406, "__iter__": 406, "__len__": 406, "robust": [416, 444, 622], "src_radar": 417, "dest_radar": 417, "distance_toler": [417, 639], "500": [417, 614, 618, 639, 648, 653], "gatefilter_src": [417, 639], "time_toler": [417, 639], "60": [417, 612, 628, 635, 639, 642, 645, 650, 679, 684, 686, 688, 695], "kd": 417, "tree": [417, 428, 678, 679, 680, 695], "physic": [417, 433, 445, 456, 670, 671], "easi": [417, 433, 682], "equival": [417, 613, 615, 619, 622, 635, 650, 658, 664], "src_radar_i": 417, "src_radar_x": 417, "destin": [417, 419, 614, 618, 622, 639], "toler": [417, 418, 420, 435, 438, 441, 442, 443, 583, 584, 622], "src_radar_tim": 417, "dest_radar_tim": 417, "gate_mapp": 417, "src": [417, 618], "dest": 417, "dest_index": 417, "radar_map": 417, "mapped_radar": [417, 639], "adequ": [417, 639], "getter": [418, 420], "field_list": [419, 460], "zg": [421, 422, 423], "yg": [421, 422, 423], "xg": [421, 422, 423], "roi": [421, 422, 423, 425, 426, 428, 622, 640], "influenc": [421, 424, 427, 428, 688], "grow": [422, 423, 427, 428, 623, 693], "virtual": [423, 427, 428], "grid_shap": [424, 425, 426, 427, 428, 561, 640, 641, 642, 648, 649, 670, 671, 679, 688, 695], "grid_limit": [424, 425, 426, 427, 428, 561, 640, 641, 642, 648, 649, 670, 671, 679, 688, 695], "gridding_algo": 424, "map_gates_to_grid": [424, 622], "copy_field_dtyp": [424, 622], "map_to_grid": [424, 427, 622], "significantli": [424, 428], "faster": [424, 428, 616, 622], "barn": [424, 428, 622, 688], "1964": 424, "techniqu": [424, 444, 446, 631, 671], "maxim": 424, "numer": [424, 622], "analysi": [424, 436, 444, 594, 616, 620, 622], "meteorologi": [424, 430, 433, 462, 471, 591], "climatologi": [424, 471], "396": [424, 615, 664, 665, 691], "409": [424, 622], "cressman": [424, 428, 688], "1959": 424, "monthli": 424, "review": [424, 613, 622], "87": [424, 612, 614, 619], "367": 424, "374": [424, 622], "paulei": [424, 688], "1990": [424, 688], "theoret": [424, 436], "discret": 424, "respons": 424, "118": 424, "1145": [424, 622], "1164": [424, 622], "target_sweep": [425, 426], "grid_siz": [425, 426, 427, 428], "801": [425, 426, 622], "auto": [425, 426, 616, 618, 646], "max_z": [425, 426], "12000": [425, 426, 684, 688], "el_rounding_frac": 425, "add_grid_altitud": 425, "weight": [425, 426, 427, 428, 439, 461, 462, 470, 612, 622, 633, 638, 643, 688, 691], "grid_from_radar": [425, 426, 427, 428, 640, 641, 642, 648, 649, 670, 671, 679, 688, 695], "receiv": [425, 426, 434, 615, 618, 622, 686], "h_factor": [425, 426, 427, 428, 640], "dist_factor": [425, 426, 427, 640], "radar_d": [425, 426], "third": [425, 426, 623, 693], "az_rounding_frac": 426, "grid_origin": [427, 428, 642, 648], "grid_origin_alt": [427, 428], "map_roi": [427, 428], "weighting_funct": [427, 428, 688], "barnes2": [427, 428, 622], "17000": [427, 428, 688], "roi_func": [427, 428, 622, 688], "dist_beam": [427, 428, 688], "constant_roi": [427, 428, 622], "z_factor": [427, 428], "xy_factor": [427, 428], "02": [427, 428, 612, 615, 651, 665, 670, 671, 675, 691], "min_radiu": [427, 428, 622, 688], "250": [427, 428, 435, 441, 649, 690], "nb": [427, 428], "bsp": [427, 428], "linearli": 427, "roifunct": 427, "dist": [427, 428, 596, 597, 612, 614], "get_roi": 427, "cython": [427, 622], "around": [427, 442, 445, 456, 565, 580, 618, 620, 641, 649, 659, 662, 667, 670, 684, 686], "copy_field_data": 428, "kd_tree": 428, "leafsiz": 428, "nearbi": [428, 642], "coodin": 428, "azimut": 428, "similarili": 428, "example_roi_func_const": 428, "example_roi_func_dist": 428, "example_roi_func_dist_beam": 428, "altern": [428, 433, 616, 670], "foreach": 428, "metet": 428, "sacr": 428, "sapr": [428, 567], "dist_mean": 428, "preserv": [428, 620, 686], "less": [428, 444, 445, 447, 456, 464, 595, 620, 667, 670], "memori": [428, 622], "slower": [428, 462], "leaf": 428, "lookup": 428, "affect": 428, "optim": [428, 462, 622], "natur": [428, 444, 616], "ref_field": [430, 671, 685], "300": [430, 612, 614, 615, 616, 618, 619, 651, 652, 684], "save_nam": [430, 671], "nws_primary_pr": 430, "mm": [430, 619, 620, 621, 670, 671], "hr": [430, 670, 671], "laura": [430, 456, 595, 651, 667, 670, 671], "tomkin": [430, 456, 595, 651, 667, 670, 671], "look": [430, 433, 438, 447, 466, 612, 614, 615, 616, 618, 620, 621, 622, 629, 635, 636, 639, 640, 650, 682, 684, 686, 688, 690], "expect": [430, 464, 623, 693], "relationship": [430, 444, 455], "american": [430, 433], "meteorolog": [430, 433, 436, 446, 451, 471, 616], "2022": [430, 433, 595, 612, 615, 621, 635, 651, 670, 671, 682], "glossari": [430, 433, 446], "ametsoc": [430, 433, 446], "wiki": [430, 433, 446, 459], "r_relat": 430, "25000": [431, 688], "measur": [431, 434, 445, 449, 450, 455, 456, 461, 462, 463, 464, 581, 615, 616, 618, 620, 623, 670, 671, 682, 684, 685, 686, 688, 689, 690, 693], "nyq": [432, 618, 678, 686], "check_nyq_uniform": 432, "deriv": [432, 462, 464], "vel_dict": 432, "entri": [432, 690], "am": [433, 618, 623, 682, 693], "dry": [433, 461, 672, 673], "world": [433, 633, 644], "aloft": 433, "oppos": [433, 651], "nwp": [433, 672], "why": [433, 616, 621, 623, 693], "would": [433, 612, 613, 614, 615, 618, 620, 622, 623, 635, 636, 686, 688, 693], "think": 433, "turn": [433, 646, 670, 671, 682], "spin": [433, 620], "randi": [433, 618], "chase": [433, 618], "dopplerchas": [433, 622], "cdr_field": 434, "circular": [434, 596, 597, 622, 670], "depolar": [434, 615], "cdr": 434, "matrosov": 434, "2004": 434, "simultan": 434, "transmiss": 434, "574": [434, 622], "1520": [434, 436, 445, 447, 456, 622, 667, 670, 671], "0426": [434, 436], "021": 434, "0574": 434, "deflha": 434, "ref_tim": [435, 438, 439, 441, 442, 443], "latlon_tol": [435, 441, 443], "0005": [435, 441, 443], "delta_rng": [435, 441], "15000": [435, 441, 667, 684, 688], "delta_azi": [435, 441], "hmax": [435, 438, 439, 441, 443], "hre": [435, 438, 439, 441, 443], "avg_typ": [435, 438, 439, 441, 582], "nvalid_min": [435, 438, 439, 441, 582], "interp_kind": [435, 438, 439, 441, 443, 604], "qvp": [435, 438, 439, 441, 443, 466, 622], "enhanc": [435, 673, 696], "interest": [435, 441, 443, 612, 614, 615, 616, 618, 620, 639, 670, 673], "central": [435, 441, 612, 614, 618], "evp": [435, 441], "median": [435, 438, 439, 441, 582, 622], "regardless": [435, 438, 439, 441, 443], "elimin": [435, 438, 439, 441, 443, 620, 686, 688], "kaltenboeck": 435, "2016": [435, 438, 450, 461, 612, 615, 616, 618, 623, 682, 684, 685, 686, 688, 689, 690, 693], "storm": [435, 456, 468, 565, 566, 568, 612, 615, 616, 618, 651, 670, 671, 688], "explor": [435, 616, 618], "methodologi": [435, 471, 581, 686], "meteorologisch": 435, "zeitschrift": 435, "26": [435, 612], "207": [435, 615], "222": [435, 630, 652], "l_field": 436, "logarithm": 436, "log10": [436, 639], "l_field_out": 436, "covari": [436, 463], "matrix": [436, 463, 616, 622], "scatter": [436, 612, 614, 618, 619, 620, 648, 668], "315": [436, 622], "328": [436, 444], "018": 436, "0315": 436, "ioprcm": 436, "noisedbz_v": 437, "ref_dist": 437, "noise_field": [437, 440], "noisedbz": 437, "ang_tol": [438, 441, 442], "quasi": [438, 439, 466], "convers": [438, 441, 444, 580, 615], "zhang": [438, 441, 449, 466, 581], "reev": [438, 466], "kumjian": [438, 439, 466], "tschallen": [438, 466], "tr\u00f6mel": 438, "simmer": [438, 449, 466], "wai": [438, 466, 615, 623, 625, 639, 684, 693, 696], "33": [438, 612, 615, 616, 671, 690], "551": 438, "562": [438, 622], "rmax": 439, "50000": [439, 642, 648, 670, 671, 688], "weight_pow": 439, "ab": [439, 612], "grng": 439, "tobin": 439, "2017": [439, 441, 620], "surfac": [439, 445, 456, 615, 670, 671], "ic": [439, 441, 461, 581, 659, 672, 673], "pellet": 439, "forecast": [439, 616], "2065": 439, "2082": 439, "bukovc": 441, "winter": [441, 456, 651, 670, 671], "liquid": 441, "reveal": 441, "2dvd": 441, "oklahoma": [441, 561, 618], "56": [441, 612, 615, 674], "1345": 441, "1363": [441, 622], "along_azi": 442, "fixed_rang": 442, "fixed_azimuth": 442, "fixed_elev": 442, "rng_tol": 442, "value_start": 442, "value_stop": 442, "acoord": 442, "along_el": 442, "along_rng": 442, "stop": 442, "cappi_level": 444, "zr_a": 444, "200": [444, 623, 693], "zr_b": 444, "core_wt_threshold": 444, "conv_wt_threshold": 444, "conv_scale_km": 444, "min_reflect": 444, "conv_min_refl": 444, "conv_core_threshold": 444, "42": [444, 445, 456, 468, 612, 614, 615, 618, 668, 670, 671], "override_check": 444, "computation": 444, "\u00e0": 444, "trou": 444, "wavelet": 444, "atwt": 444, "multiresolut": 444, "focus": [444, 612, 614, 615], "raut": 444, "2008": [444, 636], "2020": [444, 581, 616, 620, 622, 623, 651, 682, 692, 693], "sensit": 444, "howev": [444, 462, 616, 686], "intermedi": 444, "signific": 444, "approxim": [444, 612, 615, 622, 631], "break": [444, 620, 624, 625, 695], "season": 444, "2018": [444, 461, 616], "discuss": [444, 616, 626], "insensit": 444, "variat": [444, 455, 462, 622], "dyadic": 444, "scale_break_us": 444, "bypass": 444, "saniti": 444, "fall": 444, "categori": [444, 614, 620], "strong": [444, 456, 614, 671], "updraft": 444, "activ": [444, 696], "collis": 444, "coalesc": 444, "wide": [444, 667], "remain": 444, "intens": [444, 468, 565], "unclassifi": [444, 612], "karekar": 444, "puranik": 444, "infrar": [444, 612], "satellit": [444, 612], "ieee": [444, 463], "geosci": [444, 463], "remot": [444, 463, 614, 615, 616, 622, 623, 635, 693], "sen": [444, 463], "lett": 444, "330": [444, 622], "seed": 444, "reeder": 444, "jakob": 444, "cascad": 444, "downscal": 444, "geophi": 444, "123": [444, 447, 667], "2050": 444, "2067": 444, "louf": 444, "gayatri": 444, "murugavel": 444, "konwar": 444, "prabhakaran": 444, "tran": 444, "5409": 444, "5415": 444, "dx": [445, 456, 468, 670, 671], "dy": [445, 456, 468, 614, 670, 671], "level_m": [445, 456, 671], "bkg_rad_km": [445, 456, 670, 671], "11": [445, 456, 461, 603, 612, 614, 620, 642, 643, 668, 671, 675, 679, 682, 689, 690, 691, 695], "55": [445, 456, 612, 614, 629, 663, 670, 671], "calc_thr": [445, 456, 670, 671], "weak_echo_thr": [445, 456, 670, 671], "min_dbz_us": [445, 670], "db_averag": [445, 456, 670, 671], "remove_small_object": [445, 456, 670, 671], "min_km2_siz": [445, 456, 670, 671], "val_for_max_conv_rad": [445, 670], "max_conv_rad_km": [445, 670], "cs_core": 445, "nosfcecho": [445, 456, 670, 671], "weakecho": [445, 456, 670, 671], "sf": [445, 670], "conv": [445, 670], "estimate_flag": [445, 456, 670, 671], "estimate_offset": [445, 456, 670, 671], "partit": [445, 456, 468, 620], "pars": [445, 456, 615, 616, 622], "least": [445, 456, 670], "simpler": [445, 456, 670], "percentag": [445, 456], "weak": [445, 456, 670, 671], "snow": [445, 450, 456, 461, 581, 595, 615, 651, 670, 671, 672, 673], "underestim": [445, 456, 670, 671], "wih": [445, 456], "convsf_dict": [445, 670, 671], "raindrop": [445, 456, 631, 670, 671], "pacif": [445, 456, 670, 671], "warm": [445, 456, 462, 670], "pool": [445, 456, 670, 671], "implic": [445, 456, 670, 671], "appl": [445, 456, 464, 466, 468, 470, 581, 623, 670, 671, 693], "meteor": [445, 456, 464, 466, 468, 470, 581, 623, 670, 671, 682, 693], "36": [445, 456, 612, 636, 639, 642, 648, 663, 668, 670, 671, 674, 688], "847": [445, 456, 622, 670, 671], "867": [445, 456, 622, 670, 671], "0450": [445, 456, 670, 671], "036": [445, 456, 670, 671], "3c0847": [445, 456, 670, 671], "morsdo": [445, 456, 670, 671], "3e2": [445, 447, 456, 667, 670, 671], "smith": [445, 456, 670, 671], "wilheit": [445, 456, 670, 671], "zipser": [445, 456, 670, 671], "character": [445, 456, 468, 670, 671], "tropic": [445, 456, 670, 671, 673], "kwajex": [445, 456, 670, 671], "385": [445, 456, 622, 654, 665, 670, 671, 691], "415": [445, 456, 670, 671], "jam2206": [445, 456, 670, 671], "2000": [446, 471, 612, 641, 645, 688], "same_nyquist": 446, "nyquist_vector_idx": 446, "stack": [446, 612, 615, 618, 623, 692, 693], "visual": [446, 619, 620, 622, 646, 651, 659, 668, 671, 678, 695], "field_bin": [447, 667], "altitude_bin": [447, 667], "field_mask": [447, 667], "min_frac_thr": [447, 667], "contour": [447, 622, 633, 644, 665, 667, 691], "diagram": [447, 633, 666, 675, 691], "cfad": [447, 622, 633, 666, 675, 691], "1995": [447, 456, 468, 667, 670, 671], "histogram": [447, 639, 667, 686], "largest": 447, "row": [447, 612, 614, 616, 667], "creation": [447, 622], "total": [447, 462, 463, 464, 615, 618, 628, 629, 630, 631, 632, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 691], "freq_norm": [447, 667], "height_edg": [447, 667], "field_edg": [447, 667], "kinemat": [447, 470, 623, 667, 693], "microphys": [447, 612, 667], "evolut": [447, 667], "florida": [447, 616, 667], "cumulonimbu": [447, 667], "mon": [447, 667], "wea": [447, 667], "rev": [447, 667], "1941": [447, 667], "1963": [447, 667], "0493": [447, 667], "3c1941": [447, 667], "tdkame": [447, 667], "the_spectra": 448, "vel_bin": 448, "wavelength": [448, 612, 615], "left_limit": 448, "right_limit": 448, "new_spectra": 448, "new_bin": 448, "a_field": [449, 450, 453], "rr_field": [449, 450, 451, 452, 453, 454, 455], "go": [449, 450, 451, 453, 454, 461, 606, 613, 614, 619, 620, 622, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 685], "diederich": 449, "tromel": [449, 466], "2015": [449, 452, 466, 682], "wavelenght": 449, "hydrometeorologi": 449, "487": [449, 612], "502": [449, 622], "alphazr": 450, "0376": [450, 452, 453, 454], "betazr": 450, "6112": [450, 452, 453, 454], "alphaz": [450, 453, 454], "betaz": [450, 453, 454], "alphaa": [450, 453], "betaa": [450, 453], "mp_factor": 450, "hydro_field": [450, 461], "main_field": [450, 453, 454], "thresh_max": [450, 453, 454], "main": [450, 453, 454, 612, 614, 615, 616, 622, 623, 654, 693], "secondari": [450, 453, 454, 622], "besic": [450, 461], "figuera": [450, 451, 461], "ventura": [450, 461], "grazioli": [450, 461, 463], "gabella": [450, 461], "germann": [450, 461], "bern": [450, 461, 463], "statist": [450, 461, 582, 622, 623, 693], "cluster": [450, 461], "semi": [450, 461], "supervis": [450, 461], "approach": [450, 461, 612, 615, 640], "mea": [450, 461, 595, 651, 671], "4425": [450, 461], "4445": [450, 461], "5194": [450, 461, 595, 651, 671], "amt": [450, 461, 595, 651, 671], "term": [451, 622], "monitor": 451, "french": 451, "sever": [451, 614, 622, 671], "quantit": 451, "ideal": [451, 615], "quarterli": 451, "royal": 451, "2012": [451, 462, 464], "1002": [451, 622], "qj": 451, "1934": 451, "fabri": 452, "fr\u00e9d\u00e9ric": 452, "meterologi": 452, "ch": [452, 672, 674], "pg": 452, "148": 452, "165": [452, 655, 665, 691], "1017": 452, "cbo9781107707405": 452, "blend": [453, 454, 616, 659], "rain_main": [453, 454], "alphakdp": 454, "betakdp": 454, "polynomi": 455, "develop": [455, 456, 612, 616, 622, 671, 682, 692], "mcgill": [455, 682], "doell": 455, "systemat": 455, "drop": [455, 615, 616, 622], "northern": [455, 614], "germani": 455, "seven": 455, "year": [455, 612, 614, 618, 621, 635, 636], "1998": 455, "1545": [455, 622], "1556": 455, "joss": 455, "switzerland": 455, "vdf": 455, "hochschulverlag": 455, "ag": [455, 461, 672], "eth": 455, "zurich": 455, "134": [455, 612], "min_val_us": [456, 671], "binary_clos": 456, "val_for_max_rad": [456, 671], "max_rad_km": [456, 671], "core_v": [456, 671], "bkgd_val": [456, 671], "feat_val": [456, 671], "overest_field": [456, 671], "underest_field": [456, 671], "2023": [456, 618, 682], "steiner": [456, 468, 622, 670, 671], "lauratomkin": [456, 595, 622], "overestim": [456, 670, 671], "feature_dict": [456, 671], "climatolog": [456, 468, 670, 671], "gaug": [456, 468, 670, 671], "1978": [456, 468, 670, 671], "2007": [456, 468, 670, 671], "miller": [456, 595, 651, 671], "2024": [456, 610, 619, 620, 649, 671], "identif": [456, 595, 651, 671], "faint": [456, 671], "prep": [456, 671], "sonde_dset": 457, "time_kei": 457, "height_kei": 457, "nvar": 457, "vap": 457, "startard": 457, "ncvar": 457, "return_d": 457, "freq": 458, "hz": [458, 461, 657, 673], "freq_band": 458, "grid1": 459, "grid2": 459, "return_valu": 459, "displac": 459, "en": [459, 618, 622, 623, 682, 692, 693], "wikipedia": 459, "phase_correl": 459, "inspir": 459, "christoph": 459, "gohlk": 459, "lfd": 459, "uci": 459, "imreg": 459, "advect": [459, 460, 622], "trim_edg": 460, "shifted_grid": 460, "subset": [460, 606, 612, 614, 618, 622, 633, 666, 668], "hydro_nam": 461, "lr": [461, 672], "rp": [461, 672], "rn": [461, 672], "vi": [461, 672], "mh": [461, 672], "ih": [461, 672], "hdg": [461, 672], "var_nam": 461, "zh": [461, 631], "relh": 461, "mass_cent": 461, "lapse_r": 461, "entropy_field": 461, "radar_freq": [461, 673], "compute_entropi": 461, "output_dist": 461, "ndarrai": [461, 582, 690], "centroid": 461, "nclass": 461, "nvariabl": 461, "h_iso0": 461, "decai": 461, "decreas": [461, 612, 667], "celsiu": 461, "entropi": 461, "hertz": 461, "fields_dict": 461, "directionari": 461, "hydro": [461, 672, 673], "aggreg": [461, 672, 673], "crystal": [461, 672, 673], "light": [461, 631, 646, 672, 673], "rime": [461, 672], "particl": [461, 672], "wet": [461, 672, 673], "hail": [461, 618, 622, 672, 673], "densiti": [461, 612, 672, 673], "graupel": [461, 672, 673], "shannon": 461, "demix": 461, "propx": 461, "proport": [461, 462], "decomposit": 461, "gehr": 461, "praz": 461, "unravel": 461, "mixtur": 461, "4847": 461, "4866": 461, "suppli": [461, 673], "cg": 462, "backscatt": [462, 466], "clpf": 462, "length_scal": 462, "first_guess": 462, "finite_ord": 462, "fill_valu": [462, 463, 464, 468, 616, 629, 673, 684, 685, 690], "psidp_field": [462, 463, 464, 672], "verbos": [462, 622, 623, 693], "maesaka": 462, "monoton": [462, 465, 646], "propag": [462, 463, 464], "notat": 462, "dr": 462, "analys": [462, 463, 464], "cost": [462, 622], "nonlinear": 462, "conjug": 462, "gradient": [462, 622, 646], "broyden": 462, "fletcher": 462, "goldfarb": 462, "shanno": 462, "bfg": 462, "100k": 462, "consider": [462, 618, 670, 671], "parameter": 462, "attentu": 462, "constraint": 462, "bring": [462, 612], "guess": 462, "root": [462, 692, 696], "signifi": [462, 468], "everywher": 462, "exactli": [462, 620, 639], "avoid": [462, 622, 625, 696], "converg": 462, "fact": [462, 464], "closer": [462, 619], "finit": 462, "accuraci": 462, "maxit": 462, "met": 462, "achiev": 462, "somewhat": 462, "arbitrari": 462, "parallel": [462, 463, 464], "thread": [462, 616], "cpu": 462, "multiprocess": 462, "capabl": [462, 615, 686, 690], "relev": [462, 619, 620, 626], "kdp_dict": [462, 463, 464], "phidpf_dict": 462, "phidpr_dict": [462, 463, 464], "forward": [462, 592, 593], "iwanami": 462, "maki": 462, "seventh": 462, "european": 462, "confer": 462, "hydrologi": 462, "rcov": 463, "pcov": 463, "prefilter_psidp": [463, 464], "filter_opt": [463, 464], "kalman": 463, "schneeb": 463, "psidp": [463, 464], "char": [463, 464], "capit": [463, 464], "intercept": 463, "slope": 463, "3x3": 463, "4x4": 463, "filter_psidp": [463, 464, 622], "enabl": [463, 464, 615, 618, 622], "kdp_std_dict": 463, "dev": [463, 615, 618, 620, 623, 688, 693], "ensembl": 463, "52": [463, 466, 612, 615, 668], "5137": 463, "5149": 463, "1109": [463, 622], "tgr": 463, "2287017": 463, "windsiz": 464, "n_iter": 464, "vulpiani": [464, 622], "pre": [464, 619, 622, 623, 693], "advantag": 464, "eat": 464, "gianfranco": 464, "mario": 464, "montopoli": 464, "luca": 464, "delli": 464, "passeri": 464, "antonio": 464, "gioia": 464, "pietro": 464, "giordano": 464, "frank": 464, "marzano": 464, "On": [464, 613, 614], "dual": [464, 619, 622], "mountain": 464, "climatol": [464, 581, 670, 671], "51": [464, 612, 668], "405": [464, 622], "425": [464, 622], "05024": 464, "profile_field": 465, "height_field": 465, "3re": 465, "whole": [465, 622], "height_dict": 465, "profile_dict": 465, "desired_angl": [466, 622], "wanted_angl": 466, "dictonari": 466, "troemel": 466, "clim": [466, 615, 616], "2529": 466, "2548": 466, "meteorol": [466, 670, 671], "54": [466, 612, 614, 615, 636], "2344": 466, "2359": 466, "submit": [466, 616, 682], "work_level": 468, "3000": [468, 631, 684, 688], "peak_rel": 468, "area_rel": 468, "medium": 468, "bkg_rad": 468, "11000": [468, 688], "use_intens": 468, "bright": [468, 612], "sgp": [468, 561], "peaked": 468, "eclass": 468, "z_want": [470, 471, 623, 674, 693], "valid_ray_min": [470, 623, 693], "velocity_azimuth_displai": [470, 623, 693], "one_sweep_radar": 470, "extract_sweep": [470, 618, 640, 667, 670, 671, 674], "vad": [470, 471, 622, 623, 633, 666, 675, 691, 693], "amount": [470, 615, 618, 623, 671, 688, 693], "_averag1d": [470, 623, 693], "idw": 470, "brown": [470, 622, 623, 693], "wexler": [470, 623, 693], "1968": [470, 623, 693], "105": [470, 623, 674, 693], "113": [470, 623, 668, 693], "linespac": 471, "michelson": [471, 622, 682], "andersson": 471, "koistinen": [471, 682], "collier": 471, "riedl": 471, "szturc": 471, "gjertsen": 471, "nielsen": 471, "overgaard": 471, "baltex": 471, "centr": 471, "smhi": 471, "swedish": 471, "hydrolog": 471, "institut": [471, 612, 690], "norrkop": 471, "suffix": 483, "tmp": 483, "dir": 483, "temporari": [483, 622], "my_cwd": 483, "getcwd": 483, "tmpdir": 483, "_": [483, 614, 618, 619, 620, 635, 636, 672], "txt": [483, 622, 692], "wt": 483, "assert": [483, 622, 623, 693], "isfil": 483, "path_to_fil": 560, "local": [560, 613, 614, 618, 619, 622, 623, 649, 682, 692, 693], "without": [561, 575, 600, 612, 615, 622, 629, 673, 692], "site": [561, 612, 614, 615, 616, 617, 618, 619, 620, 649, 668, 685, 688, 692], "puls": [564, 615, 622, 686], "min_valu": 565, "max_valu": 565, "grid_len": 565, "sigma": [565, 566, 659, 660], "mu": [565, 566], "masked_boundari": 565, "gaussian": [565, 566, 622, 659], "dp_phase_shift": [567, 668, 684], "diff_phas": [567, 684], "differential_reflect": [567, 619, 631, 635, 652, 659, 689, 690], "rectangular": [568, 569, 616, 622], "alia": [573, 574, 616, 622], "miscellan": 575, "depreci": [575, 622], "caution": [575, 667], "radian": [576, 578, 601, 612], "std": [578, 579, 597, 603], "convolut": 580, "ndimag": [580, 622, 659, 660], "generic_filt": 580, "pi": [580, 612, 686], "std_dev": 580, "azimuth_spread": 581, "spatial_spread": 581, "spatial_rang": 581, "sphere_dist": [581, 594], "for_azimuth": [581, 594], "get_sweep_rai": 581, "subset_field": 581, "assemble_column": 581, "murphi": 581, "columnar": 581, "cvp": [581, 622], "situ": 581, "37": [581, 612, 615, 639, 668, 671, 689], "1623": 581, "1642": 581, "0011": 581, "bukov\u010di\u0107": 581, "zrni\u0107": 581, "59": [581, 612, 615, 630, 632, 643, 691], "991": [581, 622], "1009": [581, 622], "19": [581, 610, 612, 614, 615, 622, 674, 681, 690], "0140": 581, "stat": [582, 612, 622], "nvalid": 582, "az_tol": 583, "radar_rhi": 583, "target_elev": 584, "el_tol": 584, "radar_ppi": 584, "epoch": [585, 586, 587, 588, 589, 612], "max_offset": 590, "running_win_dt": 590, "deg_rng": 590, "consider_2pi_jump": 590, "is_ppi": 590, "wise": 590, "could": [590, 616, 620, 623, 636, 693], "strategi": [590, 612], "might": [590, 613, 684, 696], "goe": [590, 616], "shot": 590, "navg": 591, "nnoise_min": 591, "hildebrand": [591, 622], "sehkon": 591, "1974": 591, "spectral": [591, 612, 615, 622], "articl": 591, "peak": [591, 615, 686], "var": [591, 607, 608, 612], "varianc": [591, 640], "nnois": 591, "sekhon": [591, 622], "808": 591, "811": [591, 622], "target_latitud": [592, 605], "target_longitud": [592, 605], "bear": [592, 614], "alongitudeg": 592, "great": [592, 605], "circl": [592, 605, 670], "known": [592, 622, 623, 690, 693], "6371000": [592, 605], "calculatitude": 592, "degress": [592, 605], "further": [594, 613, 615, 619, 620, 695], "get_column_rai": 594, "mute_field": [595, 651], "mute_threshold": [595, 651], "field_threshold": [595, 651], "discern": 595, "mute": [595, 622, 633, 644, 665, 670, 671, 691], "allen": [595, 651, 671], "5515": [595, 651, 671], "5525": [595, 651, 671], "interval_min": [596, 597], "interval_max": [596, 597], "endpoint": [596, 597], "to_vpt": 598, "90": [598, 612, 614, 615, 623, 693], "verticl": 598, "radar1": 599, "radar2": 599, "tup": 600, "guarante": 600, "broadcast": 600, "broadcasted_arrai": 600, "angles1": 601, "angles2": 601, "angle1": 602, "angle2": 602, "eg": 603, "ma": [603, 623, 639, 641, 649, 667, 670, 671, 685, 689, 693], "sim_vel_field": 604, "kind": [604, 612, 620], "slinear": 604, "quadrat": 604, "cubic": 604, "interp1d": [604, 623, 693], "sim_vel": [604, 623, 693], "rng_min": 606, "rng_max": 606, "ele_min": 606, "ele_max": 606, "azi_min": 606, "azi_max": 606, "coverag": [606, 612, 622, 623, 693], "11pt": 607, "stdev": 607, "texarrai": 607, "pyradarobj": 607, "tex": 608, "single_scan": 609, "is_vpt": 609, "mislabel": 609, "properli": [609, 623, 636, 693], "releas": [610, 617, 623, 626, 682, 685, 688, 692, 693, 695], "nov": 610, "14": [610, 612, 615, 616, 618, 620, 635, 637, 646, 650, 678, 690, 691], "guid": [610, 612, 613, 622, 682, 695], "public": [610, 612, 616, 618, 620, 622, 623, 684, 685, 686, 688, 689, 690, 693], "broken": [610, 622], "aerosol": 612, "experi": 612, "depart": [612, 615, 616, 618, 684, 685, 686, 688, 689, 690], "energi": [612, 615, 616, 618, 684, 685, 686, 688, 689, 690], "iop": 612, "goal": 612, "studi": 612, "lifecycl": 612, "houston": [612, 635], "impact": [612, 618, 659], "uniqu": 612, "suit": [612, 622, 688], "seabreez": 612, "coast": [612, 616], "cleaner": [612, 689], "air": [612, 616, 620], "pollut": 612, "click": [612, 613, 620, 625], "post": [612, 614, 615, 616, 618, 620, 622, 625, 682], "overlai": 612, "texa": [612, 635], "lightn": 612, "csapr2": 612, "wildfir": 612, "smoke": 612, "entrain": 612, "juli": [612, 636], "we": [612, 614, 615, 616, 618, 620, 623, 626, 629, 631, 635, 636, 639, 645, 646, 667, 668, 670, 671, 673, 678, 684, 685, 686, 688, 689, 690, 692, 693, 694, 695, 696], "highlight": [612, 613, 616], "minut": [612, 614, 615, 619, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680], "pyart": [612, 614, 618, 620, 623, 625, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682, 684, 685, 686, 688, 689, 690, 692, 693, 695, 696], "pyplot": [612, 613, 614, 615, 616, 618, 619, 620, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 684, 685, 686, 688, 689], "plt": [612, 613, 614, 615, 616, 618, 619, 620, 622, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 684, 685, 686, 688, 689], "xr": [612, 615], "s3f": 612, "ccr": [612, 614, 616, 618, 619, 620, 635, 636, 639, 640, 648, 650, 656, 663, 668, 670, 671, 678, 685, 686, 689], "panda": [612, 615, 618, 622, 696], "pd": [612, 614, 615, 618], "kdtree": 612, "inlin": [612, 619, 659, 660], "download": [612, 613, 615, 616, 620, 622, 623, 628, 629, 630, 631, 633, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682, 693, 696], "longwav": 612, "ensur": [612, 614, 622, 631, 671, 695], "c13": 612, "denot": [612, 640], "anonym": [612, 614], "credenti": 612, "s3filesystem": 612, "day_no": 612, "168": 612, "dai": [612, 618, 619], "16th": 612, "leap": 612, "hour": [612, 616, 618, 619, 635, 636], "goes16": 612, "abi": 612, "l1b": 612, "radc": 612, "02d": [612, 619], "fi": 612, "or_abi": 612, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 612, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 612, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 612, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 612, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 612, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 612, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 612, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 612, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 612, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 612, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 612, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 612, "goes_d": 612, "open_dataset": [612, 615], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 612, "lt": [612, 615], "gt": [612, 615], "1500": [612, 684], "2500": 612, "number_of_time_bound": 612, "number_of_image_bound": 612, "num_star_look": 612, "datetime64": [612, 615, 668], "07": [612, 614, 615, 636, 643, 651, 665, 670, 671, 690, 691], "1282": 612, "1013": 612, "y_imag": 612, "08624": 612, "x_imag": 612, "03136": 612, "band_id": 612, "int8": 612, "band_wavelength": 612, "t_star_look": 612, "band_wavelength_star_look": 612, "rad": [612, 615], "dqf": 612, "time_bound": 612, "goes_imager_project": 612, "int32": [612, 690], "2147483647": 612, "y_image_bound": 612, "x_image_bound": 612, "algorithm_dynamic_input_data_contain": 612, "processing_parm_version_contain": 612, "algorithm_product_version_contain": 612, "star_id": 612, "channel_integration_tim": 612, "336": [612, 622], "channel_gain_field": 612, "naming_author": 612, "nesdi": 612, "standard_name_vocabulari": 612, "v35": 612, "commerc": 612, "production_sit": 612, "wcda": 612, "timeline_id": 612, "date_cr": 612, "12t20": 612, "09": [612, 614, 620, 632, 665, 670, 671, 691], "3z": 612, "time_coverage_start": [612, 684, 690], "time_coverage_end": [612, 684], "08": [612, 637, 665, 691], "7z": 612, "lut_filenam": 612, "spacelookparam": 612, "fm1a_cdrl79revp_pr_09_00_02": 612, "f45b564c": 612, "dcb9": 612, "498a": 612, "ac56": 612, "da80a1d735a5xarrai": 612, "datasetdimens": [612, 615], "1500x": 612, "2500number_of_time_bound": 612, "2number_of_image_bound": 612, "2band": 612, "1num_star_look": 612, "24coordin": 612, "j2000": 612, "mid": 612, "secondsstandard_nam": 612, "timeaxi": 612, "tbound": 612, "time_boundsarrai": 612, "x27": [612, 615], "537394048": 612, "float640": 612, "04432": 612, "04427unit": 612, "radaxi": 612, "ylong_nam": 612, "coordinatestandard_nam": 612, "projection_y_coordinatearrai": 612, "128212": 612, "128156": 612, "1281": 612, "04438": 612, "044324": 612, "044268": 612, "03856": 612, "03861unit": 612, "xlong_nam": 612, "projection_x_coordinatearrai": 612, "101332": 612, "101276": 612, "10122": 612, "0385": 612, "038556": 612, "038612": 612, "imagestandard_nam": 612, "projection_y_coordinateunit": 612, "yarrai": 612, "projection_x_coordinateunit": 612, "numberstandard_nam": 612, "sensor_band_identifierunit": 612, "1arrai": [612, 615], "wavelengthstandard_nam": 612, "sensor_band_central_radiation_wavelengthunit": 612, "umarrai": 612, "star": 612, "tarrai": 612, "01t11": 612, "43": [612, 615, 618], "000000000": [612, 615], "starstandard_nam": 612, "radiancesstandard_nam": 612, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 612, "12valid_rang": 612, "4094": 612, "mw": 612, "cm": [612, 660], "1resolut": 612, "000056": 612, "radgrid_map": 612, "goes_imager_projectioncell_method": 612, "pointancillary_vari": 612, "3750000": 612, "radianc": 612, "flagsstandard_nam": 612, "status_flagvalid_rang": 612, "1grid_map": 612, "pointflag_valu": 612, "flag_mean": [612, 629], "good_pixel_qf": 612, "conditionally_usable_pixel_qf": 612, "out_of_range_pixel_qf": 612, "no_value_pixel_qf": 612, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 612, "5percent_good_pixel_qf": 612, "0percent_conditionally_usable_pixel_qf": 612, "0percent_out_of_range_pixel_qf": 612, "0percent_no_value_pixel_qf": 612, "0percent_focal_plane_temperature_threshold_exceeded_qf": 612, "00": [612, 614, 615, 618, 620, 622, 632, 637, 643, 665, 675, 676, 681, 691], "326423040": 612, "748365056": 612, "projectiongrid_mapping_nam": 612, "geostationaryperspective_point_height": 612, "35786023": 612, "0semi_major_axi": 612, "6378137": 612, "0semi_minor_axi": 612, "6356752": 612, "31414inverse_flatten": 612, "298": 612, "2572221latitude_of_projection_origin": 612, "0longitude_of_projection_origin": 612, "0sweep_angle_axi": 612, "south": [612, 616, 652], "extent": [612, 614, 615, 618, 619, 640, 642], "imageunit": 612, "radarrai": 612, "12824": 612, "04424": 612, "10136": 612, "03864": 612, "nominal_satellite_subpoint_lat": 612, "nomin": 612, "subpoint": 612, "standard_nam": [612, 670, 671, 673, 685, 690], "latitudeunit": [612, 615], "degrees_northarrai": 612, "nominal_satellite_subpoint_lon": 612, "longitudeunit": [612, 615], "degrees_eastarrai": 612, "199997": 612, "nominal_satellite_height": 612, "gr": 612, "80": [612, 614, 630, 649, 663, 669], "ellipsoid": 612, "height_above_reference_ellipsoidunit": 612, "kmarrai": 612, "35786": 612, "023438": 612, "geospatial_lat_lon_ext": 612, "geospati": 612, "referencesgeospatial_westbound_longitud": 612, "152": [612, 660, 665, 671, 691], "10928geospatial_northbound_latitud": 612, "76145geospatial_eastbound_longitud": 612, "94688geospatial_southbound_latitud": 612, "57134geospatial_lat_cent": 612, "083002geospatial_lon_cent": 612, "096954geospatial_lat_nadir": 612, "0geospatial_lon_nadir": 612, "0geospatial_lat_unit": 612, "degrees_northgeospatial_lon_unit": 612, "96921e": 612, "yaw_flip_flag": 612, "spacecraft": 612, "yaw": 612, "flip": 612, "configurationvalid_rang": 612, "1flag_valu": 612, "truearrai": 612, "esun": 612, "bandpass": 612, "solar": 612, "irradi": 612, "sun": 612, "distancestandard_nam": 612, "toa_shortwave_irradiance_per_unit_wavelengthunit": 612, "um": 612, "1cell_method": 612, "meanarrai": 612, "kappa0": 612, "incom": 612, "d2": 612, "instantan": [612, 622], "divid": 612, "reflectanceunit": 612, "planck_fk1": 612, "wavenumb": 612, "c2": 612, "nu3": 612, "emiss": 612, "monochromat": 612, "nu": 612, "constantsunit": 612, "10803": 612, "299805": 612, "planck_fk2": 612, "karrai": 612, "1392": [612, 622], "73999": 612, "planck_bc1": 612, "bc_1": 612, "bc_2": 612, "planck_funct": 612, "wavenumberunit": 612, "0755": 612, "planck_bc2": 612, "99975": 612, "valid_pixel_count": 612, "condition": 612, "pixelsunit": 612, "countgrid_map": 612, "sum": [612, 621, 667], "comment": [612, 613, 629, 660, 690], "3702838": 612, "missing_pixel_count": 612, "saturated_pixel_count": 612, "satur": 612, "radiometr": 612, "geoloc": 612, "undersaturated_pixel_count": 612, "undersatur": 612, "focal_plane_temperature_threshold_exceeded_count": 612, "exceed": 612, "thresholdunit": 612, "min_radiance_value_of_valid_pixel": 612, "pixelsstandard_nam": 612, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 612, "6443": 612, "185": 612, "5699": 612, "849287": 612, "max_radiance_value_of_valid_pixel": 612, "154": [612, 656], "23053": 612, "mean_radiance_value_of_valid_pixel": 612, "197975": 612, "std_dev_radiance_value_of_valid_pixel": 612, "toa_outgoing_radiance_per_unit_wavenumberunit": 612, "standard_devi": 612, "985853": 612, "maximum_focal_plane_temperatur": 612, "focal": 612, "valuevalid_rang": 612, "951939": 612, "focal_plane_temperature_threshold_increas": 612, "bound": [612, 615, 671], "81": [612, 614, 690], "focal_plane_temperature_threshold_decreas": 612, "percent_uncorrectable_l0_error": 612, "percent": 612, "l0": 612, "errorsvalid_rang": 612, "percentgrid_map": 612, "earth_sun_distance_anomaly_in_au": 612, "anomali": [612, 671], "astronom": 612, "unitsunit": 612, "uacell_method": 612, "016543": 612, "datainput_abi_l0_data": 612, "m6_g16_s20221932006173_e20221932008557_c": 612, "ncarrai": 612, "filenamesl1b_processing_parm_vers": 612, "parm": 612, "rad_g16_v01r00": 612, "ziparrai": 612, "packag": [612, 613, 614, 615, 616, 618, 620, 622, 623, 636, 682, 685, 688, 692, 693, 695, 696], "versionalgorithm_vers": 612, "alg": 612, "rad_v01r00": 612, "zipproduct_vers": 612, "v01r00arrai": 612, "stararrai": 612, "vnir": 612, "ir": 612, "telemetryunit": 612, "countarrai": 612, "gain": [612, 615], "noaaconvent": 612, "7standard_name_vocabulari": 612, "administr": [612, 616, 635], "servicesproject": 612, "goesproduction_sit": 612, "wcdasproduction_environ": 612, "oespatial_resolut": 612, "2km": 612, "nadirmetadata_convent": 612, "discoveri": [612, 620], "0orbital_slot": 612, "eastplatform_id": 612, "g16instrument_typ": 612, "baselin": 612, "scene_id": 612, "conusinstrument_id": 612, "fm1titl": 612, "radiancessummari": 612, "digit": 612, "outgo": 612, "engin": 612, "radiancekeywords_vocabulari": 612, "nasa": 612, "master": [612, 622, 625, 660], "gcmd": 612, "scienc": [612, 616, 618, 684, 685, 686, 688, 689, 690], "0iso_series_metadata_id": 612, "a70be540": 612, "c38b": 612, "11e0": 612, "962b": 612, "0800200c9a66licens": 612, "restrict": 612, "approv": 612, "processing_level": 612, "aeronaut": 612, "l1bcdm_data_typ": 612, "imagedataset_nam": 612, "ncproduction_data_sourc": 612, "realtimetimeline_id": 612, "6date_cr": 612, "3ztime_coverage_start": 612, "3ztime_coverage_end": 612, "7zlut_filenam": 612, "637827000": 612, "h5": [612, 622], "qtableband13": 612, "fm1a_cdrl79revh_do_08_00_00": 612, "582860861": 612, "caltargettimeinterv": 612, "fm1a_cdrl79revp_do_08_00_01": 612, "611906620": 612, "bandsaturationlimit": 612, "600000000": 612, "solarspacelookparam": 612, "fm1a_adr1233_pr_09_08_25": 612, "709281036": 612, "deadrowlistparam": 612, "mirror_record": 612, "fm1a_cdrl79revg_do_07_00_00": 612, "kalmanastroconst": 612, "xml": [612, 618], "kalmanfiltercontrol": 612, "fm1a_pr_09_08_02": 612, "677650371": 612, "kalmanmeasmaxsens": 612, "fmaa_int_only_do_09_01_00": 612, "652936814": 612, "kalmanpreprocessorcontrol": 612, "fm1a_cdrl79revj_pr_09_06_02": 612, "657795700": 612, "kalmanreferencedata": 612, "888": 612, "kalmanstarcatalog": 612, "abi_navigationrdp_band13": 612, "fm1a_cdrl79revj_do_07_00_00": 612, "abi_navigationparameters_band13": 612, "fm1a_cdrl79revh_do_07_00_00": 612, "abi_resamplingimplementation_band13": 612, "fm1a_cdrl79revh_do_07_02_00": 612, "602129336": 612, "abi_resamplingparameters_band13": 612, "starlookparam": 612, "stardetectionparam": 612, "resamplingscaledconvers": 612, "fmaa_int_only_do_08_00_00": 612, "1111": [612, 615, 622], "blockreleaseregion": 612, "2222": 612, "csv": [612, 614], "ir_retrievalparamet": 612, "fm1a_cdrl79revh_do_09_01_00": 612, "652936750": 612, "radiancelut_band13": 612, "fm1a_cdrl79reve_do_08_00_00": 612, "ict_record": 612, "fm1a_tmabi_18_159_pr_09_00_02": 612, "icm_conversionconst": 612, "fm1a_cdrl43": 612, "18_do_09_01_00": 612, "icm_sensorcoeffici": 612, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 612, "676949608": 612, "h5id": 612, "da80a1d735a5": 612, "team": 612, "bobbi": [612, 639], "jackson": [612, 639], "pug": 612, "l2": [612, 622], "file_id": 612, "def": [612, 614, 618, 619, 622, 623, 646, 649, 671, 673, 693], "calculate_degre": 612, "x_coordinate_1d": 612, "y_coordinate_1d": 612, "projection_info": 612, "lon_origin": 612, "attr": 612, "longitude_of_projection_origin": 612, "perspective_point_height": 612, "semi_major_axi": 612, "r_eq": 612, "r_pol": 612, "semi_minor_axi": 612, "matric": 612, "x_coordinate_2d": 612, "y_coordinate_2d": 612, "meshgrid": [612, 639, 667], "lambda_0": 612, "a_var": 612, "b_var": 612, "c_var": 612, "r_": 612, "s_x": 612, "s_y": 612, "s_z": 612, "conu": 612, "seterr": 612, "abi_lat": 612, "arctan": 612, "abi_lon": 612, "crop": 612, "our": [612, 614, 617, 619, 629, 635, 636, 639, 646, 648, 668, 670, 671, 678, 682, 695], "circ": 612, "95": [612, 614, 668, 690], "nan_to_num": 612, "9999": [612, 690], "lat_rang": 612, "lon_rang": 612, "lat_min": 612, "lat_max": 612, "lat_min_bound": 612, "argmin": 612, "lat_max_bound": 612, "lon_min": 612, "lon_max": 612, "lon_min_bound": 612, "lon_max_bound": 612, "a1": [612, 615, 620, 629, 631, 647, 656], "disoveri": 612, "toolkit": [612, 615, 616, 618, 620, 684, 685, 686, 688, 689, 690], "5439": [612, 615, 620], "1467901": 612, "page": [612, 617, 622, 625], "block": [612, 620, 622], "autom": [612, 618, 620], "catalogu": 612, "adam": [612, 622, 629], "theisen": [612, 629], "geometri": [612, 618, 622], "cell_track_info": 612, "read_csv": [612, 614], "raw": [612, 628, 629, 630, 640], "githubusercont": 612, "com": [612, 623, 660, 692, 693, 695, 696], "adamtheisen": [612, 622], "cell": [612, 619, 620, 622, 659, 679, 695], "houcsapr": 612, "20220617": 612, "index_col": 612, "parse_d": 612, "unnam": 612, "scan_mod": [612, 615, 622], "template_nam": 612, "azimuth_min": 612, "azimuth_max": 612, "elevation_min": 612, "elevation_max": 612, "range_min": 612, "range_max": 612, "cell_azimuth": 612, "cell_rang": 612, "cell_zh": 612, "ngates_gt_0": 612, "ngates_gt_10": 612, "ngates_gt_30": 612, "ngates_gt_50": 612, "ngates_gt_10_5km": 612, "ngates_gt40_5km": 612, "03": [612, 615, 635, 665, 675, 681, 691], "hou": 612, "303": [612, 622], "74450": 612, "637207": 612, "383545": 612, "109900": 612, "297": 612, "59216": 612, "307": [612, 622], "63367": 612, "021240": 612, "988037": 612, "910767": 612, "700": [612, 615, 618, 622], "930866": 612, "78": 612, "302": 612, "64587": 612, "645874": 612, "1800": [612, 614, 684], "776333": 612, "55798": 612, "59094": 612, "97546": 612, "99744": 612, "975464": 612, "900": [612, 684], "972101": 612, "46": [612, 668], "2826": 612, "301": [612, 622], "48132": 612, "50330": 612, "648193": 612, "382324": 612, "503296": 612, "62400": 612, "327583": 612, "990": 612, "989": [612, 622], "210": [612, 671], "995": [612, 622, 631], "2827": 612, "305": [612, 622], "70007": 612, "404297": 612, "700073": 612, "13600": 612, "29": [612, 615, 649], "037998": 612, "2828": 612, "23510": 612, "26807": 612, "235107": 612, "459156": 612, "2829": 612, "296": [612, 622], "08704": 612, "306": [612, 622], "16150": 612, "999268": 612, "998291": 612, "646362": 612, "59100": 612, "882927": 612, "807": 612, "783": [612, 622], "27": [612, 616, 668], "63": [612, 690], "830": 612, "2830": 612, "05835": 612, "08032": 612, "058350": 612, "62800": 612, "198204": 612, "767": [612, 622], "76": 612, "773": [612, 622], "2831": 612, "notebook": [612, 614, 615, 619, 621, 622, 628, 629, 630, 631, 633, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 685, 688, 689, 696], "much": [612, 614, 615, 616, 618, 619, 620, 622, 667, 686, 688, 689], "frequent": 612, "start_hour": [612, 619], "end_hour": [612, 619], "utc": [612, 614, 615, 616, 619, 620, 635, 636, 649, 662], "48": [612, 614, 642], "04": [612, 615, 618, 619, 668, 681, 691], "38": [612, 615, 636], "57": [612, 670, 671], "rjackson": [612, 639], "paw": 612, "houcsapr2cfrs2": 612, "20220712": 612, "200714": 612, "easili": [612, 618], "eol": 612, "cgi": 612, "codiac": 612, "fgr_form": 612, "016": 612, "lma_d": 612, "lylout_220712_000000_86400_map500m": 612, "afternoon": 612, "203229": 612, "lylout_220617_000000_86400_map500m": 612, "radarmapdisplai": [612, 614, 618, 619, 620, 622, 635, 636, 639, 645, 650, 656, 668, 678, 680, 684, 685, 686, 688, 689], "subplot": [612, 614, 615, 616, 618, 619, 620, 622, 631, 635, 639, 645, 646, 648, 650, 662, 667, 668, 669, 670, 671, 672, 673, 674, 678, 686], "subplot_kw": 612, "disp": 612, "graph": [612, 613, 614, 615, 616, 618, 619, 620, 622, 628, 629, 630, 635, 636, 639, 640, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 678, 679, 680, 684, 685, 686, 688, 689], "150": [612, 613, 655, 673, 686], "plot_ppi_map": [612, 614, 618, 619, 620, 622, 635, 636, 639, 650, 656, 668, 678, 685, 686, 689], "flash_tim": 612, "squeez": [612, 684], "argwher": [612, 639], "logical_and": [612, 639], "flash_time_start": 612, "17t20": 612, "flash_center_longitud": 612, "flash_center_latitud": 612, "set_xlim": [612, 663, 667, 672], "96": [612, 614, 615, 639, 682, 689], "94": [612, 690], "set_ylim": [612, 663, 667, 672], "deprecationwarn": [612, 688], "escap": 612, "sequenc": [612, 616], "xf": 612, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 612, "ipykernel_41252": 612, "2371313213": 612, "opt": [612, 613, 615, 616, 622], "anaconda3": [612, 615, 616, 682, 685, 688, 692, 696], "env": [612, 613, 615, 616, 618, 620, 622, 682, 685, 688, 696], "pyart_env2": 612, "lib": [612, 615, 616, 618, 620, 685, 688, 692], "python3": [612, 615, 616, 618, 620, 621], "mpl": [612, 622, 672, 685, 688], "gridlin": [612, 616, 618, 650], "451": [612, 615], "userwarn": [612, 620], "xlabels_top": [612, 616], "deprec": [612, 616, 625, 685, 688], "top_label": [612, 618, 650], "toggl": [612, 622], "visibl": [612, 616, 622], "ylabels_right": [612, 616], "right_label": [612, 618, 650], "strike": 612, "overlaid": 612, "csapr_rhi": 612, "203012": 612, "flash_alt": 612, "flash_init_altitud": 612, "flash_lon": 612, "flash_init_longitud": 612, "flash_lat": 612, "flash_init_latitud": 612, "rhi_lon": 612, "flatten": [612, 639], "rhi_lat": 612, "rhi_alt": 612, "kdtree_data": 612, "inp_data": 612, "where_in_rhi": 612, "flash_rang": 612, "1e3": [612, 649], "motiv": [613, 616], "blog": [613, 618, 622, 623, 693], "come": [613, 616, 670], "colorschem": 613, "vision": 613, "defici": 613, "illustr": 613, "collabor": 613, "contributor": [613, 625, 682, 694, 695], "guidenc": 613, "ve": [613, 619], "trip": [613, 689], "me": 613, "assist": 613, "https_link_to_your_fork": 613, "unfamiliar": 613, "yml": [613, 622, 682, 696], "slightli": [613, 616, 650], "latest": [613, 622, 623, 682, 693], "button": [613, 617, 625], "kshrc": 613, "export": [613, 692, 696], "pip": [613, 623, 692, 693, 695, 696], "checkout": [613, 623, 625, 693], "newblog_post": 613, "plot_ppi_mdv": [613, 655, 665, 691], "radardisplai": [613, 614, 615, 620, 622, 628, 629, 630, 640, 646, 647, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 664, 667, 669, 672, 673], "jonathan": [613, 628, 630, 641, 642, 652, 653, 655, 657, 661, 664, 696], "helmu": [613, 616, 618, 623, 628, 630, 641, 642, 652, 653, 655, 657, 661, 664, 682, 684, 685, 686, 688, 689, 690, 693, 696], "jhelmu": [613, 622, 628, 630, 641, 642, 652, 653, 655, 657, 661, 664], "anl": [613, 628, 630, 635, 636, 639, 641, 642, 646, 647, 648, 650, 652, 653, 654, 655, 657, 659, 660, 661, 662, 664, 668, 669, 678, 679, 680], "licens": [613, 623, 628, 629, 630, 635, 636, 639, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 674, 678, 679, 680, 682, 693], "bsd": [613, 623, 628, 629, 630, 635, 636, 639, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 674, 678, 679, 680, 682, 693], "claus": [613, 623, 628, 629, 630, 635, 636, 639, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 674, 678, 679, 680, 693], "get_test_data": [613, 628, 630, 639, 641, 642, 646, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 678, 679, 680, 695], "110635": [613, 641, 655, 688], "figsiz": [613, 614, 615, 616, 618, 619, 620, 628, 630, 631, 635, 636, 639, 640, 645, 646, 648, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 669, 670, 671, 672, 673, 678, 685, 686, 688, 689], "add_subplot": [613, 628, 630, 640, 641, 642, 652, 653, 654, 655, 657, 658, 659, 660, 661, 664, 673], "111": [613, 614, 616, 619, 620, 639, 641, 642, 650, 653, 654, 655, 659, 660, 661, 668], "get_cmap": [613, 651, 670, 671], "jet": 613, "colorbind": 613, "plot_rhi_cfradial_singlescan": [613, 658, 665, 691], "panel": [613, 620, 633, 644, 665, 667, 691], "sgpxsaprrhicmaci5": [613, 657, 658, 662, 667], "c0": [613, 628, 657, 658, 662, 667, 685], "20110524": [613, 657, 658, 662, 667], "015604_nc4": [613, 657, 658, 662, 667], "read_cfradi": [613, 628, 639, 642, 648, 657, 658, 662, 667, 672, 673, 674], "subplots_adjust": [613, 615, 646, 657, 658], "hspace": [613, 615, 657, 658], "xlabel": [613, 615, 639, 657, 658, 686], "ylabel": [613, 615, 639, 657, 658, 686], "stage": 613, "my": [613, 692], "untrack": [613, 623, 693], "blog_pr": 613, "restor": 613, "discard": 613, "_static": 613, "As": [613, 615, 619, 623, 684, 686, 688, 689, 693], "statement": [613, 619, 622, 623, 693], "hint": [613, 616, 624], "wait": [613, 616], "editor": [613, 621, 623, 693, 696], "enh": [613, 622], "abort": 613, "person": 613, "addition": [613, 616], "anyon": 613, "respond": 613, "walk": [614, 615, 618, 619, 620, 621], "septemb": 614, "2021": [614, 670, 671], "thunderstorm": 614, "southern": 614, "wisconsin": [614, 622], "illinoi": 614, "trail": 614, "damag": [614, 618], "milwauke": [614, 618], "madison": 614, "imageri": [614, 618], "russ": 614, "schumach": 614, "colorado": 614, "unvers": 614, "put": 614, "togeth": [614, 615, 616, 622], "hi": [614, 671], "glob": [614, 615, 618, 619, 620, 623, 649, 693], "math": 614, "atan2": 614, "tempfil": 614, "cfeatur": [614, 616, 618, 619, 620], "mcolor": [614, 616, 651, 670, 671], "mdate": 614, "uscounti": [614, 618, 619], "imageio": 614, "pytz": [614, 622, 649], "temploc": 614, "mkdtemp": 614, "filterwarn": [614, 615, 616, 618, 619, 639], "let": [614, 615, 616, 617, 619, 620, 622, 623, 629, 635, 636, 639, 646, 649, 650, 667, 668, 670, 671, 673, 678, 684, 686, 688, 689, 690, 693, 696], "machin": [614, 615, 618, 620, 696], "kmkx": [614, 618], "nexrad_path": [614, 649], "level2": [614, 618, 619, 622, 635, 636, 649, 651, 670, 671], "d_": [614, 649], "kmkx20210907_170101_v06": 614, "kmkx20210907_170739_v06": 614, "kmkx20210907_171431_v06": 614, "kmkx20210907_172123_v06": 614, "kmkx20210907_172814_v06": 614, "kmkx20210907_173452_v06": 614, "kmkx20210907_174130_v06": 614, "kmkx20210907_174807_v06": 614, "kmkx20210907_175459_v06": 614, "kmkx20210907_175459_v06_mdm": 614, "read_nexrad_arch": [614, 618, 619, 635, 636, 649, 651, 652, 653, 670, 671], "possibli": 614, "add_featur": [614, 616, 618, 619, 620], "pyart_chasespectr": [614, 618, 619, 620, 679, 680, 695], "70": [614, 615, 618, 635, 639, 648, 680], "set_ext": 614, "easier": [614, 615, 616], "scroll": 614, "radar_id": 614, "timestamp": [614, 615], "tz_local": 614, "later": [614, 616, 685, 688], "interfac": [614, 620, 622, 695], "conn": 614, "nexradawsinterfac": 614, "get_avail_scans_in_rang": 614, "len": [614, 619, 646, 662, 672, 684], "kmkx20210907_151132_v06": 614, "kmkx20210907_152621_v06": 614, "kmkx20210907_150152_v06": 614, "kmkx20210907_151622_v06": 614, "kmkx20210907_152121_v06": 614, "kmkx20210907_150642_v06": 614, "kmkx20210907_155424_v06_mdm": 614, "kmkx20210907_153610_v06": 614, "kmkx20210907_154814_v06": 614, "kmkx20210907_155424_v06": 614, "kmkx20210907_154205_v06": 614, "kmkx20210907_160034_v06": 614, "kmkx20210907_160607_v06": 614, "kmkx20210907_161141_v06": 614, "kmkx20210907_163532_v06": 614, "kmkx20210907_161714_v06": 614, "kmkx20210907_162924_v06": 614, "kmkx20210907_164816_v06": 614, "kmkx20210907_165433_v06": 614, "kmkx20210907_165433_v06_mdm": 614, "kmkx20210907_162247_v06": 614, "kmkx20210907_153134_v06": 614, "kmkx20210907_164149_v06": 614, "kmkx20210907_182057_v06": 614, "kmkx20210907_182749_v06": 614, "kmkx20210907_184048_v06": 614, "kmkx20210907_180841_v06": 614, "kmkx20210907_183440_v06": 614, "kmkx20210907_185431_v06_mdm": 614, "kmkx20210907_181448_v06": 614, "kmkx20210907_180150_v06": 614, "kmkx20210907_185431_v06": 614, "kmkx20210907_190109_v06": 614, "kmkx20210907_190703_v06": 614, "kmkx20210907_193238_v06": 614, "kmkx20210907_191951_v06": 614, "kmkx20210907_191327_v06": 614, "kmkx20210907_195642_v06": 614, "kmkx20210907_194459_v06": 614, "kmkx20210907_195642_v06_mdm": 614, "kmkx20210907_193849_v06": 614, "kmkx20210907_184739_v06": 614, "kmkx20210907_192614_v06": 614, "kmkx20210907_195056_v06": 614, "now": [614, 615, 616, 618, 619, 620, 622, 629, 636, 639, 640, 646, 650, 668, 670, 671, 678, 684, 686, 692, 695], "predict": 614, "tornado": [614, 618], "offic": [614, 616, 618, 684, 685, 686, 688, 689, 690], "acces": 614, "internet": 614, "wcm": 614, "2021_wind": 614, "read_spc_report": 614, "start_tim": 614, "end_tim": 614, "hazard": 614, "timezon": [614, 649], "gmt": 614, "torn": 614, "df": 614, "datafram": 614, "conver": 614, "to_datetim": [614, 615, 618], "set_index": 614, "inplac": 614, "ambigu": 614, "nat": 614, "nonexist": 614, "shift_forward": 614, "tz_convert": 614, "timedelta": [614, 618, 619], "wind_report": 614, "tornado_report": 614, "hail_report": 614, "om": 614, "yr": 614, "mo": 614, "st": 614, "stf": 614, "stn": 614, "elon": 614, "wid": 614, "sn": 614, "sg": 614, "f1": 614, "f2": 614, "f3": 614, "f4": 614, "657521": 614, "tx": 614, "7500": [614, 684], "331": [614, 622], "657522": 614, "4300": 614, "657523": 614, "0500": 614, "167": 614, "657524": 614, "0200": 614, "657525": 614, "1595": 614, "663777": 614, "sc": 614, "0100": [614, 620], "663778": 614, "663779": 614, "2200": 614, "663780": 614, "1900": 614, "49": [614, 615], "663781": 614, "1100": [614, 622], "6261": 614, "gc_latlon_bear_dist": 614, "lat1": 614, "lon1": 614, "decim": 614, "lat2": 614, "lon2": 614, "lat1r": 614, "deg2rad": 614, "lon1r": 614, "bearr": 614, "lat2r": 614, "lon2r": 614, "rad2deg": [614, 674], "add_scale_lin": 614, "fontsiz": [614, 615, 616, 619, 620, 628, 630, 646, 650, 659, 660], "fontweight": 614, "zoom": [614, 615], "black": [614, 622, 648, 667, 668], "frac_lat": 614, "frac_lon": 614, "e1": 614, "get_ext": 614, "center_lon": 614, "center_lat": 614, "shorten": 614, "hash": [614, 625], "lat1a": 614, "lon1a": 614, "lat1b": 614, "lon1b": 614, "lat2a": 614, "lon2a": 614, "lat2b": 614, "lon2b": 614, "horizontalalign": 614, "verticalalign": 614, "enumer": [614, 619], "iter_success": 614, "mdm": [614, 619], "this_tim": 614, "open_pyart": 614, "map_panel_ax": [614, 663], "x_cut_panel_ax": [614, 663], "y_cut_panel_ax": [614, 663], "masking_data_with_gatefilt": [614, 622], "ax1": [614, 615, 620, 628, 630, 648, 663, 664, 667, 670, 671, 673, 678], "add_ax": [614, 663], "recogniz": 614, "with_scal": 614, "500k": 614, "grai": [614, 616, 618, 650, 651, 667], "plot_colorbar": 614, "pad": [614, 619], "plot_range_r": [614, 622, 640, 653, 654, 656], "dash": [614, 616, 660], "set_xtick": [614, 667, 685, 688], "arang": [614, 620, 623, 639, 656, 659, 660, 667, 668, 672, 673, 674, 693], "set_ytick": [614, 667, 685, 688], "wind_reports_now": 614, "slon": 614, "tolist": 614, "slat": 614, "facecolor": [614, 616, 618], "deepskyblu": 614, "tornado_reports_now": 614, "tab": [614, 625, 648], "red": [614, 659, 660, 673], "hail_reports_now": 614, "lawngreen": 614, "legend": [614, 618, 619, 620, 648], "savefig": [614, 616, 618, 619], "_dz_rpt": 614, "bbox_inch": [614, 619], "tight": [614, 619], "white": [614, 616, 659, 673], "mp4": 614, "map_imag": 614, "gif_titl": 614, "delet": [614, 622, 623, 650, 693], "gif": 614, "get_writ": 614, "fp": 614, "writer": [614, 622], "imread": 614, "append_data": 614, "ffmpeg_writ": 614, "divis": [614, 622], "macro_block_s": 614, "resiz": 614, "1930": 614, "1766": 614, "1936": 614, "1776": 614, "video": 614, "codec": 614, "player": 614, "incompat": [614, 622, 626], "ipython": [614, 618, 619, 621, 696], "browser": 614, "event": [614, 619, 620, 670, 671], "overview": [614, 617, 625], "retrospect": 614, "ecosystem": 615, "By": [615, 616, 620, 626], "learn": [615, 619, 682], "portal": [615, 616], "march": [615, 618, 635], "shown": [615, 619, 646, 695], "offici": [615, 623, 693], "probe": 615, "millimet": 615, "ghz": 615, "purpos": [615, 616, 670, 671, 695], "nearli": [615, 659], "bokeh": 615, "formatt": 615, "datetimetickformatt": 615, "hv": 615, "guckazrcfrgem1": 615, "20220314": [615, 673], "000003": 615, "0x7f7dbd517400": 615, "linear_depolarization_ratio": 615, "mean_doppler_velocity_crosspolar_v": 615, "reflectivity_crosspolar_v": 615, "signal_to_noise_ratio_copolar_h": [615, 620], "signal_to_noise_ratio_crosspolar_v": 615, "spectral_width": 615, "spectral_width_crosspolar_v": 615, "vertical": 615, "awai": [615, 616, 647], "pyart_bal": [615, 616, 620, 639, 662, 678, 686], "substanti": 615, "211": [615, 664], "ax2": [615, 620, 628, 630, 639, 648, 663, 664, 667, 669, 670, 671, 673, 678, 686], "212": [615, 664], "pangeo": 615, "1736": 615, "600": [615, 684], "r_calib": 615, "14t00": 615, "489e": 615, "806e": 615, "107": 615, "886e": 615, "command_lin": 615, "kazrcfr_ingest": 615, "guc": 615, "m1": 615, "process_vers": 615, "kazrcfr": 615, "el7": 615, "dod_vers": 615, "kazrcfrg": 615, "input_sourc": 615, "guckazrm1": 615, "kazr_moments_": 615, "site_id": 615, "software_vers": 615, "wed": 615, "mar": 615, "leachman": 615, "1498936": 615, "histori": [615, 690], "dsmgr": 615, "procnode2": 615, "1736rang": 615, "600frequenc": 615, "1sweep": 615, "1r_calib": 615, "1coordin": 615, "453818": 615, "startstandard_nam": 615, "timearrai": 615, "453818000": 615, "527426000": 615, "601027000": 615, "002026000": 615, "075634000": 615, "149219000": 615, "float323": 615, "10long_nam": 615, "transmit": [615, 686], "frequencyunit": 615, "hzstandard_nam": 615, "radiation_frequencymeta_group": 615, "instrument_parametersarrai": 615, "float32100": 615, "130": 615, "803e": 615, "04long_nam": 615, "volumeunit": 615, "mmeters_between_g": 615, "979246meters_to_center_of_first_g": 615, "679245spacing_is_const": 615, "truestandard_nam": 615, "projection_range_coordinateaxi": 615, "radial_range_coordinatearrai": 615, "679245": 615, "6585": 615, "160": [615, 674, 688], "63774": 615, "17998": 615, "18028": 615, "268": 615, "18058": 615, "248": 615, "northunit": 615, "degreestandard_nam": 615, "sensor_to_target_azimuth_angleaxi": 615, "radial_azimuth_coordinatearrai": 615, "planeunit": 615, "sensor_to_target_elevation_angleaxi": 615, "radial_elevation_coordinatearrai": 615, "00long_nam": 615, "epochancillary_vari": 615, "time_offsetarrai": 615, "base_timeancillary_vari": 615, "base_timearrai": 615, "unspecifiedunit": 615, "dbstandard_nam": 615, "radar_linear_depolarization_ratiounpacking_detail": 615, "unpack": 615, "pack": [615, 622], "1041600": 615, "motion": 615, "instrumentunit": 615, "sstandard_nam": 615, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 615, "crosspolar": 615, "channelunit": 615, "factorunit": 615, "dbzstandard_nam": 615, "equivalent_reflectivity_factorunpacking_detail": 615, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 615, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 615, "widthunit": 615, "radar_doppler_spectrum_widthunpacking_detail": 615, "angleunit": 615, "degreearrai": 615, "n_sampl": 615, "momentsunit": 615, "1meta_group": 615, "instrument_parametersstandard_nam": 615, "number_of_samples_used_to_compute_momentsarrai": 615, "noise_figur": 615, "methodunit": 615, "dbarrai": 615, "67": [615, 670, 671], "8043": 615, "unambigu": [615, 690], "velocityunit": 615, "smeta_group": 615, "968252": 615, "repetit": 615, "timeunit": 615, "sarrai": 615, "00027": 615, "transmitt": 615, "r_calib_radar_constant_copol": 615, "copolarunit": 615, "dbmeta_group": 615, "radar_calibrationstandard_nam": 615, "calibrated_radar_constant_h_channelarrai": 615, "996191": 615, "r_calib_radar_constant_crosspol": 615, "crosspolarunit": 615, "405288": 615, "r_calib_two_way_radome_loss_h": 615, "radom": 615, "loss": 615, "radar_calibration_two_way_radome_loss_h_channelarrai": 615, "half": 615, "radar_measured_sky_noise_h": 615, "sky": 615, "dbmarrai": 615, "69": [615, 631, 656], "03703": 615, "035995": 615, "0373": 615, "03814": 615, "05106": 615, "05984": 615, "radar_measured_sky_noise_v": 615, "radar_measured_transmit_pow": 615, "powerunit": 615, "dbmmeta_group": 615, "radar_transmit_powerarrai": 615, "143": [615, 674], "receiver_gain_copol": 615, "copolunit": 615, "sweepunit": 615, "1735": 615, "s22": 615, "basedunit": 615, "unambiguous_rang": [615, 690], "rangeunit": 615, "mmeta_group": 615, "unambiguous_rangearrai": 615, "40479": 615, "477": [615, 622], "degree_nstandard_nam": 615, "latitudevalid_min": 615, "0valid_max": 615, "0arrai": 615, "956158": 615, "degree_estandard_nam": 615, "longitudevalid_min": 615, "106": 615, "987854": 615, "altitudeunit": 615, "mstandard_nam": 615, "altitudearrai": 615, "2886": 615, "levelunit": 615, "heightarrai": 615, "m1convent": 615, "radar_calibrationprocess_vers": 615, "el7dod_vers": 615, "1input_sourc": 615, "kazr_moments_20220314": 615, "000005": 615, "datsite_id": 615, "gucplatform_id": 615, "kazrcfrgefacility_id": 615, "m1data_level": 615, "a1location_descript": 615, "laboratori": [615, 619], "sail": 615, "mt": 615, "crest": 615, "butt": [615, 616], "coloradodatastream": 615, "a1antenna_altitud": 615, "mantenna_diamet": 615, "mcomment": 615, "digital_rx_dec": 615, "24dualpol": 615, "0fft_len": 615, "512filter_length": 615, "67institut": 615, "radiat": [615, 616, 618, 620, 623, 682, 684, 685, 686, 688, 689, 690, 693], "research": [615, 616, 618, 623, 682, 684, 685, 686, 688, 689, 690, 693], "facilityn_g": 615, "1024num_spectral_averag": 615, "15pulse_compression_ratio": 615, "3range_gate_spacing_m": 615, "979246range_offset_ch1": 615, "mrange_offset_ch2": 615, "mscan_mod": 615, "pointingscan_nam": 615, "vptsoftware_vers": 615, "leachmantitl": 615, "momentsdoi": 615, "1498936histori": 615, "isel": 615, "coupl": [615, 620], "extra": [615, 618, 622], "won": [615, 619], "600rang": 615, "600coordin": 615, "395940000": 615, "469427000": 615, "542946000": 615, "360000": 615, "quadmesh": [615, 616], "0x7f7dad654f10": 615, "meant": [615, 617, 619], "popular": [615, 618], "jump": 615, "bar": 615, "hover": 615, "inspect": 615, "clabel": [615, 659, 660], "xformatt": 615, "ref_plot": 615, "7000": [615, 688], "platform_id": 615, "location_descript": 615, "xtick": [615, 685, 688], "ytick": [615, 685, 688], "vel_plot": 615, "prepar": [615, 616, 618, 620, 623, 684, 685, 686, 688, 689, 690, 693, 695], "plot1": 615, "plot2": 615, "datashad": 615, "lazili": 615, "coars": 615, "intial": 615, "unfortun": 615, "ref_plot_rast": 615, "param": [615, 622], "dynamic_oper": 615, "outofboundsdatetim": 615, "nanosecond": 615, "54168": 615, "invok": 615, "x_rang": 615, "13t23": 615, "417014000": 615, "579705000": 615, "y_rang": 615, "traceback": 615, "recent": [615, 619, 622, 696], "mgrover": [615, 618, 620, 635, 639, 646, 647, 648, 654, 662, 668, 669, 678, 679, 680], "277": [615, 622], "get_plot_fram": 615, "map_obj": 615, "1344": 615, "val": 615, "_execute_callback": 615, "tuple_kei": 615, "retval": 615, "callback": 615, "arg": 615, "708": 615, "__call__": 615, "ret": 615, "__init__": [615, 623, 693], "1043": [615, 622], "obj": 615, "resolv": [615, 622], "1032": [615, 622], "1044": 615, "1036": 615, "_process": 615, "1018": [615, 622], "process_el": 615, "194": 615, "_appli": 615, "141": 615, "1514": 615, "predic": [615, 620], "pipelined_fn": 615, "method_fn": 615, "1223": 615, "super": [615, 653, 685, 688], "710": [615, 622], "map_fn": 615, "214": 615, "1133": [615, 622], "astyp": 615, "int64": [615, 629], "1497": [615, 622], "apply_ufunc": 615, "1159": 615, "apply_dataarray_vfunc": 615, "286": [615, 622], "result_var": 615, "data_var": 615, "750": [615, 622], "apply_variable_ufunc": 615, "as_compatible_data": 615, "234": 615, "_possibly_convert_object": 615, "178": 615, "asarrai": 615, "ravel": 615, "reshap": 615, "sanitize_arrai": 615, "567": [615, 622], "subarr": 615, "_try_cast": 615, "raise_cast_failur": 615, "726": [615, 622], "sanitize_to_nanosecond": 615, "arr": 615, "cast": 615, "1717": 615, "ensure_datetime64n": 615, "_lib": 615, "tslib": 615, "pyx": [615, 622], "257": 615, "np_datetim": 615, "120": [615, 684], "check_dts_bound": 615, "saw": 615, "few": [615, 622, 625, 696], "pro": 615, "con": 615, "thing": [615, 623, 693], "clear": [615, 620], "push": [615, 622, 623, 625, 693], "share": 615, "ran": [615, 623, 693], "shareabl": 615, "workflow": [615, 618, 622, 695], "mb": [615, 632, 637, 643, 665, 675, 676, 681, 691], "difficult": [615, 639], "jupyterbook": 615, "jupyt": [615, 618, 622, 628, 629, 630, 631, 633, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 696], "campaign": [615, 620, 671], "twitter": 616, "nou": 616, "dryglick": 616, "notic": [616, 620, 622, 639, 650], "odd": 616, "directli": [616, 646, 695], "grei": 616, "darker": 616, "moir\u00e9": 616, "ryan": 616, "dopplershift": [616, 622], "turbul": 616, "ncei": 616, "search": [616, 682, 692], "aw": [616, 618, 622, 633, 634, 636, 637, 691], "mention": [616, 622, 623, 682, 693, 695, 696], "he": 616, "n0u": [616, 635], "elgin": 616, "panhandl": 616, "kevx": 616, "1458": 616, "octob": 616, "landfal": 616, "gulf": 616, "lookl": 616, "webpag": 616, "cart": 616, "sent": 616, "email": [616, 620, 622], "websit": 616, "ftp": 616, "unzip": [616, 618], "kmob_sdus54_n0uevx_201810101458": 616, "partli": [616, 618, 684, 685, 686, 688, 689, 690], "facil": [616, 618, 619, 620, 623, 682, 684, 685, 686, 688, 689, 690, 693], "cite": [616, 618, 620, 622, 684, 685, 686, 688, 689, 690], "jj": [616, 618, 684, 685, 686, 688, 689, 690], "sm": [616, 618, 684, 685, 686, 688, 689, 690], "colli": [616, 618, 623, 682, 684, 685, 686, 688, 689, 690, 693], "jor": [616, 618, 623, 682, 684, 685, 686, 688, 689, 690, 693], "5334": [616, 618, 623, 682, 684, 685, 686, 688, 689, 690, 693], "119": [616, 618, 623, 636, 682, 684, 685, 686, 688, 689, 690, 693], "read_level3": 616, "dark": 616, "dark_background": [616, 649], "okai": 616, "88": [616, 618, 619, 668], "83": 616, "31msignatur": [616, 620], "0m": [616, 618, 620], "0mdisplai": 616, "34m": [616, 620], "0mplot_ppi_map": 616, "0mfield": 616, "0msweep": 616, "36m0": 616, "0mmask_tupl": 616, "32mnone": [616, 620], "0mvmin": 616, "0mvmax": 616, "0mcmap": 616, "0mnorm": 616, "0mmask_outsid": 616, "32mfals": 616, "0mtitl": 616, "0mtitle_flag": 616, "32mtrue": 616, "0mcolorbar_flag": 616, "0mcolorbar_label": 616, "0max": 616, "0mfig": 616, "0mlat_lin": 616, "0mlon_lin": 616, "0mproject": 616, "0mmin_lon": 616, "0mmax_lon": 616, "0mmin_lat": 616, "0mmax_lat": 616, "0mwidth": 616, "0mheight": 616, "0mlon_0": 616, "0mlat_0": 616, "0mresolut": 616, "0mshapefil": 616, "0mshapefile_kwarg": 616, "0medg": 616, "0mgatefilt": 616, "0mfilter_transit": 616, "0membelish": 616, "0mraster": 616, "0mtick": 616, "0mticklab": 616, "0malpha": 616, "31msourc": 616, "32mdef": 616, "0mself": 616, "embelish": [616, 622], "31m": 616, "0mparse_vmin_vmax": 616, "0m_radar": 616, "0mparse_cmap": 616, "32mif": 616, "32mi": 616, "0mnp": 616, "0marang": 616, "36m30": 616, "36m46": 616, "36m1": 616, "36m110": 616, "36m75": 616, "0mloc": 616, "0mdata": 616, "0m_get_data": 616, "0mx": 616, "0my": 616, "0m_get_x_i": 616, "0mma": 616, "0mmasked_outsid": 616, "0mplt": 616, "0mgcf": 616, "32mnot": 616, "0mhasattr": 616, "32mels": 616, "0mcartopi": 616, "0mcr": 616, "0mlambertconform": 616, "0mcentral_longitud": 616, "0mcentral_latitud": 616, "0mwarn": 616, "overrid": [616, 660], "lambert": [616, 622], "0muserwarn": 616, "0mset_ext": 616, "0mplatecarre": 616, "32melif": 616, "36m2": 616, "0mgrid_project": 616, "0mpm": 616, "0mpcolormesh": 616, "36m1000": 616, "0mtransform": 616, "graphic": 616, "0mset_raster": 616, "admin": [616, 623, 693], "0mstates_provinc": 616, "0mfeatur": 616, "0mnaturalearthfeatur": 616, "0mcategori": 616, "cultur": 616, "0mname": 616, "admin_1_states_provinces_lin": 616, "0mscale": 616, "0mfacecolor": 616, "0mcoastlin": 616, "0madd_featur": 616, "0medgecolor": 616, "pose": 616, "difficulti": 616, "spectif": 616, "32min": 616, "0mmercat": 616, "0mgl": 616, "0mgridlin": 616, "0mxloc": 616, "0myloc": 616, "0mdraw_label": 616, "0mxlabels_top": 616, "0mylabels_right": 616, "0misinst": 616, "0mfigur": 616, "0mcanva": 616, "0mdraw": 616, "maker": 616, "0mxaxi": 616, "0mset_major_formatt": 616, "0mmpl": 616, "0mlongitude_formatt": 616, "0myaxi": 616, "0mlatitude_formatt": 616, "0m_lambert_gridlin": 616, "0mlambert_xtick": 616, "0mlambert_ytick": 616, "32mfrom": 616, "0mio": 616, "0mshaperead": 616, "32mimport": 616, "0mreader": 616, "0madd_geometri": 616, "0mgeometri": 616, "0m_set_titl": 616, "0mplot": 616, "0mappend": 616, "0mplot_var": 616, "0mplot_colorbar": 616, "0mmappabl": 616, "0mlabel": 616, "32mreturn": 616, "31mfile": [616, 620], "git_repo": 616, "31mtype": [616, 620], "fashion": 616, "0marg": 616, "0mshade": 616, "0mantialias": 616, "0mkwarg": 616, "31mdocstr": [616, 620], "pseudocolor": 616, "signatur": [616, 618], "quadrilater": 616, "pcolor": 616, "prefer": [616, 622, 692], "shade": [616, 622], "flat": [616, 635], "gouraud": 616, "cari": 616, "expand": 616, "rc": 616, "regist": [616, 620], "canon": 616, "chosen": 616, "patch": [616, 659], "force_edgecolor": 616, "singular": [616, 619], "solid": [616, 660], "quad": 616, "halfwai": 616, "galleri": [616, 622, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682, 691], "images_contours_and_field": 616, "pcolormesh_grid": 616, "snap": 616, "mesh": 616, "misc": [616, 622], "rasterization_demo": 616, "constructor": 616, "agg_filt": 616, "anim": 616, "antialias": [616, 659, 660], "aa": 616, "capstyl": 616, "clip_box": 616, "bbox": 616, "clip_on": 616, "clip_path": 616, "rgba": 616, "ec": 616, "fc": 616, "gid": 616, "hatch": 616, "in_layout": 616, "joinstyl": 616, "miter": 616, "bevel": 616, "thereof": 616, "offset_transform": 616, "path_effect": 616, "abstractpatheffect": 616, "picker": 616, "pickradiu": 616, "sketch_param": 616, "random": [616, 620], "zorder": 616, "imshow": [616, 622, 640, 641, 642, 646], "_ax": 616, "nrow": [616, 646], "ncolumn": 616, "_differ": 616, "li": 616, "handl": [616, 622], "polycollect": 616, "thu": [616, 625], "almost": 616, "slight": 616, "polygon": 616, "irrespect": 616, "One": [616, 619, 623, 684, 690, 693, 696], "masked_arrai": [616, 629, 673, 684, 690], "1e": [616, 673, 684, 690], "next": [616, 618, 625, 629, 635, 667], "get_gate_lat_lon_alt": [616, 620, 622], "565": [616, 622], "562763": 616, "560526": 616, "888458": 616, "886227": 616, "883991": 616, "562765": 616, "560532": 616, "892834": 616, "890606": 616, "888374": 616, "562769": 616, "56054": 616, "898003": 616, "89578": 616, "893553": 616, "562756": 616, "560509": 616, "880096": 616, "877857": 616, "875618": 616, "560513": 616, "881853": 616, "879616": 616, "877377": 616, "56276": 616, "560518": 616, "884874": 616, "88264": 616, "880404": 616, "92199": 616, "92222": 616, "92245": 616, "186806": 616, "18703": 616, "18723": 616, "922264": 616, "92254": 616, "2396": 616, "23986": 616, "24012": 616, "92231": 616, "92263": 616, "29231": 616, "29262": 616, "29292": 616, "92208": 616, "92218": 616, "02802": 616, "02811": 616, "0282": 616, "92212": 616, "92226": 616, "07571": 616, "07583": 616, "07595": 616, "922356": 616, "133934": 616, "1341": [616, 622], "13428": 616, "setup": [616, 620, 622, 635, 639, 646, 648, 654, 668, 682, 692], "geoaxi": 616, "border": [616, 659], "cbar": [616, 619, 650], "tick_param": [616, 673], "labels": 616, "set_label": [616, 619, 650], "gl": [616, 618, 650], "draw_label": [616, 618, 650], "xlabel_styl": [616, 650], "ylabel_styl": [616, 650], "kevz_velocity_2018_10_10_1458": 616, "specifici": 616, "pull": [616, 619, 622, 623, 624, 625, 636, 693], "pr": [616, 625], "importantli": 616, "api": [616, 622, 682, 695], "abil": [616, 622, 682, 696], "arguement": 616, "appreci": [616, 682], "hello": 617, "welcom": [617, 695], "narr": 617, "feedback": [617, 695], "feel": 617, "know": [617, 619, 620, 696], "fridai": 618, "midwest": 618, "142": 618, "368": [618, 622], "excess": 618, "65": [618, 619, 667, 673], "knot": 618, "mph": 618, "184": 618, "bing": 618, "diamet": 618, "ifram": 618, "spc": [618, 622], "climo": 618, "gmf": 618, "php": 618, "rpt": 618, "230331_rpts_filter": 618, "walworth": 618, "counti": 618, "southeastern": [618, 639], "geneva": 618, "tourist": 618, "especi": [618, 620, 640], "live": 618, "chicagoland": 618, "confirm": [618, 635, 684], "assembl": 618, "summari": [618, 635], "grlevel": 618, "encourag": 618, "peopl": 618, "cookbook": [618, 622, 682, 694], "moor": 618, "focu": 618, "varieti": [618, 620, 623, 633, 634, 671, 693], "forg": [618, 622, 623, 682, 692, 693, 696], "arm_pyart": [618, 623, 625, 682, 692, 693, 696], "shaperead": 618, "shpreader": 618, "shapelyfeatur": 618, "miniforge3": 618, "tqdm": 618, "tqdmwarn": 618, "iprogress": 618, "ipywidget": 618, "readthedoc": 618, "stabl": 618, "user_instal": 618, "autonotebook": 618, "notebook_tqdm": 618, "credit": 618, "censu": 618, "mac": [618, 622, 682], "curl": 618, "linux": [618, 622, 623, 682, 693, 696], "wget": 618, "www2": 618, "geo": [618, 622], "tiger": 618, "tiger2016": 618, "primaryroad": 618, "tl_2016_us_primaryroad": 618, "zip": [618, 619, 628, 629, 630, 631, 633, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682], "xferd": 618, "dload": 618, "upload": [618, 622], "spent": 618, "7m": 618, "cpg": 618, "inflat": 618, "dbf": 618, "prj": 618, "shp": 618, "ea": 618, "iso": 618, "shx": 618, "reader": [618, 621, 622, 636, 649], "geom": 618, "loop": [618, 622, 674], "rec": 618, "fullnam": 618, "interstate_featur": 618, "darkblu": 618, "clean": [618, 619, 622, 667, 678], "filesystem": [618, 619, 649], "month": [618, 635, 636], "kmkx20230401_010517_v06": 618, "kmkx20230401_011057_v06": 618, "kmkx20230401_011638_v06": 618, "kmkx20230401_012219_v06": 618, "kmkx20230401_012759_v06": 618, "kmkx20230401_013341_v06": 618, "kmkx20230401_013922_v06": 618, "kmkx20230401_014502_v06": 618, "kmkx20230401_015042_v06": 618, "kmkx20230401_015623_v06": 618, "kmkx20230401_015928_v06": 618, "plot_configur": 618, "twilight_shift": [618, 678], "cross_correlation_ratio": [618, 619, 635, 651, 652, 670, 671, 689, 690], "plot_radar_ppi": 618, "left_field": 618, "right_field": 618, "plot_config": 618, "precip": 618, "vel_dealia": 618, "dealias_region_bas": [618, 622, 630, 667, 678, 686], "add_field": [618, 623, 628, 630, 667, 670, 671, 672, 673, 678, 685, 686, 693], "corrected_veloc": [618, 630, 667, 674, 678, 686, 689], "plot_numb": 618, "config": [618, 622, 684, 696], "121": [618, 620, 635, 639, 648, 669, 673, 678], "generate_titl": 618, "time_step": 618, "get_start_end": 618, "central_tim": 618, "astimezon": [618, 649], "new_titl": 618, "cdt": 618, "sharon": 618, "Near": 618, "delavan": 618, "6105": 618, "60666": 618, "lightgrei": 618, "lavenderblush": 618, "ppi_velocity_reflectivity_": 618, "flexibl": [618, 622], "hope": 618, "concept": 619, "quickstart": 619, "basic": [619, 622, 682, 683, 685], "compet": 619, "bytesio": 619, "pil": 619, "ipimag": 619, "repositori": [619, 623, 624, 625, 682, 692, 693, 696], "chicago": 619, "klot": 619, "june": 619, "5th": 619, "start_dat": 619, "yyyi": [619, 620, 621], "dd": [619, 620, 621], "hh": 619, "end_dat": 619, "argonn": 619, "lemont": 619, "il": 619, "sawmil": 619, "creek": 619, "darien": 619, "ie": 619, "slot": 619, "700937896518866": 619, "73884644555692": 619, "99578103231573": 619, "98744136114946": 619, "tower": 619, "scm": [619, 622, 623, 693], "magenta": 619, "cyan": [619, 673], "current_d": 619, "date_str": 619, "date_str_compact": 619, "hour_str": 619, "all_fil": 619, "filtered_fil": 619, "endswith": [619, 649], "_mdm": [619, 649], "although": 619, "pol": 619, "check_radar_field": 619, "file_path": 619, "rb": 619, "radar_data": 619, "klot20240605_040442_v06": 619, "clutter_filter_power_remov": [619, 635], "spectrum_width": [619, 635, 689, 690], "differential_phas": [619, 635, 652, 689, 690], "streamlin": 619, "read_radar_data": 619, "tell": [619, 673, 689], "halt": 619, "unabl": 619, "sometim": [619, 625, 684], "reduc": [619, 651, 671, 692], "nonmeteorolog": 619, "blob": [619, 660], "aforement": 619, "fit": 619, "pure": 619, "aesthet": 619, "decis": 619, "basenam": 619, "markers": 619, "tight_layout": [619, 620, 631, 640, 664, 667], "046": 619, "radar_frame_": 619, "frame": 619, "someth": [619, 682], "rid": 619, "temporarili": 619, "abl": [619, 682, 692], "pillow": 619, "gif_filenam": 619, "radar_anim": 619, "save_al": 619, "append_imag": 619, "durat": 619, "704120": 619, "968328": 619, "frames_dir": 619, "makedir": 619, "exist_ok": 619, "radar_displai": [619, 645], "notabl": [620, 621], "insight": [620, 621], "analyz": [620, 623, 682, 689, 693], "decid": 620, "quicklook": 620, "januari": [620, 623, 682, 693], "wettest": 620, "la": 620, "jolla": 620, "california": 620, "tarfil": 620, "download_arm_data": 620, "0mact": 620, "0mdiscoveri": 620, "0mdownload_arm_data": 620, "0musernam": 620, "0mtoken": 620, "0mdatastream": 620, "0mstartdat": 620, "0menddat": 620, "0mtime": 620, "0moutput": 620, "webservic": 620, "usernam": [620, 692], "log": [620, 622, 625, 649], "adc": [620, 622], "datastream": 620, "acquir": 620, "startdat": 620, "yyyymmdd": 620, "thh": 620, "ss": 620, "15t12": 620, "enddat": 620, "15t13": 620, "hhmmss": 620, "programmat": 620, "rest": 620, "savedata": 620, "cron": 620, "job": 620, "workspac": 620, "disk": 620, "hpss": 620, "armliv": 620, "livedata": 620, "giansiracusa": 620, "giansiracumt": 620, "ornl": 620, "sgpmete13": 620, "jan": 620, "xxxxxxxxxxxxxxxx": 620, "download_data": 620, "mambaforg": 620, "epckasacrcfrs2": 620, "21t01": 620, "20240121": 620, "010020": 620, "010436": 620, "011116": 620, "012914": 620, "012503": 620, "011845": 620, "012257": 620, "010757": 620, "010118": 620, "011434": 620, "012708": 620, "011640": 620, "012051": 620, "hardin": 620, "isom": 620, "lindenmai": 620, "matthew": 620, "nelson": 620, "feng": 620, "deng": 620, "rocqu": 620, "castro": 620, "wendler": 620, "ka": 620, "kasacrcfr": 620, "1469302": 620, "trick": 620, "ones": [620, 646], "798": 620, "runtimewarn": 620, "encount": 620, "intersect": 620, "whic": 620, "ppi_fil": 620, "rhi_fil": 620, "elif": 620, "mainli": 620, "threshold_valu": 620, "suptitl": [620, 628, 630, 640, 662, 674], "too": [620, 622], "And": [620, 622, 629], "remaind": 620, "fromnumer": 620, "784": [620, 622], "maskedarrai": [620, 622], "kth": 620, "idea": [620, 684, 686], "0115": 620, "rhi_radar": 620, "ppi_radar": 620, "achiv": 620, "past": [621, 623, 693], "tag": [621, 622], "kernelspec": 621, "display_nam": 621, "ipykernel": 621, "languag": [621, 623, 682, 693], "language_info": 621, "codemirror_mod": 621, "file_extens": 621, "mimetyp": 621, "nbconvert_export": 621, "pygments_lex": 621, "ipython3": 621, "insert": 621, "nbformat": 621, "nbformat_minor": 621, "care": 621, "isilb": 622, "sinaram": 622, "1532": 622, "zssherman": 622, "get_azimuth": 622, "xradar": [622, 681, 691, 695], "1547": 622, "mgrover1": 622, "1544": 622, "1542": 622, "1541": 622, "bridg": 622, "1537": 622, "columnsect": [622, 668], "1529": 622, "failur": 622, "wheel": 622, "1526": 622, "dep": 622, "bump": 622, "action": [622, 623, 625, 693], "group": [622, 623, 693], "1539": 622, "dependabot": 622, "epcap": 622, "1534": 622, "1530": 622, "1528": 622, "zdist_factor": 622, "1509": 622, "1524": 622, "1519": 622, "codeql": 622, "1515": 622, "pin": [622, 625], "ci": [622, 624, 625], "1507": 622, "xdrlib": 622, "1525": 622, "1518": 622, "1492": 622, "kmuehlbauer": 622, "rtanamachi": 622, "1504": 622, "1487": 622, "1478": 622, "jrobrien91": 622, "1503": 622, "1501": 622, "outdat": 622, "ipynb": [622, 628, 629, 630, 631, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680], "1490": 622, "1484": 622, "1482": 622, "1474": 622, "commit": [622, 623, 625, 693], "1506": 622, "1475": 622, "rainbow_wrl": 622, "happyxiaoanan": 622, "reclass": 622, "1495": 622, "rbhupi": 622, "1493": 622, "minor": [622, 640, 685, 688], "get_elev": 622, "1489": 622, "rescal": [622, 670, 671], "1486": 622, "1479": 622, "rcjackson": 622, "app": 622, "cmweather": [622, 695], "1452": 622, "accessor": 622, "1457": 622, "1456": 622, "typo": 622, "1471": 622, "isinst": 622, "1448": 622, "1472": 622, "1470": 622, "1469": 622, "instruct": [622, 682, 694], "1462": 622, "1473": 622, "1468": 622, "1450": 622, "scolli": 622, "dim": 622, "load_kazr": 622, "1446": 622, "1447": 622, "arm_vpt": 622, "1445": 622, "lint": [622, 623, 693], "1444": 622, "mnt": 622, "1440": [622, 684], "dedic": [622, 695], "1442": 622, "1443": 622, "1437": 622, "algorith": 622, "1434": 622, "wolfidan": 622, "1430": 622, "1433": 622, "1428": 622, "neutrinocero": 622, "odim": 622, "1425": 622, "gatemapp": [622, 633, 638, 643, 691], "1418": 622, "hook": [622, 623, 693], "1419": 622, "sphinx": [622, 628, 629, 630, 631, 633, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680], "theme": 622, "1427": 622, "feet": 622, "1423": 622, "leak": 622, "mapper": 622, "1421": 622, "vforcel": 622, "1417": 622, "steepatticstair": 622, "1407": 622, "readm": [622, 692], "1397": 622, "1416": 622, "1413": 622, "1411": 622, "1409": 622, "1401": 622, "joshua": 622, "hampton": 622, "del": [622, 650], "old": 622, "conda_recip": 622, "1399": 622, "ruff": 622, "1388": 622, "wrong": 622, "1390": 622, "1385": 622, "1383": 622, "pkg_resourc": 622, "runtim": 622, "1394": 622, "mail": [622, 623, 682, 693], "1393": 622, "codeown": 622, "1391": 622, "1384": 622, "1382": 622, "1379": 622, "mismatch": 622, "1381": 622, "wrap": 622, "get_gate_area": 622, "1375": 622, "1380": [622, 684], "1372": 622, "exec_modul": 622, "load_modul": 622, "1369": 622, "badg": 622, "read_sigmet": 622, "1351": 622, "zouihao": 622, "unus": 622, "1343": 622, "1342": 622, "range_step": 622, "1338": 622, "max_num_g": 622, "1337": 622, "1327": 622, "revert": 622, "setuptool": 622, "unwant": [622, 645], "cleanup": 622, "1357": 622, "1355": 622, "1339": 622, "1361": 622, "1335": 622, "manipul": [622, 650, 683], "1300": 622, "kylejgillett": 622, "melovato": 622, "tsbiscaro": 622, "1324": 622, "1319": 622, "1314": 622, "add_filt": 622, "1326": 622, "1320": [622, 684], "1325": 622, "jthielen": 622, "1303": 622, "jjhelmu": [622, 696], "wx4stg": 622, "antiviru": 622, "similiar": 622, "1307": 622, "1299": 622, "throw": 622, "convolve1d": 622, "1313": 622, "1306": 622, "1317": 622, "1311": 622, "jfigui": 622, "citat": [622, 623, 651, 682, 693], "1304": 622, "gamaanderson": 622, "hhuangwx": 622, "josephhardine": 622, "meteoswiss": [622, 672, 674], "mdr": 622, "ngui": 622, "tjlang": 622, "1294": 622, "1290": 622, "1285": 622, "1279": 622, "backward": [622, 626], "1278": 622, "1284": 622, "tracer": 622, "1296": 622, "1292": 622, "1287": 622, "cibuildwheel": 622, "1267": 622, "ocefpaf": 622, "1275": 622, "1276": 622, "1265": 622, "dcedgren": 622, "jilling": 622, "zhaobudaola": 622, "1263": 622, "1235": 622, "1215": 622, "1261": 622, "1241": 622, "1240": 622, "gatefi": 622, "1226": 622, "join_radar": 622, "repititon": 622, "iparam": 622, "1218": 622, "1216": 622, "trmm_rsl": 622, "1239": 622, "cftime": 622, "1211": 622, "incorrect": [622, 626, 686], "1231": 622, "ci_setup": 622, "1213": 622, "1264": 622, "1251": 622, "1234": 622, "1228": 622, "subset_radar": 622, "radar_util": 622, "1227": 622, "pyrad": 622, "1220": 622, "tst": 622, "1214": 622, "srbrodzik": 622, "1208": 622, "1204": 622, "1201": [622, 635], "1198": 622, "1196": 622, "catch": 622, "1191": 622, "1207": 622, "pypi": 622, "1206": 622, "unitest": 622, "1200": [622, 684], "1199": 622, "echoclass": 622, "1197": 622, "convv": 622, "awhil": 622, "back": 622, "1195": 622, "1190": 622, "dp": 622, "1184": 622, "solver": [622, 682], "1183": 622, "1176": 622, "1187": 622, "revis": 622, "270": [622, 623, 664, 693], "1185": 622, "1181": 622, "1178": 622, "1171": 622, "1180": 622, "1177": 622, "1173": 622, "sobitp59": 622, "rogu": 622, "1170": 622, "1160": 622, "1152": 622, "1151": 622, "mispel": 622, "1158": 622, "1148": 622, "1167": 622, "1154": 622, "unittest": 622, "1153": 622, "1136": 622, "trigger": 622, "1126": 622, "1118": 622, "1115": 622, "maco": 622, "1147": 622, "prune": 622, "1143": 622, "1141": 622, "1140": [622, 684], "1139": 622, "1137": 622, "1131": 622, "1130": 622, "1129": 622, "1128": 622, "1127": 622, "1125": 622, "1124": 622, "1123": 622, "1120": 622, "1119": 622, "dpr": 622, "1116": 622, "postcard": 622, "1104": 622, "1103": 622, "1122": 622, "gridmapdisplai": [622, 633, 644, 648, 649, 665, 670, 671, 679, 688, 691, 695], "1099": 622, "quick": [622, 635], "1146": 622, "contribut": [622, 623, 693, 694], "1106": 622, "1117": 622, "1113": 622, "submodul": [622, 688], "1110": 622, "forgotten": 622, "1108": 622, "test_echo_class": 622, "1107": 622, "1101": 622, "1098": 622, "1097": 622, "1094": 622, "1080": [622, 684], "registri": 622, "1087": 622, "1096": 622, "1093": 622, "1090": 622, "1089": 622, "1088": 622, "1085": 622, "1084": 622, "analyt": 622, "1081": 622, "1079": 622, "1077": 622, "pmi": 622, "csp": 622, "ritvj": 622, "doesn": [622, 684], "mandat": 622, "1014": 622, "reallynicegui": 622, "hasattr": 622, "1034": 622, "overlap": [622, 650, 659], "mapdisplai": 622, "1029": 622, "azimuth_rhi_plot": 622, "1025": 622, "1019": 622, "rxm25": 622, "1075": 622, "1064": 622, "mute_radar": 622, "1033": 622, "1030": 622, "radxgrid": 622, "1027": 622, "1026": 622, "roadmap": 622, "repo": [622, 623, 693], "1059": 622, "sidebar": 622, "1074": 622, "datetime_util": 622, "1072": 622, "1071": 622, "pydata": 622, "1069": 622, "1068": 622, "1067": 622, "1066": 622, "1063": 622, "codecov": 622, "1061": 622, "1060": 622, "1058": 622, "1056": 622, "1055": 622, "1053": 622, "1051": 622, "1050": 622, "1048": 622, "branch": [622, 623, 625, 693, 696], "1040": 622, "1039": 622, "1038": 622, "1031": 622, "1024": 622, "1020": [622, 684], "humphreyscart": 622, "tkralph": 622, "1003": 622, "997": 622, "1007": 622, "1001": 622, "1010": 622, "travi": 622, "sty": [622, 623, 693], "pep8": [622, 623, 693], "1005": 622, "988": 622, "quba1": 622, "984": 622, "tdwr": 622, "969": [622, 645, 665, 691], "956": 622, "994": 622, "979": 622, "h5py": [622, 682], "978": 622, "june1st": 622, "switch": [622, 623, 693], "973": 622, "maint": [622, 623, 693], "966": [622, 670, 675, 691], "983": 622, "amarouan": 622, "abdelhak": 622, "bmgxyz": 622, "address": [622, 673], "962": [622, 671, 675, 691], "mwilson14": 622, "963": 622, "nonetyp": 622, "regard": 622, "959": 622, "964": [622, 648, 665, 691], "176": [622, 663, 665, 691], "919": 622, "rda": 622, "903": 622, "add_gate_area": 622, "950": 622, "blotchi": 622, "947": 622, "946": 622, "944": 622, "694": 622, "938": 622, "vlouf": 622, "934": 622, "925": 622, "924": 622, "917": 622, "appveyor": 622, "937": 622, "927": 622, "liter": 622, "said": 622, "949": 622, "948": 622, "929": 622, "926": 622, "920": 622, "915": 622, "911": 622, "grwise1": 622, "jsignel": 622, "rumpki": 622, "broke": 622, "913": 622, "msg29": 622, "909": 622, "907": 622, "framework": 622, "910": 622, "912": 622, "napoleon": 622, "902": 622, "rtd": 622, "893": 622, "892": 622, "odimh5": 622, "898": 622, "895": 622, "896": 622, "864": 622, "louiswick": 622, "hilderbrand": 622, "877": 622, "886": 622, "crash": 622, "878": 622, "891": 622, "zflamig": 622, "futur": [622, 623, 626, 693], "890": 622, "889": 622, "885": 622, "dstex": 622, "880": [622, 661, 665, 691], "soon": 622, "879": 622, "plot_grid": [622, 648, 663, 670, 671, 679, 688, 695], "to_xarrai": 622, "873": 622, "876": [622, 636, 637, 691], "elementwis": 622, "anaconda": [622, 623, 625, 682, 692, 693], "faq": 622, "868": 622, "mvanlierwalq": 622, "848": 622, "grid_io": 622, "846": 622, "jhemedin": 622, "841": 622, "nbin": 622, "865": 622, "856": 622, "840": [622, 684], "caus": 622, "852": 622, "849": 622, "get_dataset": 622, "845": 622, "docstr": 622, "838": 622, "836": 622, "cheatsheet": 622, "fortran": 622, "bit": [622, 692], "environ": [622, 682, 692, 694], "contr": 622, "843": 622, "spell": 622, "835": [622, 653, 665, 691], "read_d3r_gcpex_nc": 622, "842": [622, 657, 665, 691], "eccc": 622, "837": 622, "taylbm": 622, "kenkeho": 622, "swnesbitt": 622, "827": 622, "822": 622, "806": 622, "804": 622, "800": [622, 667], "778": 622, "688": [622, 668], "incomplet": 622, "msg5": 622, "832": 622, "820": 622, "812": 622, "deal": 622, "809": 622, "contiuum": 622, "gh": 622, "795": 622, "explicit": 622, "py2": 622, "790": 622, "sh": 622, "kai": 622, "muehlbauer": 622, "789": 622, "777": 622, "indexerror": 622, "check_outli": 622, "776": 622, "juhi24": 622, "770": 622, "imp": 622, "newer": [622, 692], "675": 622, "824": 622, "minu": 622, "803": 622, "738": 622, "799": 622, "792": 622, "favor": 622, "791": 622, "786": 622, "itself": [622, 690], "inc": 622, "794": 622, "rst": 622, "preformat": 622, "779": 622, "eaxmpl": 622, "834": [622, 679, 681, 691], "833": [622, 673], "elsewher": 622, "831": 622, "828": 622, "821": 622, "pytest": [622, 623, 682, 692, 693], "818": 622, "atteun": 622, "817": 622, "simulated_veloc": [622, 689], "802": 622, "grab": [622, 662], "796": 622, "793": 622, "787": 622, "781": 622, "cvd": 622, "775": 622, "774": 622, "769": 622, "nl2": 622, "765": 622, "miaoneng": 622, "gewitterblitz": 622, "liliaow567": 622, "764": 622, "coveral": 622, "messsag": 622, "761": 622, "757": 622, "set_raster": 622, "748": 622, "754": 622, "755": 622, "recompil": 622, "758": 622, "ngoldbaum": 622, "reciev": 622, "752": 622, "gate_id": [622, 689], "749": 622, "746": 622, "744": 622, "zxdawn": 622, "netcdftim": 622, "736": [622, 629, 632, 691], "731": 622, "dot_product": 622, "729": 622, "test_rhi_elev": 622, "twice": [622, 671], "724": 622, "728": 622, "727": 622, "nosetest": 622, "715": 622, "vradh": 622, "vradv": 622, "quantiti": 622, "739": 622, "es5nhc": 622, "735": 622, "wave100": 622, "734": 622, "733": 622, "730": 622, "723": 622, "comp": 622, "721": 622, "cameron": 622, "homey": 622, "716": 622, "cameronhomey": 622, "jamessong": 622, "winash12": 622, "687": [622, 628, 632, 691], "csnardi": 622, "645": 622, "docbuild": 622, "709": 622, "mhpicel": 622, "705": 622, "fromstr": 622, "704": 622, "692": 622, "651": 622, "711": 622, "calculate_velocity_textur": [622, 678, 686], "retreiv": 622, "672": 622, "bucket": [622, 635, 649], "673": 622, "653": 622, "638": 622, "635": 622, "frombuff": 622, "702": 622, "grid_mapp": 622, "707": 622, "706": 622, "goharkai": 622, "infinit": 622, "693": 622, "freemansw1": 622, "683": 622, "674": 622, "668": 622, "contact": 622, "land": 622, "667": [622, 684], "665": 622, "662": 622, "661": 622, "attributeerror": 622, "656": 622, "oserror": 622, "650": 622, "overflowerror": 622, "648": 622, "happier": 622, "647": 622, "640": 622, "639": 622, "634": 622, "620": 622, "itsjm": 622, "kirknorth": 622, "617": [622, 659, 665, 691], "616": 622, "631": 622, "swap": 622, "el": 622, "plot_rai": 622, "618": 622, "_get_angl": 622, "613": 622, "607": [622, 643], "linspac": [622, 623, 646, 651, 667, 670, 671, 684, 693], "603": 622, "627": 622, "623": 622, "596": 622, "595": 622, "632": 622, "630": 622, "625": 622, "tulipasilva": 622, "622": 622, "normbw": 622, "q": 622, "quit": [622, 682], "614": 622, "git": [622, 623, 682, 692, 693, 695, 696], "611": 622, "608": 622, "mrugna": 622, "605": 622, "bld": 622, "kludg": 622, "604": 622, "acknowledg": [622, 682], "602": 622, "qpe": [622, 671], "mustafaalicelik": 622, "580": 622, "577": [622, 631, 632, 691], "576": 622, "575": 622, "azim": 622, "546": 622, "pickl": 622, "unpickl": 622, "543": 622, "vcp": 622, "541": 622, "noaaport": 622, "seper": 622, "540": [622, 684], "521": 622, "459": 622, "590": 622, "bugfix": 622, "l3": 622, "135": 622, "eet": 622, "585": 622, "582": 622, "570": 622, "558": 622, "ctm": 622, "553": 622, "542": 622, "aux_io": [622, 629], "read_gam": 622, "535": 622, "midnight": 622, "523": 622, "importerror": 622, "522": 622, "519": 622, "512": 622, "510": 622, "phase_proc": 622, "zerodivis": 622, "494": 622, "485": 622, "unsupport": [622, 695], "481": 622, "579": 622, "578": 622, "568": 622, "563": 622, "559": 622, "549": 622, "547": 622, "gamicfil": 622, "gamic_hdf5": 622, "536": 622, "524": 622, "513": 622, "balltre": 622, "504": 622, "501": 622, "482": 622, "479": 622, "594": 622, "561": 622, "despeckle_field": 622, "544": 622, "axislabel_flag": 622, "539": 622, "529": 622, "_get_x_z": 622, "491": 622, "486": 622, "586": 622, "572": 622, "fixup": 622, "569": 622, "560": 622, "555": [622, 668], "recip": [622, 625], "554": 622, "nose_arg": 622, "548": 622, "538": 622, "532": 622, "531": 622, "528": 622, "output_to_geotiff": 622, "514": 622, "511": 622, "507": 622, "506": 622, "498": 622, "libgfortran": 622, "497": 622, "495": 622, "493": 622, "489": 622, "488": 622, "argentinean": 622, "480": [622, 684], "bdolan44": 622, "dara74k": 622, "gavi": 622, "jacaicedob": 622, "wx": 622, "pfhein": 622, "tamisalex": 622, "469": 622, "468": 622, "467": 622, "luminos": 622, "464": 622, "455": 622, "hclass": 622, "447": 622, "439": [622, 649, 665, 691], "434": 622, "433": 622, "427": 622, "411": 622, "404": 622, "388": 622, "cross_section_ppi": [622, 664], "380": 622, "472": 622, "471": 622, "470": 622, "prf": 622, "460": 622, "get_field_colormap": 622, "446": 622, "444": 622, "example_cfradial_rhi": 622, "441": [622, 649], "417": 622, "struct": 622, "410": 622, "383": 622, "unicod": 622, "382": [622, 669, 675, 691], "gatefit": 622, "372": 622, "465": 622, "refactor": 622, "463": 622, "decor": 622, "416": 622, "392": 622, "radxcovert": 622, "clarifi": 622, "475": 622, "406": 622, "add_field_lik": [622, 629, 639], "397": 622, "391": 622, "376": 622, "370": 622, "corner_to_point": 622, "473": 622, "466": 622, "456": 622, "outstand": 622, "412": 622, "413": [622, 635, 637, 691], "454": 622, "453": 622, "449": 622, "438": 622, "437": 622, "430": 622, "426": 622, "miniconda": [622, 623, 682, 693], "reactiv": 622, "422": 622, "plot_map_one_radar_to_grid": [622, 641, 643, 691], "420": [622, 684], "419": 622, "408": 622, "resilli": 622, "403": 622, "write_mdv_grid": 622, "402": 622, "401": 622, "399": 622, "395": 622, "documen": 622, "add_2d_latlon_axi": 622, "394": 622, "378": 622, "acess": 622, "377": 622, "373": 622, "deeplycloudi": 622, "358": [622, 623, 693], "edge_netcdf": 622, "read_edge_netcdf": 622, "357": [622, 623, 693], "dealias_fourdd": [622, 695], "348": 622, "346": 622, "326": 622, "308": 622, "361": 622, "refl_filter_flag": 622, "map_gate_to_grid": 622, "334": 622, "region_dealia": 622, "327": 622, "libm": 622, "posix": 622, "319": 622, "unnecessari": 622, "inmemoryfil": 622, "365": 622, "359": [622, 623, 693], "354": 622, "_rsl_interfac": 622, "342": 622, "binstar": 622, "337": 622, "320": 622, "317": 622, "362": 622, "plot_grid_three_panel": 622, "353": 622, "confus": 622, "363": 622, "340": 622, "externalis": 622, "339": 622, "333": 622, "332": 622, "47": [622, 674], "324": 622, "323": 622, "271": 622, "binar": 622, "266": 622, "313": 622, "312": 622, "290": 622, "280": 622, "273": 622, "272": 622, "261": 622, "256": [622, 646, 672], "dealias_phase_unwrap": 622, "radarmapdispl": 622, "249": 622, "discontin": 622, "314": 622, "288": 622, "fault": 622, "276": 622, "dealias_unwrap_phas": 622, "275": 622, "corrupt": 622, "269": 622, "283": 622, "inconsist": 622, "274": 622, "254": [622, 671], "fallback": 622, "245": 622, "316": 622, "ngates_vart": 622, "310": 622, "py3": [622, 696], "nexrad_level2": 622, "nexrad_level3": 622, "309": 622, "1byte": 622, "datatyp": 622, "weathergod": 622, "293": 622, "292": 622, "289": [622, 637], "291": 622, "138": 622, "284": 622, "alter": 622, "267": 622, "latlon": 622, "264": 622, "262": 622, "260": 622, "259": 622, "258": 622, "241": [622, 641], "rebuild": 622, "237": 622, "scientif": [623, 682, 693], "e25": [623, 682, 693], "publish": [623, 693], "easiest": [623, 682, 693], "1st": [623, 682, 693], "Then": [623, 625, 682, 692, 693], "termin": [623, 682, 693, 696], "prompt": [623, 682, 693], "mamba": [623, 693], "openradar": [623, 693], "short": [623, 625, 693], "cours": [623, 639, 693], "ev": [623, 693], "pyart_short_cours": [623, 693], "youtub": [623, 693], "watch": [623, 693], "diip": [623, 693], "q3bkzw": [623, 693], "book": [623, 693], "rule": [623, 693], "pep": [623, 693], "0008": [623, 693], "afterward": [623, 693], "neccessari": [623, 693], "brief": [623, 624, 693], "parti": [623, 693], "explain": [623, 693], "_inverse_dist_squar": [623, 693], "_average1d": [623, 693], "seen": [623, 693], "explan": [623, 624, 693], "privat": [623, 693], "rerun": [623, 693], "test_vad": [623, 693], "test_radar": [623, 684, 693], "make_target_radar": [623, 693], "1000": [623, 631, 642, 643, 653, 659, 660, 667, 671, 688, 691, 693], "ones_lik": [623, 693], "z_start": [623, 693], "z_end": [623, 693], "z_count": [623, 693], "vad_height": [623, 693], "vad_spe": [623, 693], "98665725": [623, 693], "94020686": [623, 693], "88107152": [623, 693], "81939374": [623, 693], "75851962": [623, 693], "vad_direct": [623, 693], "84659496": [623, 693], "30240553": [623, 693], "58658589": [623, 693], "81073051": [623, 693], "01353486": [623, 693], "01335138": [623, 693], "06014712": [623, 693], "12039762": [623, 693], "18410404": [623, 693], "24791911": [623, 693], "98663937": [623, 693], "9398407": [623, 693], "87958641": [623, 693], "81587601": [623, 693], "75205693": [623, 693], "assert_almost_equ": [623, 693], "pyarg": [623, 693], "test_cfradi": [623, 693], "cd": [623, 693], "fork": [623, 625, 693], "cartopy_map": [623, 693], "branch_nam": [623, 693], "task": [623, 633, 677, 693], "mind": [623, 639, 693], "simpli": [623, 670, 678, 686, 688, 692, 693, 696], "acronym": [623, 693], "finish": [623, 693, 696], "quotat": [623, 693], "hit": [623, 693], "depth": [623, 682, 690, 693], "acronymn": [623, 693], "gitwash": [623, 693], "development_workflow": [623, 693], "whitespac": [623, 693], "usual": [623, 636, 693], "vim": [623, 693], "fetch": [623, 629, 631, 640, 645, 647, 667, 671, 672, 673, 674, 693], "ff": [623, 693], "sit": [623, 693], "guidanc": [623, 693], "anyth": 625, "creator": 625, "draft": 625, "shortlog": 625, "uplod": 625, "feedstock": 625, "clone": [625, 682, 692], "meta": 625, "yaml": 625, "sha256": 625, "rerend": 625, "smithi": 625, "bot": 625, "awar": 625, "semant": 626, "earlier": 626, "ceas": 626, "Such": 626, "proceed": 626, "futurewarn": 626, "__doc__": [628, 629, 630, 635, 636, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 670, 671], "sgpcsaprsurcmaci7": [628, 685], "20110520": [628, 685], "095101": [628, 685], "pop": 628, "specific_attenu": [628, 668, 672, 684, 689], "corrected_reflectivity_horizont": [628, 642, 648, 668, 678, 680, 684], "calculate_attenu": 628, "131": [628, 670, 671], "132": [628, 670, 671], "ax3": [628, 630, 663, 667, 670, 671, 673], "133": [628, 656, 665, 668, 670, 671, 691], "plot_attenu": [628, 632, 691], "zach": 629, "sherman": [629, 636], "open_radar_data": [629, 631, 640, 645, 647, 667, 671, 672, 673, 674], "sgpkazrgec1": 629, "20190529": 629, "000002": 629, "cdf": [629, 630, 667, 671], "read_kazr": 629, "reflectivity_copol": 629, "calc_cloud_mask": 629, "cloud_mask_radar": 629, "cloud_mask_2": 629, "ll": 629, "reflectivity_cloud_mask": 629, "flag_valu": 629, "no_cloud": 629, "999999": 629, "int16": 629, "plot_cloud_mask": [629, 632, 691], "ial": 630, "095636": [630, 686], "sonde_fil": 630, "sgpinterpolatedsondec1": 630, "c1": [630, 673, 689], "20110510": 630, "000000": 630, "dt": 630, "read_arm_sonde_vap": 630, "exclude_transit": [630, 641, 642, 645, 648, 649, 669], "exclude_invalid": [630, 667], "exclude_outsid": [630, 649, 667], "dealias_data": 630, "sixth": 630, "221": [630, 652], "223": [630, 652], "ax4": 630, "224": [630, 652], "996": [630, 632, 691], "plot_dealia": [630, 632, 691], "birdbath": 631, "spheric": 631, "sgpxsaprcfrvpti4": 631, "20200205": 631, "100827": 631, "cross_correlation_ratio_hv": [631, 690], "exclude_abov": [631, 642, 648, 678, 686], "calc_zdr_offset": 631, "2f": 631, "profile_zdr": 631, "set_ylabel": [631, 660, 667, 673, 674], "set_xlabel": [631, 667, 674], "profile_reflect": 631, "profile_cross_correlation_ratio_hv": 631, "plot_zdr_check": [631, 632, 691], "mem": [632, 637, 643, 665, 675, 676, 681, 691], "examples_python": 633, "examples_jupyt": 633, "grover": [635, 639, 646, 647, 648, 654, 662, 668, 669, 678, 679, 680], "filepath": [635, 636], "organ": 635, "radarsit": [635, 636], "_v06": 635, "khgx": 635, "aws_nexrad_level2_fil": [635, 636], "khgx20220322_120125_v06": 635, "relect": 635, "z_": [635, 639, 650, 673], "v_": 635, "noq": 635, "level3": 635, "aws_nexrad_level3_velocity_fil": 635, "hgx_n0u_2022_03_22_12_01_25": 635, "aws_nexrad_level3_reflectivity_fil": 635, "hgx_n0q_2022_03_22_12_01_25": 635, "read_nexrad_level3": 635, "radar_level3_veloc": 635, "radar_level3_reflect": 635, "reflectivity_displai": 635, "velocity_displai": 635, "plot_nexrad_data_aw": [635, 637, 691], "zachari": 636, "zsherman": [636, 696], "tendenc": 636, "gz": 636, "handford": 636, "ca": 636, "khnx": 636, "0203": 636, "v06": 636, "khnx20060724_020338": 636, "clearli": 636, "lucki": 636, "31417": 636, "63111": 636, "plote": [636, 656], "central_latitud": [636, 656, 670, 671, 685], "central_longitud": [636, 656, 670, 671, 685], "plot_older_nexrad_data_aw": [636, 637, 691], "xsapr": [639, 642, 648], "xsapr_sw_fil": [639, 642, 648], "swx_20120520_0641": [639, 642, 646, 648, 650, 654, 664, 668, 669, 670, 671, 678, 679, 680, 695], "xsapr_se_fil": [639, 642, 648], "sex_20120520_0641": [639, 642, 648], "radar_sw": [639, 642, 648], "radar_s": [639, 642, 648], "southwestern": 639, "gmapper": 639, "radar_sw_mapped_to_radar_s": 639, "disp1": 639, "98": [639, 668, 674, 689], "97": [639, 642, 648, 651, 663, 668, 670, 671, 684], "disp2": 639, "remap": 639, "eyebal": 639, "fortun": 639, "reflectivity_se_radar": 639, "reflectivity_sw_radar": 639, "reflectivity_differ": 639, "reflectivity_bia": 639, "southwest": 639, "xspar": 639, "southeast": 639, "neccessarili": 639, "incl_gat": 639, "refl_s": 639, "refl_sw": 639, "values_without_mask": 639, "hist": [639, 678, 686], "histogram2d": 639, "masked_wher": [639, 667, 671, 689], "log_": 639, "000": [639, 645, 676], "plot_compare_two_radars_gatemapp": [639, 643, 691], "solut": 640, "arguabl": 640, "overlook": 640, "neglig": 640, "ze": 640, "2nd": 640, "4th": 640, "purpl": 640, "truncat": 640, "ok": 640, "israel": 640, "silber": 640, "file_nam": 640, "example_plot_ppi_single_sweep": 640, "processed_field": 640, "reflectivity_at_cor": 640, "radar_obj": 640, "nnow": 640, "ax_ind": 640, "sweep_obj": 640, "fig2": 640, "1601": 640, "40000": [640, 642, 648, 656, 688], "set_titl": [640, 645, 646, 667, 670, 671], "nuse": 640, "162": [640, 643, 691], "plot_grid_single_sweep_ppi": [640, 643, 691], "123000": 641, "048": [641, 643, 691], "xsarp": [642, 657, 658], "gatefilter_s": [642, 648], "gatefilter_sw": [642, 648], "201": [642, 670, 671, 688], "57861": [642, 648], "363611": [642, 648], "398": [642, 643, 691], "plot_map_two_radars_to_grid": [642, 643, 691], "demonstr": [645, 667, 682], "syed44": [645, 649], "purdu": [645, 649], "raw_na_000_125_20080411190016": 645, "create_cappi": 645, "cappi_displai": 645, "plot_cappi": [645, 665, 691], "helper": 646, "vstack": 646, "plot_color_gradi": 646, "cmap_categori": 646, "cmap_list": 646, "figh": 646, "99": 646, "cmap_nam": 646, "pyart_": 646, "va": 646, "transax": 646, "spine": 646, "set_axis_off": 646, "perceptu": [646, 651], "diverg": 646, "meaning": 646, "terrain": 646, "spectral_r": 646, "rememb": 646, "front": 646, "033": [646, 665, 691], "plot_choose_a_colormap": [646, 665, 691], "sgpkasacrcrrasterc1": 647, "20130419": 647, "012153": 647, "478": 647, "plot_cr_rast": 647, "931": [647, 665, 691], "plot_corner_reflector": [647, 665, 691], "181": 648, "blue": [648, 659, 660], "plot_cross_sect": [648, 665, 691], "grid_fil": 649, "20110520100000_nexrad_grid": [649, 663], "read_grid": [649, 663, 667, 671], "gdisplai": 649, "plot_maxcappi": 649, "download_nexrad": 649, "local_d": 649, "utc_dat": 649, "phwa": 649, "nexrad_arch": 649, "3d": 649, "max_rang": 649, "ceil": 649, "font_manag": 649, "findfont": 649, "font": 649, "famili": 649, "courier": 649, "plot_max_cappi": [649, 665, 691], "colobar": 650, "joe": 650, "brien": 650, "obrienj": 650, "perfect": 650, "coord": 650, "gca": 650, "set_major_loc": 650, "nullloc": 650, "axsb": 650, "ppi_map": 650, "set_tick": [650, 673], "145": [650, 665, 668, 671, 691], "plot_modify_colorbar": [650, 665, 691], "promin": [651, 671], "deemphas": 651, "depict": [651, 667], "ultim": 651, "misinterpret": 651, "lmtomkin": [651, 667, 670, 671], "ncsu": [651, 667, 670, 671], "nexrad_fil": [651, 670, 671], "kbgm": 651, "kbgm20200207_132642_v06": 651, "image_mute_radar": [651, 670, 671], "magma_cmap": 651, "magma_r": [651, 667, 670, 671], "grays_cmap": [651, 671], "gray_r": [651, 671], "nonmuted_cmap": 651, "linearsegmentedcolormap": [651, 670, 671], "from_list": [651, 670, 671], "muted_cmap": [651, 671], "nonmuted_reflect": [651, 670], "muted_reflect": [651, 671], "set_aspect": [651, 667, 670, 671, 672], "719": [651, 665, 691], "plot_nexrad_image_muted_reflect": [651, 665, 691], "katx20130717_195021_v06": [652, 690], "725": [652, 665, 691], "plot_nexrad_multiple_mo": [652, 665, 691], "level2_katx_20130717_1950": 653, "ar2v": 653, "plot_nexrad_reflect": [653, 665, 691], "plot_cross_hair": 654, "plot_ppi_cfradi": [654, 665, 691], "jason": [656, 663], "hemeding": [656, 663], "nsaxsaprppic1": 656, "20140201": 656, "184802": 656, "157": 656, "156": 656, "71": 656, "158": 656, "72": 656, "40km": 656, "plot_line_xi": 656, "20000": [656, 688], "200000": [656, 670, 671], "plot_point": 656, "plot_ppi_with_r": [656, 665, 691], "instrument_nam": [657, 658, 690], "agl": 657, "fac": 657, "nplot": [657, 658, 662], "snum": 657, "hsrhi": [657, 658], "3f": [657, 658], "time_start": 657, "num2dat": 657, "only_use_cftime_datetim": 657, "only_use_python_datetim": 657, "figure_titl": 657, "isoformat": 657, "plot_rhi_cfradi": [657, 665, 691], "350": [658, 665, 668, 691], "differnenti": 659, "cori": [659, 660], "weber": [659, 660], "cweber": [659, 660], "220629": 659, "matplolib": 659, "visabl": 659, "flow": 659, "paramt": 659, "compens": 659, "00015": 659, "veri": [659, 667, 670, 671], "moir": 659, "001": 659, "get_start": [659, 660], "get_end": [659, 660], "blur": 659, "nice": [659, 692], "arbirarli": 659, "gaussian_filt": [659, 660], "ang": [659, 660], "levels_rain": 659, "levels_ic": 659, "contours_ic": 659, "contours_rain": 659, "fmt": [659, 660], "0000": [659, 660], "plot_rhi_contours_differential_reflect": [659, 665, 691], "spyi": 660, "034142": 660, "ramp": 660, "pyart_budrd18": 660, "coutour": 660, "major": 660, "axhlin": [660, 667], "axvlin": 660, "00b4ff": 660, "ff6800": 660, "cp": 660, "plot_rhi_data_overlai": [660, 665, 691], "110041": 661, "plot_rhi_mdv": [661, 665, 691], "fields_to_plot": 662, "plot_num": 662, "u00b0": 662, "858": [662, 665, 691], "plot_rhi_two_panel": [662, 665, 691], "plot_crosshair": 663, "plot_longitude_slic": 663, "plot_latitude_slic": [663, 688], "plot_three_panel_gridmapdisplai": [663, 665, 691], "225": 664, "xsect": 664, "plot_xsect": [664, 665, 691], "714": 665, "essenti": 667, "distinguish": 667, "insuffici": 667, "tenth": 667, "aggress": 667, "noisi": 667, "ref_data": 667, "ref_data_mask": 667, "masked_outsid": 667, "create_cfad": 667, "freq_norm_mask": 667, "masked_less_equ": [667, 671], "cfad_pm": 667, "plasma": 667, "8km": 667, "freq_norm2": 667, "freq_norm0": 667, "freq_norm2_mask": 667, "freq_norm0_mask": 667, "chart": 667, "14km": 667, "12km": 667, "swath": 667, "velocity_dealia": 667, "rdbu_r": 667, "bimod": 667, "reproduc": 667, "2c": 667, "ddop": 667, "910815": 667, "213931": 667, "altitude_data": 667, "field_data": 667, "maxdz": [667, 671], "vvel_data": 667, "w_wind": 667, "vvel_mask": 667, "masked_invalid": [667, 670], "field_data_mask": 667, "cont": 667, "644": [667, 675, 691], "plot_cfad": [667, 675, 691], "maxwel": [668, 669], "site_lon": 668, "73": 668, "site_lat": 668, "latitdu": 668, "pathcollect": 668, "0x7fd2d0d75d30": 668, "get_field_loc": 668, "2kb": 668, "176b": 668, "818e": 668, "recalculated_diff_phas": [668, 684], "2778": 668, "unf_dp_phase_shift": [668, 684], "88b": 668, "144": [668, 671], "diff_reflect": [668, 684], "8b": 668, "20t06": 668, "distance_from_radar": 668, "233": 668, "545": 668, "latitude_of_loc": 668, "longitude_of_loc": 668, "line2d": 668, "0x7fd2d10b1370": 668, "213": [668, 675, 691], "plot_column_subset": [668, 675, 691], "compz": 669, "composite_reflect": 669, "composite_displai": 669, "plot_composite_reflect": [669, 675, 691], "classifc": 670, "summer": [670, 671], "ian": [670, 671], "footprint": 670, "yield": 670, "smoother": 670, "curv": 670, "plot_convstrat_schem": 670, "pick": 670, "radii": 670, "dilat": 670, "conv_strat_yut": 670, "convsf_mask": 670, "masked_equ": [670, 671], "feature_detect": [670, 671], "convsf": [670, 671], "magma_r_cmap": [670, 671], "ref_cmap": [670, 671], "albersequalarea": [670, 671], "convsf_und": 670, "convsf_ov": 670, "uncertainti": [670, 671], "underest": [670, 671], "feature_und": [670, 671], "overest": [670, 671], "feature_ov": [670, 671], "ktbw": [670, 671], "ktbw20220928_190142_v06": [670, 671], "rasumussen": [670, 671], "2003": [670, 671], "reflecit": 670, "kokx": [670, 671], "kokx20210207_161413_v06": [670, 671], "nonmuted_ref": 670, "nonmuted_ref_linear": 670, "mm6": 670, "m3": 670, "snow_rat": [670, 671], "snow_rate_dict": 670, "40500": 670, "034": [670, 671], "ccotd": [670, 671], "rasmussen": [670, 671], "dixon": [670, 671, 682], "vasiloff": [670, 671], "hage": [670, 671], "knight": [670, 671], "vivekanandan": [670, 671], "xu": [670, 671], "nowcast": [670, 671], "accumul": [670, 671], "042": [670, 671], "3c0020": [670, 671], "snuart": [670, 671], "plot_convective_stratiform": [670, 675, 691], "heavili": 671, "customiz": 671, "manuscript": 671, "feature_mask": 671, "19990811": 671, "221202": 671, "convsf_cmap": 671, "140": 671, "253": 671, "231": 671, "csb": 671, "csb_mask": 671, "csl": 671, "convsf_lo": 671, "csl_mask": 671, "csh": 671, "convsf_hi": 671, "csh_mask": 671, "rpm": 671, "csbpm": 671, "set_yticklabel": [671, 673], "lo": 671, "cslpm": 671, "cshpm": 671, "csb_lt": 671, "csb_lt_mask": 671, "csu_lt": 671, "csu_lt_mask": 671, "cso_lt": 671, "cso_lt_mask": 671, "csupm": 671, "csopm": 671, "ztor": 671, "ref_field_ov": 671, "ref_field_und": 671, "2db": 671, "_overest": 671, "_underest": 671, "reflectivity_ov": 671, "reflectivity_und": 671, "snow_rate_ov": 671, "snow_rate_und": 671, "feature_estimate_dict": 671, "bpm": 671, "upm": 671, "opm": 671, "distinct": 671, "scalar_features_mask": 671, "cosine_features_mask": 671, "isol": 671, "faint_featur": 671, "faint_features_mask": 671, "features_faint_strong": 671, "features_faint_strong_mask": 671, "new_dict": 671, "comment_1": 671, "faint_strong_cmap": 671, "faint_strong": 671, "238": 671, "93": 671, "66": 671, "quickli": 671, "quick_image_mut": 671, "muted_ref": 671, "nonmuted_field": 671, "muted_field": 671, "snow_rate_nonmut": 671, "snow_rate_mut": 671, "features_nonmut": 671, "features_mut": 671, "srpm": 671, "srpmm": 671, "csbpmm": 671, "plot_feature_detect": [671, 675, 691], "daniel": [672, 674], "wolfensberg": [672, 674], "mll2217907250u": 672, "003": 672, "preinterpol": 672, "20220628072500_savevol_cosmo_lookup_temp": 672, "nwp_temp": 672, "calculate_attenuation_zphi": 672, "uncorrected_differential_phas": 672, "pia": 672, "pida": 672, "corrected_reflect": [672, 673, 689], "corrected_differential_reflect": [672, 673, 689], "kdp_maesaka": 672, "specific_differential_phas": [672, 689], "hydroclass_semisupervis": [672, 673], "uncorrected_cross_correlation_ratio": 672, "radar_echo_classif": 672, "boundarynorm": 672, "012": [672, 675, 691], "plot_hydrometeor": [672, 675, 691], "gucxprecipradarcmacppis2": 673, "025840": 673, "pyart_carbone42": 673, "corrected_specific_diff_phas": [673, 689], "hydromet_class": 673, "filtered_corrected_specific_diff_phas": [673, 689], "sounding_temperatur": [673, 689], "hydro_classif": 673, "2e9": 673, "pipelin": 673, "hid_color": 673, "lightblu": 673, "mediumblu": 673, "darkorang": 673, "lightpink": 673, "darkgrai": 673, "lime": 673, "yellow": 673, "cmaphid": 673, "listedcolormap": 673, "cmapmeth": 673, "cmapmeth_trop": 673, "adjust_fhc_colorbar_for_pyart": 673, "hd": 673, "adjust_meth_colorbar_for_pyart": 673, "zrain": 673, "z_all": 673, "z_c": 673, "two_panel_plot": 673, "var1": 673, "vmin1": 673, "vmax1": 673, "cmap1": 673, "rdylbu_r": 673, "units1": 673, "var2": 673, "vmin2": 673, "vmax2": 673, "cmap2": 673, "units2": 673, "return_flag": 673, "lim": 673, "193": [673, 675, 691], "plot_hydrometeor_class_x_band": [673, 675, 691], "2682": 674, "5470354519784": 674, "447328651323915": 674, "5273": 674, "055615736172": 674, "7533807586878538": 674, "7815": 674, "51210340485": 674, "341798234730959": 674, "10403": 674, "798749463633": 674, "977668723091483": 674, "14259": 674, "735154148191": 674, "905980195850134": 674, "18533": 674, "70608163625": 674, "262251073494554": 674, "22800": [674, 684], "97541932203": 674, "613871516659856": 674, "27060": [674, 684], "25919727981": 674, "959520922973752": 674, "31310": 674, "269606200978": 674, "29787217825651": 674, "35549": 674, "73140401952": 674, "62760841473937": 674, "39777": 674, "36820153147": 674, "94740904122591": 674, "43991": 674, "90973467566": 674, "25595719181001": 674, "50263": 674, "42219179496": 674, "671291364356875": 674, "58621": 674, "52730140835": 674, "22838316485286": 674, "71003": 674, "14627731778": 674, "68": 674, "92013945430517": 674, "87118": 674, "5253265705": 674, "4666496720165": 674, "106741": 674, "22752280161": 674, "65626102685928": 674, "125477": 674, "00644101389": 674, "124": 674, "97631322406232": 674, "143293": 674, "15816160105": 674, "38701202347875": 674, "160000": 674, "28993562795": 674, "68618156574667": 674, "mla2119412050u": 674, "zlevel": 674, "5000": [674, 688], "u_allsweep": 674, "v_allsweep": 674, "idx": 674, "radar_1sweep": 674, "vad_brown": 674, "u_avg": 674, "nanmean": 674, "v_avg": 674, "sharei": 674, "220": [674, 675, 691], "plot_vad": [674, 675, 691], "592": 675, "xd": [678, 679, 680, 695], "open_cfradial1_datatre": [678, 679, 680, 695], "to_radar": [678, 679, 680, 695], "sweep_0": 678, "vel_textur": [678, 686], "velocity_textur": [678, 686, 689], "At": [678, 686], "velocity_dealias": [678, 686], "445": [678, 681, 691], "plot_dealias_xradar": [678, 681, 691], "101": [679, 695], "10_000": [679, 695], "50_000": [679, 695], "plot_grid_xradar": [679, 681, 691], "788": [680, 681, 691], "plot_xradar": [680, 681, 691], "066": 681, "conceptu": 682, "projectpythia": 682, "understand": 682, "maik": 682, "heistermann": 682, "bam": 682, "kellei": 682, "peura": 682, "pfaff": 682, "wolff": 682, "emerg": 682, "bull": 682, "amer": 682, "soc": 682, "117": 682, "128": 682, "00240": 682, "sophist": 682, "tutori": 682, "materi": 682, "erad": 682, "asr": 682, "asm": 682, "Or": 682, "pyart_env": [682, 685, 688, 696], "wish": 682, "unreleas": 682, "charg": 682, "resourc": [682, 692], "lassen": 682, "radtec": 682, "rsl_path": [682, 692], "usr": 682, "wrapper": 682, "fastest": 682, "cbc": 682, "glpk": 682, "coincbc": [682, 692, 696], "coin_install_dir": [682, 692, 696], "ask": [682, 696], "hypothet": 684, "dict_kei": [684, 689], "rain_rate_a": [684, 689], "volume_numb": 684, "platform_typ": 684, "instrument_typ": 684, "primary_axi": 684, "make_empty_ppi_radar": 684, "59416667": 684, "isn": 684, "240": 684, "660": 684, "720": 684, "780": 684, "960": 684, "1260": 684, "1560": 684, "1620": 684, "1680": 684, "1740": 684, "1860": 684, "1920": 684, "1980": 684, "2040": 684, "2100": 684, "2160": 684, "2220": 684, "2280": 684, "2340": 684, "2400": 684, "2460": 684, "2520": 684, "2580": 684, "2640": 684, "2700": 684, "2760": 684, "2820": 684, "2880": 684, "2940": 684, "3060": 684, "3120": 684, "3180": 684, "3240": 684, "3300": 684, "3360": 684, "3420": 684, "3480": 684, "3540": 684, "3600": 684, "3660": 684, "3720": 684, "3780": 684, "3840": 684, "3900": 684, "3960": 684, "4020": 684, "4080": 684, "4140": 684, "4200": 684, "4260": 684, "4320": 684, "4380": 684, "4440": 684, "4500": 684, "4560": 684, "4620": 684, "4680": 684, "4740": 684, "4800": 684, "4860": 684, "4920": 684, "4980": 684, "5040": 684, "5100": 684, "5160": 684, "5220": 684, "5280": 684, "5340": 684, "5400": 684, "5460": 684, "5520": 684, "5580": 684, "5640": 684, "5700": 684, "5760": 684, "5820": 684, "5880": 684, "5940": 684, "6000": [684, 688], "6060": 684, "6120": 684, "6180": 684, "6240": 684, "6300": 684, "6360": 684, "6420": 684, "6480": 684, "6540": 684, "6600": 684, "6660": 684, "6720": 684, "6780": 684, "6840": 684, "6900": 684, "6960": 684, "7020": 684, "7080": 684, "7140": 684, "7200": [684, 690], "7260": 684, "7320": 684, "7380": 684, "7440": 684, "7560": 684, "7620": 684, "7680": 684, "7740": 684, "7800": 684, "7860": 684, "7920": 684, "7980": 684, "8040": 684, "8100": 684, "8160": 684, "8220": 684, "8280": 684, "8340": 684, "8400": 684, "8460": 684, "8520": 684, "8580": 684, "8640": 684, "8700": 684, "8760": 684, "8820": 684, "8880": 684, "8940": 684, "9000": [684, 688], "9060": 684, "9120": 684, "9180": 684, "9240": 684, "9300": 684, "9360": 684, "9420": 684, "9480": 684, "9540": 684, "9600": 684, "9660": 684, "9720": 684, "9780": 684, "9840": 684, "9900": 684, "9960": 684, "10020": 684, "10080": 684, "10140": 684, "10200": 684, "10260": 684, "10320": 684, "10380": 684, "10440": 684, "10500": 684, "10560": 684, "10620": 684, "10680": 684, "10740": 684, "10800": 684, "10860": 684, "10920": 684, "10980": 684, "11040": 684, "11100": 684, "11160": 684, "11220": 684, "11280": 684, "11340": 684, "11400": 684, "11460": 684, "11520": 684, "11580": 684, "11640": 684, "11700": 684, "11760": 684, "11820": 684, "11880": 684, "11940": 684, "12060": 684, "12120": 684, "12180": 684, "12240": 684, "12300": 684, "12360": 684, "12420": 684, "12480": 684, "12540": 684, "12600": 684, "12660": 684, "12720": 684, "12780": 684, "12840": 684, "12900": 684, "12960": 684, "13020": 684, "13080": 684, "13140": 684, "13200": 684, "13260": 684, "13320": 684, "13380": 684, "13440": 684, "13500": 684, "13560": 684, "13620": 684, "13680": 684, "13740": 684, "13800": 684, "13860": 684, "13920": 684, "13980": 684, "14040": 684, "14100": 684, "14160": 684, "14220": 684, "14280": 684, "14340": 684, "14400": 684, "14460": 684, "14520": 684, "14580": 684, "14640": 684, "14700": 684, "14760": 684, "14820": 684, "14880": 684, "14940": 684, "15060": 684, "15120": 684, "15180": 684, "15240": 684, "15300": 684, "15360": 684, "15420": 684, "15480": 684, "15540": 684, "15600": 684, "15660": 684, "15720": 684, "15780": 684, "15840": 684, "15900": 684, "15960": 684, "16020": 684, "16080": 684, "16140": 684, "16200": 684, "16260": 684, "16320": 684, "16380": 684, "16440": 684, "16500": 684, "16560": 684, "16620": 684, "16680": 684, "16740": 684, "16800": 684, "16860": 684, "16920": 684, "16980": 684, "17040": 684, "17100": 684, "17160": 684, "17220": 684, "17280": 684, "17340": 684, "17400": 684, "17460": 684, "17520": 684, "17580": 684, "17640": 684, "17700": 684, "17760": 684, "17820": 684, "17880": 684, "17940": 684, "18000": [684, 688], "18060": 684, "18120": 684, "18180": 684, "18240": 684, "18300": 684, "18360": 684, "18420": 684, "18480": 684, "18540": 684, "18600": 684, "18660": 684, "18720": 684, "18780": 684, "18840": 684, "18900": 684, "18960": 684, "19020": 684, "19080": 684, "19140": 684, "19200": 684, "19260": 684, "19320": 684, "19380": 684, "19440": 684, "19500": 684, "19560": 684, "19620": 684, "19680": 684, "19740": 684, "19800": 684, "19860": 684, "19920": 684, "19980": 684, "20040": 684, "20100": 684, "20160": 684, "20220": 684, "20280": 684, "20340": 684, "20400": 684, "20460": 684, "20520": 684, "20580": 684, "20640": 684, "20700": 684, "20760": 684, "20820": 684, "20880": 684, "20940": 684, "21000": [684, 688], "21060": 684, "21120": 684, "21180": 684, "21240": 684, "21300": 684, "21360": 684, "21420": 684, "21480": 684, "21540": 684, "21600": 684, "21660": 684, "21720": 684, "21780": 684, "21840": 684, "21900": 684, "21960": 684, "22020": 684, "22080": 684, "22140": 684, "22200": 684, "22260": 684, "22320": 684, "22380": 684, "22440": 684, "22500": 684, "22560": 684, "22620": 684, "22680": 684, "22740": 684, "22860": 684, "22920": 684, "22980": 684, "23040": 684, "23100": 684, "23160": 684, "23220": 684, "23280": 684, "23340": 684, "23400": 684, "23460": 684, "23520": 684, "23580": 684, "23640": 684, "23700": 684, "23760": 684, "23820": 684, "23880": 684, "23940": 684, "24000": [684, 688], "24060": 684, "24120": 684, "24180": 684, "24240": 684, "24300": 684, "24360": 684, "24420": 684, "24480": 684, "24540": 684, "24600": 684, "24660": 684, "24720": 684, "24780": 684, "24840": 684, "24900": 684, "24960": 684, "25020": 684, "25080": 684, "25140": 684, "25200": 684, "25260": 684, "25320": 684, "25380": 684, "25440": 684, "25500": 684, "25560": 684, "25620": 684, "25680": 684, "25740": 684, "25800": 684, "25860": 684, "25920": 684, "25980": 684, "26040": 684, "26100": 684, "26160": 684, "26220": 684, "26280": 684, "26340": 684, "26400": 684, "26460": 684, "26520": 684, "26580": 684, "26640": 684, "26700": 684, "26760": 684, "26820": 684, "26880": 684, "26940": 684, "27000": [684, 688], "27120": 684, "27180": 684, "27240": 684, "27300": 684, "27360": 684, "27420": 684, "27480": 684, "27540": 684, "27600": 684, "27660": 684, "27720": 684, "27780": 684, "27840": 684, "27900": 684, "27960": 684, "28020": 684, "28080": 684, "28140": 684, "28200": 684, "28260": 684, "28320": 684, "28380": 684, "28440": 684, "28500": 684, "28560": 684, "28620": 684, "28680": 684, "28740": 684, "28800": 684, "28860": 684, "28920": 684, "28980": 684, "29040": 684, "29100": 684, "29160": 684, "29220": 684, "29280": 684, "29340": 684, "29400": 684, "29460": 684, "29520": 684, "29580": 684, "29640": 684, "29700": 684, "29760": 684, "29820": 684, "29880": 684, "29940": 684, "30000": [684, 688], "30060": 684, "30120": 684, "30180": 684, "30240": 684, "30300": 684, "30360": 684, "30420": 684, "30480": 684, "30540": 684, "30600": 684, "30660": 684, "30720": 684, "30780": 684, "30840": 684, "30900": 684, "30960": 684, "31020": 684, "31080": 684, "31140": 684, "31200": 684, "31260": 684, "31320": 684, "31380": 684, "31440": 684, "31500": 684, "31560": 684, "31620": 684, "31680": 684, "31740": 684, "31800": 684, "31860": 684, "31920": 684, "31980": 684, "32040": 684, "32100": 684, "32160": 684, "32220": 684, "32280": 684, "32340": 684, "32400": 684, "32460": 684, "32520": 684, "32580": 684, "32640": 684, "32700": 684, "32760": 684, "32820": 684, "32880": 684, "32940": 684, "33000": [684, 688], "33060": 684, "33120": 684, "33180": 684, "33240": 684, "33300": 684, "33360": 684, "33420": 684, "33480": 684, "33540": 684, "33600": 684, "33660": 684, "33720": 684, "33780": 684, "33840": 684, "33900": 684, "33960": 684, "34020": 684, "34080": 684, "34140": 684, "34200": 684, "34260": 684, "34320": 684, "34380": 684, "34440": 684, "34500": 684, "34560": 684, "34620": 684, "34680": 684, "34740": 684, "34800": 684, "34860": 684, "34920": 684, "34980": 684, "35040": 684, "35100": 684, "35160": 684, "35220": 684, "35280": 684, "35340": 684, "35400": 684, "35460": 684, "35520": 684, "35580": 684, "35640": 684, "35700": 684, "35760": 684, "35820": 684, "35880": 684, "35940": 684, "36000": [684, 688], "36060": 684, "36120": 684, "36180": 684, "36240": 684, "36300": 684, "36360": 684, "36420": 684, "36480": 684, "36540": 684, "36600": 684, "36660": 684, "36720": 684, "36780": 684, "36840": 684, "36900": 684, "36960": 684, "37020": 684, "37080": 684, "37140": 684, "37200": 684, "37260": 684, "37320": 684, "37380": 684, "37440": 684, "37500": 684, "37560": 684, "37620": 684, "37680": 684, "37740": 684, "37800": 684, "37860": 684, "37920": 684, "37980": 684, "38040": 684, "38100": 684, "38160": 684, "38220": 684, "38280": 684, "38340": 684, "38400": 684, "38460": 684, "38520": 684, "38580": 684, "38640": 684, "38700": 684, "38760": 684, "38820": 684, "38880": 684, "38940": 684, "39000": [684, 688], "39060": 684, "39120": 684, "39180": 684, "39240": 684, "39300": 684, "39360": 684, "39420": 684, "39480": 684, "39540": 684, "39600": 684, "39660": 684, "39720": 684, "39780": 684, "39840": 684, "39900": 684, "39960": 684, "59416776": 684, "59416886": 684, "59489769": 684, "59489879": 684, "5948999": 684, "59415662": 684, "59414657": 684, "5874659": 684, "58745576": 684, "58744563": 684, "59414621": 684, "59412575": 684, "5805231": 684, "58050246": 684, "58048182": 684, "59419881": 684, "59423095": 684, "61560159": 684, "61563401": 684, "61566644": 684, "59418877": 684, "59421087": 684, "6089062": 684, "6089285": 684, "60895079": 684, "59417836": 684, "59419005": 684, "60196382": 684, "60197561": 684, "60198741": 684, "get_metadata": 684, "ref_dict": 684, "reflecitivity_horizont": 684, "21875": 684, "34375": 684, "0078125": 684, "2109375": 684, "1171875": 684, "59375": 684, "421875": 684, "5625": 684, "7109375": 684, "609375": 684, "5078125": 684, "3828125": 684, "6875": 684, "328125": 684, "3203125": 684, "859375": 684, "6484375": 684, "8515625": 684, "9375": [684, 690], "0234375": 684, "6328125": 684, "2890625": 684, "546875": 684, "578125": 684, "6796875": 684, "ref_gt_0": 685, "mask_dict": 685, "reflectivity_mask": 685, "coolwarm": 685, "sherm": [685, 688], "782": [685, 688], "matplotlibdeprecationwarn": [685, 688], "position": [685, 688], "829": [685, 688], "write_cfradi": 685, "new_radar": 685, "2pi": 686, "wave": 686, "3pi": 686, "erron": 686, "phenomena": [686, 690], "maximium": 686, "unambi": 686, "preprocess": 686, "thankfulli": [686, 688], "surround": [686, 688], "presenc": 686, "524973": 686, "vleociti": 686, "realist": 686, "characterist": 688, "100000": 688, "gates_to_grid": 688, "99000": 688, "98000": 688, "97000": 688, "96000": 688, "95000": 688, "94000": 688, "93000": 688, "92000": 688, "91000": 688, "90000": 688, "89000": 688, "88000": 688, "87000": 688, "86000": 688, "85000": 688, "84000": 688, "83000": 688, "82000": 688, "81000": 688, "80000": 688, "79000": 688, "78000": 688, "77000": 688, "76000": 688, "75000": 688, "74000": 688, "73000": 688, "72000": 688, "71000": 688, "70000": 688, "69000": 688, "68000": 688, "67000": 688, "66000": 688, "65000": 688, "64000": 688, "63000": 688, "62000": 688, "61000": 688, "59000": 688, "58000": 688, "57000": 688, "56000": 688, "55000": 688, "54000": 688, "53000": 688, "52000": 688, "51000": 688, "49000": 688, "48000": 688, "47000": 688, "46000": 688, "45000": 688, "44000": 688, "43000": 688, "42000": 688, "41000": 688, "38000": 688, "37000": 688, "35000": 688, "34000": 688, "32000": 688, "31000": 688, "29000": 688, "28000": 688, "26000": 688, "23000": 688, "22000": 688, "19000": 688, "16000": 688, "14000": 688, "13000": 688, "8000": 688, "longitudn": 688, "latitudn": 688, "suffer": 688, "artifici": 688, "feather": 688, "grid_bett": 688, "1750": 688, "sgpxsaprcmacsuri5": 689, "20171004": 689, "203018": 689, "total_pow": 689, "xsapr_clutt": 689, "signal_to_noise_ratio": 689, "unfolded_differential_phas": 689, "corrected_differential_phas": 689, "filtered_corrected_differential_phas": 689, "path_integrated_attenu": 689, "specific_differential_attenu": 689, "path_integrated_differential_attenu": 689, "nonhydrometeor": 689, "exclude_equ": 689, "refl_arrai": 689, "reflectivity_w_mask": 689, "iter_slic": [689, 690], "9344453454202706": 689, "620691732853737": 689, "3756584054113996": 689, "597935968662154": 689, "696735014111216": 689, "061894569912447": 689, "721673265240488": 689, "086695918593689": 689, "33930700509078": 689, "599363169483158": 689, "836875745223637": 689, "051601529570966": 689, "22435547210836": 689, "378109469982695": 689, "553820234067336": 689, "648943841665002": 689, "837593740986444": 689, "049614721040282": 689, "331202567459613": 689, "585432697375357": 689, "87002341270722": 689, "993012637722325": 689, "061966001642219": 689, "122799449619672": 689, "861035552720102": 689, "74608994279257": 689, "148801770281325": 689, "70860719727862": 689, "989513966551444": 689, "188644935344827": 689, "89301878240611": 689, "172644371021923": 689, "79879842243138": 689, "912806090219976": 689, "766281467013889": 689, "920522471877334": 689, "898600907318164": 689, "971026055481874": 689, "110503947133682": 689, "094456418731509": 689, "0822160050675675": 689, "036430544969512": 689, "259332430219459": 689, "2438254054588604": 689, "473482666015625": 689, "574283685503023": 689, "866719139946832": 689, "771468742643597": 689, "beam_azimuth_angl": 690, "azimuth_angle_from_true_north": 690, "radial_azimuth_coordin": 690, "beam_elevation_angl": 690, "elevation_angle_from_horizontal_plan": 690, "radial_elevation_coordin": 690, "1832": 690, "log_differential_reflectivity_hv": 690, "875": 690, "differential_phase_hv": 690, "equivalent_reflectivity_factor": 690, "correlation_ratio": 690, "meters_per_second": 690, "doppler_spectrum_width": 690, "radial_velocity_of_scatterers_away_from_instru": 690, "target_fixed_angl": 690, "degrees_north": 690, "degrees_east": 690, "projection_range_coordin": 690, "range_to_measurement_volum": 690, "radial_range_coordin": 690, "spacing_is_const": 690, "meters_to_center_of_first_g": 690, "2125": 690, "meters_between_g": 690, "s20": 690, "unitless": 690, "coplan": 690, "vertical_point": 690, "idl": 690, "azimuth_surveil": 690, "elevation_surveil": 690, "sunscan": 690, "manual_ppi": 690, "manual_rhi": 690, "17t19": 690, "21z": 690, "time_in_seconds_since_volume_start": 690, "calendar": 690, "gregorian": 690, "katx": 690, "original_contain": 690, "vcp_pattern": 690, "7470703": 690, "7196045": 690, "6893921": 690, "511719": 690, "get_slic": 690, "sweep_1": 690, "52734375": 690, "indici": 690, "slice_indic": 690, "9066728410400056": 690, "478547577741713": 690, "587792083929423": 690, "871031288639269": 690, "971692217963673": 690, "830616390843327": 690, "108188248095756": 690, "483419908190385": 690, "88976917057903": 690, "852766685681688": 690, "410455582269897": 690, "66444787446138": 690, "997862391449566": 690, "172098402018502": 690, "489752513534416": 690, "712565619531706": 690, "commonli": 690, "263": 691, "9x": 692, "10x": 692, "11x": 692, "But": 692, "bash": 692, "pythonpath": 692, "pth": 692, "build_ext": 692, "segfault": 692, "Theres": 692, "proper": 692, "reinstal": 692, "remedi": 692, "fno": 692, "protector": 692, "d_fortify_sourc": 692, "cflag": 692, "makefil": 692, "troubl": 692, "define_macro": 692, "macro": 692, "extra_compile_arg": 692, "m32": 692, "extra_link_arg": 692, "m64": 692, "proj_lib": 692, "plai": 692, "xx": 692, "xxx": 692, "mpl_toolkit": 692, "candid": 695, "cfradial1": 695, "conflict": 696, "exit": 696, "led": 696, "manag": 696, "deactiv": 696, "enviro": 696, "scratch": 696, "spyder": 696, "though": 696, "yourusernam": 696, "youranacondadir": 696, "gitter": 696, "im": 696}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [127, 1, 0, "-", "correct"], [176, 1, 0, "-", "exceptions"], [177, 1, 0, "-", "filters"], [212, 1, 0, "-", "graph"], [371, 1, 0, "-", "io"], [392, 1, 0, "-", "lazydict"], [416, 1, 0, "-", "map"], [429, 1, 0, "-", "retrieve"], [472, 1, 0, "-", "testing"], [575, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_antenna"], [122, 0, 1, "", "cartesian_to_geographic"], [123, 0, 1, "", "cartesian_to_geographic_aeqd"], [124, 0, 1, "", "cartesian_vectors_to_geographic"], [125, 0, 1, "", "geographic_to_cartesian"], [126, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[128, 2, 1, "", "GateFilter"], [158, 0, 1, "", "calc_cloud_mask"], [159, 0, 1, "", "calc_noise_floor"], [160, 0, 1, "", "calc_zdr_offset"], [161, 0, 1, "", "calculate_attenuation"], [162, 0, 1, "", "calculate_attenuation_philinear"], [163, 0, 1, "", "calculate_attenuation_zphi"], [164, 0, 1, "", "cloud_threshold"], [165, 0, 1, "", "correct_bias"], [166, 0, 1, "", "correct_noise_rhohv"], [167, 0, 1, "", "dealias_fourdd"], [168, 0, 1, "", "dealias_region_based"], [169, 0, 1, "", "dealias_unwrap_phase"], [170, 0, 1, "", "despeckle_field"], [171, 0, 1, "", "find_objects"], [172, 0, 1, "", "moment_based_gate_filter"], [173, 0, 1, "", "phase_proc_lp"], [174, 0, 1, "", "phase_proc_lp_gf"], [175, 0, 1, "", "range_correction"]], "pyart.correct.GateFilter": [[129, 3, 1, "", "copy"], [130, 3, 1, "", "exclude_above"], [131, 3, 1, "", "exclude_above_toa"], [132, 3, 1, "", "exclude_all"], [133, 3, 1, "", "exclude_below"], [134, 3, 1, "", "exclude_equal"], [135, 3, 1, "", "exclude_gates"], [136, 3, 1, "", "exclude_inside"], [137, 3, 1, "", "exclude_invalid"], [138, 3, 1, "", "exclude_last_gates"], [139, 3, 1, "", "exclude_masked"], [140, 3, 1, "", "exclude_none"], [141, 3, 1, "", "exclude_not_equal"], [142, 3, 1, "", "exclude_outside"], [143, 3, 1, "", "exclude_transition"], [144, 4, 1, "", "gate_excluded"], [145, 4, 1, "", "gate_included"], [146, 3, 1, "", "include_above"], [147, 3, 1, "", "include_all"], [148, 3, 1, "", "include_below"], [149, 3, 1, "", "include_equal"], [150, 3, 1, "", "include_gates"], [151, 3, 1, "", "include_inside"], [152, 3, 1, "", "include_none"], [153, 3, 1, "", "include_not_equal"], [154, 3, 1, "", "include_not_masked"], [155, 3, 1, "", "include_not_transition"], [156, 3, 1, "", "include_outside"], [157, 3, 1, "", "include_valid"]], "pyart.filters": [[178, 2, 1, "", "GateFilter"], [208, 0, 1, "", "iso0_based_gate_filter"], [209, 0, 1, "", "moment_and_texture_based_gate_filter"], [210, 0, 1, "", "moment_based_gate_filter"], [211, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[179, 3, 1, "", "copy"], [180, 3, 1, "", "exclude_above"], [181, 3, 1, "", "exclude_above_toa"], [182, 3, 1, "", "exclude_all"], [183, 3, 1, "", "exclude_below"], [184, 3, 1, "", "exclude_equal"], [185, 3, 1, "", "exclude_gates"], [186, 3, 1, "", "exclude_inside"], [187, 3, 1, "", "exclude_invalid"], [188, 3, 1, "", "exclude_last_gates"], [189, 3, 1, "", "exclude_masked"], [190, 3, 1, "", "exclude_none"], [191, 3, 1, "", "exclude_not_equal"], [192, 3, 1, "", "exclude_outside"], [193, 3, 1, "", "exclude_transition"], [194, 4, 1, "", "gate_excluded"], [195, 4, 1, "", "gate_included"], [196, 3, 1, "", "include_above"], [197, 3, 1, "", "include_all"], [198, 3, 1, "", "include_below"], [199, 3, 1, "", "include_equal"], [200, 3, 1, "", "include_gates"], [201, 3, 1, "", "include_inside"], [202, 3, 1, "", "include_none"], [203, 3, 1, "", "include_not_equal"], [204, 3, 1, "", "include_not_masked"], [205, 3, 1, "", "include_not_transition"], [206, 3, 1, "", "include_outside"], [207, 3, 1, "", "include_valid"]], "pyart.graph": [[213, 2, 1, "", "AirborneRadarDisplay"], [243, 2, 1, "", "GridMapDisplay"], [260, 2, 1, "", "GridMapDisplayBasemap"], [274, 2, 1, "", "RadarDisplay"], [303, 2, 1, "", "RadarMapDisplay"], [336, 2, 1, "", "RadarMapDisplayBasemap"], [369, 0, 1, "", "plot_convstrat_scheme"], [370, 0, 1, "", "plot_maxcappi"]], "pyart.graph.AirborneRadarDisplay": [[214, 3, 1, "", "generate_az_rhi_title"], [215, 3, 1, "", "generate_filename"], [216, 3, 1, "", "generate_ray_title"], [217, 3, 1, "", "generate_title"], [218, 3, 1, "", "generate_vpt_title"], [219, 3, 1, "", "label_xaxis_r"], [220, 3, 1, "", "label_xaxis_rays"], [221, 3, 1, "", "label_xaxis_time"], [222, 3, 1, "", "label_xaxis_x"], [223, 3, 1, "", "label_yaxis_field"], [224, 3, 1, "", "label_yaxis_y"], [225, 3, 1, "", "label_yaxis_z"], [226, 3, 1, "", "plot"], [227, 3, 1, "", "plot_azimuth_to_rhi"], [228, 3, 1, "", "plot_colorbar"], [229, 3, 1, "", "plot_cr_raster"], [230, 3, 1, "", "plot_cross_hair"], [231, 3, 1, "", "plot_grid_lines"], [232, 3, 1, "", "plot_label"], [233, 3, 1, "", "plot_labels"], [234, 3, 1, "", "plot_ppi"], [235, 3, 1, "", "plot_range_ring"], [236, 3, 1, "", "plot_range_rings"], [237, 3, 1, "", "plot_ray"], [238, 3, 1, "", "plot_rhi"], [239, 3, 1, "", "plot_sweep_grid"], [240, 3, 1, "", "plot_vpt"], [241, 3, 1, "", "set_aspect_ratio"], [242, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[244, 3, 1, "", "cartopy_coastlines"], [245, 3, 1, "", "cartopy_political_boundaries"], [246, 3, 1, "", "cartopy_states"], [247, 3, 1, "", "generate_filename"], [248, 3, 1, "", "generate_grid_title"], [249, 3, 1, "", "generate_latitudinal_level_title"], [250, 3, 1, "", "generate_longitudinal_level_title"], [251, 3, 1, "", "plot_colorbar"], [252, 3, 1, "", "plot_cross_section"], [253, 3, 1, "", "plot_crosshairs"], [254, 3, 1, "", "plot_grid"], [255, 3, 1, "", "plot_latitude_slice"], [256, 3, 1, "", "plot_latitudinal_level"], [257, 3, 1, "", "plot_longitude_slice"], [258, 3, 1, "", "plot_longitudinal_level"], [259, 3, 1, "", "plot_maxcappi"]], "pyart.graph.GridMapDisplayBasemap": [[261, 3, 1, "", "generate_filename"], [262, 3, 1, "", "generate_grid_title"], [263, 3, 1, "", "generate_latitudinal_level_title"], [264, 3, 1, "", "generate_longitudinal_level_title"], [265, 3, 1, "", "get_basemap"], [266, 3, 1, "", "plot_basemap"], [267, 3, 1, "", "plot_colorbar"], [268, 3, 1, "", "plot_crosshairs"], [269, 3, 1, "", "plot_grid"], [270, 3, 1, "", "plot_latitude_slice"], [271, 3, 1, "", "plot_latitudinal_level"], [272, 3, 1, "", "plot_longitude_slice"], [273, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[275, 3, 1, "", "generate_az_rhi_title"], [276, 3, 1, "", "generate_filename"], [277, 3, 1, "", "generate_ray_title"], [278, 3, 1, "", "generate_title"], [279, 3, 1, "", "generate_vpt_title"], [280, 3, 1, "", "label_xaxis_r"], [281, 3, 1, "", "label_xaxis_rays"], [282, 3, 1, "", "label_xaxis_time"], [283, 3, 1, "", "label_xaxis_x"], [284, 3, 1, "", "label_yaxis_field"], [285, 3, 1, "", "label_yaxis_y"], [286, 3, 1, "", "label_yaxis_z"], [287, 3, 1, "", "plot"], [288, 3, 1, "", "plot_azimuth_to_rhi"], [289, 3, 1, "", "plot_colorbar"], [290, 3, 1, "", "plot_cr_raster"], [291, 3, 1, "", "plot_cross_hair"], [292, 3, 1, "", "plot_grid_lines"], [293, 3, 1, "", "plot_label"], [294, 3, 1, "", "plot_labels"], [295, 3, 1, "", "plot_ppi"], [296, 3, 1, "", "plot_range_ring"], [297, 3, 1, "", "plot_range_rings"], [298, 3, 1, "", "plot_ray"], [299, 3, 1, "", "plot_rhi"], [300, 3, 1, "", "plot_vpt"], [301, 3, 1, "", "set_aspect_ratio"], [302, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[304, 3, 1, "", "generate_az_rhi_title"], [305, 3, 1, "", "generate_filename"], [306, 3, 1, "", "generate_ray_title"], [307, 3, 1, "", "generate_title"], [308, 3, 1, "", "generate_vpt_title"], [309, 3, 1, "", "label_xaxis_r"], [310, 3, 1, "", "label_xaxis_rays"], [311, 3, 1, "", "label_xaxis_time"], [312, 3, 1, "", "label_xaxis_x"], [313, 3, 1, "", "label_yaxis_field"], [314, 3, 1, "", "label_yaxis_y"], [315, 3, 1, "", "label_yaxis_z"], [316, 3, 1, "", "plot"], [317, 3, 1, "", "plot_azimuth_to_rhi"], [318, 3, 1, "", "plot_colorbar"], [319, 3, 1, "", "plot_cr_raster"], [320, 3, 1, "", "plot_cross_hair"], [321, 3, 1, "", "plot_grid_lines"], [322, 3, 1, "", "plot_label"], [323, 3, 1, "", "plot_labels"], [324, 3, 1, "", "plot_line_geo"], [325, 3, 1, "", "plot_line_xy"], [326, 3, 1, "", "plot_point"], [327, 3, 1, "", "plot_ppi"], [328, 3, 1, "", "plot_ppi_map"], [329, 3, 1, "", "plot_range_ring"], [330, 3, 1, "", "plot_range_rings"], [331, 3, 1, "", "plot_ray"], [332, 3, 1, "", "plot_rhi"], [333, 3, 1, "", "plot_vpt"], [334, 3, 1, "", "set_aspect_ratio"], [335, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[337, 3, 1, "", "generate_az_rhi_title"], [338, 3, 1, "", "generate_filename"], [339, 3, 1, "", "generate_ray_title"], [340, 3, 1, "", "generate_title"], [341, 3, 1, "", "generate_vpt_title"], [342, 3, 1, "", "label_xaxis_r"], [343, 3, 1, "", "label_xaxis_rays"], [344, 3, 1, "", "label_xaxis_time"], [345, 3, 1, "", "label_xaxis_x"], [346, 3, 1, "", "label_yaxis_field"], [347, 3, 1, "", "label_yaxis_y"], [348, 3, 1, "", "label_yaxis_z"], [349, 3, 1, "", "plot"], [350, 3, 1, "", "plot_azimuth_to_rhi"], [351, 3, 1, "", "plot_colorbar"], [352, 3, 1, "", "plot_cr_raster"], [353, 3, 1, "", "plot_cross_hair"], [354, 3, 1, "", "plot_grid_lines"], [355, 3, 1, "", "plot_label"], [356, 3, 1, "", "plot_labels"], [357, 3, 1, "", "plot_line_geo"], [358, 3, 1, "", "plot_line_xy"], [359, 3, 1, "", "plot_point"], [360, 3, 1, "", "plot_ppi"], [361, 3, 1, "", "plot_ppi_map"], [362, 3, 1, "", "plot_range_ring"], [363, 3, 1, "", "plot_range_rings"], [364, 3, 1, "", "plot_ray"], [365, 3, 1, "", "plot_rhi"], [366, 3, 1, "", "plot_vpt"], [367, 3, 1, "", "set_aspect_ratio"], [368, 3, 1, "", "set_limits"]], "pyart.io": [[372, 0, 1, "", "prepare_for_read"], [373, 0, 1, "", "read"], [374, 0, 1, "", "read_arm_sonde"], [375, 0, 1, "", "read_arm_sonde_vap"], [376, 0, 1, "", "read_cfradial"], [377, 0, 1, "", "read_chl"], [378, 0, 1, "", "read_grid"], [379, 0, 1, "", "read_grid_mdv"], [380, 0, 1, "", "read_mdv"], [381, 0, 1, "", "read_nexrad_archive"], [382, 0, 1, "", "read_nexrad_cdm"], [383, 0, 1, "", "read_nexrad_level3"], [384, 0, 1, "", "read_rsl"], [385, 0, 1, "", "read_sigmet"], [386, 0, 1, "", "read_uf"], [387, 0, 1, "", "write_cfradial"], [388, 0, 1, "", "write_grid"], [389, 0, 1, "", "write_grid_geotiff"], [390, 0, 1, "", "write_grid_mdv"], [391, 0, 1, "", "write_uf"]], "pyart.lazydict": [[393, 2, 1, "", "LazyLoadDict"], [406, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[394, 3, 1, "", "clear"], [395, 3, 1, "", "copy"], [396, 3, 1, "", "get"], [397, 3, 1, "", "has_key"], [398, 3, 1, "", "items"], [399, 3, 1, "", "keys"], [400, 3, 1, "", "pop"], [401, 3, 1, "", "popitem"], [402, 3, 1, "", "set_lazy"], [403, 3, 1, "", "setdefault"], [404, 3, 1, "", "update"], [405, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[407, 3, 1, "", "clear"], [408, 3, 1, "", "get"], [409, 3, 1, "", "items"], [410, 3, 1, "", "keys"], [411, 3, 1, "", "pop"], [412, 3, 1, "", "popitem"], [413, 3, 1, "", "setdefault"], [414, 3, 1, "", "update"], [415, 3, 1, "", "values"]], "pyart.map": [[417, 2, 1, "", "GateMapper"], [421, 0, 1, "", "example_roi_func_constant"], [422, 0, 1, "", "example_roi_func_dist"], [423, 0, 1, "", "example_roi_func_dist_beam"], [424, 0, 1, "", "grid_from_radars"], [425, 0, 1, "", "grid_ppi_sweeps"], [426, 0, 1, "", "grid_rhi_sweeps"], [427, 0, 1, "", "map_gates_to_grid"], [428, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[418, 4, 1, "", "distance_tolerance"], [419, 3, 1, "", "mapped_radar"], [420, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[430, 0, 1, "", "ZtoR"], [431, 0, 1, "", "calculate_snr_from_reflectivity"], [432, 0, 1, "", "calculate_velocity_texture"], [433, 0, 1, "", "composite_reflectivity"], [434, 0, 1, "", "compute_cdr"], [435, 0, 1, "", "compute_evp"], [436, 0, 1, "", "compute_l"], [437, 0, 1, "", "compute_noisedBZ"], [438, 0, 1, "", "compute_qvp"], [439, 0, 1, "", "compute_rqvp"], [440, 0, 1, "", "compute_snr"], [441, 0, 1, "", "compute_svp"], [442, 0, 1, "", "compute_ts_along_coord"], [443, 0, 1, "", "compute_vp"], [444, 0, 1, "", "conv_strat_raut"], [445, 0, 1, "", "conv_strat_yuter"], [446, 0, 1, "", "create_cappi"], [447, 0, 1, "", "create_cfad"], [448, 0, 1, "", "dealias_spectra"], [449, 0, 1, "", "est_rain_rate_a"], [450, 0, 1, "", "est_rain_rate_hydro"], [451, 0, 1, "", "est_rain_rate_kdp"], [452, 0, 1, "", "est_rain_rate_z"], [453, 0, 1, "", "est_rain_rate_za"], [454, 0, 1, "", "est_rain_rate_zkdp"], [455, 0, 1, "", "est_rain_rate_zpoly"], [456, 0, 1, "", "feature_detection"], [457, 0, 1, "", "fetch_radar_time_profile"], [458, 0, 1, "", "get_freq_band"], [459, 0, 1, "", "grid_displacement_pc"], [460, 0, 1, "", "grid_shift"], [461, 0, 1, "", "hydroclass_semisupervised"], [462, 0, 1, "", "kdp_maesaka"], [463, 0, 1, "", "kdp_schneebeli"], [464, 0, 1, "", "kdp_vulpiani"], [465, 0, 1, "", "map_profile_to_gates"], [466, 0, 1, "", "quasi_vertical_profile"], [467, 0, 1, "", "spectra_moments"], [468, 0, 1, "", "steiner_conv_strat"], [469, 0, 1, "", "texture_of_complex_phase"], [470, 0, 1, "", "vad_browning"], [471, 0, 1, "", "vad_michelson"]], "pyart.testing": [[473, 2, 1, "", "Grid"], [483, 2, 1, "", "InTemporaryDirectory"], [485, 2, 1, "", "Radar"], [514, 2, 1, "", "RadarSpectra"], [559, 0, 1, "", "get_metadata"], [560, 0, 1, "", "get_test_data"], [561, 0, 1, "", "make_empty_grid"], [562, 0, 1, "", "make_empty_ppi_radar"], [563, 0, 1, "", "make_empty_rhi_radar"], [564, 0, 1, "", "make_empty_spectra_radar"], [565, 0, 1, "", "make_gaussian_storm_grid"], [566, 0, 1, "", "make_normal_storm"], [567, 0, 1, "", "make_single_ray_radar"], [568, 0, 1, "", "make_storm_grid"], [569, 0, 1, "", "make_target_grid"], [570, 0, 1, "", "make_target_radar"], [571, 0, 1, "", "make_target_rhi_radar"], [572, 0, 1, "", "make_target_spectra_radar"], [573, 0, 1, "", "make_velocity_aliased_radar"], [574, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[474, 3, 1, "", "add_field"], [475, 3, 1, "", "get_point_longitude_latitude"], [476, 3, 1, "", "get_projparams"], [477, 3, 1, "", "init_point_altitude"], [478, 3, 1, "", "init_point_longitude_latitude"], [479, 3, 1, "", "init_point_x_y_z"], [480, 4, 1, "", "projection_proj"], [481, 3, 1, "", "to_xarray"], [482, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[484, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[486, 3, 1, "", "add_field"], [487, 3, 1, "", "add_field_like"], [488, 3, 1, "", "add_filter"], [489, 3, 1, "", "check_field_exists"], [490, 3, 1, "", "extract_sweeps"], [491, 3, 1, "", "get_azimuth"], [492, 3, 1, "", "get_elevation"], [493, 3, 1, "", "get_end"], [494, 3, 1, "", "get_field"], [495, 3, 1, "", "get_gate_area"], [496, 3, 1, "", "get_gate_lat_lon_alt"], [497, 3, 1, "", "get_gate_x_y_z"], [498, 3, 1, "", "get_nyquist_vel"], [499, 3, 1, "", "get_slice"], [500, 3, 1, "", "get_start"], [501, 3, 1, "", "get_start_end"], [502, 3, 1, "", "info"], [503, 3, 1, "", "init_gate_altitude"], [504, 3, 1, "", "init_gate_longitude_latitude"], [505, 3, 1, "", "init_gate_x_y_z"], [506, 3, 1, "", "init_rays_per_sweep"], [507, 3, 1, "", "iter_azimuth"], [508, 3, 1, "", "iter_elevation"], [509, 3, 1, "", "iter_end"], [510, 3, 1, "", "iter_field"], [511, 3, 1, "", "iter_slice"], [512, 3, 1, "", "iter_start"], [513, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[515, 4, 1, "", "altitude"], [516, 4, 1, "", "azimuth"], [517, 3, 1, "", "check_field_exists"], [518, 4, 1, "", "elevation"], [519, 4, 1, "", "fields"], [520, 4, 1, "", "fixed_angle"], [521, 4, 1, "", "gate_altitude"], [522, 4, 1, "", "gate_latitude"], [523, 4, 1, "", "gate_longitude"], [524, 4, 1, "", "gate_x"], [525, 4, 1, "", "gate_y"], [526, 4, 1, "", "gate_z"], [527, 3, 1, "", "get_end"], [528, 3, 1, "", "get_slice"], [529, 3, 1, "", "get_start"], [530, 3, 1, "", "get_start_end"], [531, 3, 1, "", "init_gate_altitude"], [532, 3, 1, "", "init_gate_longitude_latitude"], [533, 3, 1, "", "init_gate_x_y_z"], [534, 3, 1, "", "init_rays_per_sweep"], [535, 3, 1, "", "iter_azimuth"], [536, 3, 1, "", "iter_elevation"], [537, 3, 1, "", "iter_end"], [538, 3, 1, "", "iter_field"], [539, 3, 1, "", "iter_slice"], [540, 3, 1, "", "iter_start"], [541, 3, 1, "", "iter_start_end"], [542, 4, 1, "", "latitude"], [543, 4, 1, "", "longitude"], [544, 4, 1, "", "ngates"], [545, 4, 1, "", "npulses_max"], [546, 4, 1, "", "nrays"], [547, 4, 1, "", "nsweeps"], [548, 4, 1, "", "projection"], [549, 4, 1, "", "range"], [550, 4, 1, "", "rays_per_sweep"], [551, 4, 1, "", "scan_type"], [552, 4, 1, "", "sweep_end_ray_index"], [553, 4, 1, "", "sweep_mode"], [554, 4, 1, "", "sweep_number"], [555, 4, 1, "", "sweep_start_ray_index"], [556, 4, 1, "", "time"], [557, 3, 1, "", "to_vpt"], [558, 4, 1, "", "velocity_bins"]], "pyart.util": [[576, 0, 1, "", "angular_mean"], [577, 0, 1, "", "angular_mean_deg"], [578, 0, 1, "", "angular_std"], [579, 0, 1, "", "angular_std_deg"], [580, 0, 1, "", "angular_texture_2d"], [581, 0, 1, "", "column_vertical_profile"], [582, 0, 1, "", "compute_directional_stats"], [583, 0, 1, "", "cross_section_ppi"], [584, 0, 1, "", "cross_section_rhi"], [585, 0, 1, "", "datetime_from_dataset"], [586, 0, 1, "", "datetime_from_grid"], [587, 0, 1, "", "datetime_from_radar"], [588, 0, 1, "", "datetimes_from_dataset"], [589, 0, 1, "", "datetimes_from_radar"], [590, 0, 1, "", "determine_sweeps"], [591, 0, 1, "", "estimate_noise_hs74"], [592, 0, 1, "", "for_azimuth"], [593, 0, 1, "", "get_column_rays"], [594, 0, 1, "", "get_field_location"], [595, 0, 1, "", "image_mute_radar"], [596, 0, 1, "", "interval_mean"], [597, 0, 1, "", "interval_std"], [598, 0, 1, "", "is_vpt"], [599, 0, 1, "", "join_radar"], [600, 0, 1, "", "ma_broadcast_to"], [601, 0, 1, "", "mean_of_two_angles"], [602, 0, 1, "", "mean_of_two_angles_deg"], [603, 0, 1, "", "rolling_window"], [604, 0, 1, "", "simulated_vel_from_profile"], [605, 0, 1, "", "sphere_distance"], [606, 0, 1, "", "subset_radar"], [607, 0, 1, "", "texture"], [608, 0, 1, "", "texture_along_ray"], [609, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 613, 615, 616, 619, 622], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 469], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 559], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 640, 641, 642, 648, 679, 688], "add_field": [32, 46, 474, 486], "get_point_longitude_latitud": [33, 475], "get_projparam": [34, 476], "init_point_altitud": [35, 477], "init_point_longitude_latitud": [36, 478], "init_point_x_y_z": [37, 479], "projection_proj": [38, 480], "to_xarrai": [39, 481], "write": [40, 482], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 614, 615, 619, 620, 623, 625, 639, 641, 642, 668, 682, 685, 690, 693], "add_field_lik": [47, 487], "add_filt": [48, 488], "check_field_exist": [49, 77, 489, 517], "extract_sweep": [50, 490], "get_azimuth": [51, 491], "get_elev": [52, 492], "get_end": [53, 87, 493, 527], "get_field": [54, 494], "get_gate_area": [55, 495], "get_gate_lat_lon_alt": [56, 496], "get_gate_x_y_z": [57, 497], "get_nyquist_vel": [58, 498], "get_slic": [59, 88, 499, 528], "get_start": [60, 89, 500, 529], "get_start_end": [61, 90, 501, 530], "info": [62, 502], "init_gate_altitud": [63, 91, 503, 531], "init_gate_longitude_latitud": [64, 92, 504, 532], "init_gate_x_y_z": [65, 93, 505, 533], "init_rays_per_sweep": [66, 94, 506, 534], "iter_azimuth": [67, 95, 507, 535], "iter_elev": [68, 96, 508, 536], "iter_end": [69, 97, 509, 537], "iter_field": [70, 98, 510, 538], "iter_slic": [71, 99, 511, 539], "iter_start": [72, 100, 512, 540], "iter_start_end": [73, 101, 513, 541], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558], "altitud": [75, 515], "azimuth": [76, 516], "elev": [78, 518], "field": [79, 519, 685], "fixed_angl": [80, 520], "gate_altitud": [81, 521], "gate_latitud": [82, 522], "gate_longitud": [83, 523], "gate_x": [84, 524], "gate_i": [85, 525], "gate_z": [86, 526], "latitud": [102, 542, 636], "longitud": [103, 543, 636], "ngate": [104, 544], "npulses_max": [105, 545], "nrai": [106, 546], "nsweep": [107, 547], "project": [108, 548], "rang": [109, 549, 619], "rays_per_sweep": [110, 550], "scan_typ": [111, 551], "sweep_end_ray_index": [112, 552], "sweep_mod": [113, 553], "sweep_numb": [114, 554], "sweep_start_ray_index": [115, 555], "time": [116, 556, 615, 619, 632, 637, 643, 665, 675, 676, 681, 691], "to_vpt": [117, 557, 609], "velocity_bin": [118, 558], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_antenna": 121, "cartesian_to_geograph": 122, "cartesian_to_geographic_aeqd": 123, "cartesian_vectors_to_geograph": 124, "geographic_to_cartesian": 125, "geographic_to_cartesian_aeqd": 126, "correct": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 620, 627, 628, 633, 695], "gatefilt": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 689], "copi": [129, 179, 395], "exclude_abov": [130, 180], "exclude_above_toa": [131, 181], "exclude_al": [132, 182], "exclude_below": [133, 183], "exclude_equ": [134, 184], "exclude_g": [135, 185], "exclude_insid": [136, 186], "exclude_invalid": [137, 187], "exclude_last_g": [138, 188], "exclude_mask": [139, 189], "exclude_non": [140, 190], "exclude_not_equ": [141, 191], "exclude_outsid": [142, 192], "exclude_transit": [143, 193], "gate_exclud": [144, 194], "gate_includ": [145, 195], "include_abov": [146, 196], "include_al": [147, 197], "include_below": [148, 198], "include_equ": [149, 199], "include_g": [150, 200], "include_insid": [151, 201], "include_non": [152, 202], "include_not_equ": [153, 203], "include_not_mask": [154, 204], "include_not_transit": [155, 205], "include_outsid": [156, 206], "include_valid": [157, 207], "calc_cloud_mask": 158, "calc_noise_floor": 159, "calc_zdr_offset": 160, "calculate_attenu": 161, "calculate_attenuation_philinear": 162, "calculate_attenuation_zphi": 163, "cloud_threshold": 164, "correct_bia": 165, "correct_noise_rhohv": 166, "dealias_fourdd": 167, "dealias_region_bas": 168, "dealias_unwrap_phas": 169, "despeckle_field": 170, "find_object": 171, "moment_based_gate_filt": [172, 210], "phase_proc_lp": 173, "phase_proc_lp_gf": 174, "range_correct": 175, "except": 176, "filter": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "iso0_based_gate_filt": 208, "moment_and_texture_based_gate_filt": 209, "temp_based_gate_filt": 211, "graph": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 695], "airborneradardisplai": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "generate_az_rhi_titl": [214, 275, 304, 337], "generate_filenam": [215, 247, 261, 276, 305, 338], "generate_ray_titl": [216, 277, 306, 339], "generate_titl": [217, 278, 307, 340], "generate_vpt_titl": [218, 279, 308, 341], "label_xaxis_r": [219, 280, 309, 342], "label_xaxis_rai": [220, 281, 310, 343], "label_xaxis_tim": [221, 282, 311, 344], "label_xaxis_x": [222, 283, 312, 345], "label_yaxis_field": [223, 284, 313, 346], "label_yaxis_i": [224, 285, 314, 347], "label_yaxis_z": [225, 286, 315, 348], "plot": [226, 287, 316, 349, 614, 615, 616, 618, 619, 620, 629, 633, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 669, 672, 674, 680], "plot_azimuth_to_rhi": [227, 288, 317, 350], "plot_colorbar": [228, 251, 267, 289, 318, 351], "plot_cr_rast": [229, 290, 319, 352], "plot_cross_hair": [230, 291, 320, 353], "plot_grid_lin": [231, 292, 321, 354], "plot_label": [232, 233, 293, 294, 322, 323, 355, 356], "plot_ppi": [234, 295, 327, 360], "plot_range_r": [235, 236, 296, 297, 329, 330, 362, 363], "plot_rai": [237, 298, 331, 364], "plot_rhi": [238, 299, 332, 365], "plot_sweep_grid": 239, "plot_vpt": [240, 300, 333, 366], "set_aspect_ratio": [241, 301, 334, 367], "set_limit": [242, 302, 335, 368], "gridmapdisplai": [243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 663], "cartopy_coastlin": 244, "cartopy_political_boundari": 245, "cartopy_st": 246, "generate_grid_titl": [248, 262], "generate_latitudinal_level_titl": [249, 263], "generate_longitudinal_level_titl": [250, 264], "plot_cross_sect": 252, "plot_crosshair": [253, 268], "plot_grid": [254, 269], "plot_latitude_slic": [255, 270], "plot_latitudinal_level": [256, 271], "plot_longitude_slic": [257, 272], "plot_longitudinal_level": [258, 273], "plot_maxcappi": [259, 370], "gridmapdisplaybasemap": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "get_basemap": 265, "plot_basemap": 266, "radardisplai": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "radarmapdisplai": [303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 616], "plot_line_geo": [324, 357], "plot_line_xi": [325, 358], "plot_point": [326, 359], "plot_ppi_map": [328, 361, 616], "radarmapdisplaybasemap": [336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "plot_convstrat_schem": 369, "io": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 695], "prepare_for_read": 372, "read": [373, 614, 615, 616, 619, 620, 635, 636], "read_arm_sond": 374, "read_arm_sonde_vap": 375, "read_cfradi": 376, "read_chl": 377, "read_grid": 378, "read_grid_mdv": 379, "read_mdv": 380, "read_nexrad_arch": 381, "read_nexrad_cdm": 382, "read_nexrad_level3": 383, "read_rsl": 384, "read_sigmet": 385, "read_uf": 386, "write_cfradi": 387, "write_grid": 388, "write_grid_geotiff": 389, "write_grid_mdv": 390, "write_uf": 391, "lazydict": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415], "lazyloaddict": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "clear": [394, 407], "get": [396, 408, 682], "has_kei": 397, "item": [398, 409], "kei": [399, 410, 615], "pop": [400, 411], "popitem": [401, 412], "set_lazi": 402, "setdefault": [403, 413], "updat": [404, 414, 625], "valu": [405, 415], "mutablemap": [406, 407, 408, 409, 410, 411, 412, 413, 414, 415], "map": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 619, 633, 638, 640, 641, 642, 656, 688], "gatemapp": [417, 418, 419, 420, 639], "distance_toler": 418, "mapped_radar": 419, "time_toler": 420, "example_roi_func_const": 421, "example_roi_func_dist": 422, "example_roi_func_dist_beam": 423, "grid_from_radar": 424, "grid_ppi_sweep": 425, "grid_rhi_sweep": 426, "map_gates_to_grid": 427, "map_to_grid": 428, "retriev": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 620, 633, 666], "ztor": 430, "calculate_snr_from_reflect": 431, "calculate_velocity_textur": 432, "composite_reflect": 433, "compute_cdr": 434, "compute_evp": 435, "compute_l": 436, "compute_noisedbz": 437, "compute_qvp": 438, "compute_rqvp": 439, "compute_snr": 440, "compute_svp": 441, "compute_ts_along_coord": 442, "compute_vp": 443, "conv_strat_raut": 444, "conv_strat_yut": 445, "create_cappi": 446, "author": 446, "create_cfad": 447, "dealias_spectra": 448, "est_rain_rate_a": 449, "est_rain_rate_hydro": 450, "est_rain_rate_kdp": 451, "est_rain_rate_z": 452, "est_rain_rate_za": 453, "est_rain_rate_zkdp": 454, "est_rain_rate_zpoli": 455, "feature_detect": 456, "fetch_radar_time_profil": 457, "get_freq_band": 458, "grid_displacement_pc": 459, "grid_shift": 460, "hydroclass_semisupervis": 461, "usag": 461, "kdp_maesaka": 462, "kdp_schneeb": 463, "kdp_vulpiani": 464, "map_profile_to_g": 465, "quasi_vertical_profil": 466, "spectra_mo": 467, "paramet": [467, 616], "steiner_conv_strat": 468, "vad_brown": 470, "vad_michelson": 471, "test": [472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 623, 693], "intemporarydirectori": [483, 484], "cleanup": 484, "get_test_data": 560, "make_empty_grid": 561, "make_empty_ppi_radar": 562, "make_empty_rhi_radar": 563, "make_empty_spectra_radar": 564, "make_gaussian_storm_grid": 565, "make_normal_storm": 566, "make_single_ray_radar": 567, "make_storm_grid": 568, "make_target_grid": 569, "make_target_radar": 570, "make_target_rhi_radar": 571, "make_target_spectra_radar": 572, "make_velocity_aliased_radar": 573, "make_velocity_aliased_rhi_radar": 574, "util": [575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609], "angular_mean": 576, "angular_mean_deg": 577, "angular_std": 578, "angular_std_deg": 579, "angular_texture_2d": 580, "column_vertical_profil": 581, "compute_directional_stat": 582, "cross_section_ppi": 583, "cross_section_rhi": 584, "datetime_from_dataset": 585, "datetime_from_grid": 586, "datetime_from_radar": 587, "datetimes_from_dataset": 588, "datetimes_from_radar": 589, "determine_sweep": 590, "estimate_noise_hs74": 591, "for_azimuth": 592, "assumpt": [592, 605], "get_column_rai": 593, "get_field_loc": 594, "image_mute_radar": 595, "interval_mean": 596, "interval_std": 597, "is_vpt": 598, "join_radar": 599, "ma_broadcast_to": 600, "mean_of_two_angl": 601, "mean_of_two_angles_deg": 602, "rolling_window": 603, "simulated_vel_from_profil": 604, "sphere_dist": 605, "subset_radar": 606, "textur": 607, "texture_along_rai": 608, "api": [610, 620], "refer": [610, 620, 670, 671], "manual": 610, "blog": [611, 619, 621], "blend": 612, "observ": 612, "from": [612, 614, 619, 620, 635, 648, 652, 654, 655, 657, 658, 659, 660, 661, 664, 692], "tracer": 612, "us": [612, 614, 615, 616, 619, 620, 630, 639, 640, 663, 678, 679, 680], "py": [612, 613, 614, 619, 620, 622, 623, 624, 625, 678, 679, 680, 682, 689, 690, 692, 693, 695], "art": [612, 613, 614, 619, 620, 622, 623, 624, 625, 678, 679, 680, 682, 689, 690, 692, 693, 695], "import": [612, 614, 615, 616, 618, 623, 693], "goe": 612, "data": [612, 614, 615, 616, 618, 619, 620, 635, 636, 679, 688, 689], "access": [612, 614, 616, 618, 619], "csapr": 612, "load": [612, 615], "lma": 612, "flash": 612, "june": 612, "17th": 612, "case": 612, "17": [612, 622], "rhi": [612, 620, 657, 658, 659, 660, 661, 662], "activ": 613, "develop": [613, 626], "submit": 613, "pull": 613, "request": 613, "pr": [613, 622], "first": 613, "you": [613, 620], "have": 613, "done": 613, "so": 613, "alreadi": 613, "need": 613, "fork": 613, "github": [613, 623, 625, 693], "repositori": 613, "second": 613, "termin": 613, "clone": 613, "your": [613, 619, 620, 646, 650], "remot": 613, "git": [613, 625], "command": 613, "third": 613, "creat": [613, 614, 615, 619, 625, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 684, 696], "doc": [613, 617], "conda": [613, 625], "environ": [613, 696], "fourth": 613, "we": [613, 619], "instal": [613, 623, 682, 692, 693], "trmm": 613, "rsl": 613, "librari": 613, "lastli": 613, "python": [613, 623, 682, 693], "script": 613, "within": [613, 619], "okai": 613, "should": 613, "now": 613, "readi": 613, "make": [613, 625], "chang": 613, "sourc": [613, 692], "code": [613, 619, 623, 693], "1": [613, 619, 622, 671], "new": [613, 617], "branch": 613, "our": [613, 615, 616, 618, 620], "2": [613, 619, 622, 635, 636, 671, 695], "push": 613, "To": 613, "let": 613, "commit": 613, "after": 613, "thi": [613, 619, 622], "i": [613, 620, 682], "what": [613, 682], "look": 613, "like": 613, "hope": 613, "help": [613, 682], "hail": 614, "storm": 614, "visual": [614, 615, 618], "panda": 614, "motiv": [614, 618, 620, 621], "nexrad": [614, 616, 618, 619, 635, 636, 652, 653], "fsspec": 614, "setup": [614, 618, 623, 624, 693], "filesystem": 614, "bucket": 614, "file": [614, 619, 623, 652, 654, 655, 657, 658, 659, 660, 661, 684, 685, 693], "dataset": 614, "nexradaw": 614, "configur": 614, "search": [614, 620], "download": [614, 618], "spc": 614, "report": 614, "function": [614, 618], "loop": [614, 619], "through": [614, 619, 620], "helper": 614, "scale": 614, "bar": 614, "an": [614, 651, 659, 660, 696], "anim": [614, 619], "imag": [614, 618, 651], "view": [614, 615], "final": [614, 615], "conclus": [614, 616, 618, 620, 621], "work": [615, 670, 671], "vertic": 615, "point": [615, 619, 668], "xarrai": 615, "hvplot": 615, "overview": [615, 619], "ka": 615, "band": 615, "arm": [615, 620, 623, 682, 693], "zenith": 615, "kazr": 615, "instrument": 615, "clean": [615, 620], "up": [615, 616, 619, 696], "bit": 615, "analysi": 615, "subset": 615, "reflect": [615, 628, 651, 653, 659, 660, 669], "veloc": [615, 620, 630, 667, 678, 686], "quick": 615, "extract": [615, 668], "date": [615, 618, 619], "inform": [615, 696], "label": 615, "holoview": 615, "try": [615, 616, 695], "raster": 615, "takeawai": 615, "fix": [616, 622, 636], "weird": 616, "pattern": 616, "when": 616, "level": [616, 619, 635, 636], "3": [616, 619, 622, 635, 663], "The": [616, 618, 620, 621, 623, 682, 690, 693], "recreat": 616, "issu": [616, 636], "set": [616, 619, 673, 696], "matplotlib": 616, "style": [616, 623, 693], "without": 616, "alpha": 616, "add": [616, 618], "argument": 616, "dig": 616, "investig": [616, 618, 620], "pcolormesh": 616, "edgecolor": 616, "modifi": [616, 650], "default": 616, "solut": [616, 620, 621], "sever": 618, "weather": 618, "wisconsin": 618, "outbreak": 618, "focus": 618, "southern": 618, "reproduc": 618, "event": 618, "road": 618, "interst": 618, "featur": [618, 619, 622, 671], "avail": 618, "run": 618, "gif": 619, "post": [619, 621], "cover": 619, "aw": [619, 635], "how": [619, 625, 670, 671, 695], "acquir": 619, "prerequisit": 619, "s3": 619, "filysystem": 619, "select": 619, "station": 619, "period": 619, "option": [619, 682, 692, 696], "individu": 619, "locat": 619, "gener": 619, "list": 619, "check": 619, "plottabl": 619, "product": 619, "ad": [619, 696], "custom": [619, 673], "counti": 619, "zoom": 619, "colorbar": [619, 650], "note": [619, 625], "full": 619, "block": 619, "construct": 619, "properli": 619, "creation": 619, "whole": 619, "summari": [619, 670, 671], "scan": 620, "cloud": [620, 629, 635], "epcap": 620, "problem": [620, 621], "dq": 620, "browser": 620, "act": 620, "token": 620, "live": 620, "pass": 620, "credenti": 620, "take": 620, "peak": 620, "strategi": 620, "sort": 620, "all": 620, "ppi": [620, 640, 645, 654, 655, 656, 664, 680], "appli": 620, "explor": 620, "threshold": 620, "snr": 620, "revis": 620, "where": 620, "slice": 620, "frame": 620, "templat": 621, "changelog": 622, "18": 622, "enhanc": 622, "made": 622, "bug": 622, "other": 622, "merg": 622, "contributor": [622, 623, 693], "releas": [622, 625], "0": [622, 695], "document": [622, 625], "improv": 622, "16": 622, "mainten": 622, "upkeep": 622, "15": 622, "v1": 622, "14": 622, "6": 622, "5": 622, "4": 622, "13": 622, "12": 622, "7": 622, "11": 622, "8": 622, "deprec": 622, "10": 622, "9": 622, "picasso": 622, "": [623, 626, 693], "guid": [623, 626, 693, 694], "toolkit": [623, 682, 693], "link": [623, 693], "cite": [623, 682, 693], "resourc": [623, 693], "continu": 624, "integr": 624, "tag": 625, "prepar": 625, "trigger": 625, "pypi": 625, "upload": 625, "packag": 625, "forg": 625, "announc": 625, "open": 625, "forum": 625, "version": 626, "moment": [627, 633, 652], "exampl": [627, 633, 634, 638, 644, 666, 667, 670, 677], "attenu": 628, "calcul": [629, 631, 669, 672, 674], "mask": [629, 689], "dealia": [630, 678], "doppler": 630, "region": 630, "base": 630, "algorithm": [630, 670, 671], "zdr": 631, "bia": 631, "comput": [632, 637, 643, 665, 675, 676, 681, 691], "galleri": [633, 683], "input": [633, 634, 695], "output": [633, 634, 695], "xradar": [633, 677, 678, 679, 680], "older": 636, "compar": [639, 645], "two": [639, 642, 662], "singl": [640, 641], "sweep": 640, "cartesian": [640, 641, 642, 688], "2d": 640, "weight": 640, "v": 645, "cappi": [645, 649], "choos": 646, "colormap": 646, "corner": 647, "reflector": 647, "cross": [648, 664], "section": [648, 664], "max": 649, "mute": 651, "multipl": [652, 657, 658], "cfradial": 654, "mdv": [655, 659, 660, 661], "cartopi": 656, "panel": [657, 658, 662, 663], "cf": [657, 658], "radial": [657, 658, 678], "contour": [659, 660], "line": [659, 660], "volum": 664, "cfad": 667, "diagram": 667, "valid": 667, "column": 668, "abov": 668, "composit": 669, "convect": [670, 671], "stratiform": [670, 671], "classif": [670, 671, 672, 673], "recommend": [670, 671], "best": [670, 671], "practic": [670, 671], "detect": 671, "part": 671, "warm": 671, "season": 671, "cool": 671, "hydrometeor": [672, 673], "frequenc": 673, "vad": 674, "profil": 674, "can": 682, "do": 682, "short": 682, "cours": 682, "depend": [682, 692, 696], "contribut": 682, "notebook": 683, "basic": 684, "ingest": 684, "netcdf": 684, "manipul": 685, "save": 685, "object": [685, 690], "dealias": 686, "With": 689, "index": 690, "build": 692, "requir": 692, "obtain": 692, "latest": 692, "frequent": 692, "ask": 692, "question": 692, "user": 694, "anaconda": 696, "channel": 696, "path": 696, "more": 696}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_antenna": [[121, "pyart-core-cartesian-to-antenna"]], "pyart.core.cartesian_to_geographic": [[122, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[123, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[124, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[125, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[126, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[127, "pyart-correct"]], "pyart.correct.GateFilter": [[128, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[129, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[130, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_above_toa": [[131, "pyart-correct-gatefilter-exclude-above-toa"]], "pyart.correct.GateFilter.exclude_all": [[132, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[133, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[134, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[135, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[136, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[137, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_last_gates": [[138, "pyart-correct-gatefilter-exclude-last-gates"]], "pyart.correct.GateFilter.exclude_masked": [[139, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[140, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[141, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[142, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[143, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[144, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[145, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[146, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[147, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[148, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[149, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[150, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[151, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[152, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[153, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[154, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[155, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[156, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[157, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calc_cloud_mask": [[158, "pyart-correct-calc-cloud-mask"]], "pyart.correct.calc_noise_floor": [[159, "pyart-correct-calc-noise-floor"]], "pyart.correct.calc_zdr_offset": [[160, "pyart-correct-calc-zdr-offset"]], "pyart.correct.calculate_attenuation": [[161, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[162, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[163, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.cloud_threshold": [[164, "pyart-correct-cloud-threshold"]], "pyart.correct.correct_bias": [[165, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[166, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[167, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[168, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[169, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[170, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[171, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[172, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[173, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[174, "pyart-correct-phase-proc-lp-gf"]], "pyart.correct.range_correction": [[175, "pyart-correct-range-correction"]], "pyart.exceptions": [[176, "pyart-exceptions"]], "pyart.filters": [[177, "pyart-filters"]], "pyart.filters.GateFilter": [[178, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[179, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[180, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_above_toa": [[181, "pyart-filters-gatefilter-exclude-above-toa"]], "pyart.filters.GateFilter.exclude_all": [[182, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[183, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[184, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[185, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[186, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[187, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_last_gates": [[188, "pyart-filters-gatefilter-exclude-last-gates"]], "pyart.filters.GateFilter.exclude_masked": [[189, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[190, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[191, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[192, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[193, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[194, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[195, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[196, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[197, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[198, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[199, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[200, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[201, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[202, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[203, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[204, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[205, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[206, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[207, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[208, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[209, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[210, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[211, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[212, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[213, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[214, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[215, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[216, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[217, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[218, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[219, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[220, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[221, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[222, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[223, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[224, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[225, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[226, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[227, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[228, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[229, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[230, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[231, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[232, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[233, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[234, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[235, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[236, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[237, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[238, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[239, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[240, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[241, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[242, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[243, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[244, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[245, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[246, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[247, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[248, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[249, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[250, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[251, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[252, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[253, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[254, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[255, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[256, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[257, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[258, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplay.plot_maxcappi": [[259, "pyart-graph-gridmapdisplay-plot-maxcappi"]], "pyart.graph.GridMapDisplayBasemap": [[260, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[261, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[262, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[263, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[264, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[265, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[266, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[267, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[268, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[269, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[270, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[271, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[272, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[273, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[274, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[275, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[276, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[277, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[278, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[279, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[280, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[281, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[282, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[283, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[284, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[285, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[286, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[287, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[288, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[289, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[290, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[291, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[292, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[293, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[294, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[295, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[296, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[297, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[298, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[299, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[300, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[301, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[302, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[303, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[304, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[305, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[306, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[307, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[308, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[309, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[310, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[311, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[312, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[313, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[314, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[315, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[316, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[317, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[318, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[319, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[320, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[321, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[322, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[323, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[324, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[325, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[326, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[327, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[328, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[329, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[330, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[331, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[332, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[333, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[334, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[335, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[336, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[337, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[338, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[339, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[340, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[341, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[342, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[343, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[344, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[345, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[346, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[347, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[348, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[349, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[350, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[351, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[352, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[353, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[354, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[355, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[356, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[357, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[358, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[359, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[360, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[361, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[362, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[363, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[364, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[365, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[366, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[367, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[368, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[369, "pyart-graph-plot-convstrat-scheme"]], "pyart.graph.plot_maxcappi": [[370, "pyart-graph-plot-maxcappi"]], "pyart.io": [[371, "pyart-io"]], "pyart.io.prepare_for_read": [[372, "pyart-io-prepare-for-read"]], "pyart.io.read": [[373, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[374, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[375, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[376, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[377, "pyart-io-read-chl"]], "pyart.io.read_grid": [[378, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[379, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[380, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[381, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[382, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[383, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[384, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[385, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[386, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[387, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[388, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[389, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[390, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[391, "pyart-io-write-uf"]], "pyart.lazydict": [[392, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[393, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[394, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[395, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[396, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[397, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[398, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[399, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[400, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[401, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[402, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[403, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[404, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[405, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[406, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[407, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[408, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[409, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[410, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[411, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[412, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[413, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[414, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[415, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[416, "pyart-map"]], "pyart.map.GateMapper": [[417, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[418, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[419, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[420, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[421, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[422, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[423, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[424, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[425, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[426, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[427, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[428, "pyart-map-map-to-grid"]], "pyart.retrieve": [[429, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[430, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[431, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[432, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[433, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[434, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_evp": [[435, "pyart-retrieve-compute-evp"]], "pyart.retrieve.compute_l": [[436, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[437, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_qvp": [[438, "pyart-retrieve-compute-qvp"]], "pyart.retrieve.compute_rqvp": [[439, "pyart-retrieve-compute-rqvp"]], "pyart.retrieve.compute_snr": [[440, "pyart-retrieve-compute-snr"]], "pyart.retrieve.compute_svp": [[441, "pyart-retrieve-compute-svp"]], "pyart.retrieve.compute_ts_along_coord": [[442, "pyart-retrieve-compute-ts-along-coord"]], "pyart.retrieve.compute_vp": [[443, "pyart-retrieve-compute-vp"]], "pyart.retrieve.conv_strat_raut": [[444, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[445, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.create_cappi": [[446, "pyart-retrieve-create-cappi"]], "Author": [[446, "author"]], "pyart.retrieve.create_cfad": [[447, "pyart-retrieve-create-cfad"]], "pyart.retrieve.dealias_spectra": [[448, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[449, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[450, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[451, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[452, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[453, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[454, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[455, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[456, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[457, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[458, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[459, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[460, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[461, "pyart-retrieve-hydroclass-semisupervised"]], "Usage": [[461, "usage"]], "pyart.retrieve.kdp_maesaka": [[462, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[463, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[464, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[465, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[466, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[467, "pyart-retrieve-spectra-moments"]], "Parameter": [[467, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[468, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[469, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[470, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[471, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[472, "pyart-testing"]], "pyart.testing.Grid": [[473, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[474, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[475, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[476, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[477, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[478, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[479, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[480, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[481, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[482, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[483, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[484, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[485, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[486, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[487, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[488, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[489, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[490, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[491, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[492, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[493, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[494, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[495, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[496, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[497, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[498, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[499, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[500, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[501, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[502, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[503, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[504, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[505, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[506, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[507, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[508, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[509, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[510, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[511, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[512, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[513, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[514, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[515, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[516, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[517, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[518, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[519, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[520, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[521, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[522, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[523, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[524, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[525, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[526, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[527, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[528, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[529, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[530, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[531, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[532, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[533, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[534, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[535, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[536, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[537, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[538, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[539, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[540, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[541, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[542, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[543, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[544, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[545, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[546, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[547, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[548, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[549, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[550, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[551, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[552, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[553, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[554, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[555, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[556, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[557, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[558, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[559, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[560, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[561, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[562, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[563, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[564, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[565, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[566, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[567, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[568, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[569, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[570, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_rhi_radar": [[571, "pyart-testing-make-target-rhi-radar"]], "pyart.testing.make_target_spectra_radar": [[572, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[573, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[574, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[575, "pyart-util"]], "pyart.util.angular_mean": [[576, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[577, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[578, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[579, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[580, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[581, "pyart-util-column-vertical-profile"]], "pyart.util.compute_directional_stats": [[582, "pyart-util-compute-directional-stats"]], "pyart.util.cross_section_ppi": [[583, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[584, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[585, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[586, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[587, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[588, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[589, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[590, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[591, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[592, "pyart-util-for-azimuth"]], "Assumptions": [[592, "assumptions"], [605, "assumptions"]], "pyart.util.get_column_rays": [[593, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[594, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[595, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[596, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[597, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[598, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[599, "pyart-util-join-radar"]], "pyart.util.ma_broadcast_to": [[600, "pyart-util-ma-broadcast-to"]], "pyart.util.mean_of_two_angles": [[601, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[602, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[603, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[604, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[605, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[606, "pyart-util-subset-radar"]], "pyart.util.texture": [[607, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[608, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[609, "pyart-util-to-vpt"]], "API Reference Manual": [[610, "api-reference-manual"]], "Blog": [[611, "blog"]], "Blending Observations from TRACER using Py-ART": [[612, "blending-observations-from-tracer-using-py-art"]], "Imports": [[612, "imports"], [614, "imports"], [615, "imports"], [616, "imports"], [618, "imports"]], "GOES data access": [[612, "goes-data-access"]], "CSAPR data access": [[612, "csapr-data-access"]], "Load LMA Flash data": [[612, "load-lma-flash-data"]], "June 17th case": [[612, "june-17th-case"]], "June 17 RHI": [[612, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[613, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[613, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[613, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[613, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[613, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[613, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[613, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[613, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[613, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[613, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[613, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[613, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[614, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[614, "motivation"], [618, "motivation"], [620, "motivation"], [621, "motivation"]], "NEXRAD Data Access - fsspec": [[614, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[614, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[614, "read-in-a-file"]], "Visualize the Dataset": [[614, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[614, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[614, "configure-the-search"]], "Search and Download the Data": [[614, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[614, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[614, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[614, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[614, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[614, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[614, "create-an-animation-of-the-images"]], "View the Final Animation": [[614, "view-the-final-animation"]], "Conclusion": [[614, "conclusion"], [616, "conclusion"], [618, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[615, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[615, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[615, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[615, "plot-using-pyart"]], "Load in the data using pyart": [[615, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[615, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[615, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[615, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[615, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[615, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[615, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[615, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[615, "create-our-holoviews-plots"]], "View the Final Visualization": [[615, "view-the-final-visualization"]], "Try Using Rasterize": [[615, "try-using-rasterize"]], "Key Takeaways": [[615, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[616, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[616, "the-data"]], "Data Access": [[616, "data-access"]], "Recreate the Issue Using PyART": [[616, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[616, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[616, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[616, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[616, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[616, "add-in-the-alpha-argument"]], "Dig into the Issue": [[616, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[616, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[616, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[616, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[616, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[616, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[616, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[616, "fixing-the-issue-in-pyart"]], "New Docs": [[617, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[618, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[618, "the-outbreak"]], "Focusing on Southern Wisconsin": [[618, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[618, "reproducing-event-images"]], "Visualizing the Event": [[618, "visualizing-the-event"]], "Access the Data": [[618, "access-the-data"]], "Download the Road Data": [[618, "download-the-road-data"]], "Add the Interstate Date as a feature": [[618, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[618, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[618, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[618, "run-our-plotting-functions"]], "Creating animated gifs with NEXRAD Level 2 radar data using Py-ART": [[619, "creating-animated-gifs-with-nexrad-level-2-radar-data-using-py-art"]], "Overview": [[619, "overview"]], "Within this blog post, we will cover:": [[619, "within-this-blog-post-we-will-cover"]], "1: Accessing NEXRAD data from AWS": [[619, "accessing-nexrad-data-from-aws"]], "2: How to read the data into Py-ART and create plots": [[619, "how-to-read-the-data-into-py-art-and-create-plots"]], "3: How to create animated gifs with acquired radar data from Py-ART": [[619, "how-to-create-animated-gifs-with-acquired-radar-data-from-py-art"]], "Prerequisites": [[619, "prerequisites"]], "Set up the AWS S3 filysystem": [[619, "set-up-the-aws-s3-filysystem"]], "Selecting your date, station, and time period": [[619, "selecting-your-date-station-and-time-period"]], "OPTIONAL* setting up individual locations to be plotted on your map": [[619, "optional-setting-up-individual-locations-to-be-plotted-on-your-map"]], "Generating your file list": [[619, "generating-your-file-list"]], "Checking your plottable radar products": [[619, "checking-your-plottable-radar-products"]], "Reading the data into PyART": [[619, "reading-the-data-into-pyart"]], "Looping through the radar data": [[619, "looping-through-the-radar-data"]], "Plotting code with added features and plotted points": [[619, "plotting-code-with-added-features-and-plotted-points"]], "Customizing the range of plotted data": [[619, "customizing-the-range-of-plotted-data"]], "Counties": [[619, "counties"]], "Location plotting": [[619, "location-plotting"]], "Zooming": [[619, "zooming"]], "Colorbar": [[619, "colorbar"]], "NOTE": [[619, "note"]], "Full code block constructed properly within the for loop.": [[619, "full-code-block-constructed-properly-within-the-for-loop"]], "GIF creation": [[619, "gif-creation"]], "Code in whole": [[619, "code-in-whole"]], "Summary": [[619, "summary"]], "Investigating ARM Scanning Cloud Radar Data from EPCAPE": [[620, "investigating-arm-scanning-cloud-radar-data-from-epcape"]], "The Problem": [[620, "the-problem"], [621, "the-problem"]], "The Solution": [[620, "the-solution"], [621, "the-solution"]], "Searching for data through the DQ Plot Browser": [[620, "searching-for-data-through-the-dq-plot-browser"]], "Use ACT to retrieve data from EPCAPE": [[620, "use-act-to-retrieve-data-from-epcape"]], "Retrieve you API token from ARM Live": [[620, "retrieve-you-api-token-from-arm-live"]], "Pass your Credentials into the Search": [[620, "pass-your-credentials-into-the-search"]], "Read the Data into Py-ART": [[620, "read-the-data-into-py-art"]], "Take a Peak at the Scan Strategy": [[620, "take-a-peak-at-the-scan-strategy"]], "Sort the Scans by Scan Strategy": [[620, "sort-the-scans-by-scan-strategy"]], "Plot all of the PPI Scans": [[620, "plot-all-of-the-ppi-scans"]], "Plot all the RHI Scans": [[620, "plot-all-the-rhi-scans"]], "Apply Corrections to the Velocity Data": [[620, "apply-corrections-to-the-velocity-data"]], "Explore a Threshold for SNR": [[620, "explore-a-threshold-for-snr"]], "Plot our Revised, Cleaned Data": [[620, "plot-our-revised-cleaned-data"]], "Plot where the RHI scan is slicing through using the PPI for a frame of reference": [[620, "plot-where-the-rhi-scan-is-slicing-through-using-the-ppi-for-a-frame-of-reference"]], "Conclusions": [[620, "conclusions"], [621, "conclusions"]], "Blog Post Template": [[621, "blog-post-template"]], "Changelog": [[622, "changelog"]], "Py-ART 1.18.1": [[622, "py-art-1-18-1"]], "Enhancements made": [[622, "enhancements-made"], [622, "id1"], [622, "id5"], [622, "id9"], [622, "id14"], [622, "id29"], [622, "id35"], [622, "id46"], [622, "id49"], [622, "id54"], [622, "id59"], [622, "id62"], [622, "id66"], [622, "id79"], [622, "id89"], [622, "id99"], [622, "id105"], [622, "id111"], [622, "id119"], [622, "id132"], [622, "id136"], [622, "id140"], [622, "id146"], [622, "id152"], [622, "id161"], [622, "id168"], [622, "id175"], [622, "id181"], [622, "id188"], [622, "id194"], [622, "id200"]], "Bugs fixed": [[622, "bugs-fixed"], [622, "id2"], [622, "id6"], [622, "id10"], [622, "id15"], [622, "id22"], [622, "id26"], [622, "id30"], [622, "id36"], [622, "id41"], [622, "id50"], [622, "id55"], [622, "id60"], [622, "id67"], [622, "id72"], [622, "id76"], [622, "id80"], [622, "id85"], [622, "id90"], [622, "id95"], [622, "id100"], [622, "id106"], [622, "id112"], [622, "id116"], [622, "id120"], [622, "id124"], [622, "id129"], [622, "id133"], [622, "id137"], [622, "id141"], [622, "id147"], [622, "id153"], [622, "id157"], [622, "id162"], [622, "id169"], [622, "id176"], [622, "id182"], [622, "id189"], [622, "id195"]], "Other merged PRs": [[622, "other-merged-prs"], [622, "id3"], [622, "id7"], [622, "id12"], [622, "id17"], [622, "id20"], [622, "id24"], [622, "id27"], [622, "id32"], [622, "id37"], [622, "id44"], [622, "id47"], [622, "id52"], [622, "id57"], [622, "id64"], [622, "id70"], [622, "id74"], [622, "id77"], [622, "id83"], [622, "id87"], [622, "id93"], [622, "id97"], [622, "id103"], [622, "id109"], [622, "id114"], [622, "id122"], [622, "id127"], [622, "id134"], [622, "id144"], [622, "id150"], [622, "id155"], [622, "id159"], [622, "id166"], [622, "id173"], [622, "id179"], [622, "id186"], [622, "id192"], [622, "id198"]], "Contributors to this release": [[622, "contributors-to-this-release"], [622, "id4"], [622, "id8"], [622, "id13"], [622, "id18"], [622, "id21"], [622, "id25"], [622, "id28"], [622, "id33"], [622, "id34"], [622, "id38"], [622, "id40"], [622, "id45"], [622, "id48"], [622, "id53"], [622, "id58"], [622, "id61"], [622, "id65"], [622, "id71"], [622, "id75"], [622, "id78"], [622, "id84"], [622, "id88"], [622, "id94"], [622, "id98"], [622, "id104"], [622, "id110"], [622, "id115"], [622, "id118"], [622, "id123"], [622, "id128"], [622, "id131"], [622, "id135"], [622, "id139"], [622, "id145"], [622, "id151"], [622, "id156"], [622, "id160"], [622, "id167"], [622, "id174"], [622, "id180"], [622, "id187"], [622, "id193"], [622, "id199"], [622, "id202"]], "Py-ART 1.18.0": [[622, "py-art-1-18-0"]], "Py-ART 1.17.0": [[622, "py-art-1-17-0"]], "Documentation improvements": [[622, "documentation-improvements"], [622, "id11"], [622, "id16"], [622, "id43"], [622, "id51"], [622, "id56"], [622, "id69"], [622, "id82"], [622, "id92"], [622, "id102"], [622, "id108"], [622, "id126"], [622, "id138"], [622, "id143"], [622, "id149"], [622, "id154"], [622, "id158"], [622, "id164"], [622, "id171"], [622, "id178"], [622, "id184"], [622, "id191"], [622, "id197"]], "Py-ART 1.16.1": [[622, "py-art-1-16-1"]], "Py-ART 1.16.0": [[622, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[622, "maintenance-and-upkeep-improvements"], [622, "id19"], [622, "id23"], [622, "id31"], [622, "id39"], [622, "id42"], [622, "id63"], [622, "id68"], [622, "id73"], [622, "id81"], [622, "id86"], [622, "id91"], [622, "id96"], [622, "id101"], [622, "id107"], [622, "id113"], [622, "id117"], [622, "id121"], [622, "id125"], [622, "id130"], [622, "id142"], [622, "id148"], [622, "id163"], [622, "id170"], [622, "id177"], [622, "id183"], [622, "id190"], [622, "id196"], [622, "id201"]], "Py-ART 1.15.2": [[622, "py-art-1-15-2"]], "Py-ART 1.15.1": [[622, "py-art-1-15-1"]], "Py-ART v1.15.0": [[622, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[622, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[622, "py-art-v1-14-5"]], "Merged PRs": [[622, "merged-prs"]], "Py-ART v1.14.4": [[622, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[622, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[622, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[622, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[622, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[622, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[622, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[622, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[622, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[622, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[622, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[622, "py-art-v1-12-5"]], "PyART v1.12.4": [[622, "pyart-v1-12-4"]], "PyART v1.12.2": [[622, "pyart-v1-12-2"]], "PyART v1.12.0": [[622, "pyart-v1-12-0"]], "PyART v1.11.8": [[622, "pyart-v1-11-8"]], "Deprecated features": [[622, "deprecated-features"], [622, "id165"], [622, "id172"], [622, "id185"]], "PyART v1.11.6": [[622, "pyart-v1-11-6"]], "PyART v1.11.5": [[622, "pyart-v1-11-5"]], "PyART v1.11.3": [[622, "pyart-v1-11-3"]], "PyART v1.11.2": [[622, "pyart-v1-11-2"]], "PyART v1.11.1": [[622, "pyart-v1-11-1"]], "PyART v1.11.0": [[622, "pyart-v1-11-0"]], "PyART v1.10.4": [[622, "pyart-v1-10-4"]], "PyART v1.10.3": [[622, "pyart-v1-10-3"]], "PyART v1.10.2": [[622, "pyart-v1-10-2"]], "PyART v1.10.1": [[622, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[622, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[622, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[622, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[622, "pyart-v1-8-0"]], "PyART v1.7.0": [[622, "pyart-v1-7-0"]], "PyART v1.6.0": [[622, "pyart-v1-6-0"]], "PyART v1.5.0": [[622, "pyart-v1-5-0"]], "PyART v1.4.0": [[622, "pyart-v1-4-0"]], "PyART v1.3.0": [[622, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[623, "contributor-s-guide"], [693, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[623, "the-python-arm-radar-toolkit-py-art"], [693, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[623, "important-links"], [693, "important-links"]], "Citing": [[623, "citing"], [693, "citing"]], "Install": [[623, "install"], [682, "install"], [693, "install"]], "Resources": [[623, "resources"], [693, "resources"]], "Code Style": [[623, "code-style"], [693, "code-style"]], "Python File Setup": [[623, "python-file-setup"], [693, "python-file-setup"]], "Testing": [[623, "testing"], [693, "testing"]], "GitHub": [[623, "github"], [693, "github"]], "Py-ART Continuous Integration Setup": [[624, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[625, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[625, "make-the-tagged-git-release"]], "Prepare the release notes": [[625, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[625, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[625, "documentation"]], "Create conda packages on conda-forge": [[625, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[625, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[626, "developer-s-guide"]], "Versions": [[626, "versions"]], "Moment correction examples": [[627, "moment-correction-examples"], [633, "moment-correction-examples"]], "Correct reflectivity attenuation": [[628, "correct-reflectivity-attenuation"]], "Calculating and Plotting a Cloud Mask": [[629, "calculating-and-plotting-a-cloud-mask"]], "Dealias doppler velocities using the Region Based Algorithm": [[630, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "ZDR Bias Calculation": [[631, "zdr-bias-calculation"]], "Computation times": [[632, "computation-times"], [637, "computation-times"], [643, "computation-times"], [665, "computation-times"], [675, "computation-times"], [676, "computation-times"], [681, "computation-times"], [691, "computation-times"]], "Example Gallery": [[633, "example-gallery"]], "Input/Output Examples": [[633, "input-output-examples"], [634, "input-output-examples"]], "Mapping examples": [[633, "mapping-examples"], [638, "mapping-examples"]], "Plotting examples": [[633, "plotting-examples"], [644, "plotting-examples"]], "Retrieval Examples": [[633, "retrieval-examples"], [666, "retrieval-examples"]], "Xradar Examples": [[633, "xradar-examples"], [677, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[635, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[635, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[635, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[636, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[636, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[639, "compare-two-radars-using-gatemapper"]], "Map a single PPI sweep to a Cartesian grid using 2D weighting": [[640, "map-a-single-ppi-sweep-to-a-cartesian-grid-using-2d-weighting"]], "Map a single radar to a Cartesian grid": [[641, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[642, "map-two-radars-to-a-cartesian-grid"]], "Compare PPI vs CAPPI": [[645, "compare-ppi-vs-cappi"]], "Choose a Colormap for your Plot": [[646, "choose-a-colormap-for-your-plot"]], "Plot a Corner Reflector": [[647, "plot-a-corner-reflector"]], "Plot a Cross Section from a Grid": [[648, "plot-a-cross-section-from-a-grid"]], "Plot Max-CAPPI": [[649, "plot-max-cappi"]], "Modify a Colorbar for your Plot": [[650, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[651, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[652, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[653, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[654, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[655, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[656, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[657, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [658, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[659, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [660, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[661, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[662, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[663, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[664, "plot-a-cross-section-from-a-ppi-volume"]], "Creating a CFAD diagram": [[667, "creating-a-cfad-diagram"]], "Velocity example": [[667, "velocity-example"]], "Validation": [[667, "validation"]], "Extract a radar column above a point": [[668, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[669, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[670, "convective-stratiform-classification"]], "How the algorithm works": [[670, "how-the-algorithm-works"], [671, "how-the-algorithm-works"]], "Examples": [[670, "examples"]], "Summary of recommendations and best practices": [[670, "summary-of-recommendations-and-best-practices"], [671, "summary-of-recommendations-and-best-practices"]], "References": [[670, "references"], [671, "references"]], "Feature Detection classification": [[671, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[671, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[671, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[672, "calculate-and-plot-hydrometeor-classification"]], "Hydrometeor Classification with Custom Frequency Settings": [[673, "hydrometeor-classification-with-custom-frequency-settings"]], "Calculate and Plot VAD profile": [[674, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[678, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[679, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[680, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[682, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[682, "what-is-py-art"]], "Citing Py-ART": [[682, "citing-py-art"]], "What can Py-ART do?": [[682, "what-can-py-art-do"]], "Short Courses": [[682, "short-courses"]], "Dependencies": [[682, "dependencies"]], "Optional Dependences": [[682, "optional-dependences"]], "Getting help": [[682, "getting-help"]], "Contributing": [[682, "contributing"]], "Notebook Gallery": [[683, "notebook-gallery"]], "Notebooks": [[683, null]], "Creating a basic ingest of a NetCDF file": [[684, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[685, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[686, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[688, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[689, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[690, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[692, "building-and-installing-py-art"]], "Required Dependencies": [[692, "required-dependencies"]], "Optional Dependencies": [[692, "optional-dependencies"]], "Obtaining the latest source": [[692, "obtaining-the-latest-source"]], "Installing from Source": [[692, "installing-from-source"]], "Frequently asked questions": [[692, "frequently-asked-questions"]], "User Guide": [[694, "user-guide"]], "Py-ART 2.0": [[695, "py-art-2-0"]], "How to Try Py-ART 2.0": [[695, "how-to-try-py-art-2-0"]], "Input/Output (IO)": [[695, "input-output-io"]], "Correct": [[695, "correct"]], "Graph": [[695, "graph"]], "Setting up an Environment": [[696, "setting-up-an-environment"]], "Anaconda": [[696, "anaconda"]], "Setting a Channel": [[696, "setting-a-channel"]], "Creating an Environment": [[696, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[696, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[696, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [127, "module-pyart.correct"], [176, "module-pyart.exceptions"], [177, "module-pyart.filters"], [212, "module-pyart.graph"], [371, "module-pyart.io"], [392, "module-pyart.lazydict"], [416, "module-pyart.map"], [429, "module-pyart.retrieve"], [472, "module-pyart.testing"], [575, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_antenna() (in module pyart.core)": [[121, "pyart.core.cartesian_to_antenna"]], "cartesian_to_geographic() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[123, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[124, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[126, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[127, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[128, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[141, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[142, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[144, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[145, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[155, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[156, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[157, "pyart.correct.GateFilter.include_valid"]], "calc_cloud_mask() (in module pyart.correct)": [[158, "pyart.correct.calc_cloud_mask"]], "calc_noise_floor() (in module pyart.correct)": [[159, "pyart.correct.calc_noise_floor"]], "calc_zdr_offset() (in module pyart.correct)": [[160, "pyart.correct.calc_zdr_offset"]], "calculate_attenuation() (in module pyart.correct)": [[161, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[162, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[163, "pyart.correct.calculate_attenuation_zphi"]], "cloud_threshold() (in module pyart.correct)": [[164, "pyart.correct.cloud_threshold"]], "correct_bias() (in module pyart.correct)": [[165, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[166, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[167, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[168, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[169, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[170, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[171, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[172, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[173, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[174, "pyart.correct.phase_proc_lp_gf"]], "range_correction() (in module pyart.correct)": [[175, "pyart.correct.range_correction"]], "pyart.exceptions": [[176, "module-pyart.exceptions"]], "pyart.filters": [[177, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[178, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_above"]], "exclude_above_toa() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_above_toa"]], "exclude_all() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[184, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[185, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_last_gates() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.exclude_last_gates"]], "exclude_masked() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[194, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[195, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[198, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[199, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[200, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[201, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[202, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[203, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[204, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[205, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[206, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[207, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[208, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[209, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[210, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[211, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[212, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[213, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[221, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[225, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[231, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[232, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[233, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[234, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[235, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[236, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[237, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[238, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[239, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[240, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[241, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[242, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[243, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[249, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[250, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[251, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[252, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[253, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[254, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[255, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[256, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[257, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[258, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "plot_maxcappi() (pyart.graph.gridmapdisplay method)": [[259, "pyart.graph.GridMapDisplay.plot_maxcappi"]], "gridmapdisplaybasemap (class in pyart.graph)": [[260, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[263, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[264, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[265, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[266, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[267, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[268, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[269, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[270, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[271, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[272, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[273, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[274, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[280, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[282, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[285, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[290, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[291, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[292, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[293, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[294, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[295, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[296, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[297, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[298, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[299, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[300, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[301, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[302, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[303, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[309, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[310, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[311, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[320, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[321, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[323, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[324, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[325, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[326, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[327, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[328, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[329, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[330, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[331, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[332, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[333, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[334, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[335, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[336, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[342, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[343, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[344, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[356, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[357, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[358, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[359, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[360, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[361, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[362, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[363, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[364, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[365, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[366, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[367, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[368, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[369, "pyart.graph.plot_convstrat_scheme"]], "plot_maxcappi() (in module pyart.graph)": [[370, "pyart.graph.plot_maxcappi"]], "pyart.io": [[371, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[372, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[373, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[374, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[375, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[376, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[377, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[378, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[379, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[380, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[381, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[382, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[383, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[384, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[385, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[386, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[387, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[388, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[389, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[390, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[391, "pyart.io.write_uf"]], "pyart.lazydict": [[392, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[393, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[394, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[395, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[396, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[397, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[398, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[399, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[400, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[401, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[402, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[403, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[404, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[405, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[406, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[407, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[408, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[409, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[410, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[411, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[412, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[413, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[414, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[415, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[416, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[417, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[418, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[419, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[420, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[421, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[422, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[423, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[424, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[425, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[426, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[427, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[428, "pyart.map.map_to_grid"]], "pyart.retrieve": [[429, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[430, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[431, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[432, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[433, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[434, "pyart.retrieve.compute_cdr"]], "compute_evp() (in module pyart.retrieve)": [[435, "pyart.retrieve.compute_evp"]], "compute_l() (in module pyart.retrieve)": [[436, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[437, "pyart.retrieve.compute_noisedBZ"]], "compute_qvp() (in module pyart.retrieve)": [[438, "pyart.retrieve.compute_qvp"]], "compute_rqvp() (in module pyart.retrieve)": [[439, "pyart.retrieve.compute_rqvp"]], "compute_snr() (in module pyart.retrieve)": [[440, "pyart.retrieve.compute_snr"]], "compute_svp() (in module pyart.retrieve)": [[441, "pyart.retrieve.compute_svp"]], "compute_ts_along_coord() (in module pyart.retrieve)": [[442, "pyart.retrieve.compute_ts_along_coord"]], "compute_vp() (in module pyart.retrieve)": [[443, "pyart.retrieve.compute_vp"]], "conv_strat_raut() (in module pyart.retrieve)": [[444, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[445, "pyart.retrieve.conv_strat_yuter"]], "create_cappi() (in module pyart.retrieve)": [[446, "pyart.retrieve.create_cappi"]], "create_cfad() (in module pyart.retrieve)": [[447, "pyart.retrieve.create_cfad"]], "dealias_spectra() (in module pyart.retrieve)": [[448, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[449, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[450, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[451, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[452, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[453, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[454, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[455, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[456, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[457, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[458, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[459, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[460, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[461, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[462, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[463, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[464, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[465, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[466, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[467, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[468, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[469, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[470, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[471, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[472, "module-pyart.testing"]], "grid (class in pyart.testing)": [[473, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[474, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[475, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[476, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[477, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[478, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[479, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[480, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[481, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[482, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[483, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[484, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[485, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[491, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[492, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[493, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[494, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[495, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[496, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[497, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[498, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[499, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[500, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[501, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[502, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[503, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[504, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[505, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[506, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[507, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[508, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[509, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[510, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[511, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[512, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[513, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[514, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[515, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[516, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[517, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[518, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[519, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[520, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[521, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[522, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[523, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[524, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[525, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[526, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[527, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[528, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[529, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[530, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[531, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[532, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[533, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[534, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[535, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[536, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[537, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[538, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[539, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[540, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[541, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[542, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[543, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[544, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[545, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[546, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[547, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[548, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[549, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[550, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[551, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[552, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[553, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[554, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[555, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[556, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[557, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[558, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[559, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[560, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[561, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[562, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[563, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[564, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[565, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[566, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[567, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[568, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[569, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[570, "pyart.testing.make_target_radar"]], "make_target_rhi_radar() (in module pyart.testing)": [[571, "pyart.testing.make_target_rhi_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[572, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[573, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[574, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[575, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[576, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[577, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[578, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[579, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[580, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[581, "pyart.util.column_vertical_profile"]], "compute_directional_stats() (in module pyart.util)": [[582, "pyart.util.compute_directional_stats"]], "cross_section_ppi() (in module pyart.util)": [[583, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[584, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[585, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[586, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[587, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[588, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[589, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[590, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[591, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[592, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[593, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[594, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[595, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[596, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[597, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[598, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[599, "pyart.util.join_radar"]], "ma_broadcast_to() (in module pyart.util)": [[600, "pyart.util.ma_broadcast_to"]], "mean_of_two_angles() (in module pyart.util)": [[601, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[602, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[603, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[604, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[605, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[606, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[607, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[608, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[609, "pyart.util.to_vpt"]]}})