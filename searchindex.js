Search.setIndex({"docnames": ["API/generated/pyart._debug_info", "API/generated/pyart.aux_io", "API/generated/pyart.aux_io.read_d3r_gcpex_nc", "API/generated/pyart.aux_io.read_edge_netcdf", "API/generated/pyart.aux_io.read_gamic", "API/generated/pyart.aux_io.read_kazr", "API/generated/pyart.aux_io.read_kazr_spectra", "API/generated/pyart.aux_io.read_noxp_iphex_nc", "API/generated/pyart.aux_io.read_odim_h5", "API/generated/pyart.aux_io.read_pattern", "API/generated/pyart.aux_io.read_radx", "API/generated/pyart.aux_io.read_radx_grid", "API/generated/pyart.aux_io.read_rainbow_wrl", "API/generated/pyart.aux_io.read_rxm25", "API/generated/pyart.aux_io.read_sinarame_h5", "API/generated/pyart.aux_io.write_sinarame_cfradial", "API/generated/pyart.bridge", "API/generated/pyart.bridge.texture_of_complex_phase", "API/generated/pyart.config", "API/generated/pyart.config.FileMetadata", "API/generated/pyart.config.FileMetadata.__call__", "API/generated/pyart.config.FileMetadata.get_field_name", "API/generated/pyart.config.FileMetadata.get_metadata", "API/generated/pyart.config.get_field_colormap", "API/generated/pyart.config.get_field_limits", "API/generated/pyart.config.get_field_mapping", "API/generated/pyart.config.get_field_name", "API/generated/pyart.config.get_fillvalue", "API/generated/pyart.config.get_metadata", "API/generated/pyart.config.load_config", "API/generated/pyart.core", "API/generated/pyart.core.Grid", "API/generated/pyart.core.Grid.add_field", "API/generated/pyart.core.Grid.get_point_longitude_latitude", "API/generated/pyart.core.Grid.get_projparams", "API/generated/pyart.core.Grid.init_point_altitude", "API/generated/pyart.core.Grid.init_point_longitude_latitude", "API/generated/pyart.core.Grid.init_point_x_y_z", "API/generated/pyart.core.Grid.projection_proj", "API/generated/pyart.core.Grid.to_xarray", "API/generated/pyart.core.Grid.write", "API/generated/pyart.core.HorizontalWindProfile", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v", "API/generated/pyart.core.HorizontalWindProfile.u_wind", "API/generated/pyart.core.HorizontalWindProfile.v_wind", "API/generated/pyart.core.Radar", "API/generated/pyart.core.Radar.add_field", "API/generated/pyart.core.Radar.add_field_like", "API/generated/pyart.core.Radar.add_filter", "API/generated/pyart.core.Radar.check_field_exists", "API/generated/pyart.core.Radar.extract_sweeps", "API/generated/pyart.core.Radar.get_azimuth", "API/generated/pyart.core.Radar.get_elevation", "API/generated/pyart.core.Radar.get_end", "API/generated/pyart.core.Radar.get_field", "API/generated/pyart.core.Radar.get_gate_area", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt", "API/generated/pyart.core.Radar.get_gate_x_y_z", "API/generated/pyart.core.Radar.get_nyquist_vel", "API/generated/pyart.core.Radar.get_slice", "API/generated/pyart.core.Radar.get_start", "API/generated/pyart.core.Radar.get_start_end", "API/generated/pyart.core.Radar.info", "API/generated/pyart.core.Radar.init_gate_altitude", "API/generated/pyart.core.Radar.init_gate_longitude_latitude", "API/generated/pyart.core.Radar.init_gate_x_y_z", "API/generated/pyart.core.Radar.init_rays_per_sweep", "API/generated/pyart.core.Radar.iter_azimuth", "API/generated/pyart.core.Radar.iter_elevation", "API/generated/pyart.core.Radar.iter_end", "API/generated/pyart.core.Radar.iter_field", "API/generated/pyart.core.Radar.iter_slice", "API/generated/pyart.core.Radar.iter_start", "API/generated/pyart.core.Radar.iter_start_end", "API/generated/pyart.core.RadarSpectra", "API/generated/pyart.core.RadarSpectra.altitude", "API/generated/pyart.core.RadarSpectra.azimuth", "API/generated/pyart.core.RadarSpectra.check_field_exists", "API/generated/pyart.core.RadarSpectra.elevation", "API/generated/pyart.core.RadarSpectra.fields", "API/generated/pyart.core.RadarSpectra.fixed_angle", "API/generated/pyart.core.RadarSpectra.gate_altitude", "API/generated/pyart.core.RadarSpectra.gate_latitude", "API/generated/pyart.core.RadarSpectra.gate_longitude", "API/generated/pyart.core.RadarSpectra.gate_x", "API/generated/pyart.core.RadarSpectra.gate_y", "API/generated/pyart.core.RadarSpectra.gate_z", "API/generated/pyart.core.RadarSpectra.get_end", "API/generated/pyart.core.RadarSpectra.get_slice", "API/generated/pyart.core.RadarSpectra.get_start", "API/generated/pyart.core.RadarSpectra.get_start_end", "API/generated/pyart.core.RadarSpectra.init_gate_altitude", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.core.RadarSpectra.iter_azimuth", "API/generated/pyart.core.RadarSpectra.iter_elevation", "API/generated/pyart.core.RadarSpectra.iter_end", "API/generated/pyart.core.RadarSpectra.iter_field", "API/generated/pyart.core.RadarSpectra.iter_slice", "API/generated/pyart.core.RadarSpectra.iter_start", "API/generated/pyart.core.RadarSpectra.iter_start_end", "API/generated/pyart.core.RadarSpectra.latitude", "API/generated/pyart.core.RadarSpectra.longitude", "API/generated/pyart.core.RadarSpectra.ngates", "API/generated/pyart.core.RadarSpectra.npulses_max", "API/generated/pyart.core.RadarSpectra.nrays", "API/generated/pyart.core.RadarSpectra.nsweeps", "API/generated/pyart.core.RadarSpectra.projection", "API/generated/pyart.core.RadarSpectra.range", "API/generated/pyart.core.RadarSpectra.rays_per_sweep", "API/generated/pyart.core.RadarSpectra.scan_type", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.core.RadarSpectra.sweep_mode", "API/generated/pyart.core.RadarSpectra.sweep_number", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.core.RadarSpectra.time", "API/generated/pyart.core.RadarSpectra.to_vpt", "API/generated/pyart.core.RadarSpectra.velocity_bins", "API/generated/pyart.core.antenna_to_cartesian", "API/generated/pyart.core.antenna_vectors_to_cartesian", "API/generated/pyart.core.cartesian_to_geographic", "API/generated/pyart.core.cartesian_to_geographic_aeqd", "API/generated/pyart.core.cartesian_vectors_to_geographic", "API/generated/pyart.core.geographic_to_cartesian", "API/generated/pyart.core.geographic_to_cartesian_aeqd", "API/generated/pyart.correct", "API/generated/pyart.correct.GateFilter", "API/generated/pyart.correct.GateFilter.copy", "API/generated/pyart.correct.GateFilter.exclude_above", "API/generated/pyart.correct.GateFilter.exclude_all", "API/generated/pyart.correct.GateFilter.exclude_below", "API/generated/pyart.correct.GateFilter.exclude_equal", "API/generated/pyart.correct.GateFilter.exclude_gates", "API/generated/pyart.correct.GateFilter.exclude_inside", "API/generated/pyart.correct.GateFilter.exclude_invalid", "API/generated/pyart.correct.GateFilter.exclude_masked", "API/generated/pyart.correct.GateFilter.exclude_none", "API/generated/pyart.correct.GateFilter.exclude_not_equal", "API/generated/pyart.correct.GateFilter.exclude_outside", "API/generated/pyart.correct.GateFilter.exclude_transition", "API/generated/pyart.correct.GateFilter.gate_excluded", "API/generated/pyart.correct.GateFilter.gate_included", "API/generated/pyart.correct.GateFilter.include_above", "API/generated/pyart.correct.GateFilter.include_all", "API/generated/pyart.correct.GateFilter.include_below", "API/generated/pyart.correct.GateFilter.include_equal", "API/generated/pyart.correct.GateFilter.include_gates", "API/generated/pyart.correct.GateFilter.include_inside", "API/generated/pyart.correct.GateFilter.include_none", "API/generated/pyart.correct.GateFilter.include_not_equal", "API/generated/pyart.correct.GateFilter.include_not_masked", "API/generated/pyart.correct.GateFilter.include_not_transition", "API/generated/pyart.correct.GateFilter.include_outside", "API/generated/pyart.correct.GateFilter.include_valid", "API/generated/pyart.correct.calculate_attenuation", "API/generated/pyart.correct.calculate_attenuation_philinear", "API/generated/pyart.correct.calculate_attenuation_zphi", "API/generated/pyart.correct.correct_bias", "API/generated/pyart.correct.correct_noise_rhohv", "API/generated/pyart.correct.dealias_fourdd", "API/generated/pyart.correct.dealias_region_based", "API/generated/pyart.correct.dealias_unwrap_phase", "API/generated/pyart.correct.despeckle_field", "API/generated/pyart.correct.find_objects", "API/generated/pyart.correct.moment_based_gate_filter", "API/generated/pyart.correct.phase_proc_lp", "API/generated/pyart.correct.phase_proc_lp_gf", "API/generated/pyart.exceptions", "API/generated/pyart.filters", "API/generated/pyart.filters.GateFilter", "API/generated/pyart.filters.GateFilter.copy", "API/generated/pyart.filters.GateFilter.exclude_above", "API/generated/pyart.filters.GateFilter.exclude_all", "API/generated/pyart.filters.GateFilter.exclude_below", "API/generated/pyart.filters.GateFilter.exclude_equal", "API/generated/pyart.filters.GateFilter.exclude_gates", "API/generated/pyart.filters.GateFilter.exclude_inside", "API/generated/pyart.filters.GateFilter.exclude_invalid", "API/generated/pyart.filters.GateFilter.exclude_masked", "API/generated/pyart.filters.GateFilter.exclude_none", "API/generated/pyart.filters.GateFilter.exclude_not_equal", "API/generated/pyart.filters.GateFilter.exclude_outside", "API/generated/pyart.filters.GateFilter.exclude_transition", "API/generated/pyart.filters.GateFilter.gate_excluded", "API/generated/pyart.filters.GateFilter.gate_included", "API/generated/pyart.filters.GateFilter.include_above", "API/generated/pyart.filters.GateFilter.include_all", "API/generated/pyart.filters.GateFilter.include_below", "API/generated/pyart.filters.GateFilter.include_equal", "API/generated/pyart.filters.GateFilter.include_gates", "API/generated/pyart.filters.GateFilter.include_inside", "API/generated/pyart.filters.GateFilter.include_none", "API/generated/pyart.filters.GateFilter.include_not_equal", "API/generated/pyart.filters.GateFilter.include_not_masked", "API/generated/pyart.filters.GateFilter.include_not_transition", "API/generated/pyart.filters.GateFilter.include_outside", "API/generated/pyart.filters.GateFilter.include_valid", "API/generated/pyart.filters.iso0_based_gate_filter", "API/generated/pyart.filters.moment_and_texture_based_gate_filter", "API/generated/pyart.filters.moment_based_gate_filter", "API/generated/pyart.filters.temp_based_gate_filter", "API/generated/pyart.graph", "API/generated/pyart.graph.AirborneRadarDisplay", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z", "API/generated/pyart.graph.AirborneRadarDisplay.plot", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits", "API/generated/pyart.graph.GridMapDisplay", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries", "API/generated/pyart.graph.GridMapDisplay.cartopy_states", "API/generated/pyart.graph.GridMapDisplay.generate_filename", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplay.plot_grid", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "API/generated/pyart.graph.RadarDisplay", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarDisplay.generate_filename", "API/generated/pyart.graph.RadarDisplay.generate_ray_title", "API/generated/pyart.graph.RadarDisplay.generate_title", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarDisplay.plot", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarDisplay.plot_colorbar", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarDisplay.plot_label", "API/generated/pyart.graph.RadarDisplay.plot_labels", "API/generated/pyart.graph.RadarDisplay.plot_ppi", "API/generated/pyart.graph.RadarDisplay.plot_range_ring", "API/generated/pyart.graph.RadarDisplay.plot_range_rings", "API/generated/pyart.graph.RadarDisplay.plot_ray", "API/generated/pyart.graph.RadarDisplay.plot_rhi", "API/generated/pyart.graph.RadarDisplay.plot_vpt", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplay", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplay.generate_filename", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplay.generate_title", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplay.plot", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplay.plot_label", "API/generated/pyart.graph.RadarMapDisplay.plot_labels", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplay.plot_point", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplay.plot_ray", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplay.set_limits", "API/generated/pyart.graph.RadarMapDisplayBasemap", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits", "API/generated/pyart.graph.plot_convstrat_scheme", "API/generated/pyart.io", "API/generated/pyart.io.prepare_for_read", "API/generated/pyart.io.read", "API/generated/pyart.io.read_arm_sonde", "API/generated/pyart.io.read_arm_sonde_vap", "API/generated/pyart.io.read_cfradial", "API/generated/pyart.io.read_chl", "API/generated/pyart.io.read_grid", "API/generated/pyart.io.read_grid_mdv", "API/generated/pyart.io.read_mdv", "API/generated/pyart.io.read_nexrad_archive", "API/generated/pyart.io.read_nexrad_cdm", "API/generated/pyart.io.read_nexrad_level3", "API/generated/pyart.io.read_rsl", "API/generated/pyart.io.read_sigmet", "API/generated/pyart.io.read_uf", "API/generated/pyart.io.write_cfradial", "API/generated/pyart.io.write_grid", "API/generated/pyart.io.write_grid_geotiff", "API/generated/pyart.io.write_grid_mdv", "API/generated/pyart.io.write_uf", "API/generated/pyart.lazydict", "API/generated/pyart.lazydict.LazyLoadDict", "API/generated/pyart.lazydict.LazyLoadDict.clear", "API/generated/pyart.lazydict.LazyLoadDict.copy", "API/generated/pyart.lazydict.LazyLoadDict.get", "API/generated/pyart.lazydict.LazyLoadDict.has_key", "API/generated/pyart.lazydict.LazyLoadDict.items", "API/generated/pyart.lazydict.LazyLoadDict.keys", "API/generated/pyart.lazydict.LazyLoadDict.pop", "API/generated/pyart.lazydict.LazyLoadDict.popitem", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy", "API/generated/pyart.lazydict.LazyLoadDict.setdefault", "API/generated/pyart.lazydict.LazyLoadDict.update", "API/generated/pyart.lazydict.LazyLoadDict.values", "API/generated/pyart.lazydict.MutableMapping", "API/generated/pyart.lazydict.MutableMapping.clear", "API/generated/pyart.lazydict.MutableMapping.get", "API/generated/pyart.lazydict.MutableMapping.items", "API/generated/pyart.lazydict.MutableMapping.keys", "API/generated/pyart.lazydict.MutableMapping.pop", "API/generated/pyart.lazydict.MutableMapping.popitem", "API/generated/pyart.lazydict.MutableMapping.setdefault", "API/generated/pyart.lazydict.MutableMapping.update", "API/generated/pyart.lazydict.MutableMapping.values", "API/generated/pyart.map", "API/generated/pyart.map.GateMapper", "API/generated/pyart.map.GateMapper.distance_tolerance", "API/generated/pyart.map.GateMapper.mapped_radar", "API/generated/pyart.map.GateMapper.time_tolerance", "API/generated/pyart.map.example_roi_func_constant", "API/generated/pyart.map.example_roi_func_dist", "API/generated/pyart.map.example_roi_func_dist_beam", "API/generated/pyart.map.grid_from_radars", "API/generated/pyart.map.grid_ppi_sweeps", "API/generated/pyart.map.grid_rhi_sweeps", "API/generated/pyart.map.map_gates_to_grid", "API/generated/pyart.map.map_to_grid", "API/generated/pyart.retrieve", "API/generated/pyart.retrieve.ZtoR", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity", "API/generated/pyart.retrieve.calculate_velocity_texture", "API/generated/pyart.retrieve.composite_reflectivity", "API/generated/pyart.retrieve.compute_cdr", "API/generated/pyart.retrieve.compute_l", "API/generated/pyart.retrieve.compute_noisedBZ", "API/generated/pyart.retrieve.compute_snr", "API/generated/pyart.retrieve.conv_strat_raut", "API/generated/pyart.retrieve.conv_strat_yuter", "API/generated/pyart.retrieve.create_cfad", "API/generated/pyart.retrieve.dealias_spectra", "API/generated/pyart.retrieve.est_rain_rate_a", "API/generated/pyart.retrieve.est_rain_rate_hydro", "API/generated/pyart.retrieve.est_rain_rate_kdp", "API/generated/pyart.retrieve.est_rain_rate_z", "API/generated/pyart.retrieve.est_rain_rate_za", "API/generated/pyart.retrieve.est_rain_rate_zkdp", "API/generated/pyart.retrieve.est_rain_rate_zpoly", "API/generated/pyart.retrieve.feature_detection", "API/generated/pyart.retrieve.fetch_radar_time_profile", "API/generated/pyart.retrieve.get_freq_band", "API/generated/pyart.retrieve.grid_displacement_pc", "API/generated/pyart.retrieve.grid_shift", "API/generated/pyart.retrieve.hydroclass_semisupervised", "API/generated/pyart.retrieve.kdp_maesaka", "API/generated/pyart.retrieve.kdp_schneebeli", "API/generated/pyart.retrieve.kdp_vulpiani", "API/generated/pyart.retrieve.map_profile_to_gates", "API/generated/pyart.retrieve.quasi_vertical_profile", "API/generated/pyart.retrieve.spectra_moments", "API/generated/pyart.retrieve.steiner_conv_strat", "API/generated/pyart.retrieve.texture_of_complex_phase", "API/generated/pyart.retrieve.vad_browning", "API/generated/pyart.retrieve.vad_michelson", "API/generated/pyart.testing", "API/generated/pyart.testing.Grid", "API/generated/pyart.testing.Grid.add_field", "API/generated/pyart.testing.Grid.get_point_longitude_latitude", "API/generated/pyart.testing.Grid.get_projparams", "API/generated/pyart.testing.Grid.init_point_altitude", "API/generated/pyart.testing.Grid.init_point_longitude_latitude", "API/generated/pyart.testing.Grid.init_point_x_y_z", "API/generated/pyart.testing.Grid.projection_proj", "API/generated/pyart.testing.Grid.to_xarray", "API/generated/pyart.testing.Grid.write", "API/generated/pyart.testing.InTemporaryDirectory", "API/generated/pyart.testing.InTemporaryDirectory.cleanup", "API/generated/pyart.testing.Radar", "API/generated/pyart.testing.Radar.add_field", "API/generated/pyart.testing.Radar.add_field_like", "API/generated/pyart.testing.Radar.add_filter", "API/generated/pyart.testing.Radar.check_field_exists", "API/generated/pyart.testing.Radar.extract_sweeps", "API/generated/pyart.testing.Radar.get_azimuth", "API/generated/pyart.testing.Radar.get_elevation", "API/generated/pyart.testing.Radar.get_end", "API/generated/pyart.testing.Radar.get_field", "API/generated/pyart.testing.Radar.get_gate_area", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt", "API/generated/pyart.testing.Radar.get_gate_x_y_z", "API/generated/pyart.testing.Radar.get_nyquist_vel", "API/generated/pyart.testing.Radar.get_slice", "API/generated/pyart.testing.Radar.get_start", "API/generated/pyart.testing.Radar.get_start_end", "API/generated/pyart.testing.Radar.info", "API/generated/pyart.testing.Radar.init_gate_altitude", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude", "API/generated/pyart.testing.Radar.init_gate_x_y_z", "API/generated/pyart.testing.Radar.init_rays_per_sweep", "API/generated/pyart.testing.Radar.iter_azimuth", "API/generated/pyart.testing.Radar.iter_elevation", "API/generated/pyart.testing.Radar.iter_end", "API/generated/pyart.testing.Radar.iter_field", "API/generated/pyart.testing.Radar.iter_slice", "API/generated/pyart.testing.Radar.iter_start", "API/generated/pyart.testing.Radar.iter_start_end", "API/generated/pyart.testing.RadarSpectra", "API/generated/pyart.testing.RadarSpectra.altitude", "API/generated/pyart.testing.RadarSpectra.azimuth", "API/generated/pyart.testing.RadarSpectra.check_field_exists", "API/generated/pyart.testing.RadarSpectra.elevation", "API/generated/pyart.testing.RadarSpectra.fields", "API/generated/pyart.testing.RadarSpectra.fixed_angle", "API/generated/pyart.testing.RadarSpectra.gate_altitude", "API/generated/pyart.testing.RadarSpectra.gate_latitude", "API/generated/pyart.testing.RadarSpectra.gate_longitude", "API/generated/pyart.testing.RadarSpectra.gate_x", "API/generated/pyart.testing.RadarSpectra.gate_y", "API/generated/pyart.testing.RadarSpectra.gate_z", "API/generated/pyart.testing.RadarSpectra.get_end", "API/generated/pyart.testing.RadarSpectra.get_slice", "API/generated/pyart.testing.RadarSpectra.get_start", "API/generated/pyart.testing.RadarSpectra.get_start_end", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.iter_azimuth", "API/generated/pyart.testing.RadarSpectra.iter_elevation", "API/generated/pyart.testing.RadarSpectra.iter_end", "API/generated/pyart.testing.RadarSpectra.iter_field", "API/generated/pyart.testing.RadarSpectra.iter_slice", "API/generated/pyart.testing.RadarSpectra.iter_start", "API/generated/pyart.testing.RadarSpectra.iter_start_end", "API/generated/pyart.testing.RadarSpectra.latitude", "API/generated/pyart.testing.RadarSpectra.longitude", "API/generated/pyart.testing.RadarSpectra.ngates", "API/generated/pyart.testing.RadarSpectra.npulses_max", "API/generated/pyart.testing.RadarSpectra.nrays", "API/generated/pyart.testing.RadarSpectra.nsweeps", "API/generated/pyart.testing.RadarSpectra.projection", "API/generated/pyart.testing.RadarSpectra.range", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep", "API/generated/pyart.testing.RadarSpectra.scan_type", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index", "API/generated/pyart.testing.RadarSpectra.sweep_mode", "API/generated/pyart.testing.RadarSpectra.sweep_number", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index", "API/generated/pyart.testing.RadarSpectra.time", "API/generated/pyart.testing.RadarSpectra.to_vpt", "API/generated/pyart.testing.RadarSpectra.velocity_bins", "API/generated/pyart.testing.get_metadata", "API/generated/pyart.testing.get_test_data", "API/generated/pyart.testing.make_empty_grid", "API/generated/pyart.testing.make_empty_ppi_radar", "API/generated/pyart.testing.make_empty_rhi_radar", "API/generated/pyart.testing.make_empty_spectra_radar", "API/generated/pyart.testing.make_gaussian_storm_grid", "API/generated/pyart.testing.make_normal_storm", "API/generated/pyart.testing.make_single_ray_radar", "API/generated/pyart.testing.make_storm_grid", "API/generated/pyart.testing.make_target_grid", "API/generated/pyart.testing.make_target_radar", "API/generated/pyart.testing.make_target_rhi_radar", "API/generated/pyart.testing.make_target_spectra_radar", "API/generated/pyart.testing.make_velocity_aliased_radar", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar", "API/generated/pyart.util", "API/generated/pyart.util.angular_mean", "API/generated/pyart.util.angular_mean_deg", "API/generated/pyart.util.angular_std", "API/generated/pyart.util.angular_std_deg", "API/generated/pyart.util.angular_texture_2d", "API/generated/pyart.util.column_vertical_profile", "API/generated/pyart.util.cross_section_ppi", "API/generated/pyart.util.cross_section_rhi", "API/generated/pyart.util.datetime_from_dataset", "API/generated/pyart.util.datetime_from_grid", "API/generated/pyart.util.datetime_from_radar", "API/generated/pyart.util.datetimes_from_dataset", "API/generated/pyart.util.datetimes_from_radar", "API/generated/pyart.util.determine_sweeps", "API/generated/pyart.util.estimate_noise_hs74", "API/generated/pyart.util.for_azimuth", "API/generated/pyart.util.get_column_rays", "API/generated/pyart.util.get_field_location", "API/generated/pyart.util.image_mute_radar", "API/generated/pyart.util.interval_mean", "API/generated/pyart.util.interval_std", "API/generated/pyart.util.is_vpt", "API/generated/pyart.util.join_radar", "API/generated/pyart.util.mean_of_two_angles", "API/generated/pyart.util.mean_of_two_angles_deg", "API/generated/pyart.util.rolling_window", "API/generated/pyart.util.simulated_vel_from_profile", "API/generated/pyart.util.sphere_distance", "API/generated/pyart.util.subset_radar", "API/generated/pyart.util.texture", "API/generated/pyart.util.texture_along_ray", "API/generated/pyart.util.to_vpt", "API/index", "blog", "blog_posts/2022/TRACER", "blog_posts/2022/first_pullrequest", "blog_posts/2022/hail-analysis-spc", "blog_posts/2022/ka-band-pyart-xarray-hvplot", "blog_posts/2022/plot-nexrad-level3", "blog_posts/2022/test", "blog_posts/2023/severe-storms-southern-wisconsin", "blog_posts/2024/epcape-blog-post", "blog_posts/blog-post-template", "changelog", "dev/CONTRIBUTING", "dev/ci_setup", "dev/how_to_release", "dev/index", "examples/correct/index", "examples/correct/plot_attenuation", "examples/correct/plot_dealias", "examples/correct/sg_execution_times", "examples/index", "examples/io/index", "examples/io/plot_nexrad_data_aws", "examples/io/plot_older_nexrad_data_aws", "examples/io/sg_execution_times", "examples/mapping/index", "examples/mapping/plot_compare_two_radars_gatemapper", "examples/mapping/plot_grid_single_sweep_ppi", "examples/mapping/plot_map_one_radar_to_grid", "examples/mapping/plot_map_two_radars_to_grid", "examples/mapping/sg_execution_times", "examples/plotting/index", "examples/plotting/plot_choose_a_colormap", "examples/plotting/plot_cross_section", "examples/plotting/plot_modify_colorbar", "examples/plotting/plot_nexrad_image_muted_reflectivity", "examples/plotting/plot_nexrad_multiple_moments", "examples/plotting/plot_nexrad_reflectivity", "examples/plotting/plot_ppi_cfradial", "examples/plotting/plot_ppi_mdv", "examples/plotting/plot_ppi_with_rings", "examples/plotting/plot_rhi_cfradial", "examples/plotting/plot_rhi_cfradial_singlescan", "examples/plotting/plot_rhi_contours_differential_reflectivity", "examples/plotting/plot_rhi_data_overlay", "examples/plotting/plot_rhi_mdv", "examples/plotting/plot_rhi_two_panel", "examples/plotting/plot_three_panel_gridmapdisplay", "examples/plotting/plot_xsect", "examples/plotting/sg_execution_times", "examples/retrieve/index", "examples/retrieve/plot_cfad", "examples/retrieve/plot_column_subset", "examples/retrieve/plot_composite_reflectivity", "examples/retrieve/plot_convective_stratiform", "examples/retrieve/plot_feature_detection", "examples/retrieve/plot_hydrometeor", "examples/retrieve/plot_vad", "examples/retrieve/sg_execution_times", "examples/sg_execution_times", "examples/xradar/index", "examples/xradar/plot_dealias_xradar", "examples/xradar/plot_grid_xradar", "examples/xradar/plot_xradar", "examples/xradar/sg_execution_times", "index", "notebook-gallery", "notebooks/basic_ingest_using_test_radar_object", "notebooks/changing_fields_and_saving", "notebooks/dealiasing_velocity", "notebooks/differential_phase_proceesing_using_LP_methods", "notebooks/mapping_data_to_a_cartesian_grid", "notebooks/masking_data_with_gatefilters", "notebooks/the_pyart_radar_object_and_indexing", "sg_execution_times", "userguide/INSTALL", "userguide/contributors_guide", "userguide/index", "userguide/setting_up_an_environment"], "filenames": ["API/generated/pyart._debug_info.rst", "API/generated/pyart.aux_io.rst", "API/generated/pyart.aux_io.read_d3r_gcpex_nc.rst", "API/generated/pyart.aux_io.read_edge_netcdf.rst", "API/generated/pyart.aux_io.read_gamic.rst", "API/generated/pyart.aux_io.read_kazr.rst", "API/generated/pyart.aux_io.read_kazr_spectra.rst", "API/generated/pyart.aux_io.read_noxp_iphex_nc.rst", "API/generated/pyart.aux_io.read_odim_h5.rst", "API/generated/pyart.aux_io.read_pattern.rst", "API/generated/pyart.aux_io.read_radx.rst", "API/generated/pyart.aux_io.read_radx_grid.rst", "API/generated/pyart.aux_io.read_rainbow_wrl.rst", "API/generated/pyart.aux_io.read_rxm25.rst", "API/generated/pyart.aux_io.read_sinarame_h5.rst", "API/generated/pyart.aux_io.write_sinarame_cfradial.rst", "API/generated/pyart.bridge.rst", "API/generated/pyart.bridge.texture_of_complex_phase.rst", "API/generated/pyart.config.rst", "API/generated/pyart.config.FileMetadata.rst", "API/generated/pyart.config.FileMetadata.__call__.rst", "API/generated/pyart.config.FileMetadata.get_field_name.rst", "API/generated/pyart.config.FileMetadata.get_metadata.rst", "API/generated/pyart.config.get_field_colormap.rst", "API/generated/pyart.config.get_field_limits.rst", "API/generated/pyart.config.get_field_mapping.rst", "API/generated/pyart.config.get_field_name.rst", "API/generated/pyart.config.get_fillvalue.rst", "API/generated/pyart.config.get_metadata.rst", "API/generated/pyart.config.load_config.rst", "API/generated/pyart.core.rst", "API/generated/pyart.core.Grid.rst", "API/generated/pyart.core.Grid.add_field.rst", "API/generated/pyart.core.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.get_projparams.rst", "API/generated/pyart.core.Grid.init_point_altitude.rst", "API/generated/pyart.core.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.core.Grid.init_point_x_y_z.rst", "API/generated/pyart.core.Grid.projection_proj.rst", "API/generated/pyart.core.Grid.to_xarray.rst", "API/generated/pyart.core.Grid.write.rst", "API/generated/pyart.core.HorizontalWindProfile.rst", "API/generated/pyart.core.HorizontalWindProfile.from_u_and_v.rst", "API/generated/pyart.core.HorizontalWindProfile.u_wind.rst", "API/generated/pyart.core.HorizontalWindProfile.v_wind.rst", "API/generated/pyart.core.Radar.rst", "API/generated/pyart.core.Radar.add_field.rst", "API/generated/pyart.core.Radar.add_field_like.rst", "API/generated/pyart.core.Radar.add_filter.rst", "API/generated/pyart.core.Radar.check_field_exists.rst", "API/generated/pyart.core.Radar.extract_sweeps.rst", "API/generated/pyart.core.Radar.get_azimuth.rst", "API/generated/pyart.core.Radar.get_elevation.rst", "API/generated/pyart.core.Radar.get_end.rst", "API/generated/pyart.core.Radar.get_field.rst", "API/generated/pyart.core.Radar.get_gate_area.rst", "API/generated/pyart.core.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.core.Radar.get_gate_x_y_z.rst", "API/generated/pyart.core.Radar.get_nyquist_vel.rst", "API/generated/pyart.core.Radar.get_slice.rst", "API/generated/pyart.core.Radar.get_start.rst", "API/generated/pyart.core.Radar.get_start_end.rst", "API/generated/pyart.core.Radar.info.rst", "API/generated/pyart.core.Radar.init_gate_altitude.rst", "API/generated/pyart.core.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.core.Radar.init_gate_x_y_z.rst", "API/generated/pyart.core.Radar.init_rays_per_sweep.rst", "API/generated/pyart.core.Radar.iter_azimuth.rst", "API/generated/pyart.core.Radar.iter_elevation.rst", "API/generated/pyart.core.Radar.iter_end.rst", "API/generated/pyart.core.Radar.iter_field.rst", "API/generated/pyart.core.Radar.iter_slice.rst", "API/generated/pyart.core.Radar.iter_start.rst", "API/generated/pyart.core.Radar.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.rst", "API/generated/pyart.core.RadarSpectra.altitude.rst", "API/generated/pyart.core.RadarSpectra.azimuth.rst", "API/generated/pyart.core.RadarSpectra.check_field_exists.rst", "API/generated/pyart.core.RadarSpectra.elevation.rst", "API/generated/pyart.core.RadarSpectra.fields.rst", "API/generated/pyart.core.RadarSpectra.fixed_angle.rst", "API/generated/pyart.core.RadarSpectra.gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.gate_latitude.rst", "API/generated/pyart.core.RadarSpectra.gate_longitude.rst", "API/generated/pyart.core.RadarSpectra.gate_x.rst", "API/generated/pyart.core.RadarSpectra.gate_y.rst", "API/generated/pyart.core.RadarSpectra.gate_z.rst", "API/generated/pyart.core.RadarSpectra.get_end.rst", "API/generated/pyart.core.RadarSpectra.get_slice.rst", "API/generated/pyart.core.RadarSpectra.get_start.rst", "API/generated/pyart.core.RadarSpectra.get_start_end.rst", "API/generated/pyart.core.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.core.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.core.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.core.RadarSpectra.iter_elevation.rst", "API/generated/pyart.core.RadarSpectra.iter_end.rst", "API/generated/pyart.core.RadarSpectra.iter_field.rst", "API/generated/pyart.core.RadarSpectra.iter_slice.rst", "API/generated/pyart.core.RadarSpectra.iter_start.rst", "API/generated/pyart.core.RadarSpectra.iter_start_end.rst", "API/generated/pyart.core.RadarSpectra.latitude.rst", "API/generated/pyart.core.RadarSpectra.longitude.rst", "API/generated/pyart.core.RadarSpectra.ngates.rst", "API/generated/pyart.core.RadarSpectra.npulses_max.rst", "API/generated/pyart.core.RadarSpectra.nrays.rst", "API/generated/pyart.core.RadarSpectra.nsweeps.rst", "API/generated/pyart.core.RadarSpectra.projection.rst", "API/generated/pyart.core.RadarSpectra.range.rst", "API/generated/pyart.core.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.core.RadarSpectra.scan_type.rst", "API/generated/pyart.core.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.core.RadarSpectra.sweep_mode.rst", "API/generated/pyart.core.RadarSpectra.sweep_number.rst", "API/generated/pyart.core.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.core.RadarSpectra.time.rst", "API/generated/pyart.core.RadarSpectra.to_vpt.rst", "API/generated/pyart.core.RadarSpectra.velocity_bins.rst", "API/generated/pyart.core.antenna_to_cartesian.rst", "API/generated/pyart.core.antenna_vectors_to_cartesian.rst", "API/generated/pyart.core.cartesian_to_geographic.rst", "API/generated/pyart.core.cartesian_to_geographic_aeqd.rst", "API/generated/pyart.core.cartesian_vectors_to_geographic.rst", "API/generated/pyart.core.geographic_to_cartesian.rst", "API/generated/pyart.core.geographic_to_cartesian_aeqd.rst", "API/generated/pyart.correct.rst", "API/generated/pyart.correct.GateFilter.rst", "API/generated/pyart.correct.GateFilter.copy.rst", "API/generated/pyart.correct.GateFilter.exclude_above.rst", "API/generated/pyart.correct.GateFilter.exclude_all.rst", "API/generated/pyart.correct.GateFilter.exclude_below.rst", "API/generated/pyart.correct.GateFilter.exclude_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_gates.rst", "API/generated/pyart.correct.GateFilter.exclude_inside.rst", "API/generated/pyart.correct.GateFilter.exclude_invalid.rst", "API/generated/pyart.correct.GateFilter.exclude_masked.rst", "API/generated/pyart.correct.GateFilter.exclude_none.rst", "API/generated/pyart.correct.GateFilter.exclude_not_equal.rst", "API/generated/pyart.correct.GateFilter.exclude_outside.rst", "API/generated/pyart.correct.GateFilter.exclude_transition.rst", "API/generated/pyart.correct.GateFilter.gate_excluded.rst", "API/generated/pyart.correct.GateFilter.gate_included.rst", "API/generated/pyart.correct.GateFilter.include_above.rst", "API/generated/pyart.correct.GateFilter.include_all.rst", "API/generated/pyart.correct.GateFilter.include_below.rst", "API/generated/pyart.correct.GateFilter.include_equal.rst", "API/generated/pyart.correct.GateFilter.include_gates.rst", "API/generated/pyart.correct.GateFilter.include_inside.rst", "API/generated/pyart.correct.GateFilter.include_none.rst", "API/generated/pyart.correct.GateFilter.include_not_equal.rst", "API/generated/pyart.correct.GateFilter.include_not_masked.rst", "API/generated/pyart.correct.GateFilter.include_not_transition.rst", "API/generated/pyart.correct.GateFilter.include_outside.rst", "API/generated/pyart.correct.GateFilter.include_valid.rst", "API/generated/pyart.correct.calculate_attenuation.rst", "API/generated/pyart.correct.calculate_attenuation_philinear.rst", "API/generated/pyart.correct.calculate_attenuation_zphi.rst", "API/generated/pyart.correct.correct_bias.rst", "API/generated/pyart.correct.correct_noise_rhohv.rst", "API/generated/pyart.correct.dealias_fourdd.rst", "API/generated/pyart.correct.dealias_region_based.rst", "API/generated/pyart.correct.dealias_unwrap_phase.rst", "API/generated/pyart.correct.despeckle_field.rst", "API/generated/pyart.correct.find_objects.rst", "API/generated/pyart.correct.moment_based_gate_filter.rst", "API/generated/pyart.correct.phase_proc_lp.rst", "API/generated/pyart.correct.phase_proc_lp_gf.rst", "API/generated/pyart.exceptions.rst", "API/generated/pyart.filters.rst", "API/generated/pyart.filters.GateFilter.rst", "API/generated/pyart.filters.GateFilter.copy.rst", "API/generated/pyart.filters.GateFilter.exclude_above.rst", "API/generated/pyart.filters.GateFilter.exclude_all.rst", "API/generated/pyart.filters.GateFilter.exclude_below.rst", "API/generated/pyart.filters.GateFilter.exclude_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_gates.rst", "API/generated/pyart.filters.GateFilter.exclude_inside.rst", "API/generated/pyart.filters.GateFilter.exclude_invalid.rst", "API/generated/pyart.filters.GateFilter.exclude_masked.rst", "API/generated/pyart.filters.GateFilter.exclude_none.rst", "API/generated/pyart.filters.GateFilter.exclude_not_equal.rst", "API/generated/pyart.filters.GateFilter.exclude_outside.rst", "API/generated/pyart.filters.GateFilter.exclude_transition.rst", "API/generated/pyart.filters.GateFilter.gate_excluded.rst", "API/generated/pyart.filters.GateFilter.gate_included.rst", "API/generated/pyart.filters.GateFilter.include_above.rst", "API/generated/pyart.filters.GateFilter.include_all.rst", "API/generated/pyart.filters.GateFilter.include_below.rst", "API/generated/pyart.filters.GateFilter.include_equal.rst", "API/generated/pyart.filters.GateFilter.include_gates.rst", "API/generated/pyart.filters.GateFilter.include_inside.rst", "API/generated/pyart.filters.GateFilter.include_none.rst", "API/generated/pyart.filters.GateFilter.include_not_equal.rst", "API/generated/pyart.filters.GateFilter.include_not_masked.rst", "API/generated/pyart.filters.GateFilter.include_not_transition.rst", "API/generated/pyart.filters.GateFilter.include_outside.rst", "API/generated/pyart.filters.GateFilter.include_valid.rst", "API/generated/pyart.filters.iso0_based_gate_filter.rst", "API/generated/pyart.filters.moment_and_texture_based_gate_filter.rst", "API/generated/pyart.filters.moment_based_gate_filter.rst", "API/generated/pyart.filters.temp_based_gate_filter.rst", "API/generated/pyart.graph.rst", "API/generated/pyart.graph.AirborneRadarDisplay.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_filename.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.AirborneRadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_label.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_labels.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_ray.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_sweep_grid.rst", "API/generated/pyart.graph.AirborneRadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.AirborneRadarDisplay.set_limits.rst", "API/generated/pyart.graph.GridMapDisplay.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_coastlines.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_political_boundaries.rst", "API/generated/pyart.graph.GridMapDisplay.cartopy_states.rst", "API/generated/pyart.graph.GridMapDisplay.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplay.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplay.plot_cross_section.rst", "API/generated/pyart.graph.GridMapDisplay.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplay.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplay.plot_longitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_grid_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.get_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_basemap.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_crosshairs.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_grid.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitude_slice.rst", "API/generated/pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level.rst", "API/generated/pyart.graph.RadarDisplay.rst", "API/generated/pyart.graph.RadarDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_title.rst", "API/generated/pyart.graph.RadarDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarDisplay.plot.rst", "API/generated/pyart.graph.RadarDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarDisplay.plot_label.rst", "API/generated/pyart.graph.RadarDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplay.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplay.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplay.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplay.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplay.plot.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplay.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplay.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplay.set_limits.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_filename.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_ray_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.generate_vpt_title.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_r.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_time.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_xaxis_x.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_field.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_y.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.label_yaxis_z.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_colorbar.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cr_raster.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_cross_hair.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_grid_lines.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_label.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_labels.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_geo.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_line_xy.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_point.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ppi_map.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_ring.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_range_rings.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_ray.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_rhi.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.plot_vpt.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio.rst", "API/generated/pyart.graph.RadarMapDisplayBasemap.set_limits.rst", "API/generated/pyart.graph.plot_convstrat_scheme.rst", "API/generated/pyart.io.rst", "API/generated/pyart.io.prepare_for_read.rst", "API/generated/pyart.io.read.rst", "API/generated/pyart.io.read_arm_sonde.rst", "API/generated/pyart.io.read_arm_sonde_vap.rst", "API/generated/pyart.io.read_cfradial.rst", "API/generated/pyart.io.read_chl.rst", "API/generated/pyart.io.read_grid.rst", "API/generated/pyart.io.read_grid_mdv.rst", "API/generated/pyart.io.read_mdv.rst", "API/generated/pyart.io.read_nexrad_archive.rst", "API/generated/pyart.io.read_nexrad_cdm.rst", "API/generated/pyart.io.read_nexrad_level3.rst", "API/generated/pyart.io.read_rsl.rst", "API/generated/pyart.io.read_sigmet.rst", "API/generated/pyart.io.read_uf.rst", "API/generated/pyart.io.write_cfradial.rst", "API/generated/pyart.io.write_grid.rst", "API/generated/pyart.io.write_grid_geotiff.rst", "API/generated/pyart.io.write_grid_mdv.rst", "API/generated/pyart.io.write_uf.rst", "API/generated/pyart.lazydict.rst", "API/generated/pyart.lazydict.LazyLoadDict.rst", "API/generated/pyart.lazydict.LazyLoadDict.clear.rst", "API/generated/pyart.lazydict.LazyLoadDict.copy.rst", "API/generated/pyart.lazydict.LazyLoadDict.get.rst", "API/generated/pyart.lazydict.LazyLoadDict.has_key.rst", "API/generated/pyart.lazydict.LazyLoadDict.items.rst", "API/generated/pyart.lazydict.LazyLoadDict.keys.rst", "API/generated/pyart.lazydict.LazyLoadDict.pop.rst", "API/generated/pyart.lazydict.LazyLoadDict.popitem.rst", "API/generated/pyart.lazydict.LazyLoadDict.set_lazy.rst", "API/generated/pyart.lazydict.LazyLoadDict.setdefault.rst", "API/generated/pyart.lazydict.LazyLoadDict.update.rst", "API/generated/pyart.lazydict.LazyLoadDict.values.rst", "API/generated/pyart.lazydict.MutableMapping.rst", "API/generated/pyart.lazydict.MutableMapping.clear.rst", "API/generated/pyart.lazydict.MutableMapping.get.rst", "API/generated/pyart.lazydict.MutableMapping.items.rst", "API/generated/pyart.lazydict.MutableMapping.keys.rst", "API/generated/pyart.lazydict.MutableMapping.pop.rst", "API/generated/pyart.lazydict.MutableMapping.popitem.rst", "API/generated/pyart.lazydict.MutableMapping.setdefault.rst", "API/generated/pyart.lazydict.MutableMapping.update.rst", "API/generated/pyart.lazydict.MutableMapping.values.rst", "API/generated/pyart.map.rst", "API/generated/pyart.map.GateMapper.rst", "API/generated/pyart.map.GateMapper.distance_tolerance.rst", "API/generated/pyart.map.GateMapper.mapped_radar.rst", "API/generated/pyart.map.GateMapper.time_tolerance.rst", "API/generated/pyart.map.example_roi_func_constant.rst", "API/generated/pyart.map.example_roi_func_dist.rst", "API/generated/pyart.map.example_roi_func_dist_beam.rst", "API/generated/pyart.map.grid_from_radars.rst", "API/generated/pyart.map.grid_ppi_sweeps.rst", "API/generated/pyart.map.grid_rhi_sweeps.rst", "API/generated/pyart.map.map_gates_to_grid.rst", "API/generated/pyart.map.map_to_grid.rst", "API/generated/pyart.retrieve.rst", "API/generated/pyart.retrieve.ZtoR.rst", "API/generated/pyart.retrieve.calculate_snr_from_reflectivity.rst", "API/generated/pyart.retrieve.calculate_velocity_texture.rst", "API/generated/pyart.retrieve.composite_reflectivity.rst", "API/generated/pyart.retrieve.compute_cdr.rst", "API/generated/pyart.retrieve.compute_l.rst", "API/generated/pyart.retrieve.compute_noisedBZ.rst", "API/generated/pyart.retrieve.compute_snr.rst", "API/generated/pyart.retrieve.conv_strat_raut.rst", "API/generated/pyart.retrieve.conv_strat_yuter.rst", "API/generated/pyart.retrieve.create_cfad.rst", "API/generated/pyart.retrieve.dealias_spectra.rst", "API/generated/pyart.retrieve.est_rain_rate_a.rst", "API/generated/pyart.retrieve.est_rain_rate_hydro.rst", "API/generated/pyart.retrieve.est_rain_rate_kdp.rst", "API/generated/pyart.retrieve.est_rain_rate_z.rst", "API/generated/pyart.retrieve.est_rain_rate_za.rst", "API/generated/pyart.retrieve.est_rain_rate_zkdp.rst", "API/generated/pyart.retrieve.est_rain_rate_zpoly.rst", "API/generated/pyart.retrieve.feature_detection.rst", "API/generated/pyart.retrieve.fetch_radar_time_profile.rst", "API/generated/pyart.retrieve.get_freq_band.rst", "API/generated/pyart.retrieve.grid_displacement_pc.rst", "API/generated/pyart.retrieve.grid_shift.rst", "API/generated/pyart.retrieve.hydroclass_semisupervised.rst", "API/generated/pyart.retrieve.kdp_maesaka.rst", "API/generated/pyart.retrieve.kdp_schneebeli.rst", "API/generated/pyart.retrieve.kdp_vulpiani.rst", "API/generated/pyart.retrieve.map_profile_to_gates.rst", "API/generated/pyart.retrieve.quasi_vertical_profile.rst", "API/generated/pyart.retrieve.spectra_moments.rst", "API/generated/pyart.retrieve.steiner_conv_strat.rst", "API/generated/pyart.retrieve.texture_of_complex_phase.rst", "API/generated/pyart.retrieve.vad_browning.rst", "API/generated/pyart.retrieve.vad_michelson.rst", "API/generated/pyart.testing.rst", "API/generated/pyart.testing.Grid.rst", "API/generated/pyart.testing.Grid.add_field.rst", "API/generated/pyart.testing.Grid.get_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.get_projparams.rst", "API/generated/pyart.testing.Grid.init_point_altitude.rst", "API/generated/pyart.testing.Grid.init_point_longitude_latitude.rst", "API/generated/pyart.testing.Grid.init_point_x_y_z.rst", "API/generated/pyart.testing.Grid.projection_proj.rst", "API/generated/pyart.testing.Grid.to_xarray.rst", "API/generated/pyart.testing.Grid.write.rst", "API/generated/pyart.testing.InTemporaryDirectory.rst", "API/generated/pyart.testing.InTemporaryDirectory.cleanup.rst", "API/generated/pyart.testing.Radar.rst", "API/generated/pyart.testing.Radar.add_field.rst", "API/generated/pyart.testing.Radar.add_field_like.rst", "API/generated/pyart.testing.Radar.add_filter.rst", "API/generated/pyart.testing.Radar.check_field_exists.rst", "API/generated/pyart.testing.Radar.extract_sweeps.rst", "API/generated/pyart.testing.Radar.get_azimuth.rst", "API/generated/pyart.testing.Radar.get_elevation.rst", "API/generated/pyart.testing.Radar.get_end.rst", "API/generated/pyart.testing.Radar.get_field.rst", "API/generated/pyart.testing.Radar.get_gate_area.rst", "API/generated/pyart.testing.Radar.get_gate_lat_lon_alt.rst", "API/generated/pyart.testing.Radar.get_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.get_nyquist_vel.rst", "API/generated/pyart.testing.Radar.get_slice.rst", "API/generated/pyart.testing.Radar.get_start.rst", "API/generated/pyart.testing.Radar.get_start_end.rst", "API/generated/pyart.testing.Radar.info.rst", "API/generated/pyart.testing.Radar.init_gate_altitude.rst", "API/generated/pyart.testing.Radar.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.Radar.init_gate_x_y_z.rst", "API/generated/pyart.testing.Radar.init_rays_per_sweep.rst", "API/generated/pyart.testing.Radar.iter_azimuth.rst", "API/generated/pyart.testing.Radar.iter_elevation.rst", "API/generated/pyart.testing.Radar.iter_end.rst", "API/generated/pyart.testing.Radar.iter_field.rst", "API/generated/pyart.testing.Radar.iter_slice.rst", "API/generated/pyart.testing.Radar.iter_start.rst", "API/generated/pyart.testing.Radar.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.rst", "API/generated/pyart.testing.RadarSpectra.altitude.rst", "API/generated/pyart.testing.RadarSpectra.azimuth.rst", "API/generated/pyart.testing.RadarSpectra.check_field_exists.rst", "API/generated/pyart.testing.RadarSpectra.elevation.rst", "API/generated/pyart.testing.RadarSpectra.fields.rst", "API/generated/pyart.testing.RadarSpectra.fixed_angle.rst", "API/generated/pyart.testing.RadarSpectra.gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_latitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_longitude.rst", "API/generated/pyart.testing.RadarSpectra.gate_x.rst", "API/generated/pyart.testing.RadarSpectra.gate_y.rst", "API/generated/pyart.testing.RadarSpectra.gate_z.rst", "API/generated/pyart.testing.RadarSpectra.get_end.rst", "API/generated/pyart.testing.RadarSpectra.get_slice.rst", "API/generated/pyart.testing.RadarSpectra.get_start.rst", "API/generated/pyart.testing.RadarSpectra.get_start_end.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_altitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_longitude_latitude.rst", "API/generated/pyart.testing.RadarSpectra.init_gate_x_y_z.rst", "API/generated/pyart.testing.RadarSpectra.init_rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.iter_azimuth.rst", "API/generated/pyart.testing.RadarSpectra.iter_elevation.rst", "API/generated/pyart.testing.RadarSpectra.iter_end.rst", "API/generated/pyart.testing.RadarSpectra.iter_field.rst", "API/generated/pyart.testing.RadarSpectra.iter_slice.rst", "API/generated/pyart.testing.RadarSpectra.iter_start.rst", "API/generated/pyart.testing.RadarSpectra.iter_start_end.rst", "API/generated/pyart.testing.RadarSpectra.latitude.rst", "API/generated/pyart.testing.RadarSpectra.longitude.rst", "API/generated/pyart.testing.RadarSpectra.ngates.rst", "API/generated/pyart.testing.RadarSpectra.npulses_max.rst", "API/generated/pyart.testing.RadarSpectra.nrays.rst", "API/generated/pyart.testing.RadarSpectra.nsweeps.rst", "API/generated/pyart.testing.RadarSpectra.projection.rst", "API/generated/pyart.testing.RadarSpectra.range.rst", "API/generated/pyart.testing.RadarSpectra.rays_per_sweep.rst", "API/generated/pyart.testing.RadarSpectra.scan_type.rst", "API/generated/pyart.testing.RadarSpectra.sweep_end_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.sweep_mode.rst", "API/generated/pyart.testing.RadarSpectra.sweep_number.rst", "API/generated/pyart.testing.RadarSpectra.sweep_start_ray_index.rst", "API/generated/pyart.testing.RadarSpectra.time.rst", "API/generated/pyart.testing.RadarSpectra.to_vpt.rst", "API/generated/pyart.testing.RadarSpectra.velocity_bins.rst", "API/generated/pyart.testing.get_metadata.rst", "API/generated/pyart.testing.get_test_data.rst", "API/generated/pyart.testing.make_empty_grid.rst", "API/generated/pyart.testing.make_empty_ppi_radar.rst", "API/generated/pyart.testing.make_empty_rhi_radar.rst", "API/generated/pyart.testing.make_empty_spectra_radar.rst", "API/generated/pyart.testing.make_gaussian_storm_grid.rst", "API/generated/pyart.testing.make_normal_storm.rst", "API/generated/pyart.testing.make_single_ray_radar.rst", "API/generated/pyart.testing.make_storm_grid.rst", "API/generated/pyart.testing.make_target_grid.rst", "API/generated/pyart.testing.make_target_radar.rst", "API/generated/pyart.testing.make_target_rhi_radar.rst", "API/generated/pyart.testing.make_target_spectra_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_radar.rst", "API/generated/pyart.testing.make_velocity_aliased_rhi_radar.rst", "API/generated/pyart.util.rst", "API/generated/pyart.util.angular_mean.rst", "API/generated/pyart.util.angular_mean_deg.rst", "API/generated/pyart.util.angular_std.rst", "API/generated/pyart.util.angular_std_deg.rst", "API/generated/pyart.util.angular_texture_2d.rst", "API/generated/pyart.util.column_vertical_profile.rst", "API/generated/pyart.util.cross_section_ppi.rst", "API/generated/pyart.util.cross_section_rhi.rst", "API/generated/pyart.util.datetime_from_dataset.rst", "API/generated/pyart.util.datetime_from_grid.rst", "API/generated/pyart.util.datetime_from_radar.rst", "API/generated/pyart.util.datetimes_from_dataset.rst", "API/generated/pyart.util.datetimes_from_radar.rst", "API/generated/pyart.util.determine_sweeps.rst", "API/generated/pyart.util.estimate_noise_hs74.rst", "API/generated/pyart.util.for_azimuth.rst", "API/generated/pyart.util.get_column_rays.rst", "API/generated/pyart.util.get_field_location.rst", "API/generated/pyart.util.image_mute_radar.rst", "API/generated/pyart.util.interval_mean.rst", "API/generated/pyart.util.interval_std.rst", "API/generated/pyart.util.is_vpt.rst", "API/generated/pyart.util.join_radar.rst", "API/generated/pyart.util.mean_of_two_angles.rst", "API/generated/pyart.util.mean_of_two_angles_deg.rst", "API/generated/pyart.util.rolling_window.rst", "API/generated/pyart.util.simulated_vel_from_profile.rst", "API/generated/pyart.util.sphere_distance.rst", "API/generated/pyart.util.subset_radar.rst", "API/generated/pyart.util.texture.rst", "API/generated/pyart.util.texture_along_ray.rst", "API/generated/pyart.util.to_vpt.rst", "API/index.rst", "blog.md", "blog_posts/2022/TRACER.ipynb", "blog_posts/2022/first_pullrequest.ipynb", "blog_posts/2022/hail-analysis-spc.ipynb", "blog_posts/2022/ka-band-pyart-xarray-hvplot.ipynb", "blog_posts/2022/plot-nexrad-level3.ipynb", "blog_posts/2022/test.md", "blog_posts/2023/severe-storms-southern-wisconsin.ipynb", "blog_posts/2024/epcape-blog-post.ipynb", "blog_posts/blog-post-template.ipynb", "changelog.md", "dev/CONTRIBUTING.rst", "dev/ci_setup.rst", "dev/how_to_release.rst", "dev/index.rst", "examples/correct/index.rst", "examples/correct/plot_attenuation.rst", "examples/correct/plot_dealias.rst", "examples/correct/sg_execution_times.rst", "examples/index.rst", "examples/io/index.rst", "examples/io/plot_nexrad_data_aws.rst", "examples/io/plot_older_nexrad_data_aws.rst", "examples/io/sg_execution_times.rst", "examples/mapping/index.rst", "examples/mapping/plot_compare_two_radars_gatemapper.rst", "examples/mapping/plot_grid_single_sweep_ppi.rst", "examples/mapping/plot_map_one_radar_to_grid.rst", "examples/mapping/plot_map_two_radars_to_grid.rst", "examples/mapping/sg_execution_times.rst", "examples/plotting/index.rst", "examples/plotting/plot_choose_a_colormap.rst", "examples/plotting/plot_cross_section.rst", "examples/plotting/plot_modify_colorbar.rst", "examples/plotting/plot_nexrad_image_muted_reflectivity.rst", "examples/plotting/plot_nexrad_multiple_moments.rst", "examples/plotting/plot_nexrad_reflectivity.rst", "examples/plotting/plot_ppi_cfradial.rst", "examples/plotting/plot_ppi_mdv.rst", "examples/plotting/plot_ppi_with_rings.rst", "examples/plotting/plot_rhi_cfradial.rst", "examples/plotting/plot_rhi_cfradial_singlescan.rst", "examples/plotting/plot_rhi_contours_differential_reflectivity.rst", "examples/plotting/plot_rhi_data_overlay.rst", "examples/plotting/plot_rhi_mdv.rst", "examples/plotting/plot_rhi_two_panel.rst", "examples/plotting/plot_three_panel_gridmapdisplay.rst", "examples/plotting/plot_xsect.rst", "examples/plotting/sg_execution_times.rst", "examples/retrieve/index.rst", "examples/retrieve/plot_cfad.rst", "examples/retrieve/plot_column_subset.rst", "examples/retrieve/plot_composite_reflectivity.rst", "examples/retrieve/plot_convective_stratiform.rst", "examples/retrieve/plot_feature_detection.rst", "examples/retrieve/plot_hydrometeor.rst", "examples/retrieve/plot_vad.rst", "examples/retrieve/sg_execution_times.rst", "examples/sg_execution_times.rst", "examples/xradar/index.rst", "examples/xradar/plot_dealias_xradar.rst", "examples/xradar/plot_grid_xradar.rst", "examples/xradar/plot_xradar.rst", "examples/xradar/sg_execution_times.rst", "index.rst", "notebook-gallery.rst", "notebooks/basic_ingest_using_test_radar_object.ipynb", "notebooks/changing_fields_and_saving.ipynb", "notebooks/dealiasing_velocity.ipynb", "notebooks/differential_phase_proceesing_using_LP_methods.ipynb", "notebooks/mapping_data_to_a_cartesian_grid.ipynb", "notebooks/masking_data_with_gatefilters.ipynb", "notebooks/the_pyart_radar_object_and_indexing.ipynb", "sg_execution_times.rst", "userguide/INSTALL.rst", "userguide/contributors_guide.rst", "userguide/index.rst", "userguide/setting_up_an_environment.rst"], "titles": ["pyart._debug_info", "pyart.aux_io", "pyart.aux_io.read_d3r_gcpex_nc", "pyart.aux_io.read_edge_netcdf", "pyart.aux_io.read_gamic", "pyart.aux_io.read_kazr", "pyart.aux_io.read_kazr_spectra", "pyart.aux_io.read_noxp_iphex_nc", "pyart.aux_io.read_odim_h5", "pyart.aux_io.read_pattern", "pyart.aux_io.read_radx", "pyart.aux_io.read_radx_grid", "pyart.aux_io.read_rainbow_wrl", "pyart.aux_io.read_rxm25", "pyart.aux_io.read_sinarame_h5", "pyart.aux_io.write_sinarame_cfradial", "pyart.bridge", "pyart.bridge.texture_of_complex_phase", "pyart.config", "pyart.config.FileMetadata", "pyart.config.FileMetadata.__call__", "pyart.config.FileMetadata.get_field_name", "pyart.config.FileMetadata.get_metadata", "pyart.config.get_field_colormap", "pyart.config.get_field_limits", "pyart.config.get_field_mapping", "pyart.config.get_field_name", "pyart.config.get_fillvalue", "pyart.config.get_metadata", "pyart.config.load_config", "pyart.core", "pyart.core.Grid", "pyart.core.Grid.add_field", "pyart.core.Grid.get_point_longitude_latitude", "pyart.core.Grid.get_projparams", "pyart.core.Grid.init_point_altitude", "pyart.core.Grid.init_point_longitude_latitude", "pyart.core.Grid.init_point_x_y_z", "pyart.core.Grid.projection_proj", "pyart.core.Grid.to_xarray", "pyart.core.Grid.write", "pyart.core.HorizontalWindProfile", "pyart.core.HorizontalWindProfile.from_u_and_v", "pyart.core.HorizontalWindProfile.u_wind", "pyart.core.HorizontalWindProfile.v_wind", "pyart.core.Radar", "pyart.core.Radar.add_field", "pyart.core.Radar.add_field_like", "pyart.core.Radar.add_filter", "pyart.core.Radar.check_field_exists", "pyart.core.Radar.extract_sweeps", "pyart.core.Radar.get_azimuth", "pyart.core.Radar.get_elevation", "pyart.core.Radar.get_end", "pyart.core.Radar.get_field", "pyart.core.Radar.get_gate_area", "pyart.core.Radar.get_gate_lat_lon_alt", "pyart.core.Radar.get_gate_x_y_z", "pyart.core.Radar.get_nyquist_vel", "pyart.core.Radar.get_slice", "pyart.core.Radar.get_start", "pyart.core.Radar.get_start_end", "pyart.core.Radar.info", "pyart.core.Radar.init_gate_altitude", "pyart.core.Radar.init_gate_longitude_latitude", "pyart.core.Radar.init_gate_x_y_z", "pyart.core.Radar.init_rays_per_sweep", "pyart.core.Radar.iter_azimuth", "pyart.core.Radar.iter_elevation", "pyart.core.Radar.iter_end", "pyart.core.Radar.iter_field", "pyart.core.Radar.iter_slice", "pyart.core.Radar.iter_start", "pyart.core.Radar.iter_start_end", "pyart.core.RadarSpectra", "pyart.core.RadarSpectra.altitude", "pyart.core.RadarSpectra.azimuth", "pyart.core.RadarSpectra.check_field_exists", "pyart.core.RadarSpectra.elevation", "pyart.core.RadarSpectra.fields", "pyart.core.RadarSpectra.fixed_angle", "pyart.core.RadarSpectra.gate_altitude", "pyart.core.RadarSpectra.gate_latitude", "pyart.core.RadarSpectra.gate_longitude", "pyart.core.RadarSpectra.gate_x", "pyart.core.RadarSpectra.gate_y", "pyart.core.RadarSpectra.gate_z", "pyart.core.RadarSpectra.get_end", "pyart.core.RadarSpectra.get_slice", "pyart.core.RadarSpectra.get_start", "pyart.core.RadarSpectra.get_start_end", "pyart.core.RadarSpectra.init_gate_altitude", "pyart.core.RadarSpectra.init_gate_longitude_latitude", "pyart.core.RadarSpectra.init_gate_x_y_z", "pyart.core.RadarSpectra.init_rays_per_sweep", "pyart.core.RadarSpectra.iter_azimuth", "pyart.core.RadarSpectra.iter_elevation", "pyart.core.RadarSpectra.iter_end", "pyart.core.RadarSpectra.iter_field", "pyart.core.RadarSpectra.iter_slice", "pyart.core.RadarSpectra.iter_start", "pyart.core.RadarSpectra.iter_start_end", "pyart.core.RadarSpectra.latitude", "pyart.core.RadarSpectra.longitude", "pyart.core.RadarSpectra.ngates", "pyart.core.RadarSpectra.npulses_max", "pyart.core.RadarSpectra.nrays", "pyart.core.RadarSpectra.nsweeps", "pyart.core.RadarSpectra.projection", "pyart.core.RadarSpectra.range", "pyart.core.RadarSpectra.rays_per_sweep", "pyart.core.RadarSpectra.scan_type", "pyart.core.RadarSpectra.sweep_end_ray_index", "pyart.core.RadarSpectra.sweep_mode", "pyart.core.RadarSpectra.sweep_number", "pyart.core.RadarSpectra.sweep_start_ray_index", "pyart.core.RadarSpectra.time", "pyart.core.RadarSpectra.to_vpt", "pyart.core.RadarSpectra.velocity_bins", "pyart.core.antenna_to_cartesian", "pyart.core.antenna_vectors_to_cartesian", "pyart.core.cartesian_to_geographic", "pyart.core.cartesian_to_geographic_aeqd", "pyart.core.cartesian_vectors_to_geographic", "pyart.core.geographic_to_cartesian", "pyart.core.geographic_to_cartesian_aeqd", "pyart.correct", "pyart.correct.GateFilter", "pyart.correct.GateFilter.copy", "pyart.correct.GateFilter.exclude_above", "pyart.correct.GateFilter.exclude_all", "pyart.correct.GateFilter.exclude_below", "pyart.correct.GateFilter.exclude_equal", "pyart.correct.GateFilter.exclude_gates", "pyart.correct.GateFilter.exclude_inside", "pyart.correct.GateFilter.exclude_invalid", "pyart.correct.GateFilter.exclude_masked", "pyart.correct.GateFilter.exclude_none", "pyart.correct.GateFilter.exclude_not_equal", "pyart.correct.GateFilter.exclude_outside", "pyart.correct.GateFilter.exclude_transition", "pyart.correct.GateFilter.gate_excluded", "pyart.correct.GateFilter.gate_included", "pyart.correct.GateFilter.include_above", "pyart.correct.GateFilter.include_all", "pyart.correct.GateFilter.include_below", "pyart.correct.GateFilter.include_equal", "pyart.correct.GateFilter.include_gates", "pyart.correct.GateFilter.include_inside", "pyart.correct.GateFilter.include_none", "pyart.correct.GateFilter.include_not_equal", "pyart.correct.GateFilter.include_not_masked", "pyart.correct.GateFilter.include_not_transition", "pyart.correct.GateFilter.include_outside", "pyart.correct.GateFilter.include_valid", "pyart.correct.calculate_attenuation", "pyart.correct.calculate_attenuation_philinear", "pyart.correct.calculate_attenuation_zphi", "pyart.correct.correct_bias", "pyart.correct.correct_noise_rhohv", "pyart.correct.dealias_fourdd", "pyart.correct.dealias_region_based", "pyart.correct.dealias_unwrap_phase", "pyart.correct.despeckle_field", "pyart.correct.find_objects", "pyart.correct.moment_based_gate_filter", "pyart.correct.phase_proc_lp", "pyart.correct.phase_proc_lp_gf", "pyart.exceptions", "pyart.filters", "pyart.filters.GateFilter", "pyart.filters.GateFilter.copy", "pyart.filters.GateFilter.exclude_above", "pyart.filters.GateFilter.exclude_all", "pyart.filters.GateFilter.exclude_below", "pyart.filters.GateFilter.exclude_equal", "pyart.filters.GateFilter.exclude_gates", "pyart.filters.GateFilter.exclude_inside", "pyart.filters.GateFilter.exclude_invalid", "pyart.filters.GateFilter.exclude_masked", "pyart.filters.GateFilter.exclude_none", "pyart.filters.GateFilter.exclude_not_equal", "pyart.filters.GateFilter.exclude_outside", "pyart.filters.GateFilter.exclude_transition", "pyart.filters.GateFilter.gate_excluded", "pyart.filters.GateFilter.gate_included", "pyart.filters.GateFilter.include_above", "pyart.filters.GateFilter.include_all", "pyart.filters.GateFilter.include_below", "pyart.filters.GateFilter.include_equal", "pyart.filters.GateFilter.include_gates", "pyart.filters.GateFilter.include_inside", "pyart.filters.GateFilter.include_none", "pyart.filters.GateFilter.include_not_equal", "pyart.filters.GateFilter.include_not_masked", "pyart.filters.GateFilter.include_not_transition", "pyart.filters.GateFilter.include_outside", "pyart.filters.GateFilter.include_valid", "pyart.filters.iso0_based_gate_filter", "pyart.filters.moment_and_texture_based_gate_filter", "pyart.filters.moment_based_gate_filter", "pyart.filters.temp_based_gate_filter", "pyart.graph", "pyart.graph.AirborneRadarDisplay", "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title", "pyart.graph.AirborneRadarDisplay.generate_filename", "pyart.graph.AirborneRadarDisplay.generate_ray_title", "pyart.graph.AirborneRadarDisplay.generate_title", "pyart.graph.AirborneRadarDisplay.generate_vpt_title", "pyart.graph.AirborneRadarDisplay.label_xaxis_r", "pyart.graph.AirborneRadarDisplay.label_xaxis_rays", "pyart.graph.AirborneRadarDisplay.label_xaxis_time", "pyart.graph.AirborneRadarDisplay.label_xaxis_x", "pyart.graph.AirborneRadarDisplay.label_yaxis_field", "pyart.graph.AirborneRadarDisplay.label_yaxis_y", "pyart.graph.AirborneRadarDisplay.label_yaxis_z", "pyart.graph.AirborneRadarDisplay.plot", "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi", "pyart.graph.AirborneRadarDisplay.plot_colorbar", "pyart.graph.AirborneRadarDisplay.plot_cr_raster", "pyart.graph.AirborneRadarDisplay.plot_cross_hair", "pyart.graph.AirborneRadarDisplay.plot_grid_lines", "pyart.graph.AirborneRadarDisplay.plot_label", "pyart.graph.AirborneRadarDisplay.plot_labels", "pyart.graph.AirborneRadarDisplay.plot_ppi", "pyart.graph.AirborneRadarDisplay.plot_range_ring", "pyart.graph.AirborneRadarDisplay.plot_range_rings", "pyart.graph.AirborneRadarDisplay.plot_ray", "pyart.graph.AirborneRadarDisplay.plot_rhi", "pyart.graph.AirborneRadarDisplay.plot_sweep_grid", "pyart.graph.AirborneRadarDisplay.plot_vpt", "pyart.graph.AirborneRadarDisplay.set_aspect_ratio", "pyart.graph.AirborneRadarDisplay.set_limits", "pyart.graph.GridMapDisplay", "pyart.graph.GridMapDisplay.cartopy_coastlines", "pyart.graph.GridMapDisplay.cartopy_political_boundaries", "pyart.graph.GridMapDisplay.cartopy_states", "pyart.graph.GridMapDisplay.generate_filename", "pyart.graph.GridMapDisplay.generate_grid_title", "pyart.graph.GridMapDisplay.generate_latitudinal_level_title", "pyart.graph.GridMapDisplay.generate_longitudinal_level_title", "pyart.graph.GridMapDisplay.plot_colorbar", "pyart.graph.GridMapDisplay.plot_cross_section", "pyart.graph.GridMapDisplay.plot_crosshairs", "pyart.graph.GridMapDisplay.plot_grid", "pyart.graph.GridMapDisplay.plot_latitude_slice", "pyart.graph.GridMapDisplay.plot_latitudinal_level", "pyart.graph.GridMapDisplay.plot_longitude_slice", "pyart.graph.GridMapDisplay.plot_longitudinal_level", "pyart.graph.GridMapDisplayBasemap", "pyart.graph.GridMapDisplayBasemap.generate_filename", "pyart.graph.GridMapDisplayBasemap.generate_grid_title", "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title", "pyart.graph.GridMapDisplayBasemap.get_basemap", "pyart.graph.GridMapDisplayBasemap.plot_basemap", "pyart.graph.GridMapDisplayBasemap.plot_colorbar", "pyart.graph.GridMapDisplayBasemap.plot_crosshairs", "pyart.graph.GridMapDisplayBasemap.plot_grid", "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level", "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice", "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level", "pyart.graph.RadarDisplay", "pyart.graph.RadarDisplay.generate_az_rhi_title", "pyart.graph.RadarDisplay.generate_filename", "pyart.graph.RadarDisplay.generate_ray_title", "pyart.graph.RadarDisplay.generate_title", "pyart.graph.RadarDisplay.generate_vpt_title", "pyart.graph.RadarDisplay.label_xaxis_r", "pyart.graph.RadarDisplay.label_xaxis_rays", "pyart.graph.RadarDisplay.label_xaxis_time", "pyart.graph.RadarDisplay.label_xaxis_x", "pyart.graph.RadarDisplay.label_yaxis_field", "pyart.graph.RadarDisplay.label_yaxis_y", "pyart.graph.RadarDisplay.label_yaxis_z", "pyart.graph.RadarDisplay.plot", "pyart.graph.RadarDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarDisplay.plot_colorbar", "pyart.graph.RadarDisplay.plot_cr_raster", "pyart.graph.RadarDisplay.plot_cross_hair", "pyart.graph.RadarDisplay.plot_grid_lines", "pyart.graph.RadarDisplay.plot_label", "pyart.graph.RadarDisplay.plot_labels", "pyart.graph.RadarDisplay.plot_ppi", "pyart.graph.RadarDisplay.plot_range_ring", "pyart.graph.RadarDisplay.plot_range_rings", "pyart.graph.RadarDisplay.plot_ray", "pyart.graph.RadarDisplay.plot_rhi", "pyart.graph.RadarDisplay.plot_vpt", "pyart.graph.RadarDisplay.set_aspect_ratio", "pyart.graph.RadarDisplay.set_limits", "pyart.graph.RadarMapDisplay", "pyart.graph.RadarMapDisplay.generate_az_rhi_title", "pyart.graph.RadarMapDisplay.generate_filename", "pyart.graph.RadarMapDisplay.generate_ray_title", "pyart.graph.RadarMapDisplay.generate_title", "pyart.graph.RadarMapDisplay.generate_vpt_title", "pyart.graph.RadarMapDisplay.label_xaxis_r", "pyart.graph.RadarMapDisplay.label_xaxis_rays", "pyart.graph.RadarMapDisplay.label_xaxis_time", "pyart.graph.RadarMapDisplay.label_xaxis_x", "pyart.graph.RadarMapDisplay.label_yaxis_field", "pyart.graph.RadarMapDisplay.label_yaxis_y", "pyart.graph.RadarMapDisplay.label_yaxis_z", "pyart.graph.RadarMapDisplay.plot", "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplay.plot_colorbar", "pyart.graph.RadarMapDisplay.plot_cr_raster", "pyart.graph.RadarMapDisplay.plot_cross_hair", "pyart.graph.RadarMapDisplay.plot_grid_lines", "pyart.graph.RadarMapDisplay.plot_label", "pyart.graph.RadarMapDisplay.plot_labels", "pyart.graph.RadarMapDisplay.plot_line_geo", "pyart.graph.RadarMapDisplay.plot_line_xy", "pyart.graph.RadarMapDisplay.plot_point", "pyart.graph.RadarMapDisplay.plot_ppi", "pyart.graph.RadarMapDisplay.plot_ppi_map", "pyart.graph.RadarMapDisplay.plot_range_ring", "pyart.graph.RadarMapDisplay.plot_range_rings", "pyart.graph.RadarMapDisplay.plot_ray", "pyart.graph.RadarMapDisplay.plot_rhi", "pyart.graph.RadarMapDisplay.plot_vpt", "pyart.graph.RadarMapDisplay.set_aspect_ratio", "pyart.graph.RadarMapDisplay.set_limits", "pyart.graph.RadarMapDisplayBasemap", "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title", "pyart.graph.RadarMapDisplayBasemap.generate_filename", "pyart.graph.RadarMapDisplayBasemap.generate_ray_title", "pyart.graph.RadarMapDisplayBasemap.generate_title", "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time", "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y", "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z", "pyart.graph.RadarMapDisplayBasemap.plot", "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_colorbar", "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster", "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair", "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines", "pyart.graph.RadarMapDisplayBasemap.plot_label", "pyart.graph.RadarMapDisplayBasemap.plot_labels", "pyart.graph.RadarMapDisplayBasemap.plot_line_geo", "pyart.graph.RadarMapDisplayBasemap.plot_line_xy", "pyart.graph.RadarMapDisplayBasemap.plot_point", "pyart.graph.RadarMapDisplayBasemap.plot_ppi", "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map", "pyart.graph.RadarMapDisplayBasemap.plot_range_ring", "pyart.graph.RadarMapDisplayBasemap.plot_range_rings", "pyart.graph.RadarMapDisplayBasemap.plot_ray", "pyart.graph.RadarMapDisplayBasemap.plot_rhi", "pyart.graph.RadarMapDisplayBasemap.plot_vpt", "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio", "pyart.graph.RadarMapDisplayBasemap.set_limits", "pyart.graph.plot_convstrat_scheme", "pyart.io", "pyart.io.prepare_for_read", "pyart.io.read", "pyart.io.read_arm_sonde", "pyart.io.read_arm_sonde_vap", "pyart.io.read_cfradial", "pyart.io.read_chl", "pyart.io.read_grid", "pyart.io.read_grid_mdv", "pyart.io.read_mdv", "pyart.io.read_nexrad_archive", "pyart.io.read_nexrad_cdm", "pyart.io.read_nexrad_level3", "pyart.io.read_rsl", "pyart.io.read_sigmet", "pyart.io.read_uf", "pyart.io.write_cfradial", "pyart.io.write_grid", "pyart.io.write_grid_geotiff", "pyart.io.write_grid_mdv", "pyart.io.write_uf", "pyart.lazydict", "pyart.lazydict.LazyLoadDict", "pyart.lazydict.LazyLoadDict.clear", "pyart.lazydict.LazyLoadDict.copy", "pyart.lazydict.LazyLoadDict.get", "pyart.lazydict.LazyLoadDict.has_key", "pyart.lazydict.LazyLoadDict.items", "pyart.lazydict.LazyLoadDict.keys", "pyart.lazydict.LazyLoadDict.pop", "pyart.lazydict.LazyLoadDict.popitem", "pyart.lazydict.LazyLoadDict.set_lazy", "pyart.lazydict.LazyLoadDict.setdefault", "pyart.lazydict.LazyLoadDict.update", "pyart.lazydict.LazyLoadDict.values", "pyart.lazydict.MutableMapping", "pyart.lazydict.MutableMapping.clear", "pyart.lazydict.MutableMapping.get", "pyart.lazydict.MutableMapping.items", "pyart.lazydict.MutableMapping.keys", "pyart.lazydict.MutableMapping.pop", "pyart.lazydict.MutableMapping.popitem", "pyart.lazydict.MutableMapping.setdefault", "pyart.lazydict.MutableMapping.update", "pyart.lazydict.MutableMapping.values", "pyart.map", "pyart.map.GateMapper", "pyart.map.GateMapper.distance_tolerance", "pyart.map.GateMapper.mapped_radar", "pyart.map.GateMapper.time_tolerance", "pyart.map.example_roi_func_constant", "pyart.map.example_roi_func_dist", "pyart.map.example_roi_func_dist_beam", "pyart.map.grid_from_radars", "pyart.map.grid_ppi_sweeps", "pyart.map.grid_rhi_sweeps", "pyart.map.map_gates_to_grid", "pyart.map.map_to_grid", "pyart.retrieve", "pyart.retrieve.ZtoR", "pyart.retrieve.calculate_snr_from_reflectivity", "pyart.retrieve.calculate_velocity_texture", "pyart.retrieve.composite_reflectivity", "pyart.retrieve.compute_cdr", "pyart.retrieve.compute_l", "pyart.retrieve.compute_noisedBZ", "pyart.retrieve.compute_snr", "pyart.retrieve.conv_strat_raut", "pyart.retrieve.conv_strat_yuter", "pyart.retrieve.create_cfad", "pyart.retrieve.dealias_spectra", "pyart.retrieve.est_rain_rate_a", "pyart.retrieve.est_rain_rate_hydro", "pyart.retrieve.est_rain_rate_kdp", "pyart.retrieve.est_rain_rate_z", "pyart.retrieve.est_rain_rate_za", "pyart.retrieve.est_rain_rate_zkdp", "pyart.retrieve.est_rain_rate_zpoly", "pyart.retrieve.feature_detection", "pyart.retrieve.fetch_radar_time_profile", "pyart.retrieve.get_freq_band", "pyart.retrieve.grid_displacement_pc", "pyart.retrieve.grid_shift", "pyart.retrieve.hydroclass_semisupervised", "pyart.retrieve.kdp_maesaka", "pyart.retrieve.kdp_schneebeli", "pyart.retrieve.kdp_vulpiani", "pyart.retrieve.map_profile_to_gates", "pyart.retrieve.quasi_vertical_profile", "pyart.retrieve.spectra_moments", "pyart.retrieve.steiner_conv_strat", "pyart.retrieve.texture_of_complex_phase", "pyart.retrieve.vad_browning", "pyart.retrieve.vad_michelson", "pyart.testing", "pyart.testing.Grid", "pyart.testing.Grid.add_field", "pyart.testing.Grid.get_point_longitude_latitude", "pyart.testing.Grid.get_projparams", "pyart.testing.Grid.init_point_altitude", "pyart.testing.Grid.init_point_longitude_latitude", "pyart.testing.Grid.init_point_x_y_z", "pyart.testing.Grid.projection_proj", "pyart.testing.Grid.to_xarray", "pyart.testing.Grid.write", "pyart.testing.InTemporaryDirectory", "pyart.testing.InTemporaryDirectory.cleanup", "pyart.testing.Radar", "pyart.testing.Radar.add_field", "pyart.testing.Radar.add_field_like", "pyart.testing.Radar.add_filter", "pyart.testing.Radar.check_field_exists", "pyart.testing.Radar.extract_sweeps", "pyart.testing.Radar.get_azimuth", "pyart.testing.Radar.get_elevation", "pyart.testing.Radar.get_end", "pyart.testing.Radar.get_field", "pyart.testing.Radar.get_gate_area", "pyart.testing.Radar.get_gate_lat_lon_alt", "pyart.testing.Radar.get_gate_x_y_z", "pyart.testing.Radar.get_nyquist_vel", "pyart.testing.Radar.get_slice", "pyart.testing.Radar.get_start", "pyart.testing.Radar.get_start_end", "pyart.testing.Radar.info", "pyart.testing.Radar.init_gate_altitude", "pyart.testing.Radar.init_gate_longitude_latitude", "pyart.testing.Radar.init_gate_x_y_z", "pyart.testing.Radar.init_rays_per_sweep", "pyart.testing.Radar.iter_azimuth", "pyart.testing.Radar.iter_elevation", "pyart.testing.Radar.iter_end", "pyart.testing.Radar.iter_field", "pyart.testing.Radar.iter_slice", "pyart.testing.Radar.iter_start", "pyart.testing.Radar.iter_start_end", "pyart.testing.RadarSpectra", "pyart.testing.RadarSpectra.altitude", "pyart.testing.RadarSpectra.azimuth", "pyart.testing.RadarSpectra.check_field_exists", "pyart.testing.RadarSpectra.elevation", "pyart.testing.RadarSpectra.fields", "pyart.testing.RadarSpectra.fixed_angle", "pyart.testing.RadarSpectra.gate_altitude", "pyart.testing.RadarSpectra.gate_latitude", "pyart.testing.RadarSpectra.gate_longitude", "pyart.testing.RadarSpectra.gate_x", "pyart.testing.RadarSpectra.gate_y", "pyart.testing.RadarSpectra.gate_z", "pyart.testing.RadarSpectra.get_end", "pyart.testing.RadarSpectra.get_slice", "pyart.testing.RadarSpectra.get_start", "pyart.testing.RadarSpectra.get_start_end", "pyart.testing.RadarSpectra.init_gate_altitude", "pyart.testing.RadarSpectra.init_gate_longitude_latitude", "pyart.testing.RadarSpectra.init_gate_x_y_z", "pyart.testing.RadarSpectra.init_rays_per_sweep", "pyart.testing.RadarSpectra.iter_azimuth", "pyart.testing.RadarSpectra.iter_elevation", "pyart.testing.RadarSpectra.iter_end", "pyart.testing.RadarSpectra.iter_field", "pyart.testing.RadarSpectra.iter_slice", "pyart.testing.RadarSpectra.iter_start", "pyart.testing.RadarSpectra.iter_start_end", "pyart.testing.RadarSpectra.latitude", "pyart.testing.RadarSpectra.longitude", "pyart.testing.RadarSpectra.ngates", "pyart.testing.RadarSpectra.npulses_max", "pyart.testing.RadarSpectra.nrays", "pyart.testing.RadarSpectra.nsweeps", "pyart.testing.RadarSpectra.projection", "pyart.testing.RadarSpectra.range", "pyart.testing.RadarSpectra.rays_per_sweep", "pyart.testing.RadarSpectra.scan_type", "pyart.testing.RadarSpectra.sweep_end_ray_index", "pyart.testing.RadarSpectra.sweep_mode", "pyart.testing.RadarSpectra.sweep_number", "pyart.testing.RadarSpectra.sweep_start_ray_index", "pyart.testing.RadarSpectra.time", "pyart.testing.RadarSpectra.to_vpt", "pyart.testing.RadarSpectra.velocity_bins", "pyart.testing.get_metadata", "pyart.testing.get_test_data", "pyart.testing.make_empty_grid", "pyart.testing.make_empty_ppi_radar", "pyart.testing.make_empty_rhi_radar", "pyart.testing.make_empty_spectra_radar", "pyart.testing.make_gaussian_storm_grid", "pyart.testing.make_normal_storm", "pyart.testing.make_single_ray_radar", "pyart.testing.make_storm_grid", "pyart.testing.make_target_grid", "pyart.testing.make_target_radar", "pyart.testing.make_target_rhi_radar", "pyart.testing.make_target_spectra_radar", "pyart.testing.make_velocity_aliased_radar", "pyart.testing.make_velocity_aliased_rhi_radar", "pyart.util", "pyart.util.angular_mean", "pyart.util.angular_mean_deg", "pyart.util.angular_std", "pyart.util.angular_std_deg", "pyart.util.angular_texture_2d", "pyart.util.column_vertical_profile", "pyart.util.cross_section_ppi", "pyart.util.cross_section_rhi", "pyart.util.datetime_from_dataset", "pyart.util.datetime_from_grid", "pyart.util.datetime_from_radar", "pyart.util.datetimes_from_dataset", "pyart.util.datetimes_from_radar", "pyart.util.determine_sweeps", "pyart.util.estimate_noise_hs74", "pyart.util.for_azimuth", "pyart.util.get_column_rays", "pyart.util.get_field_location", "pyart.util.image_mute_radar", "pyart.util.interval_mean", "pyart.util.interval_std", "pyart.util.is_vpt", "pyart.util.join_radar", "pyart.util.mean_of_two_angles", "pyart.util.mean_of_two_angles_deg", "pyart.util.rolling_window", "pyart.util.simulated_vel_from_profile", "pyart.util.sphere_distance", "pyart.util.subset_radar", "pyart.util.texture", "pyart.util.texture_along_ray", "pyart.util.to_vpt", "API Reference Manual", "Blog", "Blending Observations from TRACER using Py-ART", "Active Py-ART Development - Submitting a Pull Request (PR)", "Hail Storm Visualization Using Py-ART and Pandas!", "Working with Vertically Pointing Radar Data Using <code class=\"docutils literal notranslate\"><span class=\"pre\">PyART</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Xarray</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">hvPlot</span></code>", "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data", "New Docs", "Visualizing Severe Weather in Wisconsin", "Investigating ARM Scanning Cloud Radar Data from EPCAPE", "Blog Post Template", "Changelog", "Contributor\u2019s Guide", "Py-ART Continuous Integration Setup", "How to make a Py-ART release", "Developer\u2019s Guide", "Moment correction examples", "Correct reflectivity attenuation", "Dealias doppler velocities using the Region Based Algorithm", "Computation times", "Example Gallery", "Input/Output Examples", "Reading NEXRAD Data from the AWS Cloud", "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues", "Computation times", "Mapping examples", "Compare Two Radars Using Gatemapper", "Map a single PPI sweep to a Cartesian grid using 2D weighting", "Map a single radar to a Cartesian grid", "Map two radars to a Cartesian grid", "Computation times", "Plotting examples", "Choose a Colormap for your Plot", "Plot a Cross Section from a Grid", "Modify a Colorbar for your Plot", "Create an image-muted reflectivity plot", "Create a plot of multiple moments from a NEXRAD file", "Create a plot of NEXRAD reflectivity", "Create a PPI plot from a Cfradial file", "Create a PPI plot from a MDV file", "Create a PPI plot on a cartopy map", "Create a multiple panel RHI plot from a CF/Radial file", "Create a multiple panel RHI plot from a CF/Radial file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create an RHI plot with reflectivity contour lines from an MDV file", "Create a RHI plot from a MDV file", "Create a two panel RHI plot", "Create a 3 panel plot using GridMapDisplay", "Plot a cross section from  a PPI volume", "Computation times", "Retrieval Examples", "Creating a CFAD diagram", "Extract a radar column above a point", "Calculate and Plot Composite Reflectivity", "Convective-Stratiform classification", "Feature Detection classification", "Calculate and Plot hydrometeor classification", "Calculate and Plot VAD profile", "Computation times", "Computation times", "Xradar Examples", "Dealias Radial Velocities Using Xradar and Py-ART", "Grid Data Using Xradar and Py-ART", "Plot a PPI Using Xradar and Py-ART", "Computation times", "The Python ARM Radar Toolkit - Py-ART", "Notebook Gallery", "Creating a basic ingest of a NetCDF file", "Field manipulation and Saving the Radar Object to a file.", "Dealiasing Velocity", "&lt;no title&gt;", "Mapping Data to a Cartesian Grid", "Masking Data With Py-ART Gatefilters", "The Py-ART Radar object and indexing", "Computation times", "Building and installing Py-ART", "Contributor\u2019s Guide", "User Guide", "Setting up an Environment"], "terms": {"stream": [0, 62, 364, 483], "none": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 21, 24, 29, 31, 41, 45, 48, 56, 57, 74, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 198, 199, 200, 201, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 384, 392, 395, 396, 402, 405, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 464, 466, 469, 477, 478, 495, 563, 564, 575, 583, 585, 593, 595, 597, 598, 600, 601, 623, 632, 643, 644, 662, 665], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 212, 214, 215, 216, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 313, 314, 315, 317, 318, 325, 346, 347, 348, 350, 351, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 390, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 593, 594, 595, 597, 600, 601, 603, 606, 607, 609, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654, 656, 657, 658, 660, 661, 662, 665, 667], "print": [0, 62, 155, 166, 167, 233, 249, 373, 442, 443, 447, 483, 591, 593, 594, 598, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 643, 644, 657, 661, 662], "out": [0, 62, 163, 167, 198, 201, 375, 376, 377, 378, 379, 421, 438, 483, 593, 594, 595, 597, 598, 600, 601, 617, 618, 622, 633, 642, 645, 654, 660, 664, 665, 666], "version": [0, 12, 31, 202, 407, 454, 556, 591, 592, 599, 600, 601, 603, 654, 662, 664, 665, 667], "statu": [0, 592, 601, 665], "inform": [0, 24, 31, 45, 62, 74, 140, 152, 155, 160, 166, 167, 183, 195, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 365, 373, 376, 442, 443, 449, 454, 466, 483, 495, 591, 595, 598, 599, 600, 601, 604, 612, 633, 654, 665], "debug": [0, 155, 160, 166, 167, 233, 249, 373, 443, 600], "thi": [0, 2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 24, 29, 31, 33, 45, 47, 48, 51, 52, 54, 56, 57, 58, 74, 121, 123, 124, 131, 140, 141, 142, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 174, 183, 184, 185, 198, 199, 200, 201, 216, 242, 276, 292, 305, 317, 325, 338, 350, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 392, 394, 402, 405, 407, 413, 414, 415, 416, 420, 421, 426, 427, 428, 437, 438, 443, 444, 445, 449, 451, 454, 456, 466, 468, 469, 472, 473, 475, 477, 478, 479, 495, 548, 561, 562, 570, 571, 575, 578, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 611, 612, 615, 616, 617, 621, 622, 623, 624, 627, 633, 640, 641, 643, 644, 650, 654, 656, 657, 658, 660, 661, 662, 664, 665, 667], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 26, 29, 40, 45, 62, 74, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 419, 427, 437, 442, 443, 444, 445, 446, 449, 450, 453, 463, 466, 483, 495, 541, 583, 591, 592, 594, 595, 597, 598, 600, 603, 606, 608, 609, 611, 612, 613, 616, 617, 619, 620, 621, 624, 626, 629, 635, 636, 637, 638, 642, 643, 644, 645, 646, 647, 648, 651, 652, 653, 654, 655, 661, 662, 663, 664, 667], "can": [0, 12, 16, 29, 45, 54, 57, 74, 121, 123, 124, 127, 140, 152, 156, 157, 160, 163, 165, 170, 183, 195, 198, 199, 200, 201, 216, 276, 305, 338, 360, 367, 368, 370, 373, 377, 378, 379, 415, 416, 428, 437, 442, 443, 444, 445, 447, 452, 466, 475, 478, 495, 591, 592, 593, 594, 595, 597, 598, 600, 601, 603, 611, 612, 615, 621, 640, 641, 643, 644, 650, 656, 657, 658, 660, 661, 662, 664, 665, 667], "run": [0, 229, 427, 437, 453, 570, 592, 594, 600, 601, 602, 603, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654, 664, 665, 667], "script": [0, 29, 598, 600, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 23, 24, 25, 26, 29, 31, 34, 39, 42, 45, 47, 50, 54, 55, 56, 57, 74, 119, 120, 122, 125, 127, 131, 133, 140, 141, 147, 152, 155, 156, 157, 159, 160, 161, 162, 165, 166, 167, 169, 170, 174, 176, 183, 184, 190, 195, 198, 199, 200, 201, 203, 217, 218, 219, 224, 227, 228, 229, 230, 233, 241, 242, 244, 246, 248, 249, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 314, 316, 317, 320, 321, 322, 325, 339, 340, 341, 347, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 390, 392, 395, 402, 404, 407, 409, 410, 411, 415, 416, 419, 420, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 454, 457, 462, 466, 468, 471, 475, 476, 477, 478, 495, 548, 561, 562, 563, 564, 570, 571, 572, 573, 574, 575, 576, 577, 578, 583, 592, 594, 595, 597, 600, 601, 603, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 626, 629, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 656, 660, 661, 662, 663, 665, 667], "directori": [0, 29, 464, 589, 591, 592, 598, 599, 600, 601, 611, 664, 665], "report": [0, 1, 292, 325, 372, 452, 597, 600, 654], "dependeci": 0, "befor": [0, 31, 56, 160, 164, 167, 405, 427, 437, 451, 454, 477, 593, 594, 595, 601, 615, 643, 654, 658, 662, 665], "build": [0, 121, 123, 124, 127, 131, 133, 140, 147, 152, 170, 174, 176, 183, 190, 195, 379, 593, 597, 600, 601, 603, 654, 665, 666], "us": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 14, 17, 19, 24, 29, 31, 33, 45, 47, 54, 56, 57, 74, 121, 122, 123, 124, 125, 127, 140, 152, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 203, 205, 207, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 296, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 329, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 405, 412, 413, 414, 415, 416, 418, 419, 421, 423, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 466, 468, 475, 477, 478, 495, 548, 556, 561, 562, 563, 564, 570, 571, 578, 583, 585, 586, 587, 588, 592, 596, 597, 599, 600, 601, 602, 603, 605, 606, 608, 609, 610, 611, 612, 614, 619, 620, 621, 622, 624, 627, 628, 630, 631, 632, 633, 634, 638, 640, 641, 643, 644, 649, 653, 654, 656, 657, 658, 660, 661, 662, 663, 664, 665, 667], "python": [0, 29, 377, 442, 591, 593, 594, 595, 597, 598, 599, 600, 603, 606, 607, 609, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 656, 657, 658, 660, 661, 662, 664, 667], "py": [0, 1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 419, 420, 426, 427, 437, 440, 441, 442, 443, 444, 445, 446, 449, 450, 454, 466, 495, 546, 556, 562, 573, 574, 583, 589, 594, 595, 597, 599, 604, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 649, 653, 655, 656, 657, 658, 660, 663, 666, 667], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 74, 77, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 463, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 483, 495, 498, 540, 541, 542, 543, 544, 545, 546, 557, 558, 559, 560, 561, 562, 563, 564, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 587, 588, 591, 593, 594, 598, 600, 601, 636, 643, 644, 657, 658, 660, 662, 664, 665], "like": [0, 2, 7, 8, 12, 14, 24, 41, 42, 62, 121, 122, 124, 125, 161, 162, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 386, 387, 397, 398, 421, 483, 551, 552, 553, 554, 555, 557, 558, 559, 560, 571, 576, 593, 594, 595, 598, 599, 600, 601, 611, 612, 615, 640, 654, 656, 658, 660, 665], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 31, 32, 39, 40, 46, 47, 48, 50, 51, 52, 54, 62, 71, 99, 117, 127, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 198, 199, 200, 201, 203, 218, 233, 241, 244, 249, 256, 263, 278, 292, 307, 317, 325, 340, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 386, 387, 390, 393, 397, 398, 403, 405, 412, 415, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 447, 448, 450, 451, 452, 453, 454, 455, 462, 463, 467, 468, 469, 471, 472, 473, 475, 483, 492, 520, 538, 542, 543, 544, 545, 548, 562, 570, 571, 573, 574, 575, 578, 579, 582, 585, 587, 588, 591, 592, 594, 595, 597, 600, 601, 611, 615, 623, 624, 628, 629, 630, 631, 632, 633, 634, 635, 636, 641, 643, 644, 645, 654, 655, 656, 660, 661, 665], "sy": 0, "stdout": [0, 62, 483], "descript": [1, 16, 18, 30, 126, 168, 169, 202, 359, 380, 404, 417, 453, 556, 583, 595, 601, 603, 640, 654, 665], "addit": [1, 2, 7, 8, 12, 14, 19, 160, 161, 162, 164, 216, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 358, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 405, 412, 413, 414, 416, 427, 437, 575, 591, 593, 594, 600, 603, 609, 611, 639, 643, 644, 654], "class": [1, 18, 19, 30, 31, 41, 45, 74, 126, 127, 169, 170, 202, 203, 233, 244, 249, 263, 292, 317, 325, 380, 381, 394, 404, 405, 406, 408, 415, 442, 453, 454, 464, 466, 495, 589, 593, 594, 595, 600, 601, 654, 660, 661, 665], "function": [1, 4, 5, 6, 15, 16, 18, 29, 30, 56, 126, 164, 165, 169, 198, 199, 200, 201, 202, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 276, 277, 284, 288, 289, 292, 305, 306, 316, 321, 322, 325, 338, 339, 349, 354, 355, 358, 359, 361, 364, 367, 368, 374, 377, 404, 405, 409, 410, 411, 413, 414, 415, 416, 417, 421, 426, 427, 428, 437, 443, 445, 451, 453, 477, 556, 562, 574, 575, 578, 582, 583, 588, 589, 594, 595, 598, 600, 601, 621, 640, 641, 643, 644, 650, 654, 658, 660, 662, 664, 665], "read": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 127, 141, 142, 170, 184, 185, 217, 228, 277, 288, 306, 321, 339, 354, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 591, 597, 600, 606, 607, 609, 610, 613, 615, 616, 617, 618, 621, 622, 623, 624, 627, 629, 632, 633, 635, 636, 637, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654, 656, 657, 658, 660, 661, 662, 663], "write": [1, 15, 359, 375, 376, 377, 378, 379, 453, 464, 599, 600, 609, 610, 657], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 31, 32, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 67, 68, 70, 74, 95, 96, 98, 131, 140, 152, 158, 159, 160, 161, 162, 174, 183, 195, 203, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 258, 260, 262, 263, 277, 279, 284, 287, 288, 289, 292, 306, 308, 316, 317, 320, 321, 322, 325, 339, 341, 349, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 404, 405, 412, 413, 414, 416, 418, 421, 426, 428, 429, 432, 437, 438, 442, 443, 444, 445, 447, 448, 449, 452, 454, 455, 466, 467, 468, 471, 472, 473, 475, 476, 477, 478, 479, 488, 489, 491, 495, 516, 517, 519, 541, 546, 548, 570, 575, 585, 588, 600, 601, 606, 607, 609, 610, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 629, 630, 631, 632, 633, 635, 637, 639, 640, 641, 643, 644, 646, 649, 650, 652, 653, 654, 655, 656, 657, 658, 662, 663, 665], "number": [1, 6, 29, 31, 45, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 163, 164, 166, 167, 216, 220, 224, 225, 227, 228, 229, 230, 242, 276, 280, 284, 285, 287, 288, 289, 305, 309, 316, 317, 318, 320, 321, 322, 338, 342, 349, 350, 351, 353, 354, 355, 359, 364, 371, 377, 378, 412, 415, 416, 424, 428, 441, 443, 445, 454, 466, 472, 473, 475, 476, 477, 478, 479, 495, 542, 543, 544, 545, 546, 562, 570, 571, 588, 591, 594, 595, 597, 601, 603, 604, 621, 623, 640, 654, 662, 665], "format": [1, 12, 13, 39, 40, 45, 74, 205, 207, 217, 219, 224, 227, 228, 229, 230, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 359, 361, 370, 372, 374, 375, 376, 378, 462, 463, 466, 495, 591, 593, 594, 595, 598, 600, 601, 603, 633, 654, 656, 665], "These": [1, 29, 127, 160, 170, 255, 377, 416, 593, 598, 601, 611, 621, 643, 654, 661, 664, 665], "auxiliari": 1, "input": [1, 166, 167, 377, 413, 414, 437, 441, 442, 445, 570, 575, 591, 593, 600, 643, 644, 661], "output": [1, 13, 62, 159, 377, 413, 421, 426, 442, 483, 572, 592, 594, 597, 598, 600, 654], "routin": [1, 12, 169, 375, 415, 600, 654], "ar": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 29, 31, 45, 56, 58, 74, 122, 125, 140, 152, 155, 156, 157, 160, 161, 162, 164, 165, 167, 169, 183, 195, 198, 199, 200, 201, 202, 217, 223, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 277, 283, 284, 288, 289, 306, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 345, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 383, 411, 412, 415, 416, 418, 420, 421, 426, 427, 428, 430, 431, 432, 434, 435, 437, 443, 445, 449, 454, 466, 477, 479, 495, 543, 544, 545, 563, 564, 571, 572, 576, 577, 584, 588, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 603, 607, 609, 611, 612, 615, 616, 621, 623, 624, 632, 635, 640, 641, 643, 644, 654, 656, 657, 658, 660, 661, 662, 664, 665, 667], "well": [1, 163, 165, 198, 199, 200, 201, 350, 369, 371, 416, 591, 593, 598, 600, 601, 612, 622, 644, 654, 660, 661, 665], "polish": 1, "those": [1, 48, 55, 141, 142, 161, 162, 184, 185, 373, 415, 416, 469, 476, 589, 595, 597, 640, 667], "io": [1, 127, 170, 412, 591, 592, 593, 594, 595, 597, 598, 600, 601, 606, 607, 611, 612, 613, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654, 657, 658, 660, 661, 662, 663, 664, 665, 667], "thei": [1, 4, 58, 131, 133, 140, 160, 161, 162, 164, 174, 176, 183, 350, 365, 373, 379, 426, 443, 479, 595, 597, 601, 643, 665], "mai": [1, 29, 131, 133, 140, 147, 152, 160, 161, 174, 176, 183, 190, 195, 292, 325, 369, 371, 377, 381, 416, 426, 445, 556, 595, 597, 603, 643, 654], "requir": [1, 31, 45, 74, 121, 123, 124, 160, 163, 164, 373, 377, 413, 414, 416, 451, 454, 466, 495, 571, 591, 592, 600, 601, 612, 654, 665, 667], "depend": [1, 156, 157, 413, 416, 431, 591, 595, 600, 601, 603, 665], "beyond": [1, 664], "standard": [1, 40, 45, 62, 74, 119, 120, 160, 375, 376, 377, 421, 444, 463, 466, 483, 495, 546, 559, 560, 577, 591, 595, 600, 601, 656, 657, 658, 665], "art": [1, 2, 7, 8, 12, 14, 16, 17, 18, 29, 30, 31, 45, 74, 121, 123, 124, 127, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 365, 366, 367, 368, 372, 374, 377, 404, 419, 420, 426, 427, 437, 440, 441, 442, 443, 444, 445, 446, 449, 450, 454, 466, 495, 546, 556, 562, 573, 574, 583, 589, 595, 597, 604, 606, 607, 609, 610, 611, 612, 620, 621, 623, 641, 644, 649, 653, 655, 656, 657, 658, 660, 663, 666, 667], "instal": [1, 10, 121, 123, 124, 163, 164, 377, 594, 597, 600, 603, 666, 667], "non": [1, 121, 123, 124, 162, 373, 375, 426, 427, 437, 443, 445, 595, 600, 643], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 23, 24, 25, 26, 29, 31, 32, 45, 46, 47, 49, 54, 62, 74, 77, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 202, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 449, 450, 454, 455, 466, 467, 468, 470, 475, 483, 495, 498, 541, 556, 575, 583, 587, 591, 594, 595, 597, 598, 599, 600, 611, 644, 657, 662], "support": [1, 244, 317, 350, 361, 368, 369, 370, 371, 372, 380, 381, 405, 443, 593, 595, 597, 600, 601, 632, 654, 656, 657, 658, 660, 661, 662, 664, 665], "fulli": [1, 367, 597, 664], "test": [1, 12, 160, 364, 369, 371, 381, 592, 595, 600, 602, 603, 606, 607, 615, 617, 618, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 650, 651, 652, 654, 656], "all": [1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 31, 33, 45, 48, 56, 57, 74, 120, 127, 130, 137, 140, 144, 149, 152, 160, 161, 162, 164, 165, 166, 167, 170, 173, 180, 183, 187, 192, 195, 200, 217, 223, 224, 227, 228, 229, 230, 244, 277, 283, 284, 287, 288, 289, 306, 312, 316, 317, 320, 321, 322, 339, 345, 349, 350, 353, 354, 355, 358, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 382, 394, 395, 412, 413, 414, 415, 416, 420, 426, 427, 437, 438, 441, 443, 445, 454, 456, 466, 469, 477, 478, 495, 571, 589, 591, 592, 593, 594, 595, 596, 600, 601, 603, 609, 621, 640, 641, 642, 643, 646, 654, 662, 663, 665, 667], "pleas": [1, 56, 292, 325, 477, 591, 592, 595, 597, 598, 601, 654, 656, 657, 658, 660, 661, 662, 665], "your": [1, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 593, 594, 595, 599, 601, 603, 609, 620, 622, 638, 643, 644, 654, 663, 664, 665, 667], "own": [1, 12, 594, 598, 603, 621, 654, 664], "risk": [1, 593], "bug": [1, 594, 601, 604, 654, 664, 665], "should": [1, 4, 12, 21, 31, 45, 47, 54, 74, 127, 131, 141, 142, 159, 160, 161, 162, 167, 170, 174, 184, 185, 203, 243, 257, 317, 350, 358, 359, 360, 373, 376, 378, 379, 413, 414, 415, 416, 427, 437, 443, 444, 445, 447, 449, 451, 452, 454, 466, 468, 475, 495, 570, 571, 595, 599, 600, 601, 603, 621, 643, 654, 664, 665, 667], "fix": [1, 591, 594, 601, 602, 604, 609, 610, 613, 635, 656, 663, 664, 665, 667], "them": [1, 4, 5, 6, 56, 160, 161, 162, 163, 233, 249, 317, 350, 364, 373, 416, 477, 594, 598, 601, 603, 621, 654, 665, 667], "prioriti": [1, 667], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 40, 205, 237, 250, 265, 294, 317, 327, 350, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 463, 591, 592, 593, 595, 600, 601, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 665], "field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 32, 46, 47, 49, 54, 70, 77, 98, 158, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 455, 467, 468, 470, 475, 491, 498, 519, 585, 615, 660], "additional_metadata": [2, 4, 5, 6, 7, 8, 12, 14, 19, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374], "file_field_nam": [2, 4, 5, 6, 7, 8, 12, 14, 19, 21, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "fals": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 129, 131, 133, 139, 140, 141, 142, 143, 145, 147, 152, 153, 155, 160, 161, 162, 166, 167, 170, 172, 174, 176, 182, 183, 184, 185, 186, 188, 190, 195, 196, 205, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 277, 279, 284, 287, 288, 289, 294, 306, 308, 316, 317, 320, 321, 322, 327, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 415, 416, 420, 426, 427, 431, 434, 437, 443, 444, 445, 447, 455, 456, 463, 464, 467, 468, 469, 472, 473, 475, 477, 478, 479, 554, 555, 565, 566, 567, 568, 569, 570, 578, 588, 591, 593, 594, 595, 597, 600, 601, 623, 630, 632, 633, 635, 643, 644, 656, 657, 661, 662, 665], "exclude_field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379], "include_field": [2, 4, 5, 6, 7, 8, 12, 14, 19, 48, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 469, 600], "read_altitude_from_nc": 2, "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 160, 161, 162, 216, 217, 218, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 276, 277, 278, 284, 288, 289, 305, 306, 307, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 340, 346, 347, 348, 349, 350, 351, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 412, 413, 414, 415, 416, 443, 565, 566, 567, 568, 569, 594, 595, 598, 600], "d3r": [2, 600], "gcpex": 2, "netcdf": [2, 3, 5, 6, 7, 9, 11, 13, 40, 362, 363, 364, 366, 370, 375, 376, 438, 463, 565, 568, 591, 598, 600, 654, 655], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 25, 29, 31, 32, 40, 45, 46, 47, 49, 54, 74, 77, 121, 123, 124, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 449, 450, 454, 455, 463, 466, 467, 468, 470, 475, 495, 498, 541, 575, 583, 585, 587, 593, 595, 597, 598, 600], "odim_h5": [2, 8, 600], "dict": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 22, 25, 31, 32, 34, 39, 45, 46, 74, 121, 123, 124, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 203, 263, 292, 317, 325, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 381, 415, 416, 420, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 446, 448, 449, 450, 454, 455, 457, 462, 466, 467, 495, 583, 591, 595, 656], "option": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 17, 24, 31, 32, 33, 40, 41, 45, 46, 47, 48, 51, 52, 54, 56, 57, 62, 74, 120, 122, 123, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 170, 174, 176, 183, 190, 195, 217, 224, 228, 229, 230, 232, 242, 244, 246, 248, 255, 258, 260, 262, 277, 284, 288, 289, 291, 306, 314, 315, 316, 317, 318, 321, 322, 324, 339, 347, 348, 349, 350, 354, 355, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 416, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 454, 455, 456, 463, 466, 467, 468, 469, 472, 473, 475, 477, 478, 483, 495, 563, 564, 571, 578, 583, 587, 588, 594, 595, 600, 643, 662], "dictionari": [2, 4, 5, 6, 7, 8, 12, 14, 17, 19, 21, 22, 25, 28, 31, 32, 45, 46, 47, 49, 74, 77, 121, 123, 124, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 385, 412, 415, 416, 419, 420, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 446, 448, 449, 450, 454, 455, 466, 467, 468, 470, 495, 498, 540, 583, 612, 644, 657, 662], "map": [2, 4, 5, 6, 7, 8, 12, 14, 19, 25, 31, 45, 74, 122, 125, 222, 244, 255, 282, 292, 311, 313, 314, 315, 317, 318, 325, 344, 346, 347, 348, 350, 351, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 392, 402, 421, 446, 454, 466, 495, 591, 593, 594, 595, 597, 600, 601, 615, 619, 620, 622, 623, 638, 641, 643, 644, 651, 654, 655, 663, 665], "field": [2, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 31, 32, 39, 45, 46, 47, 48, 49, 54, 57, 70, 74, 77, 98, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 217, 218, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 276, 277, 278, 279, 284, 287, 288, 289, 292, 293, 294, 295, 296, 297, 302, 305, 306, 307, 308, 316, 317, 320, 321, 322, 325, 326, 327, 328, 329, 330, 335, 338, 339, 340, 341, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 462, 466, 467, 468, 469, 470, 475, 478, 491, 495, 498, 519, 542, 543, 544, 545, 546, 548, 551, 552, 553, 554, 555, 561, 562, 574, 575, 583, 585, 586, 587, 591, 593, 594, 595, 597, 598, 600, 601, 606, 609, 611, 615, 616, 617, 618, 621, 622, 624, 635, 639, 640, 641, 642, 643, 644, 645, 650, 652, 654, 655, 656, 658, 660, 661, 662, 665], "radar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 21, 24, 30, 31, 39, 74, 117, 119, 120, 126, 127, 140, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 183, 195, 198, 199, 200, 201, 202, 203, 216, 217, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 276, 277, 282, 284, 288, 289, 292, 305, 306, 311, 314, 316, 317, 321, 322, 325, 338, 339, 344, 347, 349, 350, 354, 355, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 404, 405, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 462, 495, 538, 543, 544, 545, 548, 551, 552, 553, 554, 555, 562, 563, 564, 567, 569, 570, 572, 573, 574, 575, 578, 579, 583, 584, 585, 586, 587, 588, 591, 592, 595, 597, 600, 605, 606, 607, 609, 610, 611, 612, 614, 616, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 642, 643, 644, 645, 646, 647, 650, 651, 652, 655, 656, 658, 660, 661, 663, 666], "If": [2, 7, 8, 12, 13, 14, 29, 31, 32, 45, 47, 48, 49, 56, 74, 77, 121, 123, 124, 140, 152, 158, 160, 163, 164, 165, 183, 195, 199, 200, 205, 207, 217, 218, 223, 224, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 283, 284, 288, 289, 294, 296, 306, 307, 312, 315, 316, 317, 321, 322, 327, 329, 339, 340, 345, 348, 349, 350, 354, 355, 358, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 388, 392, 399, 402, 416, 420, 426, 427, 428, 430, 431, 432, 434, 435, 437, 438, 442, 443, 444, 445, 446, 449, 454, 455, 466, 468, 469, 470, 477, 495, 498, 561, 563, 564, 571, 585, 592, 594, 595, 596, 597, 598, 601, 603, 643, 654, 656, 657, 658, 660, 661, 662, 664, 665, 667], "type": [2, 7, 8, 12, 14, 19, 25, 45, 74, 117, 161, 162, 203, 263, 292, 325, 361, 365, 367, 368, 369, 370, 372, 373, 374, 378, 379, 426, 431, 443, 466, 495, 538, 570, 592, 595, 598, 600, 601, 644, 654, 662, 665], "found": [2, 7, 8, 12, 14, 29, 163, 361, 365, 367, 368, 369, 370, 372, 373, 374, 388, 399, 412, 415, 416, 421, 438, 591, 593, 595, 597, 598, 600, 601, 603, 612, 654, 664, 665, 667], "doe": [2, 7, 8, 12, 14, 49, 77, 121, 123, 124, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 470, 498, 588, 593, 595, 600, 601, 603, 633, 656, 664, 665, 667], "appear": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 578, 595, 598], "ha": [2, 7, 8, 12, 14, 15, 45, 74, 159, 160, 205, 237, 249, 250, 265, 294, 325, 327, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 385, 392, 402, 404, 428, 431, 434, 435, 466, 495, 548, 571, 587, 592, 594, 595, 597, 598, 601, 603, 611, 621, 643, 654, 660, 662, 664, 665, 667], "valu": [2, 4, 5, 6, 7, 8, 12, 14, 24, 27, 29, 31, 45, 48, 74, 121, 122, 123, 124, 125, 127, 129, 131, 132, 133, 135, 138, 140, 143, 145, 146, 147, 150, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 178, 181, 183, 186, 188, 189, 190, 193, 195, 197, 198, 199, 200, 201, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 306, 307, 308, 310, 313, 314, 315, 316, 317, 319, 320, 321, 322, 339, 340, 341, 343, 346, 347, 348, 349, 350, 352, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 394, 399, 400, 415, 416, 418, 420, 421, 424, 426, 427, 428, 431, 434, 435, 437, 440, 442, 443, 444, 445, 449, 451, 454, 466, 469, 495, 543, 544, 545, 546, 561, 570, 571, 575, 576, 577, 591, 593, 594, 595, 598, 600, 601, 612, 615, 621, 624, 640, 641, 642, 643, 644, 650, 657, 658, 661, 665], "place": [2, 7, 8, 12, 14, 218, 222, 223, 241, 243, 256, 257, 278, 282, 283, 307, 311, 312, 340, 344, 345, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 588, 598, 600, 660, 664], "A": [2, 7, 8, 11, 12, 14, 17, 19, 31, 45, 47, 74, 122, 125, 127, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 198, 199, 200, 201, 203, 233, 242, 249, 263, 292, 315, 325, 348, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 380, 381, 394, 412, 413, 414, 415, 416, 420, 421, 426, 427, 428, 430, 437, 442, 443, 444, 445, 447, 449, 450, 451, 452, 454, 466, 468, 495, 546, 562, 575, 591, 595, 598, 600, 601, 624, 640, 643, 644, 648, 654, 665], "default": [2, 4, 7, 8, 12, 14, 17, 25, 29, 31, 45, 51, 52, 54, 56, 57, 62, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 224, 227, 228, 229, 230, 232, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 284, 287, 288, 289, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 316, 317, 320, 321, 322, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 349, 350, 353, 354, 355, 357, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 384, 396, 416, 418, 419, 421, 426, 427, 428, 431, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 454, 466, 472, 473, 475, 477, 478, 483, 495, 543, 544, 545, 570, 571, 583, 592, 593, 600, 601, 632, 633, 640, 643, 644, 654, 664, 665, 667], "defin": [2, 7, 8, 12, 14, 31, 45, 74, 121, 123, 124, 155, 156, 157, 160, 163, 165, 166, 167, 198, 199, 200, 201, 222, 223, 227, 282, 283, 287, 311, 312, 320, 344, 345, 353, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 379, 415, 416, 420, 442, 443, 449, 454, 466, 495, 561, 562, 591, 594, 595, 598, 599, 600, 622, 623, 640, 641, 643], "configur": [2, 7, 8, 12, 14, 17, 18, 23, 24, 26, 29, 155, 156, 157, 160, 161, 162, 165, 166, 167, 198, 199, 200, 201, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 419, 427, 437, 442, 443, 444, 445, 446, 449, 450, 583, 591, 592, 595, 597, 600, 611, 615, 642, 650], "retriev": [2, 7, 8, 12, 14, 20, 22, 31, 51, 52, 54, 55, 56, 57, 58, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 454, 472, 473, 475, 476, 477, 478, 479, 562, 600, 601, 640, 642, 643, 644, 645, 646, 647, 650, 658, 663, 665], "metadata": [2, 7, 8, 12, 14, 17, 19, 20, 22, 28, 29, 31, 32, 45, 46, 47, 74, 155, 156, 157, 160, 161, 162, 166, 167, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 419, 421, 426, 443, 444, 445, 446, 450, 454, 455, 466, 467, 468, 495, 540, 542, 548, 583, 598, 599, 600, 612, 630, 631, 635, 662], "dure": [2, 7, 8, 12, 14, 19, 140, 152, 159, 160, 161, 162, 183, 195, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 427, 436, 443, 449, 591, 644, 664, 667], "i": [2, 4, 5, 6, 7, 8, 12, 13, 14, 16, 24, 29, 31, 32, 33, 45, 47, 48, 55, 56, 57, 58, 62, 74, 119, 121, 122, 123, 124, 125, 129, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 172, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 199, 200, 205, 207, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 277, 278, 279, 282, 283, 284, 287, 288, 289, 292, 294, 296, 306, 307, 308, 311, 312, 316, 317, 320, 321, 322, 325, 327, 329, 339, 340, 341, 344, 345, 349, 350, 353, 354, 355, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 389, 392, 394, 399, 400, 402, 405, 412, 413, 414, 415, 416, 418, 420, 421, 426, 427, 428, 430, 431, 434, 435, 437, 438, 442, 443, 444, 445, 449, 451, 454, 455, 456, 466, 468, 469, 476, 477, 478, 479, 483, 495, 548, 561, 563, 564, 570, 571, 572, 575, 578, 584, 585, 587, 588, 589, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 606, 611, 612, 615, 616, 621, 622, 623, 624, 627, 632, 633, 640, 641, 643, 644, 656, 657, 658, 660, 661, 662, 664, 665, 667], "ani": [2, 6, 7, 8, 12, 14, 29, 46, 47, 131, 133, 140, 141, 142, 147, 152, 155, 156, 157, 160, 161, 162, 163, 165, 166, 167, 174, 176, 183, 184, 185, 190, 195, 199, 200, 292, 325, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 413, 414, 416, 421, 428, 442, 467, 468, 542, 588, 592, 596, 598, 604, 640, 656], "success": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 603], "unless": [2, 7, 8, 12, 14, 58, 121, 123, 124, 162, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 479, 595], "explicitli": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 413, 414], "includ": [2, 4, 5, 6, 7, 8, 12, 14, 15, 19, 21, 45, 50, 56, 57, 74, 127, 131, 133, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 169, 170, 174, 176, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 413, 414, 415, 416, 441, 451, 466, 471, 477, 478, 495, 562, 592, 594, 595, 597, 598, 599, 600, 601, 603, 611, 615, 635, 640, 654, 661, 664, 665], "introduct": [2, 7, 8, 12, 14, 361, 365, 367, 368, 369, 370, 371, 372, 373, 601, 665], "specif": [2, 7, 8, 12, 14, 140, 152, 155, 156, 157, 183, 195, 325, 350, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 416, 430, 431, 432, 434, 435, 438, 442, 443, 444, 445, 575, 593, 595, 598, 600, 601, 606, 621, 643, 644, 654, 665, 667], "specifi": [2, 4, 5, 6, 7, 8, 12, 13, 14, 31, 45, 48, 56, 57, 74, 121, 123, 124, 131, 133, 147, 160, 161, 162, 169, 174, 176, 190, 217, 219, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 255, 258, 259, 260, 261, 262, 277, 279, 284, 288, 289, 306, 308, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 346, 347, 348, 349, 350, 351, 354, 355, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 388, 399, 405, 415, 416, 443, 444, 445, 454, 466, 469, 477, 478, 495, 583, 587, 593, 594, 595, 600, 607, 611, 660, 661, 664], "bool": [2, 4, 5, 6, 7, 8, 12, 14, 19, 32, 33, 40, 46, 47, 48, 51, 52, 54, 56, 57, 58, 120, 123, 127, 131, 133, 140, 147, 152, 155, 160, 161, 162, 166, 167, 170, 174, 176, 183, 190, 195, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 412, 413, 416, 420, 426, 427, 431, 434, 435, 437, 443, 444, 445, 447, 449, 455, 456, 463, 467, 468, 469, 472, 473, 475, 477, 478, 479, 570, 578, 588, 595], "true": [2, 4, 5, 6, 7, 8, 12, 14, 19, 31, 32, 33, 40, 45, 46, 47, 48, 51, 52, 54, 56, 57, 58, 74, 120, 123, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 166, 167, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 205, 207, 217, 219, 224, 227, 228, 229, 230, 233, 242, 244, 246, 248, 249, 255, 258, 260, 262, 265, 267, 277, 279, 284, 287, 288, 289, 294, 296, 306, 308, 316, 317, 320, 321, 322, 327, 329, 339, 341, 349, 350, 353, 354, 355, 358, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 385, 412, 413, 415, 416, 420, 426, 427, 431, 434, 435, 437, 443, 444, 445, 449, 454, 455, 456, 463, 464, 466, 467, 468, 469, 472, 473, 475, 477, 478, 479, 495, 554, 555, 570, 578, 588, 591, 592, 593, 594, 595, 597, 600, 601, 616, 623, 630, 631, 632, 633, 640, 643, 644, 646, 650, 657, 658, 662, 665], "mdv": [2, 8, 12, 14, 367, 368, 378, 592, 600, 607, 609, 617, 620, 638, 654, 658, 660, 663], "case": [2, 4, 5, 6, 7, 8, 12, 14, 24, 121, 123, 124, 140, 152, 160, 162, 183, 195, 359, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 392, 402, 593, 594, 595, 597, 598, 600, 601, 611, 612, 615, 616, 633, 665], "ignor": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 162, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 413, 414, 420, 591, 592, 593, 594, 595, 597, 598, 600, 606, 615], "The": [2, 7, 8, 12, 14, 16, 29, 31, 45, 74, 119, 122, 125, 155, 156, 157, 158, 160, 161, 162, 163, 198, 201, 222, 242, 282, 311, 344, 350, 360, 361, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 405, 406, 407, 408, 412, 415, 416, 418, 420, 421, 424, 425, 426, 427, 437, 440, 442, 443, 444, 445, 449, 451, 454, 466, 495, 541, 556, 557, 558, 561, 570, 571, 576, 577, 583, 585, 587, 591, 592, 593, 594, 600, 603, 609, 612, 616, 624, 635, 640, 643, 644, 655, 658, 661, 664], "onli": [2, 7, 8, 12, 14, 15, 50, 56, 57, 141, 142, 155, 156, 157, 159, 160, 162, 166, 167, 184, 185, 217, 228, 244, 277, 288, 306, 317, 321, 339, 350, 354, 361, 365, 367, 368, 369, 370, 371, 372, 373, 413, 414, 416, 443, 451, 471, 477, 478, 563, 564, 578, 585, 591, 592, 593, 595, 597, 600, 601, 604, 615, 616, 623, 633, 643, 644, 657, 658, 660, 665], "have": [2, 4, 5, 6, 7, 8, 11, 12, 14, 33, 45, 48, 56, 74, 131, 133, 140, 147, 152, 155, 156, 157, 160, 174, 176, 183, 190, 195, 217, 228, 249, 277, 288, 306, 317, 321, 339, 354, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 427, 437, 440, 456, 466, 469, 477, 495, 546, 570, 591, 593, 594, 595, 596, 597, 598, 600, 601, 611, 612, 640, 641, 643, 644, 654, 660, 664, 665, 666, 667], "kei": [2, 4, 5, 6, 7, 8, 12, 14, 31, 32, 45, 46, 47, 74, 121, 123, 124, 160, 161, 162, 317, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 383, 385, 388, 389, 390, 392, 394, 399, 400, 402, 415, 416, 438, 454, 455, 466, 467, 468, 495, 548, 593, 595, 598, 640, 656, 657, 661], "list": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 203, 219, 223, 226, 249, 263, 279, 283, 286, 292, 308, 312, 319, 325, 341, 345, 352, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 407, 413, 414, 416, 428, 438, 441, 469, 562, 563, 564, 573, 594, 595, 597, 598, 599, 600, 601, 603, 611, 654, 665, 666], "exclud": [2, 4, 5, 6, 7, 8, 11, 12, 14, 19, 48, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 149, 152, 155, 156, 157, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 192, 195, 198, 199, 200, 201, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 426, 443, 444, 445, 447, 451, 452, 469, 607, 617, 661], "appli": [2, 4, 5, 6, 7, 8, 12, 14, 45, 48, 74, 158, 161, 162, 164, 165, 166, 167, 199, 200, 217, 218, 224, 227, 228, 229, 230, 241, 256, 277, 278, 284, 287, 288, 289, 306, 307, 316, 317, 320, 321, 322, 339, 340, 349, 350, 353, 354, 355, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 405, 412, 416, 421, 427, 431, 437, 466, 469, 495, 571, 593, 594, 595, 597, 600, 601, 611, 621, 632, 643, 644, 650, 658, 665], "after": [2, 4, 5, 6, 7, 8, 12, 14, 160, 161, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 443, 591, 593, 595, 600, 601, 603, 612, 643, 664, 665, 667], "set": [2, 4, 5, 6, 7, 8, 12, 14, 29, 31, 45, 56, 57, 58, 74, 121, 122, 123, 124, 125, 127, 131, 133, 140, 147, 152, 155, 156, 157, 160, 161, 162, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 231, 232, 242, 244, 277, 279, 284, 287, 288, 289, 290, 291, 306, 308, 316, 317, 320, 321, 322, 323, 324, 339, 341, 349, 350, 353, 354, 355, 356, 357, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 386, 387, 390, 391, 397, 398, 401, 416, 426, 430, 431, 432, 434, 435, 443, 444, 445, 454, 466, 477, 478, 479, 495, 543, 544, 545, 554, 555, 561, 570, 580, 581, 592, 593, 598, 600, 601, 612, 615, 616, 622, 629, 632, 633, 636, 637, 640, 643, 644, 650, 654, 658, 664, 665, 666], "you": [2, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 442, 591, 594, 595, 596, 597, 599, 601, 603, 611, 643, 644, 654, 656, 657, 658, 660, 661, 662, 664, 665, 667], "want": [2, 592, 594, 595, 597, 612, 640, 654, 661, 662, 667], "altitud": [2, 31, 45, 56, 74, 166, 167, 203, 413, 416, 421, 428, 449, 454, 466, 477, 495, 572, 584, 591, 594, 600, 633, 640, 646, 656, 660, 662], "provid": [2, 6, 45, 48, 74, 160, 202, 223, 283, 312, 317, 345, 363, 364, 365, 370, 373, 377, 378, 379, 381, 386, 387, 393, 394, 397, 398, 403, 405, 466, 469, 495, 575, 583, 589, 591, 594, 595, 597, 598, 599, 601, 612, 641, 643, 654, 661, 664, 665], "np": [2, 405, 424, 452, 582, 591, 593, 594, 595, 597, 598, 600, 601, 615, 617, 621, 624, 629, 632, 633, 635, 640, 641, 643, 644, 645, 646, 656, 657, 658, 660, 661, 662, 665], "arrai": [2, 31, 33, 39, 41, 42, 47, 51, 52, 54, 55, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 164, 170, 174, 176, 183, 184, 185, 190, 195, 203, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 284, 288, 289, 292, 306, 307, 308, 313, 314, 316, 317, 321, 322, 325, 339, 340, 341, 346, 347, 349, 350, 354, 355, 405, 415, 416, 424, 427, 428, 429, 437, 442, 444, 445, 446, 451, 452, 454, 456, 462, 468, 472, 473, 475, 476, 477, 478, 479, 557, 558, 559, 560, 561, 568, 569, 571, 576, 577, 580, 581, 582, 591, 595, 600, 601, 615, 629, 640, 643, 644, 646, 656, 657, 658, 660, 661, 662, 665], "295": [2, 600], "dtype": [2, 412, 416, 591, 594, 595, 600, 656, 658, 662], "float64": [2, 415, 416, 591, 594, 641, 662], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 117, 119, 120, 121, 122, 123, 124, 125, 128, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 198, 199, 200, 201, 204, 205, 206, 207, 208, 237, 238, 239, 240, 250, 251, 252, 253, 264, 265, 266, 267, 268, 293, 294, 295, 296, 297, 326, 327, 328, 329, 330, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 388, 389, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 464, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 488, 489, 490, 491, 492, 493, 494, 508, 509, 510, 511, 516, 517, 518, 519, 520, 521, 522, 538, 540, 541, 542, 543, 544, 545, 546, 548, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 583, 584, 585, 587, 591, 593, 594, 595, 598, 600, 601, 641, 643, 644, 657, 660, 662, 665], "contain": [2, 4, 6, 7, 8, 11, 12, 14, 17, 24, 29, 31, 32, 33, 45, 46, 50, 51, 52, 54, 55, 56, 57, 58, 74, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 232, 277, 284, 287, 288, 289, 291, 306, 316, 317, 320, 321, 322, 324, 339, 349, 350, 353, 354, 355, 357, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 394, 412, 413, 414, 415, 416, 418, 419, 420, 421, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 466, 467, 471, 472, 473, 475, 476, 477, 478, 479, 495, 561, 562, 563, 564, 570, 574, 583, 585, 588, 591, 592, 595, 600, 601, 612, 625, 626, 644, 654, 656, 657, 660, 662, 664, 665, 667], "edg": [3, 33, 57, 120, 123, 160, 161, 162, 163, 164, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 428, 441, 445, 456, 478, 546, 593, 594, 595, 632, 633, 643], "valid_range_from_fil": 4, "units_from_fil": 4, "pulse_width": [4, 379, 594, 600], "gamic": [4, 600], "hdf5": [4, 8, 600, 654], "unlik": [4, 5, 6, 364], "other": [4, 5, 6, 11, 12, 16, 31, 39, 41, 45, 74, 160, 161, 162, 163, 164, 165, 200, 217, 219, 224, 227, 228, 229, 230, 244, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 361, 364, 366, 369, 371, 373, 377, 405, 416, 427, 437, 447, 451, 454, 462, 466, 495, 543, 544, 545, 593, 594, 595, 598, 601, 640, 643, 644, 654, 656, 664, 665, 667], "still": [4, 5, 6, 160, 292, 325, 364, 379, 416, 578, 597, 598, 600, 601, 611, 665], "which": [4, 5, 6, 13, 17, 31, 33, 41, 42, 45, 50, 54, 67, 68, 70, 71, 74, 95, 96, 98, 99, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 165, 166, 167, 170, 174, 176, 183, 190, 195, 198, 199, 200, 201, 217, 218, 222, 223, 224, 227, 228, 229, 230, 233, 241, 244, 246, 248, 249, 255, 256, 258, 260, 262, 277, 278, 282, 283, 284, 287, 288, 289, 306, 307, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 360, 361, 363, 364, 369, 370, 373, 374, 376, 377, 378, 379, 381, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 438, 442, 443, 444, 445, 449, 450, 451, 454, 456, 466, 471, 475, 488, 489, 491, 492, 495, 516, 517, 519, 520, 561, 562, 563, 564, 571, 573, 574, 575, 576, 577, 583, 587, 591, 592, 593, 594, 595, 597, 598, 600, 601, 603, 607, 611, 612, 615, 621, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 640, 641, 644, 650, 651, 652, 654, 658, 660, 662, 664, 665], "renam": [4, 5, 6, 29, 364, 374, 600], "uniform": [4, 5, 6, 58, 161, 162, 364, 372, 420, 426, 479, 600, 621, 624, 654, 656], "forc": [4, 5, 6, 364, 374, 420, 595, 600], "extract": [4, 217, 277, 306, 339, 373, 426, 438, 562, 563, 564, 574, 597, 600, 609, 615, 637, 639, 640, 643, 644, 647, 654, 663], "valid": [4, 31, 45, 74, 154, 155, 160, 197, 218, 241, 256, 278, 307, 340, 369, 378, 379, 413, 414, 416, 442, 454, 466, 495, 562, 563, 564, 571, 598, 600, 601, 616, 665], "rang": [4, 12, 45, 55, 57, 74, 119, 120, 157, 203, 217, 219, 224, 225, 226, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 263, 277, 279, 284, 285, 286, 288, 289, 292, 306, 308, 316, 317, 318, 319, 321, 322, 325, 339, 341, 349, 350, 351, 352, 354, 355, 372, 413, 414, 416, 424, 426, 443, 445, 466, 476, 478, 495, 562, 570, 585, 591, 593, 594, 595, 600, 616, 621, 626, 629, 635, 646, 656, 662], "valid_min": [4, 160, 161, 162, 365, 600, 643, 644, 662], "valid_max": [4, 160, 161, 162, 365, 643, 644, 662], "when": [4, 19, 31, 45, 46, 47, 51, 52, 54, 56, 57, 74, 131, 133, 140, 141, 142, 147, 152, 160, 161, 162, 166, 167, 174, 176, 183, 184, 185, 190, 195, 217, 224, 228, 229, 230, 244, 249, 277, 284, 288, 289, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 369, 370, 372, 373, 375, 379, 381, 405, 416, 420, 431, 434, 435, 443, 444, 445, 451, 453, 454, 466, 467, 468, 472, 473, 475, 477, 478, 495, 571, 592, 593, 594, 597, 600, 601, 602, 603, 604, 621, 640, 643, 644, 654, 657, 658, 661, 664, 665, 667], "present": [4, 29, 31, 45, 74, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 392, 402, 416, 442, 454, 466, 495, 595, 656, 661], "unit": [4, 55, 121, 122, 123, 124, 125, 161, 162, 209, 212, 213, 214, 215, 222, 242, 269, 272, 273, 274, 275, 282, 298, 301, 302, 303, 304, 311, 331, 334, 335, 336, 337, 344, 365, 367, 418, 437, 440, 442, 453, 476, 548, 571, 591, 595, 597, 600, 601, 602, 630, 635, 643, 644, 654, 657, 662, 665], "avail": [4, 16, 45, 56, 57, 58, 74, 140, 152, 155, 156, 157, 164, 183, 195, 202, 242, 244, 246, 248, 258, 260, 262, 367, 377, 466, 477, 478, 479, 495, 591, 593, 594, 595, 600, 603, 609, 611, 621, 640, 654], "mandatori": 4, "processor": 4, "pulsewidth": 4, "enum": 4, "u": [4, 41, 42, 43, 122, 125, 442, 451, 452, 591, 593, 594, 595, 596, 597, 598, 600, 601, 612, 646, 656, 657, 658, 660, 661, 662, 665], "k": [5, 125, 221, 222, 223, 225, 226, 227, 281, 282, 283, 285, 286, 287, 310, 311, 312, 318, 319, 320, 343, 344, 345, 351, 352, 353, 384, 388, 389, 391, 392, 396, 399, 400, 401, 402, 426, 443, 451, 593, 597, 598, 601, 622, 629, 632, 633, 665], "band": [5, 9, 155, 157, 159, 377, 430, 432, 439, 442, 443, 444, 445, 449, 591, 598, 600, 644], "arm": [5, 6, 40, 362, 363, 375, 376, 416, 438, 463, 542, 548, 591, 593, 595, 597, 600, 603, 618, 633, 656, 657, 658, 660, 661, 662, 664, 667], "zenith": 5, "kazr": [5, 6, 600], "ingest": [5, 594, 600, 654, 655], "spectra": [6, 74, 117, 429, 448, 495, 538, 545, 553, 571, 600], "radar_spectra": 6, "delay_field_load": [6, 361, 364, 367, 368, 369, 372, 374], "delai": [6, 361, 364, 367, 368, 369, 372, 600], "load": [6, 29, 361, 364, 367, 368, 369, 372, 380, 381, 390, 600, 616, 662], "until": [6, 29, 161, 361, 364, 367, 368, 369, 372, 603], "particular": [6, 361, 364, 367, 368, 369, 372, 416, 594, 603, 640, 654], "access": [6, 19, 31, 45, 56, 57, 74, 141, 142, 184, 185, 361, 364, 367, 368, 369, 372, 381, 454, 466, 477, 478, 495, 541, 594, 598, 611, 612, 660, 662], "In": [6, 121, 123, 124, 162, 164, 359, 361, 364, 367, 368, 369, 371, 372, 392, 402, 405, 418, 421, 428, 443, 452, 561, 562, 591, 593, 594, 595, 597, 601, 606, 607, 612, 640, 643, 644, 654, 657, 658, 660, 661, 664, 665], "attribut": [6, 31, 34, 35, 36, 37, 45, 56, 57, 63, 64, 65, 66, 74, 91, 92, 93, 94, 140, 141, 142, 152, 160, 183, 184, 185, 195, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 364, 365, 367, 368, 369, 372, 375, 376, 379, 454, 457, 458, 459, 460, 466, 477, 478, 484, 485, 486, 487, 495, 512, 513, 514, 515, 591, 594, 595, 597, 598, 641, 656, 662], "radarspectra": [6, 448, 545], "lazyloaddict": [6, 31, 45, 74, 361, 364, 367, 368, 369, 372, 454, 466, 495], "speedup": [6, 244, 317, 350, 364, 595, 600], "where": [6, 15, 56, 57, 119, 122, 125, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 165, 167, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 217, 224, 227, 228, 229, 230, 243, 257, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 358, 364, 421, 427, 428, 437, 446, 452, 477, 478, 563, 564, 572, 575, 587, 591, 592, 595, 597, 600, 611, 612, 615, 621, 624, 640, 641, 643, 654, 657, 661, 667], "gate": [6, 45, 55, 56, 57, 74, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 284, 288, 289, 292, 306, 316, 317, 321, 322, 325, 339, 349, 350, 354, 355, 364, 369, 370, 371, 372, 405, 412, 415, 416, 443, 444, 445, 446, 447, 451, 452, 466, 476, 477, 478, 495, 543, 544, 545, 561, 562, 573, 574, 591, 595, 600, 607, 612, 615, 617, 618, 622, 656, 658, 660, 661, 662], "vari": [6, 364, 367, 426, 643, 644], "between": [6, 33, 45, 56, 57, 74, 120, 122, 123, 140, 152, 160, 161, 163, 164, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 242, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 358, 364, 369, 372, 378, 379, 405, 426, 427, 431, 437, 456, 466, 477, 478, 495, 556, 570, 584, 591, 593, 594, 595, 601, 603, 615, 622, 632, 640, 643, 658, 660, 665, 667], "rai": [6, 45, 53, 56, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 120, 140, 152, 155, 156, 157, 160, 161, 162, 164, 167, 183, 195, 199, 204, 206, 210, 211, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 264, 266, 270, 271, 277, 284, 287, 288, 289, 293, 295, 299, 300, 306, 316, 317, 320, 321, 322, 326, 328, 332, 333, 339, 349, 350, 353, 354, 355, 363, 364, 369, 372, 373, 405, 420, 424, 451, 466, 474, 477, 478, 479, 480, 481, 482, 495, 508, 509, 510, 511, 543, 544, 545, 548, 562, 567, 569, 573, 587, 588, 594, 595, 601, 617, 656, 662, 665], "ngates_vari": [6, 364], "recommend": [6, 29, 45, 74, 160, 162, 350, 364, 373, 416, 426, 427, 437, 443, 466, 495, 561, 601, 603, 621, 640, 654, 664, 665, 666, 667], "noxp": [7, 600], "iphex": [7, 600], "include_dataset": 8, "exclude_dataset": 8, "dataset": [8, 317, 350, 369, 371, 413, 414, 438, 562, 565, 568, 574, 591, 594, 595, 600, 611, 616, 640, 641, 644, 645, 646, 654, 656], "given": [8, 21, 24, 25, 26, 28, 31, 33, 45, 51, 52, 53, 54, 57, 58, 59, 60, 61, 74, 87, 88, 89, 90, 129, 131, 132, 133, 134, 136, 138, 139, 143, 145, 146, 147, 148, 150, 151, 153, 160, 165, 172, 174, 175, 176, 177, 179, 181, 182, 186, 188, 189, 190, 191, 193, 194, 196, 199, 200, 217, 222, 223, 242, 243, 245, 246, 247, 248, 257, 259, 260, 261, 262, 277, 282, 283, 306, 311, 312, 313, 314, 339, 344, 345, 346, 347, 388, 399, 405, 413, 414, 415, 416, 442, 446, 454, 456, 466, 472, 473, 474, 475, 478, 479, 480, 481, 482, 495, 508, 509, 510, 511, 540, 562, 570, 573, 574, 576, 577, 583, 591, 595, 598, 640, 641, 643, 654], "dataset1": 8, "dataset2": 8, "pattern": [9, 546, 632, 640], "project": [9, 16, 31, 34, 45, 74, 121, 122, 123, 124, 125, 222, 233, 244, 255, 282, 292, 311, 317, 344, 350, 367, 376, 377, 416, 454, 457, 466, 495, 591, 593, 595, 597, 598, 600, 611, 612, 615, 616, 622, 623, 629, 636, 641, 643, 644, 650, 654, 657, 658, 660, 661, 664], "x": [9, 31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 203, 212, 217, 219, 222, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 263, 272, 277, 279, 282, 284, 287, 288, 289, 291, 292, 301, 306, 308, 311, 314, 316, 320, 321, 322, 324, 325, 334, 339, 341, 344, 347, 349, 353, 354, 355, 357, 405, 409, 410, 411, 412, 413, 415, 416, 420, 427, 428, 430, 437, 439, 440, 441, 442, 443, 444, 445, 449, 454, 460, 462, 478, 486, 514, 542, 546, 561, 591, 594, 595, 599, 600, 604, 615, 622, 623, 632, 633, 640, 643, 644, 660, 661, 662], "radx_dir": 10, "first": [10, 45, 58, 74, 160, 162, 242, 362, 363, 372, 375, 405, 416, 427, 437, 443, 444, 445, 449, 466, 479, 495, 565, 567, 570, 580, 581, 591, 593, 594, 595, 597, 601, 603, 607, 611, 612, 626, 635, 640, 641, 643, 644, 650, 658, 660, 661, 662, 665], "convert": [10, 13, 39, 418, 427, 437, 462, 578, 588, 591, 593, 595, 600, 643, 644], "cf": [10, 13, 45, 74, 364, 375, 376, 438, 466, 495, 591, 592, 593, 594, 609, 620, 638, 654, 662, 663], "radial": [10, 13, 45, 74, 160, 161, 364, 375, 420, 443, 466, 495, 561, 583, 592, 594, 595, 597, 600, 605, 609, 611, 620, 638, 649, 653, 654, 658, 662, 663], "radxconvert": 10, "path": [10, 15, 156, 157, 162, 464, 541, 592, 593, 595, 597, 600, 601, 611, 612, 654, 664, 665], "radx": [10, 600], "grid": [11, 24, 45, 74, 202, 219, 221, 229, 233, 237, 243, 244, 245, 247, 249, 250, 255, 257, 258, 259, 261, 279, 281, 308, 310, 341, 343, 359, 366, 367, 376, 377, 378, 409, 410, 411, 412, 413, 414, 415, 416, 426, 427, 428, 437, 440, 441, 449, 466, 495, 542, 546, 547, 549, 550, 566, 585, 591, 595, 600, 609, 614, 619, 620, 623, 633, 636, 638, 640, 643, 644, 649, 653, 654, 655, 663], "produc": [11, 163, 366, 375, 377, 381, 447, 452, 595, 597, 601, 644, 654, 665], "radx2grid": 11, "within": [11, 29, 47, 48, 127, 160, 161, 162, 163, 167, 170, 202, 412, 415, 416, 420, 442, 468, 469, 556, 562, 563, 564, 572, 574, 576, 577, 589, 593, 595, 596, 597, 598, 600, 601, 611, 612, 623, 624, 654, 658, 660, 665, 667], "lrose": 11, "must": [11, 155, 156, 157, 160, 317, 363, 366, 367, 372, 378, 426, 440, 443, 444, 445, 583, 595, 601, 643, 654, 664, 665], "been": [11, 12, 131, 133, 140, 147, 152, 159, 160, 174, 176, 183, 190, 195, 249, 325, 364, 366, 369, 370, 371, 373, 571, 592, 597, 601, 611, 643, 654, 660, 664, 665], "write_grid": [11, 366], "ident": [11, 161, 162, 366, 415, 644], "layout": [11, 33, 366, 456, 600], "rainbow": 12, "rainbow5": [12, 600], "5": [12, 31, 155, 157, 160, 163, 164, 165, 166, 200, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 376, 426, 427, 431, 437, 442, 454, 546, 570, 578, 591, 592, 593, 594, 595, 597, 598, 599, 601, 606, 607, 612, 617, 621, 624, 626, 627, 628, 631, 632, 633, 634, 635, 636, 640, 641, 643, 644, 645, 646, 650, 656, 658, 661, 662, 665], "22": [12, 591, 593, 597, 600, 611, 621, 641, 643, 647, 663], "3": [12, 45, 74, 119, 120, 160, 161, 198, 199, 201, 229, 367, 371, 377, 412, 413, 414, 416, 420, 426, 427, 437, 466, 495, 542, 546, 562, 589, 591, 592, 593, 594, 597, 599, 601, 606, 607, 609, 612, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 653, 654, 656, 657, 658, 660, 661, 662, 663, 664, 665, 667], "34": [12, 437, 449, 591, 643, 644], "16": [12, 426, 430, 451, 591, 592, 593, 595, 598, 601, 606, 607, 615, 628, 634, 640, 642, 658, 662, 665], "35": [12, 162, 166, 167, 591, 593, 594, 621, 630, 632, 633, 640, 661, 663], "1": [12, 31, 45, 55, 74, 119, 122, 125, 140, 160, 162, 166, 167, 183, 263, 364, 369, 370, 371, 376, 415, 416, 418, 423, 426, 427, 428, 431, 437, 442, 443, 445, 454, 466, 476, 495, 546, 562, 570, 571, 582, 589, 591, 593, 594, 595, 597, 598, 601, 603, 604, 606, 611, 615, 616, 617, 618, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 635, 636, 637, 640, 641, 643, 645, 646, 651, 654, 656, 657, 658, 660, 662, 665], "sinc": [12, 421, 443, 591, 593, 594, 595, 616, 643, 644, 657, 660, 662], "evolv": [12, 591], "constantli": 12, "guaranti": 12, "work": [12, 122, 125, 244, 292, 317, 325, 350, 369, 371, 449, 592, 593, 595, 597, 598, 600, 601, 603, 604, 612, 640, 654, 656, 657, 658, 660, 661, 662, 664, 665, 667], "necessari": [12, 591], "user": [12, 29, 48, 156, 157, 163, 350, 377, 426, 469, 562, 587, 591, 594, 595, 597, 598, 600, 601, 654, 656, 657, 658, 660, 661, 662, 664, 665, 667], "adapt": [12, 119, 591, 667], "code": [12, 29, 160, 440, 442, 451, 591, 593, 597, 598, 600, 604, 606, 607, 609, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654, 664, 667], "accord": [12, 159, 373, 416, 423, 430, 431, 432, 434, 435], "its": [12, 443, 593, 594, 597, 600, 601, 603, 604, 654, 664, 665, 667], "rais": [12, 31, 32, 46, 47, 49, 58, 77, 361, 372, 388, 389, 399, 400, 454, 455, 467, 468, 470, 479, 498, 594, 595, 600], "an": [12, 24, 28, 29, 31, 39, 45, 47, 48, 51, 52, 58, 67, 68, 69, 70, 71, 72, 73, 74, 95, 96, 97, 98, 99, 100, 101, 135, 160, 161, 162, 163, 165, 166, 167, 178, 198, 199, 200, 201, 203, 222, 282, 311, 344, 350, 373, 376, 377, 393, 403, 405, 412, 413, 415, 416, 420, 428, 438, 454, 462, 466, 468, 469, 472, 473, 479, 488, 489, 490, 491, 492, 493, 494, 495, 516, 517, 518, 519, 520, 521, 522, 540, 542, 543, 544, 545, 552, 561, 564, 568, 569, 576, 577, 586, 588, 591, 592, 594, 595, 597, 598, 600, 601, 603, 604, 609, 612, 615, 616, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 643, 644, 650, 651, 652, 654, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666], "issu": [12, 29, 292, 325, 373, 376, 594, 598, 599, 600, 601, 609, 610, 613, 654, 663, 664, 665, 667], "upstream": [12, 592, 601, 603, 665], "reflect": [12, 47, 117, 127, 141, 142, 155, 156, 157, 158, 163, 165, 166, 167, 170, 184, 185, 199, 200, 219, 279, 308, 341, 358, 405, 416, 418, 419, 421, 424, 425, 426, 427, 428, 431, 433, 434, 435, 436, 437, 442, 443, 449, 468, 538, 551, 552, 554, 555, 575, 591, 592, 593, 597, 598, 600, 605, 607, 608, 609, 611, 612, 615, 616, 617, 618, 620, 621, 622, 623, 625, 628, 631, 634, 635, 637, 638, 639, 640, 641, 643, 644, 647, 650, 652, 654, 656, 657, 658, 660, 661, 662, 663], "dbz": [12, 155, 159, 166, 167, 418, 424, 425, 426, 427, 437, 449, 592, 594, 597, 611, 615, 623, 630, 631, 637, 640, 643, 644, 662], "dbuz": 12, "dbzv": 12, "dbuzv": 12, "veloc": [12, 24, 58, 117, 160, 161, 162, 420, 428, 429, 440, 451, 452, 479, 538, 561, 583, 595, 597, 600, 601, 605, 608, 609, 611, 621, 625, 633, 635, 649, 653, 654, 655, 661, 662, 663, 665], "v": [12, 41, 42, 44, 388, 389, 392, 399, 400, 402, 426, 451, 452, 593, 598, 601, 632, 633, 644, 646, 665], "vu": 12, "vv": 12, "vvu": 12, "spectrum": [12, 571, 662], "width": [12, 243, 257, 317, 350, 416, 593, 594, 595, 597, 600, 662], "w": [12, 62, 162, 426, 483, 591, 645], "wu": [12, 412, 660], "wv": 12, "wvu": 12, "differenti": [12, 17, 155, 156, 157, 166, 167, 199, 428, 432, 435, 442, 443, 444, 445, 447, 450, 600, 625, 640, 654], "zdr": [12, 156, 157, 159, 199, 422], "zdru": 12, "co": [12, 119, 122, 125, 427, 428, 437, 591, 593, 616, 640, 643, 644], "polar": [12, 367, 368, 445, 594, 616], "correl": [12, 165, 199, 200, 440, 442, 575, 597, 624, 625, 642, 643, 644], "coeffici": [12, 155, 156, 157, 166, 167, 418, 426, 442, 575, 591, 600, 624, 625, 642], "rhohv": [12, 159, 165, 199, 200, 422, 423, 600, 624, 662], "rhohvu": 12, "phase": [12, 17, 155, 156, 157, 162, 166, 167, 199, 432, 435, 440, 442, 443, 444, 445, 447, 450, 600, 625, 654, 658], "phidp": [12, 156, 157, 166, 167, 199, 443, 600, 654], "uphidp": 12, "uphidpu": 12, "kdp": [12, 166, 167, 432, 435, 443, 444, 445, 600, 645, 654], "ukdp": 12, "ukdpu": 12, "signal": [12, 159, 165, 200, 419, 571, 594, 598], "qualiti": [12, 159, 165, 200, 432, 444, 445, 591, 597, 598, 611], "sqi": [12, 600], "sqiu": 12, "sqiv": 12, "sqivu": 12, "temperatur": [12, 156, 157, 201, 442, 591, 645], "temp": [12, 600], "posit": [12, 45, 74, 122, 125, 156, 157, 160, 421, 443, 466, 495, 594, 600, 615, 621, 623, 662], "bin": [12, 45, 74, 119, 120, 157, 372, 428, 429, 466, 495, 570, 571, 591, 600, 615, 640, 658, 662], "respect": [12, 45, 74, 427, 437, 449, 466, 495, 595], "iso0": [12, 156, 198], "cfradial_outfil": 13, "head": [13, 45, 74, 203, 466, 495], "ridgelin": 13, "instrument": [13, 45, 74, 140, 152, 165, 183, 195, 199, 200, 379, 466, 495, 598, 600, 658, 662], "rxm": [13, 600], "25": [13, 413, 414, 426, 591, 593, 597, 600, 611, 615, 632, 633, 636, 641, 656, 661], "rli": 13, "here": [13, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 255, 591, 592, 593, 594, 595, 597, 598, 599, 603, 615, 640, 643, 644, 650, 654, 656, 661, 664, 667], "float": [13, 24, 58, 122, 125, 131, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 174, 198, 199, 200, 201, 203, 204, 217, 219, 220, 224, 225, 227, 228, 229, 230, 242, 243, 244, 245, 246, 247, 248, 255, 257, 258, 259, 260, 261, 262, 263, 264, 277, 279, 280, 284, 285, 287, 288, 289, 292, 293, 306, 308, 309, 315, 316, 317, 318, 320, 321, 322, 325, 326, 339, 341, 342, 348, 349, 350, 351, 353, 354, 355, 358, 377, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 441, 443, 444, 445, 446, 447, 449, 479, 542, 546, 557, 558, 559, 560, 561, 562, 563, 564, 570, 571, 572, 573, 574, 575, 576, 577, 578, 584, 585, 595, 598], "offset": [13, 155, 166, 167, 203, 263, 292, 315, 325, 348, 427, 437, 570, 578, 591, 594, 595, 644], "exist": [13, 28, 32, 46, 47, 49, 77, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 199, 200, 373, 443, 455, 464, 467, 468, 470, 498, 540, 588, 593, 594, 595, 600, 603, 606, 654, 656], "enter": [13, 592, 595, 601, 665], "degre": [13, 33, 41, 55, 56, 119, 120, 121, 122, 123, 124, 125, 166, 167, 201, 203, 217, 222, 223, 242, 243, 245, 247, 255, 257, 259, 261, 263, 277, 282, 283, 292, 306, 311, 312, 315, 317, 325, 339, 344, 345, 348, 350, 451, 456, 476, 477, 558, 560, 562, 563, 564, 572, 573, 574, 578, 581, 584, 593, 595, 598, 600, 601, 637, 641, 662, 665], "sinarame_h5": [14, 15, 600], "take": [15, 47, 161, 415, 416, 419, 443, 468, 593, 594, 595, 601, 611, 612, 615, 623, 643, 644, 665], "everi": [15, 444, 445, 601, 602, 654, 665], "one": [15, 25, 31, 39, 40, 45, 47, 74, 131, 133, 140, 147, 152, 164, 165, 174, 176, 183, 190, 195, 200, 375, 376, 378, 405, 412, 415, 416, 421, 443, 444, 445, 451, 454, 462, 463, 466, 468, 495, 563, 564, 570, 575, 579, 583, 592, 594, 595, 597, 599, 600, 601, 603, 609, 614, 615, 616, 621, 640, 654, 657, 662, 665, 667], "volum": [15, 45, 74, 160, 162, 163, 317, 350, 369, 370, 371, 379, 405, 413, 414, 438, 466, 495, 563, 564, 566, 585, 588, 591, 594, 595, 597, 598, 600, 609, 616, 620, 638, 663], "folder": [15, 591, 598, 601, 665], "cfradial": [15, 364, 592, 600, 609, 620, 621, 635, 637, 638, 652, 656, 663], "each": [15, 31, 39, 41, 45, 55, 74, 155, 156, 157, 161, 162, 163, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 373, 377, 379, 405, 412, 415, 416, 428, 442, 451, 454, 462, 466, 476, 495, 543, 544, 545, 591, 594, 595, 598, 600, 601, 611, 617, 632, 635, 640, 643, 644, 661, 662, 665], "act": [16, 431, 434, 435, 591, 600, 640, 643, 656], "commun": [16, 591, 598, 601, 654, 665, 667], "softwar": [16, 229, 370, 377, 595, 597, 601, 654, 656, 657, 658, 660, 661, 662, 664, 665], "namespac": [16, 600], "current": [16, 27, 33, 131, 133, 140, 147, 152, 160, 174, 176, 183, 190, 195, 205, 207, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 265, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 296, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 327, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 368, 406, 408, 443, 456, 570, 591, 592, 594, 595, 597, 598, 601, 665], "extens": [16, 205, 237, 250, 265, 294, 327, 377, 594, 603, 664], "wradlib": [16, 600, 654], "http": [16, 369, 370, 371, 418, 421, 427, 428, 432, 433, 437, 440, 562, 575, 591, 593, 595, 597, 598, 601, 612, 624, 633, 640, 643, 644, 654, 664, 665, 667], "org": [16, 418, 421, 427, 428, 432, 433, 437, 440, 562, 575, 598, 600, 601, 624, 640, 643, 644, 654, 665], "phidp_field": [17, 155, 156, 157, 166, 167, 443, 444, 445, 450, 606, 645], "phidp_texture_field": [17, 450], "calcul": [17, 31, 33, 45, 56, 57, 74, 119, 120, 123, 127, 141, 142, 155, 156, 157, 165, 166, 167, 170, 184, 185, 198, 199, 200, 201, 203, 263, 292, 325, 415, 416, 419, 420, 426, 427, 437, 440, 447, 448, 450, 451, 452, 454, 456, 466, 477, 478, 495, 561, 562, 570, 571, 572, 573, 574, 584, 591, 600, 601, 606, 609, 615, 616, 632, 633, 639, 643, 647, 650, 654, 658, 661, 663, 665], "textur": [17, 199, 420, 450, 561, 587, 600, 650, 654, 658], "real": [17, 160, 450, 609, 620, 643, 644, 667], "part": [17, 428, 430, 450, 570, 594, 595, 597, 600, 611, 640, 654, 656, 657, 658, 660, 661, 662], "complex": [17, 450], "shift": [17, 166, 167, 203, 263, 292, 325, 441, 444, 450, 570, 600, 658], "texture_field": [17, 450], "refer": [17, 31, 45, 47, 74, 119, 122, 125, 155, 156, 157, 159, 160, 161, 162, 166, 167, 369, 370, 371, 412, 418, 421, 424, 426, 427, 428, 430, 432, 433, 436, 437, 442, 443, 444, 445, 447, 449, 450, 451, 452, 454, 466, 468, 495, 562, 571, 575, 592, 597, 600, 601, 640, 654, 662, 665], "gourlei": [17, 159, 450], "j": [17, 122, 125, 162, 166, 167, 421, 426, 427, 437, 442, 444, 445, 447, 449, 450, 451, 452, 562, 592, 595, 598, 601, 606, 607, 617, 618, 625, 626, 628, 630, 634, 637, 643, 644, 654, 665], "p": [17, 20, 22, 28, 119, 122, 125, 412, 426, 430, 447, 450, 540, 562, 571, 594, 601, 654, 665], "tabari": [17, 450], "parent": [17, 450], "du": [17, 450], "chatelet": [17, 450], "fuzzi": [17, 450], "logic": [17, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 450], "algorithm": [17, 127, 160, 161, 162, 170, 412, 416, 426, 427, 437, 442, 443, 449, 450, 591, 600, 601, 605, 608, 609, 650, 654, 663, 665], "separ": [17, 413, 414, 426, 440, 449, 450, 571, 575, 611, 616, 624, 644, 667], "precipit": [17, 416, 418, 426, 432, 436, 442, 450, 575, 591, 593, 595, 600, 601, 615, 624, 643, 644, 654, 665], "nonprecipit": [17, 450], "echo": [17, 426, 427, 437, 442, 450, 600, 640, 643, 644, 661], "polarimetr": [17, 155, 156, 157, 159, 166, 167, 431, 432, 442, 447, 450, 562, 600, 606], "observ": [17, 119, 427, 437, 443, 450, 640, 643, 644], "journal": [17, 160, 162, 412, 430, 432, 450, 571, 601, 654, 665], "atmospher": [17, 45, 74, 119, 120, 160, 161, 416, 430, 446, 450, 466, 495, 591, 594, 595, 597, 598, 601, 611, 654, 656, 657, 658, 660, 661, 662, 665], "ocean": [17, 160, 166, 167, 427, 430, 436, 437, 447, 450, 562, 591, 595, 598, 611, 643, 644], "technologi": [17, 160, 430, 450], "24": [17, 450, 591, 593, 600, 612, 646], "8": [17, 62, 155, 160, 166, 199, 242, 244, 246, 248, 258, 260, 262, 426, 450, 483, 591, 593, 594, 595, 597, 603, 606, 612, 615, 622, 632, 636, 640, 641, 644, 650, 656, 657, 658, 660, 661, 662], "1439": [17, 450], "1451": [17, 450], "filetyp": [19, 25, 595], "need": [19, 45, 54, 56, 57, 74, 377, 427, 437, 466, 475, 477, 478, 495, 572, 584, 593, 594, 595, 598, 599, 600, 601, 603, 611, 615, 621, 643, 644, 654, 656, 657, 658, 660, 661, 662, 664, 665, 667], "being": [19, 21, 160, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 416, 421, 445, 576, 577, 593, 595, 597, 600, 633, 664], "keep": [19, 160, 373, 585, 595, 601, 615, 643, 644, 665, 667], "string": [19, 31, 45, 74, 219, 222, 223, 227, 230, 243, 257, 279, 282, 283, 287, 289, 308, 311, 312, 313, 314, 315, 318, 320, 322, 341, 344, 345, 346, 347, 348, 351, 353, 355, 415, 416, 438, 440, 444, 445, 447, 451, 452, 454, 466, 495, 593, 594, 595, 600, 601, 621, 665], "initi": [19, 35, 36, 37, 41, 63, 64, 65, 66, 91, 92, 93, 94, 127, 160, 161, 170, 203, 263, 292, 325, 381, 458, 459, 460, 484, 485, 486, 487, 512, 513, 514, 515, 595, 598, 600, 623], "indic": [21, 31, 45, 69, 72, 73, 74, 97, 100, 101, 131, 140, 141, 142, 152, 167, 174, 183, 184, 185, 195, 373, 443, 444, 445, 447, 451, 452, 454, 466, 490, 493, 494, 495, 518, 521, 522, 573, 591, 593, 595, 600, 611, 629], "dic": [22, 31, 45, 46, 74, 381, 454, 466, 467, 495], "colormap": [23, 202, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 594, 595, 600, 609, 620, 624, 638, 644, 645, 663], "select": [24, 50, 59, 88, 162, 471, 480, 509, 591, 594, 597, 600, 603], "0": [24, 33, 45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 122, 125, 127, 152, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 170, 195, 198, 199, 200, 201, 203, 216, 217, 224, 227, 228, 229, 230, 231, 244, 258, 263, 276, 277, 284, 287, 288, 289, 290, 292, 305, 306, 315, 316, 317, 320, 321, 322, 323, 325, 338, 339, 348, 349, 350, 353, 354, 355, 356, 373, 377, 405, 413, 414, 415, 416, 419, 421, 426, 427, 428, 431, 433, 434, 435, 437, 441, 442, 443, 444, 447, 449, 451, 452, 456, 466, 471, 472, 473, 475, 476, 477, 478, 479, 495, 546, 570, 578, 591, 592, 593, 594, 595, 597, 598, 601, 603, 604, 606, 607, 608, 611, 612, 613, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 657, 658, 660, 661, 662, 663, 664, 665], "limit": [24, 160, 161, 165, 166, 167, 198, 199, 200, 201, 219, 232, 255, 279, 291, 308, 324, 341, 357, 367, 378, 413, 414, 443, 585, 594, 595, 600, 616, 617, 618, 622, 640, 660], "sweep": [24, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 140, 152, 160, 161, 162, 164, 165, 183, 195, 199, 200, 205, 207, 216, 217, 219, 224, 228, 229, 230, 265, 267, 276, 277, 279, 284, 288, 289, 294, 296, 305, 306, 308, 316, 317, 321, 322, 327, 329, 338, 339, 341, 349, 350, 354, 355, 369, 370, 371, 373, 405, 413, 414, 420, 451, 466, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 488, 489, 490, 491, 492, 493, 494, 495, 508, 509, 510, 511, 516, 517, 518, 519, 520, 521, 522, 543, 544, 563, 564, 570, 591, 592, 594, 595, 597, 598, 600, 607, 609, 611, 614, 615, 619, 632, 633, 635, 640, 641, 643, 644, 646, 650, 658, 661, 662, 663], "get": [24, 234, 235, 236, 254, 381, 391, 401, 405, 591, 592, 594, 595, 597, 600, 612, 632, 633, 640, 643, 644, 656, 658, 661, 662, 664, 666, 667], "relat": [24, 157, 202, 378, 418, 427, 431, 434, 435, 436, 437, 444, 449, 562, 594, 600, 601, 643, 644, 654, 664, 665], "instac": 24, "nyquist": [24, 58, 160, 161, 162, 420, 479, 561, 600, 650, 658, 662], "int": [24, 31, 33, 45, 51, 52, 54, 55, 56, 57, 58, 74, 140, 152, 157, 160, 161, 163, 164, 166, 167, 183, 195, 199, 205, 206, 207, 216, 220, 224, 225, 227, 228, 229, 237, 238, 239, 240, 242, 244, 250, 251, 252, 253, 255, 258, 265, 266, 267, 276, 280, 284, 285, 287, 288, 294, 295, 296, 305, 309, 316, 317, 318, 320, 321, 327, 328, 329, 338, 342, 349, 350, 351, 353, 354, 377, 413, 414, 416, 420, 424, 427, 437, 443, 445, 451, 454, 456, 466, 472, 473, 475, 476, 477, 478, 479, 495, 543, 544, 545, 546, 561, 562, 571, 573, 587, 593, 595, 600, 601, 665], "consid": [24, 155, 163, 164, 358, 413, 414, 426, 427, 437, 563, 564, 570, 571, 578, 616, 643], "vmin": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 591, 592, 593, 594, 595, 597, 598, 600, 606, 607, 611, 612, 615, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 650, 651, 652, 657, 658, 660, 661], "vmax": [24, 217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 591, 592, 593, 594, 595, 597, 598, 600, 606, 607, 611, 612, 615, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 650, 651, 652, 657, 658, 660, 661], "2": [24, 119, 122, 162, 163, 164, 199, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 308, 311, 312, 316, 319, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 352, 353, 354, 355, 357, 369, 370, 371, 373, 389, 400, 405, 412, 413, 414, 416, 420, 426, 427, 428, 437, 443, 451, 542, 546, 561, 575, 591, 593, 594, 595, 597, 598, 601, 604, 608, 613, 615, 616, 621, 622, 623, 628, 629, 632, 633, 636, 640, 641, 643, 645, 646, 650, 654, 656, 657, 658, 660, 661, 662, 665], "tuplet": 24, "minimun": 24, "maximun": 24, "teoric": 24, "copi": [25, 29, 31, 47, 48, 50, 51, 52, 54, 381, 416, 454, 468, 469, 471, 472, 473, 475, 588, 594, 599, 600, 644, 657], "field_map": 25, "anoth": [25, 405, 575, 594, 595, 600, 615, 656, 661, 664, 667], "fill": [27, 155, 156, 157, 449, 595, 598, 600, 644, 656, 657], "empti": [28, 389, 400, 444, 445, 540, 542, 545, 592, 600, 656], "control": [29, 160, 373, 375, 376, 416, 443, 597, 598, 640, 660], "singl": [29, 161, 162, 163, 164, 222, 223, 225, 227, 282, 283, 285, 287, 311, 312, 318, 320, 344, 345, 351, 353, 377, 416, 548, 570, 588, 591, 594, 595, 597, 600, 601, 609, 611, 614, 615, 619, 641, 663, 665], "self": [29, 166, 167, 594, 595, 601, 657, 660, 665], "descrip": 29, "exampl": [29, 47, 127, 170, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 381, 405, 409, 410, 411, 415, 416, 451, 464, 468, 570, 591, 592, 593, 594, 595, 596, 598, 600, 601, 606, 607, 608, 611, 612, 613, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 656, 658, 661, 662, 663, 665, 667], "default_config": 29, "modifi": [29, 45, 74, 163, 466, 495, 592, 600, 601, 609, 620, 638, 663, 665], "environment": [29, 591, 592, 654, 664], "variabl": [29, 31, 39, 40, 41, 45, 55, 74, 203, 233, 249, 263, 292, 325, 375, 376, 405, 413, 431, 438, 442, 443, 446, 447, 454, 462, 463, 466, 476, 495, 571, 591, 593, 594, 600, 611, 615, 640, 641, 643, 644, 654, 656, 657, 662, 664], "pyart_config": 29, "point": [29, 31, 33, 47, 123, 155, 156, 157, 167, 220, 225, 242, 243, 257, 280, 285, 292, 309, 314, 315, 318, 342, 347, 348, 351, 367, 368, 371, 373, 377, 412, 415, 416, 427, 428, 437, 449, 454, 456, 468, 542, 571, 574, 578, 588, 591, 593, 595, 597, 600, 603, 609, 622, 629, 639, 640, 643, 647, 650, 654, 658, 660, 662, 663], "new": [29, 47, 48, 50, 131, 133, 140, 147, 152, 163, 174, 176, 183, 190, 195, 429, 441, 447, 451, 468, 469, 471, 575, 585, 597, 600, 601, 603, 604, 615, 641, 644, 645, 650, 654, 657, 658, 665, 667], "execut": [29, 600, 608, 613, 619, 638, 647, 648, 653, 663], "full": [29, 62, 163, 164, 373, 483, 597, 598, 600, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652], "permiss": 29, "secur": 29, "do": [29, 45, 74, 160, 165, 199, 200, 377, 378, 466, 495, 595, 597, 598, 600, 601, 612, 643, 644, 656, 657, 658, 660, 661, 664, 665, 667], "un": 29, "trust": 29, "method": [29, 31, 47, 54, 56, 57, 127, 131, 133, 140, 147, 152, 155, 157, 166, 167, 170, 174, 176, 183, 190, 195, 229, 242, 378, 379, 381, 392, 394, 402, 413, 414, 415, 426, 438, 443, 444, 445, 451, 454, 468, 475, 477, 478, 570, 571, 589, 594, 595, 600, 601, 603, 606, 627, 640, 650, 651, 652, 654, 661, 665], "chang": [29, 31, 45, 47, 51, 52, 54, 56, 74, 141, 142, 160, 184, 185, 372, 381, 454, 464, 466, 468, 472, 473, 475, 477, 495, 556, 591, 593, 595, 600, 601, 602, 603, 604, 640, 643, 644, 657, 660, 662, 664, 665], "home": [29, 597, 598, 601, 606, 612, 665, 667], "make": [29, 31, 454, 542, 546, 547, 549, 550, 593, 594, 595, 597, 598, 599, 600, 601, 602, 604, 615, 623, 632, 640, 643, 650, 654, 656, 657, 664, 665, 667], "adjust": [29, 122, 232, 291, 324, 357, 426, 595, 600, 621, 624, 632, 644], "login": [29, 598], "": [29, 31, 45, 58, 62, 74, 119, 120, 122, 125, 161, 162, 166, 167, 205, 207, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 265, 267, 277, 284, 288, 289, 294, 296, 306, 316, 321, 322, 327, 329, 339, 349, 354, 355, 386, 387, 393, 397, 398, 403, 405, 407, 412, 427, 428, 430, 431, 437, 439, 440, 443, 444, 445, 447, 449, 452, 454, 466, 479, 483, 495, 571, 575, 591, 592, 593, 594, 595, 597, 598, 600, 602, 603, 611, 612, 615, 621, 623, 624, 633, 640, 641, 643, 644, 646, 650, 654, 656, 657, 658, 660, 661, 662, 666], "also": [29, 45, 74, 131, 174, 202, 218, 241, 256, 278, 307, 340, 370, 371, 375, 377, 379, 391, 401, 405, 413, 427, 437, 466, 495, 591, 592, 593, 594, 595, 597, 598, 600, 601, 611, 615, 640, 643, 644, 654, 656, 660, 662, 664, 665, 666, 667], "shell": 29, "session": 29, "modif": [29, 47, 468, 600], "last": [29, 45, 74, 160, 217, 218, 224, 228, 229, 230, 241, 246, 248, 249, 256, 258, 260, 262, 277, 278, 284, 288, 289, 306, 307, 316, 317, 321, 322, 325, 339, 340, 349, 350, 354, 355, 466, 495, 570, 594, 595, 597, 599, 600, 617, 644, 662], "end": [29, 53, 61, 69, 73, 87, 90, 97, 101, 155, 156, 157, 161, 162, 167, 242, 474, 482, 490, 494, 508, 511, 518, 522, 591, 593, 594, 595, 597, 598, 600, 601, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654, 665], "interact": [30, 591, 594], "weather": [30, 119, 160, 412, 443, 593, 595, 600, 601, 611, 621, 654, 656, 657, 658, 660, 661, 662, 665], "time": [31, 39, 40, 45, 74, 160, 205, 207, 217, 219, 224, 228, 229, 230, 265, 267, 277, 279, 284, 288, 289, 294, 296, 306, 308, 316, 317, 321, 322, 327, 329, 339, 341, 349, 350, 354, 355, 362, 363, 373, 375, 376, 405, 408, 416, 426, 438, 440, 454, 462, 463, 466, 495, 565, 568, 591, 592, 593, 595, 597, 598, 600, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 656, 662, 667], "origin_latitud": [31, 454], "origin_longitud": [31, 454], "origin_altitud": [31, 454], "y": [31, 37, 39, 57, 65, 93, 119, 120, 121, 122, 123, 124, 125, 203, 205, 214, 217, 219, 222, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 263, 265, 274, 277, 279, 282, 284, 287, 288, 289, 291, 292, 294, 303, 306, 308, 311, 314, 316, 320, 321, 322, 324, 325, 327, 336, 339, 341, 344, 347, 349, 353, 354, 355, 357, 405, 409, 410, 411, 412, 413, 414, 415, 416, 427, 437, 440, 441, 449, 454, 460, 462, 478, 486, 514, 542, 591, 593, 594, 595, 598, 604, 615, 622, 623, 632, 633, 640, 641, 643, 644], "z": [31, 37, 39, 45, 57, 65, 74, 93, 119, 120, 155, 157, 166, 167, 215, 275, 304, 337, 367, 377, 378, 409, 410, 411, 412, 414, 415, 416, 418, 421, 426, 427, 431, 434, 435, 436, 437, 440, 454, 460, 462, 466, 478, 486, 495, 514, 542, 606, 616, 630, 632, 633, 643, 644, 657], "radar_latitud": [31, 454, 572, 584], "radar_longitud": [31, 454, 572, 584], "radar_altitud": [31, 454], "radar_tim": [31, 454], "radar_nam": [31, 454], "store": [31, 45, 74, 160, 161, 162, 381, 416, 421, 454, 466, 495, 591, 593, 595, 598, 600, 611, 641, 654, 657, 660, 662, 667], "rectilinear": [31, 454], "cartesian": [31, 33, 39, 45, 74, 119, 120, 121, 122, 123, 124, 125, 367, 404, 405, 412, 415, 416, 454, 456, 462, 466, 495, 609, 614, 619, 622, 654, 655, 663], "coordin": [31, 33, 39, 45, 56, 74, 119, 120, 121, 122, 123, 124, 125, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 376, 404, 405, 407, 412, 416, 428, 454, 456, 462, 466, 477, 495, 542, 561, 591, 593, 594, 595, 600, 605, 609, 612, 614, 615, 616, 617, 618, 641, 654, 660, 662], "section": [31, 45, 47, 74, 217, 242, 277, 306, 339, 414, 416, 454, 466, 468, 495, 563, 564, 591, 595, 596, 599, 600, 601, 609, 620, 638, 640, 643, 644, 654, 663, 665], "To": [31, 47, 165, 198, 199, 200, 201, 375, 376, 378, 454, 468, 588, 593, 598, 601, 603, 644, 654, 657, 660, 664, 665, 667], "creat": [31, 42, 45, 47, 50, 74, 160, 161, 162, 163, 165, 198, 199, 200, 201, 202, 203, 216, 230, 233, 249, 263, 276, 289, 292, 305, 317, 322, 325, 338, 350, 355, 370, 375, 376, 377, 378, 379, 415, 416, 447, 452, 454, 464, 466, 468, 471, 495, 582, 583, 585, 591, 595, 597, 600, 601, 606, 607, 609, 612, 615, 617, 618, 620, 621, 623, 637, 638, 639, 643, 644, 647, 652, 654, 655, 657, 660, 663, 665], "legaci": [31, 421, 454], "from_legacy_paramet": [31, 454], "ax": [31, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 356, 357, 409, 410, 411, 427, 437, 441, 449, 454, 591, 592, 593, 594, 595, 597, 598, 600, 606, 607, 611, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 636, 640, 641, 642, 643, 644, 645, 646, 650, 658], "moment": [31, 39, 45, 74, 117, 159, 160, 161, 162, 165, 199, 200, 369, 370, 371, 416, 448, 454, 462, 466, 495, 538, 571, 594, 600, 612, 620, 638, 654, 661, 663], "describ": [31, 45, 74, 165, 198, 199, 200, 201, 243, 257, 437, 454, 466, 495, 597, 643, 644], "geograph": [31, 45, 56, 74, 121, 122, 123, 124, 125, 292, 317, 325, 350, 376, 416, 454, 466, 477, 495, 595, 654], "origin": [31, 39, 160, 161, 162, 203, 263, 292, 325, 373, 375, 376, 381, 383, 412, 416, 437, 454, 462, 563, 564, 591, 592, 593, 595, 600, 601, 615, 616, 617, 618, 640, 642, 643, 644, 665], "distanc": [31, 39, 57, 119, 120, 217, 228, 277, 288, 306, 321, 339, 354, 405, 406, 409, 410, 411, 413, 414, 415, 416, 424, 440, 445, 454, 462, 478, 562, 563, 564, 572, 573, 574, 584, 591, 592, 593, 615, 625, 630, 631, 632], "axi": [31, 39, 45, 74, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 241, 242, 243, 244, 246, 248, 255, 256, 257, 258, 260, 262, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 307, 308, 309, 310, 311, 312, 316, 317, 319, 320, 321, 322, 324, 339, 340, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 357, 367, 377, 454, 462, 466, 495, 591, 594, 595, 598, 606, 622, 633, 640, 643, 646, 662], "dimension": [31, 39, 160, 162, 412, 428, 437, 449, 454, 462, 615, 640, 643, 644], "space": [31, 45, 74, 123, 219, 279, 308, 341, 378, 416, 426, 427, 437, 440, 454, 466, 495, 591, 594, 612, 643, 656], "along": [31, 161, 164, 242, 245, 246, 247, 248, 259, 260, 261, 262, 454, 562, 563, 564, 573, 574, 585, 587, 593, 594, 595, 600, 643, 650], "three": [31, 162, 165, 200, 377, 428, 437, 449, 454, 594, 603, 640, 643, 644], "repeat": [31, 454], "throughout": [31, 454, 640], "nz": [31, 454], "nx": [31, 454], "ny": [31, 454], "dimens": [31, 160, 367, 413, 414, 416, 420, 421, 427, 437, 438, 440, 443, 445, 449, 454, 561, 585, 591, 594, 595, 600, 616, 641, 643, 644, 656, 660, 662], "transform": [31, 45, 74, 121, 122, 123, 124, 125, 222, 229, 282, 292, 311, 325, 344, 350, 376, 416, 426, 454, 466, 495, 593, 595, 600, 621, 643, 644], "proj": [31, 45, 74, 121, 123, 124, 255, 325, 454, 466, 495, 600], "pyart_aeqd": [31, 45, 74, 121, 123, 124, 454, 466, 495], "nativ": [31, 45, 74, 121, 123, 124, 361, 416, 421, 454, 466, 495, 600], "azimuth": [31, 45, 51, 55, 57, 67, 74, 95, 119, 120, 121, 122, 123, 124, 125, 203, 204, 217, 219, 222, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 264, 277, 279, 282, 284, 288, 289, 292, 293, 306, 308, 311, 316, 317, 321, 322, 325, 326, 339, 341, 344, 349, 350, 354, 355, 373, 377, 414, 421, 445, 451, 452, 454, 466, 472, 476, 478, 488, 495, 516, 562, 563, 564, 570, 572, 573, 588, 594, 595, 600, 601, 635, 637, 641, 656, 662, 665], "equidist": [31, 45, 74, 121, 122, 123, 124, 125, 222, 282, 311, 344, 350, 377, 416, 454, 466, 495, 595], "pyproj": [31, 45, 74, 121, 123, 124, 454, 466, 495, 600, 664], "projparam": [31, 34, 45, 74, 121, 123, 124, 454, 457, 466, 495], "special": [31, 45, 74, 454, 466, 495, 595], "_include_lon_0_lat_0": [31, 45, 74, 454, 466, 495], "remov": [31, 45, 56, 57, 74, 155, 156, 157, 160, 165, 198, 199, 200, 201, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 382, 388, 389, 395, 399, 400, 427, 428, 437, 454, 466, 477, 478, 495, 593, 595, 598, 600, 601, 606, 617, 623, 632, 640, 643, 658, 661, 665], "interpret": [31, 45, 74, 161, 162, 376, 454, 466, 495, 576, 577, 595, 640], "longitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 247, 248, 255, 257, 259, 261, 262, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 416, 454, 456, 459, 462, 466, 477, 495, 562, 572, 573, 574, 584, 591, 593, 594, 595, 598, 609, 610, 613, 622, 629, 636, 641, 643, 644, 656, 657, 662, 663], "latitud": [31, 33, 36, 39, 41, 45, 56, 74, 121, 122, 123, 125, 203, 222, 223, 242, 243, 244, 245, 246, 247, 255, 257, 259, 260, 261, 263, 282, 283, 292, 311, 312, 313, 315, 317, 325, 344, 345, 346, 348, 350, 416, 454, 456, 459, 462, 466, 477, 495, 562, 572, 573, 574, 584, 591, 593, 594, 595, 598, 609, 610, 613, 622, 629, 636, 641, 643, 644, 656, 657, 662, 663], "ad": [31, 45, 47, 74, 164, 166, 167, 249, 315, 348, 413, 415, 426, 427, 437, 454, 466, 468, 495, 546, 592, 594, 597, 598, 600, 601, 632, 633, 656, 657, 664, 665], "lon_0": [31, 45, 74, 122, 125, 317, 350, 454, 466, 495, 629], "lat_0": [31, 45, 74, 122, 125, 317, 350, 454, 466, 495, 629], "get_projparam": [31, 454], "evalu": [31, 381, 383, 432, 454, 597, 600], "locat": [31, 33, 45, 55, 56, 57, 74, 203, 217, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 241, 242, 244, 246, 248, 255, 256, 258, 260, 262, 263, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 292, 306, 307, 308, 311, 312, 314, 316, 317, 318, 319, 321, 322, 325, 339, 340, 341, 344, 345, 347, 349, 350, 351, 352, 354, 355, 369, 370, 372, 378, 405, 412, 415, 416, 454, 456, 466, 476, 477, 478, 495, 542, 556, 562, 572, 573, 574, 591, 592, 593, 595, 597, 600, 601, 627, 629, 641, 650, 651, 652, 654, 660, 664, 665], "up": [31, 45, 74, 131, 133, 140, 147, 152, 156, 157, 174, 176, 183, 190, 195, 413, 414, 418, 421, 428, 431, 434, 435, 446, 454, 466, 495, 561, 592, 593, 597, 598, 599, 600, 603, 640, 643, 658, 662, 666], "start": [31, 45, 60, 61, 72, 73, 74, 89, 90, 100, 101, 242, 373, 379, 438, 454, 466, 481, 482, 493, 494, 495, 510, 511, 521, 522, 566, 591, 592, 593, 594, 595, 597, 598, 601, 611, 621, 622, 632, 633, 654, 656, 665, 666], "collect": [31, 140, 152, 183, 195, 363, 369, 370, 371, 373, 404, 415, 416, 454, 594, 595, 601, 611, 626, 641, 654, 665, 666, 667], "nradar": [31, 454], "whose": [31, 372, 411, 454, 591], "wa": [31, 56, 57, 140, 161, 162, 183, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 454, 477, 478, 575, 591, 593, 595, 597, 598, 600, 654, 667], "projection_proj": [31, 454], "instanc": [31, 42, 48, 160, 161, 162, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 378, 379, 421, 454, 469, 575, 579, 583, 593, 595, 600], "valueerror": [31, 32, 46, 47, 454, 455, 467, 468, 595], "point_z": [31, 376, 454, 640], "point_x": [31, 376, 454], "point_i": [31, 376, 454], "func": [31, 454, 594, 600], "init_point_x_y_z": [31, 454], "reset": [31, 36, 37, 45, 56, 64, 65, 66, 74, 92, 93, 94, 454, 459, 460, 466, 477, 485, 486, 487, 495, 513, 514, 515, 661], "point_latitud": [31, 376, 454], "point_longitud": [31, 376, 454], "perform": [31, 45, 56, 57, 58, 74, 131, 133, 140, 147, 152, 159, 160, 161, 162, 164, 174, 176, 183, 190, 195, 217, 222, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 282, 284, 287, 288, 289, 306, 311, 316, 317, 320, 321, 322, 325, 339, 344, 349, 350, 353, 354, 355, 369, 372, 377, 413, 414, 437, 443, 454, 466, 477, 478, 479, 495, 588, 594, 595, 605, 606, 607, 609, 617, 618, 622, 654], "invers": [31, 45, 74, 451, 454, 466, 495, 591], "rel": [31, 45, 74, 156, 198, 229, 315, 348, 416, 454, 466, 495, 591, 600, 601, 644, 662, 665], "init_point_longitude_latitud": [31, 454], "point_altitud": [31, 35, 376, 454, 458], "init_point_altitud": [31, 454], "init": [31, 233, 249, 381, 454, 572, 598, 600], "field_dict": [32, 455], "replace_exist": [32, 46, 47, 48, 455, 467, 468, 469, 597, 600, 601, 643, 644, 650, 657, 658, 665], "add": [32, 46, 47, 163, 167, 217, 219, 224, 227, 228, 229, 230, 242, 243, 244, 246, 248, 255, 257, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 442, 455, 467, 468, 592, 593, 594, 600, 601, 615, 621, 622, 623, 632, 633, 635, 641, 643, 644, 645, 650, 658, 664, 665, 667], "replac": [32, 46, 47, 48, 131, 133, 140, 147, 152, 161, 162, 174, 176, 183, 190, 195, 455, 467, 468, 469, 590, 598, 600], "overwrit": [32, 455, 570], "alreadi": [32, 46, 47, 455, 467, 468], "level": [33, 39, 41, 42, 45, 62, 74, 156, 157, 237, 238, 239, 240, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 369, 370, 371, 377, 378, 440, 449, 451, 456, 462, 466, 483, 495, 571, 591, 593, 594, 600, 601, 632, 633, 636, 640, 642, 651, 654, 660, 662, 665], "height": [33, 39, 41, 42, 156, 157, 198, 244, 258, 317, 350, 413, 414, 416, 419, 427, 428, 437, 438, 446, 449, 451, 452, 456, 462, 583, 591, 594, 595, 597, 600, 601, 621, 630, 640, 641, 646, 661, 665], "determin": [33, 45, 74, 160, 161, 162, 242, 244, 246, 248, 255, 258, 260, 262, 317, 350, 358, 361, 369, 370, 373, 378, 379, 420, 427, 430, 431, 432, 434, 435, 437, 449, 451, 456, 466, 495, 570, 571, 578, 583, 586, 594, 595, 600, 601, 643, 650, 665], "same": [33, 45, 47, 55, 56, 57, 74, 122, 125, 133, 147, 160, 176, 190, 229, 317, 350, 367, 373, 377, 378, 379, 416, 427, 428, 437, 440, 446, 456, 466, 468, 476, 477, 478, 495, 546, 570, 572, 584, 588, 591, 595, 598, 601, 611, 632, 633, 640, 643, 644, 656, 661, 665, 667], "interpol": [33, 57, 120, 123, 217, 224, 228, 229, 230, 242, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 363, 369, 415, 416, 438, 445, 446, 451, 456, 478, 583, 595, 600, 601, 612, 643, 644, 660, 665], "extrapol": [33, 120, 123, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 456, 595], "boundari": [33, 120, 123, 164, 235, 236, 255, 350, 445, 456, 546, 595, 645], "center": [33, 45, 57, 74, 119, 120, 122, 123, 125, 161, 217, 222, 224, 228, 229, 230, 243, 245, 246, 247, 248, 257, 258, 259, 260, 261, 262, 277, 282, 284, 288, 289, 292, 306, 311, 316, 317, 321, 322, 339, 344, 349, 350, 354, 355, 369, 371, 409, 410, 411, 456, 466, 478, 495, 542, 546, 561, 591, 593, 594, 595, 597, 621, 650, 658, 662], "2d": [33, 55, 56, 57, 120, 367, 377, 442, 445, 456, 476, 477, 478, 561, 591, 595, 609, 614, 615, 619, 640, 662, 663], "point_": [36, 37, 459, 460], "properti": [38, 43, 44, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 141, 142, 184, 185, 406, 408, 451, 461, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 591, 595, 601, 665], "xarrai": [39, 233, 242, 244, 413, 414, 462, 562, 574, 591, 600, 636, 641, 650, 654, 664], "netcdf4": [40, 370, 375, 376, 463, 591, 592, 600, 630, 654, 656, 664, 667], "arm_time_vari": [40, 375, 376, 463], "arm_alt_lat_lon_vari": [40, 376, 463], "save": [40, 205, 217, 219, 224, 228, 229, 230, 237, 250, 265, 277, 279, 284, 288, 289, 294, 306, 308, 316, 317, 321, 322, 327, 339, 341, 349, 350, 354, 355, 376, 378, 463, 595, 597, 654, 655], "netcdf4_class": [40, 375, 376, 463], "netcdf3_class": [40, 375, 376, 463], "netcdf3_64bit": [40, 375, 376, 463], "base_tim": [40, 375, 376, 463, 594, 641], "time_offset": [40, 375, 376, 463, 594, 641], "alt": [40, 56, 376, 463, 477, 594, 595, 598, 600], "lat": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 463, 477, 591, 594, 595, 598, 600, 622, 623, 636, 660], "lon": [40, 56, 121, 122, 123, 124, 125, 242, 243, 244, 245, 246, 247, 248, 257, 259, 260, 261, 262, 313, 315, 317, 346, 348, 376, 377, 463, 477, 591, 594, 595, 598, 600, 623, 636], "speed": [41, 42, 416, 451, 452, 561, 594, 595, 597, 600, 601, 646, 665], "direct": [41, 62, 373, 443, 451, 452, 483, 600, 601, 646, 665], "horizont": [41, 42, 43, 44, 45, 74, 155, 158, 159, 160, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 362, 363, 413, 414, 451, 466, 495, 583, 593, 594, 597, 600, 601, 623, 633, 651, 662, 665], "wind": [41, 42, 43, 44, 160, 161, 362, 363, 451, 452, 583, 593, 594, 595, 597, 600, 601, 646, 665], "profil": [41, 160, 362, 363, 438, 444, 445, 446, 447, 562, 583, 600, 601, 607, 609, 639, 640, 647, 663, 665], "1d": [41, 42, 120, 123, 442, 591, 600, 662], "meter": [41, 42, 43, 44, 56, 57, 58, 119, 120, 121, 122, 123, 124, 125, 203, 263, 292, 314, 317, 325, 347, 350, 405, 406, 408, 409, 410, 411, 412, 415, 416, 419, 427, 437, 440, 443, 446, 449, 451, 477, 478, 479, 542, 572, 584, 594, 595, 600, 601, 615, 646, 660, 662, 665], "abov": [41, 42, 45, 47, 74, 129, 143, 155, 156, 157, 160, 163, 164, 165, 166, 167, 172, 186, 198, 199, 200, 201, 222, 223, 282, 283, 311, 312, 344, 345, 358, 416, 419, 426, 427, 437, 451, 466, 468, 495, 562, 570, 571, 573, 574, 591, 592, 593, 594, 600, 601, 603, 609, 615, 631, 633, 639, 640, 646, 647, 650, 654, 656, 658, 663, 665, 667], "sea": [41, 42, 45, 74, 451, 466, 495, 594, 600, 601, 665], "were": [41, 42, 131, 133, 140, 174, 176, 183, 451, 593, 595, 597, 601, 665], "sampl": [41, 42, 451, 452, 453, 547, 549, 550, 571, 591, 593, 594, 598, 600, 601, 611, 612, 621, 642, 645, 646, 654, 665], "per": [41, 42, 43, 44, 58, 160, 416, 451, 479, 543, 544, 545, 601, 665], "second": [41, 42, 43, 44, 47, 58, 119, 160, 373, 381, 405, 445, 451, 468, 479, 570, 580, 581, 591, 594, 597, 601, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 661, 662, 665], "north": [41, 45, 74, 242, 244, 255, 317, 350, 466, 495, 562, 574, 591, 594, 595, 625, 662], "east": [41, 217, 228, 242, 277, 288, 306, 321, 339, 354, 562, 574, 591, 594, 595, 625], "u_wind": [41, 42, 451, 452, 601, 646, 665], "compon": [41, 42, 43, 44, 426, 594, 601, 616, 665], "v_wind": [41, 42, 451, 452, 601, 646, 665], "classmethod": 42, "_rang": [45, 74, 424, 466, 495], "scan_typ": [45, 74, 203, 216, 263, 276, 292, 305, 325, 338, 466, 495, 598, 662], "sweep_numb": [45, 74, 466, 495, 594, 600, 630, 656, 662], "sweep_mod": [45, 74, 466, 495, 594, 600, 656, 662], "fixed_angl": [45, 74, 203, 263, 292, 325, 466, 495, 594, 598, 600, 630, 631, 635, 656, 662], "sweep_start_ray_index": [45, 74, 466, 495, 594, 656, 662], "sweep_end_ray_index": [45, 74, 466, 495, 594, 656, 662], "elev": [45, 52, 57, 68, 74, 96, 119, 120, 203, 217, 219, 224, 228, 229, 230, 246, 248, 258, 260, 262, 263, 277, 279, 284, 288, 289, 292, 306, 308, 316, 317, 321, 322, 325, 339, 341, 349, 350, 354, 355, 373, 413, 445, 466, 473, 478, 489, 495, 517, 564, 570, 578, 591, 594, 595, 597, 600, 615, 616, 642, 656, 662], "altitude_agl": [45, 74, 466, 495, 594, 662], "target_scan_r": [45, 74, 466, 495, 600, 662], "rays_are_index": [45, 74, 466, 495], "ray_angle_r": [45, 74, 466, 495], "scan_rat": [45, 74, 379, 466, 495, 600, 662], "antenna_transit": [45, 56, 57, 74, 140, 152, 183, 195, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 466, 477, 478, 495, 595, 662], "instrument_paramet": [45, 74, 160, 379, 442, 466, 495, 594, 597, 658, 662], "radar_calibr": [45, 74, 466, 495, 662], "rotat": [45, 74, 203, 466, 495], "tilt": [45, 74, 203, 229, 317, 350, 447, 466, 495, 595, 600, 612, 629, 636], "roll": [45, 74, 203, 373, 466, 495, 582, 587], "drift": [45, 74, 203, 466, 495], "pitch": [45, 74, 203, 466, 495], "georefs_appli": [45, 74, 466, 495], "antenna": [45, 56, 57, 74, 119, 120, 140, 152, 183, 195, 198, 201, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 421, 466, 477, 478, 495, 595, 600, 605, 609, 614, 615, 616, 617, 618, 654, 660, 662], "structur": [45, 74, 379, 426, 437, 449, 466, 495, 598, 611, 643, 644, 661], "base": [45, 50, 51, 52, 54, 55, 56, 57, 58, 74, 127, 161, 162, 165, 170, 198, 199, 200, 201, 230, 289, 322, 355, 377, 411, 415, 416, 426, 427, 437, 443, 466, 471, 472, 473, 475, 476, 477, 478, 479, 495, 575, 593, 594, 595, 600, 601, 605, 608, 609, 611, 650, 654, 658, 661, 662, 663, 665], "global": [45, 74, 466, 495, 591, 616, 662, 664], "4": [45, 74, 119, 120, 364, 367, 412, 418, 426, 446, 466, 495, 591, 592, 593, 594, 599, 601, 611, 612, 616, 619, 621, 624, 630, 631, 632, 633, 635, 636, 640, 643, 644, 646, 650, 651, 654, 661, 665], "repres": [45, 74, 160, 413, 414, 442, 466, 495, 543, 544, 588, 600, 640, 644], "under": [45, 74, 160, 161, 162, 416, 466, 495, 600, 601, 643, 644, 654, 664, 665], "sub": [45, 74, 466, 495, 591, 600], "convent": [45, 74, 160, 466, 495, 591, 594, 595, 611, 654, 662], "meta_group": [45, 74, 466, 495, 662], "scan": [45, 74, 117, 160, 161, 162, 163, 203, 216, 217, 219, 230, 263, 276, 277, 279, 289, 292, 305, 306, 308, 322, 325, 338, 339, 341, 355, 369, 413, 421, 466, 495, 538, 543, 544, 570, 572, 578, 583, 588, 591, 592, 593, 594, 600, 612, 615, 626, 627, 637, 640], "ppi": [45, 74, 161, 162, 163, 164, 216, 220, 224, 276, 280, 284, 305, 309, 316, 317, 338, 342, 349, 350, 413, 414, 445, 466, 495, 543, 544, 548, 551, 554, 563, 564, 570, 591, 592, 595, 600, 609, 614, 619, 620, 623, 624, 636, 638, 649, 651, 653, 654, 662, 663], "rhi": [45, 74, 216, 217, 228, 276, 277, 288, 305, 306, 321, 338, 339, 354, 414, 445, 466, 495, 544, 552, 555, 563, 564, 570, 592, 600, 609, 620, 638, 640, 654, 662, 663], "sector": [45, 74, 466, 495, 591, 600, 662], "multipl": [45, 74, 426, 466, 495, 592, 593, 600, 601, 609, 614, 620, 632, 638, 661, 663, 665, 667], "mode": [45, 62, 74, 360, 466, 483, 495, 591, 594, 600, 601, 640, 662, 664, 665], "ground": [45, 74, 421, 466, 495, 594, 595, 598, 611], "target": [45, 74, 377, 466, 495, 547, 549, 550, 551, 552, 553, 554, 555, 562, 572, 573, 574, 584, 594, 662], "angl": [45, 51, 52, 74, 119, 120, 203, 217, 229, 263, 277, 292, 306, 325, 339, 445, 447, 466, 472, 473, 495, 557, 558, 559, 560, 562, 563, 564, 570, 572, 573, 580, 581, 588, 591, 594, 600, 616, 635, 637, 646, 656, 662], "thr": [45, 74, 466, 495], "index": [45, 60, 74, 89, 165, 200, 230, 244, 246, 248, 258, 260, 262, 289, 322, 355, 377, 405, 421, 447, 466, 481, 495, 510, 591, 593, 594, 595, 597, 600, 655], "rays_per_sweep": [45, 66, 74, 94, 466, 487, 495, 515, 543, 544], "upon": [45, 74, 165, 198, 199, 200, 201, 466, 495, 593, 597, 600], "prior": [45, 47, 74, 164, 166, 167, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 373, 466, 468, 495, 595, 603, 612, 654], "init_rays_per_sweep": [45, 74, 466, 495], "intend": [45, 74, 466, 495], "rate": [45, 74, 418, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 466, 495, 600, 643, 644], "whether": [45, 74, 131, 174, 412, 466, 495, 594, 595, 661], "regular": [45, 74, 378, 466, 495, 595, 598, 621, 640], "angular": [45, 74, 466, 495, 561, 580, 581], "resolut": [45, 74, 217, 219, 220, 224, 225, 228, 229, 230, 255, 277, 279, 280, 284, 285, 288, 289, 306, 308, 309, 316, 317, 318, 321, 322, 339, 341, 342, 349, 350, 351, 354, 355, 369, 416, 426, 427, 437, 443, 449, 466, 495, 546, 593, 594, 595, 598, 612, 626, 629, 650, 651, 658, 660, 661], "express": [45, 74, 466, 495], "360": [45, 74, 163, 164, 318, 351, 466, 495, 570, 600, 646, 656, 662], "represent": [45, 74, 466, 495], "forbidden": [45, 74, 466, 495], "plane": [45, 74, 377, 413, 414, 466, 495, 591, 662], "180": [45, 74, 122, 466, 495, 570, 591, 593, 594, 601, 644, 656, 665], "gate_z": [45, 57, 74, 466, 478, 495], "gate_x": [45, 57, 74, 466, 478, 495], "gate_i": [45, 57, 74, 466, 478, 495], "system": [45, 74, 121, 122, 123, 166, 167, 360, 369, 377, 407, 412, 466, 495, 600, 601, 664, 665], "assum": [45, 74, 119, 120, 160, 163, 440, 443, 445, 446, 466, 495, 570, 593, 597], "earth": [45, 74, 119, 120, 122, 125, 466, 495, 572, 584, 591, 595], "radiu": [45, 74, 119, 120, 122, 125, 409, 410, 411, 412, 415, 416, 427, 437, 449, 466, 495, 572, 584, 643, 660], "model": [45, 74, 119, 120, 161, 370, 376, 426, 466, 495, 594, 645], "init_gate_x_y_z": [45, 74, 466, 495], "gate_latitud": [45, 56, 64, 74, 92, 466, 477, 485, 495, 513, 591], "gate_longitud": [45, 56, 64, 74, 92, 466, 477, 485, 495, 513, 591, 656], "init_gate_longitude_latitud": [45, 74, 466, 495, 656], "gate_altitud": [45, 56, 63, 74, 91, 466, 477, 484, 495, 512, 591], "init_gate_altitud": [45, 74, 466, 495, 656], "actual": [45, 74, 373, 377, 412, 426, 466, 495, 667], "flag": [45, 74, 160, 263, 373, 444, 445, 447, 449, 466, 495, 578, 591, 598, 600, 667], "transit": [45, 56, 57, 74, 140, 152, 165, 183, 195, 199, 200, 217, 224, 228, 229, 230, 263, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 444, 466, 477, 478, 495, 595, 600], "ye": [45, 74, 160, 466, 495], "about": [45, 74, 466, 495, 591, 593, 598, 599, 600], "aircraft": [45, 74, 229, 373, 466, 495, 562], "longitudin": [45, 74, 229, 240, 248, 252, 253, 262, 466, 495], "vertic": [45, 74, 159, 160, 217, 218, 219, 224, 228, 229, 230, 238, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 377, 413, 414, 428, 440, 447, 466, 495, 562, 578, 588, 591, 593, 600, 633, 640, 645, 646, 651], "orthogon": [45, 74, 466, 495], "platform": [45, 74, 466, 495, 591, 603], "right": [45, 74, 466, 495, 593, 596, 597, 598, 600, 621, 622, 640, 654], "wing": [45, 74, 466, 495], "down": [45, 74, 466, 495, 589, 593], "track": [45, 74, 466, 495, 591, 595, 600], "compass": [45, 74, 466, 495], "clockwis": [45, 74, 466, 495], "nose": [45, 74, 466, 495, 600], "had": [45, 74, 378, 466, 495, 598, 600, 611, 667], "georefer": [45, 74, 466, 495], "lead": [45, 74, 466, 495, 595, 615], "centric": [45, 74, 466, 495], "avaiabl": [45, 74, 466, 495], "radar_paramet": [45, 74, 466, 495, 594], "subconvent": [45, 74, 466, 495], "calibr": [45, 74, 430, 466, 495, 594], "ngate": [45, 55, 74, 466, 476, 495, 543, 544, 545, 591, 600, 656, 662], "nrai": [45, 55, 74, 424, 466, 476, 495, 545, 573, 600, 656, 662], "nsweep": [45, 74, 466, 495, 543, 544, 616, 630, 631, 646, 662], "loos": [46, 47, 467, 468], "existing_field_nam": [47, 468], "note": [47, 119, 131, 133, 140, 147, 152, 160, 164, 174, 176, 183, 190, 195, 244, 317, 364, 367, 368, 378, 413, 414, 416, 426, 440, 442, 443, 451, 468, 570, 592, 595, 598, 600, 601, 611, 612, 616, 623, 643, 644, 664, 665], "made": [47, 375, 420, 468, 588, 592, 594, 595, 601, 602, 665], "done": [47, 160, 164, 449, 468, 601, 603, 656, 664, 665, 667], "both": [47, 160, 165, 200, 361, 440, 441, 468, 591, 595, 600, 601, 612, 615, 616, 618, 622, 637, 644, 654, 660, 661, 664, 665], "numpi": [47, 133, 147, 176, 190, 468, 591, 593, 594, 595, 597, 598, 600, 601, 603, 606, 615, 617, 621, 624, 629, 632, 633, 635, 640, 641, 643, 644, 645, 646, 654, 656, 657, 658, 660, 661, 662, 664, 665, 667], "see": [47, 120, 127, 160, 170, 216, 230, 242, 245, 247, 255, 259, 261, 276, 289, 305, 317, 322, 338, 350, 355, 367, 375, 376, 416, 426, 427, 437, 440, 449, 468, 591, 593, 595, 597, 598, 600, 601, 611, 612, 621, 640, 643, 644, 654, 656, 658, 660, 661, 665], "how": [47, 373, 375, 376, 468, 591, 592, 593, 594, 595, 597, 598, 600, 602, 611, 612, 621, 622, 623, 640, 654, 657, 660, 661, 667], "reflectivity_copi": [47, 468], "gatefilt": [48, 155, 156, 157, 160, 161, 162, 163, 164, 165, 167, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 405, 415, 416, 421, 443, 444, 445, 447, 451, 452, 469, 591, 593, 595, 597, 598, 600, 601, 607, 615, 617, 618, 622, 640, 642, 650, 655, 658, 665], "updat": [48, 469, 570, 592, 596, 597, 600, 601, 623, 643, 654, 665], "mask": [48, 131, 133, 136, 140, 147, 151, 152, 160, 161, 162, 163, 165, 174, 176, 179, 183, 190, 194, 195, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 369, 370, 371, 416, 421, 428, 446, 469, 546, 575, 595, 598, 600, 606, 615, 617, 640, 643, 644, 650, 655, 656, 657, 662], "filter": [48, 127, 131, 133, 140, 147, 152, 160, 161, 162, 163, 164, 165, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 405, 415, 416, 420, 443, 444, 445, 469, 591, 593, 595, 597, 598, 600, 607, 615, 617, 618, 622, 640, 642, 650, 658, 661], "equal": [48, 121, 123, 124, 132, 133, 138, 146, 147, 150, 161, 175, 176, 181, 189, 190, 193, 350, 367, 378, 426, 449, 451, 469, 570, 595, 624, 640, 643, 644, 645, 661], "condit": [48, 127, 131, 133, 140, 147, 152, 160, 170, 174, 176, 183, 190, 195, 378, 432, 469, 591, 607, 657, 661], "append": [48, 469, 597, 598, 600, 646], "filtered_": [48, 469], "prefix": [48, 464, 469], "check": [49, 58, 77, 161, 162, 163, 164, 372, 420, 426, 446, 470, 479, 498, 572, 584, 588, 593, 594, 597, 598, 600, 601, 603, 654, 664, 665, 666], "keyerror": [49, 77, 388, 389, 399, 400, 470, 498, 664], "array_lik": [50, 471, 577], "view": [51, 52, 54, 381, 386, 387, 393, 397, 398, 403, 472, 473, 475, 591, 598, 622, 658, 660, 662], "possibl": [51, 52, 54, 373, 472, 473, 475, 571, 595, 597, 598, 600, 604, 621, 640, 643, 644, 658, 660], "underli": [51, 52, 54, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 361, 472, 473, 475, 595, 654], "get_gate_x_y_z": [54, 475, 632, 633], "obtain": [54, 57, 475, 478, 598, 601, 646, 656, 665], "plot": [54, 57, 202, 203, 204, 205, 206, 207, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 447, 452, 475, 478, 591, 592, 600, 606, 607, 611, 612, 615, 616, 617, 618, 638, 639, 640, 641, 643, 644, 647, 649, 650, 653, 654, 656, 657, 658, 660, 661, 663], "correct": [54, 57, 170, 198, 199, 200, 201, 367, 438, 443, 475, 478, 548, 591, 593, 597, 600, 601, 604, 607, 608, 612, 623, 640, 645, 650, 654, 658, 663, 665], "spatial": [54, 57, 160, 475, 478, 591, 660], "context": [54, 57, 475, 478, 593, 641], "request": [54, 123, 369, 415, 416, 441, 475, 595, 600, 601, 602, 603, 654, 665], "area": [55, 217, 219, 224, 228, 229, 230, 231, 277, 279, 284, 288, 289, 290, 306, 308, 316, 317, 321, 322, 323, 339, 341, 349, 350, 354, 355, 356, 426, 445, 449, 476, 575, 591, 593, 595, 597], "squar": [55, 420, 440, 443, 451, 476], "assumpt": [55, 443, 476], "size": [55, 157, 160, 161, 163, 164, 199, 220, 280, 309, 342, 411, 413, 414, 415, 416, 420, 427, 428, 436, 437, 443, 445, 476, 546, 561, 587, 594, 623, 636, 641, 643, 644], "m": [55, 58, 162, 198, 201, 205, 265, 294, 327, 412, 416, 420, 424, 426, 430, 437, 440, 442, 443, 444, 447, 449, 476, 479, 561, 562, 575, 585, 591, 593, 594, 595, 597, 598, 600, 601, 603, 611, 624, 633, 640, 643, 644, 646, 650, 654, 664, 665], "reset_gate_coord": [56, 477], "filter_transit": [56, 57, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 477, 478, 595], "With": [56, 57, 477, 478, 654, 655, 656], "therefor": [56, 57, 443, 477, 478, 591, 658, 662], "more": [56, 57, 62, 161, 164, 377, 412, 415, 416, 421, 426, 427, 437, 449, 477, 478, 483, 563, 564, 591, 592, 593, 594, 595, 596, 598, 600, 601, 615, 621, 632, 633, 640, 654, 658, 662, 665], "effici": [56, 57, 415, 426, 477, 478, 654, 658], "than": [56, 57, 161, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 426, 427, 428, 437, 443, 477, 478, 570, 575, 593, 594, 595, 598, 640, 643, 667], "through": [56, 57, 242, 442, 477, 478, 594, 595, 597, 599, 601, 615, 621, 665], "No": [56, 57, 162, 217, 224, 228, 229, 230, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 377, 416, 477, 478, 595], "get_field": [57, 478, 632, 633], "check_uniform": [58, 479], "lookuperror": [58, 479], "except": [58, 377, 394, 479, 595, 600, 660], "skip": [58, 161, 162, 372, 420, 479, 593, 600, 601, 665], "nyquist_veloc": [58, 161, 162, 379, 479, 594, 597, 658, 662], "slice": [59, 71, 88, 99, 245, 246, 247, 248, 259, 260, 261, 262, 480, 492, 509, 520, 636, 660, 662], "_io": [62, 483], "textiowrapp": [62, 483], "encod": [62, 378, 483, 600], "utf": [62, 483], "compact": [62, 483], "c": [62, 119, 122, 125, 155, 157, 159, 160, 162, 255, 350, 426, 430, 432, 439, 442, 443, 444, 445, 447, 452, 483, 548, 591, 595, 597, 598, 600, 601, 615, 644, 654, 657, 660, 664, 665, 667], "f": [62, 255, 350, 392, 402, 483, 591, 592, 593, 594, 595, 597, 598, 612, 616, 621, 630, 631, 635, 640, 643, 644, 654, 667], "minim": [62, 443, 449, 483], "everyth": [62, 483, 595, 601, 612, 665], "screen": [62, 483], "gate_": [65, 93, 486, 514], "iter": [67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 392, 402, 443, 445, 488, 489, 490, 491, 492, 493, 494, 516, 517, 518, 519, 520, 521, 522, 597, 662], "over": [69, 72, 73, 97, 100, 101, 160, 161, 198, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 426, 427, 437, 490, 493, 494, 518, 521, 522, 571, 591, 595, 597, 600, 615, 643, 644, 646, 654, 657, 662], "npulses_max": [74, 495, 545], "velocity_bin": [74, 495], "simpl": [117, 405, 538, 600, 657, 658], "vpt": [117, 208, 216, 230, 268, 276, 289, 297, 305, 322, 330, 338, 355, 538, 578, 594, 600], "mean": [117, 119, 451, 538, 546, 557, 558, 571, 576, 580, 581, 591, 594, 600, 601, 604, 611, 612, 640, 661, 662, 665], "kilomet": [119, 413, 427, 437], "equat": [119, 443, 571, 591, 600], "28": [119, 591, 593, 595, 600, 643, 644, 646, 647, 663], "b": [119, 358, 418, 426, 427, 437, 444, 452, 591, 592, 593, 594, 598, 600, 601, 644, 654, 665], "doviak": 119, "zrnic": 119, "sqrt": [119, 122, 591, 632, 633, 646], "r": [119, 121, 122, 123, 124, 125, 160, 162, 166, 167, 209, 222, 223, 243, 257, 269, 282, 283, 298, 311, 312, 313, 314, 331, 344, 345, 346, 347, 418, 426, 427, 428, 431, 434, 435, 436, 437, 449, 451, 571, 575, 591, 601, 611, 624, 632, 633, 640, 643, 644, 665], "sin": [119, 122, 125, 591, 593], "theta_": 119, "arcsin": [119, 122, 593], "frac": 119, "theta_a": 119, "arc": [119, 572], "length": [119, 166, 167, 443, 593, 595, 600], "effect": [119, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 229, 415, 416, 593, 616, 632, 640], "taken": [119, 166, 167, 217, 277, 306, 339, 548, 563, 564, 571, 576, 577, 625], "6371": [119, 122, 125, 572, 584, 593], "km": [119, 122, 125, 203, 220, 225, 226, 232, 263, 280, 285, 286, 291, 292, 309, 318, 319, 324, 325, 342, 350, 351, 352, 357, 414, 424, 426, 427, 437, 443, 546, 572, 584, 592, 593, 594, 595, 598, 616, 625, 630, 631, 633, 640, 641, 651, 660], "doppler": [119, 160, 161, 162, 451, 571, 594, 601, 605, 608, 609, 625, 635, 640, 654, 662, 663, 665], "edit": [119, 599, 600, 601, 665], "1993": 119, "21": [119, 436, 591, 593, 597], "vector": [120, 123, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 424, 440, 591, 593, 595, 600], "util": [120, 157, 160, 161, 229, 430, 453, 594, 598, 600, 601, 612, 624, 637, 641, 643, 644, 654, 665], "antenna_to_cartesian": [120, 600], "detail": [120, 127, 160, 170, 242, 255, 317, 350, 375, 376, 412, 416, 427, 437, 591, 593, 595, 597, 602, 603, 640, 643, 644, 654, 662], "cartograph": [121, 122, 123, 124, 125, 325], "differ": [121, 123, 124, 160, 358, 405, 413, 414, 426, 427, 431, 437, 443, 592, 593, 594, 595, 598, 600, 601, 609, 611, 615, 640, 643, 644, 649, 660, 664, 665], "pass": [121, 123, 124, 160, 161, 162, 216, 217, 224, 228, 229, 230, 242, 244, 246, 248, 255, 258, 260, 262, 276, 277, 284, 288, 289, 305, 306, 313, 314, 315, 316, 317, 318, 321, 322, 338, 339, 346, 347, 348, 349, 350, 351, 354, 355, 360, 361, 369, 371, 412, 416, 443, 593, 595, 600, 603, 611, 612, 657, 660], "desir": [121, 123, 124, 131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 381, 427, 437, 451, 541, 585, 593, 594, 641, 661], "6370997": [122, 125], "rho": 122, "arctan2": [122, 646], "correspond": [122, 125, 141, 142, 184, 185, 216, 244, 258, 276, 305, 338, 362, 388, 399, 413, 416, 562, 571, 573, 593, 595, 601, 611, 624, 658, 662, 665], "typic": [122, 125, 127, 131, 133, 140, 147, 152, 161, 170, 174, 176, 183, 190, 195, 377, 412, 415, 616, 667], "snyder": [122, 125], "manual": [122, 125, 598, 600, 603], "geolog": [122, 125], "survei": [122, 125], "profession": [122, 125], "paper": [122, 125, 654], "1395": [122, 125, 600], "1987": [122, 125], "pp": [122, 125], "191": [122, 125], "202": [122, 125], "find": [123, 161, 164, 405, 412, 415, 416, 437, 438, 591, 595, 597, 598, 600, 612, 644, 654, 667], "arcco": 125, "exclude_bas": [127, 170], "boolean": [127, 133, 141, 142, 147, 170, 176, 184, 185, 190, 358, 427, 437, 447, 600, 661], "variou": [127, 163, 165, 170, 198, 199, 200, 201, 562, 574, 593, 600, 609, 639, 654], "exclude_below": [127, 170, 591, 593, 597, 598, 615, 642, 650, 661], "suggest": [127, 170, 592, 600], "begin": [127, 160, 161, 162, 166, 167, 170, 205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 367, 368, 371, 373, 600], "import": [127, 170, 447, 451, 452, 464, 592, 598, 600, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 656, 657, 658, 660, 661, 662, 664], "radar_fil": [127, 170, 607, 621, 623], "nc": [127, 170, 591, 592, 594, 598, 600, 606, 615, 616, 618, 621, 622, 623, 627, 629, 630, 631, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 656, 657, 661], "10": [127, 163, 166, 167, 170, 412, 416, 427, 428, 432, 433, 437, 442, 444, 445, 562, 575, 591, 593, 594, 595, 597, 598, 601, 607, 612, 615, 616, 617, 618, 619, 621, 624, 625, 627, 629, 632, 633, 636, 640, 643, 644, 646, 650, 653, 654, 656, 657, 658, 660, 661, 662, 663, 665], "normalized_coherent_pow": [127, 170, 591, 661], "75": [127, 170, 231, 290, 323, 356, 377, 427, 437, 442, 591, 597, 615, 632, 640, 643, 656, 660, 661], "exclude_mask": [129, 131, 132, 133, 134, 135, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 617], "op": [129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 594], "inclus": [129, 131, 134, 139, 143, 145, 148, 153, 172, 174, 177, 182, 186, 188, 191, 196, 412, 416, 542, 600, 621], "below": [131, 145, 160, 163, 165, 166, 167, 174, 188, 198, 199, 200, 201, 217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 415, 416, 426, 427, 431, 434, 435, 437, 443, 570, 571, 591, 592, 593, 594, 595, 621, 640, 643, 656, 658, 661, 666], "compar": [131, 160, 174, 421, 561, 601, 609, 614, 619, 621, 640, 643, 644, 663, 665], "against": [131, 160, 174, 602, 603, 632], "mark": [131, 140, 141, 142, 152, 160, 174, 183, 184, 185, 195, 592], "exclus": [131, 174, 616], "oper": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 373, 412, 416, 432, 436, 437, 445, 449, 591, 594, 595, 601, 643, 644, 664, 665], "merg": [131, 133, 140, 147, 152, 161, 174, 176, 183, 190, 195, 363, 570, 601, 603, 665], "AND": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195], "OR": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 591], "gener": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 204, 205, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 237, 238, 239, 240, 242, 244, 246, 248, 250, 251, 252, 253, 258, 260, 262, 264, 265, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 294, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 327, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 376, 379, 394, 405, 415, 416, 438, 443, 593, 595, 596, 598, 600, 603, 606, 607, 609, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654], "meet": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 375, 654], "result": [131, 133, 140, 147, 152, 160, 161, 162, 174, 176, 183, 190, 195, 217, 224, 227, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 360, 376, 381, 413, 414, 416, 421, 447, 452, 582, 593, 594, 595, 601, 612, 616, 640, 644, 645, 654, 660, 665], "previous": [131, 133, 140, 147, 152, 174, 176, 183, 190, 195, 611, 640, 643], "becaus": [131, 133, 140, 174, 176, 183, 443, 643, 667], "invalid": [131, 133, 135, 140, 165, 174, 176, 178, 183, 198, 199, 200, 201, 591, 598], "shape": [133, 147, 176, 190, 367, 446, 591, 594, 595, 597, 598, 600, 601, 643, 656, 660, 661, 662, 665], "v1": [134, 139, 148, 153, 177, 182, 191, 196, 591, 592, 603, 664], "v2": [134, 139, 148, 153, 177, 182, 191, 196, 601, 665], "insid": [134, 148, 177, 191, 657], "interv": [134, 139, 148, 153, 161, 165, 177, 182, 191, 196, 200, 561, 576, 577, 591, 598, 600], "occur": [135, 154, 164, 178, 197, 369, 370, 591, 658, 662], "nan": [135, 154, 160, 165, 178, 197, 200, 445, 591, 594, 600, 641], "inf": [135, 154, 165, 178, 197, 200, 600], "outsid": [139, 153, 165, 182, 196, 200, 224, 227, 229, 230, 242, 244, 246, 248, 258, 260, 262, 284, 287, 289, 316, 317, 320, 322, 349, 350, 353, 355, 426, 595, 600, 601, 640, 665], "trans_valu": [140, 152, 183, 195], "construct": [140, 152, 183, 195, 416, 594], "element": [141, 142, 160, 161, 162, 163, 164, 184, 185, 379, 413, 414, 415, 416, 420, 446, 561, 576, 577, 580, 581, 593, 594, 595], "NOT": [141, 142, 184, 185], "gate_includ": [141, 184, 661], "lost": [141, 142, 184, 185, 445, 588, 591, 660], "again": [141, 142, 184, 185, 595, 603, 612, 623, 644, 664], "gate_exclud": [142, 185, 661], "z_offset": 155, "doc": [155, 156, 157, 167, 591, 595, 600, 601, 603, 606, 612, 654, 664, 665, 667], "15": [155, 443, 575, 591, 592, 593, 594, 598, 606, 607, 612, 621, 624, 630, 631, 632, 633, 636, 637, 640, 641, 644, 646, 658, 662], "fzl": [155, 156, 157, 166, 167], "4000": [155, 166, 167, 660], "rhv_min": 155, "ncp_min": 155, "a_coef": [155, 157], "06": [155, 591, 593, 597, 608, 619, 638, 663], "beta": [155, 157, 430, 431, 432, 433, 434, 435], "refl_field": [155, 156, 157, 165, 166, 167, 199, 200, 416, 419, 425, 426, 427, 431, 433, 434, 435, 436, 442, 449, 606, 643, 645], "ncp_field": [155, 165, 166, 167, 200, 606], "rhv_field": [155, 165, 166, 167, 199, 200, 442, 606, 645], "spec_at_field": [155, 156, 157], "corr_refl_field": [155, 156, 157], "attenu": [155, 156, 157, 430, 431, 434, 600, 605, 608, 609, 645, 654, 663], "phi": [155, 157, 166, 600, 606], "copol_coeff": [155, 548, 606, 641, 642, 656], "norm_coherent_pow": [155, 548, 606, 656], "proc_dp_phase_shift": [155, 606, 641, 656], "reflectivity_horizont": [155, 160, 548, 592, 606, 615, 621, 623, 627, 629, 630, 631, 635, 637, 640, 641, 642, 643, 644, 651, 656, 657], "supress": [155, 233, 244, 249, 317, 350, 595, 600], "freez": [155, 156, 157], "layer": [155, 156, 157, 198, 201, 377, 431, 443, 447, 546], "combin": [155, 156, 157, 579, 591, 593, 594, 601, 603, 665], "minimum": [155, 165, 166, 167, 199, 200, 201, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 377, 412, 416, 426, 427, 428, 437, 542, 546, 571, 591, 593, 595, 598, 600, 640, 643, 660], "normal": [155, 165, 166, 167, 200, 217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 428, 595, 632, 640], "coher": [155, 165, 166, 167, 200], "power": [155, 157, 165, 166, 167, 200, 430, 431, 432, 433, 434, 435, 591, 594], "zdr_field": [155, 156, 157, 159, 199, 422, 442, 645], "spec_at": [155, 156, 157, 606, 645], "cor_z": [155, 156, 157, 606, 645], "gu": [155, 157], "et": [155, 157, 159, 426, 427, 428, 432, 436, 437, 442, 443, 449, 643, 644], "al": [155, 157, 159, 426, 427, 428, 432, 436, 437, 442, 443, 444, 449, 643, 644], "heavi": [155, 157, 575, 593, 624, 632, 644], "rain": [155, 157, 426, 430, 431, 432, 433, 436, 437, 449, 600, 624, 632, 643, 644, 645], "jamc": [155, 157, 445, 562], "2011": [155, 157, 641], "50": [155, 157, 561, 591, 592, 593, 594, 597, 618, 636, 640, 641, 645, 660, 662], "39": [155, 157, 591, 593, 641], "58": [155, 157, 426, 594, 640, 641], "pia_coef": 156, "pida_coef": 156, "temp_field": [156, 157, 201, 442, 645], "iso0_field": [156, 157, 198], "pia_field": [156, 157], "spec_diff_at_field": [156, 157], "pida_field": [156, 157], "corr_zdr_field": [156, 157], "temp_ref": [156, 157, 645], "linear": [156, 166, 167, 242, 369, 427, 437, 445, 571, 583, 594, 595, 600, 643, 644, 654], "dependec": 156, "comput": [156, 157, 159, 199, 422, 423, 424, 425, 427, 437, 443, 444, 445, 557, 558, 559, 560, 561, 576, 577, 580, 581, 587, 591, 594, 600, 640, 645, 646, 654], "either": [156, 157, 160, 161, 162, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 320, 321, 322, 339, 340, 341, 349, 353, 354, 355, 363, 392, 402, 431, 434, 435, 601, 640, 643, 664, 665], "frequenc": [156, 157, 379, 428, 430, 431, 432, 434, 435, 439, 442, 443, 444, 445, 594, 640], "refl": [156, 157, 630], "integr": [156, 157, 591, 594], "pida_coeff": 156, "0c": [156, 157], "isotherm": [156, 157], "height_over_iso0": [156, 157, 661], "fixed_fzl": [156, 157], "pia_dict": [156, 157], "spec_diff_at": [156, 157, 645], "pida_dict": [156, 157], "cor_zdr": [156, 157, 645], "smooth_window_len": 157, "d": [157, 162, 205, 265, 294, 327, 381, 382, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 426, 445, 452, 562, 591, 593, 594, 595, 598, 601, 641, 654, 665], "smooth": [157, 164, 443, 572, 584, 595, 632, 633, 660], "window": [157, 160, 166, 167, 199, 420, 445, 451, 561, 570, 582, 587, 600, 601, 654, 665], "expon": [157, 166, 167, 418, 430, 431, 432, 433, 434, 435], "law": [157, 430, 431, 432, 433, 434, 435], "ryzhkov": [157, 430, 447, 562], "potenti": [157, 430, 591, 598], "rainfal": [157, 426, 430, 431, 432, 433, 434, 435, 436, 443, 445], "estim": [157, 198, 201, 219, 279, 308, 341, 413, 424, 430, 431, 432, 433, 434, 435, 436, 443, 444, 445, 447, 562, 571, 594, 600, 643, 644], "mitig": [157, 430], "partial": [157, 430, 600], "beam": [157, 411, 415, 416, 430, 594], "blockag": [157, 430], "network": [157, 161, 371, 430, 593], "jaot": [157, 159], "2014": [157, 430, 444, 447, 654], "31": [157, 369, 430, 591, 593, 594, 597, 612, 641], "599": [157, 430], "619": [157, 430, 600], "bia": [158, 600], "magnitud": [158, 443, 646, 662], "corrected_field": 158, "urhohv_field": 159, "snr_field": [159, 419, 425], "nh_field": 159, "nv_field": 159, "rhohv_field": [159, 422, 423], "nois": [159, 419, 424, 425, 571, 594, 598, 600, 640, 658], "eq": [159, 630], "6": [159, 199, 426, 431, 591, 593, 594, 598, 612, 615, 616, 621, 622, 626, 629, 640, 641, 642, 645, 646, 656, 658, 661, 662], "2006": [159, 612], "subtract": [159, 427, 437], "uncorrect": [159, 591, 650], "snr": [159, 419, 425, 600], "channel": [159, 377, 591, 594, 600, 603], "meteo": 159, "franc": 159, "23": [159, 591, 593, 594, 613], "1340": 159, "1356": [159, 600], "last_radar": 160, "sonde_profil": 160, "filt": 160, "rsl_badval": 160, "131072": 160, "keep_origin": [160, 161, 162], "set_limit": [160, 161, 162, 592, 624, 625, 626, 628, 630, 631, 632, 633, 635, 640], "vel_field": [160, 161, 162, 420, 452, 640, 650, 658], "corr_vel_field": [160, 161, 162], "last_vel_field": 160, "max_shear": 160, "05": [160, 415, 416, 591, 593, 619, 636, 640, 641, 663], "sign": [160, 600, 632, 633, 640], "dealia": [160, 161, 162, 429, 597, 600, 605, 608, 609, 640, 649, 653, 658, 663], "4dd": [160, 600], "univers": [160, 374, 436, 591, 600, 654], "washington": 160, "previou": [160, 317, 350, 595, 598, 600, 603], "sound": [160, 600], "For": [160, 245, 247, 259, 261, 367, 377, 415, 442, 443, 591, 592, 594, 595, 600, 601, 604, 611, 615, 640, 645, 654, 661, 662, 665, 667], "best": [160, 593, 640], "argument": [160, 161, 162, 217, 224, 228, 229, 230, 242, 244, 245, 246, 247, 248, 258, 259, 260, 261, 262, 277, 284, 288, 289, 306, 313, 314, 315, 316, 317, 318, 321, 322, 339, 346, 347, 348, 349, 350, 351, 354, 355, 369, 371, 379, 381, 412, 416, 444, 445, 600, 601, 665], "_fourdd_interfac": 160, "fourdd_dealia": 160, "fine": 160, "tune": [160, 643, 644], "behavior": [160, 317, 350, 367, 381, 595, 600, 604], "fourdd": 160, "document": [160, 245, 247, 255, 259, 261, 317, 350, 370, 375, 376, 583, 589, 592, 594, 595, 596, 598, 601, 602, 654, 660, 665], "dealias": [160, 161, 162, 429, 600, 601, 607, 611, 650, 654, 655, 665], "mean_doppler_veloc": [160, 594, 598, 635, 640, 641, 650, 656], "successfulli": 160, "greatli": 160, "improv": [160, 444, 445, 575, 595, 603, 624, 644], "final": [160, 444, 445, 591, 592, 598, 599, 603, 616, 640, 643], "horizontalwindprofil": [160, 362, 363, 452, 583, 600, 601, 665], "sond": [160, 161, 362, 363, 438, 600, 607], "moment_based_gate_filt": [160, 161, 162, 416, 593], "bergen": 160, "alber": 160, "bad": [160, 443, 444, 445, 449], "rsl": [160, 361, 372, 373, 600, 654, 664], "procedur": [160, 161, 162], "fail": [160, 161, 162, 367, 377, 600, 601, 665], "otherwis": [160, 388, 399, 431, 434, 435, 440, 603], "maxshear": 160, "maximum": [160, 161, 165, 166, 167, 198, 199, 200, 217, 219, 224, 227, 228, 229, 230, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 358, 377, 412, 413, 414, 416, 421, 427, 431, 434, 435, 437, 443, 542, 546, 561, 570, 578, 591, 593, 595, 640, 642, 643, 650, 662], "shear": 160, "incorpor": [160, 437, 643], "match": [160, 163, 164, 203, 263, 292, 325, 373, 405, 598, 600, 615, 623, 644], "toward": 160, "neg": [160, 217, 228, 277, 288, 306, 321, 339, 354, 443, 570, 591, 600, 621], "compthresh": 160, "fraction": [160, 413, 414, 428, 593, 640, 643, 662], "threshold": [160, 163, 164, 165, 198, 199, 200, 201, 358, 426, 427, 431, 434, 435, 437, 571, 575, 591, 593, 597, 640, 643, 650, 658, 661], "continu": [160, 162, 594, 600, 601, 665], "unfold": [160, 161, 166, 167, 443], "compthresh2": 160, "thresh": [160, 431, 434, 435], "adjac": [160, 595], "count": [160, 428, 615, 658, 662], "assign": [160, 593, 600, 643], "question": [160, 359, 416, 595, 654], "ckval": 160, "absolut": [160, 561, 644], "stdthresh": 160, "deviat": [160, 546, 559, 560, 577, 591, 658], "portion": [160, 597, 660], "epsilon": 160, "miss": [160, 442, 443, 444, 445, 449, 591, 600, 612], "maxcount": 160, "allow": [160, 163, 164, 216, 276, 305, 338, 405, 426, 562, 570, 592, 595, 598, 600, 604, 615, 662, 667], "fold": [160, 161, 611], "pass2": 160, "retain": [160, 161, 162, 165, 198, 199, 200, 201, 588], "rm": 160, "what": [160, 169, 416, 591, 594, 595, 597, 598, 599, 600, 601, 611, 621, 650, 656, 658, 661, 665, 667], "left": [160, 315, 348, 593, 595, 597, 598, 621, 623, 640], "proxim": 160, "side": [160, 598, 640], "doubl": [160, 377, 643], "captur": [160, 426, 650], "suffici": [160, 640], "good": [160, 161, 591, 592, 603], "mingood": 160, "ba_mincount": 160, "neighbor": [160, 369, 416, 591, 600, 616, 660], "ba_edgecount": 160, "usuccess": 160, "radialvelvolum": 160, "lastvelvolum": 160, "unfoldedvolum": 160, "sondvolum": 160, "vr_corr": 160, "due": [160, 421, 426, 591, 593, 595, 600, 615, 658, 664, 667], "call": [160, 163, 216, 217, 219, 224, 228, 229, 230, 244, 276, 277, 279, 284, 288, 289, 305, 306, 308, 316, 317, 321, 322, 338, 339, 341, 349, 350, 354, 355, 372, 377, 381, 562, 574, 592, 594, 595, 601, 603, 658, 662, 665, 667], "999": [160, 381, 591, 600], "long": [160, 432, 600, 644, 657, 662], "n": [160, 420, 426, 442, 561, 591, 593, 594, 595, 597, 598, 611, 615, 616, 624, 635, 637, 641, 643, 644, 648, 654, 667], "jame": 160, "houz": [160, 358, 427, 428, 437, 449, 640, 643, 644], "jr": [160, 427, 437, 449, 643, 644], "four": [160, 369, 370, 372], "dealis": 160, "scheme": [160, 358, 412, 427, 437, 443, 592, 643], "2001": 160, "18": [160, 589, 591, 593, 622, 633, 640, 653], "1674": 160, "ref_vel_field": 161, "interval_split": 161, "interval_limit": 161, "skip_between_rai": 161, "100": [161, 163, 165, 200, 220, 225, 242, 280, 285, 309, 342, 379, 416, 452, 591, 593, 594, 595, 597, 618, 622, 632, 633, 640, 646], "skip_along_rai": 161, "nyquist_vel": [161, 162, 597, 640, 650, 658], "check_nyquist_uniform": [161, 162, 420], "rays_wrap_around": [161, 162], "region": [161, 167, 255, 317, 350, 421, 426, 575, 591, 593, 594, 595, 597, 598, 600, 601, 605, 608, 609, 611, 624, 643, 644, 650, 661, 663, 665], "similar": [161, 594, 595, 615, 660], "pair": [161, 242, 369, 381, 389, 394, 400, 593, 656], "accomplish": [161, 373, 609, 649], "problem": [161, 166, 167, 292, 325, 416, 612], "dynam": [161, 591], "reduct": 161, "anchor": 161, "onc": [161, 595, 601, 603, 643, 664, 665, 667], "complet": [161, 600], "simul": [161, 583, 600], "simulated_vel_from_profil": [161, 601, 665], "segment": [161, 313, 314, 346, 347, 600], "split": [161, 575, 591], "larger": [161, 595, 643], "longer": [161, 570, 593, 600, 601, 654, 664, 665], "process": [161, 166, 167, 591, 594, 597, 598, 600, 601, 603, 611, 644, 654, 665], "better": [161, 220, 225, 280, 285, 309, 318, 342, 351, 598, 600, 644, 654, 658], "seem": 161, "compromis": 161, "artifact": [161, 600, 658, 660], "free": [161, 596, 597, 654], "cover": [161, 591], "entir": [161, 162, 217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 416, 585, 591, 594, 595, 598, 640], "join": [161, 464, 600], "gap": [161, 163, 164, 660], "connect": [161, 162], "disabl": [161, 162, 165, 198, 199, 200, 201], "across": [161, 593, 600, 640, 642], "so": [161, 217, 228, 277, 288, 306, 321, 339, 354, 373, 416, 591, 594, 595, 597, 598, 600, 601, 611, 612, 640, 643, 654, 665, 667], "averag": [161, 358, 427, 437, 571, 576, 597, 643, 644, 646], "individu": [161, 162, 416, 598], "attempt": [161, 162, 375, 376, 600], "de": [161, 162, 348, 554, 555], "alias": [161, 162, 554, 555, 597, 600, 658, 662], "corr_vel": [161, 162], "unwrap_unit": 162, "skip_check": [162, 600], "multi": [162, 600], "unwrap": [162, 166, 167, 600], "independ": 162, "often": [162, 421], "give": [162, 377, 595, 598, 602, 603, 650, 651, 652, 654, 658, 661], "superior": 162, "lower": [162, 242, 244, 246, 248, 258, 260, 262, 426, 594, 598, 616, 617, 618], "contamin": [162, 449], "clutter": [162, 598, 658, 661], "poor": 162, "verif": [162, 562, 600], "appropi": [162, 216, 276, 305, 338], "offer": [162, 592], "extrem": [162, 640], "miguel": 162, "arevallilo": 162, "herraez": 162, "david": [162, 595], "burton": 162, "michael": [162, 595, 598], "lalor": 162, "munther": 162, "gdeisat": 162, "fast": 162, "two": [162, 379, 412, 427, 437, 440, 441, 449, 546, 579, 580, 581, 593, 594, 595, 597, 598, 600, 603, 609, 614, 619, 620, 622, 637, 638, 657, 660, 663], "sort": [162, 593, 597, 599, 600], "reliabl": 162, "follow": [162, 165, 199, 200, 375, 376, 378, 379, 392, 402, 415, 416, 426, 442, 443, 591, 593, 594, 595, 597, 598, 601, 603, 604, 611, 641, 654, 664, 665], "noncontinu": 162, "optic": 162, "vol": 162, "41": [162, 593, 641, 646, 660], "2002": 162, "7437": 162, "abdul": 162, "rahman": 162, "h": [162, 205, 255, 265, 294, 327, 350, 447, 571, 591, 593, 594, 615, 623, 640], "osten": 162, "gorecki": 162, "e": [162, 164, 166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 362, 377, 392, 402, 426, 427, 428, 437, 443, 449, 575, 591, 592, 594, 595, 601, 611, 624, 640, 643, 644, 664, 665], "l": [162, 166, 167, 221, 225, 226, 255, 281, 285, 286, 310, 319, 343, 350, 352, 423, 437, 575, 591, 595, 624, 640, 644], "novak": 162, "ed": 162, "metrologi": 162, "2005": [162, 427, 437, 643, 644], "32": [162, 426, 546, 591, 600, 621, 625, 626, 627, 637, 641, 644, 646, 662], "40": [162, 255, 426, 591, 594, 598, 607, 616, 618, 623, 627, 629, 632, 640, 643, 644, 650], "intern": [162, 595], "societi": [162, 418, 421, 432], "photon": 162, "label_dict": [163, 164], "delta": [163, 164, 444], "despeckl": [163, 600, 640], "identifi": [163, 164, 358, 427, 437, 571, 591, 595, 597, 624, 643, 644, 661], "small": [163, 164, 426, 427, 437, 449, 600, 615, 616, 632], "investig": [163, 164, 447, 611], "scipi": [163, 164, 443, 583, 591, 600, 601, 632, 633, 654, 664, 665, 667], "core": [163, 164, 358, 377, 405, 416, 426, 427, 437, 444, 445, 562, 574, 594, 598, 600, 601, 606, 643, 665], "queri": [163, 164, 416, 591, 595, 598], "speckl": [163, 643], "find_object": 163, "tupl": [163, 164, 217, 219, 222, 223, 224, 227, 228, 229, 230, 232, 242, 244, 246, 248, 258, 260, 262, 277, 279, 282, 283, 284, 287, 288, 289, 291, 306, 308, 311, 312, 316, 317, 320, 321, 322, 324, 339, 341, 344, 345, 349, 350, 353, 354, 355, 357, 389, 400, 412, 413, 414, 416, 420, 440, 441, 542, 561, 595, 600], "contigu": [163, 164], "perman": 163, "deg": [163, 164, 198, 201, 443, 585, 591, 646], "label": [164, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 282, 283, 284, 287, 288, 289, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 312, 315, 316, 317, 320, 321, 322, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 344, 345, 348, 349, 350, 353, 354, 355, 588, 591, 593, 595, 597, 598, 600, 615, 622, 623, 632, 633, 637, 645], "period": [164, 570, 591, 594, 598, 658], "account": [164, 600], "g": [164, 377, 412, 437, 443, 445, 452], "examin": [164, 360, 373, 376, 594, 597, 601, 654, 665], "box": [164, 377, 645], "alwai": [164, 361, 373, 426, 427, 437, 443, 595, 600, 604, 654], "readi": 164, "min_ncp": [165, 166, 200], "min_rhv": [165, 166, 199, 200], "min_refl": [165, 200], "20": [165, 199, 200, 447, 562, 591, 592, 593, 594, 595, 597, 598, 611, 612, 615, 616, 622, 623, 624, 627, 629, 630, 631, 632, 633, 635, 640, 642, 643, 644, 651, 652, 656, 660, 662], "max_refl": [165, 200], "undesir": [165, 198, 199, 200, 201, 416], "cross": [165, 199, 200, 217, 220, 242, 277, 280, 306, 309, 339, 342, 414, 563, 564, 591, 594, 597, 600, 609, 620, 629, 638, 640, 643, 662, 663], "ratio": [165, 199, 200, 231, 290, 323, 356, 419, 422, 591, 594, 597, 598, 662], "min_rhi": [165, 200], "criteria": [165, 198, 199, 200, 201, 416, 443, 449, 598], "built": [165, 198, 199, 200, 201, 415, 416], "lowest": [165, 198, 199, 200, 201, 421, 446, 597, 611, 615, 641, 643, 644], "greatest": [165, 200], "self_const": [166, 167], "60000": [166, 167, 618, 622, 660], "low_z": [166, 167], "high_z": [166, 167], "53": [166, 167, 591, 593, 597], "min_phidp": [166, 167], "01": [166, 167, 315, 348, 443, 591, 593, 594, 597, 598, 608, 619, 621, 638, 647, 663], "sys_phas": 166, "overide_sys_phas": 166, "nowrap": [166, 167], "really_verbos": [166, 167], "lp_solver": [166, 167], "pyglpk": [166, 167, 600, 654, 664], "kdp_field": [166, 167, 431, 432, 434, 435, 442, 443, 444, 445, 645], "unf_field": [166, 167], "window_len": [166, 167], "proc": [166, 167, 443, 600], "coef": [166, 167, 600], "914": [166, 167, 600], "lp": [166, 167, 600, 654], "consist": [166, 167, 600, 640, 660], "factor": [166, 167, 379, 421, 430, 431, 432, 433, 434, 435, 561, 591, 592, 594, 600, 623, 631, 637, 660], "low": [166, 167, 369, 443, 616, 624], "high": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 426, 443, 594, 595, 597, 616, 645], "copolar": [166, 167, 442, 642], "automat": [166, 373, 378, 379, 416, 420, 449, 593, 595, 598, 600, 601, 603, 627, 654, 665], "lpx": [166, 167], "messag": [166, 167, 233, 249, 369, 592, 600, 603, 612], "suppress": [166, 167, 443], "cvxopt": [166, 167, 600, 654, 664], "cylp": [166, 167, 600, 654, 664, 667], "cylp_mp": [166, 167], "modul": [166, 167, 548, 589, 595, 600, 601, 611, 612, 654, 657, 658, 660, 661, 662, 664, 665], "solv": [166, 167, 599, 600], "horizon": [166, 167, 442], "sobel": [166, 167], "worker": [166, 167], "link": [166, 167, 593, 594, 597, 598, 600], "1z": [166, 167], "reproc_phas": [166, 167], "sob_kdp": [166, 167], "recalcul": [166, 167, 656], "giangrand": [166, 167, 654], "mcgraw": [166, 167], "lei": [166, 167], "applic": [166, 167, 217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 427, 437, 582, 595, 597, 601, 665], "program": [166, 167, 600, 601, 654, 665], "atmo": [166, 167, 426, 436, 442, 447, 562, 575, 601, 624, 644, 665], "tech": [166, 167, 442, 575, 624, 644], "2013": [166, 167, 444, 447, 662], "30": [166, 167, 426, 427, 437, 589, 591, 593, 594, 595, 598, 615, 616, 623, 627, 629, 640, 643, 644, 658], "1716": [166, 167], "system_phas": 167, "ncpt": 167, "first_gate_sysp": 167, "carri": 167, "smaller": [167, 350, 416, 591, 594, 595, 601, 643, 665], "off": [167, 217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 441, 447, 591, 595, 621, 643, 644], "custom": [168, 216, 217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 276, 277, 278, 279, 284, 288, 289, 305, 306, 307, 308, 316, 317, 321, 322, 338, 339, 340, 341, 349, 350, 354, 355, 415, 426, 595, 660], "max_h_iso0": 198, "thick": [198, 201], "400": [198, 201, 600, 656], "beamwidth": [198, 201], "primarili": [198, 201], "melt": [198, 201, 431, 443, 447, 575, 624, 643, 644, 645], "db": [198, 201, 419, 598, 632, 662], "phi_field": 199, "textzdr_field": 199, "textrhv_field": 199, "textphi_field": 199, "textrefl_field": 199, "wind_siz": [199, 420, 587, 658], "7": [199, 367, 451, 587, 591, 593, 594, 595, 597, 601, 603, 612, 622, 624, 636, 640, 647, 661, 662, 665], "max_textphi": 199, "max_textrhv": 199, "max_textzdr": 199, "85": [199, 591, 595, 646], "max_textrefl": 199, "move": [199, 571, 593, 597, 600, 615], "highest": 199, "min_temp": 201, "There": [202, 593, 595, 597, 603, 621, 664, 667], "colorblind": [202, 592, 597, 621], "friendli": [202, 592, 597, 600, 621], "revers": [202, 217, 228, 277, 288, 306, 321, 339, 354, 373, 443, 600], "_r": 202, "matplotlib": [202, 217, 219, 222, 223, 224, 228, 229, 230, 242, 243, 244, 246, 248, 257, 258, 260, 262, 277, 279, 282, 283, 284, 288, 289, 306, 308, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 377, 591, 592, 593, 594, 597, 598, 600, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 654, 656, 657, 658, 660, 661, 664, 667], "pyart_colormap": 202, "bluebrown10": [202, 621], "bluebrown11": [202, 621], "brbu10": [202, 621], "brbu12": [202, 621], "bu10": [202, 621], "bu7": [202, 621], "budor12": [202, 621], "budor18": [202, 621], "budrd12": [202, 621], "budrd18": [202, 621], "bugr14": [202, 621], "bugy8": [202, 621], "buor10": [202, 621], "buor12": [202, 621], "buor8": [202, 621], "buorr14": [202, 621], "carbone11": [202, 621], "carbone17": [202, 621], "carbone42": [202, 621], "cat12": [202, 621], "ewilson17": [202, 621], "grmg16": [202, 621], "gray5": [202, 621], "gray9": [202, 621], "nwsref": [202, 621], "nwsvel": [202, 621], "nws_spw": [202, 621], "pd17": [202, 621], "rrate11": [202, 621], "rdylbu11b": [202, 621], "refdiff": [202, 621], "scook18": [202, 621], "stepseq25": [202, 621], "symgray12": [202, 621], "theodore16": [202, 621], "wild25": [202, 621], "langrainbow12": [202, 621], "homeyerrainbow": [202, 600, 621], "balanc": [202, 600, 621], "chasespectr": [202, 621], "spectralextend": [202, 621], "displai": [203, 217, 219, 224, 228, 229, 230, 232, 263, 277, 279, 284, 288, 289, 291, 292, 306, 308, 316, 317, 321, 322, 324, 325, 339, 341, 349, 350, 354, 355, 357, 377, 421, 451, 452, 592, 593, 594, 595, 597, 598, 600, 601, 606, 607, 611, 612, 616, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 656, 657, 658, 660, 661, 665], "airborn": [203, 600], "plot_var": [203, 263, 292, 325], "order": [203, 263, 292, 325, 358, 373, 378, 379, 405, 427, 437, 443, 561, 591, 598, 600, 601, 606, 643, 644, 654, 665], "cb": [203, 263, 292, 325, 623, 644], "colorbar": [203, 217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 249, 256, 258, 260, 262, 263, 277, 278, 279, 284, 287, 288, 289, 292, 306, 307, 308, 316, 317, 320, 321, 322, 325, 339, 340, 341, 349, 350, 353, 354, 355, 591, 593, 594, 595, 600, 609, 615, 620, 621, 637, 638, 640, 644, 663], "loc": [203, 263, 292, 325, 591, 593, 597, 598, 622], "titl": [204, 206, 207, 208, 217, 219, 224, 227, 228, 229, 230, 238, 239, 240, 242, 244, 246, 248, 251, 252, 253, 258, 260, 262, 264, 266, 267, 268, 277, 279, 284, 287, 288, 289, 293, 295, 296, 297, 306, 308, 316, 317, 320, 321, 322, 326, 328, 329, 330, 339, 341, 349, 350, 353, 354, 355, 592, 593, 594, 595, 597, 599, 600, 606, 607, 615, 623, 625, 626, 628, 630, 631, 635, 662], "ext": [205, 237, 250, 265, 294, 327], "png": [205, 237, 250, 265, 294, 327, 592, 593, 595, 597], "datetime_format": [205, 207, 265, 267, 294, 296, 327, 329], "use_sweep_tim": [205, 207, 265, 267, 294, 296, 327, 329], "form": [205, 219, 237, 250, 265, 279, 294, 308, 327, 341, 591, 595, 600], "radar_name_field_sweep_tim": [205, 265, 294, 327], "datetim": [205, 207, 224, 228, 230, 265, 267, 284, 288, 289, 294, 296, 316, 321, 322, 327, 329, 349, 354, 355, 362, 363, 379, 565, 566, 567, 568, 569, 593, 597, 600], "strftime": [205, 207, 224, 228, 265, 267, 284, 288, 294, 296, 316, 321, 327, 329, 349, 354, 593, 594], "suitabl": [205, 237, 250, 265, 294, 327, 426, 595], "xaxi": [209, 212, 269, 272, 298, 301, 331, 334, 623], "static": [210, 211, 220, 221, 225, 231, 232, 270, 271, 280, 281, 285, 290, 291, 299, 300, 309, 310, 323, 324, 332, 333, 342, 343, 356, 357, 592], "yaxi": [210, 211, 213, 214, 215, 270, 271, 273, 274, 275, 299, 300, 302, 303, 304, 332, 333, 335, 336, 337], "keyword": [216, 276, 305, 317, 338, 350, 369, 371, 591, 595, 600, 657, 660], "plot_ppi": [216, 276, 305, 338, 600, 607, 645, 650, 652, 656], "plot_sweep_grid": [216, 600], "target_azimuth": [217, 277, 306, 339, 563], "mask_tupl": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 595], "norm": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 443, 595, 600, 623, 645], "cmap": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 591, 592, 593, 594, 595, 597, 598, 615, 621, 622, 623, 624, 628, 631, 633, 635, 636, 640, 642, 643, 644, 650, 651, 652, 657, 658], "mask_outsid": [217, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 592, 595, 600, 630, 631, 640], "title_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 317, 320, 321, 322, 339, 341, 349, 350, 353, 354, 355, 595, 635], "axislabel": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 592, 625, 630, 631], "axislabels_flag": [217, 219, 224, 227, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 287, 288, 289, 306, 308, 316, 320, 321, 322, 339, 341, 349, 353, 354, 355, 600, 643, 644], "colorbar_flag": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 593, 595], "colorbar_label": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 592, 595, 597, 606, 607, 611, 625, 626, 630, 631, 632, 633, 637, 650], "colorbar_ori": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 597, 600], "reverse_xaxi": [217, 228, 277, 288, 306, 321, 339, 354], "fig": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 591, 592, 593, 594, 595, 597, 598, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 640, 642, 644, 645, 646, 650, 658, 660, 661], "tick": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 595, 600, 621, 623, 643, 644, 645], "ticklab": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 595, 600, 643, 644, 645], "raster": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 377, 595, 600], "pseudo": [217, 277, 306, 339, 600], "associ": [217, 277, 306, 339, 394, 426, 591, 603, 640], "pcolormesh": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 591, 600, 615, 632, 640, 643, 644], "integ": [217, 277, 306, 339, 379, 420, 440, 441], "ncp": [217, 224, 227, 228, 229, 230, 277, 284, 287, 288, 289, 306, 316, 317, 320, 321, 322, 339, 349, 350, 353, 354, 355, 595], "lumin": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 595], "scale": [217, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 378, 379, 415, 416, 423, 426, 443, 444, 591, 594, 595, 624], "west": [217, 228, 277, 288, 306, 321, 339, 354, 591, 595, 625], "leav": [217, 219, 224, 228, 229, 230, 242, 244, 246, 248, 258, 260, 262, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 593, 595], "orient": [217, 218, 219, 224, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 288, 289, 306, 307, 308, 316, 317, 321, 322, 339, 340, 341, 349, 350, 354, 355, 593, 595, 596, 645, 646], "treat": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 595], "themselv": [217, 224, 228, 229, 230, 246, 248, 258, 260, 262, 277, 284, 288, 289, 306, 316, 317, 321, 322, 339, 349, 350, 354, 355, 595], "figur": [217, 218, 219, 224, 227, 228, 229, 230, 241, 242, 244, 246, 248, 256, 258, 260, 262, 277, 278, 279, 284, 287, 288, 289, 306, 307, 308, 316, 317, 320, 321, 322, 339, 340, 341, 349, 350, 353, 354, 355, 592, 593, 594, 595, 597, 598, 599, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 642, 643, 644, 650, 657, 658, 660, 661], "render": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 594, 595], "rather": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 595], "larg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 443, 449, 595, 597, 600], "Be": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 595, 603], "sure": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 594, 595, 599, 600, 603, 615, 623, 643, 664, 667], "dpi": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 593, 595, 597], "pdf": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 595], "ep": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 595], "svg": [217, 219, 224, 228, 229, 230, 277, 279, 284, 288, 289, 306, 308, 316, 317, 321, 322, 339, 341, 349, 350, 354, 355, 595], "mappabl": [218, 241, 249, 256, 278, 307, 340], "cax": [218, 241, 256, 278, 307, 340, 645], "imag": [218, 241, 256, 278, 307, 340, 426, 441, 561, 575, 591, 592, 594, 595, 600, 609, 620, 638, 641, 643, 644, 663], "contourset": [218, 241, 249, 256, 278, 307, 340], "etc": [218, 241, 244, 249, 256, 278, 307, 317, 340, 350, 376, 437, 593, 595, 600, 640], "onto": [218, 241, 256, 258, 278, 307, 317, 340, 350, 405, 412, 416, 446, 595, 598], "drawn": [218, 241, 256, 278, 307, 340, 595], "target_rang": [219, 279, 308, 341], "delta_x": [219, 279, 308, 341], "delta_i": [219, 279, 308, 341], "az_limit": [219, 279, 308, 341], "el_limit": [219, 279, 308, 341], "corner": [219, 279, 308, 315, 341, 348, 595, 596, 600], "reflector": [219, 279, 308, 341, 600], "griddata": [219, 279, 308, 341], "min": [219, 279, 308, 341, 591, 595, 646], "max": [219, 279, 308, 341, 377, 591, 595, 600, 611, 615, 616, 621, 622, 627, 635, 646, 650, 651, 652], "npt": [220, 225, 280, 285, 309, 318, 342, 351], "hair": [220, 280, 309, 342, 629], "higher": [220, 225, 280, 285, 309, 318, 342, 351, 416, 594, 598, 640, 658, 660], "col": [221, 225, 226, 281, 285, 286, 310, 319, 343, 352, 594, 616], "line": [221, 227, 243, 244, 255, 257, 281, 287, 310, 313, 314, 317, 318, 320, 343, 346, 347, 350, 351, 353, 377, 443, 592, 593, 594, 595, 600, 601, 603, 609, 620, 622, 638, 640, 641, 663, 664, 665, 667], "color": [221, 222, 223, 225, 226, 243, 281, 282, 283, 285, 286, 310, 311, 312, 314, 317, 318, 319, 343, 344, 345, 350, 352, 377, 592, 593, 594, 595, 597, 598, 622, 623, 624, 632, 633, 640, 641, 643, 644, 645], "linestyl": [221, 225, 226, 243, 281, 285, 286, 310, 319, 343, 352, 593, 595, 597, 622, 623, 633], "symbol": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348], "text_color": [222, 223, 282, 283, 311, 312, 344, 345], "text": [222, 223, 282, 283, 311, 312, 315, 344, 345, 348, 464, 593, 599, 600, 603, 621, 630, 646, 654, 658], "just": [222, 223, 282, 283, 311, 312, 344, 345, 367, 570, 598, 600, 601, 621, 624, 656, 662, 665, 667], "marker": [222, 223, 227, 243, 257, 282, 283, 287, 311, 312, 320, 344, 345, 353, 591, 593], "title_datetime_format": [224, 228, 284, 288, 316, 321, 349, 354], "title_use_sweep_tim": [224, 228, 284, 288, 316, 321, 349, 354], "range_ring_location_km": [225, 285, 318, 351], "lw": [225, 226, 285, 286, 319, 352, 595, 597, 640], "ring": [225, 226, 285, 286, 318, 319, 351, 352, 593, 616, 617, 629], "range_r": [226, 286, 319, 352], "seri": [226, 286, 319, 352, 591, 594], "draw": [226, 244, 255, 286, 317, 319, 350, 352, 593, 595], "format_str": [227, 287, 320, 353], "ray_min": [227, 287, 320, 353], "ray_max": [227, 287, 320, 353], "style": [227, 243, 257, 287, 313, 314, 318, 320, 346, 347, 351, 353, 377, 600], "ignoretilt": 229, "antenna_to_cartesian_track_rel": 229, "slant": [229, 413], "ncar": 229, "soloii": 229, "time_axis_flag": [230, 289, 322, 355, 594], "date_time_form": [230, 289, 322, 355], "tz": [230, 289, 322, 355, 593], "zone": [230, 289, 322, 355], "info": [230, 289, 317, 322, 350, 355, 595, 600, 645, 662], "aspect_ratio": [231, 290, 323, 356], "aspect": [231, 290, 323, 356, 621], "xlim": [232, 291, 324, 357, 591, 592, 595, 597, 598, 626, 628, 632, 633, 660], "ylim": [232, 291, 324, 357, 591, 592, 594, 595, 597, 598, 626, 628, 630, 631, 632, 633, 635, 637, 640], "cartopi": [233, 234, 235, 236, 244, 292, 317, 591, 593, 595, 597, 598, 600, 601, 609, 611, 612, 615, 616, 620, 622, 623, 636, 638, 641, 643, 644, 650, 654, 657, 658, 660, 661, 663, 664, 665, 667], "coastlin": [234, 244, 317, 350, 591, 595], "polit": 235, "state": [236, 444, 593, 595, 597, 600], "grid_name_field_level_tim": [237, 250], "latitudin": [239, 246, 260], "step": [242, 377, 592, 594, 598, 603, 611, 632, 633, 643, 667], "interp_typ": 242, "x_axi": [242, 622], "metpi": [242, 593, 595, 597, 600], "design": [242, 575, 591, 601, 632, 643, 644, 654, 665], "geodes": 242, "nearest": [242, 369, 413, 416, 438, 563, 564, 583, 591, 595, 600, 660], "dataarrai": 242, "interp": [242, 445], "ex": [242, 445, 593, 597, 598, 599, 621], "upper": [242, 244, 246, 248, 258, 260, 262, 593, 597, 598, 622], "colormesh": [242, 244, 246, 248, 258, 260, 262], "64": [242, 244, 246, 248, 258, 260, 262, 592, 621, 626, 627, 628, 632, 634, 636, 637, 641, 661, 664], "linewidth": [243, 257, 593, 595, 597, 623, 632, 633], "crosshair": [243, 257, 595], "lat_lin": [244, 255, 317, 350, 593, 595, 615, 629, 641], "lon_lin": [244, 255, 317, 350, 593, 595, 615, 629, 641], "embellish": [244, 317, 350, 593, 623], "add_grid_lin": [244, 317, 593], "reason": [244, 255, 595], "america": [244, 255, 317, 350, 595], "cr": [244, 292, 317, 591, 593, 595, 597, 598, 611, 612, 615, 616, 622, 623, 629, 636, 641, 643, 644, 645, 650, 657, 658, 661], "subsequ": [244, 317, 595], "geoax": [244, 317, 595, 657, 660], "platecarre": [244, 317, 591, 593, 595, 597, 598, 611, 615, 622, 623, 636, 641, 643, 644, 650, 658, 661], "shapefil": [244, 317, 350, 595], "certain": [244, 317, 359, 441, 575, 595, 600, 643, 644, 661], "plot_latitudinal_level": [245, 259], "y_index": [246, 260], "basemap": [246, 248, 249, 254, 255, 258, 260, 262, 325, 346, 347, 348, 350, 351, 600, 654, 664], "plot_longitudinal_level": [247, 261], "x_index": [248, 262], "top": [249, 416, 446, 591, 593, 596, 600, 601, 621, 640, 641, 660, 665], "veric": 251, "area_thresh": [255, 350], "10000": [255, 350, 452, 616, 622, 643, 644, 660], "auto_rang": 255, "min_lon": [255, 317, 350, 593, 595, 615, 629, 661], "92": [255, 630, 641], "max_lon": [255, 317, 350, 593, 595, 615, 629, 661], "86": [255, 595], "min_lat": [255, 317, 350, 593, 595, 615, 629, 661], "max_lat": [255, 317, 350, 593, 595, 615, 629, 661], "44": [255, 427, 437, 591, 593, 643, 644, 664], "databas": [255, 350, 597], "merc": [255, 350], "mercat": [255, 616], "line_styl": [257, 313, 314, 318, 346, 347, 351, 629], "plot_rhi": [276, 305, 338, 591], "plot_vpt": [276, 305, 338, 594], "grid_project": [292, 415, 416, 595], "progress": [292, 325], "some": [292, 325, 389, 400, 445, 464, 592, 593, 594, 595, 597, 598, 599, 600, 612, 621, 622, 640, 641, 643, 654, 658, 660, 664], "correctli": [292, 325, 600], "github": [292, 325, 593, 596, 600, 633, 654, 664, 667], "tracker": [292, 325, 601, 654, 665], "azimuthalequidist": 292, "line_lon": [313, 346], "line_lat": [313, 346], "compat": [313, 314, 315, 318, 346, 347, 348, 351, 374, 593, 600, 604, 667], "line_x": [314, 347], "line_i": [314, 347], "ro": [315, 348], "label_text": [315, 348], "label_offset": [315, 348], "bottom": [315, 348, 593, 595, 621, 623], "110m": [317, 595], "shapefile_kwarg": [317, 595], "alpha": [317, 350, 430, 431, 432, 433, 434, 435, 593, 597, 623, 632, 640], "edgecolor": [317, 350, 593, 597, 632], "face": [317, 350, 595], "reson": [317, 350, 595], "lambertconform": [317, 595, 612, 629, 657], "domain": [317, 350, 591, 595, 615], "neither": [317, 350, 381, 595], "extend": [317, 350, 373, 595], "word": [317, 595], "10m": [317, 593, 595, 598, 612, 629], "50m": [317, 595, 650, 658, 661], "naturalearthfeatur": [317, 595], "tranpar": [317, 350, 595], "overplot": [317, 350, 595], "pixel": [317, 350, 440, 441, 546, 591, 595], "lcc": 350, "cylindr": 350, "mill": 350, "exhibit": 350, "distort": 350, "aea": 350, "laea": 350, "conform": [350, 595, 654, 656], "tmerc": 350, "stere": 350, "aeqd": 350, "cass": 350, "even": [350, 426, 445, 597, 600, 632, 640, 654, 660, 667], "cyl": [350, 600], "cannot": [350, 361, 593, 595], "lake": [350, 597], "esri": 350, "background": [350, 358, 427, 437, 449, 595, 599, 629, 636, 643, 644], "untest": 350, "always_core_thr": [358, 427, 437, 643, 644], "use_cosin": [358, 427, 437, 643, 644], "max_diff": [358, 427, 437, 643, 644], "zero_diff_cos_v": [358, 427, 437, 643, 644], "use_addit": [358, 427, 437, 643, 644], "scalar_diff": [358, 427, 437, 643, 644], "convect": [358, 426, 427, 437, 449, 591, 600, 609, 639, 647, 663], "stratiform": [358, 426, 427, 437, 449, 600, 609, 639, 647, 663], "classif": [358, 426, 427, 431, 437, 442, 449, 600, 609, 639, 647, 663], "cosin": [358, 427, 437, 643, 644], "scalar": [358, 427, 437, 593, 595, 600, 643], "classifi": [358, 426, 427, 437, 442, 600, 643, 644, 645], "eqn": [358, 427, 437], "b1": [358, 427, 437, 598], "yuter": [358, 427, 428, 437, 449, 575, 624, 640, 643, 644], "1997": [358, 427, 437, 643, 644], "zero": [358, 375, 427, 437, 441, 443, 583, 600, 640, 643, 644, 657, 661], "multipli": [358, 427, 437, 594, 643, 656], "most": [359, 367, 593, 594, 595, 600, 621, 640, 644, 658, 660, 667], "storage_opt": [360, 369, 371], "anon": [360, 369, 371, 591, 593, 597], "open": [360, 369, 371, 464, 591, 594, 595, 597, 599, 600, 601, 626, 654, 656, 657, 658, 660, 661, 662, 665, 667], "binari": [360, 437, 591, 603], "transpar": [360, 593, 595, 600, 632], "decompress": [360, 600], "gzip": [360, 367, 368], "bzip2": [360, 600], "close": [360, 437, 443, 592, 593, 597, 598, 600], "compress": [360, 367, 368, 595, 600], "backend": [360, 369], "googl": [360, 369, 600, 601, 665], "cloud": [360, 369, 426, 443, 593, 594, 601, 603, 609, 610, 613, 654, 663, 665, 667], "storag": [360, 369, 541], "amazon": [360, 369, 591, 593, 595, 597, 611, 612], "web": [360, 369, 377, 591, 595, 597, 598, 611, 612], "servic": [360, 369, 591, 593, 595, 597, 598, 603, 611, 612, 621], "s3": [360, 369, 593, 597, 611, 612, 624, 643, 644], "file_lik": 360, "use_rsl": 361, "read_": 361, "trmm": [361, 373, 600, 654, 664], "librari": [361, 370, 373, 376, 377, 591, 593, 594, 595, 597, 600, 601, 602, 654, 656, 657, 658, 660, 661, 662, 664, 665], "choos": [361, 595, 609, 620, 638, 643, 644, 663, 667], "Not": [361, 368], "typeerror": [361, 600], "launch_datetim": 362, "date": [362, 363, 589, 593, 595, 598, 599, 600, 611, 612], "radiosond": 362, "launch": 362, "record": [362, 597, 598, 662], "target_datetim": 363, "closest": [363, 405], "profile_datetim": 363, "use_file_field_attribut": 365, "csu": [365, 600], "chill": 365, "chl": [365, 600], "field_file_nam": 365, "long_nam": [365, 442, 591, 594, 643, 644, 657, 662], "zlib": [367, 368], "read_mdv": [367, 592, 607, 617, 628, 632, 633, 634], "interchang": 367, "vlevel": 367, "proj_polar_radar": 367, "9": [367, 433, 442, 571, 591, 593, 594, 595, 597, 599, 612, 622, 624, 633, 641, 642, 643, 644, 654, 656, 661, 662], "proj_rhi_radar": 367, "13": [367, 571, 591, 594, 597, 612, 635, 640, 654, 661, 662], "vlevel_typ": 367, "vert_type_z": 367, "vert_type_elev": 367, "vert_type_az": 367, "17": [367, 593, 594, 630, 635, 638], "vert_type_pressur": 367, "vert_type_theta": 367, "unknown": [367, 600], "station": [369, 370, 595, 612], "linear_interp": 369, "nexrad": [369, 370, 371, 372, 591, 600, 609, 610, 613, 620, 624, 638, 643, 644, 654, 662, 663], "archiv": [369, 593, 595, 597, 598, 625, 654], "host": [369, 371, 593, 603], "noaa": [369, 371, 373, 591, 593, 595, 597, 611, 612, 624, 643, 644], "nation": [369, 371, 591, 593, 595, 597, 611, 621], "climat": [369, 371, 594, 595, 597, 600, 601, 654, 656, 657, 658, 660, 661, 662, 665], "ucar": [369, 370, 591], "thredd": [369, 370, 376], "server": [369, 370], "letter": [369, 370, 372], "icao": [369, 370, 600], "older": [369, 370, 600, 601, 609, 610, 613, 654, 663, 665], "mix": [369, 426, 575, 624, 643, 644], "constant": [369, 409, 415, 416, 440, 443, 591, 594, 600, 612], "fsspec": [369, 371, 597, 600], "cut": [369, 370, 371, 441], "www": [369, 370, 371, 440, 593, 597, 601, 665], "ncdc": [369, 371], "gov": [369, 371, 591, 592, 593, 597, 598, 606, 607, 611, 612, 615, 617, 618, 621, 622, 623, 625, 626, 627, 628, 630, 632, 633, 634, 635, 637, 641, 642, 650, 651, 652], "edu": [369, 370, 440, 591, 624, 640, 643, 644], "catalog": [369, 370, 591], "html": [369, 370, 440, 593, 597, 600, 601, 654, 664, 665], "common": [370, 594, 600, 616, 654, 664], "cdm": [370, 376], "url": [370, 593, 595, 598, 612], "java": [370, 376], "tool": [370, 376, 591, 594, 598, 654, 664], "opendap": 370, "accept": [370, 444, 445, 595, 598, 600, 601, 665], "compil": [370, 444, 600, 654, 664], "unidata": [370, 591, 611], "htm": 370, "product": [371, 373, 421, 452, 591, 595, 600], "nw": [371, 597], "wsr": 371, "88d": 371, "iii": 371, "distribut": [371, 427, 428, 436, 437, 451, 546, 557, 558, 559, 560, 576, 577, 600, 601, 640, 643, 644, 654, 665], "roc": 371, "wsr88d": [371, 372], "level_iii": 371, "level3info": 371, "asp": 371, "radar_format": 372, "callid": 372, "skip_range_check": 372, "rsl_radar": 372, "id": [372, 377, 591, 598, 600], "verifi": [372, 578, 588], "ioerror": 372, "time_ord": [373, 600], "full_xhdr": 373, "noaa_hh_hdr": 373, "ignore_xhdr": 373, "ignore_sweep_start_m": 373, "sigmet": [373, 600, 654], "iri": [373, 600, 654, 664], "sequenti": [373, 621], "re": [373, 426, 593, 601, 665], "manner": 373, "determind": 373, "maintain": [373, 412, 600], "yet": [373, 611, 616], "warn": [373, 376, 442, 591, 593, 594, 595, 597, 598, 600, 606, 612, 615, 660], "reverse_and_rol": 373, "strictli": 373, "increas": [373, 416, 443, 446, 591, 595, 601, 621, 640, 660, 665], "becom": [373, 643, 657, 660], "thisopt": 373, "strict": 373, "header": [373, 600], "decod": [373, 600], "hurrican": [373, 595, 643, 644], "hunter": 373, "millisecond": 373, "precis": [373, 426], "explic": 373, "read_rsl": [373, 664], "error": [373, 377, 444, 445, 591, 593, 595, 599, 600, 616, 664], "uf": [374, 379, 600, 654], "introduc": [374, 445], "implement": [374, 381, 394, 415, 432, 440, 594, 595, 600, 601, 606, 644, 665], "time_refer": [375, 656], "compliant": 375, "mani": [375, 600, 601, 654, 660, 665, 667], "outlin": [375, 443, 571], "_zlib": [375, 376], "_deflatelevel": [375, 376], "_shuffl": [375, 376], "_fletcher32": [375, 376], "_contingu": [375, 376], "_chunksiz": [375, 376], "_endian": [375, 376], "_least_significant_digit": [375, 376], "_fillvalu": [375, 376, 600, 657, 662], "write_proj_coord_si": 376, "proj_coord_si": 376, "write_point_x_y_z": 376, "write_point_lon_lat_alt": 376, "projectioncoordinatesystem": 376, "toolsui": 376, "written": [376, 378, 379, 600, 603, 654], "appropri": [376, 571, 595, 604], "understood": 376, "rgb": 377, "viridi": [377, 643, 644], "color_level": 377, "warp": 377, "sld": 377, "use_doublequot": 377, "geotiff": [377, 600, 654], "wgs84": 377, "sphere": [377, 572, 584], "latter": [377, 595], "usabl": [377, 591], "byte": [377, 600], "former": 377, "gi": 377, "while": [377, 595, 598, 616, 654, 658, 667], "show": [377, 591, 592, 593, 595, 597, 598, 599, 600, 601, 606, 607, 611, 612, 615, 616, 617, 618, 621, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 643, 644, 650, 656, 658, 660, 661, 662, 665], "lack": [377, 392, 402], "composit": [377, 421, 591, 594, 600, 609, 639, 647, 663], "gdal": [377, 600, 654], "via": [377, 413, 414, 593, 595, 603], "conda": [377, 597, 600, 601, 654, 664, 665, 667], "rbg": 377, "tabl": [377, 591], "column": [377, 562, 573, 574, 591, 593, 594, 595, 600, 609, 639, 647, 663], "categor": [377, 593, 645], "255": [377, 600, 644], "hydrometeor": [377, 431, 442, 600, 609, 639, 647, 658, 663], "gdalwarp": 377, "command": [377, 600, 601, 603, 654, 657, 665, 667], "o": [377, 464, 593, 595, 601, 623, 654, 664, 665], "az": [377, 593, 600, 630, 631], "descriptor": 377, "tiff": 377, "don": [377, 594, 595, 600, 615], "t": [377, 426, 427, 437, 443, 444, 447, 452, 591, 594, 595, 598, 600, 615, 640, 643, 644, 654, 656], "quot": 377, "help": [377, 453, 593, 594, 595, 597, 598, 601, 603, 615, 621, 643, 665, 667], "translat": 377, "sr": [377, 591], "instead": [377, 591, 593, 595, 598, 600, 601, 612, 640, 643, 660, 664, 665, 667], "mdv_field_nam": [378, 600], "field_write_ord": [378, 379], "sentinel": [378, 379], "float32": [378, 591, 594, 595, 600, 641, 656, 658, 662], "_write_as_dtyp": 378, "writabl": 378, "satisfi": 378, "xy": [378, 416], "irregular": 378, "exce": [378, 643, 644], "122": [378, 598, 611, 615, 622, 642, 650], "uint8": 378, "uint16": 378, "scale_factor": [378, 594], "add_offset": [378, 594], "uncompress": 378, "sai": [378, 601, 665], "uf_field_nam": 379, "radar_field_nam": 379, "volume_start": 379, "templates_extra": 379, "radar_beam_width_h": [379, 594], "radar_beam_width_v": [379, 594], "radar_receiver_bandwidth": 379, "prt": [379, 594], "polarization_mod": 379, "round": [379, 413, 414, 595, 598, 600], "_uf_scale_factor": 379, "charact": 379, "advanc": [379, 591], "usag": 379, "templat": [379, 600, 603], "mandatory_head": 379, "optional_head": 379, "field_head": 379, "lazi": [380, 381, 383, 390, 600], "set_lazi": 381, "callabl": [381, 390, 594, 595], "cach": 381, "tradit": 381, "supplement": 381, "syntax": [381, 600], "prevent": [381, 416, 593, 600, 601, 665], "comparison": [381, 600, 615, 644], "__cmp__": 381, "__ge__": 381, "__gt__": 381, "__le__": 381, "__lt__": 381, "__ne__": 381, "nor": 381, "viewitem": 381, "viewkei": 381, "viewvalu": 381, "fromkei": 381, "tradition": 381, "referenc": 381, "lazyloaddictionari": 381, "henc": 381, "key1": 381, "value1": 381, "key2": 381, "value2": 381, "lazy_func": 381, "lambda": 381, "lazykey1": 381, "item": [382, 392, 395, 402, 600], "els": [384, 385, 396, 594, 598], "value_cal": 390, "concret": 394, "__getitem__": [394, 594], "__setitem__": 394, "__delitem__": 394, "__iter__": 394, "__len__": 394, "robust": [404, 426, 600], "src_radar": 405, "dest_radar": 405, "distance_toler": [405, 615], "500": [405, 593, 597, 615, 622, 626], "gatefilter_src": [405, 615], "time_toler": [405, 615], "60": [405, 591, 606, 611, 615, 618, 623, 651, 656, 658, 660], "kd": 405, "tree": [405, 416, 650, 651, 652], "physic": [405, 421, 427, 437, 643, 644], "easi": [405, 421, 654], "equival": [405, 592, 594, 600, 611, 623, 631, 637], "src_radar_i": 405, "src_radar_x": 405, "destin": [405, 407, 593, 597, 600, 615], "toler": [405, 406, 408, 563, 564, 600], "src_radar_tim": 405, "dest_radar_tim": 405, "gate_mapp": 405, "src": [405, 597], "dest": 405, "dest_index": 405, "radar_map": 405, "mapped_radar": [405, 615], "adequ": [405, 615], "getter": [406, 408], "field_list": [407, 441], "zg": [409, 410, 411], "yg": [409, 410, 411], "xg": [409, 410, 411], "roi": [409, 410, 411, 413, 414, 416, 600, 616], "influenc": [409, 412, 415, 416, 660], "grow": [410, 411, 415, 416, 601, 665], "virtual": [411, 415, 416], "grid_shap": [412, 413, 414, 415, 416, 542, 616, 617, 618, 622, 643, 644, 651, 660], "grid_limit": [412, 413, 414, 415, 416, 542, 616, 617, 618, 622, 643, 644, 651, 660], "gridding_algo": 412, "map_gates_to_grid": [412, 600], "copy_field_dtyp": [412, 600], "map_to_grid": [412, 415, 600], "significantli": [412, 416], "faster": [412, 416, 595, 600], "barn": [412, 416, 600, 660], "1964": 412, "techniqu": [412, 426, 644], "maxim": 412, "numer": [412, 600], "analysi": [412, 426, 574, 595, 598, 600], "meteorologi": [412, 418, 421, 443, 452, 571], "climatologi": [412, 452], "396": [412, 594], "409": [412, 600], "cressman": [412, 416, 660], "1959": 412, "monthli": 412, "review": [412, 592, 600], "87": [412, 591, 593], "367": 412, "374": [412, 600], "paulei": [412, 660], "1990": [412, 660], "theoret": 412, "discret": 412, "respons": 412, "118": 412, "1145": [412, 600], "1164": [412, 600], "target_sweep": [413, 414], "grid_siz": [413, 414, 415, 416], "801": [413, 414, 600], "auto": [413, 414, 595, 597, 621], "max_z": [413, 414], "12000": [413, 414, 656, 660], "el_rounding_frac": 413, "add_grid_altitud": 413, "weight": [413, 414, 415, 416, 442, 443, 451, 591, 600, 609, 614, 619, 660, 663], "grid_from_radar": [413, 414, 415, 416, 616, 617, 618, 622, 643, 644, 651, 660], "receiv": [413, 414, 594, 597, 600, 658], "h_factor": [413, 414, 415, 416, 616], "dist_factor": [413, 414, 415, 616], "radar_d": [413, 414], "third": [413, 414, 601, 665], "az_rounding_frac": 414, "12": [414, 591, 593, 594, 598, 599, 606, 611, 612, 616, 623, 630, 640, 641, 644, 654, 657, 661, 662], "grid_origin": [415, 416, 618, 622], "grid_origin_alt": [415, 416], "map_roi": [415, 416], "weighting_funct": [415, 416, 660], "barnes2": [415, 416, 600], "toa": [415, 416, 419, 446], "17000": [415, 416, 660], "roi_func": [415, 416, 600, 660], "dist_beam": [415, 416, 660], "constant_roi": [415, 416, 600], "z_factor": [415, 416], "xy_factor": [415, 416], "02": [415, 416, 591, 594, 624, 638, 643, 644, 647, 663], "min_radiu": [415, 416, 600, 660], "250": [415, 416, 662], "nb": [415, 416], "bsp": [415, 416], "linearli": 415, "roifunct": 415, "dist": [415, 416, 576, 577, 591, 593], "get_roi": 415, "cython": [415, 600], "around": [415, 427, 437, 546, 561, 597, 598, 617, 632, 635, 640, 643, 656, 658], "copy_field_data": 416, "kd_tree": 416, "leafsiz": 416, "nearbi": [416, 618], "coodin": 416, "azimut": 416, "similarili": 416, "example_roi_func_const": 416, "example_roi_func_dist": 416, "example_roi_func_dist_beam": 416, "altern": [416, 421, 595, 643], "foreach": 416, "metet": 416, "sacr": 416, "sapr": [416, 548], "dist_mean": 416, "preserv": [416, 598, 658], "less": [416, 426, 427, 428, 437, 445, 575, 598, 640, 643], "memori": [416, 600], "slower": [416, 443], "It": [416, 445, 561, 571, 593, 595, 598, 601, 604, 615, 665, 667], "leaf": 416, "lookup": 416, "affect": 416, "optim": [416, 443, 600], "natur": [416, 426, 595], "ref_field": [418, 644, 657], "300": [418, 591, 593, 594, 595, 597, 624, 625, 656], "save_nam": [418, 644], "nws_primary_pr": 418, "mm": [418, 598, 599, 643, 644], "hr": [418, 643, 644], "author": [418, 421, 437, 575, 592, 598, 599, 603, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652], "laura": [418, 437, 575, 624, 640, 643, 644], "tomkin": [418, 437, 575, 624, 640, 643, 644], "look": [418, 421, 428, 447, 591, 593, 594, 595, 597, 598, 599, 600, 611, 612, 615, 616, 623, 654, 656, 658, 660, 662], "expect": [418, 445, 601, 665], "relationship": [418, 426, 436], "american": [418, 421], "meteorolog": [418, 421, 432, 452, 595], "2022": [418, 421, 575, 591, 594, 599, 611, 624, 643, 644, 654], "glossari": [418, 421], "ametsoc": [418, 421], "wiki": [418, 421, 440], "r_relat": 418, "25000": [419, 660], "floor": 419, "measur": [419, 427, 430, 436, 437, 442, 443, 444, 445, 562, 594, 595, 597, 598, 601, 643, 644, 654, 656, 657, 658, 660, 661, 662, 665], "nyq": [420, 597, 650, 658], "check_nyq_uniform": 420, "deriv": [420, 443, 445], "try": [420, 443, 593, 598, 599, 660, 661], "vel_dict": 420, "entri": [420, 662], "am": [421, 597, 601, 654, 665], "dry": [421, 645], "world": [421, 609, 620], "aloft": 421, "oppos": [421, 624], "nwp": [421, 645], "why": [421, 595, 599, 601, 665], "would": [421, 591, 592, 593, 594, 597, 598, 600, 601, 611, 612, 658, 660, 665], "think": 421, "turn": [421, 447, 621, 643, 644, 654], "spin": [421, 598], "randi": [421, 597], "chase": [421, 597], "dopplerchas": [421, 600], "cdr_field": 422, "circular": [422, 576, 577, 600, 643], "depolar": [422, 594], "cdr": 422, "l_field": 423, "logarithm": 423, "log10": [423, 615], "l_field_out": 423, "noisedbz_v": 424, "ref_dist": 424, "noise_field": [424, 425], "noisedbz": 424, "cappi_level": 426, "zr_a": 426, "200": [426, 601, 665], "zr_b": 426, "core_wt_threshold": 426, "conv_wt_threshold": 426, "conv_scale_km": 426, "min_reflect": 426, "conv_min_refl": 426, "conv_core_threshold": 426, "42": [426, 427, 437, 449, 591, 593, 594, 597, 641, 643, 644], "override_check": 426, "computation": 426, "\u00e0": 426, "trou": 426, "wavelet": 426, "atwt": 426, "multiresolut": 426, "focus": [426, 591, 593, 594], "raut": 426, "2008": [426, 612], "2020": [426, 562, 595, 598, 600, 601, 624, 654, 664, 665], "convers": [426, 561, 594], "sensit": 426, "howev": [426, 443, 595, 658], "intermedi": 426, "signific": 426, "approxim": [426, 591, 594, 600], "break": [426, 598, 602, 603], "season": 426, "2018": [426, 595], "discuss": [426, 595, 604], "insensit": 426, "variat": [426, 436, 443, 600], "dyadic": 426, "scale_break_us": 426, "greater": [426, 449, 595, 643], "bypass": 426, "saniti": 426, "fall": 426, "categori": [426, 593, 598], "strong": [426, 437, 593, 644], "updraft": 426, "activ": [426, 667], "collis": 426, "coalesc": 426, "wide": [426, 640], "remain": 426, "intens": [426, 449, 546], "unclassifi": [426, 591], "karekar": 426, "puranik": 426, "infrar": [426, 591], "satellit": [426, 591], "ieee": [426, 444], "geosci": [426, 444], "remot": [426, 444, 593, 594, 595, 600, 601, 611, 665], "sen": [426, 444], "lett": 426, "328": 426, "330": [426, 600], "seed": 426, "reeder": 426, "jakob": 426, "cascad": 426, "downscal": 426, "geophi": 426, "123": [426, 428, 640], "2050": 426, "2067": 426, "louf": 426, "gayatri": 426, "murugavel": 426, "konwar": 426, "prabhakaran": 426, "tran": 426, "5409": 426, "5415": 426, "dx": [427, 437, 449, 643, 644], "dy": [427, 437, 449, 593, 643, 644], "level_m": [427, 437, 644], "bkg_rad_km": [427, 437, 643, 644], "11": [427, 437, 582, 591, 593, 598, 612, 641, 644, 651, 654, 661, 662], "55": [427, 437, 591, 593, 636, 643, 644], "calc_thr": [427, 437, 643, 644], "weak_echo_thr": [427, 437, 643, 644], "min_dbz_us": [427, 643], "db_averag": [427, 437, 643, 644], "remove_small_object": [427, 437, 643, 644], "min_km2_siz": [427, 437, 643, 644], "val_for_max_conv_rad": [427, 643], "max_conv_rad_km": [427, 643], "cs_core": 427, "nosfcecho": [427, 437, 643, 644], "weakecho": [427, 437, 643, 644], "sf": [427, 643], "conv": [427, 643], "estimate_flag": [427, 437, 643, 644], "estimate_offset": [427, 437, 643, 644], "partit": [427, 437, 449, 598, 606], "pars": [427, 437, 594, 595, 600], "least": [427, 437, 643], "simpler": [427, 437, 643], "percentag": [427, 437], "weak": [427, 437, 643, 644], "surfac": [427, 437, 594, 643, 644], "snow": [427, 431, 437, 562, 575, 594, 624, 643, 644, 645], "underestim": [427, 437, 643, 644], "wih": [427, 437], "convsf_dict": [427, 643, 644], "raindrop": [427, 437, 643, 644], "pacif": [427, 437, 643, 644], "warm": [427, 437, 443, 643], "pool": [427, 437, 643, 644], "implic": [427, 437, 643, 644], "appl": [427, 437, 445, 447, 449, 451, 562, 601, 643, 644, 665], "meteor": [427, 437, 445, 447, 449, 451, 562, 601, 643, 644, 654, 665], "36": [427, 437, 591, 612, 615, 618, 622, 636, 641, 643, 644, 660], "847": [427, 437, 600, 643, 644], "867": [427, 437, 600, 643, 644], "doi": [427, 428, 432, 433, 437, 442, 444, 445, 562, 575, 591, 594, 595, 597, 598, 601, 624, 640, 643, 644, 654, 656, 657, 658, 660, 661, 662, 665], "1175": [427, 428, 437, 445, 562, 600, 640, 643, 644, 654], "1520": [427, 428, 437, 600, 640, 643, 644], "0450": [427, 437, 643, 644], "036": [427, 437, 643, 644], "3c0847": [427, 437, 643, 644], "morsdo": [427, 437, 643, 644], "3e2": [427, 428, 437, 640, 643, 644], "smith": [427, 437, 643, 644], "wilheit": [427, 437, 643, 644], "zipser": [427, 437, 643, 644], "character": [427, 437, 449, 643, 644], "tropic": [427, 437, 643, 644], "kwajex": [427, 437, 643, 644], "385": [427, 437, 600, 643, 644], "415": [427, 437, 632, 638, 643, 644, 663], "jam2206": [427, 437, 643, 644], "field_bin": [428, 640], "altitude_bin": [428, 640], "field_mask": [428, 640], "min_frac_thr": [428, 640], "contour": [428, 600, 609, 620, 638, 640, 663], "diagram": [428, 609, 639, 647, 663], "cfad": [428, 600, 609, 639, 647, 663], "1995": [428, 437, 449, 640, 643, 644], "histogram": [428, 615, 640, 658], "largest": 428, "row": [428, 591, 593, 595, 640], "creation": [428, 600], "total": [428, 443, 444, 445, 594, 597, 606, 607, 608, 611, 612, 613, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 663], "freq_norm": [428, 640], "height_edg": [428, 640], "field_edg": [428, 640], "kinemat": [428, 451, 601, 640, 665], "microphys": [428, 591, 640], "evolut": [428, 640], "florida": [428, 595, 640], "cumulonimbu": [428, 640], "ii": [428, 640, 654, 662], "mon": [428, 640], "wea": [428, 640], "rev": [428, 640], "1941": [428, 640], "1963": [428, 640], "0493": [428, 640], "3c1941": [428, 640], "tdkame": [428, 640], "the_spectra": 429, "vel_bin": 429, "wavelength": [429, 591, 594], "left_limit": 429, "right_limit": 429, "new_spectra": 429, "new_bin": 429, "a_field": [430, 431, 434], "rr_field": [430, 431, 432, 433, 434, 435, 436], "go": [430, 431, 432, 434, 435, 585, 592, 593, 598, 600, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 657], "diederich": 430, "simmer": [430, 447], "zhang": [430, 447, 562], "tromel": [430, 447], "2015": [430, 433, 447, 654], "wavelenght": 430, "hydrometeorologi": 430, "487": [430, 591], "502": [430, 600], "alphazr": 431, "0376": [431, 433, 434, 435], "betazr": 431, "6112": [431, 433, 434, 435], "alphaz": [431, 434, 435], "betaz": [431, 434, 435], "alphaa": [431, 434], "betaa": [431, 434], "mp_factor": 431, "hydro_field": [431, 442], "main_field": [431, 434, 435], "thresh_max": [431, 434, 435], "main": [431, 434, 435, 591, 593, 594, 595, 600, 601, 627, 665], "secondari": [431, 434, 435, 600], "figuera": [432, 442], "term": [432, 600], "monitor": 432, "french": 432, "sever": [432, 593, 600, 644], "quantit": 432, "ideal": [432, 594], "quarterli": 432, "royal": 432, "2012": [432, 443, 445], "1002": [432, 600], "qj": 432, "1934": 432, "fabri": 433, "fr\u00e9d\u00e9ric": 433, "meterologi": 433, "ch": [433, 645, 646], "pg": 433, "148": 433, "165": 433, "1017": 433, "cbo9781107707405": 433, "blend": [434, 435, 595, 632], "rain_main": [434, 435], "alphakdp": 435, "betakdp": 435, "polynomi": 436, "develop": [436, 437, 591, 595, 600, 644, 654, 664], "mcgill": [436, 654], "doell": 436, "systemat": 436, "drop": [436, 594, 595, 600], "northern": [436, 593], "germani": 436, "seven": 436, "year": [436, 591, 593, 597, 599, 611, 612], "1998": 436, "technol": [436, 447, 562], "1545": [436, 600], "1556": 436, "joss": 436, "switzerland": 436, "vdf": 436, "hochschulverlag": 436, "ag": [436, 645], "eth": 436, "zurich": 436, "134": [436, 591], "min_val_us": [437, 644], "binary_clos": 437, "val_for_max_rad": [437, 644], "max_rad_km": [437, 644], "core_v": [437, 644], "bkgd_val": [437, 644], "feat_val": [437, 644], "overest_field": [437, 644], "underest_field": [437, 644], "detect": [437, 595, 600, 609, 627, 639, 643, 647, 658, 663], "featur": [437, 592, 593, 595, 598, 604, 609, 624, 639, 640, 643, 647, 654, 663], "2023": [437, 597, 654], "steiner": [437, 449, 600, 643, 644], "lauratomkin": [437, 575, 600], "overestim": [437, 643, 644], "feature_dict": [437, 644], "climatolog": [437, 449, 643, 644], "storm": [437, 449, 546, 547, 549, 591, 594, 595, 597, 624, 643, 644, 660], "gaug": [437, 449, 643, 644], "1978": [437, 449, 643, 644], "2007": [437, 449, 643, 644], "miller": [437, 575, 624, 644], "2024": [437, 589, 598, 644], "identif": [437, 575, 624, 644], "faint": [437, 644], "winter": [437, 624, 643, 644], "prep": [437, 644], "sonde_dset": 438, "time_kei": 438, "height_kei": 438, "nvar": 438, "vap": 438, "startard": 438, "ncvar": 438, "return_d": 438, "freq": 439, "hz": [439, 442, 630], "freq_band": 439, "grid1": 440, "grid2": 440, "return_valu": 440, "displac": 440, "en": [440, 597, 600, 601, 654, 664, 665], "wikipedia": 440, "phase_correl": 440, "inspir": 440, "christoph": 440, "gohlk": 440, "lfd": 440, "uci": 440, "imreg": 440, "advect": [440, 441, 600], "trim_edg": 441, "shifted_grid": 441, "subset": [441, 585, 591, 593, 597, 600, 609, 639, 641], "mass_cent": 442, "approach": [442, 591, 594, 616], "besic": 442, "2016": [442, 591, 594, 595, 597, 601, 654, 656, 657, 658, 660, 661, 662, 665], "ndarrai": [442, 662], "centroid": 442, "nclass": 442, "nvariabl": 442, "hydro": [442, 645], "ventura": 442, "grazioli": [442, 444], "gabella": 442, "germann": 442, "bern": [442, 444], "statist": [442, 600, 601, 665], "cluster": 442, "semi": 442, "supervis": 442, "mea": [442, 575, 624, 644], "4425": 442, "4445": 442, "5194": [442, 575, 624, 644], "amt": [442, 575, 624, 644], "block": [442, 591, 598, 600], "2e9": 442, "cg": 443, "backscatt": [443, 447], "clpf": 443, "length_scal": 443, "first_guess": 443, "finite_ord": 443, "fill_valu": [443, 444, 445, 449, 595, 656, 657, 662], "psidp_field": [443, 444, 445, 645], "verbos": [443, 447, 600, 601, 665], "maesaka": 443, "monoton": [443, 446, 621], "propag": [443, 444, 445], "notat": 443, "primari": [443, 594], "proport": 443, "dr": 443, "analys": [443, 444, 445], "cost": [443, 600], "nonlinear": 443, "conjug": 443, "gradient": [443, 600, 621], "broyden": 443, "fletcher": 443, "goldfarb": 443, "shanno": 443, "bfg": 443, "100k": 443, "consider": [443, 597, 643, 644], "parameter": 443, "attentu": 443, "constraint": 443, "bring": [443, 591], "guess": 443, "root": [443, 664, 667], "signifi": [443, 449], "everywher": 443, "exactli": [443, 598, 615], "avoid": [443, 600, 603, 667], "converg": 443, "fact": [443, 445], "closer": 443, "finit": 443, "accuraci": 443, "maxit": 443, "met": 443, "achiev": 443, "somewhat": 443, "arbitrari": 443, "parallel": [443, 444, 445], "thread": [443, 595], "cpu": 443, "multiprocess": 443, "capabl": [443, 594, 658, 662], "relev": [443, 598, 604], "kdp_dict": [443, 444, 445], "phidpf_dict": 443, "phidpr_dict": [443, 444, 445], "forward": [443, 572, 573], "iwanami": 443, "maki": 443, "seventh": 443, "european": 443, "confer": 443, "hydrologi": 443, "rcov": 444, "pcov": 444, "prefilter_psidp": [444, 445], "filter_opt": [444, 445], "kalman": 444, "schneeb": 444, "psidp": [444, 445], "char": [444, 445], "capit": [444, 445], "intercept": 444, "slope": 444, "3x3": 444, "covari": 444, "matrix": [444, 595, 600], "4x4": 444, "filter_psidp": [444, 445, 600], "enabl": [444, 445, 594, 597, 600], "kdp_std_dict": 444, "dev": [444, 594, 597, 598, 601, 660, 665], "ensembl": 444, "52": [444, 447, 591, 594, 641], "5137": 444, "5149": 444, "1109": [444, 600], "tgr": 444, "2287017": 444, "windsiz": 445, "n_iter": 445, "vulpiani": [445, 600], "pre": [445, 600, 601, 665], "advantag": 445, "eat": 445, "gianfranco": 445, "mario": 445, "montopoli": 445, "luca": 445, "delli": 445, "passeri": 445, "antonio": 445, "gioia": 445, "pietro": 445, "giordano": 445, "frank": 445, "marzano": 445, "On": [445, 592, 593], "dual": [445, 600], "mountain": 445, "climatol": [445, 562, 643, 644], "51": [445, 591, 641], "405": [445, 600], "425": [445, 600], "05024": 445, "profile_field": 446, "height_field": 446, "3re": 446, "whole": [446, 600], "height_dict": 446, "profile_dict": 446, "desired_angl": [447, 600], "quasi": 447, "qvp": [447, 600], "wanted_angl": 447, "dictonari": 447, "quasai": 447, "troemel": 447, "kumjian": 447, "clim": [447, 594, 595], "2529": 447, "2548": 447, "meteorol": [447, 643, 644], "54": [447, 591, 593, 594, 612, 646], "2344": 447, "2359": 447, "reev": 447, "tschallen": 447, "wai": [447, 594, 601, 603, 615, 656, 665, 667], "submit": [447, 595, 654], "work_level": 449, "3000": [449, 656, 660], "peak_rel": 449, "area_rel": 449, "medium": 449, "bkg_rad": 449, "11000": [449, 660], "use_intens": 449, "bright": [449, 591], "sgp": [449, 542], "peaked": 449, "eclass": 449, "z_want": [451, 452, 601, 646, 665], "valid_ray_min": [451, 601, 665], "velocity_azimuth_displai": [451, 601, 665], "one_sweep_radar": 451, "extract_sweep": [451, 597, 616, 640, 643, 644, 646], "vad": [451, 452, 600, 601, 609, 639, 647, 663, 665], "amount": [451, 594, 597, 601, 644, 660, 665], "_averag1d": [451, 601, 665], "idw": 451, "brown": [451, 600, 601, 665], "wexler": [451, 601, 665], "1968": [451, 601, 665], "105": [451, 601, 646, 665], "113": [451, 601, 641, 665], "linespac": 452, "michelson": [452, 600, 654], "andersson": 452, "koistinen": [452, 654], "collier": 452, "riedl": 452, "szturc": 452, "gjertsen": 452, "nielsen": 452, "overgaard": 452, "2000": [452, 591, 617, 660], "baltex": 452, "centr": 452, "methodologi": [452, 562, 658], "smhi": 452, "swedish": 452, "hydrolog": 452, "institut": [452, 591, 662], "norrkop": 452, "suffix": 464, "tmp": 464, "dir": 464, "temporari": [464, 600], "my_cwd": 464, "getcwd": 464, "tmpdir": 464, "_": [464, 593, 597, 598, 611, 612, 645], "txt": [464, 600, 664], "wt": 464, "assert": [464, 600, 601, 665], "isfil": 464, "path_to_fil": 541, "local": [541, 592, 593, 597, 600, 601, 654, 664, 665], "without": [542, 556, 591, 594, 600, 664], "site": [542, 591, 593, 594, 595, 596, 597, 598, 606, 612, 641, 657, 660, 664], "oklahoma": [542, 597], "puls": [545, 594, 600, 658], "min_valu": 546, "max_valu": 546, "45": [546, 593, 601, 624, 633, 643, 644, 665], "grid_len": 546, "sigma": [546, 547, 632, 633], "mu": [546, 547], "masked_boundari": 546, "gaussian": [546, 547, 600, 632], "dp_phase_shift": [548, 641, 656], "diff_phas": [548, 656], "differential_reflect": [548, 611, 625, 632, 661, 662], "rectangular": [549, 550, 595, 600], "alia": [554, 555, 595, 600], "miscellan": 556, "depreci": [556, 600], "caution": [556, 640], "radian": [557, 559, 580, 591], "std": [559, 560, 577, 582], "convolut": 561, "ndimag": [561, 600, 632, 633], "generic_filt": 561, "pi": [561, 591, 658], "std_dev": 561, "azimuth_spread": 562, "spatial_spread": 562, "spatial_rang": 562, "sphere_dist": [562, 574], "for_azimuth": [562, 574], "get_sweep_rai": 562, "subset_field": 562, "assemble_column": 562, "murphi": 562, "columnar": 562, "cvp": [562, 600], "ic": [562, 632, 645], "situ": 562, "37": [562, 591, 594, 615, 619, 641, 644, 646, 661, 663], "1623": 562, "1642": 562, "jtech": 562, "0011": 562, "bukov\u010di\u0107": 562, "zrni\u0107": 562, "59": [562, 591, 594], "991": [562, 600], "1009": [562, 600], "19": [562, 591, 593, 594, 600, 646, 662], "0140": 562, "az_tol": 563, "radar_rhi": 563, "target_elev": 564, "el_tol": 564, "radar_ppi": 564, "epoch": [565, 566, 567, 568, 569, 591], "max_offset": 570, "running_win_dt": 570, "deg_rng": 570, "consider_2pi_jump": 570, "is_ppi": 570, "wise": 570, "could": [570, 595, 598, 601, 612, 665], "strategi": [570, 591], "might": [570, 592, 656, 667], "goe": [570, 595], "shot": 570, "navg": 571, "nnoise_min": 571, "hildebrand": [571, 600], "sehkon": 571, "1974": 571, "spectral": [571, 591, 594, 600], "articl": 571, "peak": [571, 594, 658], "var": [571, 586, 587, 591], "varianc": [571, 616], "nnois": 571, "sekhon": [571, 600], "808": 571, "811": [571, 600], "target_latitud": [572, 584], "target_longitud": [572, 584], "bear": [572, 593], "alongitudeg": 572, "great": [572, 584], "circl": [572, 584, 643], "known": [572, 600, 601, 662, 665], "6371000": [572, 584], "calculatitude": 572, "degress": [572, 584], "further": [574, 592, 594, 598], "get_column_rai": 574, "mute_field": [575, 624], "mute_threshold": [575, 624], "field_threshold": [575, 624], "discern": 575, "mute": [575, 600, 609, 620, 638, 643, 644, 663], "allen": [575, 624, 644], "5515": [575, 624, 644], "5525": [575, 624, 644], "interval_min": [576, 577], "interval_max": [576, 577], "endpoint": [576, 577], "to_vpt": 578, "90": [578, 591, 593, 594, 601, 665], "verticl": 578, "radar1": 579, "radar2": 579, "angles1": 580, "angles2": 580, "angle1": 581, "angle2": 581, "eg": 582, "ma": [582, 601, 615, 617, 640, 643, 644, 657, 661, 665], "interp_kind": 583, "sim_vel_field": 583, "kind": [583, 591, 598, 606], "slinear": 583, "quadrat": 583, "cubic": 583, "interp1d": [583, 601, 665], "sim_vel": [583, 601, 665], "rng_min": 585, "rng_max": 585, "ele_min": 585, "ele_max": 585, "azi_min": 585, "azi_max": 585, "coverag": [585, 591, 600, 601, 665], "11pt": 586, "stdev": 586, "texarrai": 586, "pyradarobj": 586, "tex": 587, "single_scan": 588, "is_vpt": 588, "mislabel": 588, "properli": [588, 601, 612, 665], "releas": [589, 596, 601, 604, 654, 657, 660, 664, 665], "post4": 589, "apr": 589, "guid": [589, 591, 592, 600, 654], "public": [589, 591, 595, 597, 598, 600, 601, 656, 657, 658, 660, 661, 662, 665], "broken": [589, 600], "aerosol": 591, "experi": 591, "depart": [591, 594, 595, 597, 656, 657, 658, 660, 661, 662], "energi": [591, 594, 595, 597, 656, 657, 658, 660, 661, 662], "iop": 591, "goal": 591, "studi": 591, "lifecycl": 591, "houston": [591, 611], "impact": [591, 597, 632], "uniqu": 591, "suit": [591, 600, 660], "seabreez": 591, "coast": [591, 595], "cleaner": [591, 661], "air": [591, 595, 598], "pollut": 591, "click": [591, 592, 598, 603], "post": [591, 593, 594, 595, 597, 598, 600, 603, 654], "overlai": 591, "texa": [591, 611], "lightn": 591, "csapr2": 591, "wildfir": 591, "smoke": 591, "entrain": 591, "juli": [591, 612], "we": [591, 593, 594, 595, 597, 598, 601, 604, 611, 612, 615, 621, 640, 641, 643, 644, 650, 656, 657, 658, 660, 661, 662, 664, 665, 666, 667], "highlight": [591, 592, 595], "minut": [591, 593, 594, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652], "pyart": [591, 593, 597, 598, 601, 603, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654, 656, 657, 658, 660, 661, 662, 664, 665, 667], "pyplot": [591, 592, 593, 594, 595, 597, 598, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 656, 657, 658, 660, 661], "plt": [591, 592, 593, 594, 595, 597, 598, 600, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 656, 657, 658, 660, 661], "xr": [591, 594], "s3f": 591, "ccr": [591, 593, 595, 597, 598, 611, 612, 615, 616, 622, 623, 629, 636, 641, 643, 644, 650, 657, 658, 661], "panda": [591, 594, 597, 600, 667], "pd": [591, 593, 594, 597], "kdtree": 591, "inlin": [591, 632, 633], "download": [591, 592, 594, 595, 598, 600, 601, 606, 607, 609, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654, 665, 667], "longwav": 591, "ensur": [591, 593, 600, 644], "c13": 591, "denot": [591, 616], "anonym": [591, 593], "credenti": 591, "s3filesystem": 591, "day_no": 591, "168": 591, "dai": [591, 597], "16th": 591, "leap": 591, "hour": [591, 595, 597, 611, 612], "goes16": 591, "abi": 591, "l1b": 591, "radc": 591, "02d": 591, "fi": 591, "or_abi": 591, "m6c13_g16_s20221682001178_e20221682003562_c20221682004026": 591, "m6c13_g16_s20221682006178_e20221682008562_c20221682009028": 591, "m6c13_g16_s20221682011178_e20221682013562_c20221682014023": 591, "m6c13_g16_s20221682016178_e20221682018562_c20221682019019": 591, "m6c13_g16_s20221682021178_e20221682023563_c20221682024031": 591, "m6c13_g16_s20221682026178_e20221682028562_c20221682029025": 591, "m6c13_g16_s20221682031178_e20221682033562_c20221682034018": 591, "m6c13_g16_s20221682036178_e20221682038562_c20221682039022": 591, "m6c13_g16_s20221682041178_e20221682043562_c20221682044024": 591, "m6c13_g16_s20221682046178_e20221682048562_c20221682049023": 591, "m6c13_g16_s20221682051178_e20221682053562_c20221682054018": 591, "m6c13_g16_s20221682056178_e20221682058562_c20221682059029": 591, "goes_d": 591, "open_dataset": [591, 594], "m6c13_g16_s20221932006173_e20221932008557_c20221932009023": 591, "lt": [591, 594], "gt": [591, 594], "1500": [591, 656], "2500": 591, "number_of_time_bound": 591, "number_of_image_bound": 591, "num_star_look": 591, "datetime64": [591, 594, 641], "07": [591, 593, 594, 612, 624, 638, 643, 644, 662, 663], "1282": 591, "1013": 591, "y_imag": 591, "08624": 591, "x_imag": 591, "03136": 591, "band_id": 591, "int8": 591, "band_wavelength": 591, "33": [591, 594, 595, 644, 662], "t_star_look": 591, "band_wavelength_star_look": 591, "rad": [591, 594], "dqf": 591, "time_bound": 591, "goes_imager_project": 591, "int32": [591, 662], "2147483647": 591, "y_image_bound": 591, "x_image_bound": 591, "algorithm_dynamic_input_data_contain": 591, "processing_parm_version_contain": 591, "algorithm_product_version_contain": 591, "star_id": 591, "channel_integration_tim": 591, "336": [591, 600], "channel_gain_field": 591, "naming_author": 591, "nesdi": 591, "standard_name_vocabulari": 591, "v35": 591, "commerc": 591, "production_sit": 591, "wcda": 591, "timeline_id": 591, "date_cr": 591, "12t20": 591, "09": [591, 593, 598, 613, 638, 643, 644, 663], "3z": 591, "time_coverage_start": [591, 656, 662], "time_coverage_end": [591, 656], "08": [591, 608, 663], "7z": 591, "lut_filenam": 591, "spacelookparam": 591, "fm1a_cdrl79revp_pr_09_00_02": 591, "f45b564c": 591, "dcb9": 591, "498a": 591, "ac56": 591, "da80a1d735a5xarrai": 591, "datasetdimens": [591, 594], "1500x": 591, "2500number_of_time_bound": 591, "2number_of_image_bound": 591, "2band": 591, "1num_star_look": 591, "24coordin": 591, "j2000": 591, "mid": 591, "secondsstandard_nam": 591, "timeaxi": 591, "tbound": 591, "time_boundsarrai": 591, "x27": [591, 594], "537394048": 591, "float640": 591, "04432": 591, "04427unit": 591, "radaxi": 591, "ylong_nam": 591, "coordinatestandard_nam": 591, "projection_y_coordinatearrai": 591, "128212": 591, "128156": 591, "1281": 591, "04438": 591, "044324": 591, "044268": 591, "03856": 591, "03861unit": 591, "xlong_nam": 591, "projection_x_coordinatearrai": 591, "101332": 591, "101276": 591, "10122": 591, "0385": 591, "038556": 591, "038612": 591, "imagestandard_nam": 591, "projection_y_coordinateunit": 591, "yarrai": 591, "projection_x_coordinateunit": 591, "numberstandard_nam": 591, "sensor_band_identifierunit": 591, "1arrai": [591, 594], "central": [591, 593, 597], "wavelengthstandard_nam": 591, "sensor_band_central_radiation_wavelengthunit": 591, "umarrai": 591, "star": 591, "tarrai": 591, "01t11": 591, "43": [591, 594, 597, 663], "000000000": [591, 594], "starstandard_nam": 591, "radiancesstandard_nam": 591, "toa_outgoing_radiance_per_unit_wavenumbersensor_band_bit_depth": 591, "12valid_rang": 591, "4094": 591, "mw": 591, "cm": [591, 633], "1resolut": 591, "000056": 591, "radgrid_map": 591, "goes_imager_projectioncell_method": 591, "pointancillary_vari": 591, "3750000": 591, "radianc": 591, "flagsstandard_nam": 591, "status_flagvalid_rang": 591, "1grid_map": 591, "pointflag_valu": 591, "flag_mean": 591, "good_pixel_qf": 591, "conditionally_usable_pixel_qf": 591, "out_of_range_pixel_qf": 591, "no_value_pixel_qf": 591, "focal_plane_temperature_threshold_exceeded_qfnumber_of_qf_valu": 591, "5percent_good_pixel_qf": 591, "0percent_conditionally_usable_pixel_qf": 591, "0percent_out_of_range_pixel_qf": 591, "0percent_no_value_pixel_qf": 591, "0percent_focal_plane_temperature_threshold_exceeded_qf": 591, "00": [591, 593, 594, 597, 598, 600, 608, 613, 619, 638, 647, 648, 653, 663], "326423040": 591, "748365056": 591, "projectiongrid_mapping_nam": 591, "geostationaryperspective_point_height": 591, "35786023": 591, "0semi_major_axi": 591, "6378137": 591, "0semi_minor_axi": 591, "6356752": 591, "31414inverse_flatten": 591, "298": 591, "2572221latitude_of_projection_origin": 591, "0longitude_of_projection_origin": 591, "0sweep_angle_axi": 591, "south": [591, 595, 625], "extent": [591, 593, 594, 597, 616, 618], "imageunit": 591, "radarrai": 591, "12824": 591, "04424": 591, "10136": 591, "03864": 591, "nominal_satellite_subpoint_lat": 591, "nomin": 591, "subpoint": 591, "standard_nam": [591, 643, 644, 657, 662], "latitudeunit": [591, 594], "degrees_northarrai": 591, "nominal_satellite_subpoint_lon": 591, "longitudeunit": [591, 594], "degrees_eastarrai": 591, "199997": 591, "nominal_satellite_height": 591, "gr": 591, "80": [591, 593, 607, 636, 642], "ellipsoid": 591, "height_above_reference_ellipsoidunit": 591, "kmarrai": 591, "35786": 591, "023438": 591, "geospatial_lat_lon_ext": 591, "geospati": 591, "referencesgeospatial_westbound_longitud": 591, "152": [591, 644], "10928geospatial_northbound_latitud": 591, "56": [591, 594, 646], "76145geospatial_eastbound_longitud": 591, "94688geospatial_southbound_latitud": 591, "14": [591, 594, 595, 597, 598, 611, 612, 613, 621, 623, 650, 662, 663], "57134geospatial_lat_cent": 591, "083002geospatial_lon_cent": 591, "096954geospatial_lat_nadir": 591, "0geospatial_lon_nadir": 591, "0geospatial_lat_unit": 591, "degrees_northgeospatial_lon_unit": 591, "96921e": 591, "yaw_flip_flag": 591, "spacecraft": 591, "yaw": 591, "flip": 591, "configurationvalid_rang": 591, "1flag_valu": 591, "truearrai": 591, "esun": 591, "bandpass": 591, "solar": 591, "irradi": 591, "sun": 591, "distancestandard_nam": 591, "toa_shortwave_irradiance_per_unit_wavelengthunit": 591, "um": 591, "1cell_method": 591, "meanarrai": 591, "kappa0": 591, "incom": 591, "d2": 591, "instantan": [591, 600], "divid": 591, "reflectanceunit": 591, "planck_fk1": 591, "wavenumb": 591, "c2": 591, "nu3": 591, "emiss": 591, "monochromat": 591, "nu": 591, "constantsunit": 591, "10803": 591, "299805": 591, "planck_fk2": 591, "karrai": 591, "1392": [591, 600], "73999": 591, "planck_bc1": 591, "bc_1": 591, "bc_2": 591, "planck_funct": 591, "wavenumberunit": 591, "0755": 591, "planck_bc2": 591, "99975": 591, "valid_pixel_count": 591, "condition": 591, "pixelsunit": 591, "countgrid_map": 591, "sum": [591, 599, 640], "comment": [591, 592, 633, 662], "3702838": 591, "missing_pixel_count": 591, "saturated_pixel_count": 591, "satur": 591, "radiometr": 591, "geoloc": 591, "undersaturated_pixel_count": 591, "undersatur": 591, "focal_plane_temperature_threshold_exceeded_count": 591, "exceed": 591, "thresholdunit": 591, "min_radiance_value_of_valid_pixel": 591, "pixelsstandard_nam": 591, "toa_outgoing_radiance_per_unit_wavenumbervalid_rang": 591, "6443": 591, "185": 591, "5699": 591, "849287": 591, "max_radiance_value_of_valid_pixel": 591, "154": [591, 629], "23053": 591, "mean_radiance_value_of_valid_pixel": 591, "197975": 591, "std_dev_radiance_value_of_valid_pixel": 591, "toa_outgoing_radiance_per_unit_wavenumberunit": 591, "standard_devi": 591, "985853": 591, "maximum_focal_plane_temperatur": 591, "focal": 591, "valuevalid_rang": 591, "951939": 591, "focal_plane_temperature_threshold_increas": 591, "bound": [591, 594, 644], "81": [591, 593, 662], "focal_plane_temperature_threshold_decreas": 591, "decreas": [591, 640], "percent_uncorrectable_l0_error": 591, "percent": 591, "l0": 591, "errorsvalid_rang": 591, "percentgrid_map": 591, "earth_sun_distance_anomaly_in_au": 591, "anomali": [591, 644], "astronom": 591, "unitsunit": 591, "uacell_method": 591, "016543": 591, "datainput_abi_l0_data": 591, "m6_g16_s20221932006173_e20221932008557_c": 591, "ncarrai": 591, "filenamesl1b_processing_parm_vers": 591, "parm": 591, "rad_g16_v01r00": 591, "ziparrai": 591, "packag": [591, 592, 593, 594, 595, 597, 598, 600, 601, 606, 612, 654, 657, 660, 664, 665, 667], "versionalgorithm_vers": 591, "alg": 591, "rad_v01r00": 591, "zipproduct_vers": 591, "v01r00arrai": 591, "stararrai": 591, "vnir": 591, "ir": 591, "telemetryunit": 591, "countarrai": 591, "gain": [591, 594], "noaaconvent": 591, "7standard_name_vocabulari": 591, "administr": [591, 595, 611], "servicesproject": 591, "goesproduction_sit": 591, "wcdasproduction_environ": 591, "oespatial_resolut": 591, "2km": 591, "nadirmetadata_convent": 591, "discoveri": [591, 598], "0orbital_slot": 591, "eastplatform_id": 591, "g16instrument_typ": 591, "baselin": 591, "scene_id": 591, "conusinstrument_id": 591, "fm1titl": 591, "radiancessummari": 591, "digit": 591, "outgo": 591, "engin": 591, "radiancekeywords_vocabulari": 591, "nasa": 591, "master": [591, 600, 603, 633], "gcmd": 591, "scienc": [591, 595, 597, 656, 657, 658, 660, 661, 662], "0iso_series_metadata_id": 591, "a70be540": 591, "c38b": 591, "11e0": 591, "962b": 591, "0800200c9a66licens": 591, "restrict": 591, "approv": 591, "processing_level": 591, "aeronaut": 591, "l1bcdm_data_typ": 591, "imagedataset_nam": 591, "ncproduction_data_sourc": 591, "realtimetimeline_id": 591, "6date_cr": 591, "3ztime_coverage_start": 591, "3ztime_coverage_end": 591, "7zlut_filenam": 591, "637827000": 591, "h5": [591, 600], "qtableband13": 591, "fm1a_cdrl79revh_do_08_00_00": 591, "582860861": 591, "caltargettimeinterv": 591, "fm1a_cdrl79revp_do_08_00_01": 591, "611906620": 591, "bandsaturationlimit": 591, "600000000": 591, "solarspacelookparam": 591, "fm1a_adr1233_pr_09_08_25": 591, "709281036": 591, "deadrowlistparam": 591, "mirror_record": 591, "fm1a_cdrl79revg_do_07_00_00": 591, "kalmanastroconst": 591, "xml": [591, 597], "kalmanfiltercontrol": 591, "fm1a_pr_09_08_02": 591, "677650371": 591, "kalmanmeasmaxsens": 591, "fmaa_int_only_do_09_01_00": 591, "652936814": 591, "kalmanpreprocessorcontrol": 591, "fm1a_cdrl79revj_pr_09_06_02": 591, "657795700": 591, "kalmanreferencedata": 591, "888": 591, "kalmanstarcatalog": 591, "abi_navigationrdp_band13": 591, "fm1a_cdrl79revj_do_07_00_00": 591, "abi_navigationparameters_band13": 591, "fm1a_cdrl79revh_do_07_00_00": 591, "abi_resamplingimplementation_band13": 591, "fm1a_cdrl79revh_do_07_02_00": 591, "602129336": 591, "abi_resamplingparameters_band13": 591, "starlookparam": 591, "stardetectionparam": 591, "resamplingscaledconvers": 591, "fmaa_int_only_do_08_00_00": 591, "1111": [591, 594, 600], "blockreleaseregion": 591, "2222": 591, "csv": [591, 593], "ir_retrievalparamet": 591, "fm1a_cdrl79revh_do_09_01_00": 591, "652936750": 591, "radiancelut_band13": 591, "fm1a_cdrl79reve_do_08_00_00": 591, "ict_record": 591, "fm1a_tmabi_18_159_pr_09_00_02": 591, "icm_conversionconst": 591, "fm1a_cdrl43": 591, "18_do_09_01_00": 591, "icm_sensorcoeffici": 591, "fm1a_tmabi_18_159_tmabi_18_533_do_09_05_00": 591, "676949608": 591, "h5id": 591, "da80a1d735a5": 591, "team": 591, "bobbi": [591, 615], "jackson": [591, 615], "pug": 591, "l2": [591, 600], "file_id": 591, "def": [591, 593, 597, 600, 601, 621, 644, 665], "calculate_degre": 591, "x_coordinate_1d": 591, "y_coordinate_1d": 591, "projection_info": 591, "lon_origin": 591, "attr": 591, "longitude_of_projection_origin": 591, "perspective_point_height": 591, "semi_major_axi": 591, "r_eq": 591, "r_pol": 591, "semi_minor_axi": 591, "matric": 591, "x_coordinate_2d": 591, "y_coordinate_2d": 591, "meshgrid": [591, 615, 640], "lambda_0": 591, "a_var": 591, "b_var": 591, "c_var": 591, "r_": 591, "s_x": 591, "s_y": 591, "s_z": 591, "conu": 591, "seterr": 591, "abi_lat": 591, "arctan": 591, "abi_lon": 591, "crop": 591, "our": [591, 593, 596, 611, 612, 615, 621, 622, 641, 643, 644, 650, 654], "interest": [591, 593, 594, 595, 597, 598, 615, 643], "circ": 591, "95": [591, 593, 641, 662], "nan_to_num": 591, "9999": [591, 662], "lat_rang": 591, "lon_rang": 591, "lat_min": 591, "lat_max": 591, "lat_min_bound": 591, "argmin": 591, "ab": 591, "lat_max_bound": 591, "lon_min": 591, "lon_max": 591, "lon_min_bound": 591, "lon_max_bound": 591, "a1": [591, 594, 598, 629], "disoveri": 591, "toolkit": [591, 594, 595, 597, 598, 656, 657, 658, 660, 661, 662], "5439": [591, 594, 598], "1467901": 591, "page": [591, 596, 600, 603], "autom": [591, 597, 598], "catalogu": 591, "adam": [591, 600], "theisen": 591, "geometri": [591, 597, 600], "cell_track_info": 591, "read_csv": [591, 593], "raw": [591, 606, 607, 616], "githubusercont": 591, "com": [591, 601, 612, 633, 664, 665, 667], "adamtheisen": [591, 600], "cell": [591, 598, 600, 632, 651], "stat": [591, 600], "houcsapr": 591, "20220617": 591, "index_col": 591, "parse_d": 591, "unnam": 591, "scan_mod": [591, 594, 600], "scan_nam": [591, 594, 600], "template_nam": 591, "azimuth_min": 591, "azimuth_max": 591, "elevation_min": 591, "elevation_max": 591, "range_min": 591, "range_max": 591, "cell_azimuth": 591, "cell_rang": 591, "cell_zh": 591, "ngates_gt_0": 591, "ngates_gt_10": 591, "ngates_gt_30": 591, "ngates_gt_50": 591, "ngates_gt_10_5km": 591, "ngates_gt40_5km": 591, "03": [591, 594, 611, 638, 647, 653, 663], "hou": 591, "303": [591, 600], "74450": 591, "637207": 591, "383545": 591, "109900": 591, "297": 591, "59216": 591, "307": [591, 600], "63367": 591, "021240": 591, "988037": 591, "910767": 591, "700": [591, 594, 597, 600], "930866": 591, "78": 591, "302": 591, "64587": 591, "645874": 591, "1800": [591, 593, 656], "776333": 591, "55798": 591, "59094": 591, "97546": 591, "99744": 591, "975464": 591, "900": [591, 656], "972101": 591, "46": [591, 641], "2826": 591, "301": [591, 600], "48132": 591, "50330": 591, "648193": 591, "382324": 591, "503296": 591, "62400": 591, "327583": 591, "990": 591, "989": [591, 600], "210": [591, 644], "995": [591, 600], "2827": 591, "305": [591, 600], "70007": 591, "404297": 591, "700073": 591, "13600": 591, "29": [591, 594], "037998": 591, "2828": 591, "23510": 591, "26807": 591, "235107": 591, "459156": 591, "2829": 591, "296": [591, 600], "08704": 591, "306": [591, 600], "16150": 591, "999268": 591, "998291": 591, "646362": 591, "59100": 591, "882927": 591, "807": 591, "783": [591, 600], "27": [591, 595, 641], "63": [591, 662], "830": 591, "2830": 591, "05835": 591, "08032": 591, "058350": 591, "62800": 591, "198204": 591, "767": [591, 600], "76": 591, "773": [591, 600], "2831": 591, "notebook": [591, 593, 594, 599, 600, 606, 607, 609, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 657, 660, 661, 667], "much": [591, 593, 594, 595, 597, 598, 600, 640, 658, 660, 661], "frequent": 591, "start_hour": 591, "end_hour": 591, "utc": [591, 593, 594, 595, 598, 611, 612, 635], "48": [591, 593, 618], "04": [591, 594, 597, 638, 641, 647, 653, 663], "26": 591, "38": [591, 594, 612], "57": [591, 607, 608, 643, 644, 663], "rjackson": [591, 615], "paw": 591, "houcsapr2cfrs2": 591, "20220712": 591, "200714": 591, "easili": [591, 597], "eol": 591, "cgi": 591, "codiac": 591, "fgr_form": 591, "016": 591, "densiti": [591, 645], "lma_d": 591, "lylout_220712_000000_86400_map500m": 591, "afternoon": 591, "203229": 591, "lylout_220617_000000_86400_map500m": 591, "radarmapdisplai": [591, 593, 597, 598, 600, 611, 612, 615, 623, 629, 641, 650, 652, 656, 657, 658, 660, 661], "subplot": [591, 593, 594, 595, 597, 598, 600, 611, 615, 621, 622, 623, 635, 640, 641, 642, 643, 644, 645, 646, 650, 658], "subplot_kw": 591, "disp": 591, "graph": [591, 592, 593, 594, 595, 597, 598, 600, 606, 607, 611, 612, 615, 616, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 650, 651, 652, 656, 657, 658, 660, 661], "150": [591, 592, 628, 658], "plot_ppi_map": [591, 593, 597, 598, 600, 611, 612, 615, 623, 629, 641, 650, 657, 658, 661], "flash_tim": 591, "squeez": [591, 656], "argwher": [591, 615], "logical_and": [591, 615], "flash_time_start": 591, "17t20": 591, "scatter": [591, 593, 597, 598, 622, 641], "flash_center_longitud": 591, "flash_center_latitud": 591, "set_xlim": [591, 636, 640, 645], "96": [591, 593, 594, 615, 654, 661], "94": [591, 662], "set_ylim": [591, 636, 640, 645], "deprecationwarn": [591, 660], "escap": 591, "sequenc": [591, 595], "xf": 591, "43jvg_v90fx7z1sj2j1v8h0w0000gn": 591, "ipykernel_41252": 591, "2371313213": 591, "opt": [591, 592, 594, 595, 600], "anaconda3": [591, 594, 595, 654, 657, 660, 664, 667], "env": [591, 592, 594, 595, 597, 598, 600, 606, 612, 654, 657, 660, 667], "pyart_env2": 591, "lib": [591, 594, 595, 597, 598, 606, 612, 657, 660, 664], "python3": [591, 594, 595, 597, 598, 599, 606, 612], "mpl": [591, 600, 645, 657, 660], "gridlin": [591, 595, 597, 623], "451": [591, 594], "userwarn": [591, 598, 606, 612], "xlabels_top": [591, 595], "deprec": [591, 595, 603, 657, 660], "top_label": [591, 597, 623], "toggl": [591, 600], "visibl": [591, 595, 600], "ylabels_right": [591, 595], "right_label": [591, 597, 623], "strike": 591, "overlaid": 591, "csapr_rhi": 591, "203012": 591, "flash_alt": 591, "flash_init_altitud": 591, "flash_lon": 591, "flash_init_longitud": 591, "flash_lat": 591, "flash_init_latitud": 591, "rhi_lon": 591, "flatten": [591, 615], "rhi_lat": 591, "rhi_alt": 591, "kdtree_data": 591, "stack": [591, 594, 597, 601, 664, 665], "inp_data": 591, "where_in_rhi": 591, "flash_rang": 591, "1e3": 591, "motiv": [592, 595], "blog": [592, 597, 600, 601, 665], "come": [592, 595, 643], "colorschem": 592, "vision": 592, "defici": 592, "illustr": 592, "collabor": 592, "contributor": [592, 603, 654, 666], "guidenc": 592, "ve": 592, "trip": [592, 661], "me": 592, "assist": 592, "https_link_to_your_fork": 592, "unfamiliar": 592, "yml": [592, 600, 654, 667], "slightli": [592, 595, 623], "latest": [592, 600, 601, 654, 665], "button": [592, 596, 603], "kshrc": 592, "export": [592, 664, 667], "pip": [592, 601, 664, 665, 667], "checkout": [592, 601, 603, 665], "newblog_post": 592, "plot_ppi_mdv": [592, 628, 638, 663], "radardisplai": [592, 593, 594, 598, 600, 606, 607, 616, 621, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 640, 642, 645], "jonathan": [592, 606, 607, 617, 618, 625, 626, 628, 630, 634, 637, 667], "helmu": [592, 595, 597, 601, 606, 607, 617, 618, 625, 626, 628, 630, 634, 637, 654, 656, 657, 658, 660, 661, 662, 665, 667], "jhelmu": [592, 600, 606, 607, 617, 618, 625, 626, 628, 630, 634, 637], "anl": [592, 606, 607, 611, 612, 615, 617, 618, 621, 622, 623, 625, 626, 627, 628, 630, 632, 633, 634, 635, 637, 641, 642, 650, 651, 652], "licens": [592, 601, 606, 607, 611, 612, 615, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654, 665], "bsd": [592, 601, 606, 607, 611, 612, 615, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654, 665], "claus": [592, 601, 606, 607, 611, 612, 615, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 665], "get_test_data": [592, 606, 607, 615, 617, 618, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 650, 651, 652], "110635": [592, 617, 628, 660], "figsiz": [592, 593, 594, 595, 597, 598, 606, 607, 611, 612, 615, 616, 621, 622, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 640, 642, 643, 644, 645, 650, 657, 658, 660, 661], "add_subplot": [592, 606, 607, 616, 617, 618, 625, 626, 627, 628, 630, 631, 632, 633, 634, 637], "111": [592, 593, 595, 598, 615, 617, 618, 623, 626, 627, 628, 632, 633, 634, 641], "get_cmap": [592, 624, 643, 644], "jet": 592, "colorbind": 592, "pyart_homeyerrainbow": [592, 594, 615, 621, 622, 623, 628, 631, 635, 636, 642], "plot_rhi_cfradial_singlescan": [592, 631, 638, 663], "panel": [592, 598, 609, 620, 638, 640, 663], "sgpxsaprrhicmaci5": [592, 630, 631, 635, 640], "c0": [592, 606, 630, 631, 635, 640, 657], "20110524": [592, 630, 631, 635, 640], "015604_nc4": [592, 630, 631, 635, 640], "read_cfradi": [592, 606, 615, 618, 622, 630, 631, 635, 640, 645, 646], "subplots_adjust": [592, 594, 621, 630, 631], "hspace": [592, 594, 630, 631], "xlabel": [592, 594, 615, 630, 631, 658], "ylabel": [592, 594, 615, 630, 631, 658], "stage": 592, "my": [592, 664], "untrack": [592, 601, 665], "blog_pr": 592, "restor": 592, "discard": 592, "_static": 592, "As": [592, 594, 601, 656, 658, 660, 661, 665], "statement": [592, 600, 601, 665], "hint": [592, 595, 602], "wait": [592, 595], "editor": [592, 599, 601, 665, 667], "enh": [592, 600], "abort": 592, "person": 592, "addition": [592, 595], "anyon": 592, "respond": 592, "walk": [593, 594, 597, 598, 599], "septemb": 593, "2021": [593, 643, 644], "thunderstorm": 593, "southern": 593, "wisconsin": [593, 600], "illinoi": 593, "trail": 593, "damag": [593, 597], "milwauke": [593, 597], "madison": 593, "imageri": [593, 597], "russ": 593, "schumach": 593, "colorado": 593, "unvers": 593, "put": 593, "togeth": [593, 594, 595, 600], "hi": [593, 644], "glob": [593, 594, 597, 598, 601, 665], "math": 593, "atan2": 593, "tempfil": 593, "cfeatur": [593, 595, 597, 598], "mcolor": [593, 595, 624, 643, 644], "mdate": 593, "uscounti": [593, 597], "imageio": 593, "pytz": [593, 600], "temploc": 593, "mkdtemp": 593, "filterwarn": [593, 594, 595, 597, 615], "let": [593, 594, 595, 596, 598, 600, 601, 611, 612, 615, 621, 623, 640, 641, 643, 644, 650, 656, 658, 660, 661, 662, 665, 667], "machin": [593, 594, 597, 598, 667], "kmkx": [593, 597], "nexrad_path": 593, "level2": [593, 597, 600, 611, 612, 624, 643, 644], "d_": 593, "kmkx20210907_170101_v06": 593, "kmkx20210907_170739_v06": 593, "kmkx20210907_171431_v06": 593, "kmkx20210907_172123_v06": 593, "kmkx20210907_172814_v06": 593, "kmkx20210907_173452_v06": 593, "kmkx20210907_174130_v06": 593, "kmkx20210907_174807_v06": 593, "kmkx20210907_175459_v06": 593, "kmkx20210907_175459_v06_mdm": 593, "read_nexrad_arch": [593, 597, 611, 612, 624, 625, 626, 643, 644], "possibli": 593, "add_featur": [593, 595, 597, 598], "pyart_chasespectr": [593, 597, 598, 651, 652], "70": [593, 594, 597, 611, 615, 622, 652], "set_ext": 593, "easier": [593, 594, 595], "scroll": 593, "radar_id": 593, "timestamp": [593, 594], "tz_local": 593, "later": [593, 595, 657, 660], "interfac": [593, 598, 600], "conn": 593, "nexradawsinterfac": 593, "get_avail_scans_in_rang": 593, "len": [593, 621, 635, 645, 656], "kmkx20210907_151132_v06": 593, "kmkx20210907_152621_v06": 593, "kmkx20210907_150152_v06": 593, "kmkx20210907_151622_v06": 593, "kmkx20210907_152121_v06": 593, "kmkx20210907_150642_v06": 593, "kmkx20210907_155424_v06_mdm": 593, "kmkx20210907_153610_v06": 593, "kmkx20210907_154814_v06": 593, "kmkx20210907_155424_v06": 593, "kmkx20210907_154205_v06": 593, "kmkx20210907_160034_v06": 593, "kmkx20210907_160607_v06": 593, "kmkx20210907_161141_v06": 593, "kmkx20210907_163532_v06": 593, "kmkx20210907_161714_v06": 593, "kmkx20210907_162924_v06": 593, "kmkx20210907_164816_v06": 593, "kmkx20210907_165433_v06": 593, "kmkx20210907_165433_v06_mdm": 593, "kmkx20210907_162247_v06": 593, "kmkx20210907_153134_v06": 593, "kmkx20210907_164149_v06": 593, "kmkx20210907_182057_v06": 593, "kmkx20210907_182749_v06": 593, "kmkx20210907_184048_v06": 593, "kmkx20210907_180841_v06": 593, "kmkx20210907_183440_v06": 593, "kmkx20210907_185431_v06_mdm": 593, "kmkx20210907_181448_v06": 593, "kmkx20210907_180150_v06": 593, "kmkx20210907_185431_v06": 593, "kmkx20210907_190109_v06": 593, "kmkx20210907_190703_v06": 593, "kmkx20210907_193238_v06": 593, "kmkx20210907_191951_v06": 593, "kmkx20210907_191327_v06": 593, "kmkx20210907_195642_v06": 593, "kmkx20210907_194459_v06": 593, "kmkx20210907_195642_v06_mdm": 593, "kmkx20210907_193849_v06": 593, "kmkx20210907_184739_v06": 593, "kmkx20210907_192614_v06": 593, "kmkx20210907_195056_v06": 593, "now": [593, 594, 595, 597, 598, 600, 612, 615, 616, 621, 623, 641, 643, 644, 650, 656, 658, 664], "predict": 593, "tornado": [593, 597], "offic": [593, 595, 597, 656, 657, 658, 660, 661, 662], "acces": 593, "internet": 593, "wcm": 593, "2021_wind": 593, "read_spc_report": 593, "start_tim": 593, "end_tim": 593, "hazard": 593, "timezon": 593, "gmt": 593, "torn": 593, "df": 593, "datafram": 593, "conver": 593, "to_datetim": [593, 594, 597], "set_index": 593, "inplac": 593, "ambigu": 593, "nat": 593, "nonexist": 593, "shift_forward": 593, "tz_convert": 593, "timedelta": [593, 597], "wind_report": 593, "tornado_report": 593, "hail_report": 593, "om": 593, "yr": 593, "mo": 593, "st": 593, "stf": 593, "stn": 593, "elon": 593, "wid": 593, "sn": 593, "sg": 593, "f1": 593, "f2": 593, "f3": 593, "f4": 593, "657521": 593, "tx": 593, "7500": [593, 656], "331": [593, 600], "657522": 593, "4300": 593, "657523": 593, "0500": 593, "167": 593, "657524": 593, "0200": 593, "657525": 593, "1595": 593, "663777": 593, "sc": 593, "0100": [593, 598], "663778": 593, "663779": 593, "2200": 593, "663780": 593, "1900": 593, "49": [593, 594, 638], "663781": 593, "1100": [593, 600], "6261": 593, "gc_latlon_bear_dist": 593, "lat1": 593, "lon1": 593, "decim": 593, "lat2": 593, "lon2": 593, "lat1r": 593, "deg2rad": 593, "lon1r": 593, "bearr": 593, "lat2r": 593, "lon2r": 593, "rad2deg": [593, 646], "add_scale_lin": 593, "fontsiz": [593, 594, 595, 598, 606, 607, 621, 623, 632, 633], "fontweight": 593, "zoom": [593, 594], "black": [593, 600, 622, 640, 641], "frac_lat": 593, "frac_lon": 593, "e1": 593, "get_ext": 593, "center_lon": 593, "center_lat": 593, "shorten": 593, "hash": [593, 603], "lat1a": 593, "lon1a": 593, "lat1b": 593, "lon1b": 593, "lat2a": 593, "lon2a": 593, "lat2b": 593, "lon2b": 593, "horizontalalign": 593, "verticalalign": 593, "enumer": 593, "iter_success": 593, "mdm": 593, "this_tim": 593, "open_pyart": 593, "map_panel_ax": [593, 636], "x_cut_panel_ax": [593, 636], "y_cut_panel_ax": [593, 636], "masking_data_with_gatefilt": [593, 600], "ax1": [593, 594, 598, 606, 607, 622, 636, 637, 640, 643, 644, 650], "add_ax": [593, 636], "recogniz": 593, "with_scal": 593, "500k": 593, "grai": [593, 595, 597, 623, 624, 640], "plot_colorbar": 593, "pad": 593, "plot_range_r": [593, 600, 616, 626, 627, 629], "dash": [593, 595, 633], "set_xtick": [593, 640, 657, 660], "arang": [593, 598, 601, 615, 629, 632, 633, 640, 641, 645, 646, 665], "set_ytick": [593, 640, 657, 660], "wind_reports_now": 593, "slon": 593, "tolist": 593, "slat": 593, "facecolor": [593, 595, 597], "deepskyblu": 593, "tornado_reports_now": 593, "tab": [593, 603, 622], "red": [593, 632, 633], "hail_reports_now": 593, "lawngreen": 593, "legend": [593, 597, 598, 622], "savefig": [593, 595, 597], "_dz_rpt": 593, "bbox_inch": 593, "tight": 593, "white": [593, 595, 632], "mp4": 593, "map_imag": 593, "gif_titl": 593, "delet": [593, 600, 601, 623, 665], "gif": 593, "get_writ": 593, "fp": 593, "writer": [593, 600], "imread": 593, "append_data": 593, "ffmpeg_writ": 593, "divis": [593, 600], "macro_block_s": 593, "resiz": 593, "1930": 593, "1766": 593, "1936": 593, "1776": 593, "video": 593, "codec": 593, "player": 593, "incompat": [593, 600, 604], "ipython": [593, 597, 599, 667], "browser": 593, "event": [593, 598, 643, 644], "overview": [593, 596, 603], "retrospect": 593, "ecosystem": 594, "By": [594, 595, 598, 604], "learn": [594, 654], "portal": [594, 595], "march": [594, 597, 611], "shown": [594, 621], "offici": [594, 601, 665], "probe": 594, "millimet": 594, "ghz": 594, "purpos": [594, 595, 643, 644], "nearli": [594, 632], "bokeh": 594, "formatt": 594, "datetimetickformatt": 594, "hv": 594, "guckazrcfrgem1": 594, "20220314": 594, "000003": 594, "0x7f7dbd517400": 594, "linear_depolarization_ratio": 594, "mean_doppler_velocity_crosspolar_v": 594, "reflectivity_crosspolar_v": 594, "signal_to_noise_ratio_copolar_h": [594, 598], "signal_to_noise_ratio_crosspolar_v": 594, "spectral_width": 594, "spectral_width_crosspolar_v": 594, "vertical": 594, "awai": [594, 595], "pyart_bal": [594, 595, 598, 615, 635, 650, 658], "substanti": 594, "211": [594, 637], "ax2": [594, 598, 606, 607, 615, 622, 636, 637, 640, 642, 643, 644, 650, 658], "212": [594, 637], "pangeo": 594, "1736": 594, "600": [594, 656], "r_calib": 594, "14t00": 594, "489e": 594, "806e": 594, "107": 594, "886e": 594, "command_lin": 594, "kazrcfr_ingest": 594, "guc": 594, "m1": 594, "process_vers": 594, "kazrcfr": 594, "el7": 594, "dod_vers": 594, "kazrcfrg": 594, "input_sourc": 594, "guckazrm1": 594, "kazr_moments_": 594, "site_id": 594, "software_vers": 594, "wed": 594, "mar": 594, "leachman": 594, "1498936": 594, "histori": [594, 662], "dsmgr": 594, "procnode2": 594, "1736rang": 594, "600frequenc": 594, "1sweep": 594, "1r_calib": 594, "1coordin": 594, "453818": 594, "startstandard_nam": 594, "timearrai": 594, "453818000": 594, "527426000": 594, "601027000": 594, "002026000": 594, "075634000": 594, "149219000": 594, "float323": 594, "10long_nam": 594, "transmit": [594, 658], "frequencyunit": 594, "hzstandard_nam": 594, "radiation_frequencymeta_group": 594, "instrument_parametersarrai": 594, "float32100": 594, "130": [594, 616, 619, 663], "803e": 594, "04long_nam": 594, "volumeunit": 594, "mmeters_between_g": 594, "979246meters_to_center_of_first_g": 594, "679245spacing_is_const": 594, "truestandard_nam": 594, "projection_range_coordinateaxi": 594, "radial_range_coordinatearrai": 594, "679245": 594, "6585": 594, "160": [594, 646, 660], "63774": 594, "17998": 594, "18028": 594, "268": 594, "18058": 594, "248": 594, "northunit": 594, "degreestandard_nam": 594, "sensor_to_target_azimuth_angleaxi": 594, "radial_azimuth_coordinatearrai": 594, "planeunit": 594, "sensor_to_target_elevation_angleaxi": 594, "radial_elevation_coordinatearrai": 594, "00long_nam": 594, "epochancillary_vari": 594, "time_offsetarrai": 594, "base_timeancillary_vari": 594, "base_timearrai": 594, "unspecifiedunit": 594, "dbstandard_nam": 594, "radar_linear_depolarization_ratiounpacking_detail": 594, "unpack": 594, "pack": [594, 600], "1041600": 594, "motion": 594, "instrumentunit": 594, "sstandard_nam": 594, "radial_velocity_of_scatterers_away_from_instrumentunpacking_detail": 594, "crosspolar": 594, "channelunit": 594, "factorunit": 594, "dbzstandard_nam": 594, "equivalent_reflectivity_factorunpacking_detail": 594, "radar_signal_to_noise_ratio_copolar_hunpacking_detail": 594, "radar_signal_to_noise_ratio_crosspolar_vunpacking_detail": 594, "widthunit": 594, "radar_doppler_spectrum_widthunpacking_detail": 594, "angleunit": 594, "degreearrai": 594, "n_sampl": 594, "momentsunit": 594, "1meta_group": 594, "instrument_parametersstandard_nam": 594, "number_of_samples_used_to_compute_momentsarrai": 594, "noise_figur": 594, "methodunit": 594, "dbarrai": 594, "67": [594, 643, 644], "8043": 594, "unambigu": [594, 662], "velocityunit": 594, "smeta_group": 594, "968252": 594, "repetit": 594, "timeunit": 594, "sarrai": 594, "00027": 594, "transmitt": 594, "r_calib_radar_constant_copol": 594, "copolarunit": 594, "dbmeta_group": 594, "radar_calibrationstandard_nam": 594, "calibrated_radar_constant_h_channelarrai": 594, "996191": 594, "r_calib_radar_constant_crosspol": 594, "crosspolarunit": 594, "405288": 594, "r_calib_two_way_radome_loss_h": 594, "radom": 594, "loss": 594, "radar_calibration_two_way_radome_loss_h_channelarrai": 594, "half": 594, "radar_measured_sky_noise_h": 594, "sky": 594, "dbmarrai": 594, "69": [594, 629, 646], "03703": 594, "035995": 594, "0373": 594, "03814": 594, "05106": 594, "05984": 594, "radar_measured_sky_noise_v": 594, "radar_measured_transmit_pow": 594, "powerunit": 594, "dbmmeta_group": 594, "radar_transmit_powerarrai": 594, "143": [594, 646], "receiver_gain_copol": 594, "copolunit": 594, "sweepunit": 594, "1735": 594, "s22": 594, "basedunit": 594, "unambiguous_rang": [594, 662], "rangeunit": 594, "mmeta_group": 594, "unambiguous_rangearrai": 594, "40479": 594, "477": [594, 600], "degree_nstandard_nam": 594, "latitudevalid_min": 594, "0valid_max": 594, "0arrai": 594, "956158": 594, "degree_estandard_nam": 594, "longitudevalid_min": 594, "106": 594, "987854": 594, "altitudeunit": 594, "mstandard_nam": 594, "altitudearrai": 594, "2886": 594, "levelunit": 594, "heightarrai": 594, "m1convent": 594, "radar_calibrationprocess_vers": 594, "el7dod_vers": 594, "1input_sourc": 594, "kazr_moments_20220314": 594, "000005": 594, "datsite_id": 594, "gucplatform_id": 594, "kazrcfrgefacility_id": 594, "m1data_level": 594, "a1location_descript": 594, "laboratori": 594, "sail": 594, "mt": 594, "crest": 594, "butt": [594, 595], "coloradodatastream": 594, "a1antenna_altitud": 594, "mantenna_diamet": 594, "mcomment": 594, "digital_rx_dec": 594, "24dualpol": 594, "0fft_len": 594, "512filter_length": 594, "67institut": 594, "radiat": [594, 595, 597, 598, 601, 654, 656, 657, 658, 660, 661, 662, 665], "research": [594, 595, 597, 601, 654, 656, 657, 658, 660, 661, 662, 665], "facilityn_g": 594, "1024num_spectral_averag": 594, "15pulse_compression_ratio": 594, "3range_gate_spacing_m": 594, "979246range_offset_ch1": 594, "mrange_offset_ch2": 594, "mscan_mod": 594, "pointingscan_nam": 594, "vptsoftware_vers": 594, "leachmantitl": 594, "momentsdoi": 594, "1498936histori": 594, "isel": 594, "coupl": [594, 598], "extra": [594, 597, 600], "won": 594, "600rang": 594, "600coordin": 594, "395940000": 594, "469427000": 594, "542946000": 594, "360000": 594, "quadmesh": [594, 595], "0x7f7dad654f10": 594, "meant": [594, 596], "popular": [594, 597], "jump": 594, "bar": 594, "hover": 594, "inspect": 594, "clabel": [594, 632, 633], "xformatt": 594, "ref_plot": 594, "7000": [594, 660], "platform_id": 594, "location_descript": 594, "xtick": [594, 657, 660], "ytick": [594, 657, 660], "vel_plot": 594, "prepar": [594, 595, 597, 598, 601, 656, 657, 658, 660, 661, 662, 665], "plot1": 594, "plot2": 594, "datashad": 594, "lazili": 594, "coars": 594, "intial": 594, "unfortun": 594, "ref_plot_rast": 594, "param": [594, 600], "dynamic_oper": 594, "outofboundsdatetim": 594, "nanosecond": 594, "54168": 594, "invok": 594, "x_rang": 594, "13t23": 594, "417014000": 594, "579705000": 594, "y_rang": 594, "traceback": 594, "recent": [594, 600, 667], "mgrover": [594, 597, 598, 611, 615, 621, 622, 627, 635, 641, 642, 650, 651, 652], "277": [594, 600, 647], "get_plot_fram": 594, "map_obj": 594, "1344": 594, "val": 594, "_execute_callback": 594, "tuple_kei": 594, "retval": 594, "callback": 594, "arg": 594, "708": 594, "__call__": 594, "ret": 594, "__init__": [594, 601, 612, 665], "1043": [594, 600], "obj": 594, "resolv": [594, 600], "1032": [594, 600], "1044": 594, "1036": 594, "_process": 594, "1018": [594, 600], "process_el": 594, "194": 594, "_appli": 594, "141": 594, "1514": 594, "predic": [594, 598], "207": 594, "pipelined_fn": 594, "method_fn": 594, "1223": 594, "super": [594, 626, 657, 660], "710": [594, 600], "map_fn": 594, "214": 594, "1133": [594, 600], "astyp": 594, "int64": 594, "1497": [594, 600], "apply_ufunc": 594, "1159": 594, "apply_dataarray_vfunc": 594, "286": [594, 600], "result_var": 594, "data_var": 594, "750": [594, 600], "apply_variable_ufunc": 594, "as_compatible_data": 594, "234": 594, "_possibly_convert_object": 594, "178": 594, "asarrai": 594, "ravel": 594, "reshap": 594, "sanitize_arrai": 594, "567": [594, 600], "subarr": 594, "_try_cast": 594, "raise_cast_failur": 594, "726": [594, 600], "sanitize_to_nanosecond": 594, "arr": 594, "cast": 594, "1717": 594, "ensure_datetime64n": 594, "_lib": 594, "tslib": 594, "pyx": [594, 600], "257": 594, "np_datetim": 594, "120": [594, 656], "check_dts_bound": 594, "saw": 594, "few": [594, 600, 603, 667], "pro": 594, "con": 594, "thing": [594, 601, 665], "clear": [594, 598], "push": [594, 600, 601, 603, 665], "share": 594, "ran": [594, 601, 665], "shareabl": 594, "workflow": [594, 597, 600], "mb": [594, 608, 613, 619, 638, 647, 648, 653, 663], "difficult": [594, 615], "jupyterbook": 594, "jupyt": [594, 597, 600, 606, 607, 609, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 667], "campaign": [594, 598, 644], "twitter": 595, "nou": 595, "dryglick": 595, "notic": [595, 598, 600, 615, 623], "odd": 595, "directli": [595, 621], "grei": 595, "darker": 595, "moir\u00e9": 595, "ryan": 595, "dopplershift": [595, 600], "turbul": 595, "forecast": 595, "ncei": 595, "search": [595, 654, 664], "aw": [595, 597, 600, 609, 610, 612, 613, 663], "mention": [595, 600, 601, 654, 665, 667], "he": 595, "n0u": [595, 611], "elgin": 595, "panhandl": 595, "kevx": 595, "1458": 595, "octob": 595, "landfal": 595, "gulf": 595, "lookl": 595, "webpag": 595, "cart": 595, "sent": 595, "email": [595, 598, 600], "websit": 595, "ftp": 595, "unzip": [595, 597], "kmob_sdus54_n0uevx_201810101458": 595, "partli": [595, 597, 656, 657, 658, 660, 661, 662], "facil": [595, 597, 598, 601, 654, 656, 657, 658, 660, 661, 662, 665], "cite": [595, 597, 598, 600, 656, 657, 658, 660, 661, 662], "jj": [595, 597, 656, 657, 658, 660, 661, 662], "sm": [595, 597, 656, 657, 658, 660, 661, 662], "colli": [595, 597, 601, 654, 656, 657, 658, 660, 661, 662, 665], "jor": [595, 597, 601, 654, 656, 657, 658, 660, 661, 662, 665], "5334": [595, 597, 601, 654, 656, 657, 658, 660, 661, 662, 665], "119": [595, 597, 601, 612, 654, 656, 657, 658, 660, 661, 662, 665], "read_level3": 595, "dark": 595, "dark_background": 595, "okai": 595, "88": [595, 597, 641], "83": 595, "31msignatur": [595, 598], "0m": [595, 597, 598], "0mdisplai": 595, "34m": [595, 598], "0mplot_ppi_map": 595, "0mfield": 595, "0msweep": 595, "36m0": 595, "0mmask_tupl": 595, "32mnone": [595, 598], "0mvmin": 595, "0mvmax": 595, "0mcmap": 595, "0mnorm": 595, "0mmask_outsid": 595, "32mfals": 595, "0mtitl": 595, "0mtitle_flag": 595, "32mtrue": 595, "0mcolorbar_flag": 595, "0mcolorbar_label": 595, "0max": 595, "0mfig": 595, "0mlat_lin": 595, "0mlon_lin": 595, "0mproject": 595, "0mmin_lon": 595, "0mmax_lon": 595, "0mmin_lat": 595, "0mmax_lat": 595, "0mwidth": 595, "0mheight": 595, "0mlon_0": 595, "0mlat_0": 595, "0mresolut": 595, "0mshapefil": 595, "0mshapefile_kwarg": 595, "0medg": 595, "0mgatefilt": 595, "0mfilter_transit": 595, "0membelish": 595, "0mraster": 595, "0mtick": 595, "0mticklab": 595, "0malpha": 595, "31msourc": 595, "32mdef": 595, "0mself": 595, "embelish": [595, 600], "31m": 595, "0mparse_vmin_vmax": 595, "0m_radar": 595, "0mparse_cmap": 595, "32mif": 595, "32mi": 595, "0mnp": 595, "0marang": 595, "36m30": 595, "36m46": 595, "36m1": 595, "36m110": 595, "36m75": 595, "0mloc": 595, "0mdata": 595, "0m_get_data": 595, "0mx": 595, "0my": 595, "0m_get_x_i": 595, "0mma": 595, "0mmasked_outsid": 595, "0mplt": 595, "0mgcf": 595, "32mnot": 595, "0mhasattr": 595, "32mels": 595, "0mcartopi": 595, "0mcr": 595, "0mlambertconform": 595, "0mcentral_longitud": 595, "0mcentral_latitud": 595, "0mwarn": 595, "overrid": [595, 633], "lambert": [595, 600], "0muserwarn": 595, "0mset_ext": 595, "0mplatecarre": 595, "32melif": 595, "36m2": 595, "0mgrid_project": 595, "0mpm": 595, "0mpcolormesh": 595, "36m1000": 595, "0mtransform": 595, "graphic": 595, "0mset_raster": 595, "admin": [595, 601, 665], "0mstates_provinc": 595, "0mfeatur": 595, "0mnaturalearthfeatur": 595, "0mcategori": 595, "cultur": 595, "0mname": 595, "admin_1_states_provinces_lin": 595, "0mscale": 595, "0mfacecolor": 595, "0mcoastlin": 595, "0madd_featur": 595, "0medgecolor": 595, "pose": 595, "difficulti": 595, "spectif": 595, "32min": 595, "0mmercat": 595, "0mgl": 595, "0mgridlin": 595, "0mxloc": 595, "0myloc": 595, "0mdraw_label": 595, "0mxlabels_top": 595, "0mylabels_right": 595, "0misinst": 595, "0mfigur": 595, "0mcanva": 595, "0mdraw": 595, "maker": 595, "0mxaxi": 595, "0mset_major_formatt": 595, "0mmpl": 595, "0mlongitude_formatt": 595, "0myaxi": 595, "0mlatitude_formatt": 595, "0m_lambert_gridlin": 595, "0mlambert_xtick": 595, "0mlambert_ytick": 595, "32mfrom": 595, "0mio": 595, "0mshaperead": 595, "32mimport": 595, "0mreader": 595, "0madd_geometri": 595, "0mgeometri": 595, "0m_set_titl": 595, "0mplot": 595, "0mappend": 595, "0mplot_var": 595, "0mplot_colorbar": 595, "0mmappabl": 595, "0mlabel": 595, "32mreturn": 595, "31mfile": [595, 598], "git_repo": 595, "31mtype": [595, 598], "fashion": 595, "0marg": 595, "0mshade": 595, "0mantialias": 595, "0mkwarg": 595, "31mdocstr": [595, 598], "pseudocolor": 595, "signatur": [595, 597], "quadrilater": 595, "pcolor": 595, "prefer": [595, 600, 664], "ref": [595, 612, 636, 644], "shade": [595, 600], "flat": [595, 611], "gouraud": 595, "cari": 595, "expand": 595, "rc": 595, "regist": [595, 598], "canon": 595, "chosen": 595, "patch": [595, 632], "force_edgecolor": 595, "singular": 595, "opaqu": 595, "solid": [595, 633], "quad": 595, "halfwai": 595, "galleri": [595, 600, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 654, 663], "images_contours_and_field": 595, "pcolormesh_grid": 595, "snap": 595, "mesh": 595, "misc": [595, 600], "rasterization_demo": 595, "constructor": 595, "agg_filt": 595, "anim": 595, "antialias": [595, 632, 633], "aa": 595, "capstyl": 595, "clip_box": 595, "bbox": 595, "clip_on": 595, "clip_path": 595, "rgba": 595, "ec": 595, "fc": 595, "gid": 595, "hatch": 595, "in_layout": 595, "joinstyl": 595, "miter": 595, "bevel": 595, "thereof": 595, "offset_transform": 595, "path_effect": 595, "abstractpatheffect": 595, "picker": 595, "pickradiu": 595, "sketch_param": 595, "random": [595, 598], "zorder": 595, "imshow": [595, 600, 616, 617, 618, 621], "_ax": 595, "nrow": [595, 621], "ncolumn": 595, "_differ": 595, "li": 595, "handl": [595, 600], "polycollect": 595, "thu": [595, 603], "almost": 595, "slight": 595, "polygon": 595, "irrespect": 595, "One": [595, 601, 656, 662, 665, 667], "masked_arrai": [595, 656, 662], "1e": [595, 656, 662], "next": [595, 597, 603, 611, 640], "get_gate_lat_lon_alt": [595, 598, 600], "565": [595, 600], "562763": 595, "560526": 595, "888458": 595, "886227": 595, "883991": 595, "562765": 595, "560532": 595, "892834": 595, "890606": 595, "888374": 595, "562769": 595, "56054": 595, "898003": 595, "89578": 595, "893553": 595, "562756": 595, "560509": 595, "880096": 595, "877857": 595, "875618": 595, "560513": 595, "881853": 595, "879616": 595, "877377": 595, "56276": 595, "560518": 595, "884874": 595, "88264": 595, "880404": 595, "92199": 595, "92222": 595, "92245": 595, "186806": 595, "18703": 595, "18723": 595, "922264": 595, "92254": 595, "2396": 595, "23986": 595, "24012": 595, "92231": 595, "92263": 595, "29231": 595, "29262": 595, "29292": 595, "92208": 595, "92218": 595, "02802": 595, "02811": 595, "0282": 595, "92212": 595, "92226": 595, "07571": 595, "07583": 595, "07595": 595, "922356": 595, "133934": 595, "1341": [595, 600], "13428": 595, "setup": [595, 598, 600, 611, 615, 621, 622, 627, 641, 654, 664], "geoaxi": 595, "border": [595, 632], "cbar": [595, 623], "tick_param": 595, "labels": 595, "set_label": [595, 623], "gl": [595, 597, 623], "draw_label": [595, 597, 623], "xlabel_styl": [595, 623], "ylabel_styl": [595, 623], "kevz_velocity_2018_10_10_1458": 595, "specifici": 595, "pull": [595, 600, 601, 602, 603, 612, 665], "pr": [595, 603], "importantli": 595, "api": [595, 600], "abil": [595, 600, 654, 667], "arguement": 595, "explor": [595, 597], "appreci": [595, 654], "hello": 596, "welcom": 596, "narr": 596, "feedback": 596, "feel": 596, "know": [596, 598, 667], "fridai": 597, "midwest": 597, "142": 597, "368": [597, 600], "excess": 597, "65": [597, 640], "knot": 597, "mph": 597, "184": 597, "hail": [597, 600, 645], "bing": 597, "inch": 597, "diamet": 597, "ifram": 597, "spc": [597, 600], "climo": 597, "gmf": 597, "php": 597, "rpt": 597, "230331_rpts_filter": 597, "walworth": 597, "counti": 597, "southeastern": [597, 615], "geneva": 597, "tourist": 597, "especi": [597, 598, 616], "live": 597, "chicagoland": 597, "confirm": [597, 611, 656], "assembl": 597, "summari": [597, 611], "grlevel": 597, "encourag": 597, "peopl": 597, "cookbook": [597, 600, 654, 666], "moor": 597, "focu": 597, "varieti": [597, 598, 601, 609, 610, 644, 665], "forg": [597, 600, 601, 654, 664, 665, 667], "arm_pyart": [597, 601, 603, 654, 664, 665, 667], "shaperead": 597, "shpreader": 597, "shapelyfeatur": 597, "miniforge3": 597, "tqdm": 597, "tqdmwarn": 597, "iprogress": 597, "ipywidget": 597, "readthedoc": 597, "stabl": 597, "user_instal": 597, "autonotebook": 597, "notebook_tqdm": 597, "credit": 597, "censu": 597, "mac": [597, 600, 654], "curl": 597, "linux": [597, 600, 601, 654, 665, 667], "wget": 597, "www2": 597, "geo": [597, 600], "tiger": 597, "tiger2016": 597, "primaryroad": 597, "tl_2016_us_primaryroad": 597, "zip": [597, 609, 612, 616, 621, 654], "xferd": 597, "dload": 597, "upload": [597, 600], "spent": 597, "7m": 597, "cpg": 597, "inflat": 597, "dbf": 597, "prj": 597, "shp": 597, "ea": 597, "iso": 597, "shx": 597, "reader": [597, 599, 600, 612], "geom": 597, "loop": [597, 600, 646], "rec": 597, "fullnam": 597, "interstate_featur": 597, "darkblu": 597, "clean": [597, 600, 640, 650], "filesystem": 597, "month": [597, 611, 612], "kmkx20230401_010517_v06": 597, "kmkx20230401_011057_v06": 597, "kmkx20230401_011638_v06": 597, "kmkx20230401_012219_v06": 597, "kmkx20230401_012759_v06": 597, "kmkx20230401_013341_v06": 597, "kmkx20230401_013922_v06": 597, "kmkx20230401_014502_v06": 597, "kmkx20230401_015042_v06": 597, "kmkx20230401_015623_v06": 597, "kmkx20230401_015928_v06": 597, "plot_configur": 597, "twilight_shift": [597, 650], "cross_correlation_ratio": [597, 611, 624, 625, 643, 644, 661, 662], "plot_radar_ppi": 597, "left_field": 597, "right_field": 597, "plot_config": 597, "precip": 597, "vel_dealia": 597, "dealias_region_bas": [597, 600, 607, 640, 650, 658], "add_field": [597, 601, 606, 607, 640, 643, 644, 645, 650, 657, 658, 665], "corrected_veloc": [597, 607, 640, 646, 650, 658, 661], "plot_numb": 597, "config": [597, 600, 656, 667], "121": [597, 598, 611, 615, 622, 642, 650], "generate_titl": 597, "time_step": 597, "get_start_end": 597, "central_tim": 597, "astimezon": 597, "new_titl": 597, "cdt": 597, "sharon": 597, "Near": 597, "delavan": 597, "6105": 597, "60666": 597, "lightgrei": 597, "lavenderblush": 597, "ppi_velocity_reflectivity_": 597, "flexibl": [597, 600], "hope": 597, "visual": [598, 600, 621, 624, 632, 641, 644, 650], "notabl": [598, 599], "insight": [598, 599], "analyz": [598, 601, 654, 661, 665], "decid": 598, "quicklook": 598, "januari": [598, 601, 654, 665], "wettest": 598, "la": 598, "jolla": 598, "california": 598, "tarfil": 598, "download_arm_data": 598, "0mact": 598, "0mdiscoveri": 598, "0mdownload_arm_data": 598, "0musernam": 598, "0mtoken": 598, "0mdatastream": 598, "0mstartdat": 598, "0menddat": 598, "0mtime": 598, "0moutput": 598, "webservic": 598, "usernam": [598, 664], "log": [598, 600, 603], "adc": [598, 600], "datastream": 598, "acquir": 598, "startdat": 598, "yyyi": [598, 599], "dd": [598, 599], "yyyymmdd": 598, "thh": 598, "ss": 598, "15t12": 598, "enddat": 598, "15t13": 598, "hhmmss": 598, "programmat": 598, "rest": 598, "savedata": 598, "cron": 598, "job": 598, "workspac": 598, "elimin": [598, 658, 660], "disk": 598, "hpss": 598, "armliv": 598, "livedata": 598, "giansiracusa": 598, "giansiracumt": 598, "ornl": 598, "sgpmete13": 598, "jan": 598, "2017": 598, "xxxxxxxxxxxxxxxx": 598, "download_data": 598, "mambaforg": 598, "epckasacrcfrs2": 598, "21t01": 598, "20240121": 598, "010020": 598, "010436": 598, "011116": 598, "012914": 598, "012503": 598, "011845": 598, "012257": 598, "010757": 598, "010118": 598, "011434": 598, "012708": 598, "011640": 598, "012051": 598, "bharadwaj": 598, "hardin": 598, "isom": 598, "johnson": 598, "lindenmai": 598, "matthew": 598, "nelson": 598, "feng": 598, "deng": 598, "rocqu": 598, "castro": 598, "wendler": 598, "ka": 598, "kasacrcfr": 598, "1469302": 598, "trick": 598, "ones": [598, 621], "798": 598, "runtimewarn": 598, "encount": 598, "intersect": 598, "whic": 598, "ppi_fil": 598, "rhi_fil": 598, "elif": 598, "mainli": 598, "threshold_valu": 598, "suptitl": [598, 606, 607, 616, 635, 646], "tight_layout": [598, 616, 637, 640], "too": [598, 600], "And": [598, 600], "remaind": 598, "fromnumer": [598, 606], "784": [598, 600], "maskedarrai": [598, 600, 606], "kth": [598, 606], "idea": [598, 656, 658], "0115": 598, "rhi_radar": 598, "ppi_radar": 598, "achiv": 598, "past": [599, 601, 665], "tag": [599, 600], "kernelspec": 599, "display_nam": 599, "ipykernel": 599, "languag": [599, 601, 654, 665], "language_info": 599, "codemirror_mod": 599, "file_extens": 599, "mimetyp": 599, "nbconvert_export": 599, "pygments_lex": 599, "ipython3": 599, "insert": 599, "nbformat": 599, "nbformat_minor": 599, "care": 599, "isilb": 600, "sinaram": 600, "1532": 600, "zssherman": 600, "get_azimuth": 600, "xradar": [600, 653, 663], "1547": 600, "mgrover1": 600, "1544": 600, "1542": 600, "1541": 600, "bridg": 600, "1537": 600, "columnsect": [600, 641], "1529": 600, "failur": 600, "wheel": 600, "1526": 600, "dep": 600, "bump": 600, "action": [600, 601, 603, 665], "group": [600, 601, 665], "1539": 600, "dependabot": 600, "epcap": 600, "1534": 600, "1530": 600, "1528": 600, "zdist_factor": 600, "1509": 600, "1524": 600, "1519": 600, "codeql": 600, "1515": 600, "pin": [600, 603], "ci": [600, 602, 603], "1507": 600, "xdrlib": 600, "1525": 600, "1518": 600, "1492": 600, "kmuehlbauer": 600, "rtanamachi": 600, "1504": 600, "1487": 600, "1478": 600, "jrobrien91": 600, "1503": 600, "1501": 600, "outdat": 600, "ipynb": [600, 606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652], "1490": 600, "1484": 600, "1482": 600, "1474": 600, "commit": [600, 601, 603, 665], "1506": 600, "1475": 600, "rainbow_wrl": 600, "happyxiaoanan": 600, "reclass": 600, "1495": 600, "rbhupi": 600, "1493": 600, "minor": [600, 616, 657, 660], "get_elev": 600, "1489": 600, "rescal": [600, 643, 644], "1486": 600, "1479": 600, "rcjackson": 600, "app": 600, "cmweather": 600, "1452": 600, "accessor": 600, "1457": 600, "syedhamidali": 600, "1456": 600, "typo": 600, "1471": 600, "isinst": 600, "1448": 600, "1472": 600, "1470": 600, "1469": 600, "instruct": [600, 654, 666], "1462": 600, "1473": 600, "1468": 600, "1450": 600, "scolli": 600, "dim": 600, "load_kazr": 600, "1446": 600, "1447": 600, "arm_vpt": 600, "1445": 600, "lint": [600, 601, 665], "1444": 600, "mnt": 600, "1440": [600, 656], "dedic": 600, "1442": 600, "1443": 600, "1437": 600, "algorith": 600, "1434": 600, "wolfidan": 600, "1430": 600, "1433": 600, "1428": 600, "neutrinocero": 600, "odim": 600, "1425": 600, "gatemapp": [600, 609, 614, 619, 663], "1418": 600, "hook": [600, 601, 665], "1419": 600, "sphinx": [600, 606, 607, 609, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652], "theme": 600, "1427": 600, "feet": 600, "1423": 600, "leak": 600, "mapper": 600, "1421": 600, "vforcel": 600, "1417": 600, "steepatticstair": 600, "1407": 600, "readm": [600, 664], "1397": 600, "1416": 600, "1413": 600, "1411": 600, "1409": 600, "1401": 600, "joshua": 600, "hampton": 600, "del": [600, 623], "old": 600, "conda_recip": 600, "1399": 600, "ruff": 600, "1388": 600, "wrong": 600, "1390": 600, "1385": 600, "1383": 600, "pkg_resourc": 600, "runtim": 600, "1394": 600, "mail": [600, 601, 654, 665], "1393": 600, "codeown": 600, "1391": 600, "1384": 600, "1382": 600, "1379": 600, "mismatch": 600, "1381": 600, "wrap": 600, "get_gate_area": 600, "1375": 600, "1380": [600, 656], "1372": 600, "exec_modul": 600, "load_modul": 600, "1369": 600, "badg": 600, "1363": 600, "read_sigmet": 600, "1351": 600, "zouihao": 600, "unus": 600, "1343": 600, "1342": 600, "range_step": 600, "1338": 600, "max_num_g": 600, "1337": 600, "1327": 600, "revert": 600, "setuptool": 600, "unwant": 600, "cleanup": 600, "1357": 600, "1355": 600, "1339": 600, "1361": 600, "1335": 600, "manipul": [600, 623, 655], "1300": 600, "kylejgillett": 600, "melovato": 600, "tsbiscaro": 600, "1324": 600, "1319": 600, "1314": 600, "add_filt": 600, "1326": 600, "1320": [600, 656], "1325": 600, "jthielen": 600, "1303": 600, "jjhelmu": [600, 667], "wx4stg": 600, "antiviru": 600, "similiar": 600, "1307": 600, "1299": 600, "throw": 600, "convolve1d": 600, "1313": 600, "1306": 600, "1317": 600, "1311": 600, "jfigui": 600, "citat": [600, 601, 624, 654, 665], "1304": 600, "gamaanderson": 600, "hhuangwx": 600, "josephhardine": 600, "meteoswiss": [600, 645, 646], "mdr": 600, "ngui": 600, "tjlang": 600, "1294": 600, "1290": 600, "1285": 600, "1279": 600, "backward": [600, 604], "1278": 600, "1284": 600, "tracer": 600, "1296": 600, "1292": 600, "1287": 600, "cibuildwheel": 600, "1267": 600, "ocefpaf": 600, "1275": 600, "1276": 600, "1265": 600, "dcedgren": 600, "jilling": 600, "zhaobudaola": 600, "1263": 600, "1235": 600, "1215": 600, "1261": 600, "1241": 600, "1240": 600, "gatefi": 600, "1226": 600, "join_radar": 600, "repititon": 600, "iparam": 600, "1218": 600, "1216": 600, "trmm_rsl": 600, "1239": 600, "cftime": 600, "1211": 600, "incorrect": [600, 604, 658], "1231": 600, "ci_setup": 600, "1213": 600, "1264": 600, "basic": [600, 654, 655, 657], "1251": 600, "1234": 600, "1228": 600, "subset_radar": 600, "radar_util": 600, "1227": 600, "pyrad": 600, "1220": 600, "tst": 600, "median": 600, "1214": 600, "srbrodzik": 600, "1208": 600, "1204": 600, "1201": [600, 611], "1198": 600, "1196": 600, "catch": 600, "1191": 600, "1207": 600, "pypi": 600, "1206": 600, "unitest": 600, "1200": [600, 656], "1199": 600, "echoclass": 600, "1197": 600, "convv": 600, "awhil": 600, "back": 600, "1195": 600, "1190": 600, "dp": 600, "1184": 600, "solver": [600, 654], "1183": 600, "1176": 600, "1187": 600, "revis": 600, "270": [600, 601, 637, 665], "1185": 600, "1181": 600, "1178": 600, "1171": 600, "1180": 600, "1177": 600, "1173": 600, "sobitp59": 600, "rogu": 600, "1170": 600, "1160": 600, "1152": 600, "1151": 600, "mispel": 600, "1158": 600, "1148": 600, "1167": 600, "1154": 600, "unittest": 600, "1153": 600, "scm": [600, 601, 665], "1136": 600, "trigger": 600, "1126": 600, "1118": 600, "1115": 600, "maco": 600, "1147": 600, "prune": 600, "1143": 600, "1141": 600, "1140": [600, 656], "1139": 600, "1137": 600, "1131": 600, "1130": 600, "1129": 600, "1128": 600, "1127": 600, "1125": 600, "1124": 600, "1123": 600, "1120": 600, "1119": 600, "dpr": 600, "1116": 600, "postcard": 600, "1104": 600, "1103": 600, "1122": 600, "gridmapdisplai": [600, 609, 620, 622, 638, 643, 644, 651, 660, 663], "1099": 600, "quick": [600, 611], "1146": 600, "contribut": [600, 601, 665, 666], "1106": 600, "1117": 600, "1113": 600, "submodul": [600, 660], "1110": 600, "forgotten": 600, "1108": 600, "test_echo_class": 600, "1107": 600, "1101": 600, "1098": 600, "1097": 600, "1094": 600, "1080": [600, 656], "registri": 600, "1087": 600, "1096": 600, "1093": 600, "1090": 600, "1089": 600, "1088": 600, "1085": 600, "1084": 600, "analyt": 600, "1081": 600, "1079": 600, "1077": 600, "pmi": 600, "csp": 600, "ritvj": 600, "doesn": [600, 656], "mandat": 600, "1014": 600, "reallynicegui": 600, "hasattr": 600, "1034": 600, "overlap": [600, 623, 632], "mapdisplai": 600, "1029": 600, "azimuth_rhi_plot": 600, "1025": 600, "1019": 600, "rxm25": 600, "1075": 600, "1064": 600, "mute_radar": 600, "1033": 600, "1030": 600, "radxgrid": 600, "1027": 600, "1026": 600, "roadmap": 600, "repo": [600, 601, 665], "1059": 600, "sidebar": 600, "1074": 600, "datetime_util": 600, "1072": 600, "1071": 600, "pydata": 600, "1069": 600, "1068": 600, "1067": 600, "1066": 600, "1063": 600, "codecov": 600, "1061": 600, "1060": 600, "1058": 600, "1056": 600, "1055": 600, "1053": 600, "1051": 600, "1050": 600, "1048": 600, "branch": [600, 601, 603, 665, 667], "1040": 600, "1039": 600, "1038": 600, "1031": 600, "1024": 600, "1020": [600, 656], "humphreyscart": 600, "tkralph": 600, "1003": 600, "997": 600, "1007": 600, "1001": 600, "1010": 600, "travi": 600, "sty": [600, 601, 665], "pep8": [600, 601, 665], "1005": 600, "988": 600, "quba1": 600, "984": 600, "tdwr": 600, "969": 600, "956": 600, "994": 600, "979": 600, "h5py": [600, 654], "978": 600, "june1st": 600, "switch": [600, 601, 665], "973": 600, "maint": [600, 601, 665], "966": 600, "983": 600, "amarouan": 600, "abdelhak": 600, "bmgxyz": 600, "address": 600, "962": 600, "mwilson14": 600, "963": 600, "nonetyp": 600, "regard": 600, "959": 600, "964": 600, "176": 600, "919": 600, "rda": 600, "903": 600, "add_gate_area": 600, "950": 600, "blotchi": 600, "947": 600, "946": 600, "944": 600, "694": 600, "938": 600, "vlouf": 600, "934": 600, "925": 600, "924": 600, "917": 600, "appveyor": 600, "937": 600, "927": 600, "liter": 600, "said": 600, "949": 600, "948": 600, "929": 600, "926": 600, "920": 600, "915": 600, "911": 600, "grwise1": 600, "jsignel": 600, "rumpki": 600, "broke": 600, "913": 600, "msg29": 600, "909": 600, "907": 600, "framework": 600, "910": 600, "912": 600, "napoleon": 600, "902": 600, "rtd": 600, "893": 600, "892": 600, "odimh5": 600, "898": 600, "895": 600, "896": 600, "864": 600, "louiswick": 600, "hilderbrand": 600, "877": 600, "886": 600, "crash": 600, "878": 600, "891": 600, "zflamig": 600, "futur": [600, 601, 604, 665], "890": 600, "889": 600, "885": 600, "dstex": 600, "880": 600, "soon": 600, "879": 600, "plot_grid": [600, 622, 636, 643, 644, 651, 660], "to_xarrai": 600, "873": 600, "876": 600, "elementwis": 600, "anaconda": [600, 601, 603, 654, 664, 665], "faq": 600, "868": 600, "mvanlierwalq": 600, "848": 600, "grid_io": 600, "846": 600, "jhemedin": 600, "841": 600, "nbin": 600, "865": 600, "856": 600, "840": [600, 656], "caus": 600, "852": 600, "849": 600, "get_dataset": 600, "845": 600, "docstr": 600, "838": [600, 630, 638, 663], "836": 600, "cheatsheet": 600, "fortran": 600, "bit": [600, 664], "environ": [600, 654, 664, 666], "contr": 600, "843": 600, "spell": 600, "835": 600, "read_d3r_gcpex_nc": 600, "842": [600, 606, 608, 663], "eccc": 600, "837": 600, "taylbm": 600, "kenkeho": 600, "swnesbitt": 600, "827": 600, "822": 600, "806": 600, "804": 600, "800": [600, 640], "778": 600, "688": [600, 641], "incomplet": 600, "msg5": 600, "832": 600, "820": 600, "812": 600, "deal": 600, "809": 600, "contiuum": 600, "gh": 600, "795": 600, "explicit": 600, "py2": 600, "790": 600, "sh": 600, "kai": 600, "muehlbauer": 600, "789": 600, "777": 600, "indexerror": 600, "check_outli": 600, "776": 600, "juhi24": 600, "770": 600, "imp": 600, "newer": [600, 664], "675": 600, "824": 600, "minu": 600, "803": 600, "738": 600, "799": 600, "792": 600, "favor": 600, "791": 600, "786": 600, "itself": [600, 662], "inc": 600, "794": 600, "rst": 600, "preformat": 600, "779": 600, "eaxmpl": 600, "834": 600, "833": 600, "elsewher": 600, "831": 600, "828": 600, "821": 600, "pytest": [600, 601, 654, 664, 665], "818": 600, "atteun": 600, "817": 600, "simulated_veloc": [600, 661], "802": 600, "grab": [600, 635], "796": 600, "793": 600, "787": 600, "781": 600, "cvd": 600, "775": 600, "774": 600, "769": 600, "nl2": 600, "765": 600, "miaoneng": 600, "gewitterblitz": 600, "liliaow567": 600, "764": 600, "coveral": 600, "messsag": 600, "761": 600, "757": 600, "set_raster": 600, "748": 600, "754": 600, "755": 600, "recompil": 600, "758": 600, "ngoldbaum": 600, "reciev": 600, "752": 600, "gate_id": [600, 661], "749": 600, "746": 600, "744": 600, "zxdawn": 600, "netcdftim": 600, "736": 600, "731": 600, "dot_product": 600, "729": 600, "test_rhi_elev": 600, "twice": [600, 644], "724": 600, "728": 600, "727": 600, "nosetest": 600, "715": 600, "vradh": 600, "vradv": 600, "quantiti": 600, "739": 600, "es5nhc": 600, "735": [600, 638], "wave100": 600, "734": 600, "733": 600, "730": 600, "723": 600, "comp": 600, "721": 600, "cameron": 600, "homey": 600, "716": 600, "cameronhomey": 600, "jamessong": 600, "winash12": 600, "687": [600, 626, 638, 663], "csnardi": 600, "645": 600, "docbuild": 600, "709": 600, "mhpicel": 600, "705": [600, 652, 653, 663], "fromstr": 600, "704": 600, "692": 600, "651": 600, "711": 600, "calculate_velocity_textur": [600, 650, 658], "retreiv": 600, "672": 600, "bucket": [600, 611], "673": 600, "653": 600, "638": 600, "635": 600, "frombuff": 600, "702": 600, "grid_mapp": 600, "707": 600, "706": 600, "goharkai": 600, "infinit": 600, "693": 600, "freemansw1": 600, "683": [600, 615, 619, 663], "674": 600, "668": 600, "contact": 600, "land": 600, "667": [600, 656], "665": 600, "662": 600, "661": 600, "attributeerror": 600, "656": 600, "oserror": 600, "650": 600, "overflowerror": 600, "648": 600, "happier": 600, "647": 600, "640": 600, "639": 600, "634": 600, "620": 600, "itsjm": 600, "kirknorth": 600, "617": 600, "616": 600, "631": 600, "swap": 600, "el": 600, "plot_rai": 600, "618": 600, "_get_angl": 600, "613": 600, "607": 600, "linspac": [600, 601, 621, 624, 640, 643, 644, 656, 665], "603": 600, "627": 600, "623": 600, "596": 600, "595": 600, "632": 600, "630": 600, "625": 600, "tulipasilva": 600, "622": 600, "normbw": 600, "q": 600, "quit": [600, 654], "614": 600, "git": [600, 601, 654, 664, 665, 667], "611": 600, "608": 600, "mrugna": 600, "605": 600, "bld": 600, "kludg": 600, "604": 600, "acknowledg": [600, 654], "602": [600, 624, 638, 663], "qpe": [600, 644], "598": 600, "mustafaalicelik": 600, "580": 600, "577": 600, "576": 600, "575": 600, "562": 600, "azim": 600, "546": 600, "pickl": 600, "unpickl": 600, "543": 600, "vcp": 600, "541": 600, "noaaport": 600, "seper": 600, "540": [600, 656], "521": 600, "459": 600, "590": 600, "bugfix": 600, "l3": 600, "135": 600, "eet": 600, "585": [600, 629, 638, 663], "582": 600, "574": 600, "570": 600, "558": 600, "ctm": 600, "553": 600, "542": [600, 607, 608, 663], "aux_io": 600, "read_gam": 600, "535": 600, "midnight": 600, "523": 600, "importerror": 600, "522": [600, 618, 619, 663], "519": 600, "512": 600, "510": 600, "phase_proc": 600, "zerodivis": 600, "494": 600, "485": 600, "unsupport": 600, "481": 600, "579": 600, "578": 600, "568": 600, "563": 600, "559": 600, "549": 600, "547": 600, "gamicfil": 600, "gamic_hdf5": 600, "536": 600, "524": 600, "513": 600, "balltre": 600, "504": 600, "501": 600, "482": 600, "479": 600, "594": 600, "561": 600, "despeckle_field": 600, "544": 600, "axislabel_flag": 600, "539": 600, "529": 600, "_get_x_z": 600, "491": 600, "486": 600, "586": 600, "583": 600, "572": 600, "fixup": 600, "569": 600, "560": 600, "555": [600, 641], "recip": [600, 603], "554": 600, "nose_arg": 600, "548": 600, "538": 600, "532": 600, "531": 600, "528": 600, "output_to_geotiff": 600, "514": 600, "511": 600, "507": 600, "506": 600, "498": 600, "libgfortran": 600, "497": 600, "495": 600, "493": [600, 640, 647, 663], "489": 600, "488": 600, "argentinean": 600, "480": [600, 656], "bdolan44": 600, "dara74k": 600, "gavi": 600, "jacaicedob": 600, "wx": 600, "pfhein": 600, "tamisalex": 600, "469": 600, "468": 600, "467": 600, "luminos": 600, "464": 600, "455": 600, "hclass": 600, "447": 600, "439": 600, "434": 600, "433": 600, "427": 600, "411": 600, "404": 600, "388": 600, "cross_section_ppi": [600, 637], "380": 600, "472": [600, 645, 647, 663], "471": 600, "470": 600, "prf": 600, "460": 600, "get_field_colormap": 600, "446": 600, "444": 600, "example_cfradial_rhi": 600, "441": 600, "417": 600, "struct": 600, "410": [600, 637, 638, 663], "383": [600, 608], "unicod": 600, "382": 600, "gatefit": 600, "372": 600, "465": 600, "refactor": 600, "463": 600, "decor": 600, "416": 600, "392": 600, "radxcovert": 600, "clarifi": 600, "475": 600, "406": 600, "add_field_lik": [600, 615], "397": 600, "391": 600, "376": 600, "370": 600, "corner_to_point": 600, "473": 600, "466": 600, "456": 600, "outstand": 600, "412": 600, "413": 600, "454": 600, "453": 600, "449": 600, "438": 600, "437": 600, "430": 600, "426": 600, "miniconda": [600, 601, 654, 665], "reactiv": 600, "422": [600, 650, 653, 663], "plot_map_one_radar_to_grid": [600, 617, 619, 663], "420": [600, 656], "419": 600, "408": 600, "resilli": 600, "403": 600, "write_mdv_grid": 600, "402": 600, "401": 600, "399": 600, "395": 600, "documen": 600, "add_2d_latlon_axi": 600, "394": 600, "378": 600, "acess": 600, "377": 600, "373": 600, "deeplycloudi": 600, "358": [600, 601, 665], "edge_netcdf": 600, "read_edge_netcdf": 600, "357": [600, 601, 665], "dealias_fourdd": 600, "348": 600, "346": 600, "326": 600, "308": 600, "361": 600, "refl_filter_flag": 600, "map_gate_to_grid": 600, "334": 600, "region_dealia": 600, "327": 600, "libm": 600, "posix": 600, "319": 600, "unnecessari": 600, "inmemoryfil": 600, "365": 600, "359": [600, 601, 642, 647, 663, 665], "354": 600, "_rsl_interfac": 600, "342": [600, 622, 638, 663], "binstar": 600, "337": 600, "320": 600, "317": 600, "362": 600, "plot_grid_three_panel": 600, "353": 600, "confus": 600, "363": 600, "340": 600, "externalis": 600, "339": 600, "333": 600, "332": 600, "47": [600, 646], "324": 600, "323": 600, "271": 600, "binar": 600, "266": 600, "313": 600, "312": 600, "290": 600, "280": 600, "273": 600, "272": 600, "261": 600, "256": [600, 621, 645], "dealias_phase_unwrap": 600, "radarmapdispl": 600, "249": 600, "discontin": 600, "315": 600, "314": 600, "288": 600, "fault": 600, "276": 600, "dealias_unwrap_phas": 600, "275": 600, "corrupt": 600, "269": 600, "283": 600, "inconsist": 600, "274": 600, "254": [600, 644], "fallback": 600, "245": 600, "316": 600, "ngates_vart": 600, "310": 600, "py3": [600, 667], "nexrad_level2": 600, "nexrad_level3": 600, "309": 600, "1byte": 600, "datatyp": 600, "weathergod": 600, "293": 600, "292": 600, "289": 600, "291": 600, "138": 600, "284": 600, "alter": 600, "267": 600, "latlon": 600, "264": 600, "262": 600, "260": 600, "259": 600, "258": 600, "241": [600, 612, 617], "rebuild": 600, "237": 600, "scientif": [601, 654, 665], "repositori": [601, 602, 603, 654, 664, 665, 667], "e25": [601, 654, 665], "publish": [601, 665], "easiest": [601, 654, 665], "1st": [601, 654, 665], "Then": [601, 603, 654, 664, 665], "termin": [601, 654, 665, 667], "prompt": [601, 654, 665], "mamba": [601, 665], "openradar": [601, 665], "short": [601, 603, 665], "cours": [601, 615, 665], "ev": [601, 665], "pyart_short_cours": [601, 665], "youtub": [601, 665], "watch": [601, 665], "diip": [601, 665], "q3bkzw": [601, 665], "book": [601, 665], "rule": [601, 665], "pep": [601, 665], "0008": [601, 665], "afterward": [601, 665], "neccessari": [601, 665], "brief": [601, 602, 665], "parti": [601, 665], "explain": [601, 665], "_inverse_dist_squar": [601, 665], "_average1d": [601, 665], "seen": [601, 665], "explan": [601, 602, 665], "privat": [601, 665], "rerun": [601, 665], "test_vad": [601, 665], "test_radar": [601, 656, 665], "make_target_radar": [601, 665], "1000": [601, 618, 626, 632, 633, 640, 644, 660, 665], "ones_lik": [601, 665], "z_start": [601, 665], "z_end": [601, 665], "z_count": [601, 665], "vad_height": [601, 665], "vad_spe": [601, 665], "98665725": [601, 665], "94020686": [601, 665], "88107152": [601, 665], "81939374": [601, 665], "75851962": [601, 665], "vad_direct": [601, 665], "84659496": [601, 665], "30240553": [601, 665], "58658589": [601, 665], "81073051": [601, 665], "01353486": [601, 665], "01335138": [601, 665], "06014712": [601, 665], "12039762": [601, 665], "18410404": [601, 665], "24791911": [601, 665], "98663937": [601, 665], "9398407": [601, 665], "87958641": [601, 665], "81587601": [601, 665], "75205693": [601, 665], "assert_almost_equ": [601, 665], "pyarg": [601, 665], "test_cfradi": [601, 665], "cd": [601, 665], "fork": [601, 603, 665], "cartopy_map": [601, 665], "branch_nam": [601, 665], "task": [601, 609, 649, 665], "mind": [601, 615, 665], "simpli": [601, 643, 650, 658, 660, 664, 665, 667], "acronym": [601, 665], "finish": [601, 665, 667], "quotat": [601, 665], "hit": [601, 665], "depth": [601, 654, 662, 665], "acronymn": [601, 665], "gitwash": [601, 665], "development_workflow": [601, 665], "whitespac": [601, 665], "usual": [601, 612, 665], "vim": [601, 665], "fetch": [601, 616, 640, 644, 645, 646, 665], "ff": [601, 665], "sit": [601, 665], "guidanc": [601, 665], "anyth": 603, "creator": 603, "draft": 603, "shortlog": 603, "uplod": 603, "feedstock": 603, "clone": [603, 654, 664], "meta": 603, "yaml": 603, "sha256": 603, "rerend": 603, "smithi": 603, "bot": 603, "sometim": [603, 656], "awar": 603, "semant": 604, "earlier": 604, "ceas": 604, "Such": 604, "proceed": 604, "futurewarn": 604, "runner": [606, 612], "micromamba": [606, 612], "771": 606, "__doc__": [606, 607, 611, 612, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 643, 644], "sgpcsaprsurcmaci7": [606, 657], "20110520": [606, 657], "095101": [606, 657], "pop": 606, "specific_attenu": [606, 641, 645, 656, 661], "corrected_reflectivity_horizont": [606, 618, 622, 641, 650, 652, 656], "calculate_attenu": 606, "131": [606, 643, 644], "132": [606, 643, 644], "ax3": [606, 607, 636, 640, 643, 644], "133": [606, 641, 643, 644], "plot_attenu": [606, 608, 663], "ial": 607, "095636": [607, 658], "sonde_fil": 607, "sgpinterpolatedsondec1": 607, "c1": [607, 661], "20110510": 607, "000000": 607, "cdf": [607, 640, 644], "dt": 607, "read_arm_sonde_vap": 607, "exclude_transit": [607, 617, 618, 622, 642], "exclude_invalid": [607, 640], "exclude_outsid": [607, 640], "dealias_data": 607, "sixth": 607, "221": [607, 625], "222": [607, 625], "223": [607, 625], "ax4": 607, "224": [607, 625], "plot_dealia": [607, 608, 663], "mem": [608, 613, 619, 638, 647, 648, 653, 663], "examples_python": 609, "examples_jupyt": 609, "grover": [611, 615, 621, 622, 627, 635, 641, 642, 650, 651, 652], "filepath": [611, 612], "organ": 611, "radarsit": [611, 612], "_v06": 611, "khgx": 611, "aws_nexrad_level2_fil": [611, 612], "khgx20220322_120125_v06": 611, "differential_phas": [611, 625, 661, 662], "clutter_filter_power_remov": 611, "spectrum_width": [611, 661, 662], "relect": 611, "z_": [611, 615, 623], "v_": 611, "noq": 611, "level3": 611, "aws_nexrad_level3_velocity_fil": 611, "hgx_n0u_2022_03_22_12_01_25": 611, "aws_nexrad_level3_reflectivity_fil": 611, "hgx_n0q_2022_03_22_12_01_25": 611, "read_nexrad_level3": 611, "radar_level3_veloc": 611, "radar_level3_reflect": 611, "reflectivity_displai": 611, "velocity_displai": 611, "701": [611, 613, 663], "plot_nexrad_data_aw": [611, 613, 663], "zachari": 612, "sherman": 612, "zsherman": [612, 667], "tendenc": 612, "gz": 612, "handford": 612, "ca": 612, "khnx": 612, "0203": 612, "v06": 612, "khnx20060724_020338": 612, "nexrad_arch": 612, "231": [612, 644], "clearli": 612, "lucki": 612, "31417": 612, "63111": 612, "plote": [612, 629], "central_latitud": [612, 629, 643, 644, 657], "central_longitud": [612, 629, 643, 644, 657], "downloadwarn": 612, "naturalearth": 612, "amazonaw": 612, "10m_physic": 612, "ne_10m_coastlin": 612, "10m_cultur": 612, "ne_10m_admin_1_states_provinces_lin": 612, "057": [612, 613, 663], "plot_older_nexrad_data_aw": [612, 613, 663], "759": 613, "xsapr": [615, 618, 622], "xsapr_sw_fil": [615, 618, 622], "swx_20120520_0641": [615, 618, 621, 622, 623, 627, 637, 641, 642, 643, 644, 650, 651, 652], "xsapr_se_fil": [615, 618, 622], "sex_20120520_0641": [615, 618, 622], "radar_sw": [615, 618, 622], "radar_s": [615, 618, 622], "southwestern": 615, "gmapper": 615, "radar_sw_mapped_to_radar_s": 615, "disp1": 615, "98": [615, 641, 646, 661], "97": [615, 618, 622, 624, 636, 641, 643, 644, 656], "disp2": 615, "remap": 615, "eyebal": 615, "fortun": 615, "reflectivity_se_radar": 615, "reflectivity_sw_radar": 615, "reflectivity_differ": 615, "reflectivity_bia": 615, "southwest": 615, "xspar": 615, "southeast": 615, "neccessarili": 615, "incl_gat": 615, "refl_s": 615, "refl_sw": 615, "values_without_mask": 615, "hist": [615, 650, 658], "histogram2d": 615, "masked_wher": [615, 640, 644, 661], "log_": 615, "plot_compare_two_radars_gatemapp": [615, 619, 663], "solut": 616, "arguabl": 616, "overlook": 616, "neglig": 616, "ze": 616, "2nd": 616, "4th": 616, "purpl": 616, "truncat": 616, "ok": 616, "israel": 616, "silber": 616, "open_radar_data": [616, 640, 644, 645, 646], "file_nam": 616, "example_plot_ppi_single_sweep": 616, "processed_field": 616, "reflectivity_at_cor": 616, "radar_obj": 616, "nnow": 616, "ax_ind": 616, "sweep_obj": 616, "fig2": 616, "1601": 616, "40000": [616, 618, 622, 629, 660], "set_titl": [616, 621, 640, 643, 644], "nuse": 616, "plot_grid_single_sweep_ppi": [616, 619, 663], "123000": 617, "760": [617, 619, 663], "xsarp": [618, 630, 631], "gatefilter_s": [618, 622], "exclude_abov": [618, 622, 650, 658], "gatefilter_sw": [618, 622], "201": [618, 643, 644, 660], "50000": [618, 622, 643, 644, 660], "57861": [618, 622], "363611": [618, 622], "plot_map_two_radars_to_grid": [618, 619, 663], "096": 619, "helper": 621, "vstack": 621, "plot_color_gradi": 621, "cmap_categori": 621, "cmap_list": 621, "figh": 621, "99": 621, "cmap_nam": 621, "pyart_": 621, "va": 621, "transax": 621, "spine": 621, "set_axis_off": 621, "perceptu": [621, 624], "light": [621, 645], "diverg": 621, "meaning": 621, "terrain": 621, "spectral_r": 621, "rememb": 621, "front": 621, "023": [621, 638, 663], "plot_choose_a_colormap": [621, 638, 663], "181": 622, "blue": [622, 632, 633], "plot_cross_sect": [622, 638, 663], "colobar": 623, "joe": 623, "brien": 623, "obrienj": 623, "perfect": 623, "coord": 623, "gca": 623, "set_major_loc": 623, "nullloc": 623, "axsb": 623, "ppi_map": 623, "set_tick": 623, "102": [623, 638, 663], "plot_modify_colorbar": [623, 638, 663], "reduc": [624, 644, 664], "promin": [624, 644], "deemphas": 624, "depict": [624, 640], "ultim": 624, "misinterpret": 624, "lmtomkin": [624, 640, 643, 644], "ncsu": [624, 640, 643, 644], "nexrad_fil": [624, 643, 644], "kbgm": 624, "kbgm20200207_132642_v06": 624, "image_mute_radar": [624, 643, 644], "magma_cmap": 624, "magma_r": [624, 640, 643, 644], "grays_cmap": [624, 644], "gray_r": [624, 644], "nonmuted_cmap": 624, "linearsegmentedcolormap": [624, 643, 644], "from_list": [624, 643, 644], "muted_cmap": [624, 644], "nonmuted_reflect": [624, 643], "muted_reflect": [624, 644], "set_aspect": [624, 640, 643, 644, 645], "plot_nexrad_image_muted_reflect": [624, 638, 663], "katx20130717_195021_v06": [625, 662], "424": [625, 638, 663], "plot_nexrad_multiple_mo": [625, 638, 663], "level2_katx_20130717_1950": 626, "ar2v": 626, "plot_nexrad_reflect": [626, 638, 663], "plot_cross_hair": 627, "384": [627, 638, 663], "plot_ppi_cfradi": [627, 638, 663], "203": [628, 638, 663], "jason": [629, 636], "hemeding": [629, 636], "nsaxsaprppic1": 629, "20140201": 629, "184802": 629, "157": 629, "156": 629, "71": 629, "158": 629, "72": 629, "40km": 629, "plot_line_xi": 629, "20000": [629, 660], "200000": [629, 643, 644], "plot_point": 629, "plot_ppi_with_r": [629, 638, 663], "instrument_nam": [630, 631, 662], "agl": 630, "fac": 630, "nplot": [630, 631, 635], "snum": 630, "hsrhi": [630, 631], "3f": [630, 631], "time_start": 630, "num2dat": 630, "only_use_cftime_datetim": 630, "only_use_python_datetim": 630, "figure_titl": 630, "isoformat": 630, "plot_rhi_cfradi": [630, 638, 663], "076": [631, 638, 663], "differnenti": 632, "cori": [632, 633], "weber": [632, 633], "cweber": [632, 633], "220629": 632, "matplolib": 632, "visabl": 632, "flow": 632, "paramt": 632, "compens": 632, "00015": 632, "veri": [632, 640, 643, 644], "moir": 632, "001": 632, "get_start": [632, 633], "get_end": [632, 633], "blur": 632, "nice": [632, 664], "arbirarli": 632, "gaussian_filt": [632, 633], "ang": [632, 633], "levels_rain": 632, "levels_ic": 632, "contours_ic": 632, "contours_rain": 632, "fmt": [632, 633], "0000": [632, 633], "plot_rhi_contours_differential_reflect": [632, 638, 663], "spyi": 633, "034142": 633, "ramp": 633, "blob": 633, "pyart_budrd18": 633, "coutour": 633, "dot": 633, "major": 633, "axhlin": [633, 640], "axvlin": 633, "00b4ff": 633, "ff6800": 633, "set_ylabel": [633, 640, 646], "cp": 633, "940": [633, 638, 663], "plot_rhi_data_overlai": [633, 638, 663], "110041": 634, "628": [634, 638, 663], "plot_rhi_mdv": [634, 638, 663], "fields_to_plot": 635, "plot_num": 635, "u00b0": 635, "851": [635, 638, 663], "plot_rhi_two_panel": [635, 638, 663], "20110520100000_nexrad_grid": 636, "read_grid": [636, 640, 644], "plot_crosshair": 636, "plot_longitude_slic": 636, "plot_latitude_slic": [636, 660], "227": [636, 638, 663], "plot_three_panel_gridmapdisplai": [636, 638, 663], "225": 637, "xsect": 637, "plot_xsect": [637, 638, 663], "essenti": 640, "distinguish": 640, "insuffici": 640, "tenth": 640, "aggress": 640, "noisi": 640, "ref_data": 640, "ref_data_mask": 640, "masked_outsid": 640, "create_cfad": 640, "15000": [640, 656, 660], "freq_norm_mask": 640, "masked_less_equ": [640, 644], "cfad_pm": 640, "plasma": 640, "set_xlabel": [640, 646], "8km": 640, "widen": 640, "freq_norm2": 640, "freq_norm0": 640, "freq_norm2_mask": 640, "freq_norm0_mask": 640, "chart": 640, "14km": 640, "12km": 640, "swath": 640, "velocity_dealia": 640, "rdbu_r": 640, "bimod": 640, "reproduc": 640, "2c": 640, "demonstr": [640, 654], "ddop": 640, "910815": 640, "213931": 640, "altitude_data": 640, "field_data": 640, "maxdz": [640, 644], "vvel_data": 640, "w_wind": 640, "vvel_mask": 640, "masked_invalid": [640, 643], "field_data_mask": 640, "cont": 640, "plot_cfad": [640, 647, 663], "maxwel": [641, 642], "site_lon": 641, "73": 641, "site_lat": 641, "latitdu": 641, "pathcollect": 641, "0x7f5d459009b0": 641, "get_field_loc": 641, "2kb": 641, "176b": 641, "350": 641, "818e": 641, "recalculated_diff_phas": [641, 656], "2778": 641, "unf_dp_phase_shift": [641, 656], "88b": 641, "145": [641, 644], "144": [641, 644], "diff_reflect": [641, 656], "8b": 641, "20t06": 641, "distance_from_radar": 641, "233": 641, "545": 641, "latitude_of_loc": 641, "longitude_of_loc": 641, "line2d": 641, "0x7f5d45b71d30": 641, "187": [641, 647, 663], "plot_column_subset": [641, 647, 663], "compz": 642, "composite_reflect": 642, "composite_displai": 642, "plot_composite_reflect": [642, 647, 663], "classifc": 643, "summer": [643, 644], "ian": [643, 644], "footprint": 643, "yield": 643, "smoother": 643, "curv": 643, "plot_convstrat_schem": 643, "pick": 643, "radii": 643, "dilat": 643, "conv_strat_yut": 643, "convsf_mask": 643, "masked_equ": [643, 644], "feature_detect": [643, 644], "convsf": [643, 644], "magma_r_cmap": [643, 644], "ref_cmap": [643, 644], "albersequalarea": [643, 644], "convsf_und": 643, "convsf_ov": 643, "uncertainti": [643, 644], "underest": [643, 644], "feature_und": [643, 644], "overest": [643, 644], "feature_ov": [643, 644], "ktbw": [643, 644], "ktbw20220928_190142_v06": [643, 644], "rasumussen": [643, 644], "2003": [643, 644], "reflecit": 643, "kokx": [643, 644], "kokx20210207_161413_v06": [643, 644], "nonmuted_ref": 643, "nonmuted_ref_linear": 643, "mm6": 643, "m3": 643, "snow_rat": [643, 644], "snow_rate_dict": 643, "40500": 643, "034": [643, 644], "ccotd": [643, 644], "rasmussen": [643, 644], "dixon": [643, 644, 654], "vasiloff": [643, 644], "hage": [643, 644], "knight": [643, 644], "vivekanandan": [643, 644], "xu": [643, 644], "nowcast": [643, 644], "accumul": [643, 644], "042": [643, 644], "3c0020": [643, 644], "snuart": [643, 644], "515": [643, 647, 663], "plot_convective_stratiform": [643, 647, 663], "heavili": 644, "customiz": 644, "manuscript": 644, "feature_mask": 644, "19990811": 644, "221202": 644, "convsf_cmap": 644, "140": 644, "253": 644, "csb": 644, "csb_mask": 644, "csl": 644, "convsf_lo": 644, "csl_mask": 644, "csh": 644, "convsf_hi": 644, "csh_mask": 644, "rpm": 644, "csbpm": 644, "set_yticklabel": 644, "lo": 644, "cslpm": 644, "cshpm": 644, "csb_lt": 644, "csb_lt_mask": 644, "csu_lt": 644, "csu_lt_mask": 644, "cso_lt": 644, "cso_lt_mask": 644, "csupm": 644, "csopm": 644, "ztor": 644, "ref_field_ov": 644, "ref_field_und": 644, "2db": 644, "_overest": 644, "_underest": 644, "reflectivity_ov": 644, "reflectivity_und": 644, "snow_rate_ov": 644, "snow_rate_und": 644, "feature_estimate_dict": 644, "bpm": 644, "upm": 644, "opm": 644, "distinct": 644, "scalar_features_mask": 644, "cosine_features_mask": 644, "isol": 644, "faint_featur": 644, "faint_features_mask": 644, "features_faint_strong": 644, "features_faint_strong_mask": 644, "new_dict": 644, "comment_1": 644, "faint_strong_cmap": 644, "faint_strong": 644, "238": 644, "93": 644, "66": 644, "quickli": 644, "quick_image_mut": 644, "muted_ref": 644, "nonmuted_field": 644, "muted_field": 644, "snow_rate_nonmut": 644, "snow_rate_mut": 644, "features_nonmut": 644, "features_mut": 644, "srpm": 644, "srpmm": 644, "csbpmm": 644, "170": [644, 647, 663], "plot_feature_detect": [644, 647, 663], "daniel": [645, 646], "wolfensberg": [645, 646], "mll2217907250u": 645, "003": 645, "preinterpol": 645, "20220628072500_savevol_cosmo_lookup_temp": 645, "nwp_temp": 645, "calculate_attenuation_zphi": 645, "uncorrected_differential_phas": 645, "pia": 645, "pida": 645, "corrected_reflect": [645, 661], "corrected_differential_reflect": [645, 661], "kdp_maesaka": 645, "specific_differential_phas": [645, 661], "hydroclass_semisupervis": 645, "uncorrected_cross_correlation_ratio": 645, "radar_echo_classif": 645, "lr": 645, "rp": 645, "rn": 645, "vi": 645, "mh": 645, "ih": 645, "hdg": 645, "boundarynorm": 645, "aggreg": 645, "crystal": 645, "rime": 645, "particl": 645, "wet": 645, "graupel": 645, "plot_hydrometeor": [645, 647, 663], "2682": 646, "5272": 646, "7815": 646, "10403": 646, "14259": 646, "18533": 646, "22800": [646, 656], "27060": [646, 656], "31310": 646, "35549": 646, "39777": 646, "43991": 646, "50263": 646, "58621": 646, "71002": 646, "87118": 646, "106740": 646, "125476": 646, "124": 646, "143293": 646, "160000": 646, "mla2119412050u": 646, "zlevel": 646, "5000": [646, 660], "u_allsweep": 646, "v_allsweep": 646, "idx": 646, "radar_1sweep": 646, "vad_brown": 646, "u_avg": 646, "nanmean": 646, "v_avg": 646, "sharei": 646, "082": [646, 647, 663], "plot_vad": [646, 647, 663], "000": 648, "xd": [650, 651, 652], "open_cfradial1_datatre": [650, 651, 652], "sweep_0": 650, "vel_textur": [650, 658], "velocity_textur": [650, 658, 661], "At": [650, 658], "velocity_dealias": [650, 658], "plot_dealias_xradar": [650, 653, 663], "101": 651, "10_000": 651, "50_000": 651, "686": [651, 653, 663], "plot_grid_xradar": [651, 653, 663], "plot_xradar": [652, 653, 663], "813": 653, "conceptu": 654, "understand": 654, "someth": 654, "maik": 654, "heistermann": 654, "bam": 654, "kellei": 654, "peura": 654, "pfaff": 654, "wolff": 654, "emerg": 654, "bull": 654, "amer": 654, "soc": 654, "117": 654, "128": 654, "00240": 654, "abl": [654, 664], "sophist": 654, "tutori": 654, "materi": 654, "erad": 654, "asr": 654, "asm": 654, "Or": 654, "pyart_env": [654, 657, 660, 667], "wish": 654, "unreleas": 654, "charg": 654, "resourc": [654, 664], "lassen": 654, "radtec": 654, "rsl_path": [654, 664], "usr": 654, "wrapper": 654, "fastest": 654, "cbc": 654, "glpk": 654, "coincbc": [654, 664, 667], "coin_install_dir": [654, 664, 667], "ask": [654, 667], "hypothet": 656, "dict_kei": [656, 661], "rain_rate_a": [656, 661], "volume_numb": 656, "platform_typ": 656, "instrument_typ": 656, "primary_axi": 656, "make_empty_ppi_radar": 656, "59416667": 656, "isn": 656, "240": 656, "660": 656, "720": 656, "780": 656, "960": 656, "1260": 656, "1560": 656, "1620": 656, "1680": 656, "1740": 656, "1860": 656, "1920": 656, "1980": 656, "2040": 656, "2100": 656, "2160": 656, "2220": 656, "2280": 656, "2340": 656, "2400": 656, "2460": 656, "2520": 656, "2580": 656, "2640": 656, "2700": 656, "2760": 656, "2820": 656, "2880": 656, "2940": 656, "3060": 656, "3120": 656, "3180": 656, "3240": 656, "3300": 656, "3360": 656, "3420": 656, "3480": 656, "3540": 656, "3600": 656, "3660": 656, "3720": 656, "3780": 656, "3840": 656, "3900": 656, "3960": 656, "4020": 656, "4080": 656, "4140": 656, "4200": 656, "4260": 656, "4320": 656, "4380": 656, "4440": 656, "4500": 656, "4560": 656, "4620": 656, "4680": 656, "4740": 656, "4800": 656, "4860": 656, "4920": 656, "4980": 656, "5040": 656, "5100": 656, "5160": 656, "5220": 656, "5280": 656, "5340": 656, "5400": 656, "5460": 656, "5520": 656, "5580": 656, "5640": 656, "5700": 656, "5760": 656, "5820": 656, "5880": 656, "5940": 656, "6000": [656, 660], "6060": 656, "6120": 656, "6180": 656, "6240": 656, "6300": 656, "6360": 656, "6420": 656, "6480": 656, "6540": 656, "6600": 656, "6660": 656, "6720": 656, "6780": 656, "6840": 656, "6900": 656, "6960": 656, "7020": 656, "7080": 656, "7140": 656, "7200": [656, 662], "7260": 656, "7320": 656, "7380": 656, "7440": 656, "7560": 656, "7620": 656, "7680": 656, "7740": 656, "7800": 656, "7860": 656, "7920": 656, "7980": 656, "8040": 656, "8100": 656, "8160": 656, "8220": 656, "8280": 656, "8340": 656, "8400": 656, "8460": 656, "8520": 656, "8580": 656, "8640": 656, "8700": 656, "8760": 656, "8820": 656, "8880": 656, "8940": 656, "9000": [656, 660], "9060": 656, "9120": 656, "9180": 656, "9240": 656, "9300": 656, "9360": 656, "9420": 656, "9480": 656, "9540": 656, "9600": 656, "9660": 656, "9720": 656, "9780": 656, "9840": 656, "9900": 656, "9960": 656, "10020": 656, "10080": 656, "10140": 656, "10200": 656, "10260": 656, "10320": 656, "10380": 656, "10440": 656, "10500": 656, "10560": 656, "10620": 656, "10680": 656, "10740": 656, "10800": 656, "10860": 656, "10920": 656, "10980": 656, "11040": 656, "11100": 656, "11160": 656, "11220": 656, "11280": 656, "11340": 656, "11400": 656, "11460": 656, "11520": 656, "11580": 656, "11640": 656, "11700": 656, "11760": 656, "11820": 656, "11880": 656, "11940": 656, "12060": 656, "12120": 656, "12180": 656, "12240": 656, "12300": 656, "12360": 656, "12420": 656, "12480": 656, "12540": 656, "12600": 656, "12660": 656, "12720": 656, "12780": 656, "12840": 656, "12900": 656, "12960": 656, "13020": 656, "13080": 656, "13140": 656, "13200": 656, "13260": 656, "13320": 656, "13380": 656, "13440": 656, "13500": 656, "13560": 656, "13620": 656, "13680": 656, "13740": 656, "13800": 656, "13860": 656, "13920": 656, "13980": 656, "14040": 656, "14100": 656, "14160": 656, "14220": 656, "14280": 656, "14340": 656, "14400": 656, "14460": 656, "14520": 656, "14580": 656, "14640": 656, "14700": 656, "14760": 656, "14820": 656, "14880": 656, "14940": 656, "15060": 656, "15120": 656, "15180": 656, "15240": 656, "15300": 656, "15360": 656, "15420": 656, "15480": 656, "15540": 656, "15600": 656, "15660": 656, "15720": 656, "15780": 656, "15840": 656, "15900": 656, "15960": 656, "16020": 656, "16080": 656, "16140": 656, "16200": 656, "16260": 656, "16320": 656, "16380": 656, "16440": 656, "16500": 656, "16560": 656, "16620": 656, "16680": 656, "16740": 656, "16800": 656, "16860": 656, "16920": 656, "16980": 656, "17040": 656, "17100": 656, "17160": 656, "17220": 656, "17280": 656, "17340": 656, "17400": 656, "17460": 656, "17520": 656, "17580": 656, "17640": 656, "17700": 656, "17760": 656, "17820": 656, "17880": 656, "17940": 656, "18000": [656, 660], "18060": 656, "18120": 656, "18180": 656, "18240": 656, "18300": 656, "18360": 656, "18420": 656, "18480": 656, "18540": 656, "18600": 656, "18660": 656, "18720": 656, "18780": 656, "18840": 656, "18900": 656, "18960": 656, "19020": 656, "19080": 656, "19140": 656, "19200": 656, "19260": 656, "19320": 656, "19380": 656, "19440": 656, "19500": 656, "19560": 656, "19620": 656, "19680": 656, "19740": 656, "19800": 656, "19860": 656, "19920": 656, "19980": 656, "20040": 656, "20100": 656, "20160": 656, "20220": 656, "20280": 656, "20340": 656, "20400": 656, "20460": 656, "20520": 656, "20580": 656, "20640": 656, "20700": 656, "20760": 656, "20820": 656, "20880": 656, "20940": 656, "21000": [656, 660], "21060": 656, "21120": 656, "21180": 656, "21240": 656, "21300": 656, "21360": 656, "21420": 656, "21480": 656, "21540": 656, "21600": 656, "21660": 656, "21720": 656, "21780": 656, "21840": 656, "21900": 656, "21960": 656, "22020": 656, "22080": 656, "22140": 656, "22200": 656, "22260": 656, "22320": 656, "22380": 656, "22440": 656, "22500": 656, "22560": 656, "22620": 656, "22680": 656, "22740": 656, "22860": 656, "22920": 656, "22980": 656, "23040": 656, "23100": 656, "23160": 656, "23220": 656, "23280": 656, "23340": 656, "23400": 656, "23460": 656, "23520": 656, "23580": 656, "23640": 656, "23700": 656, "23760": 656, "23820": 656, "23880": 656, "23940": 656, "24000": [656, 660], "24060": 656, "24120": 656, "24180": 656, "24240": 656, "24300": 656, "24360": 656, "24420": 656, "24480": 656, "24540": 656, "24600": 656, "24660": 656, "24720": 656, "24780": 656, "24840": 656, "24900": 656, "24960": 656, "25020": 656, "25080": 656, "25140": 656, "25200": 656, "25260": 656, "25320": 656, "25380": 656, "25440": 656, "25500": 656, "25560": 656, "25620": 656, "25680": 656, "25740": 656, "25800": 656, "25860": 656, "25920": 656, "25980": 656, "26040": 656, "26100": 656, "26160": 656, "26220": 656, "26280": 656, "26340": 656, "26400": 656, "26460": 656, "26520": 656, "26580": 656, "26640": 656, "26700": 656, "26760": 656, "26820": 656, "26880": 656, "26940": 656, "27000": [656, 660], "27120": 656, "27180": 656, "27240": 656, "27300": 656, "27360": 656, "27420": 656, "27480": 656, "27540": 656, "27600": 656, "27660": 656, "27720": 656, "27780": 656, "27840": 656, "27900": 656, "27960": 656, "28020": 656, "28080": 656, "28140": 656, "28200": 656, "28260": 656, "28320": 656, "28380": 656, "28440": 656, "28500": 656, "28560": 656, "28620": 656, "28680": 656, "28740": 656, "28800": 656, "28860": 656, "28920": 656, "28980": 656, "29040": 656, "29100": 656, "29160": 656, "29220": 656, "29280": 656, "29340": 656, "29400": 656, "29460": 656, "29520": 656, "29580": 656, "29640": 656, "29700": 656, "29760": 656, "29820": 656, "29880": 656, "29940": 656, "30000": [656, 660], "30060": 656, "30120": 656, "30180": 656, "30240": 656, "30300": 656, "30360": 656, "30420": 656, "30480": 656, "30540": 656, "30600": 656, "30660": 656, "30720": 656, "30780": 656, "30840": 656, "30900": 656, "30960": 656, "31020": 656, "31080": 656, "31140": 656, "31200": 656, "31260": 656, "31320": 656, "31380": 656, "31440": 656, "31500": 656, "31560": 656, "31620": 656, "31680": 656, "31740": 656, "31800": 656, "31860": 656, "31920": 656, "31980": 656, "32040": 656, "32100": 656, "32160": 656, "32220": 656, "32280": 656, "32340": 656, "32400": 656, "32460": 656, "32520": 656, "32580": 656, "32640": 656, "32700": 656, "32760": 656, "32820": 656, "32880": 656, "32940": 656, "33000": [656, 660], "33060": 656, "33120": 656, "33180": 656, "33240": 656, "33300": 656, "33360": 656, "33420": 656, "33480": 656, "33540": 656, "33600": 656, "33660": 656, "33720": 656, "33780": 656, "33840": 656, "33900": 656, "33960": 656, "34020": 656, "34080": 656, "34140": 656, "34200": 656, "34260": 656, "34320": 656, "34380": 656, "34440": 656, "34500": 656, "34560": 656, "34620": 656, "34680": 656, "34740": 656, "34800": 656, "34860": 656, "34920": 656, "34980": 656, "35040": 656, "35100": 656, "35160": 656, "35220": 656, "35280": 656, "35340": 656, "35400": 656, "35460": 656, "35520": 656, "35580": 656, "35640": 656, "35700": 656, "35760": 656, "35820": 656, "35880": 656, "35940": 656, "36000": [656, 660], "36060": 656, "36120": 656, "36180": 656, "36240": 656, "36300": 656, "36360": 656, "36420": 656, "36480": 656, "36540": 656, "36600": 656, "36660": 656, "36720": 656, "36780": 656, "36840": 656, "36900": 656, "36960": 656, "37020": 656, "37080": 656, "37140": 656, "37200": 656, "37260": 656, "37320": 656, "37380": 656, "37440": 656, "37500": 656, "37560": 656, "37620": 656, "37680": 656, "37740": 656, "37800": 656, "37860": 656, "37920": 656, "37980": 656, "38040": 656, "38100": 656, "38160": 656, "38220": 656, "38280": 656, "38340": 656, "38400": 656, "38460": 656, "38520": 656, "38580": 656, "38640": 656, "38700": 656, "38760": 656, "38820": 656, "38880": 656, "38940": 656, "39000": [656, 660], "39060": 656, "39120": 656, "39180": 656, "39240": 656, "39300": 656, "39360": 656, "39420": 656, "39480": 656, "39540": 656, "39600": 656, "39660": 656, "39720": 656, "39780": 656, "39840": 656, "39900": 656, "39960": 656, "59416776": 656, "59416886": 656, "59489769": 656, "59489879": 656, "5948999": 656, "59415662": 656, "59414657": 656, "5874659": 656, "58745576": 656, "58744563": 656, "59414621": 656, "59412575": 656, "5805231": 656, "58050246": 656, "58048182": 656, "59419881": 656, "59423095": 656, "61560159": 656, "61563401": 656, "61566644": 656, "59418877": 656, "59421087": 656, "6089062": 656, "6089285": 656, "60895079": 656, "59417836": 656, "59419005": 656, "60196382": 656, "60197561": 656, "60198741": 656, "get_metadata": 656, "ref_dict": 656, "reflecitivity_horizont": 656, "21875": 656, "34375": 656, "0078125": 656, "2109375": 656, "1171875": 656, "59375": 656, "421875": 656, "5625": 656, "7109375": 656, "609375": 656, "5078125": 656, "3828125": 656, "6875": 656, "328125": 656, "3203125": 656, "859375": 656, "6484375": 656, "8515625": 656, "9375": [656, 662], "0234375": 656, "6328125": 656, "2890625": 656, "546875": 656, "578125": 656, "6796875": 656, "ref_gt_0": 657, "mask_dict": 657, "reflectivity_mask": 657, "coolwarm": 657, "sherm": [657, 660], "782": [657, 660], "matplotlibdeprecationwarn": [657, 660], "position": [657, 660], "829": [657, 660], "write_cfradi": 657, "new_radar": 657, "2pi": 658, "wave": 658, "3pi": 658, "erron": 658, "phenomena": [658, 662], "maximium": 658, "unambi": 658, "preprocess": 658, "thankfulli": [658, 660], "surround": [658, 660], "presenc": 658, "524973": 658, "vleociti": 658, "realist": 658, "characterist": 660, "100000": 660, "gates_to_grid": 660, "99000": 660, "98000": 660, "97000": 660, "96000": 660, "95000": 660, "94000": 660, "93000": 660, "92000": 660, "91000": 660, "90000": 660, "89000": 660, "88000": 660, "87000": 660, "86000": 660, "85000": 660, "84000": 660, "83000": 660, "82000": 660, "81000": 660, "80000": 660, "79000": 660, "78000": 660, "77000": 660, "76000": 660, "75000": 660, "74000": 660, "73000": 660, "72000": 660, "71000": 660, "70000": 660, "69000": 660, "68000": 660, "67000": 660, "66000": 660, "65000": 660, "64000": 660, "63000": 660, "62000": 660, "61000": 660, "59000": 660, "58000": 660, "57000": 660, "56000": 660, "55000": 660, "54000": 660, "53000": 660, "52000": 660, "51000": 660, "49000": 660, "48000": 660, "47000": 660, "46000": 660, "45000": 660, "44000": 660, "43000": 660, "42000": 660, "41000": 660, "38000": 660, "37000": 660, "35000": 660, "34000": 660, "32000": 660, "31000": 660, "29000": 660, "28000": 660, "26000": 660, "23000": 660, "22000": 660, "19000": 660, "16000": 660, "14000": 660, "13000": 660, "8000": 660, "longitudn": 660, "latitudn": 660, "suffer": 660, "artifici": 660, "feather": 660, "grid_bett": 660, "1750": 660, "sgpxsaprcmacsuri5": 661, "20171004": 661, "203018": 661, "total_pow": 661, "xsapr_clutt": 661, "sounding_temperatur": 661, "signal_to_noise_ratio": 661, "unfolded_differential_phas": 661, "corrected_differential_phas": 661, "filtered_corrected_differential_phas": 661, "corrected_specific_diff_phas": 661, "filtered_corrected_specific_diff_phas": 661, "path_integrated_attenu": 661, "specific_differential_attenu": 661, "path_integrated_differential_attenu": 661, "nonhydrometeor": 661, "exclude_equ": 661, "tell": 661, "refl_arrai": 661, "reflectivity_w_mask": 661, "iter_slic": [661, 662], "9344453454202706": 661, "620691732853737": 661, "3756584054113996": 661, "597935968662154": 661, "696735014111216": 661, "061894569912447": 661, "721673265240488": 661, "086695918593689": 661, "33930700509078": 661, "599363169483158": 661, "836875745223637": 661, "051601529570966": 661, "22435547210836": 661, "378109469982695": 661, "553820234067336": 661, "648943841665002": 661, "837593740986444": 661, "049614721040282": 661, "331202567459613": 661, "585432697375357": 661, "87002341270722": 661, "993012637722325": 661, "061966001642219": 661, "122799449619672": 661, "861035552720102": 661, "74608994279257": 661, "148801770281325": 661, "70860719727862": 661, "989513966551444": 661, "188644935344827": 661, "89301878240611": 661, "172644371021923": 661, "79879842243138": 661, "912806090219976": 661, "766281467013889": 661, "920522471877334": 661, "898600907318164": 661, "971026055481874": 661, "110503947133682": 661, "094456418731509": 661, "0822160050675675": 661, "036430544969512": 661, "259332430219459": 661, "2438254054588604": 661, "473482666015625": 661, "574283685503023": 661, "866719139946832": 661, "771468742643597": 661, "beam_azimuth_angl": 662, "azimuth_angle_from_true_north": 662, "radial_azimuth_coordin": 662, "beam_elevation_angl": 662, "elevation_angle_from_horizontal_plan": 662, "radial_elevation_coordin": 662, "1832": 662, "log_differential_reflectivity_hv": 662, "875": 662, "differential_phase_hv": 662, "equivalent_reflectivity_factor": 662, "cross_correlation_ratio_hv": 662, "correlation_ratio": 662, "meters_per_second": 662, "doppler_spectrum_width": 662, "radial_velocity_of_scatterers_away_from_instru": 662, "target_fixed_angl": 662, "degrees_north": 662, "degrees_east": 662, "projection_range_coordin": 662, "range_to_measurement_volum": 662, "radial_range_coordin": 662, "spacing_is_const": 662, "meters_to_center_of_first_g": 662, "2125": 662, "meters_between_g": 662, "s20": 662, "unitless": 662, "coplan": 662, "vertical_point": 662, "idl": 662, "azimuth_surveil": 662, "elevation_surveil": 662, "sunscan": 662, "manual_ppi": 662, "manual_rhi": 662, "17t19": 662, "21z": 662, "time_in_seconds_since_volume_start": 662, "calendar": 662, "gregorian": 662, "katx": 662, "original_contain": 662, "vcp_pattern": 662, "7470703": 662, "7196045": 662, "6893921": 662, "511719": 662, "get_slic": 662, "sweep_1": 662, "52734375": 662, "indici": 662, "slice_indic": 662, "9066728410400056": 662, "478547577741713": 662, "587792083929423": 662, "871031288639269": 662, "971692217963673": 662, "830616390843327": 662, "108188248095756": 662, "483419908190385": 662, "88976917057903": 662, "852766685681688": 662, "410455582269897": 662, "66444787446138": 662, "997862391449566": 662, "172098402018502": 662, "489752513534416": 662, "712565619531706": 662, "commonli": 662, "064": 663, "9x": 664, "10x": 664, "11x": 664, "But": 664, "bash": 664, "pythonpath": 664, "pth": 664, "build_ext": 664, "segfault": 664, "Theres": 664, "proper": 664, "reinstal": 664, "remedi": 664, "fno": 664, "protector": 664, "d_fortify_sourc": 664, "cflag": 664, "makefil": 664, "troubl": 664, "define_macro": 664, "macro": 664, "extra_compile_arg": 664, "m32": 664, "extra_link_arg": 664, "m64": 664, "proj_lib": 664, "plai": 664, "xx": 664, "xxx": 664, "mpl_toolkit": 664, "conflict": 667, "exit": 667, "led": 667, "manag": 667, "deactiv": 667, "enviro": 667, "scratch": 667, "spyder": 667, "enhanc": 667, "though": 667, "yourusernam": 667, "youranacondadir": 667, "gitter": 667, "im": 667}, "objects": {"pyart": [[0, 0, 1, "", "_debug_info"], [1, 1, 0, "-", "aux_io"], [16, 1, 0, "-", "bridge"], [18, 1, 0, "-", "config"], [30, 1, 0, "-", "core"], [126, 1, 0, "-", "correct"], [168, 1, 0, "-", "exceptions"], [169, 1, 0, "-", "filters"], [202, 1, 0, "-", "graph"], [359, 1, 0, "-", "io"], [380, 1, 0, "-", "lazydict"], [404, 1, 0, "-", "map"], [417, 1, 0, "-", "retrieve"], [453, 1, 0, "-", "testing"], [556, 1, 0, "-", "util"]], "pyart.aux_io": [[2, 0, 1, "", "read_d3r_gcpex_nc"], [3, 0, 1, "", "read_edge_netcdf"], [4, 0, 1, "", "read_gamic"], [5, 0, 1, "", "read_kazr"], [6, 0, 1, "", "read_kazr_spectra"], [7, 0, 1, "", "read_noxp_iphex_nc"], [8, 0, 1, "", "read_odim_h5"], [9, 0, 1, "", "read_pattern"], [10, 0, 1, "", "read_radx"], [11, 0, 1, "", "read_radx_grid"], [12, 0, 1, "", "read_rainbow_wrl"], [13, 0, 1, "", "read_rxm25"], [14, 0, 1, "", "read_sinarame_h5"], [15, 0, 1, "", "write_sinarame_cfradial"]], "pyart.bridge": [[17, 0, 1, "", "texture_of_complex_phase"]], "pyart.config": [[19, 2, 1, "", "FileMetadata"], [23, 0, 1, "", "get_field_colormap"], [24, 0, 1, "", "get_field_limits"], [25, 0, 1, "", "get_field_mapping"], [26, 0, 1, "", "get_field_name"], [27, 0, 1, "", "get_fillvalue"], [28, 0, 1, "", "get_metadata"], [29, 0, 1, "", "load_config"]], "pyart.config.FileMetadata": [[20, 3, 1, "", "__call__"], [21, 3, 1, "", "get_field_name"], [22, 3, 1, "", "get_metadata"]], "pyart.core": [[31, 2, 1, "", "Grid"], [41, 2, 1, "", "HorizontalWindProfile"], [45, 2, 1, "", "Radar"], [74, 2, 1, "", "RadarSpectra"], [119, 0, 1, "", "antenna_to_cartesian"], [120, 0, 1, "", "antenna_vectors_to_cartesian"], [121, 0, 1, "", "cartesian_to_geographic"], [122, 0, 1, "", "cartesian_to_geographic_aeqd"], [123, 0, 1, "", "cartesian_vectors_to_geographic"], [124, 0, 1, "", "geographic_to_cartesian"], [125, 0, 1, "", "geographic_to_cartesian_aeqd"]], "pyart.core.Grid": [[32, 3, 1, "", "add_field"], [33, 3, 1, "", "get_point_longitude_latitude"], [34, 3, 1, "", "get_projparams"], [35, 3, 1, "", "init_point_altitude"], [36, 3, 1, "", "init_point_longitude_latitude"], [37, 3, 1, "", "init_point_x_y_z"], [38, 4, 1, "", "projection_proj"], [39, 3, 1, "", "to_xarray"], [40, 3, 1, "", "write"]], "pyart.core.HorizontalWindProfile": [[42, 3, 1, "", "from_u_and_v"], [43, 4, 1, "", "u_wind"], [44, 4, 1, "", "v_wind"]], "pyart.core.Radar": [[46, 3, 1, "", "add_field"], [47, 3, 1, "", "add_field_like"], [48, 3, 1, "", "add_filter"], [49, 3, 1, "", "check_field_exists"], [50, 3, 1, "", "extract_sweeps"], [51, 3, 1, "", "get_azimuth"], [52, 3, 1, "", "get_elevation"], [53, 3, 1, "", "get_end"], [54, 3, 1, "", "get_field"], [55, 3, 1, "", "get_gate_area"], [56, 3, 1, "", "get_gate_lat_lon_alt"], [57, 3, 1, "", "get_gate_x_y_z"], [58, 3, 1, "", "get_nyquist_vel"], [59, 3, 1, "", "get_slice"], [60, 3, 1, "", "get_start"], [61, 3, 1, "", "get_start_end"], [62, 3, 1, "", "info"], [63, 3, 1, "", "init_gate_altitude"], [64, 3, 1, "", "init_gate_longitude_latitude"], [65, 3, 1, "", "init_gate_x_y_z"], [66, 3, 1, "", "init_rays_per_sweep"], [67, 3, 1, "", "iter_azimuth"], [68, 3, 1, "", "iter_elevation"], [69, 3, 1, "", "iter_end"], [70, 3, 1, "", "iter_field"], [71, 3, 1, "", "iter_slice"], [72, 3, 1, "", "iter_start"], [73, 3, 1, "", "iter_start_end"]], "pyart.core.RadarSpectra": [[75, 4, 1, "", "altitude"], [76, 4, 1, "", "azimuth"], [77, 3, 1, "", "check_field_exists"], [78, 4, 1, "", "elevation"], [79, 4, 1, "", "fields"], [80, 4, 1, "", "fixed_angle"], [81, 4, 1, "", "gate_altitude"], [82, 4, 1, "", "gate_latitude"], [83, 4, 1, "", "gate_longitude"], [84, 4, 1, "", "gate_x"], [85, 4, 1, "", "gate_y"], [86, 4, 1, "", "gate_z"], [87, 3, 1, "", "get_end"], [88, 3, 1, "", "get_slice"], [89, 3, 1, "", "get_start"], [90, 3, 1, "", "get_start_end"], [91, 3, 1, "", "init_gate_altitude"], [92, 3, 1, "", "init_gate_longitude_latitude"], [93, 3, 1, "", "init_gate_x_y_z"], [94, 3, 1, "", "init_rays_per_sweep"], [95, 3, 1, "", "iter_azimuth"], [96, 3, 1, "", "iter_elevation"], [97, 3, 1, "", "iter_end"], [98, 3, 1, "", "iter_field"], [99, 3, 1, "", "iter_slice"], [100, 3, 1, "", "iter_start"], [101, 3, 1, "", "iter_start_end"], [102, 4, 1, "", "latitude"], [103, 4, 1, "", "longitude"], [104, 4, 1, "", "ngates"], [105, 4, 1, "", "npulses_max"], [106, 4, 1, "", "nrays"], [107, 4, 1, "", "nsweeps"], [108, 4, 1, "", "projection"], [109, 4, 1, "", "range"], [110, 4, 1, "", "rays_per_sweep"], [111, 4, 1, "", "scan_type"], [112, 4, 1, "", "sweep_end_ray_index"], [113, 4, 1, "", "sweep_mode"], [114, 4, 1, "", "sweep_number"], [115, 4, 1, "", "sweep_start_ray_index"], [116, 4, 1, "", "time"], [117, 3, 1, "", "to_vpt"], [118, 4, 1, "", "velocity_bins"]], "pyart.correct": [[127, 2, 1, "", "GateFilter"], [155, 0, 1, "", "calculate_attenuation"], [156, 0, 1, "", "calculate_attenuation_philinear"], [157, 0, 1, "", "calculate_attenuation_zphi"], [158, 0, 1, "", "correct_bias"], [159, 0, 1, "", "correct_noise_rhohv"], [160, 0, 1, "", "dealias_fourdd"], [161, 0, 1, "", "dealias_region_based"], [162, 0, 1, "", "dealias_unwrap_phase"], [163, 0, 1, "", "despeckle_field"], [164, 0, 1, "", "find_objects"], [165, 0, 1, "", "moment_based_gate_filter"], [166, 0, 1, "", "phase_proc_lp"], [167, 0, 1, "", "phase_proc_lp_gf"]], "pyart.correct.GateFilter": [[128, 3, 1, "", "copy"], [129, 3, 1, "", "exclude_above"], [130, 3, 1, "", "exclude_all"], [131, 3, 1, "", "exclude_below"], [132, 3, 1, "", "exclude_equal"], [133, 3, 1, "", "exclude_gates"], [134, 3, 1, "", "exclude_inside"], [135, 3, 1, "", "exclude_invalid"], [136, 3, 1, "", "exclude_masked"], [137, 3, 1, "", "exclude_none"], [138, 3, 1, "", "exclude_not_equal"], [139, 3, 1, "", "exclude_outside"], [140, 3, 1, "", "exclude_transition"], [141, 4, 1, "", "gate_excluded"], [142, 4, 1, "", "gate_included"], [143, 3, 1, "", "include_above"], [144, 3, 1, "", "include_all"], [145, 3, 1, "", "include_below"], [146, 3, 1, "", "include_equal"], [147, 3, 1, "", "include_gates"], [148, 3, 1, "", "include_inside"], [149, 3, 1, "", "include_none"], [150, 3, 1, "", "include_not_equal"], [151, 3, 1, "", "include_not_masked"], [152, 3, 1, "", "include_not_transition"], [153, 3, 1, "", "include_outside"], [154, 3, 1, "", "include_valid"]], "pyart.filters": [[170, 2, 1, "", "GateFilter"], [198, 0, 1, "", "iso0_based_gate_filter"], [199, 0, 1, "", "moment_and_texture_based_gate_filter"], [200, 0, 1, "", "moment_based_gate_filter"], [201, 0, 1, "", "temp_based_gate_filter"]], "pyart.filters.GateFilter": [[171, 3, 1, "", "copy"], [172, 3, 1, "", "exclude_above"], [173, 3, 1, "", "exclude_all"], [174, 3, 1, "", "exclude_below"], [175, 3, 1, "", "exclude_equal"], [176, 3, 1, "", "exclude_gates"], [177, 3, 1, "", "exclude_inside"], [178, 3, 1, "", "exclude_invalid"], [179, 3, 1, "", "exclude_masked"], [180, 3, 1, "", "exclude_none"], [181, 3, 1, "", "exclude_not_equal"], [182, 3, 1, "", "exclude_outside"], [183, 3, 1, "", "exclude_transition"], [184, 4, 1, "", "gate_excluded"], [185, 4, 1, "", "gate_included"], [186, 3, 1, "", "include_above"], [187, 3, 1, "", "include_all"], [188, 3, 1, "", "include_below"], [189, 3, 1, "", "include_equal"], [190, 3, 1, "", "include_gates"], [191, 3, 1, "", "include_inside"], [192, 3, 1, "", "include_none"], [193, 3, 1, "", "include_not_equal"], [194, 3, 1, "", "include_not_masked"], [195, 3, 1, "", "include_not_transition"], [196, 3, 1, "", "include_outside"], [197, 3, 1, "", "include_valid"]], "pyart.graph": [[203, 2, 1, "", "AirborneRadarDisplay"], [233, 2, 1, "", "GridMapDisplay"], [249, 2, 1, "", "GridMapDisplayBasemap"], [263, 2, 1, "", "RadarDisplay"], [292, 2, 1, "", "RadarMapDisplay"], [325, 2, 1, "", "RadarMapDisplayBasemap"], [358, 0, 1, "", "plot_convstrat_scheme"]], "pyart.graph.AirborneRadarDisplay": [[204, 3, 1, "", "generate_az_rhi_title"], [205, 3, 1, "", "generate_filename"], [206, 3, 1, "", "generate_ray_title"], [207, 3, 1, "", "generate_title"], [208, 3, 1, "", "generate_vpt_title"], [209, 3, 1, "", "label_xaxis_r"], [210, 3, 1, "", "label_xaxis_rays"], [211, 3, 1, "", "label_xaxis_time"], [212, 3, 1, "", "label_xaxis_x"], [213, 3, 1, "", "label_yaxis_field"], [214, 3, 1, "", "label_yaxis_y"], [215, 3, 1, "", "label_yaxis_z"], [216, 3, 1, "", "plot"], [217, 3, 1, "", "plot_azimuth_to_rhi"], [218, 3, 1, "", "plot_colorbar"], [219, 3, 1, "", "plot_cr_raster"], [220, 3, 1, "", "plot_cross_hair"], [221, 3, 1, "", "plot_grid_lines"], [222, 3, 1, "", "plot_label"], [223, 3, 1, "", "plot_labels"], [224, 3, 1, "", "plot_ppi"], [225, 3, 1, "", "plot_range_ring"], [226, 3, 1, "", "plot_range_rings"], [227, 3, 1, "", "plot_ray"], [228, 3, 1, "", "plot_rhi"], [229, 3, 1, "", "plot_sweep_grid"], [230, 3, 1, "", "plot_vpt"], [231, 3, 1, "", "set_aspect_ratio"], [232, 3, 1, "", "set_limits"]], "pyart.graph.GridMapDisplay": [[234, 3, 1, "", "cartopy_coastlines"], [235, 3, 1, "", "cartopy_political_boundaries"], [236, 3, 1, "", "cartopy_states"], [237, 3, 1, "", "generate_filename"], [238, 3, 1, "", "generate_grid_title"], [239, 3, 1, "", "generate_latitudinal_level_title"], [240, 3, 1, "", "generate_longitudinal_level_title"], [241, 3, 1, "", "plot_colorbar"], [242, 3, 1, "", "plot_cross_section"], [243, 3, 1, "", "plot_crosshairs"], [244, 3, 1, "", "plot_grid"], [245, 3, 1, "", "plot_latitude_slice"], [246, 3, 1, "", "plot_latitudinal_level"], [247, 3, 1, "", "plot_longitude_slice"], [248, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.GridMapDisplayBasemap": [[250, 3, 1, "", "generate_filename"], [251, 3, 1, "", "generate_grid_title"], [252, 3, 1, "", "generate_latitudinal_level_title"], [253, 3, 1, "", "generate_longitudinal_level_title"], [254, 3, 1, "", "get_basemap"], [255, 3, 1, "", "plot_basemap"], [256, 3, 1, "", "plot_colorbar"], [257, 3, 1, "", "plot_crosshairs"], [258, 3, 1, "", "plot_grid"], [259, 3, 1, "", "plot_latitude_slice"], [260, 3, 1, "", "plot_latitudinal_level"], [261, 3, 1, "", "plot_longitude_slice"], [262, 3, 1, "", "plot_longitudinal_level"]], "pyart.graph.RadarDisplay": [[264, 3, 1, "", "generate_az_rhi_title"], [265, 3, 1, "", "generate_filename"], [266, 3, 1, "", "generate_ray_title"], [267, 3, 1, "", "generate_title"], [268, 3, 1, "", "generate_vpt_title"], [269, 3, 1, "", "label_xaxis_r"], [270, 3, 1, "", "label_xaxis_rays"], [271, 3, 1, "", "label_xaxis_time"], [272, 3, 1, "", "label_xaxis_x"], [273, 3, 1, "", "label_yaxis_field"], [274, 3, 1, "", "label_yaxis_y"], [275, 3, 1, "", "label_yaxis_z"], [276, 3, 1, "", "plot"], [277, 3, 1, "", "plot_azimuth_to_rhi"], [278, 3, 1, "", "plot_colorbar"], [279, 3, 1, "", "plot_cr_raster"], [280, 3, 1, "", "plot_cross_hair"], [281, 3, 1, "", "plot_grid_lines"], [282, 3, 1, "", "plot_label"], [283, 3, 1, "", "plot_labels"], [284, 3, 1, "", "plot_ppi"], [285, 3, 1, "", "plot_range_ring"], [286, 3, 1, "", "plot_range_rings"], [287, 3, 1, "", "plot_ray"], [288, 3, 1, "", "plot_rhi"], [289, 3, 1, "", "plot_vpt"], [290, 3, 1, "", "set_aspect_ratio"], [291, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplay": [[293, 3, 1, "", "generate_az_rhi_title"], [294, 3, 1, "", "generate_filename"], [295, 3, 1, "", "generate_ray_title"], [296, 3, 1, "", "generate_title"], [297, 3, 1, "", "generate_vpt_title"], [298, 3, 1, "", "label_xaxis_r"], [299, 3, 1, "", "label_xaxis_rays"], [300, 3, 1, "", "label_xaxis_time"], [301, 3, 1, "", "label_xaxis_x"], [302, 3, 1, "", "label_yaxis_field"], [303, 3, 1, "", "label_yaxis_y"], [304, 3, 1, "", "label_yaxis_z"], [305, 3, 1, "", "plot"], [306, 3, 1, "", "plot_azimuth_to_rhi"], [307, 3, 1, "", "plot_colorbar"], [308, 3, 1, "", "plot_cr_raster"], [309, 3, 1, "", "plot_cross_hair"], [310, 3, 1, "", "plot_grid_lines"], [311, 3, 1, "", "plot_label"], [312, 3, 1, "", "plot_labels"], [313, 3, 1, "", "plot_line_geo"], [314, 3, 1, "", "plot_line_xy"], [315, 3, 1, "", "plot_point"], [316, 3, 1, "", "plot_ppi"], [317, 3, 1, "", "plot_ppi_map"], [318, 3, 1, "", "plot_range_ring"], [319, 3, 1, "", "plot_range_rings"], [320, 3, 1, "", "plot_ray"], [321, 3, 1, "", "plot_rhi"], [322, 3, 1, "", "plot_vpt"], [323, 3, 1, "", "set_aspect_ratio"], [324, 3, 1, "", "set_limits"]], "pyart.graph.RadarMapDisplayBasemap": [[326, 3, 1, "", "generate_az_rhi_title"], [327, 3, 1, "", "generate_filename"], [328, 3, 1, "", "generate_ray_title"], [329, 3, 1, "", "generate_title"], [330, 3, 1, "", "generate_vpt_title"], [331, 3, 1, "", "label_xaxis_r"], [332, 3, 1, "", "label_xaxis_rays"], [333, 3, 1, "", "label_xaxis_time"], [334, 3, 1, "", "label_xaxis_x"], [335, 3, 1, "", "label_yaxis_field"], [336, 3, 1, "", "label_yaxis_y"], [337, 3, 1, "", "label_yaxis_z"], [338, 3, 1, "", "plot"], [339, 3, 1, "", "plot_azimuth_to_rhi"], [340, 3, 1, "", "plot_colorbar"], [341, 3, 1, "", "plot_cr_raster"], [342, 3, 1, "", "plot_cross_hair"], [343, 3, 1, "", "plot_grid_lines"], [344, 3, 1, "", "plot_label"], [345, 3, 1, "", "plot_labels"], [346, 3, 1, "", "plot_line_geo"], [347, 3, 1, "", "plot_line_xy"], [348, 3, 1, "", "plot_point"], [349, 3, 1, "", "plot_ppi"], [350, 3, 1, "", "plot_ppi_map"], [351, 3, 1, "", "plot_range_ring"], [352, 3, 1, "", "plot_range_rings"], [353, 3, 1, "", "plot_ray"], [354, 3, 1, "", "plot_rhi"], [355, 3, 1, "", "plot_vpt"], [356, 3, 1, "", "set_aspect_ratio"], [357, 3, 1, "", "set_limits"]], "pyart.io": [[360, 0, 1, "", "prepare_for_read"], [361, 0, 1, "", "read"], [362, 0, 1, "", "read_arm_sonde"], [363, 0, 1, "", "read_arm_sonde_vap"], [364, 0, 1, "", "read_cfradial"], [365, 0, 1, "", "read_chl"], [366, 0, 1, "", "read_grid"], [367, 0, 1, "", "read_grid_mdv"], [368, 0, 1, "", "read_mdv"], [369, 0, 1, "", "read_nexrad_archive"], [370, 0, 1, "", "read_nexrad_cdm"], [371, 0, 1, "", "read_nexrad_level3"], [372, 0, 1, "", "read_rsl"], [373, 0, 1, "", "read_sigmet"], [374, 0, 1, "", "read_uf"], [375, 0, 1, "", "write_cfradial"], [376, 0, 1, "", "write_grid"], [377, 0, 1, "", "write_grid_geotiff"], [378, 0, 1, "", "write_grid_mdv"], [379, 0, 1, "", "write_uf"]], "pyart.lazydict": [[381, 2, 1, "", "LazyLoadDict"], [394, 2, 1, "", "MutableMapping"]], "pyart.lazydict.LazyLoadDict": [[382, 3, 1, "", "clear"], [383, 3, 1, "", "copy"], [384, 3, 1, "", "get"], [385, 3, 1, "", "has_key"], [386, 3, 1, "", "items"], [387, 3, 1, "", "keys"], [388, 3, 1, "", "pop"], [389, 3, 1, "", "popitem"], [390, 3, 1, "", "set_lazy"], [391, 3, 1, "", "setdefault"], [392, 3, 1, "", "update"], [393, 3, 1, "", "values"]], "pyart.lazydict.MutableMapping": [[395, 3, 1, "", "clear"], [396, 3, 1, "", "get"], [397, 3, 1, "", "items"], [398, 3, 1, "", "keys"], [399, 3, 1, "", "pop"], [400, 3, 1, "", "popitem"], [401, 3, 1, "", "setdefault"], [402, 3, 1, "", "update"], [403, 3, 1, "", "values"]], "pyart.map": [[405, 2, 1, "", "GateMapper"], [409, 0, 1, "", "example_roi_func_constant"], [410, 0, 1, "", "example_roi_func_dist"], [411, 0, 1, "", "example_roi_func_dist_beam"], [412, 0, 1, "", "grid_from_radars"], [413, 0, 1, "", "grid_ppi_sweeps"], [414, 0, 1, "", "grid_rhi_sweeps"], [415, 0, 1, "", "map_gates_to_grid"], [416, 0, 1, "", "map_to_grid"]], "pyart.map.GateMapper": [[406, 4, 1, "", "distance_tolerance"], [407, 3, 1, "", "mapped_radar"], [408, 4, 1, "", "time_tolerance"]], "pyart.retrieve": [[418, 0, 1, "", "ZtoR"], [419, 0, 1, "", "calculate_snr_from_reflectivity"], [420, 0, 1, "", "calculate_velocity_texture"], [421, 0, 1, "", "composite_reflectivity"], [422, 0, 1, "", "compute_cdr"], [423, 0, 1, "", "compute_l"], [424, 0, 1, "", "compute_noisedBZ"], [425, 0, 1, "", "compute_snr"], [426, 0, 1, "", "conv_strat_raut"], [427, 0, 1, "", "conv_strat_yuter"], [428, 0, 1, "", "create_cfad"], [429, 0, 1, "", "dealias_spectra"], [430, 0, 1, "", "est_rain_rate_a"], [431, 0, 1, "", "est_rain_rate_hydro"], [432, 0, 1, "", "est_rain_rate_kdp"], [433, 0, 1, "", "est_rain_rate_z"], [434, 0, 1, "", "est_rain_rate_za"], [435, 0, 1, "", "est_rain_rate_zkdp"], [436, 0, 1, "", "est_rain_rate_zpoly"], [437, 0, 1, "", "feature_detection"], [438, 0, 1, "", "fetch_radar_time_profile"], [439, 0, 1, "", "get_freq_band"], [440, 0, 1, "", "grid_displacement_pc"], [441, 0, 1, "", "grid_shift"], [442, 0, 1, "", "hydroclass_semisupervised"], [443, 0, 1, "", "kdp_maesaka"], [444, 0, 1, "", "kdp_schneebeli"], [445, 0, 1, "", "kdp_vulpiani"], [446, 0, 1, "", "map_profile_to_gates"], [447, 0, 1, "", "quasi_vertical_profile"], [448, 0, 1, "", "spectra_moments"], [449, 0, 1, "", "steiner_conv_strat"], [450, 0, 1, "", "texture_of_complex_phase"], [451, 0, 1, "", "vad_browning"], [452, 0, 1, "", "vad_michelson"]], "pyart.testing": [[454, 2, 1, "", "Grid"], [464, 2, 1, "", "InTemporaryDirectory"], [466, 2, 1, "", "Radar"], [495, 2, 1, "", "RadarSpectra"], [540, 0, 1, "", "get_metadata"], [541, 0, 1, "", "get_test_data"], [542, 0, 1, "", "make_empty_grid"], [543, 0, 1, "", "make_empty_ppi_radar"], [544, 0, 1, "", "make_empty_rhi_radar"], [545, 0, 1, "", "make_empty_spectra_radar"], [546, 0, 1, "", "make_gaussian_storm_grid"], [547, 0, 1, "", "make_normal_storm"], [548, 0, 1, "", "make_single_ray_radar"], [549, 0, 1, "", "make_storm_grid"], [550, 0, 1, "", "make_target_grid"], [551, 0, 1, "", "make_target_radar"], [552, 0, 1, "", "make_target_rhi_radar"], [553, 0, 1, "", "make_target_spectra_radar"], [554, 0, 1, "", "make_velocity_aliased_radar"], [555, 0, 1, "", "make_velocity_aliased_rhi_radar"]], "pyart.testing.Grid": [[455, 3, 1, "", "add_field"], [456, 3, 1, "", "get_point_longitude_latitude"], [457, 3, 1, "", "get_projparams"], [458, 3, 1, "", "init_point_altitude"], [459, 3, 1, "", "init_point_longitude_latitude"], [460, 3, 1, "", "init_point_x_y_z"], [461, 4, 1, "", "projection_proj"], [462, 3, 1, "", "to_xarray"], [463, 3, 1, "", "write"]], "pyart.testing.InTemporaryDirectory": [[465, 3, 1, "", "cleanup"]], "pyart.testing.Radar": [[467, 3, 1, "", "add_field"], [468, 3, 1, "", "add_field_like"], [469, 3, 1, "", "add_filter"], [470, 3, 1, "", "check_field_exists"], [471, 3, 1, "", "extract_sweeps"], [472, 3, 1, "", "get_azimuth"], [473, 3, 1, "", "get_elevation"], [474, 3, 1, "", "get_end"], [475, 3, 1, "", "get_field"], [476, 3, 1, "", "get_gate_area"], [477, 3, 1, "", "get_gate_lat_lon_alt"], [478, 3, 1, "", "get_gate_x_y_z"], [479, 3, 1, "", "get_nyquist_vel"], [480, 3, 1, "", "get_slice"], [481, 3, 1, "", "get_start"], [482, 3, 1, "", "get_start_end"], [483, 3, 1, "", "info"], [484, 3, 1, "", "init_gate_altitude"], [485, 3, 1, "", "init_gate_longitude_latitude"], [486, 3, 1, "", "init_gate_x_y_z"], [487, 3, 1, "", "init_rays_per_sweep"], [488, 3, 1, "", "iter_azimuth"], [489, 3, 1, "", "iter_elevation"], [490, 3, 1, "", "iter_end"], [491, 3, 1, "", "iter_field"], [492, 3, 1, "", "iter_slice"], [493, 3, 1, "", "iter_start"], [494, 3, 1, "", "iter_start_end"]], "pyart.testing.RadarSpectra": [[496, 4, 1, "", "altitude"], [497, 4, 1, "", "azimuth"], [498, 3, 1, "", "check_field_exists"], [499, 4, 1, "", "elevation"], [500, 4, 1, "", "fields"], [501, 4, 1, "", "fixed_angle"], [502, 4, 1, "", "gate_altitude"], [503, 4, 1, "", "gate_latitude"], [504, 4, 1, "", "gate_longitude"], [505, 4, 1, "", "gate_x"], [506, 4, 1, "", "gate_y"], [507, 4, 1, "", "gate_z"], [508, 3, 1, "", "get_end"], [509, 3, 1, "", "get_slice"], [510, 3, 1, "", "get_start"], [511, 3, 1, "", "get_start_end"], [512, 3, 1, "", "init_gate_altitude"], [513, 3, 1, "", "init_gate_longitude_latitude"], [514, 3, 1, "", "init_gate_x_y_z"], [515, 3, 1, "", "init_rays_per_sweep"], [516, 3, 1, "", "iter_azimuth"], [517, 3, 1, "", "iter_elevation"], [518, 3, 1, "", "iter_end"], [519, 3, 1, "", "iter_field"], [520, 3, 1, "", "iter_slice"], [521, 3, 1, "", "iter_start"], [522, 3, 1, "", "iter_start_end"], [523, 4, 1, "", "latitude"], [524, 4, 1, "", "longitude"], [525, 4, 1, "", "ngates"], [526, 4, 1, "", "npulses_max"], [527, 4, 1, "", "nrays"], [528, 4, 1, "", "nsweeps"], [529, 4, 1, "", "projection"], [530, 4, 1, "", "range"], [531, 4, 1, "", "rays_per_sweep"], [532, 4, 1, "", "scan_type"], [533, 4, 1, "", "sweep_end_ray_index"], [534, 4, 1, "", "sweep_mode"], [535, 4, 1, "", "sweep_number"], [536, 4, 1, "", "sweep_start_ray_index"], [537, 4, 1, "", "time"], [538, 3, 1, "", "to_vpt"], [539, 4, 1, "", "velocity_bins"]], "pyart.util": [[557, 0, 1, "", "angular_mean"], [558, 0, 1, "", "angular_mean_deg"], [559, 0, 1, "", "angular_std"], [560, 0, 1, "", "angular_std_deg"], [561, 0, 1, "", "angular_texture_2d"], [562, 0, 1, "", "column_vertical_profile"], [563, 0, 1, "", "cross_section_ppi"], [564, 0, 1, "", "cross_section_rhi"], [565, 0, 1, "", "datetime_from_dataset"], [566, 0, 1, "", "datetime_from_grid"], [567, 0, 1, "", "datetime_from_radar"], [568, 0, 1, "", "datetimes_from_dataset"], [569, 0, 1, "", "datetimes_from_radar"], [570, 0, 1, "", "determine_sweeps"], [571, 0, 1, "", "estimate_noise_hs74"], [572, 0, 1, "", "for_azimuth"], [573, 0, 1, "", "get_column_rays"], [574, 0, 1, "", "get_field_location"], [575, 0, 1, "", "image_mute_radar"], [576, 0, 1, "", "interval_mean"], [577, 0, 1, "", "interval_std"], [578, 0, 1, "", "is_vpt"], [579, 0, 1, "", "join_radar"], [580, 0, 1, "", "mean_of_two_angles"], [581, 0, 1, "", "mean_of_two_angles_deg"], [582, 0, 1, "", "rolling_window"], [583, 0, 1, "", "simulated_vel_from_profile"], [584, 0, 1, "", "sphere_distance"], [585, 0, 1, "", "subset_radar"], [586, 0, 1, "", "texture"], [587, 0, 1, "", "texture_along_ray"], [588, 0, 1, "", "to_vpt"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pyart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 592, 594, 595, 600], "_debug_info": 0, "aux_io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "read_d3r_gcpex_nc": 2, "read_edge_netcdf": 3, "read_gam": 4, "read_kazr": 5, "read_kazr_spectra": 6, "read_noxp_iphex_nc": 7, "read_odim_h5": 8, "read_pattern": 9, "read_radx": 10, "read_radx_grid": 11, "read_rainbow_wrl": 12, "read_rxm25": 13, "read_sinarame_h5": 14, "write_sinarame_cfradi": 15, "bridg": [16, 17], "texture_of_complex_phas": [17, 450], "config": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "filemetadata": [19, 20, 21, 22], "__call__": 20, "get_field_nam": [21, 26], "get_metadata": [22, 28, 540], "get_field_colormap": 23, "get_field_limit": 24, "get_field_map": 25, "get_fillvalu": 27, "load_config": 29, "core": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "grid": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 616, 617, 618, 622, 651, 660], "add_field": [32, 46, 455, 467], "get_point_longitude_latitud": [33, 456], "get_projparam": [34, 457], "init_point_altitud": [35, 458], "init_point_longitude_latitud": [36, 459], "init_point_x_y_z": [37, 460], "projection_proj": [38, 461], "to_xarrai": [39, 462], "write": [40, 463], "horizontalwindprofil": [41, 42, 43, 44], "from_u_and_v": 42, "u_wind": 43, "v_wind": 44, "radar": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 593, 594, 598, 601, 603, 615, 617, 618, 641, 654, 657, 662, 665], "add_field_lik": [47, 468], "add_filt": [48, 469], "check_field_exist": [49, 77, 470, 498], "extract_sweep": [50, 471], "get_azimuth": [51, 472], "get_elev": [52, 473], "get_end": [53, 87, 474, 508], "get_field": [54, 475], "get_gate_area": [55, 476], "get_gate_lat_lon_alt": [56, 477], "get_gate_x_y_z": [57, 478], "get_nyquist_vel": [58, 479], "get_slic": [59, 88, 480, 509], "get_start": [60, 89, 481, 510], "get_start_end": [61, 90, 482, 511], "info": [62, 483], "init_gate_altitud": [63, 91, 484, 512], "init_gate_longitude_latitud": [64, 92, 485, 513], "init_gate_x_y_z": [65, 93, 486, 514], "init_rays_per_sweep": [66, 94, 487, 515], "iter_azimuth": [67, 95, 488, 516], "iter_elev": [68, 96, 489, 517], "iter_end": [69, 97, 490, 518], "iter_field": [70, 98, 491, 519], "iter_slic": [71, 99, 492, 520], "iter_start": [72, 100, 493, 521], "iter_start_end": [73, 101, 494, 522], "radarspectra": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539], "altitud": [75, 496], "azimuth": [76, 497], "elev": [78, 499], "field": [79, 500, 657], "fixed_angl": [80, 501], "gate_altitud": [81, 502], "gate_latitud": [82, 503], "gate_longitud": [83, 504], "gate_x": [84, 505], "gate_i": [85, 506], "gate_z": [86, 507], "latitud": [102, 523, 612], "longitud": [103, 524, 612], "ngate": [104, 525], "npulses_max": [105, 526], "nrai": [106, 527], "nsweep": [107, 528], "project": [108, 529], "rang": [109, 530], "rays_per_sweep": [110, 531], "scan_typ": [111, 532], "sweep_end_ray_index": [112, 533], "sweep_mod": [113, 534], "sweep_numb": [114, 535], "sweep_start_ray_index": [115, 536], "time": [116, 537, 594, 608, 613, 619, 638, 647, 648, 653, 663], "to_vpt": [117, 538, 588], "velocity_bin": [118, 539], "antenna_to_cartesian": 119, "antenna_vectors_to_cartesian": 120, "cartesian_to_geograph": 121, "cartesian_to_geographic_aeqd": 122, "cartesian_vectors_to_geograph": 123, "geographic_to_cartesian": 124, "geographic_to_cartesian_aeqd": 125, "correct": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 598, 605, 606, 609], "gatefilt": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 661], "copi": [128, 171, 383], "exclude_abov": [129, 172], "exclude_al": [130, 173], "exclude_below": [131, 174], "exclude_equ": [132, 175], "exclude_g": [133, 176], "exclude_insid": [134, 177], "exclude_invalid": [135, 178], "exclude_mask": [136, 179], "exclude_non": [137, 180], "exclude_not_equ": [138, 181], "exclude_outsid": [139, 182], "exclude_transit": [140, 183], "gate_exclud": [141, 184], "gate_includ": [142, 185], "include_abov": [143, 186], "include_al": [144, 187], "include_below": [145, 188], "include_equ": [146, 189], "include_g": [147, 190], "include_insid": [148, 191], "include_non": [149, 192], "include_not_equ": [150, 193], "include_not_mask": [151, 194], "include_not_transit": [152, 195], "include_outsid": [153, 196], "include_valid": [154, 197], "calculate_attenu": 155, "calculate_attenuation_philinear": 156, "calculate_attenuation_zphi": 157, "correct_bia": 158, "correct_noise_rhohv": 159, "dealias_fourdd": 160, "dealias_region_bas": 161, "dealias_unwrap_phas": 162, "despeckle_field": 163, "find_object": 164, "moment_based_gate_filt": [165, 200], "phase_proc_lp": 166, "phase_proc_lp_gf": 167, "except": 168, "filter": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "iso0_based_gate_filt": 198, "moment_and_texture_based_gate_filt": 199, "temp_based_gate_filt": 201, "graph": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "airborneradardisplai": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "generate_az_rhi_titl": [204, 264, 293, 326], "generate_filenam": [205, 237, 250, 265, 294, 327], "generate_ray_titl": [206, 266, 295, 328], "generate_titl": [207, 267, 296, 329], "generate_vpt_titl": [208, 268, 297, 330], "label_xaxis_r": [209, 269, 298, 331], "label_xaxis_rai": [210, 270, 299, 332], "label_xaxis_tim": [211, 271, 300, 333], "label_xaxis_x": [212, 272, 301, 334], "label_yaxis_field": [213, 273, 302, 335], "label_yaxis_i": [214, 274, 303, 336], "label_yaxis_z": [215, 275, 304, 337], "plot": [216, 276, 305, 338, 593, 594, 595, 597, 598, 609, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 642, 645, 646, 652], "plot_azimuth_to_rhi": [217, 277, 306, 339], "plot_colorbar": [218, 241, 256, 278, 307, 340], "plot_cr_rast": [219, 279, 308, 341], "plot_cross_hair": [220, 280, 309, 342], "plot_grid_lin": [221, 281, 310, 343], "plot_label": [222, 223, 282, 283, 311, 312, 344, 345], "plot_ppi": [224, 284, 316, 349], "plot_range_r": [225, 226, 285, 286, 318, 319, 351, 352], "plot_rai": [227, 287, 320, 353], "plot_rhi": [228, 288, 321, 354], "plot_sweep_grid": 229, "plot_vpt": [230, 289, 322, 355], "set_aspect_ratio": [231, 290, 323, 356], "set_limit": [232, 291, 324, 357], "gridmapdisplai": [233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 636], "cartopy_coastlin": 234, "cartopy_political_boundari": 235, "cartopy_st": 236, "generate_grid_titl": [238, 251], "generate_latitudinal_level_titl": [239, 252], "generate_longitudinal_level_titl": [240, 253], "plot_cross_sect": 242, "plot_crosshair": [243, 257], "plot_grid": [244, 258], "plot_latitude_slic": [245, 259], "plot_latitudinal_level": [246, 260], "plot_longitude_slic": [247, 261], "plot_longitudinal_level": [248, 262], "gridmapdisplaybasemap": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "get_basemap": 254, "plot_basemap": 255, "radardisplai": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "radarmapdisplai": [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 595], "plot_line_geo": [313, 346], "plot_line_xi": [314, 347], "plot_point": [315, 348], "plot_ppi_map": [317, 350, 595], "radarmapdisplaybasemap": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "plot_convstrat_schem": 358, "io": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379], "prepare_for_read": 360, "read": [361, 593, 594, 595, 598, 611, 612], "read_arm_sond": 362, "read_arm_sonde_vap": 363, "read_cfradi": 364, "read_chl": 365, "read_grid": 366, "read_grid_mdv": 367, "read_mdv": 368, "read_nexrad_arch": 369, "read_nexrad_cdm": 370, "read_nexrad_level3": 371, "read_rsl": 372, "read_sigmet": 373, "read_uf": 374, "write_cfradi": 375, "write_grid": 376, "write_grid_geotiff": 377, "write_grid_mdv": 378, "write_uf": 379, "lazydict": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "lazyloaddict": [381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "clear": [382, 395], "get": [384, 396, 654], "has_kei": 385, "item": [386, 397], "kei": [387, 398, 594], "pop": [388, 399], "popitem": [389, 400], "set_lazi": 390, "setdefault": [391, 401], "updat": [392, 402, 603], "valu": [393, 403], "mutablemap": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "map": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 609, 614, 616, 617, 618, 629, 660], "gatemapp": [405, 406, 407, 408, 615], "distance_toler": 406, "mapped_radar": 407, "time_toler": 408, "example_roi_func_const": 409, "example_roi_func_dist": 410, "example_roi_func_dist_beam": 411, "grid_from_radar": 412, "grid_ppi_sweep": 413, "grid_rhi_sweep": 414, "map_gates_to_grid": 415, "map_to_grid": 416, "retriev": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 598, 609, 639], "ztor": 418, "calculate_snr_from_reflect": 419, "calculate_velocity_textur": 420, "composite_reflect": 421, "compute_cdr": 422, "compute_l": 423, "compute_noisedbz": 424, "compute_snr": 425, "conv_strat_raut": 426, "conv_strat_yut": 427, "create_cfad": 428, "dealias_spectra": 429, "est_rain_rate_a": 430, "est_rain_rate_hydro": 431, "est_rain_rate_kdp": 432, "est_rain_rate_z": 433, "est_rain_rate_za": 434, "est_rain_rate_zkdp": 435, "est_rain_rate_zpoli": 436, "feature_detect": 437, "fetch_radar_time_profil": 438, "get_freq_band": 439, "grid_displacement_pc": 440, "grid_shift": 441, "hydroclass_semisupervis": 442, "kdp_maesaka": 443, "kdp_schneeb": 444, "kdp_vulpiani": 445, "map_profile_to_g": 446, "quasi_vertical_profil": 447, "spectra_mo": 448, "paramet": [448, 595], "steiner_conv_strat": 449, "vad_brown": 451, "vad_michelson": 452, "test": [453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 601, 665], "intemporarydirectori": [464, 465], "cleanup": 465, "get_test_data": 541, "make_empty_grid": 542, "make_empty_ppi_radar": 543, "make_empty_rhi_radar": 544, "make_empty_spectra_radar": 545, "make_gaussian_storm_grid": 546, "make_normal_storm": 547, "make_single_ray_radar": 548, "make_storm_grid": 549, "make_target_grid": 550, "make_target_radar": 551, "make_target_rhi_radar": 552, "make_target_spectra_radar": 553, "make_velocity_aliased_radar": 554, "make_velocity_aliased_rhi_radar": 555, "util": [556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "angular_mean": 557, "angular_mean_deg": 558, "angular_std": 559, "angular_std_deg": 560, "angular_texture_2d": 561, "column_vertical_profil": 562, "cross_section_ppi": 563, "cross_section_rhi": 564, "datetime_from_dataset": 565, "datetime_from_grid": 566, "datetime_from_radar": 567, "datetimes_from_dataset": 568, "datetimes_from_radar": 569, "determine_sweep": 570, "estimate_noise_hs74": 571, "for_azimuth": 572, "assumpt": [572, 584], "get_column_rai": 573, "get_field_loc": 574, "image_mute_radar": 575, "interval_mean": 576, "interval_std": 577, "is_vpt": 578, "join_radar": 579, "mean_of_two_angl": 580, "mean_of_two_angles_deg": 581, "rolling_window": 582, "simulated_vel_from_profil": 583, "sphere_dist": 584, "subset_radar": 585, "textur": 586, "texture_along_rai": 587, "api": [589, 598], "refer": [589, 598, 643, 644], "manual": 589, "blog": [590, 599], "blend": 591, "observ": 591, "from": [591, 593, 598, 611, 622, 625, 627, 628, 630, 631, 632, 633, 634, 637, 664], "tracer": 591, "us": [591, 593, 594, 595, 598, 607, 615, 616, 636, 650, 651, 652], "py": [591, 592, 593, 598, 600, 601, 602, 603, 650, 651, 652, 654, 661, 662, 664, 665], "art": [591, 592, 593, 598, 600, 601, 602, 603, 650, 651, 652, 654, 661, 662, 664, 665], "import": [591, 593, 594, 595, 597, 601, 665], "goe": 591, "data": [591, 593, 594, 595, 597, 598, 611, 612, 651, 660, 661], "access": [591, 593, 595, 597], "csapr": 591, "load": [591, 594], "lma": 591, "flash": 591, "june": 591, "17th": 591, "case": 591, "17": [591, 600], "rhi": [591, 598, 630, 631, 632, 633, 634, 635], "activ": 592, "develop": [592, 604], "submit": 592, "pull": 592, "request": 592, "pr": [592, 600], "first": 592, "you": [592, 598], "have": 592, "done": 592, "so": 592, "alreadi": 592, "need": 592, "fork": 592, "github": [592, 601, 603, 665], "repositori": 592, "second": 592, "termin": 592, "clone": 592, "your": [592, 598, 621, 623], "remot": 592, "git": [592, 603], "command": 592, "third": 592, "creat": [592, 593, 594, 603, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 640, 656, 667], "doc": [592, 596], "conda": [592, 603], "environ": [592, 667], "fourth": 592, "we": 592, "instal": [592, 601, 654, 664, 665], "trmm": 592, "rsl": 592, "librari": 592, "lastli": 592, "python": [592, 601, 654, 665], "script": 592, "within": 592, "okai": 592, "should": 592, "now": 592, "readi": 592, "make": [592, 603], "chang": 592, "sourc": [592, 664], "code": [592, 601, 665], "1": [592, 600, 644], "new": [592, 596], "branch": 592, "our": [592, 594, 595, 597, 598], "2": [592, 600, 611, 612, 644], "push": 592, "To": 592, "let": 592, "commit": 592, "after": 592, "thi": [592, 600], "i": [592, 598, 654], "what": [592, 654], "look": 592, "like": 592, "hope": 592, "help": [592, 654], "hail": 593, "storm": 593, "visual": [593, 594, 597], "panda": 593, "motiv": [593, 597, 598, 599], "nexrad": [593, 595, 597, 611, 612, 625, 626], "fsspec": 593, "setup": [593, 597, 601, 602, 665], "filesystem": 593, "bucket": 593, "file": [593, 601, 625, 627, 628, 630, 631, 632, 633, 634, 656, 657, 665], "dataset": 593, "nexradaw": 593, "configur": 593, "search": [593, 598], "download": [593, 597], "spc": 593, "report": 593, "function": [593, 597], "loop": 593, "through": [593, 598], "helper": 593, "scale": 593, "bar": 593, "an": [593, 624, 632, 633, 667], "anim": 593, "imag": [593, 597, 624], "view": [593, 594], "final": [593, 594], "conclus": [593, 595, 597, 598, 599], "work": [594, 643, 644], "vertic": 594, "point": [594, 641], "xarrai": 594, "hvplot": 594, "overview": 594, "ka": 594, "band": 594, "arm": [594, 598, 601, 654, 665], "zenith": 594, "kazr": 594, "instrument": 594, "clean": [594, 598], "up": [594, 595, 667], "bit": 594, "analysi": 594, "subset": 594, "reflect": [594, 606, 624, 626, 632, 633, 642], "veloc": [594, 598, 607, 640, 650, 658], "quick": 594, "extract": [594, 641], "date": [594, 597], "inform": [594, 667], "label": 594, "holoview": 594, "try": [594, 595], "raster": 594, "takeawai": 594, "fix": [595, 600, 612], "weird": 595, "pattern": 595, "when": 595, "level": [595, 611, 612], "3": [595, 600, 611, 636], "The": [595, 597, 598, 599, 601, 654, 662, 665], "recreat": 595, "issu": [595, 612], "set": [595, 667], "matplotlib": 595, "style": [595, 601, 665], "without": 595, "alpha": 595, "add": [595, 597], "argument": 595, "dig": 595, "investig": [595, 597, 598], "pcolormesh": 595, "edgecolor": 595, "modifi": [595, 623], "default": 595, "solut": [595, 598, 599], "sever": 597, "weather": 597, "wisconsin": 597, "outbreak": 597, "focus": 597, "southern": 597, "reproduc": 597, "event": 597, "road": 597, "interst": 597, "featur": [597, 600, 644], "avail": 597, "run": 597, "scan": 598, "cloud": [598, 611], "epcap": 598, "problem": [598, 599], "dq": 598, "browser": 598, "act": 598, "token": 598, "live": 598, "pass": 598, "credenti": 598, "take": 598, "peak": 598, "strategi": 598, "sort": 598, "all": 598, "ppi": [598, 616, 627, 628, 629, 637, 652], "appli": 598, "explor": 598, "threshold": 598, "snr": 598, "revis": 598, "where": 598, "slice": 598, "frame": 598, "post": 599, "templat": 599, "changelog": 600, "18": 600, "enhanc": 600, "made": 600, "bug": 600, "other": 600, "merg": 600, "contributor": [600, 601, 665], "releas": [600, 603], "0": 600, "document": [600, 603], "improv": 600, "16": 600, "mainten": 600, "upkeep": 600, "15": 600, "v1": 600, "14": 600, "6": 600, "5": 600, "4": 600, "13": 600, "12": 600, "7": 600, "11": 600, "8": 600, "deprec": 600, "10": 600, "9": 600, "picasso": 600, "": [601, 604, 665], "guid": [601, 604, 665, 666], "toolkit": [601, 654, 665], "link": [601, 665], "cite": [601, 654, 665], "resourc": [601, 665], "continu": 602, "integr": 602, "how": [603, 643, 644], "tag": 603, "prepar": 603, "note": 603, "trigger": 603, "pypi": 603, "upload": 603, "packag": 603, "forg": 603, "announc": 603, "open": 603, "forum": 603, "version": 604, "moment": [605, 609, 625], "exampl": [605, 609, 610, 614, 620, 639, 640, 643, 649], "attenu": 606, "dealia": [607, 650], "doppler": 607, "region": 607, "base": 607, "algorithm": [607, 643, 644], "comput": [608, 613, 619, 638, 647, 648, 653, 663], "galleri": [609, 655], "input": [609, 610], "output": [609, 610], "xradar": [609, 649, 650, 651, 652], "aw": 611, "older": 612, "compar": 615, "two": [615, 618, 635], "singl": [616, 617], "sweep": 616, "cartesian": [616, 617, 618, 660], "2d": 616, "weight": 616, "choos": 621, "colormap": 621, "cross": [622, 637], "section": [622, 637], "colorbar": 623, "mute": 624, "multipl": [625, 630, 631], "cfradial": 627, "mdv": [628, 632, 633, 634], "cartopi": 629, "panel": [630, 631, 635, 636], "cf": [630, 631], "radial": [630, 631, 650], "contour": [632, 633], "line": [632, 633], "volum": 637, "cfad": 640, "diagram": 640, "valid": 640, "column": 641, "abov": 641, "calcul": [642, 645, 646], "composit": 642, "convect": [643, 644], "stratiform": [643, 644], "classif": [643, 644, 645], "summari": [643, 644], "recommend": [643, 644], "best": [643, 644], "practic": [643, 644], "detect": 644, "part": 644, "warm": 644, "season": 644, "cool": 644, "hydrometeor": 645, "vad": 646, "profil": 646, "can": 654, "do": 654, "short": 654, "cours": 654, "depend": [654, 664, 667], "option": [654, 664, 667], "contribut": 654, "notebook": 655, "basic": 656, "ingest": 656, "netcdf": 656, "manipul": 657, "save": 657, "object": [657, 662], "dealias": 658, "mask": 661, "With": 661, "index": 662, "build": 664, "requir": 664, "obtain": 664, "latest": 664, "frequent": 664, "ask": 664, "question": 664, "user": 666, "anaconda": 667, "channel": 667, "ad": 667, "path": 667, "more": 667}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"pyart._debug_info": [[0, "pyart-debug-info"]], "pyart.aux_io": [[1, "pyart-aux-io"]], "pyart.aux_io.read_d3r_gcpex_nc": [[2, "pyart-aux-io-read-d3r-gcpex-nc"]], "pyart.aux_io.read_edge_netcdf": [[3, "pyart-aux-io-read-edge-netcdf"]], "pyart.aux_io.read_gamic": [[4, "pyart-aux-io-read-gamic"]], "pyart.aux_io.read_kazr": [[5, "pyart-aux-io-read-kazr"]], "pyart.aux_io.read_kazr_spectra": [[6, "pyart-aux-io-read-kazr-spectra"]], "pyart.aux_io.read_noxp_iphex_nc": [[7, "pyart-aux-io-read-noxp-iphex-nc"]], "pyart.aux_io.read_odim_h5": [[8, "pyart-aux-io-read-odim-h5"]], "pyart.aux_io.read_pattern": [[9, "pyart-aux-io-read-pattern"]], "pyart.aux_io.read_radx": [[10, "pyart-aux-io-read-radx"]], "pyart.aux_io.read_radx_grid": [[11, "pyart-aux-io-read-radx-grid"]], "pyart.aux_io.read_rainbow_wrl": [[12, "pyart-aux-io-read-rainbow-wrl"]], "pyart.aux_io.read_rxm25": [[13, "pyart-aux-io-read-rxm25"]], "pyart.aux_io.read_sinarame_h5": [[14, "pyart-aux-io-read-sinarame-h5"]], "pyart.aux_io.write_sinarame_cfradial": [[15, "pyart-aux-io-write-sinarame-cfradial"]], "pyart.bridge": [[16, "pyart-bridge"]], "pyart.bridge.texture_of_complex_phase": [[17, "pyart-bridge-texture-of-complex-phase"]], "pyart.config": [[18, "pyart-config"]], "pyart.config.FileMetadata": [[19, "pyart-config-filemetadata"]], "pyart.config.FileMetadata.__call__": [[20, "pyart-config-filemetadata-call"]], "pyart.config.FileMetadata.get_field_name": [[21, "pyart-config-filemetadata-get-field-name"]], "pyart.config.FileMetadata.get_metadata": [[22, "pyart-config-filemetadata-get-metadata"]], "pyart.config.get_field_colormap": [[23, "pyart-config-get-field-colormap"]], "pyart.config.get_field_limits": [[24, "pyart-config-get-field-limits"]], "pyart.config.get_field_mapping": [[25, "pyart-config-get-field-mapping"]], "pyart.config.get_field_name": [[26, "pyart-config-get-field-name"]], "pyart.config.get_fillvalue": [[27, "pyart-config-get-fillvalue"]], "pyart.config.get_metadata": [[28, "pyart-config-get-metadata"]], "pyart.config.load_config": [[29, "pyart-config-load-config"]], "pyart.core": [[30, "pyart-core"]], "pyart.core.Grid": [[31, "pyart-core-grid"]], "pyart.core.Grid.add_field": [[32, "pyart-core-grid-add-field"]], "pyart.core.Grid.get_point_longitude_latitude": [[33, "pyart-core-grid-get-point-longitude-latitude"]], "pyart.core.Grid.get_projparams": [[34, "pyart-core-grid-get-projparams"]], "pyart.core.Grid.init_point_altitude": [[35, "pyart-core-grid-init-point-altitude"]], "pyart.core.Grid.init_point_longitude_latitude": [[36, "pyart-core-grid-init-point-longitude-latitude"]], "pyart.core.Grid.init_point_x_y_z": [[37, "pyart-core-grid-init-point-x-y-z"]], "pyart.core.Grid.projection_proj": [[38, "pyart-core-grid-projection-proj"]], "pyart.core.Grid.to_xarray": [[39, "pyart-core-grid-to-xarray"]], "pyart.core.Grid.write": [[40, "pyart-core-grid-write"]], "pyart.core.HorizontalWindProfile": [[41, "pyart-core-horizontalwindprofile"]], "pyart.core.HorizontalWindProfile.from_u_and_v": [[42, "pyart-core-horizontalwindprofile-from-u-and-v"]], "pyart.core.HorizontalWindProfile.u_wind": [[43, "pyart-core-horizontalwindprofile-u-wind"]], "pyart.core.HorizontalWindProfile.v_wind": [[44, "pyart-core-horizontalwindprofile-v-wind"]], "pyart.core.Radar": [[45, "pyart-core-radar"]], "pyart.core.Radar.add_field": [[46, "pyart-core-radar-add-field"]], "pyart.core.Radar.add_field_like": [[47, "pyart-core-radar-add-field-like"]], "pyart.core.Radar.add_filter": [[48, "pyart-core-radar-add-filter"]], "pyart.core.Radar.check_field_exists": [[49, "pyart-core-radar-check-field-exists"]], "pyart.core.Radar.extract_sweeps": [[50, "pyart-core-radar-extract-sweeps"]], "pyart.core.Radar.get_azimuth": [[51, "pyart-core-radar-get-azimuth"]], "pyart.core.Radar.get_elevation": [[52, "pyart-core-radar-get-elevation"]], "pyart.core.Radar.get_end": [[53, "pyart-core-radar-get-end"]], "pyart.core.Radar.get_field": [[54, "pyart-core-radar-get-field"]], "pyart.core.Radar.get_gate_area": [[55, "pyart-core-radar-get-gate-area"]], "pyart.core.Radar.get_gate_lat_lon_alt": [[56, "pyart-core-radar-get-gate-lat-lon-alt"]], "pyart.core.Radar.get_gate_x_y_z": [[57, "pyart-core-radar-get-gate-x-y-z"]], "pyart.core.Radar.get_nyquist_vel": [[58, "pyart-core-radar-get-nyquist-vel"]], "pyart.core.Radar.get_slice": [[59, "pyart-core-radar-get-slice"]], "pyart.core.Radar.get_start": [[60, "pyart-core-radar-get-start"]], "pyart.core.Radar.get_start_end": [[61, "pyart-core-radar-get-start-end"]], "pyart.core.Radar.info": [[62, "pyart-core-radar-info"]], "pyart.core.Radar.init_gate_altitude": [[63, "pyart-core-radar-init-gate-altitude"]], "pyart.core.Radar.init_gate_longitude_latitude": [[64, "pyart-core-radar-init-gate-longitude-latitude"]], "pyart.core.Radar.init_gate_x_y_z": [[65, "pyart-core-radar-init-gate-x-y-z"]], "pyart.core.Radar.init_rays_per_sweep": [[66, "pyart-core-radar-init-rays-per-sweep"]], "pyart.core.Radar.iter_azimuth": [[67, "pyart-core-radar-iter-azimuth"]], "pyart.core.Radar.iter_elevation": [[68, "pyart-core-radar-iter-elevation"]], "pyart.core.Radar.iter_end": [[69, "pyart-core-radar-iter-end"]], "pyart.core.Radar.iter_field": [[70, "pyart-core-radar-iter-field"]], "pyart.core.Radar.iter_slice": [[71, "pyart-core-radar-iter-slice"]], "pyart.core.Radar.iter_start": [[72, "pyart-core-radar-iter-start"]], "pyart.core.Radar.iter_start_end": [[73, "pyart-core-radar-iter-start-end"]], "pyart.core.RadarSpectra": [[74, "pyart-core-radarspectra"]], "pyart.core.RadarSpectra.altitude": [[75, "pyart-core-radarspectra-altitude"]], "pyart.core.RadarSpectra.azimuth": [[76, "pyart-core-radarspectra-azimuth"]], "pyart.core.RadarSpectra.check_field_exists": [[77, "pyart-core-radarspectra-check-field-exists"]], "pyart.core.RadarSpectra.elevation": [[78, "pyart-core-radarspectra-elevation"]], "pyart.core.RadarSpectra.fields": [[79, "pyart-core-radarspectra-fields"]], "pyart.core.RadarSpectra.fixed_angle": [[80, "pyart-core-radarspectra-fixed-angle"]], "pyart.core.RadarSpectra.gate_altitude": [[81, "pyart-core-radarspectra-gate-altitude"]], "pyart.core.RadarSpectra.gate_latitude": [[82, "pyart-core-radarspectra-gate-latitude"]], "pyart.core.RadarSpectra.gate_longitude": [[83, "pyart-core-radarspectra-gate-longitude"]], "pyart.core.RadarSpectra.gate_x": [[84, "pyart-core-radarspectra-gate-x"]], "pyart.core.RadarSpectra.gate_y": [[85, "pyart-core-radarspectra-gate-y"]], "pyart.core.RadarSpectra.gate_z": [[86, "pyart-core-radarspectra-gate-z"]], "pyart.core.RadarSpectra.get_end": [[87, "pyart-core-radarspectra-get-end"]], "pyart.core.RadarSpectra.get_slice": [[88, "pyart-core-radarspectra-get-slice"]], "pyart.core.RadarSpectra.get_start": [[89, "pyart-core-radarspectra-get-start"]], "pyart.core.RadarSpectra.get_start_end": [[90, "pyart-core-radarspectra-get-start-end"]], "pyart.core.RadarSpectra.init_gate_altitude": [[91, "pyart-core-radarspectra-init-gate-altitude"]], "pyart.core.RadarSpectra.init_gate_longitude_latitude": [[92, "pyart-core-radarspectra-init-gate-longitude-latitude"]], "pyart.core.RadarSpectra.init_gate_x_y_z": [[93, "pyart-core-radarspectra-init-gate-x-y-z"]], "pyart.core.RadarSpectra.init_rays_per_sweep": [[94, "pyart-core-radarspectra-init-rays-per-sweep"]], "pyart.core.RadarSpectra.iter_azimuth": [[95, "pyart-core-radarspectra-iter-azimuth"]], "pyart.core.RadarSpectra.iter_elevation": [[96, "pyart-core-radarspectra-iter-elevation"]], "pyart.core.RadarSpectra.iter_end": [[97, "pyart-core-radarspectra-iter-end"]], "pyart.core.RadarSpectra.iter_field": [[98, "pyart-core-radarspectra-iter-field"]], "pyart.core.RadarSpectra.iter_slice": [[99, "pyart-core-radarspectra-iter-slice"]], "pyart.core.RadarSpectra.iter_start": [[100, "pyart-core-radarspectra-iter-start"]], "pyart.core.RadarSpectra.iter_start_end": [[101, "pyart-core-radarspectra-iter-start-end"]], "pyart.core.RadarSpectra.latitude": [[102, "pyart-core-radarspectra-latitude"]], "pyart.core.RadarSpectra.longitude": [[103, "pyart-core-radarspectra-longitude"]], "pyart.core.RadarSpectra.ngates": [[104, "pyart-core-radarspectra-ngates"]], "pyart.core.RadarSpectra.npulses_max": [[105, "pyart-core-radarspectra-npulses-max"]], "pyart.core.RadarSpectra.nrays": [[106, "pyart-core-radarspectra-nrays"]], "pyart.core.RadarSpectra.nsweeps": [[107, "pyart-core-radarspectra-nsweeps"]], "pyart.core.RadarSpectra.projection": [[108, "pyart-core-radarspectra-projection"]], "pyart.core.RadarSpectra.range": [[109, "pyart-core-radarspectra-range"]], "pyart.core.RadarSpectra.rays_per_sweep": [[110, "pyart-core-radarspectra-rays-per-sweep"]], "pyart.core.RadarSpectra.scan_type": [[111, "pyart-core-radarspectra-scan-type"]], "pyart.core.RadarSpectra.sweep_end_ray_index": [[112, "pyart-core-radarspectra-sweep-end-ray-index"]], "pyart.core.RadarSpectra.sweep_mode": [[113, "pyart-core-radarspectra-sweep-mode"]], "pyart.core.RadarSpectra.sweep_number": [[114, "pyart-core-radarspectra-sweep-number"]], "pyart.core.RadarSpectra.sweep_start_ray_index": [[115, "pyart-core-radarspectra-sweep-start-ray-index"]], "pyart.core.RadarSpectra.time": [[116, "pyart-core-radarspectra-time"]], "pyart.core.RadarSpectra.to_vpt": [[117, "pyart-core-radarspectra-to-vpt"]], "pyart.core.RadarSpectra.velocity_bins": [[118, "pyart-core-radarspectra-velocity-bins"]], "pyart.core.antenna_to_cartesian": [[119, "pyart-core-antenna-to-cartesian"]], "pyart.core.antenna_vectors_to_cartesian": [[120, "pyart-core-antenna-vectors-to-cartesian"]], "pyart.core.cartesian_to_geographic": [[121, "pyart-core-cartesian-to-geographic"]], "pyart.core.cartesian_to_geographic_aeqd": [[122, "pyart-core-cartesian-to-geographic-aeqd"]], "pyart.core.cartesian_vectors_to_geographic": [[123, "pyart-core-cartesian-vectors-to-geographic"]], "pyart.core.geographic_to_cartesian": [[124, "pyart-core-geographic-to-cartesian"]], "pyart.core.geographic_to_cartesian_aeqd": [[125, "pyart-core-geographic-to-cartesian-aeqd"]], "pyart.correct": [[126, "pyart-correct"]], "pyart.correct.GateFilter": [[127, "pyart-correct-gatefilter"]], "pyart.correct.GateFilter.copy": [[128, "pyart-correct-gatefilter-copy"]], "pyart.correct.GateFilter.exclude_above": [[129, "pyart-correct-gatefilter-exclude-above"]], "pyart.correct.GateFilter.exclude_all": [[130, "pyart-correct-gatefilter-exclude-all"]], "pyart.correct.GateFilter.exclude_below": [[131, "pyart-correct-gatefilter-exclude-below"]], "pyart.correct.GateFilter.exclude_equal": [[132, "pyart-correct-gatefilter-exclude-equal"]], "pyart.correct.GateFilter.exclude_gates": [[133, "pyart-correct-gatefilter-exclude-gates"]], "pyart.correct.GateFilter.exclude_inside": [[134, "pyart-correct-gatefilter-exclude-inside"]], "pyart.correct.GateFilter.exclude_invalid": [[135, "pyart-correct-gatefilter-exclude-invalid"]], "pyart.correct.GateFilter.exclude_masked": [[136, "pyart-correct-gatefilter-exclude-masked"]], "pyart.correct.GateFilter.exclude_none": [[137, "pyart-correct-gatefilter-exclude-none"]], "pyart.correct.GateFilter.exclude_not_equal": [[138, "pyart-correct-gatefilter-exclude-not-equal"]], "pyart.correct.GateFilter.exclude_outside": [[139, "pyart-correct-gatefilter-exclude-outside"]], "pyart.correct.GateFilter.exclude_transition": [[140, "pyart-correct-gatefilter-exclude-transition"]], "pyart.correct.GateFilter.gate_excluded": [[141, "pyart-correct-gatefilter-gate-excluded"]], "pyart.correct.GateFilter.gate_included": [[142, "pyart-correct-gatefilter-gate-included"]], "pyart.correct.GateFilter.include_above": [[143, "pyart-correct-gatefilter-include-above"]], "pyart.correct.GateFilter.include_all": [[144, "pyart-correct-gatefilter-include-all"]], "pyart.correct.GateFilter.include_below": [[145, "pyart-correct-gatefilter-include-below"]], "pyart.correct.GateFilter.include_equal": [[146, "pyart-correct-gatefilter-include-equal"]], "pyart.correct.GateFilter.include_gates": [[147, "pyart-correct-gatefilter-include-gates"]], "pyart.correct.GateFilter.include_inside": [[148, "pyart-correct-gatefilter-include-inside"]], "pyart.correct.GateFilter.include_none": [[149, "pyart-correct-gatefilter-include-none"]], "pyart.correct.GateFilter.include_not_equal": [[150, "pyart-correct-gatefilter-include-not-equal"]], "pyart.correct.GateFilter.include_not_masked": [[151, "pyart-correct-gatefilter-include-not-masked"]], "pyart.correct.GateFilter.include_not_transition": [[152, "pyart-correct-gatefilter-include-not-transition"]], "pyart.correct.GateFilter.include_outside": [[153, "pyart-correct-gatefilter-include-outside"]], "pyart.correct.GateFilter.include_valid": [[154, "pyart-correct-gatefilter-include-valid"]], "pyart.correct.calculate_attenuation": [[155, "pyart-correct-calculate-attenuation"]], "pyart.correct.calculate_attenuation_philinear": [[156, "pyart-correct-calculate-attenuation-philinear"]], "pyart.correct.calculate_attenuation_zphi": [[157, "pyart-correct-calculate-attenuation-zphi"]], "pyart.correct.correct_bias": [[158, "pyart-correct-correct-bias"]], "pyart.correct.correct_noise_rhohv": [[159, "pyart-correct-correct-noise-rhohv"]], "pyart.correct.dealias_fourdd": [[160, "pyart-correct-dealias-fourdd"]], "pyart.correct.dealias_region_based": [[161, "pyart-correct-dealias-region-based"]], "pyart.correct.dealias_unwrap_phase": [[162, "pyart-correct-dealias-unwrap-phase"]], "pyart.correct.despeckle_field": [[163, "pyart-correct-despeckle-field"]], "pyart.correct.find_objects": [[164, "pyart-correct-find-objects"]], "pyart.correct.moment_based_gate_filter": [[165, "pyart-correct-moment-based-gate-filter"]], "pyart.correct.phase_proc_lp": [[166, "pyart-correct-phase-proc-lp"]], "pyart.correct.phase_proc_lp_gf": [[167, "pyart-correct-phase-proc-lp-gf"]], "pyart.exceptions": [[168, "pyart-exceptions"]], "pyart.filters": [[169, "pyart-filters"]], "pyart.filters.GateFilter": [[170, "pyart-filters-gatefilter"]], "pyart.filters.GateFilter.copy": [[171, "pyart-filters-gatefilter-copy"]], "pyart.filters.GateFilter.exclude_above": [[172, "pyart-filters-gatefilter-exclude-above"]], "pyart.filters.GateFilter.exclude_all": [[173, "pyart-filters-gatefilter-exclude-all"]], "pyart.filters.GateFilter.exclude_below": [[174, "pyart-filters-gatefilter-exclude-below"]], "pyart.filters.GateFilter.exclude_equal": [[175, "pyart-filters-gatefilter-exclude-equal"]], "pyart.filters.GateFilter.exclude_gates": [[176, "pyart-filters-gatefilter-exclude-gates"]], "pyart.filters.GateFilter.exclude_inside": [[177, "pyart-filters-gatefilter-exclude-inside"]], "pyart.filters.GateFilter.exclude_invalid": [[178, "pyart-filters-gatefilter-exclude-invalid"]], "pyart.filters.GateFilter.exclude_masked": [[179, "pyart-filters-gatefilter-exclude-masked"]], "pyart.filters.GateFilter.exclude_none": [[180, "pyart-filters-gatefilter-exclude-none"]], "pyart.filters.GateFilter.exclude_not_equal": [[181, "pyart-filters-gatefilter-exclude-not-equal"]], "pyart.filters.GateFilter.exclude_outside": [[182, "pyart-filters-gatefilter-exclude-outside"]], "pyart.filters.GateFilter.exclude_transition": [[183, "pyart-filters-gatefilter-exclude-transition"]], "pyart.filters.GateFilter.gate_excluded": [[184, "pyart-filters-gatefilter-gate-excluded"]], "pyart.filters.GateFilter.gate_included": [[185, "pyart-filters-gatefilter-gate-included"]], "pyart.filters.GateFilter.include_above": [[186, "pyart-filters-gatefilter-include-above"]], "pyart.filters.GateFilter.include_all": [[187, "pyart-filters-gatefilter-include-all"]], "pyart.filters.GateFilter.include_below": [[188, "pyart-filters-gatefilter-include-below"]], "pyart.filters.GateFilter.include_equal": [[189, "pyart-filters-gatefilter-include-equal"]], "pyart.filters.GateFilter.include_gates": [[190, "pyart-filters-gatefilter-include-gates"]], "pyart.filters.GateFilter.include_inside": [[191, "pyart-filters-gatefilter-include-inside"]], "pyart.filters.GateFilter.include_none": [[192, "pyart-filters-gatefilter-include-none"]], "pyart.filters.GateFilter.include_not_equal": [[193, "pyart-filters-gatefilter-include-not-equal"]], "pyart.filters.GateFilter.include_not_masked": [[194, "pyart-filters-gatefilter-include-not-masked"]], "pyart.filters.GateFilter.include_not_transition": [[195, "pyart-filters-gatefilter-include-not-transition"]], "pyart.filters.GateFilter.include_outside": [[196, "pyart-filters-gatefilter-include-outside"]], "pyart.filters.GateFilter.include_valid": [[197, "pyart-filters-gatefilter-include-valid"]], "pyart.filters.iso0_based_gate_filter": [[198, "pyart-filters-iso0-based-gate-filter"]], "pyart.filters.moment_and_texture_based_gate_filter": [[199, "pyart-filters-moment-and-texture-based-gate-filter"]], "pyart.filters.moment_based_gate_filter": [[200, "pyart-filters-moment-based-gate-filter"]], "pyart.filters.temp_based_gate_filter": [[201, "pyart-filters-temp-based-gate-filter"]], "pyart.graph": [[202, "pyart-graph"]], "pyart.graph.AirborneRadarDisplay": [[203, "pyart-graph-airborneradardisplay"]], "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title": [[204, "pyart-graph-airborneradardisplay-generate-az-rhi-title"]], "pyart.graph.AirborneRadarDisplay.generate_filename": [[205, "pyart-graph-airborneradardisplay-generate-filename"]], "pyart.graph.AirborneRadarDisplay.generate_ray_title": [[206, "pyart-graph-airborneradardisplay-generate-ray-title"]], "pyart.graph.AirborneRadarDisplay.generate_title": [[207, "pyart-graph-airborneradardisplay-generate-title"]], "pyart.graph.AirborneRadarDisplay.generate_vpt_title": [[208, "pyart-graph-airborneradardisplay-generate-vpt-title"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_r": [[209, "pyart-graph-airborneradardisplay-label-xaxis-r"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_rays": [[210, "pyart-graph-airborneradardisplay-label-xaxis-rays"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_time": [[211, "pyart-graph-airborneradardisplay-label-xaxis-time"]], "pyart.graph.AirborneRadarDisplay.label_xaxis_x": [[212, "pyart-graph-airborneradardisplay-label-xaxis-x"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_field": [[213, "pyart-graph-airborneradardisplay-label-yaxis-field"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_y": [[214, "pyart-graph-airborneradardisplay-label-yaxis-y"]], "pyart.graph.AirborneRadarDisplay.label_yaxis_z": [[215, "pyart-graph-airborneradardisplay-label-yaxis-z"]], "pyart.graph.AirborneRadarDisplay.plot": [[216, "pyart-graph-airborneradardisplay-plot"]], "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi": [[217, "pyart-graph-airborneradardisplay-plot-azimuth-to-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_colorbar": [[218, "pyart-graph-airborneradardisplay-plot-colorbar"]], "pyart.graph.AirborneRadarDisplay.plot_cr_raster": [[219, "pyart-graph-airborneradardisplay-plot-cr-raster"]], "pyart.graph.AirborneRadarDisplay.plot_cross_hair": [[220, "pyart-graph-airborneradardisplay-plot-cross-hair"]], "pyart.graph.AirborneRadarDisplay.plot_grid_lines": [[221, "pyart-graph-airborneradardisplay-plot-grid-lines"]], "pyart.graph.AirborneRadarDisplay.plot_label": [[222, "pyart-graph-airborneradardisplay-plot-label"]], "pyart.graph.AirborneRadarDisplay.plot_labels": [[223, "pyart-graph-airborneradardisplay-plot-labels"]], "pyart.graph.AirborneRadarDisplay.plot_ppi": [[224, "pyart-graph-airborneradardisplay-plot-ppi"]], "pyart.graph.AirborneRadarDisplay.plot_range_ring": [[225, "pyart-graph-airborneradardisplay-plot-range-ring"]], "pyart.graph.AirborneRadarDisplay.plot_range_rings": [[226, "pyart-graph-airborneradardisplay-plot-range-rings"]], "pyart.graph.AirborneRadarDisplay.plot_ray": [[227, "pyart-graph-airborneradardisplay-plot-ray"]], "pyart.graph.AirborneRadarDisplay.plot_rhi": [[228, "pyart-graph-airborneradardisplay-plot-rhi"]], "pyart.graph.AirborneRadarDisplay.plot_sweep_grid": [[229, "pyart-graph-airborneradardisplay-plot-sweep-grid"]], "pyart.graph.AirborneRadarDisplay.plot_vpt": [[230, "pyart-graph-airborneradardisplay-plot-vpt"]], "pyart.graph.AirborneRadarDisplay.set_aspect_ratio": [[231, "pyart-graph-airborneradardisplay-set-aspect-ratio"]], "pyart.graph.AirborneRadarDisplay.set_limits": [[232, "pyart-graph-airborneradardisplay-set-limits"]], "pyart.graph.GridMapDisplay": [[233, "pyart-graph-gridmapdisplay"]], "pyart.graph.GridMapDisplay.cartopy_coastlines": [[234, "pyart-graph-gridmapdisplay-cartopy-coastlines"]], "pyart.graph.GridMapDisplay.cartopy_political_boundaries": [[235, "pyart-graph-gridmapdisplay-cartopy-political-boundaries"]], "pyart.graph.GridMapDisplay.cartopy_states": [[236, "pyart-graph-gridmapdisplay-cartopy-states"]], "pyart.graph.GridMapDisplay.generate_filename": [[237, "pyart-graph-gridmapdisplay-generate-filename"]], "pyart.graph.GridMapDisplay.generate_grid_title": [[238, "pyart-graph-gridmapdisplay-generate-grid-title"]], "pyart.graph.GridMapDisplay.generate_latitudinal_level_title": [[239, "pyart-graph-gridmapdisplay-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplay.generate_longitudinal_level_title": [[240, "pyart-graph-gridmapdisplay-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplay.plot_colorbar": [[241, "pyart-graph-gridmapdisplay-plot-colorbar"]], "pyart.graph.GridMapDisplay.plot_cross_section": [[242, "pyart-graph-gridmapdisplay-plot-cross-section"]], "pyart.graph.GridMapDisplay.plot_crosshairs": [[243, "pyart-graph-gridmapdisplay-plot-crosshairs"]], "pyart.graph.GridMapDisplay.plot_grid": [[244, "pyart-graph-gridmapdisplay-plot-grid"]], "pyart.graph.GridMapDisplay.plot_latitude_slice": [[245, "pyart-graph-gridmapdisplay-plot-latitude-slice"]], "pyart.graph.GridMapDisplay.plot_latitudinal_level": [[246, "pyart-graph-gridmapdisplay-plot-latitudinal-level"]], "pyart.graph.GridMapDisplay.plot_longitude_slice": [[247, "pyart-graph-gridmapdisplay-plot-longitude-slice"]], "pyart.graph.GridMapDisplay.plot_longitudinal_level": [[248, "pyart-graph-gridmapdisplay-plot-longitudinal-level"]], "pyart.graph.GridMapDisplayBasemap": [[249, "pyart-graph-gridmapdisplaybasemap"]], "pyart.graph.GridMapDisplayBasemap.generate_filename": [[250, "pyart-graph-gridmapdisplaybasemap-generate-filename"]], "pyart.graph.GridMapDisplayBasemap.generate_grid_title": [[251, "pyart-graph-gridmapdisplaybasemap-generate-grid-title"]], "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title": [[252, "pyart-graph-gridmapdisplaybasemap-generate-latitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title": [[253, "pyart-graph-gridmapdisplaybasemap-generate-longitudinal-level-title"]], "pyart.graph.GridMapDisplayBasemap.get_basemap": [[254, "pyart-graph-gridmapdisplaybasemap-get-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_basemap": [[255, "pyart-graph-gridmapdisplaybasemap-plot-basemap"]], "pyart.graph.GridMapDisplayBasemap.plot_colorbar": [[256, "pyart-graph-gridmapdisplaybasemap-plot-colorbar"]], "pyart.graph.GridMapDisplayBasemap.plot_crosshairs": [[257, "pyart-graph-gridmapdisplaybasemap-plot-crosshairs"]], "pyart.graph.GridMapDisplayBasemap.plot_grid": [[258, "pyart-graph-gridmapdisplaybasemap-plot-grid"]], "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice": [[259, "pyart-graph-gridmapdisplaybasemap-plot-latitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level": [[260, "pyart-graph-gridmapdisplaybasemap-plot-latitudinal-level"]], "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice": [[261, "pyart-graph-gridmapdisplaybasemap-plot-longitude-slice"]], "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level": [[262, "pyart-graph-gridmapdisplaybasemap-plot-longitudinal-level"]], "pyart.graph.RadarDisplay": [[263, "pyart-graph-radardisplay"]], "pyart.graph.RadarDisplay.generate_az_rhi_title": [[264, "pyart-graph-radardisplay-generate-az-rhi-title"]], "pyart.graph.RadarDisplay.generate_filename": [[265, "pyart-graph-radardisplay-generate-filename"]], "pyart.graph.RadarDisplay.generate_ray_title": [[266, "pyart-graph-radardisplay-generate-ray-title"]], "pyart.graph.RadarDisplay.generate_title": [[267, "pyart-graph-radardisplay-generate-title"]], "pyart.graph.RadarDisplay.generate_vpt_title": [[268, "pyart-graph-radardisplay-generate-vpt-title"]], "pyart.graph.RadarDisplay.label_xaxis_r": [[269, "pyart-graph-radardisplay-label-xaxis-r"]], "pyart.graph.RadarDisplay.label_xaxis_rays": [[270, "pyart-graph-radardisplay-label-xaxis-rays"]], "pyart.graph.RadarDisplay.label_xaxis_time": [[271, "pyart-graph-radardisplay-label-xaxis-time"]], "pyart.graph.RadarDisplay.label_xaxis_x": [[272, "pyart-graph-radardisplay-label-xaxis-x"]], "pyart.graph.RadarDisplay.label_yaxis_field": [[273, "pyart-graph-radardisplay-label-yaxis-field"]], "pyart.graph.RadarDisplay.label_yaxis_y": [[274, "pyart-graph-radardisplay-label-yaxis-y"]], "pyart.graph.RadarDisplay.label_yaxis_z": [[275, "pyart-graph-radardisplay-label-yaxis-z"]], "pyart.graph.RadarDisplay.plot": [[276, "pyart-graph-radardisplay-plot"]], "pyart.graph.RadarDisplay.plot_azimuth_to_rhi": [[277, "pyart-graph-radardisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarDisplay.plot_colorbar": [[278, "pyart-graph-radardisplay-plot-colorbar"]], "pyart.graph.RadarDisplay.plot_cr_raster": [[279, "pyart-graph-radardisplay-plot-cr-raster"]], "pyart.graph.RadarDisplay.plot_cross_hair": [[280, "pyart-graph-radardisplay-plot-cross-hair"]], "pyart.graph.RadarDisplay.plot_grid_lines": [[281, "pyart-graph-radardisplay-plot-grid-lines"]], "pyart.graph.RadarDisplay.plot_label": [[282, "pyart-graph-radardisplay-plot-label"]], "pyart.graph.RadarDisplay.plot_labels": [[283, "pyart-graph-radardisplay-plot-labels"]], "pyart.graph.RadarDisplay.plot_ppi": [[284, "pyart-graph-radardisplay-plot-ppi"]], "pyart.graph.RadarDisplay.plot_range_ring": [[285, "pyart-graph-radardisplay-plot-range-ring"]], "pyart.graph.RadarDisplay.plot_range_rings": [[286, "pyart-graph-radardisplay-plot-range-rings"]], "pyart.graph.RadarDisplay.plot_ray": [[287, "pyart-graph-radardisplay-plot-ray"]], "pyart.graph.RadarDisplay.plot_rhi": [[288, "pyart-graph-radardisplay-plot-rhi"]], "pyart.graph.RadarDisplay.plot_vpt": [[289, "pyart-graph-radardisplay-plot-vpt"]], "pyart.graph.RadarDisplay.set_aspect_ratio": [[290, "pyart-graph-radardisplay-set-aspect-ratio"]], "pyart.graph.RadarDisplay.set_limits": [[291, "pyart-graph-radardisplay-set-limits"]], "pyart.graph.RadarMapDisplay": [[292, "pyart-graph-radarmapdisplay"]], "pyart.graph.RadarMapDisplay.generate_az_rhi_title": [[293, "pyart-graph-radarmapdisplay-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplay.generate_filename": [[294, "pyart-graph-radarmapdisplay-generate-filename"]], "pyart.graph.RadarMapDisplay.generate_ray_title": [[295, "pyart-graph-radarmapdisplay-generate-ray-title"]], "pyart.graph.RadarMapDisplay.generate_title": [[296, "pyart-graph-radarmapdisplay-generate-title"]], "pyart.graph.RadarMapDisplay.generate_vpt_title": [[297, "pyart-graph-radarmapdisplay-generate-vpt-title"]], "pyart.graph.RadarMapDisplay.label_xaxis_r": [[298, "pyart-graph-radarmapdisplay-label-xaxis-r"]], "pyart.graph.RadarMapDisplay.label_xaxis_rays": [[299, "pyart-graph-radarmapdisplay-label-xaxis-rays"]], "pyart.graph.RadarMapDisplay.label_xaxis_time": [[300, "pyart-graph-radarmapdisplay-label-xaxis-time"]], "pyart.graph.RadarMapDisplay.label_xaxis_x": [[301, "pyart-graph-radarmapdisplay-label-xaxis-x"]], "pyart.graph.RadarMapDisplay.label_yaxis_field": [[302, "pyart-graph-radarmapdisplay-label-yaxis-field"]], "pyart.graph.RadarMapDisplay.label_yaxis_y": [[303, "pyart-graph-radarmapdisplay-label-yaxis-y"]], "pyart.graph.RadarMapDisplay.label_yaxis_z": [[304, "pyart-graph-radarmapdisplay-label-yaxis-z"]], "pyart.graph.RadarMapDisplay.plot": [[305, "pyart-graph-radarmapdisplay-plot"]], "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi": [[306, "pyart-graph-radarmapdisplay-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplay.plot_colorbar": [[307, "pyart-graph-radarmapdisplay-plot-colorbar"]], "pyart.graph.RadarMapDisplay.plot_cr_raster": [[308, "pyart-graph-radarmapdisplay-plot-cr-raster"]], "pyart.graph.RadarMapDisplay.plot_cross_hair": [[309, "pyart-graph-radarmapdisplay-plot-cross-hair"]], "pyart.graph.RadarMapDisplay.plot_grid_lines": [[310, "pyart-graph-radarmapdisplay-plot-grid-lines"]], "pyart.graph.RadarMapDisplay.plot_label": [[311, "pyart-graph-radarmapdisplay-plot-label"]], "pyart.graph.RadarMapDisplay.plot_labels": [[312, "pyart-graph-radarmapdisplay-plot-labels"]], "pyart.graph.RadarMapDisplay.plot_line_geo": [[313, "pyart-graph-radarmapdisplay-plot-line-geo"]], "pyart.graph.RadarMapDisplay.plot_line_xy": [[314, "pyart-graph-radarmapdisplay-plot-line-xy"]], "pyart.graph.RadarMapDisplay.plot_point": [[315, "pyart-graph-radarmapdisplay-plot-point"]], "pyart.graph.RadarMapDisplay.plot_ppi": [[316, "pyart-graph-radarmapdisplay-plot-ppi"]], "pyart.graph.RadarMapDisplay.plot_ppi_map": [[317, "pyart-graph-radarmapdisplay-plot-ppi-map"]], "pyart.graph.RadarMapDisplay.plot_range_ring": [[318, "pyart-graph-radarmapdisplay-plot-range-ring"]], "pyart.graph.RadarMapDisplay.plot_range_rings": [[319, "pyart-graph-radarmapdisplay-plot-range-rings"]], "pyart.graph.RadarMapDisplay.plot_ray": [[320, "pyart-graph-radarmapdisplay-plot-ray"]], "pyart.graph.RadarMapDisplay.plot_rhi": [[321, "pyart-graph-radarmapdisplay-plot-rhi"]], "pyart.graph.RadarMapDisplay.plot_vpt": [[322, "pyart-graph-radarmapdisplay-plot-vpt"]], "pyart.graph.RadarMapDisplay.set_aspect_ratio": [[323, "pyart-graph-radarmapdisplay-set-aspect-ratio"]], "pyart.graph.RadarMapDisplay.set_limits": [[324, "pyart-graph-radarmapdisplay-set-limits"]], "pyart.graph.RadarMapDisplayBasemap": [[325, "pyart-graph-radarmapdisplaybasemap"]], "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title": [[326, "pyart-graph-radarmapdisplaybasemap-generate-az-rhi-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_filename": [[327, "pyart-graph-radarmapdisplaybasemap-generate-filename"]], "pyart.graph.RadarMapDisplayBasemap.generate_ray_title": [[328, "pyart-graph-radarmapdisplaybasemap-generate-ray-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_title": [[329, "pyart-graph-radarmapdisplaybasemap-generate-title"]], "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title": [[330, "pyart-graph-radarmapdisplaybasemap-generate-vpt-title"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r": [[331, "pyart-graph-radarmapdisplaybasemap-label-xaxis-r"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays": [[332, "pyart-graph-radarmapdisplaybasemap-label-xaxis-rays"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time": [[333, "pyart-graph-radarmapdisplaybasemap-label-xaxis-time"]], "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x": [[334, "pyart-graph-radarmapdisplaybasemap-label-xaxis-x"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field": [[335, "pyart-graph-radarmapdisplaybasemap-label-yaxis-field"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y": [[336, "pyart-graph-radarmapdisplaybasemap-label-yaxis-y"]], "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z": [[337, "pyart-graph-radarmapdisplaybasemap-label-yaxis-z"]], "pyart.graph.RadarMapDisplayBasemap.plot": [[338, "pyart-graph-radarmapdisplaybasemap-plot"]], "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi": [[339, "pyart-graph-radarmapdisplaybasemap-plot-azimuth-to-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_colorbar": [[340, "pyart-graph-radarmapdisplaybasemap-plot-colorbar"]], "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster": [[341, "pyart-graph-radarmapdisplaybasemap-plot-cr-raster"]], "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair": [[342, "pyart-graph-radarmapdisplaybasemap-plot-cross-hair"]], "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines": [[343, "pyart-graph-radarmapdisplaybasemap-plot-grid-lines"]], "pyart.graph.RadarMapDisplayBasemap.plot_label": [[344, "pyart-graph-radarmapdisplaybasemap-plot-label"]], "pyart.graph.RadarMapDisplayBasemap.plot_labels": [[345, "pyart-graph-radarmapdisplaybasemap-plot-labels"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_geo": [[346, "pyart-graph-radarmapdisplaybasemap-plot-line-geo"]], "pyart.graph.RadarMapDisplayBasemap.plot_line_xy": [[347, "pyart-graph-radarmapdisplaybasemap-plot-line-xy"]], "pyart.graph.RadarMapDisplayBasemap.plot_point": [[348, "pyart-graph-radarmapdisplaybasemap-plot-point"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi": [[349, "pyart-graph-radarmapdisplaybasemap-plot-ppi"]], "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map": [[350, "pyart-graph-radarmapdisplaybasemap-plot-ppi-map"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_ring": [[351, "pyart-graph-radarmapdisplaybasemap-plot-range-ring"]], "pyart.graph.RadarMapDisplayBasemap.plot_range_rings": [[352, "pyart-graph-radarmapdisplaybasemap-plot-range-rings"]], "pyart.graph.RadarMapDisplayBasemap.plot_ray": [[353, "pyart-graph-radarmapdisplaybasemap-plot-ray"]], "pyart.graph.RadarMapDisplayBasemap.plot_rhi": [[354, "pyart-graph-radarmapdisplaybasemap-plot-rhi"]], "pyart.graph.RadarMapDisplayBasemap.plot_vpt": [[355, "pyart-graph-radarmapdisplaybasemap-plot-vpt"]], "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio": [[356, "pyart-graph-radarmapdisplaybasemap-set-aspect-ratio"]], "pyart.graph.RadarMapDisplayBasemap.set_limits": [[357, "pyart-graph-radarmapdisplaybasemap-set-limits"]], "pyart.graph.plot_convstrat_scheme": [[358, "pyart-graph-plot-convstrat-scheme"]], "pyart.io": [[359, "pyart-io"]], "pyart.io.prepare_for_read": [[360, "pyart-io-prepare-for-read"]], "pyart.io.read": [[361, "pyart-io-read"]], "pyart.io.read_arm_sonde": [[362, "pyart-io-read-arm-sonde"]], "pyart.io.read_arm_sonde_vap": [[363, "pyart-io-read-arm-sonde-vap"]], "pyart.io.read_cfradial": [[364, "pyart-io-read-cfradial"]], "pyart.io.read_chl": [[365, "pyart-io-read-chl"]], "pyart.io.read_grid": [[366, "pyart-io-read-grid"]], "pyart.io.read_grid_mdv": [[367, "pyart-io-read-grid-mdv"]], "pyart.io.read_mdv": [[368, "pyart-io-read-mdv"]], "pyart.io.read_nexrad_archive": [[369, "pyart-io-read-nexrad-archive"]], "pyart.io.read_nexrad_cdm": [[370, "pyart-io-read-nexrad-cdm"]], "pyart.io.read_nexrad_level3": [[371, "pyart-io-read-nexrad-level3"]], "pyart.io.read_rsl": [[372, "pyart-io-read-rsl"]], "pyart.io.read_sigmet": [[373, "pyart-io-read-sigmet"]], "pyart.io.read_uf": [[374, "pyart-io-read-uf"]], "pyart.io.write_cfradial": [[375, "pyart-io-write-cfradial"]], "pyart.io.write_grid": [[376, "pyart-io-write-grid"]], "pyart.io.write_grid_geotiff": [[377, "pyart-io-write-grid-geotiff"]], "pyart.io.write_grid_mdv": [[378, "pyart-io-write-grid-mdv"]], "pyart.io.write_uf": [[379, "pyart-io-write-uf"]], "pyart.lazydict": [[380, "pyart-lazydict"]], "pyart.lazydict.LazyLoadDict": [[381, "pyart-lazydict-lazyloaddict"]], "pyart.lazydict.LazyLoadDict.clear": [[382, "pyart-lazydict-lazyloaddict-clear"]], "pyart.lazydict.LazyLoadDict.copy": [[383, "pyart-lazydict-lazyloaddict-copy"]], "pyart.lazydict.LazyLoadDict.get": [[384, "pyart-lazydict-lazyloaddict-get"]], "pyart.lazydict.LazyLoadDict.has_key": [[385, "pyart-lazydict-lazyloaddict-has-key"]], "pyart.lazydict.LazyLoadDict.items": [[386, "pyart-lazydict-lazyloaddict-items"]], "pyart.lazydict.LazyLoadDict.keys": [[387, "pyart-lazydict-lazyloaddict-keys"]], "pyart.lazydict.LazyLoadDict.pop": [[388, "pyart-lazydict-lazyloaddict-pop"]], "pyart.lazydict.LazyLoadDict.popitem": [[389, "pyart-lazydict-lazyloaddict-popitem"]], "pyart.lazydict.LazyLoadDict.set_lazy": [[390, "pyart-lazydict-lazyloaddict-set-lazy"]], "pyart.lazydict.LazyLoadDict.setdefault": [[391, "pyart-lazydict-lazyloaddict-setdefault"]], "pyart.lazydict.LazyLoadDict.update": [[392, "pyart-lazydict-lazyloaddict-update"]], "pyart.lazydict.LazyLoadDict.values": [[393, "pyart-lazydict-lazyloaddict-values"]], "pyart.lazydict.MutableMapping": [[394, "pyart-lazydict-mutablemapping"]], "pyart.lazydict.MutableMapping.clear": [[395, "pyart-lazydict-mutablemapping-clear"]], "pyart.lazydict.MutableMapping.get": [[396, "pyart-lazydict-mutablemapping-get"]], "pyart.lazydict.MutableMapping.items": [[397, "pyart-lazydict-mutablemapping-items"]], "pyart.lazydict.MutableMapping.keys": [[398, "pyart-lazydict-mutablemapping-keys"]], "pyart.lazydict.MutableMapping.pop": [[399, "pyart-lazydict-mutablemapping-pop"]], "pyart.lazydict.MutableMapping.popitem": [[400, "pyart-lazydict-mutablemapping-popitem"]], "pyart.lazydict.MutableMapping.setdefault": [[401, "pyart-lazydict-mutablemapping-setdefault"]], "pyart.lazydict.MutableMapping.update": [[402, "pyart-lazydict-mutablemapping-update"]], "pyart.lazydict.MutableMapping.values": [[403, "pyart-lazydict-mutablemapping-values"]], "pyart.map": [[404, "pyart-map"]], "pyart.map.GateMapper": [[405, "pyart-map-gatemapper"]], "pyart.map.GateMapper.distance_tolerance": [[406, "pyart-map-gatemapper-distance-tolerance"]], "pyart.map.GateMapper.mapped_radar": [[407, "pyart-map-gatemapper-mapped-radar"]], "pyart.map.GateMapper.time_tolerance": [[408, "pyart-map-gatemapper-time-tolerance"]], "pyart.map.example_roi_func_constant": [[409, "pyart-map-example-roi-func-constant"]], "pyart.map.example_roi_func_dist": [[410, "pyart-map-example-roi-func-dist"]], "pyart.map.example_roi_func_dist_beam": [[411, "pyart-map-example-roi-func-dist-beam"]], "pyart.map.grid_from_radars": [[412, "pyart-map-grid-from-radars"]], "pyart.map.grid_ppi_sweeps": [[413, "pyart-map-grid-ppi-sweeps"]], "pyart.map.grid_rhi_sweeps": [[414, "pyart-map-grid-rhi-sweeps"]], "pyart.map.map_gates_to_grid": [[415, "pyart-map-map-gates-to-grid"]], "pyart.map.map_to_grid": [[416, "pyart-map-map-to-grid"]], "pyart.retrieve": [[417, "pyart-retrieve"]], "pyart.retrieve.ZtoR": [[418, "pyart-retrieve-ztor"]], "pyart.retrieve.calculate_snr_from_reflectivity": [[419, "pyart-retrieve-calculate-snr-from-reflectivity"]], "pyart.retrieve.calculate_velocity_texture": [[420, "pyart-retrieve-calculate-velocity-texture"]], "pyart.retrieve.composite_reflectivity": [[421, "pyart-retrieve-composite-reflectivity"]], "pyart.retrieve.compute_cdr": [[422, "pyart-retrieve-compute-cdr"]], "pyart.retrieve.compute_l": [[423, "pyart-retrieve-compute-l"]], "pyart.retrieve.compute_noisedBZ": [[424, "pyart-retrieve-compute-noisedbz"]], "pyart.retrieve.compute_snr": [[425, "pyart-retrieve-compute-snr"]], "pyart.retrieve.conv_strat_raut": [[426, "pyart-retrieve-conv-strat-raut"]], "pyart.retrieve.conv_strat_yuter": [[427, "pyart-retrieve-conv-strat-yuter"]], "pyart.retrieve.create_cfad": [[428, "pyart-retrieve-create-cfad"]], "pyart.retrieve.dealias_spectra": [[429, "pyart-retrieve-dealias-spectra"]], "pyart.retrieve.est_rain_rate_a": [[430, "pyart-retrieve-est-rain-rate-a"]], "pyart.retrieve.est_rain_rate_hydro": [[431, "pyart-retrieve-est-rain-rate-hydro"]], "pyart.retrieve.est_rain_rate_kdp": [[432, "pyart-retrieve-est-rain-rate-kdp"]], "pyart.retrieve.est_rain_rate_z": [[433, "pyart-retrieve-est-rain-rate-z"]], "pyart.retrieve.est_rain_rate_za": [[434, "pyart-retrieve-est-rain-rate-za"]], "pyart.retrieve.est_rain_rate_zkdp": [[435, "pyart-retrieve-est-rain-rate-zkdp"]], "pyart.retrieve.est_rain_rate_zpoly": [[436, "pyart-retrieve-est-rain-rate-zpoly"]], "pyart.retrieve.feature_detection": [[437, "pyart-retrieve-feature-detection"]], "pyart.retrieve.fetch_radar_time_profile": [[438, "pyart-retrieve-fetch-radar-time-profile"]], "pyart.retrieve.get_freq_band": [[439, "pyart-retrieve-get-freq-band"]], "pyart.retrieve.grid_displacement_pc": [[440, "pyart-retrieve-grid-displacement-pc"]], "pyart.retrieve.grid_shift": [[441, "pyart-retrieve-grid-shift"]], "pyart.retrieve.hydroclass_semisupervised": [[442, "pyart-retrieve-hydroclass-semisupervised"]], "pyart.retrieve.kdp_maesaka": [[443, "pyart-retrieve-kdp-maesaka"]], "pyart.retrieve.kdp_schneebeli": [[444, "pyart-retrieve-kdp-schneebeli"]], "pyart.retrieve.kdp_vulpiani": [[445, "pyart-retrieve-kdp-vulpiani"]], "pyart.retrieve.map_profile_to_gates": [[446, "pyart-retrieve-map-profile-to-gates"]], "pyart.retrieve.quasi_vertical_profile": [[447, "pyart-retrieve-quasi-vertical-profile"]], "pyart.retrieve.spectra_moments": [[448, "pyart-retrieve-spectra-moments"]], "Parameter": [[448, "parameter"]], "pyart.retrieve.steiner_conv_strat": [[449, "pyart-retrieve-steiner-conv-strat"]], "pyart.retrieve.texture_of_complex_phase": [[450, "pyart-retrieve-texture-of-complex-phase"]], "pyart.retrieve.vad_browning": [[451, "pyart-retrieve-vad-browning"]], "pyart.retrieve.vad_michelson": [[452, "pyart-retrieve-vad-michelson"]], "pyart.testing": [[453, "pyart-testing"]], "pyart.testing.Grid": [[454, "pyart-testing-grid"]], "pyart.testing.Grid.add_field": [[455, "pyart-testing-grid-add-field"]], "pyart.testing.Grid.get_point_longitude_latitude": [[456, "pyart-testing-grid-get-point-longitude-latitude"]], "pyart.testing.Grid.get_projparams": [[457, "pyart-testing-grid-get-projparams"]], "pyart.testing.Grid.init_point_altitude": [[458, "pyart-testing-grid-init-point-altitude"]], "pyart.testing.Grid.init_point_longitude_latitude": [[459, "pyart-testing-grid-init-point-longitude-latitude"]], "pyart.testing.Grid.init_point_x_y_z": [[460, "pyart-testing-grid-init-point-x-y-z"]], "pyart.testing.Grid.projection_proj": [[461, "pyart-testing-grid-projection-proj"]], "pyart.testing.Grid.to_xarray": [[462, "pyart-testing-grid-to-xarray"]], "pyart.testing.Grid.write": [[463, "pyart-testing-grid-write"]], "pyart.testing.InTemporaryDirectory": [[464, "pyart-testing-intemporarydirectory"]], "pyart.testing.InTemporaryDirectory.cleanup": [[465, "pyart-testing-intemporarydirectory-cleanup"]], "pyart.testing.Radar": [[466, "pyart-testing-radar"]], "pyart.testing.Radar.add_field": [[467, "pyart-testing-radar-add-field"]], "pyart.testing.Radar.add_field_like": [[468, "pyart-testing-radar-add-field-like"]], "pyart.testing.Radar.add_filter": [[469, "pyart-testing-radar-add-filter"]], "pyart.testing.Radar.check_field_exists": [[470, "pyart-testing-radar-check-field-exists"]], "pyart.testing.Radar.extract_sweeps": [[471, "pyart-testing-radar-extract-sweeps"]], "pyart.testing.Radar.get_azimuth": [[472, "pyart-testing-radar-get-azimuth"]], "pyart.testing.Radar.get_elevation": [[473, "pyart-testing-radar-get-elevation"]], "pyart.testing.Radar.get_end": [[474, "pyart-testing-radar-get-end"]], "pyart.testing.Radar.get_field": [[475, "pyart-testing-radar-get-field"]], "pyart.testing.Radar.get_gate_area": [[476, "pyart-testing-radar-get-gate-area"]], "pyart.testing.Radar.get_gate_lat_lon_alt": [[477, "pyart-testing-radar-get-gate-lat-lon-alt"]], "pyart.testing.Radar.get_gate_x_y_z": [[478, "pyart-testing-radar-get-gate-x-y-z"]], "pyart.testing.Radar.get_nyquist_vel": [[479, "pyart-testing-radar-get-nyquist-vel"]], "pyart.testing.Radar.get_slice": [[480, "pyart-testing-radar-get-slice"]], "pyart.testing.Radar.get_start": [[481, "pyart-testing-radar-get-start"]], "pyart.testing.Radar.get_start_end": [[482, "pyart-testing-radar-get-start-end"]], "pyart.testing.Radar.info": [[483, "pyart-testing-radar-info"]], "pyart.testing.Radar.init_gate_altitude": [[484, "pyart-testing-radar-init-gate-altitude"]], "pyart.testing.Radar.init_gate_longitude_latitude": [[485, "pyart-testing-radar-init-gate-longitude-latitude"]], "pyart.testing.Radar.init_gate_x_y_z": [[486, "pyart-testing-radar-init-gate-x-y-z"]], "pyart.testing.Radar.init_rays_per_sweep": [[487, "pyart-testing-radar-init-rays-per-sweep"]], "pyart.testing.Radar.iter_azimuth": [[488, "pyart-testing-radar-iter-azimuth"]], "pyart.testing.Radar.iter_elevation": [[489, "pyart-testing-radar-iter-elevation"]], "pyart.testing.Radar.iter_end": [[490, "pyart-testing-radar-iter-end"]], "pyart.testing.Radar.iter_field": [[491, "pyart-testing-radar-iter-field"]], "pyart.testing.Radar.iter_slice": [[492, "pyart-testing-radar-iter-slice"]], "pyart.testing.Radar.iter_start": [[493, "pyart-testing-radar-iter-start"]], "pyart.testing.Radar.iter_start_end": [[494, "pyart-testing-radar-iter-start-end"]], "pyart.testing.RadarSpectra": [[495, "pyart-testing-radarspectra"]], "pyart.testing.RadarSpectra.altitude": [[496, "pyart-testing-radarspectra-altitude"]], "pyart.testing.RadarSpectra.azimuth": [[497, "pyart-testing-radarspectra-azimuth"]], "pyart.testing.RadarSpectra.check_field_exists": [[498, "pyart-testing-radarspectra-check-field-exists"]], "pyart.testing.RadarSpectra.elevation": [[499, "pyart-testing-radarspectra-elevation"]], "pyart.testing.RadarSpectra.fields": [[500, "pyart-testing-radarspectra-fields"]], "pyart.testing.RadarSpectra.fixed_angle": [[501, "pyart-testing-radarspectra-fixed-angle"]], "pyart.testing.RadarSpectra.gate_altitude": [[502, "pyart-testing-radarspectra-gate-altitude"]], "pyart.testing.RadarSpectra.gate_latitude": [[503, "pyart-testing-radarspectra-gate-latitude"]], "pyart.testing.RadarSpectra.gate_longitude": [[504, "pyart-testing-radarspectra-gate-longitude"]], "pyart.testing.RadarSpectra.gate_x": [[505, "pyart-testing-radarspectra-gate-x"]], "pyart.testing.RadarSpectra.gate_y": [[506, "pyart-testing-radarspectra-gate-y"]], "pyart.testing.RadarSpectra.gate_z": [[507, "pyart-testing-radarspectra-gate-z"]], "pyart.testing.RadarSpectra.get_end": [[508, "pyart-testing-radarspectra-get-end"]], "pyart.testing.RadarSpectra.get_slice": [[509, "pyart-testing-radarspectra-get-slice"]], "pyart.testing.RadarSpectra.get_start": [[510, "pyart-testing-radarspectra-get-start"]], "pyart.testing.RadarSpectra.get_start_end": [[511, "pyart-testing-radarspectra-get-start-end"]], "pyart.testing.RadarSpectra.init_gate_altitude": [[512, "pyart-testing-radarspectra-init-gate-altitude"]], "pyart.testing.RadarSpectra.init_gate_longitude_latitude": [[513, "pyart-testing-radarspectra-init-gate-longitude-latitude"]], "pyart.testing.RadarSpectra.init_gate_x_y_z": [[514, "pyart-testing-radarspectra-init-gate-x-y-z"]], "pyart.testing.RadarSpectra.init_rays_per_sweep": [[515, "pyart-testing-radarspectra-init-rays-per-sweep"]], "pyart.testing.RadarSpectra.iter_azimuth": [[516, "pyart-testing-radarspectra-iter-azimuth"]], "pyart.testing.RadarSpectra.iter_elevation": [[517, "pyart-testing-radarspectra-iter-elevation"]], "pyart.testing.RadarSpectra.iter_end": [[518, "pyart-testing-radarspectra-iter-end"]], "pyart.testing.RadarSpectra.iter_field": [[519, "pyart-testing-radarspectra-iter-field"]], "pyart.testing.RadarSpectra.iter_slice": [[520, "pyart-testing-radarspectra-iter-slice"]], "pyart.testing.RadarSpectra.iter_start": [[521, "pyart-testing-radarspectra-iter-start"]], "pyart.testing.RadarSpectra.iter_start_end": [[522, "pyart-testing-radarspectra-iter-start-end"]], "pyart.testing.RadarSpectra.latitude": [[523, "pyart-testing-radarspectra-latitude"]], "pyart.testing.RadarSpectra.longitude": [[524, "pyart-testing-radarspectra-longitude"]], "pyart.testing.RadarSpectra.ngates": [[525, "pyart-testing-radarspectra-ngates"]], "pyart.testing.RadarSpectra.npulses_max": [[526, "pyart-testing-radarspectra-npulses-max"]], "pyart.testing.RadarSpectra.nrays": [[527, "pyart-testing-radarspectra-nrays"]], "pyart.testing.RadarSpectra.nsweeps": [[528, "pyart-testing-radarspectra-nsweeps"]], "pyart.testing.RadarSpectra.projection": [[529, "pyart-testing-radarspectra-projection"]], "pyart.testing.RadarSpectra.range": [[530, "pyart-testing-radarspectra-range"]], "pyart.testing.RadarSpectra.rays_per_sweep": [[531, "pyart-testing-radarspectra-rays-per-sweep"]], "pyart.testing.RadarSpectra.scan_type": [[532, "pyart-testing-radarspectra-scan-type"]], "pyart.testing.RadarSpectra.sweep_end_ray_index": [[533, "pyart-testing-radarspectra-sweep-end-ray-index"]], "pyart.testing.RadarSpectra.sweep_mode": [[534, "pyart-testing-radarspectra-sweep-mode"]], "pyart.testing.RadarSpectra.sweep_number": [[535, "pyart-testing-radarspectra-sweep-number"]], "pyart.testing.RadarSpectra.sweep_start_ray_index": [[536, "pyart-testing-radarspectra-sweep-start-ray-index"]], "pyart.testing.RadarSpectra.time": [[537, "pyart-testing-radarspectra-time"]], "pyart.testing.RadarSpectra.to_vpt": [[538, "pyart-testing-radarspectra-to-vpt"]], "pyart.testing.RadarSpectra.velocity_bins": [[539, "pyart-testing-radarspectra-velocity-bins"]], "pyart.testing.get_metadata": [[540, "pyart-testing-get-metadata"]], "pyart.testing.get_test_data": [[541, "pyart-testing-get-test-data"]], "pyart.testing.make_empty_grid": [[542, "pyart-testing-make-empty-grid"]], "pyart.testing.make_empty_ppi_radar": [[543, "pyart-testing-make-empty-ppi-radar"]], "pyart.testing.make_empty_rhi_radar": [[544, "pyart-testing-make-empty-rhi-radar"]], "pyart.testing.make_empty_spectra_radar": [[545, "pyart-testing-make-empty-spectra-radar"]], "pyart.testing.make_gaussian_storm_grid": [[546, "pyart-testing-make-gaussian-storm-grid"]], "pyart.testing.make_normal_storm": [[547, "pyart-testing-make-normal-storm"]], "pyart.testing.make_single_ray_radar": [[548, "pyart-testing-make-single-ray-radar"]], "pyart.testing.make_storm_grid": [[549, "pyart-testing-make-storm-grid"]], "pyart.testing.make_target_grid": [[550, "pyart-testing-make-target-grid"]], "pyart.testing.make_target_radar": [[551, "pyart-testing-make-target-radar"]], "pyart.testing.make_target_rhi_radar": [[552, "pyart-testing-make-target-rhi-radar"]], "pyart.testing.make_target_spectra_radar": [[553, "pyart-testing-make-target-spectra-radar"]], "pyart.testing.make_velocity_aliased_radar": [[554, "pyart-testing-make-velocity-aliased-radar"]], "pyart.testing.make_velocity_aliased_rhi_radar": [[555, "pyart-testing-make-velocity-aliased-rhi-radar"]], "pyart.util": [[556, "pyart-util"]], "pyart.util.angular_mean": [[557, "pyart-util-angular-mean"]], "pyart.util.angular_mean_deg": [[558, "pyart-util-angular-mean-deg"]], "pyart.util.angular_std": [[559, "pyart-util-angular-std"]], "pyart.util.angular_std_deg": [[560, "pyart-util-angular-std-deg"]], "pyart.util.angular_texture_2d": [[561, "pyart-util-angular-texture-2d"]], "pyart.util.column_vertical_profile": [[562, "pyart-util-column-vertical-profile"]], "pyart.util.cross_section_ppi": [[563, "pyart-util-cross-section-ppi"]], "pyart.util.cross_section_rhi": [[564, "pyart-util-cross-section-rhi"]], "pyart.util.datetime_from_dataset": [[565, "pyart-util-datetime-from-dataset"]], "pyart.util.datetime_from_grid": [[566, "pyart-util-datetime-from-grid"]], "pyart.util.datetime_from_radar": [[567, "pyart-util-datetime-from-radar"]], "pyart.util.datetimes_from_dataset": [[568, "pyart-util-datetimes-from-dataset"]], "pyart.util.datetimes_from_radar": [[569, "pyart-util-datetimes-from-radar"]], "pyart.util.determine_sweeps": [[570, "pyart-util-determine-sweeps"]], "pyart.util.estimate_noise_hs74": [[571, "pyart-util-estimate-noise-hs74"]], "pyart.util.for_azimuth": [[572, "pyart-util-for-azimuth"]], "Assumptions": [[572, "assumptions"], [584, "assumptions"]], "pyart.util.get_column_rays": [[573, "pyart-util-get-column-rays"]], "pyart.util.get_field_location": [[574, "pyart-util-get-field-location"]], "pyart.util.image_mute_radar": [[575, "pyart-util-image-mute-radar"]], "pyart.util.interval_mean": [[576, "pyart-util-interval-mean"]], "pyart.util.interval_std": [[577, "pyart-util-interval-std"]], "pyart.util.is_vpt": [[578, "pyart-util-is-vpt"]], "pyart.util.join_radar": [[579, "pyart-util-join-radar"]], "pyart.util.mean_of_two_angles": [[580, "pyart-util-mean-of-two-angles"]], "pyart.util.mean_of_two_angles_deg": [[581, "pyart-util-mean-of-two-angles-deg"]], "pyart.util.rolling_window": [[582, "pyart-util-rolling-window"]], "pyart.util.simulated_vel_from_profile": [[583, "pyart-util-simulated-vel-from-profile"]], "pyart.util.sphere_distance": [[584, "pyart-util-sphere-distance"]], "pyart.util.subset_radar": [[585, "pyart-util-subset-radar"]], "pyart.util.texture": [[586, "pyart-util-texture"]], "pyart.util.texture_along_ray": [[587, "pyart-util-texture-along-ray"]], "pyart.util.to_vpt": [[588, "pyart-util-to-vpt"]], "API Reference Manual": [[589, "api-reference-manual"]], "Blog": [[590, "blog"]], "Blending Observations from TRACER using Py-ART": [[591, "blending-observations-from-tracer-using-py-art"]], "Imports": [[591, "imports"], [593, "imports"], [594, "imports"], [595, "imports"], [597, "imports"]], "GOES data access": [[591, "goes-data-access"]], "CSAPR data access": [[591, "csapr-data-access"]], "Load LMA Flash data": [[591, "load-lma-flash-data"]], "June 17th case": [[591, "june-17th-case"]], "June 17 RHI": [[591, "june-17-rhi"]], "Active Py-ART Development - Submitting a Pull Request (PR)": [[592, "active-py-art-development-submitting-a-pull-request-pr"]], "First, if you have not done so already, you will need to fork the Py-ART github repository": [[592, "first-if-you-have-not-done-so-already-you-will-need-to-fork-the-py-art-github-repository"]], "Second, in a terminal, you will need to clone your remote fork with the \u201cgit clone\u201d command": [[592, "second-in-a-terminal-you-will-need-to-clone-your-remote-fork-with-the-git-clone-command"]], "Third, create the \u201cpyart-docs\u201d conda environment": [[592, "third-create-the-pyart-docs-conda-environment"]], "Fourth, we will need to install the (TRMM RSL Library)": [[592, "fourth-we-will-need-to-install-the-trmm-rsl-library"]], "Lastly, activate the \u2018pyart-docs\u2019 environment and install the python script within your forked repository": [[592, "lastly-activate-the-pyart-docs-environment-and-install-the-python-script-within-your-forked-repository"]], "OKAY! You should be installed now, and ready to make changes to the source code!": [[592, "okay-you-should-be-installed-now-and-ready-to-make-changes-to-the-source-code"]], "1. First, create a New Branch for our Changes": [[592, "first-create-a-new-branch-for-our-changes"]], "2. Push New Branch To Remote": [[592, "push-new-branch-to-remote"]], "Now lets commit these changes to github!": [[592, "now-lets-commit-these-changes-to-github"]], "After Creating a Pull Request, this is what it looks like on GitHub": [[592, "after-creating-a-pull-request-this-is-what-it-looks-like-on-github"]], "Hope this helped!": [[592, "hope-this-helped"]], "Hail Storm Visualization Using Py-ART and Pandas!": [[593, "hail-storm-visualization-using-py-art-and-pandas"]], "Motivation": [[593, "motivation"], [597, "motivation"], [598, "motivation"], [599, "motivation"]], "NEXRAD Data Access - fsspec": [[593, "nexrad-data-access-fsspec"]], "Setup the Filesystem and Read From the Bucket": [[593, "setup-the-filesystem-and-read-from-the-bucket"]], "Read in a File": [[593, "read-in-a-file"]], "Visualize the Dataset": [[593, "visualize-the-dataset"]], "Read in NEXRAD Data Using nexradaws": [[593, "read-in-nexrad-data-using-nexradaws"]], "Configure the Search": [[593, "configure-the-search"]], "Search and Download the Data": [[593, "search-and-download-the-data"]], "Read SPC Reports Using Pandas": [[593, "read-spc-reports-using-pandas"]], "Setup a Function to Read the Reports": [[593, "setup-a-function-to-read-the-reports"]], "Read in the Reports": [[593, "read-in-the-reports"]], "Loop Through and Plot the Radar and Reports": [[593, "loop-through-and-plot-the-radar-and-reports"]], "Setup a Helper Function to Create a Scale Bar": [[593, "setup-a-helper-function-to-create-a-scale-bar"]], "Create an Animation of the Images": [[593, "create-an-animation-of-the-images"]], "View the Final Animation": [[593, "view-the-final-animation"]], "Conclusion": [[593, "conclusion"], [595, "conclusion"], [597, "conclusion"]], "Working with Vertically Pointing Radar Data Using PyART, Xarray, and hvPlot": [[594, "working-with-vertically-pointing-radar-data-using-pyart-xarray-and-hvplot"]], "Data Overview": [[594, "data-overview"]], "Ka-band ARM zenith radar (KAZR) Instrument": [[594, "ka-band-arm-zenith-radar-kazr-instrument"]], "Plot Using PyART": [[594, "plot-using-pyart"]], "Load in the data using pyart": [[594, "load-in-the-data-using-pyart"]], "Plot the Data in PyART": [[594, "plot-the-data-in-pyart"]], "Clean Up the Plots a Bit": [[594, "clean-up-the-plots-a-bit"]], "Plot Up Our Analysis Using Xarray + hvPlot": [[594, "plot-up-our-analysis-using-xarray-hvplot"]], "Read the Data Using Xarray": [[594, "read-the-data-using-xarray"]], "Subset for Time, Reflectivity and Velocity": [[594, "subset-for-time-reflectivity-and-velocity"]], "Plot a Quick Plot using Xarray": [[594, "plot-a-quick-plot-using-xarray"]], "Extract Date Information for Labels": [[594, "extract-date-information-for-labels"]], "Create our Holoviews Plots": [[594, "create-our-holoviews-plots"]], "View the Final Visualization": [[594, "view-the-final-visualization"]], "Try Using Rasterize": [[594, "try-using-rasterize"]], "Key Takeaways": [[594, "key-takeaways"]], "Fixing Weird Patterns When Plotting NEXRAD Level 3 Data": [[595, "fixing-weird-patterns-when-plotting-nexrad-level-3-data"]], "The Data": [[595, "the-data"]], "Data Access": [[595, "data-access"]], "Recreate the Issue Using PyART": [[595, "recreate-the-issue-using-pyart"]], "Read the data using PyART": [[595, "read-the-data-using-pyart"]], "Plot our Data Using RadarMapDisplay": [[595, "plot-our-data-using-radarmapdisplay"]], "Setting our Matplotlib style": [[595, "setting-our-matplotlib-style"]], "Plot our data without setting alpha": [[595, "plot-our-data-without-setting-alpha"]], "Add in the alpha argument": [[595, "add-in-the-alpha-argument"]], "Dig into the Issue": [[595, "dig-into-the-issue"]], "Investigate plot_ppi_map": [[595, "investigate-plot-ppi-map"]], "Investigate pcolormesh parameters": [[595, "investigate-pcolormesh-parameters"]], "Digging into edgecolors": [[595, "digging-into-edgecolors"]], "Try Modifying the edgecolors argument with pcolormesh": [[595, "try-modifying-the-edgecolors-argument-with-pcolormesh"]], "Plot our data with the default edgecolors argument": [[595, "plot-our-data-with-the-default-edgecolors-argument"]], "Plotting up our Solution": [[595, "plotting-up-our-solution"]], "Fixing the Issue in PyART": [[595, "fixing-the-issue-in-pyart"]], "New Docs": [[596, "new-docs"]], "Visualizing Severe Weather in Wisconsin": [[597, "visualizing-severe-weather-in-wisconsin"]], "The Outbreak": [[597, "the-outbreak"]], "Focusing on Southern Wisconsin": [[597, "focusing-on-southern-wisconsin"]], "Reproducing Event Images": [[597, "reproducing-event-images"]], "Visualizing the Event": [[597, "visualizing-the-event"]], "Access the Data": [[597, "access-the-data"]], "Download the Road Data": [[597, "download-the-road-data"]], "Add the Interstate Date as a feature": [[597, "add-the-interstate-date-as-a-feature"]], "Investigate the NEXRAD Data Available": [[597, "investigate-the-nexrad-data-available"]], "Setup our Plotting Functions": [[597, "setup-our-plotting-functions"]], "Run our Plotting Functions": [[597, "run-our-plotting-functions"]], "Investigating ARM Scanning Cloud Radar Data from EPCAPE": [[598, "investigating-arm-scanning-cloud-radar-data-from-epcape"]], "The Problem": [[598, "the-problem"], [599, "the-problem"]], "The Solution": [[598, "the-solution"], [599, "the-solution"]], "Searching for data through the DQ Plot Browser": [[598, "searching-for-data-through-the-dq-plot-browser"]], "Use ACT to retrieve data from EPCAPE": [[598, "use-act-to-retrieve-data-from-epcape"]], "Retrieve you API token from ARM Live": [[598, "retrieve-you-api-token-from-arm-live"]], "Pass your Credentials into the Search": [[598, "pass-your-credentials-into-the-search"]], "Read the Data into Py-ART": [[598, "read-the-data-into-py-art"]], "Take a Peak at the Scan Strategy": [[598, "take-a-peak-at-the-scan-strategy"]], "Sort the Scans by Scan Strategy": [[598, "sort-the-scans-by-scan-strategy"]], "Plot all of the PPI Scans": [[598, "plot-all-of-the-ppi-scans"]], "Plot all the RHI Scans": [[598, "plot-all-the-rhi-scans"]], "Apply Corrections to the Velocity Data": [[598, "apply-corrections-to-the-velocity-data"]], "Explore a Threshold for SNR": [[598, "explore-a-threshold-for-snr"]], "Plot our Revised, Cleaned Data": [[598, "plot-our-revised-cleaned-data"]], "Plot where the RHI scan is slicing through using the PPI for a frame of reference": [[598, "plot-where-the-rhi-scan-is-slicing-through-using-the-ppi-for-a-frame-of-reference"]], "Conclusions": [[598, "conclusions"], [599, "conclusions"]], "Blog Post Template": [[599, "blog-post-template"]], "Changelog": [[600, "changelog"]], "Py-ART 1.18.1": [[600, "py-art-1-18-1"]], "Enhancements made": [[600, "enhancements-made"], [600, "id1"], [600, "id5"], [600, "id9"], [600, "id14"], [600, "id29"], [600, "id35"], [600, "id46"], [600, "id49"], [600, "id54"], [600, "id59"], [600, "id62"], [600, "id66"], [600, "id79"], [600, "id89"], [600, "id99"], [600, "id105"], [600, "id111"], [600, "id119"], [600, "id132"], [600, "id136"], [600, "id140"], [600, "id146"], [600, "id152"], [600, "id161"], [600, "id168"], [600, "id175"], [600, "id181"], [600, "id188"], [600, "id194"], [600, "id200"]], "Bugs fixed": [[600, "bugs-fixed"], [600, "id2"], [600, "id6"], [600, "id10"], [600, "id15"], [600, "id22"], [600, "id26"], [600, "id30"], [600, "id36"], [600, "id41"], [600, "id50"], [600, "id55"], [600, "id60"], [600, "id67"], [600, "id72"], [600, "id76"], [600, "id80"], [600, "id85"], [600, "id90"], [600, "id95"], [600, "id100"], [600, "id106"], [600, "id112"], [600, "id116"], [600, "id120"], [600, "id124"], [600, "id129"], [600, "id133"], [600, "id137"], [600, "id141"], [600, "id147"], [600, "id153"], [600, "id157"], [600, "id162"], [600, "id169"], [600, "id176"], [600, "id182"], [600, "id189"], [600, "id195"]], "Other merged PRs": [[600, "other-merged-prs"], [600, "id3"], [600, "id7"], [600, "id12"], [600, "id17"], [600, "id20"], [600, "id24"], [600, "id27"], [600, "id32"], [600, "id37"], [600, "id44"], [600, "id47"], [600, "id52"], [600, "id57"], [600, "id64"], [600, "id70"], [600, "id74"], [600, "id77"], [600, "id83"], [600, "id87"], [600, "id93"], [600, "id97"], [600, "id103"], [600, "id109"], [600, "id114"], [600, "id122"], [600, "id127"], [600, "id134"], [600, "id144"], [600, "id150"], [600, "id155"], [600, "id159"], [600, "id166"], [600, "id173"], [600, "id179"], [600, "id186"], [600, "id192"], [600, "id198"]], "Contributors to this release": [[600, "contributors-to-this-release"], [600, "id4"], [600, "id8"], [600, "id13"], [600, "id18"], [600, "id21"], [600, "id25"], [600, "id28"], [600, "id33"], [600, "id34"], [600, "id38"], [600, "id40"], [600, "id45"], [600, "id48"], [600, "id53"], [600, "id58"], [600, "id61"], [600, "id65"], [600, "id71"], [600, "id75"], [600, "id78"], [600, "id84"], [600, "id88"], [600, "id94"], [600, "id98"], [600, "id104"], [600, "id110"], [600, "id115"], [600, "id118"], [600, "id123"], [600, "id128"], [600, "id131"], [600, "id135"], [600, "id139"], [600, "id145"], [600, "id151"], [600, "id156"], [600, "id160"], [600, "id167"], [600, "id174"], [600, "id180"], [600, "id187"], [600, "id193"], [600, "id199"], [600, "id202"]], "Py-ART 1.18.0": [[600, "py-art-1-18-0"]], "Py-ART 1.17.0": [[600, "py-art-1-17-0"]], "Documentation improvements": [[600, "documentation-improvements"], [600, "id11"], [600, "id16"], [600, "id43"], [600, "id51"], [600, "id56"], [600, "id69"], [600, "id82"], [600, "id92"], [600, "id102"], [600, "id108"], [600, "id126"], [600, "id138"], [600, "id143"], [600, "id149"], [600, "id154"], [600, "id158"], [600, "id164"], [600, "id171"], [600, "id178"], [600, "id184"], [600, "id191"], [600, "id197"]], "Py-ART 1.16.1": [[600, "py-art-1-16-1"]], "Py-ART 1.16.0": [[600, "py-art-1-16-0"]], "Maintenance and upkeep improvements": [[600, "maintenance-and-upkeep-improvements"], [600, "id19"], [600, "id23"], [600, "id31"], [600, "id39"], [600, "id42"], [600, "id63"], [600, "id68"], [600, "id73"], [600, "id81"], [600, "id86"], [600, "id91"], [600, "id96"], [600, "id101"], [600, "id107"], [600, "id113"], [600, "id117"], [600, "id121"], [600, "id125"], [600, "id130"], [600, "id142"], [600, "id148"], [600, "id163"], [600, "id170"], [600, "id177"], [600, "id183"], [600, "id190"], [600, "id196"], [600, "id201"]], "Py-ART 1.15.2": [[600, "py-art-1-15-2"]], "Py-ART 1.15.1": [[600, "py-art-1-15-1"]], "Py-ART v1.15.0": [[600, "py-art-v1-15-0"]], "Py-ART v1.14.6": [[600, "py-art-v1-14-6"]], "Py-ART v1.14.5": [[600, "py-art-v1-14-5"]], "Merged PRs": [[600, "merged-prs"]], "Py-ART v1.14.4": [[600, "py-art-v1-14-4"]], "Py-ART v1.14.3": [[600, "py-art-v1-14-3"]], "Py-ART v1.14.2": [[600, "py-art-v1-14-2"]], "Py-ART v1.14.1": [[600, "py-art-v1-14-1"]], "Py-ART v1.14.0": [[600, "py-art-v1-14-0"]], "Py-ART v1.13.3": [[600, "py-art-v1-13-3"]], "Py-ART v1.13.2": [[600, "py-art-v1-13-2"]], "Py-ART v1.13.1": [[600, "py-art-v1-13-1"]], "Py-ART v1.13.0": [[600, "py-art-v1-13-0"]], "Py-ART v1.12.7": [[600, "py-art-v1-12-7"]], "Py-ART v1.12.6": [[600, "py-art-v1-12-6"]], "Py-ART v1.12.5": [[600, "py-art-v1-12-5"]], "PyART v1.12.4": [[600, "pyart-v1-12-4"]], "PyART v1.12.2": [[600, "pyart-v1-12-2"]], "PyART v1.12.0": [[600, "pyart-v1-12-0"]], "PyART v1.11.8": [[600, "pyart-v1-11-8"]], "Deprecated features": [[600, "deprecated-features"], [600, "id165"], [600, "id172"], [600, "id185"]], "PyART v1.11.6": [[600, "pyart-v1-11-6"]], "PyART v1.11.5": [[600, "pyart-v1-11-5"]], "PyART v1.11.3": [[600, "pyart-v1-11-3"]], "PyART v1.11.2": [[600, "pyart-v1-11-2"]], "PyART v1.11.1": [[600, "pyart-v1-11-1"]], "PyART v1.11.0": [[600, "pyart-v1-11-0"]], "PyART v1.10.4": [[600, "pyart-v1-10-4"]], "PyART v1.10.3": [[600, "pyart-v1-10-3"]], "PyART v1.10.2": [[600, "pyart-v1-10-2"]], "PyART v1.10.1": [[600, "pyart-v1-10-1"]], "PyART v1.9.2-picasso": [[600, "pyart-v1-9-2-picasso"]], "PyART v1.9.1-picasso": [[600, "pyart-v1-9-1-picasso"]], "PyART v1.9.0-picasso": [[600, "pyart-v1-9-0-picasso"]], "PyART v1.8.0": [[600, "pyart-v1-8-0"]], "PyART v1.7.0": [[600, "pyart-v1-7-0"]], "PyART v1.6.0": [[600, "pyart-v1-6-0"]], "PyART v1.5.0": [[600, "pyart-v1-5-0"]], "PyART v1.4.0": [[600, "pyart-v1-4-0"]], "PyART v1.3.0": [[600, "pyart-v1-3-0"]], "Contributor\u2019s Guide": [[601, "contributor-s-guide"], [665, "contributor-s-guide"]], "The Python ARM Radar Toolkit (Py-ART)": [[601, "the-python-arm-radar-toolkit-py-art"], [665, "the-python-arm-radar-toolkit-py-art"]], "Important Links": [[601, "important-links"], [665, "important-links"]], "Citing": [[601, "citing"], [665, "citing"]], "Install": [[601, "install"], [654, "install"], [665, "install"]], "Resources": [[601, "resources"], [665, "resources"]], "Code Style": [[601, "code-style"], [665, "code-style"]], "Python File Setup": [[601, "python-file-setup"], [665, "python-file-setup"]], "Testing": [[601, "testing"], [665, "testing"]], "GitHub": [[601, "github"], [665, "github"]], "Py-ART Continuous Integration Setup": [[602, "py-art-continuous-integration-setup"]], "How to make a Py-ART release": [[603, "how-to-make-a-py-art-release"]], "Make the tagged git release": [[603, "make-the-tagged-git-release"]], "Prepare the release notes": [[603, "prepare-the-release-notes"]], "Update the GitHub Release and Trigger the PyPI Upload": [[603, "update-the-github-release-and-trigger-the-pypi-upload"]], "Documentation": [[603, "documentation"]], "Create conda packages on conda-forge": [[603, "create-conda-packages-on-conda-forge"]], "Announce the release on the Open Radar Forum": [[603, "announce-the-release-on-the-open-radar-forum"]], "Developer\u2019s Guide": [[604, "developer-s-guide"]], "Versions": [[604, "versions"]], "Moment correction examples": [[605, "moment-correction-examples"], [609, "moment-correction-examples"]], "Correct reflectivity attenuation": [[606, "correct-reflectivity-attenuation"]], "Dealias doppler velocities using the Region Based Algorithm": [[607, "dealias-doppler-velocities-using-the-region-based-algorithm"]], "Computation times": [[608, "computation-times"], [613, "computation-times"], [619, "computation-times"], [638, "computation-times"], [647, "computation-times"], [648, "computation-times"], [653, "computation-times"], [663, "computation-times"]], "Example Gallery": [[609, "example-gallery"]], "Input/Output Examples": [[609, "input-output-examples"], [610, "input-output-examples"]], "Mapping examples": [[609, "mapping-examples"], [614, "mapping-examples"]], "Plotting examples": [[609, "plotting-examples"], [620, "plotting-examples"]], "Retrieval Examples": [[609, "retrieval-examples"], [639, "retrieval-examples"]], "Xradar Examples": [[609, "xradar-examples"], [649, "xradar-examples"]], "Reading NEXRAD Data from the AWS Cloud": [[611, "reading-nexrad-data-from-the-aws-cloud"]], "Read NEXRAD Level 2 Data": [[611, "read-nexrad-level-2-data"]], "Read NEXRAD Level 3 Data": [[611, "read-nexrad-level-3-data"]], "Reading Older NEXRAD Data and Fixing Latitude and Longitude Issues": [[612, "reading-older-nexrad-data-and-fixing-latitude-and-longitude-issues"]], "Read older NEXRAD Level 2 Data": [[612, "read-older-nexrad-level-2-data"]], "Compare Two Radars Using Gatemapper": [[615, "compare-two-radars-using-gatemapper"]], "Map a single PPI sweep to a Cartesian grid using 2D weighting": [[616, "map-a-single-ppi-sweep-to-a-cartesian-grid-using-2d-weighting"]], "Map a single radar to a Cartesian grid": [[617, "map-a-single-radar-to-a-cartesian-grid"]], "Map two radars to a Cartesian grid": [[618, "map-two-radars-to-a-cartesian-grid"]], "Choose a Colormap for your Plot": [[621, "choose-a-colormap-for-your-plot"]], "Plot a Cross Section from a Grid": [[622, "plot-a-cross-section-from-a-grid"]], "Modify a Colorbar for your Plot": [[623, "modify-a-colorbar-for-your-plot"]], "Create an image-muted reflectivity plot": [[624, "create-an-image-muted-reflectivity-plot"]], "Create a plot of multiple moments from a NEXRAD file": [[625, "create-a-plot-of-multiple-moments-from-a-nexrad-file"]], "Create a plot of NEXRAD reflectivity": [[626, "create-a-plot-of-nexrad-reflectivity"]], "Create a PPI plot from a Cfradial file": [[627, "create-a-ppi-plot-from-a-cfradial-file"]], "Create a PPI plot from a MDV file": [[628, "create-a-ppi-plot-from-a-mdv-file"]], "Create a PPI plot on a cartopy map": [[629, "create-a-ppi-plot-on-a-cartopy-map"]], "Create a multiple panel RHI plot from a CF/Radial file": [[630, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"], [631, "create-a-multiple-panel-rhi-plot-from-a-cf-radial-file"]], "Create an RHI plot with reflectivity contour lines from an MDV file": [[632, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"], [633, "create-an-rhi-plot-with-reflectivity-contour-lines-from-an-mdv-file"]], "Create a RHI plot from a MDV file": [[634, "create-a-rhi-plot-from-a-mdv-file"]], "Create a two panel RHI plot": [[635, "create-a-two-panel-rhi-plot"]], "Create a 3 panel plot using GridMapDisplay": [[636, "create-a-3-panel-plot-using-gridmapdisplay"]], "Plot a cross section from  a PPI volume": [[637, "plot-a-cross-section-from-a-ppi-volume"]], "Creating a CFAD diagram": [[640, "creating-a-cfad-diagram"]], "Velocity example": [[640, "velocity-example"]], "Validation": [[640, "validation"]], "Extract a radar column above a point": [[641, "extract-a-radar-column-above-a-point"]], "Calculate and Plot Composite Reflectivity": [[642, "calculate-and-plot-composite-reflectivity"]], "Convective-Stratiform classification": [[643, "convective-stratiform-classification"]], "How the algorithm works": [[643, "how-the-algorithm-works"], [644, "how-the-algorithm-works"]], "Examples": [[643, "examples"]], "Summary of recommendations and best practices": [[643, "summary-of-recommendations-and-best-practices"], [644, "summary-of-recommendations-and-best-practices"]], "References": [[643, "references"], [644, "references"]], "Feature Detection classification": [[644, "feature-detection-classification"]], "Part 1: Warm-season convective-stratiform classification": [[644, "part-1-warm-season-convective-stratiform-classification"]], "Part 2: Cool-season feature detection": [[644, "part-2-cool-season-feature-detection"]], "Calculate and Plot hydrometeor classification": [[645, "calculate-and-plot-hydrometeor-classification"]], "Calculate and Plot VAD profile": [[646, "calculate-and-plot-vad-profile"]], "Dealias Radial Velocities Using Xradar and Py-ART": [[650, "dealias-radial-velocities-using-xradar-and-py-art"]], "Grid Data Using Xradar and Py-ART": [[651, "grid-data-using-xradar-and-py-art"]], "Plot a PPI Using Xradar and Py-ART": [[652, "plot-a-ppi-using-xradar-and-py-art"]], "The Python ARM Radar Toolkit - Py-ART": [[654, "the-python-arm-radar-toolkit-py-art"]], "What is Py-ART?": [[654, "what-is-py-art"]], "Citing Py-ART": [[654, "citing-py-art"]], "What can Py-ART do?": [[654, "what-can-py-art-do"]], "Short Courses": [[654, "short-courses"]], "Dependencies": [[654, "dependencies"]], "Optional Dependences": [[654, "optional-dependences"]], "Getting help": [[654, "getting-help"]], "Contributing": [[654, "contributing"]], "Notebook Gallery": [[655, "notebook-gallery"]], "Notebooks": [[655, null]], "Creating a basic ingest of a NetCDF file": [[656, "creating-a-basic-ingest-of-a-netcdf-file"]], "Field manipulation and Saving the Radar Object to a file.": [[657, "field-manipulation-and-saving-the-radar-object-to-a-file"]], "Dealiasing Velocity": [[658, "dealiasing-velocity"]], "Mapping Data to a Cartesian Grid": [[660, "mapping-data-to-a-cartesian-grid"]], "Masking Data With Py-ART Gatefilters": [[661, "masking-data-with-py-art-gatefilters"]], "The Py-ART Radar object and indexing": [[662, "the-py-art-radar-object-and-indexing"]], "Building and installing Py-ART": [[664, "building-and-installing-py-art"]], "Required Dependencies": [[664, "required-dependencies"]], "Optional Dependencies": [[664, "optional-dependencies"]], "Obtaining the latest source": [[664, "obtaining-the-latest-source"]], "Installing from Source": [[664, "installing-from-source"]], "Frequently asked questions": [[664, "frequently-asked-questions"]], "User Guide": [[666, "user-guide"]], "Setting up an Environment": [[667, "setting-up-an-environment"]], "Anaconda": [[667, "anaconda"]], "Setting a Channel": [[667, "setting-a-channel"]], "Creating an Environment": [[667, "creating-an-environment"]], "Adding Optional Dependencies with setting Paths": [[667, "adding-optional-dependencies-with-setting-paths"]], "More Information": [[667, "more-information"]]}, "indexentries": {"_debug_info() (in module pyart)": [[0, "pyart._debug_info"]], "module": [[1, "module-pyart.aux_io"], [16, "module-pyart.bridge"], [18, "module-pyart.config"], [30, "module-pyart.core"], [126, "module-pyart.correct"], [168, "module-pyart.exceptions"], [169, "module-pyart.filters"], [202, "module-pyart.graph"], [359, "module-pyart.io"], [380, "module-pyart.lazydict"], [404, "module-pyart.map"], [417, "module-pyart.retrieve"], [453, "module-pyart.testing"], [556, "module-pyart.util"]], "pyart.aux_io": [[1, "module-pyart.aux_io"]], "read_d3r_gcpex_nc() (in module pyart.aux_io)": [[2, "pyart.aux_io.read_d3r_gcpex_nc"]], "read_edge_netcdf() (in module pyart.aux_io)": [[3, "pyart.aux_io.read_edge_netcdf"]], "read_gamic() (in module pyart.aux_io)": [[4, "pyart.aux_io.read_gamic"]], "read_kazr() (in module pyart.aux_io)": [[5, "pyart.aux_io.read_kazr"]], "read_kazr_spectra() (in module pyart.aux_io)": [[6, "pyart.aux_io.read_kazr_spectra"]], "read_noxp_iphex_nc() (in module pyart.aux_io)": [[7, "pyart.aux_io.read_noxp_iphex_nc"]], "read_odim_h5() (in module pyart.aux_io)": [[8, "pyart.aux_io.read_odim_h5"]], "read_pattern() (in module pyart.aux_io)": [[9, "pyart.aux_io.read_pattern"]], "read_radx() (in module pyart.aux_io)": [[10, "pyart.aux_io.read_radx"]], "read_radx_grid() (in module pyart.aux_io)": [[11, "pyart.aux_io.read_radx_grid"]], "read_rainbow_wrl() (in module pyart.aux_io)": [[12, "pyart.aux_io.read_rainbow_wrl"]], "read_rxm25() (in module pyart.aux_io)": [[13, "pyart.aux_io.read_rxm25"]], "read_sinarame_h5() (in module pyart.aux_io)": [[14, "pyart.aux_io.read_sinarame_h5"]], "write_sinarame_cfradial() (in module pyart.aux_io)": [[15, "pyart.aux_io.write_sinarame_cfradial"]], "pyart.bridge": [[16, "module-pyart.bridge"]], "texture_of_complex_phase() (in module pyart.bridge)": [[17, "pyart.bridge.texture_of_complex_phase"]], "pyart.config": [[18, "module-pyart.config"]], "filemetadata (class in pyart.config)": [[19, "pyart.config.FileMetadata"]], "__call__() (pyart.config.filemetadata method)": [[20, "pyart.config.FileMetadata.__call__"]], "get_field_name() (pyart.config.filemetadata method)": [[21, "pyart.config.FileMetadata.get_field_name"]], "get_metadata() (pyart.config.filemetadata method)": [[22, "pyart.config.FileMetadata.get_metadata"]], "get_field_colormap() (in module pyart.config)": [[23, "pyart.config.get_field_colormap"]], "get_field_limits() (in module pyart.config)": [[24, "pyart.config.get_field_limits"]], "get_field_mapping() (in module pyart.config)": [[25, "pyart.config.get_field_mapping"]], "get_field_name() (in module pyart.config)": [[26, "pyart.config.get_field_name"]], "get_fillvalue() (in module pyart.config)": [[27, "pyart.config.get_fillvalue"]], "get_metadata() (in module pyart.config)": [[28, "pyart.config.get_metadata"]], "load_config() (in module pyart.config)": [[29, "pyart.config.load_config"]], "pyart.core": [[30, "module-pyart.core"]], "grid (class in pyart.core)": [[31, "pyart.core.Grid"]], "add_field() (pyart.core.grid method)": [[32, "pyart.core.Grid.add_field"]], "get_point_longitude_latitude() (pyart.core.grid method)": [[33, "pyart.core.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.core.grid method)": [[34, "pyart.core.Grid.get_projparams"]], "init_point_altitude() (pyart.core.grid method)": [[35, "pyart.core.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.core.grid method)": [[36, "pyart.core.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.core.grid method)": [[37, "pyart.core.Grid.init_point_x_y_z"]], "projection_proj (pyart.core.grid property)": [[38, "pyart.core.Grid.projection_proj"]], "to_xarray() (pyart.core.grid method)": [[39, "pyart.core.Grid.to_xarray"]], "write() (pyart.core.grid method)": [[40, "pyart.core.Grid.write"]], "horizontalwindprofile (class in pyart.core)": [[41, "pyart.core.HorizontalWindProfile"]], "from_u_and_v() (pyart.core.horizontalwindprofile class method)": [[42, "pyart.core.HorizontalWindProfile.from_u_and_v"]], "u_wind (pyart.core.horizontalwindprofile property)": [[43, "pyart.core.HorizontalWindProfile.u_wind"]], "v_wind (pyart.core.horizontalwindprofile property)": [[44, "pyart.core.HorizontalWindProfile.v_wind"]], "radar (class in pyart.core)": [[45, "pyart.core.Radar"]], "add_field() (pyart.core.radar method)": [[46, "pyart.core.Radar.add_field"]], "add_field_like() (pyart.core.radar method)": [[47, "pyart.core.Radar.add_field_like"]], "add_filter() (pyart.core.radar method)": [[48, "pyart.core.Radar.add_filter"]], "check_field_exists() (pyart.core.radar method)": [[49, "pyart.core.Radar.check_field_exists"]], "extract_sweeps() (pyart.core.radar method)": [[50, "pyart.core.Radar.extract_sweeps"]], "get_azimuth() (pyart.core.radar method)": [[51, "pyart.core.Radar.get_azimuth"]], "get_elevation() (pyart.core.radar method)": [[52, "pyart.core.Radar.get_elevation"]], "get_end() (pyart.core.radar method)": [[53, "pyart.core.Radar.get_end"]], "get_field() (pyart.core.radar method)": [[54, "pyart.core.Radar.get_field"]], "get_gate_area() (pyart.core.radar method)": [[55, "pyart.core.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.core.radar method)": [[56, "pyart.core.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.core.radar method)": [[57, "pyart.core.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.core.radar method)": [[58, "pyart.core.Radar.get_nyquist_vel"]], "get_slice() (pyart.core.radar method)": [[59, "pyart.core.Radar.get_slice"]], "get_start() (pyart.core.radar method)": [[60, "pyart.core.Radar.get_start"]], "get_start_end() (pyart.core.radar method)": [[61, "pyart.core.Radar.get_start_end"]], "info() (pyart.core.radar method)": [[62, "pyart.core.Radar.info"]], "init_gate_altitude() (pyart.core.radar method)": [[63, "pyart.core.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radar method)": [[64, "pyart.core.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radar method)": [[65, "pyart.core.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radar method)": [[66, "pyart.core.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radar method)": [[67, "pyart.core.Radar.iter_azimuth"]], "iter_elevation() (pyart.core.radar method)": [[68, "pyart.core.Radar.iter_elevation"]], "iter_end() (pyart.core.radar method)": [[69, "pyart.core.Radar.iter_end"]], "iter_field() (pyart.core.radar method)": [[70, "pyart.core.Radar.iter_field"]], "iter_slice() (pyart.core.radar method)": [[71, "pyart.core.Radar.iter_slice"]], "iter_start() (pyart.core.radar method)": [[72, "pyart.core.Radar.iter_start"]], "iter_start_end() (pyart.core.radar method)": [[73, "pyart.core.Radar.iter_start_end"]], "radarspectra (class in pyart.core)": [[74, "pyart.core.RadarSpectra"]], "altitude (pyart.core.radarspectra property)": [[75, "pyart.core.RadarSpectra.altitude"]], "azimuth (pyart.core.radarspectra property)": [[76, "pyart.core.RadarSpectra.azimuth"]], "check_field_exists() (pyart.core.radarspectra method)": [[77, "pyart.core.RadarSpectra.check_field_exists"]], "elevation (pyart.core.radarspectra property)": [[78, "pyart.core.RadarSpectra.elevation"]], "fields (pyart.core.radarspectra property)": [[79, "pyart.core.RadarSpectra.fields"]], "fixed_angle (pyart.core.radarspectra property)": [[80, "pyart.core.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.core.radarspectra property)": [[81, "pyart.core.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.core.radarspectra property)": [[82, "pyart.core.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.core.radarspectra property)": [[83, "pyart.core.RadarSpectra.gate_longitude"]], "gate_x (pyart.core.radarspectra property)": [[84, "pyart.core.RadarSpectra.gate_x"]], "gate_y (pyart.core.radarspectra property)": [[85, "pyart.core.RadarSpectra.gate_y"]], "gate_z (pyart.core.radarspectra property)": [[86, "pyart.core.RadarSpectra.gate_z"]], "get_end() (pyart.core.radarspectra method)": [[87, "pyart.core.RadarSpectra.get_end"]], "get_slice() (pyart.core.radarspectra method)": [[88, "pyart.core.RadarSpectra.get_slice"]], "get_start() (pyart.core.radarspectra method)": [[89, "pyart.core.RadarSpectra.get_start"]], "get_start_end() (pyart.core.radarspectra method)": [[90, "pyart.core.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.core.radarspectra method)": [[91, "pyart.core.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.core.radarspectra method)": [[92, "pyart.core.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.core.radarspectra method)": [[93, "pyart.core.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.core.radarspectra method)": [[94, "pyart.core.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.core.radarspectra method)": [[95, "pyart.core.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.core.radarspectra method)": [[96, "pyart.core.RadarSpectra.iter_elevation"]], "iter_end() (pyart.core.radarspectra method)": [[97, "pyart.core.RadarSpectra.iter_end"]], "iter_field() (pyart.core.radarspectra method)": [[98, "pyart.core.RadarSpectra.iter_field"]], "iter_slice() (pyart.core.radarspectra method)": [[99, "pyart.core.RadarSpectra.iter_slice"]], "iter_start() (pyart.core.radarspectra method)": [[100, "pyart.core.RadarSpectra.iter_start"]], "iter_start_end() (pyart.core.radarspectra method)": [[101, "pyart.core.RadarSpectra.iter_start_end"]], "latitude (pyart.core.radarspectra property)": [[102, "pyart.core.RadarSpectra.latitude"]], "longitude (pyart.core.radarspectra property)": [[103, "pyart.core.RadarSpectra.longitude"]], "ngates (pyart.core.radarspectra property)": [[104, "pyart.core.RadarSpectra.ngates"]], "npulses_max (pyart.core.radarspectra property)": [[105, "pyart.core.RadarSpectra.npulses_max"]], "nrays (pyart.core.radarspectra property)": [[106, "pyart.core.RadarSpectra.nrays"]], "nsweeps (pyart.core.radarspectra property)": [[107, "pyart.core.RadarSpectra.nsweeps"]], "projection (pyart.core.radarspectra property)": [[108, "pyart.core.RadarSpectra.projection"]], "range (pyart.core.radarspectra property)": [[109, "pyart.core.RadarSpectra.range"]], "rays_per_sweep (pyart.core.radarspectra property)": [[110, "pyart.core.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.core.radarspectra property)": [[111, "pyart.core.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.core.radarspectra property)": [[112, "pyart.core.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.core.radarspectra property)": [[113, "pyart.core.RadarSpectra.sweep_mode"]], "sweep_number (pyart.core.radarspectra property)": [[114, "pyart.core.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.core.radarspectra property)": [[115, "pyart.core.RadarSpectra.sweep_start_ray_index"]], "time (pyart.core.radarspectra property)": [[116, "pyart.core.RadarSpectra.time"]], "to_vpt() (pyart.core.radarspectra method)": [[117, "pyart.core.RadarSpectra.to_vpt"]], "velocity_bins (pyart.core.radarspectra property)": [[118, "pyart.core.RadarSpectra.velocity_bins"]], "antenna_to_cartesian() (in module pyart.core)": [[119, "pyart.core.antenna_to_cartesian"]], "antenna_vectors_to_cartesian() (in module pyart.core)": [[120, "pyart.core.antenna_vectors_to_cartesian"]], "cartesian_to_geographic() (in module pyart.core)": [[121, "pyart.core.cartesian_to_geographic"]], "cartesian_to_geographic_aeqd() (in module pyart.core)": [[122, "pyart.core.cartesian_to_geographic_aeqd"]], "cartesian_vectors_to_geographic() (in module pyart.core)": [[123, "pyart.core.cartesian_vectors_to_geographic"]], "geographic_to_cartesian() (in module pyart.core)": [[124, "pyart.core.geographic_to_cartesian"]], "geographic_to_cartesian_aeqd() (in module pyart.core)": [[125, "pyart.core.geographic_to_cartesian_aeqd"]], "pyart.correct": [[126, "module-pyart.correct"]], "gatefilter (class in pyart.correct)": [[127, "pyart.correct.GateFilter"]], "copy() (pyart.correct.gatefilter method)": [[128, "pyart.correct.GateFilter.copy"]], "exclude_above() (pyart.correct.gatefilter method)": [[129, "pyart.correct.GateFilter.exclude_above"]], "exclude_all() (pyart.correct.gatefilter method)": [[130, "pyart.correct.GateFilter.exclude_all"]], "exclude_below() (pyart.correct.gatefilter method)": [[131, "pyart.correct.GateFilter.exclude_below"]], "exclude_equal() (pyart.correct.gatefilter method)": [[132, "pyart.correct.GateFilter.exclude_equal"]], "exclude_gates() (pyart.correct.gatefilter method)": [[133, "pyart.correct.GateFilter.exclude_gates"]], "exclude_inside() (pyart.correct.gatefilter method)": [[134, "pyart.correct.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.correct.gatefilter method)": [[135, "pyart.correct.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.correct.gatefilter method)": [[136, "pyart.correct.GateFilter.exclude_masked"]], "exclude_none() (pyart.correct.gatefilter method)": [[137, "pyart.correct.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.correct.gatefilter method)": [[138, "pyart.correct.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.correct.gatefilter method)": [[139, "pyart.correct.GateFilter.exclude_outside"]], "exclude_transition() (pyart.correct.gatefilter method)": [[140, "pyart.correct.GateFilter.exclude_transition"]], "gate_excluded (pyart.correct.gatefilter property)": [[141, "pyart.correct.GateFilter.gate_excluded"]], "gate_included (pyart.correct.gatefilter property)": [[142, "pyart.correct.GateFilter.gate_included"]], "include_above() (pyart.correct.gatefilter method)": [[143, "pyart.correct.GateFilter.include_above"]], "include_all() (pyart.correct.gatefilter method)": [[144, "pyart.correct.GateFilter.include_all"]], "include_below() (pyart.correct.gatefilter method)": [[145, "pyart.correct.GateFilter.include_below"]], "include_equal() (pyart.correct.gatefilter method)": [[146, "pyart.correct.GateFilter.include_equal"]], "include_gates() (pyart.correct.gatefilter method)": [[147, "pyart.correct.GateFilter.include_gates"]], "include_inside() (pyart.correct.gatefilter method)": [[148, "pyart.correct.GateFilter.include_inside"]], "include_none() (pyart.correct.gatefilter method)": [[149, "pyart.correct.GateFilter.include_none"]], "include_not_equal() (pyart.correct.gatefilter method)": [[150, "pyart.correct.GateFilter.include_not_equal"]], "include_not_masked() (pyart.correct.gatefilter method)": [[151, "pyart.correct.GateFilter.include_not_masked"]], "include_not_transition() (pyart.correct.gatefilter method)": [[152, "pyart.correct.GateFilter.include_not_transition"]], "include_outside() (pyart.correct.gatefilter method)": [[153, "pyart.correct.GateFilter.include_outside"]], "include_valid() (pyart.correct.gatefilter method)": [[154, "pyart.correct.GateFilter.include_valid"]], "calculate_attenuation() (in module pyart.correct)": [[155, "pyart.correct.calculate_attenuation"]], "calculate_attenuation_philinear() (in module pyart.correct)": [[156, "pyart.correct.calculate_attenuation_philinear"]], "calculate_attenuation_zphi() (in module pyart.correct)": [[157, "pyart.correct.calculate_attenuation_zphi"]], "correct_bias() (in module pyart.correct)": [[158, "pyart.correct.correct_bias"]], "correct_noise_rhohv() (in module pyart.correct)": [[159, "pyart.correct.correct_noise_rhohv"]], "dealias_fourdd() (in module pyart.correct)": [[160, "pyart.correct.dealias_fourdd"]], "dealias_region_based() (in module pyart.correct)": [[161, "pyart.correct.dealias_region_based"]], "dealias_unwrap_phase() (in module pyart.correct)": [[162, "pyart.correct.dealias_unwrap_phase"]], "despeckle_field() (in module pyart.correct)": [[163, "pyart.correct.despeckle_field"]], "find_objects() (in module pyart.correct)": [[164, "pyart.correct.find_objects"]], "moment_based_gate_filter() (in module pyart.correct)": [[165, "pyart.correct.moment_based_gate_filter"]], "phase_proc_lp() (in module pyart.correct)": [[166, "pyart.correct.phase_proc_lp"]], "phase_proc_lp_gf() (in module pyart.correct)": [[167, "pyart.correct.phase_proc_lp_gf"]], "pyart.exceptions": [[168, "module-pyart.exceptions"]], "pyart.filters": [[169, "module-pyart.filters"]], "gatefilter (class in pyart.filters)": [[170, "pyart.filters.GateFilter"]], "copy() (pyart.filters.gatefilter method)": [[171, "pyart.filters.GateFilter.copy"]], "exclude_above() (pyart.filters.gatefilter method)": [[172, "pyart.filters.GateFilter.exclude_above"]], "exclude_all() (pyart.filters.gatefilter method)": [[173, "pyart.filters.GateFilter.exclude_all"]], "exclude_below() (pyart.filters.gatefilter method)": [[174, "pyart.filters.GateFilter.exclude_below"]], "exclude_equal() (pyart.filters.gatefilter method)": [[175, "pyart.filters.GateFilter.exclude_equal"]], "exclude_gates() (pyart.filters.gatefilter method)": [[176, "pyart.filters.GateFilter.exclude_gates"]], "exclude_inside() (pyart.filters.gatefilter method)": [[177, "pyart.filters.GateFilter.exclude_inside"]], "exclude_invalid() (pyart.filters.gatefilter method)": [[178, "pyart.filters.GateFilter.exclude_invalid"]], "exclude_masked() (pyart.filters.gatefilter method)": [[179, "pyart.filters.GateFilter.exclude_masked"]], "exclude_none() (pyart.filters.gatefilter method)": [[180, "pyart.filters.GateFilter.exclude_none"]], "exclude_not_equal() (pyart.filters.gatefilter method)": [[181, "pyart.filters.GateFilter.exclude_not_equal"]], "exclude_outside() (pyart.filters.gatefilter method)": [[182, "pyart.filters.GateFilter.exclude_outside"]], "exclude_transition() (pyart.filters.gatefilter method)": [[183, "pyart.filters.GateFilter.exclude_transition"]], "gate_excluded (pyart.filters.gatefilter property)": [[184, "pyart.filters.GateFilter.gate_excluded"]], "gate_included (pyart.filters.gatefilter property)": [[185, "pyart.filters.GateFilter.gate_included"]], "include_above() (pyart.filters.gatefilter method)": [[186, "pyart.filters.GateFilter.include_above"]], "include_all() (pyart.filters.gatefilter method)": [[187, "pyart.filters.GateFilter.include_all"]], "include_below() (pyart.filters.gatefilter method)": [[188, "pyart.filters.GateFilter.include_below"]], "include_equal() (pyart.filters.gatefilter method)": [[189, "pyart.filters.GateFilter.include_equal"]], "include_gates() (pyart.filters.gatefilter method)": [[190, "pyart.filters.GateFilter.include_gates"]], "include_inside() (pyart.filters.gatefilter method)": [[191, "pyart.filters.GateFilter.include_inside"]], "include_none() (pyart.filters.gatefilter method)": [[192, "pyart.filters.GateFilter.include_none"]], "include_not_equal() (pyart.filters.gatefilter method)": [[193, "pyart.filters.GateFilter.include_not_equal"]], "include_not_masked() (pyart.filters.gatefilter method)": [[194, "pyart.filters.GateFilter.include_not_masked"]], "include_not_transition() (pyart.filters.gatefilter method)": [[195, "pyart.filters.GateFilter.include_not_transition"]], "include_outside() (pyart.filters.gatefilter method)": [[196, "pyart.filters.GateFilter.include_outside"]], "include_valid() (pyart.filters.gatefilter method)": [[197, "pyart.filters.GateFilter.include_valid"]], "iso0_based_gate_filter() (in module pyart.filters)": [[198, "pyart.filters.iso0_based_gate_filter"]], "moment_and_texture_based_gate_filter() (in module pyart.filters)": [[199, "pyart.filters.moment_and_texture_based_gate_filter"]], "moment_based_gate_filter() (in module pyart.filters)": [[200, "pyart.filters.moment_based_gate_filter"]], "temp_based_gate_filter() (in module pyart.filters)": [[201, "pyart.filters.temp_based_gate_filter"]], "pyart.graph": [[202, "module-pyart.graph"]], "airborneradardisplay (class in pyart.graph)": [[203, "pyart.graph.AirborneRadarDisplay"]], "generate_az_rhi_title() (pyart.graph.airborneradardisplay method)": [[204, "pyart.graph.AirborneRadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.airborneradardisplay method)": [[205, "pyart.graph.AirborneRadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.airborneradardisplay method)": [[206, "pyart.graph.AirborneRadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.airborneradardisplay method)": [[207, "pyart.graph.AirborneRadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.airborneradardisplay method)": [[208, "pyart.graph.AirborneRadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.airborneradardisplay method)": [[209, "pyart.graph.AirborneRadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.airborneradardisplay static method)": [[210, "pyart.graph.AirborneRadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.airborneradardisplay static method)": [[211, "pyart.graph.AirborneRadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.airborneradardisplay method)": [[212, "pyart.graph.AirborneRadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.airborneradardisplay method)": [[213, "pyart.graph.AirborneRadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.airborneradardisplay method)": [[214, "pyart.graph.AirborneRadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.airborneradardisplay method)": [[215, "pyart.graph.AirborneRadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.airborneradardisplay method)": [[216, "pyart.graph.AirborneRadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.airborneradardisplay method)": [[217, "pyart.graph.AirborneRadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.airborneradardisplay method)": [[218, "pyart.graph.AirborneRadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.airborneradardisplay method)": [[219, "pyart.graph.AirborneRadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.airborneradardisplay static method)": [[220, "pyart.graph.AirborneRadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.airborneradardisplay static method)": [[221, "pyart.graph.AirborneRadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.airborneradardisplay method)": [[222, "pyart.graph.AirborneRadarDisplay.plot_label"]], "plot_labels() (pyart.graph.airborneradardisplay method)": [[223, "pyart.graph.AirborneRadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.airborneradardisplay method)": [[224, "pyart.graph.AirborneRadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.airborneradardisplay static method)": [[225, "pyart.graph.AirborneRadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.airborneradardisplay method)": [[226, "pyart.graph.AirborneRadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.airborneradardisplay method)": [[227, "pyart.graph.AirborneRadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.airborneradardisplay method)": [[228, "pyart.graph.AirborneRadarDisplay.plot_rhi"]], "plot_sweep_grid() (pyart.graph.airborneradardisplay method)": [[229, "pyart.graph.AirborneRadarDisplay.plot_sweep_grid"]], "plot_vpt() (pyart.graph.airborneradardisplay method)": [[230, "pyart.graph.AirborneRadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.airborneradardisplay static method)": [[231, "pyart.graph.AirborneRadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.airborneradardisplay static method)": [[232, "pyart.graph.AirborneRadarDisplay.set_limits"]], "gridmapdisplay (class in pyart.graph)": [[233, "pyart.graph.GridMapDisplay"]], "cartopy_coastlines() (pyart.graph.gridmapdisplay method)": [[234, "pyart.graph.GridMapDisplay.cartopy_coastlines"]], "cartopy_political_boundaries() (pyart.graph.gridmapdisplay method)": [[235, "pyart.graph.GridMapDisplay.cartopy_political_boundaries"]], "cartopy_states() (pyart.graph.gridmapdisplay method)": [[236, "pyart.graph.GridMapDisplay.cartopy_states"]], "generate_filename() (pyart.graph.gridmapdisplay method)": [[237, "pyart.graph.GridMapDisplay.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplay method)": [[238, "pyart.graph.GridMapDisplay.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[239, "pyart.graph.GridMapDisplay.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplay method)": [[240, "pyart.graph.GridMapDisplay.generate_longitudinal_level_title"]], "plot_colorbar() (pyart.graph.gridmapdisplay method)": [[241, "pyart.graph.GridMapDisplay.plot_colorbar"]], "plot_cross_section() (pyart.graph.gridmapdisplay method)": [[242, "pyart.graph.GridMapDisplay.plot_cross_section"]], "plot_crosshairs() (pyart.graph.gridmapdisplay method)": [[243, "pyart.graph.GridMapDisplay.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplay method)": [[244, "pyart.graph.GridMapDisplay.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplay method)": [[245, "pyart.graph.GridMapDisplay.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplay method)": [[246, "pyart.graph.GridMapDisplay.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplay method)": [[247, "pyart.graph.GridMapDisplay.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplay method)": [[248, "pyart.graph.GridMapDisplay.plot_longitudinal_level"]], "gridmapdisplaybasemap (class in pyart.graph)": [[249, "pyart.graph.GridMapDisplayBasemap"]], "generate_filename() (pyart.graph.gridmapdisplaybasemap method)": [[250, "pyart.graph.GridMapDisplayBasemap.generate_filename"]], "generate_grid_title() (pyart.graph.gridmapdisplaybasemap method)": [[251, "pyart.graph.GridMapDisplayBasemap.generate_grid_title"]], "generate_latitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[252, "pyart.graph.GridMapDisplayBasemap.generate_latitudinal_level_title"]], "generate_longitudinal_level_title() (pyart.graph.gridmapdisplaybasemap method)": [[253, "pyart.graph.GridMapDisplayBasemap.generate_longitudinal_level_title"]], "get_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[254, "pyart.graph.GridMapDisplayBasemap.get_basemap"]], "plot_basemap() (pyart.graph.gridmapdisplaybasemap method)": [[255, "pyart.graph.GridMapDisplayBasemap.plot_basemap"]], "plot_colorbar() (pyart.graph.gridmapdisplaybasemap method)": [[256, "pyart.graph.GridMapDisplayBasemap.plot_colorbar"]], "plot_crosshairs() (pyart.graph.gridmapdisplaybasemap method)": [[257, "pyart.graph.GridMapDisplayBasemap.plot_crosshairs"]], "plot_grid() (pyart.graph.gridmapdisplaybasemap method)": [[258, "pyart.graph.GridMapDisplayBasemap.plot_grid"]], "plot_latitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[259, "pyart.graph.GridMapDisplayBasemap.plot_latitude_slice"]], "plot_latitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[260, "pyart.graph.GridMapDisplayBasemap.plot_latitudinal_level"]], "plot_longitude_slice() (pyart.graph.gridmapdisplaybasemap method)": [[261, "pyart.graph.GridMapDisplayBasemap.plot_longitude_slice"]], "plot_longitudinal_level() (pyart.graph.gridmapdisplaybasemap method)": [[262, "pyart.graph.GridMapDisplayBasemap.plot_longitudinal_level"]], "radardisplay (class in pyart.graph)": [[263, "pyart.graph.RadarDisplay"]], "generate_az_rhi_title() (pyart.graph.radardisplay method)": [[264, "pyart.graph.RadarDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radardisplay method)": [[265, "pyart.graph.RadarDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radardisplay method)": [[266, "pyart.graph.RadarDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radardisplay method)": [[267, "pyart.graph.RadarDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radardisplay method)": [[268, "pyart.graph.RadarDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radardisplay method)": [[269, "pyart.graph.RadarDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radardisplay static method)": [[270, "pyart.graph.RadarDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radardisplay static method)": [[271, "pyart.graph.RadarDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radardisplay method)": [[272, "pyart.graph.RadarDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radardisplay method)": [[273, "pyart.graph.RadarDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radardisplay method)": [[274, "pyart.graph.RadarDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radardisplay method)": [[275, "pyart.graph.RadarDisplay.label_yaxis_z"]], "plot() (pyart.graph.radardisplay method)": [[276, "pyart.graph.RadarDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radardisplay method)": [[277, "pyart.graph.RadarDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radardisplay method)": [[278, "pyart.graph.RadarDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radardisplay method)": [[279, "pyart.graph.RadarDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radardisplay static method)": [[280, "pyart.graph.RadarDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radardisplay static method)": [[281, "pyart.graph.RadarDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radardisplay method)": [[282, "pyart.graph.RadarDisplay.plot_label"]], "plot_labels() (pyart.graph.radardisplay method)": [[283, "pyart.graph.RadarDisplay.plot_labels"]], "plot_ppi() (pyart.graph.radardisplay method)": [[284, "pyart.graph.RadarDisplay.plot_ppi"]], "plot_range_ring() (pyart.graph.radardisplay static method)": [[285, "pyart.graph.RadarDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radardisplay method)": [[286, "pyart.graph.RadarDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radardisplay method)": [[287, "pyart.graph.RadarDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radardisplay method)": [[288, "pyart.graph.RadarDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radardisplay method)": [[289, "pyart.graph.RadarDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radardisplay static method)": [[290, "pyart.graph.RadarDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radardisplay static method)": [[291, "pyart.graph.RadarDisplay.set_limits"]], "radarmapdisplay (class in pyart.graph)": [[292, "pyart.graph.RadarMapDisplay"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplay method)": [[293, "pyart.graph.RadarMapDisplay.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplay method)": [[294, "pyart.graph.RadarMapDisplay.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplay method)": [[295, "pyart.graph.RadarMapDisplay.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplay method)": [[296, "pyart.graph.RadarMapDisplay.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplay method)": [[297, "pyart.graph.RadarMapDisplay.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplay method)": [[298, "pyart.graph.RadarMapDisplay.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplay static method)": [[299, "pyart.graph.RadarMapDisplay.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplay static method)": [[300, "pyart.graph.RadarMapDisplay.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplay method)": [[301, "pyart.graph.RadarMapDisplay.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplay method)": [[302, "pyart.graph.RadarMapDisplay.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplay method)": [[303, "pyart.graph.RadarMapDisplay.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplay method)": [[304, "pyart.graph.RadarMapDisplay.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplay method)": [[305, "pyart.graph.RadarMapDisplay.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplay method)": [[306, "pyart.graph.RadarMapDisplay.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplay method)": [[307, "pyart.graph.RadarMapDisplay.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplay method)": [[308, "pyart.graph.RadarMapDisplay.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplay static method)": [[309, "pyart.graph.RadarMapDisplay.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplay static method)": [[310, "pyart.graph.RadarMapDisplay.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplay method)": [[311, "pyart.graph.RadarMapDisplay.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplay method)": [[312, "pyart.graph.RadarMapDisplay.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplay method)": [[313, "pyart.graph.RadarMapDisplay.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplay method)": [[314, "pyart.graph.RadarMapDisplay.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplay method)": [[315, "pyart.graph.RadarMapDisplay.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplay method)": [[316, "pyart.graph.RadarMapDisplay.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplay method)": [[317, "pyart.graph.RadarMapDisplay.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplay method)": [[318, "pyart.graph.RadarMapDisplay.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplay method)": [[319, "pyart.graph.RadarMapDisplay.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplay method)": [[320, "pyart.graph.RadarMapDisplay.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplay method)": [[321, "pyart.graph.RadarMapDisplay.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplay method)": [[322, "pyart.graph.RadarMapDisplay.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplay static method)": [[323, "pyart.graph.RadarMapDisplay.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplay static method)": [[324, "pyart.graph.RadarMapDisplay.set_limits"]], "radarmapdisplaybasemap (class in pyart.graph)": [[325, "pyart.graph.RadarMapDisplayBasemap"]], "generate_az_rhi_title() (pyart.graph.radarmapdisplaybasemap method)": [[326, "pyart.graph.RadarMapDisplayBasemap.generate_az_rhi_title"]], "generate_filename() (pyart.graph.radarmapdisplaybasemap method)": [[327, "pyart.graph.RadarMapDisplayBasemap.generate_filename"]], "generate_ray_title() (pyart.graph.radarmapdisplaybasemap method)": [[328, "pyart.graph.RadarMapDisplayBasemap.generate_ray_title"]], "generate_title() (pyart.graph.radarmapdisplaybasemap method)": [[329, "pyart.graph.RadarMapDisplayBasemap.generate_title"]], "generate_vpt_title() (pyart.graph.radarmapdisplaybasemap method)": [[330, "pyart.graph.RadarMapDisplayBasemap.generate_vpt_title"]], "label_xaxis_r() (pyart.graph.radarmapdisplaybasemap method)": [[331, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_r"]], "label_xaxis_rays() (pyart.graph.radarmapdisplaybasemap static method)": [[332, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_rays"]], "label_xaxis_time() (pyart.graph.radarmapdisplaybasemap static method)": [[333, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_time"]], "label_xaxis_x() (pyart.graph.radarmapdisplaybasemap method)": [[334, "pyart.graph.RadarMapDisplayBasemap.label_xaxis_x"]], "label_yaxis_field() (pyart.graph.radarmapdisplaybasemap method)": [[335, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_field"]], "label_yaxis_y() (pyart.graph.radarmapdisplaybasemap method)": [[336, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_y"]], "label_yaxis_z() (pyart.graph.radarmapdisplaybasemap method)": [[337, "pyart.graph.RadarMapDisplayBasemap.label_yaxis_z"]], "plot() (pyart.graph.radarmapdisplaybasemap method)": [[338, "pyart.graph.RadarMapDisplayBasemap.plot"]], "plot_azimuth_to_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[339, "pyart.graph.RadarMapDisplayBasemap.plot_azimuth_to_rhi"]], "plot_colorbar() (pyart.graph.radarmapdisplaybasemap method)": [[340, "pyart.graph.RadarMapDisplayBasemap.plot_colorbar"]], "plot_cr_raster() (pyart.graph.radarmapdisplaybasemap method)": [[341, "pyart.graph.RadarMapDisplayBasemap.plot_cr_raster"]], "plot_cross_hair() (pyart.graph.radarmapdisplaybasemap static method)": [[342, "pyart.graph.RadarMapDisplayBasemap.plot_cross_hair"]], "plot_grid_lines() (pyart.graph.radarmapdisplaybasemap static method)": [[343, "pyart.graph.RadarMapDisplayBasemap.plot_grid_lines"]], "plot_label() (pyart.graph.radarmapdisplaybasemap method)": [[344, "pyart.graph.RadarMapDisplayBasemap.plot_label"]], "plot_labels() (pyart.graph.radarmapdisplaybasemap method)": [[345, "pyart.graph.RadarMapDisplayBasemap.plot_labels"]], "plot_line_geo() (pyart.graph.radarmapdisplaybasemap method)": [[346, "pyart.graph.RadarMapDisplayBasemap.plot_line_geo"]], "plot_line_xy() (pyart.graph.radarmapdisplaybasemap method)": [[347, "pyart.graph.RadarMapDisplayBasemap.plot_line_xy"]], "plot_point() (pyart.graph.radarmapdisplaybasemap method)": [[348, "pyart.graph.RadarMapDisplayBasemap.plot_point"]], "plot_ppi() (pyart.graph.radarmapdisplaybasemap method)": [[349, "pyart.graph.RadarMapDisplayBasemap.plot_ppi"]], "plot_ppi_map() (pyart.graph.radarmapdisplaybasemap method)": [[350, "pyart.graph.RadarMapDisplayBasemap.plot_ppi_map"]], "plot_range_ring() (pyart.graph.radarmapdisplaybasemap method)": [[351, "pyart.graph.RadarMapDisplayBasemap.plot_range_ring"]], "plot_range_rings() (pyart.graph.radarmapdisplaybasemap method)": [[352, "pyart.graph.RadarMapDisplayBasemap.plot_range_rings"]], "plot_ray() (pyart.graph.radarmapdisplaybasemap method)": [[353, "pyart.graph.RadarMapDisplayBasemap.plot_ray"]], "plot_rhi() (pyart.graph.radarmapdisplaybasemap method)": [[354, "pyart.graph.RadarMapDisplayBasemap.plot_rhi"]], "plot_vpt() (pyart.graph.radarmapdisplaybasemap method)": [[355, "pyart.graph.RadarMapDisplayBasemap.plot_vpt"]], "set_aspect_ratio() (pyart.graph.radarmapdisplaybasemap static method)": [[356, "pyart.graph.RadarMapDisplayBasemap.set_aspect_ratio"]], "set_limits() (pyart.graph.radarmapdisplaybasemap static method)": [[357, "pyart.graph.RadarMapDisplayBasemap.set_limits"]], "plot_convstrat_scheme() (in module pyart.graph)": [[358, "pyart.graph.plot_convstrat_scheme"]], "pyart.io": [[359, "module-pyart.io"]], "prepare_for_read() (in module pyart.io)": [[360, "pyart.io.prepare_for_read"]], "read() (in module pyart.io)": [[361, "pyart.io.read"]], "read_arm_sonde() (in module pyart.io)": [[362, "pyart.io.read_arm_sonde"]], "read_arm_sonde_vap() (in module pyart.io)": [[363, "pyart.io.read_arm_sonde_vap"]], "read_cfradial() (in module pyart.io)": [[364, "pyart.io.read_cfradial"]], "read_chl() (in module pyart.io)": [[365, "pyart.io.read_chl"]], "read_grid() (in module pyart.io)": [[366, "pyart.io.read_grid"]], "read_grid_mdv() (in module pyart.io)": [[367, "pyart.io.read_grid_mdv"]], "read_mdv() (in module pyart.io)": [[368, "pyart.io.read_mdv"]], "read_nexrad_archive() (in module pyart.io)": [[369, "pyart.io.read_nexrad_archive"]], "read_nexrad_cdm() (in module pyart.io)": [[370, "pyart.io.read_nexrad_cdm"]], "read_nexrad_level3() (in module pyart.io)": [[371, "pyart.io.read_nexrad_level3"]], "read_rsl() (in module pyart.io)": [[372, "pyart.io.read_rsl"]], "read_sigmet() (in module pyart.io)": [[373, "pyart.io.read_sigmet"]], "read_uf() (in module pyart.io)": [[374, "pyart.io.read_uf"]], "write_cfradial() (in module pyart.io)": [[375, "pyart.io.write_cfradial"]], "write_grid() (in module pyart.io)": [[376, "pyart.io.write_grid"]], "write_grid_geotiff() (in module pyart.io)": [[377, "pyart.io.write_grid_geotiff"]], "write_grid_mdv() (in module pyart.io)": [[378, "pyart.io.write_grid_mdv"]], "write_uf() (in module pyart.io)": [[379, "pyart.io.write_uf"]], "pyart.lazydict": [[380, "module-pyart.lazydict"]], "lazyloaddict (class in pyart.lazydict)": [[381, "pyart.lazydict.LazyLoadDict"]], "clear() (pyart.lazydict.lazyloaddict method)": [[382, "pyart.lazydict.LazyLoadDict.clear"]], "copy() (pyart.lazydict.lazyloaddict method)": [[383, "pyart.lazydict.LazyLoadDict.copy"]], "get() (pyart.lazydict.lazyloaddict method)": [[384, "pyart.lazydict.LazyLoadDict.get"]], "has_key() (pyart.lazydict.lazyloaddict method)": [[385, "pyart.lazydict.LazyLoadDict.has_key"]], "items() (pyart.lazydict.lazyloaddict method)": [[386, "pyart.lazydict.LazyLoadDict.items"]], "keys() (pyart.lazydict.lazyloaddict method)": [[387, "pyart.lazydict.LazyLoadDict.keys"]], "pop() (pyart.lazydict.lazyloaddict method)": [[388, "pyart.lazydict.LazyLoadDict.pop"]], "popitem() (pyart.lazydict.lazyloaddict method)": [[389, "pyart.lazydict.LazyLoadDict.popitem"]], "set_lazy() (pyart.lazydict.lazyloaddict method)": [[390, "pyart.lazydict.LazyLoadDict.set_lazy"]], "setdefault() (pyart.lazydict.lazyloaddict method)": [[391, "pyart.lazydict.LazyLoadDict.setdefault"]], "update() (pyart.lazydict.lazyloaddict method)": [[392, "pyart.lazydict.LazyLoadDict.update"]], "values() (pyart.lazydict.lazyloaddict method)": [[393, "pyart.lazydict.LazyLoadDict.values"]], "mutablemapping (class in pyart.lazydict)": [[394, "pyart.lazydict.MutableMapping"]], "clear() (pyart.lazydict.mutablemapping method)": [[395, "pyart.lazydict.MutableMapping.clear"]], "get() (pyart.lazydict.mutablemapping method)": [[396, "pyart.lazydict.MutableMapping.get"]], "items() (pyart.lazydict.mutablemapping method)": [[397, "pyart.lazydict.MutableMapping.items"]], "keys() (pyart.lazydict.mutablemapping method)": [[398, "pyart.lazydict.MutableMapping.keys"]], "pop() (pyart.lazydict.mutablemapping method)": [[399, "pyart.lazydict.MutableMapping.pop"]], "popitem() (pyart.lazydict.mutablemapping method)": [[400, "pyart.lazydict.MutableMapping.popitem"]], "setdefault() (pyart.lazydict.mutablemapping method)": [[401, "pyart.lazydict.MutableMapping.setdefault"]], "update() (pyart.lazydict.mutablemapping method)": [[402, "pyart.lazydict.MutableMapping.update"]], "values() (pyart.lazydict.mutablemapping method)": [[403, "pyart.lazydict.MutableMapping.values"]], "pyart.map": [[404, "module-pyart.map"]], "gatemapper (class in pyart.map)": [[405, "pyart.map.GateMapper"]], "distance_tolerance (pyart.map.gatemapper property)": [[406, "pyart.map.GateMapper.distance_tolerance"]], "mapped_radar() (pyart.map.gatemapper method)": [[407, "pyart.map.GateMapper.mapped_radar"]], "time_tolerance (pyart.map.gatemapper property)": [[408, "pyart.map.GateMapper.time_tolerance"]], "example_roi_func_constant() (in module pyart.map)": [[409, "pyart.map.example_roi_func_constant"]], "example_roi_func_dist() (in module pyart.map)": [[410, "pyart.map.example_roi_func_dist"]], "example_roi_func_dist_beam() (in module pyart.map)": [[411, "pyart.map.example_roi_func_dist_beam"]], "grid_from_radars() (in module pyart.map)": [[412, "pyart.map.grid_from_radars"]], "grid_ppi_sweeps() (in module pyart.map)": [[413, "pyart.map.grid_ppi_sweeps"]], "grid_rhi_sweeps() (in module pyart.map)": [[414, "pyart.map.grid_rhi_sweeps"]], "map_gates_to_grid() (in module pyart.map)": [[415, "pyart.map.map_gates_to_grid"]], "map_to_grid() (in module pyart.map)": [[416, "pyart.map.map_to_grid"]], "pyart.retrieve": [[417, "module-pyart.retrieve"]], "ztor() (in module pyart.retrieve)": [[418, "pyart.retrieve.ZtoR"]], "calculate_snr_from_reflectivity() (in module pyart.retrieve)": [[419, "pyart.retrieve.calculate_snr_from_reflectivity"]], "calculate_velocity_texture() (in module pyart.retrieve)": [[420, "pyart.retrieve.calculate_velocity_texture"]], "composite_reflectivity() (in module pyart.retrieve)": [[421, "pyart.retrieve.composite_reflectivity"]], "compute_cdr() (in module pyart.retrieve)": [[422, "pyart.retrieve.compute_cdr"]], "compute_l() (in module pyart.retrieve)": [[423, "pyart.retrieve.compute_l"]], "compute_noisedbz() (in module pyart.retrieve)": [[424, "pyart.retrieve.compute_noisedBZ"]], "compute_snr() (in module pyart.retrieve)": [[425, "pyart.retrieve.compute_snr"]], "conv_strat_raut() (in module pyart.retrieve)": [[426, "pyart.retrieve.conv_strat_raut"]], "conv_strat_yuter() (in module pyart.retrieve)": [[427, "pyart.retrieve.conv_strat_yuter"]], "create_cfad() (in module pyart.retrieve)": [[428, "pyart.retrieve.create_cfad"]], "dealias_spectra() (in module pyart.retrieve)": [[429, "pyart.retrieve.dealias_spectra"]], "est_rain_rate_a() (in module pyart.retrieve)": [[430, "pyart.retrieve.est_rain_rate_a"]], "est_rain_rate_hydro() (in module pyart.retrieve)": [[431, "pyart.retrieve.est_rain_rate_hydro"]], "est_rain_rate_kdp() (in module pyart.retrieve)": [[432, "pyart.retrieve.est_rain_rate_kdp"]], "est_rain_rate_z() (in module pyart.retrieve)": [[433, "pyart.retrieve.est_rain_rate_z"]], "est_rain_rate_za() (in module pyart.retrieve)": [[434, "pyart.retrieve.est_rain_rate_za"]], "est_rain_rate_zkdp() (in module pyart.retrieve)": [[435, "pyart.retrieve.est_rain_rate_zkdp"]], "est_rain_rate_zpoly() (in module pyart.retrieve)": [[436, "pyart.retrieve.est_rain_rate_zpoly"]], "feature_detection() (in module pyart.retrieve)": [[437, "pyart.retrieve.feature_detection"]], "fetch_radar_time_profile() (in module pyart.retrieve)": [[438, "pyart.retrieve.fetch_radar_time_profile"]], "get_freq_band() (in module pyart.retrieve)": [[439, "pyart.retrieve.get_freq_band"]], "grid_displacement_pc() (in module pyart.retrieve)": [[440, "pyart.retrieve.grid_displacement_pc"]], "grid_shift() (in module pyart.retrieve)": [[441, "pyart.retrieve.grid_shift"]], "hydroclass_semisupervised() (in module pyart.retrieve)": [[442, "pyart.retrieve.hydroclass_semisupervised"]], "kdp_maesaka() (in module pyart.retrieve)": [[443, "pyart.retrieve.kdp_maesaka"]], "kdp_schneebeli() (in module pyart.retrieve)": [[444, "pyart.retrieve.kdp_schneebeli"]], "kdp_vulpiani() (in module pyart.retrieve)": [[445, "pyart.retrieve.kdp_vulpiani"]], "map_profile_to_gates() (in module pyart.retrieve)": [[446, "pyart.retrieve.map_profile_to_gates"]], "quasi_vertical_profile() (in module pyart.retrieve)": [[447, "pyart.retrieve.quasi_vertical_profile"]], "spectra_moments() (in module pyart.retrieve)": [[448, "pyart.retrieve.spectra_moments"]], "steiner_conv_strat() (in module pyart.retrieve)": [[449, "pyart.retrieve.steiner_conv_strat"]], "texture_of_complex_phase() (in module pyart.retrieve)": [[450, "pyart.retrieve.texture_of_complex_phase"]], "vad_browning() (in module pyart.retrieve)": [[451, "pyart.retrieve.vad_browning"]], "vad_michelson() (in module pyart.retrieve)": [[452, "pyart.retrieve.vad_michelson"]], "pyart.testing": [[453, "module-pyart.testing"]], "grid (class in pyart.testing)": [[454, "pyart.testing.Grid"]], "add_field() (pyart.testing.grid method)": [[455, "pyart.testing.Grid.add_field"]], "get_point_longitude_latitude() (pyart.testing.grid method)": [[456, "pyart.testing.Grid.get_point_longitude_latitude"]], "get_projparams() (pyart.testing.grid method)": [[457, "pyart.testing.Grid.get_projparams"]], "init_point_altitude() (pyart.testing.grid method)": [[458, "pyart.testing.Grid.init_point_altitude"]], "init_point_longitude_latitude() (pyart.testing.grid method)": [[459, "pyart.testing.Grid.init_point_longitude_latitude"]], "init_point_x_y_z() (pyart.testing.grid method)": [[460, "pyart.testing.Grid.init_point_x_y_z"]], "projection_proj (pyart.testing.grid property)": [[461, "pyart.testing.Grid.projection_proj"]], "to_xarray() (pyart.testing.grid method)": [[462, "pyart.testing.Grid.to_xarray"]], "write() (pyart.testing.grid method)": [[463, "pyart.testing.Grid.write"]], "intemporarydirectory (class in pyart.testing)": [[464, "pyart.testing.InTemporaryDirectory"]], "cleanup() (pyart.testing.intemporarydirectory method)": [[465, "pyart.testing.InTemporaryDirectory.cleanup"]], "radar (class in pyart.testing)": [[466, "pyart.testing.Radar"]], "add_field() (pyart.testing.radar method)": [[467, "pyart.testing.Radar.add_field"]], "add_field_like() (pyart.testing.radar method)": [[468, "pyart.testing.Radar.add_field_like"]], "add_filter() (pyart.testing.radar method)": [[469, "pyart.testing.Radar.add_filter"]], "check_field_exists() (pyart.testing.radar method)": [[470, "pyart.testing.Radar.check_field_exists"]], "extract_sweeps() (pyart.testing.radar method)": [[471, "pyart.testing.Radar.extract_sweeps"]], "get_azimuth() (pyart.testing.radar method)": [[472, "pyart.testing.Radar.get_azimuth"]], "get_elevation() (pyart.testing.radar method)": [[473, "pyart.testing.Radar.get_elevation"]], "get_end() (pyart.testing.radar method)": [[474, "pyart.testing.Radar.get_end"]], "get_field() (pyart.testing.radar method)": [[475, "pyart.testing.Radar.get_field"]], "get_gate_area() (pyart.testing.radar method)": [[476, "pyart.testing.Radar.get_gate_area"]], "get_gate_lat_lon_alt() (pyart.testing.radar method)": [[477, "pyart.testing.Radar.get_gate_lat_lon_alt"]], "get_gate_x_y_z() (pyart.testing.radar method)": [[478, "pyart.testing.Radar.get_gate_x_y_z"]], "get_nyquist_vel() (pyart.testing.radar method)": [[479, "pyart.testing.Radar.get_nyquist_vel"]], "get_slice() (pyart.testing.radar method)": [[480, "pyart.testing.Radar.get_slice"]], "get_start() (pyart.testing.radar method)": [[481, "pyart.testing.Radar.get_start"]], "get_start_end() (pyart.testing.radar method)": [[482, "pyart.testing.Radar.get_start_end"]], "info() (pyart.testing.radar method)": [[483, "pyart.testing.Radar.info"]], "init_gate_altitude() (pyart.testing.radar method)": [[484, "pyart.testing.Radar.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radar method)": [[485, "pyart.testing.Radar.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radar method)": [[486, "pyart.testing.Radar.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radar method)": [[487, "pyart.testing.Radar.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radar method)": [[488, "pyart.testing.Radar.iter_azimuth"]], "iter_elevation() (pyart.testing.radar method)": [[489, "pyart.testing.Radar.iter_elevation"]], "iter_end() (pyart.testing.radar method)": [[490, "pyart.testing.Radar.iter_end"]], "iter_field() (pyart.testing.radar method)": [[491, "pyart.testing.Radar.iter_field"]], "iter_slice() (pyart.testing.radar method)": [[492, "pyart.testing.Radar.iter_slice"]], "iter_start() (pyart.testing.radar method)": [[493, "pyart.testing.Radar.iter_start"]], "iter_start_end() (pyart.testing.radar method)": [[494, "pyart.testing.Radar.iter_start_end"]], "radarspectra (class in pyart.testing)": [[495, "pyart.testing.RadarSpectra"]], "altitude (pyart.testing.radarspectra property)": [[496, "pyart.testing.RadarSpectra.altitude"]], "azimuth (pyart.testing.radarspectra property)": [[497, "pyart.testing.RadarSpectra.azimuth"]], "check_field_exists() (pyart.testing.radarspectra method)": [[498, "pyart.testing.RadarSpectra.check_field_exists"]], "elevation (pyart.testing.radarspectra property)": [[499, "pyart.testing.RadarSpectra.elevation"]], "fields (pyart.testing.radarspectra property)": [[500, "pyart.testing.RadarSpectra.fields"]], "fixed_angle (pyart.testing.radarspectra property)": [[501, "pyart.testing.RadarSpectra.fixed_angle"]], "gate_altitude (pyart.testing.radarspectra property)": [[502, "pyart.testing.RadarSpectra.gate_altitude"]], "gate_latitude (pyart.testing.radarspectra property)": [[503, "pyart.testing.RadarSpectra.gate_latitude"]], "gate_longitude (pyart.testing.radarspectra property)": [[504, "pyart.testing.RadarSpectra.gate_longitude"]], "gate_x (pyart.testing.radarspectra property)": [[505, "pyart.testing.RadarSpectra.gate_x"]], "gate_y (pyart.testing.radarspectra property)": [[506, "pyart.testing.RadarSpectra.gate_y"]], "gate_z (pyart.testing.radarspectra property)": [[507, "pyart.testing.RadarSpectra.gate_z"]], "get_end() (pyart.testing.radarspectra method)": [[508, "pyart.testing.RadarSpectra.get_end"]], "get_slice() (pyart.testing.radarspectra method)": [[509, "pyart.testing.RadarSpectra.get_slice"]], "get_start() (pyart.testing.radarspectra method)": [[510, "pyart.testing.RadarSpectra.get_start"]], "get_start_end() (pyart.testing.radarspectra method)": [[511, "pyart.testing.RadarSpectra.get_start_end"]], "init_gate_altitude() (pyart.testing.radarspectra method)": [[512, "pyart.testing.RadarSpectra.init_gate_altitude"]], "init_gate_longitude_latitude() (pyart.testing.radarspectra method)": [[513, "pyart.testing.RadarSpectra.init_gate_longitude_latitude"]], "init_gate_x_y_z() (pyart.testing.radarspectra method)": [[514, "pyart.testing.RadarSpectra.init_gate_x_y_z"]], "init_rays_per_sweep() (pyart.testing.radarspectra method)": [[515, "pyart.testing.RadarSpectra.init_rays_per_sweep"]], "iter_azimuth() (pyart.testing.radarspectra method)": [[516, "pyart.testing.RadarSpectra.iter_azimuth"]], "iter_elevation() (pyart.testing.radarspectra method)": [[517, "pyart.testing.RadarSpectra.iter_elevation"]], "iter_end() (pyart.testing.radarspectra method)": [[518, "pyart.testing.RadarSpectra.iter_end"]], "iter_field() (pyart.testing.radarspectra method)": [[519, "pyart.testing.RadarSpectra.iter_field"]], "iter_slice() (pyart.testing.radarspectra method)": [[520, "pyart.testing.RadarSpectra.iter_slice"]], "iter_start() (pyart.testing.radarspectra method)": [[521, "pyart.testing.RadarSpectra.iter_start"]], "iter_start_end() (pyart.testing.radarspectra method)": [[522, "pyart.testing.RadarSpectra.iter_start_end"]], "latitude (pyart.testing.radarspectra property)": [[523, "pyart.testing.RadarSpectra.latitude"]], "longitude (pyart.testing.radarspectra property)": [[524, "pyart.testing.RadarSpectra.longitude"]], "ngates (pyart.testing.radarspectra property)": [[525, "pyart.testing.RadarSpectra.ngates"]], "npulses_max (pyart.testing.radarspectra property)": [[526, "pyart.testing.RadarSpectra.npulses_max"]], "nrays (pyart.testing.radarspectra property)": [[527, "pyart.testing.RadarSpectra.nrays"]], "nsweeps (pyart.testing.radarspectra property)": [[528, "pyart.testing.RadarSpectra.nsweeps"]], "projection (pyart.testing.radarspectra property)": [[529, "pyart.testing.RadarSpectra.projection"]], "range (pyart.testing.radarspectra property)": [[530, "pyart.testing.RadarSpectra.range"]], "rays_per_sweep (pyart.testing.radarspectra property)": [[531, "pyart.testing.RadarSpectra.rays_per_sweep"]], "scan_type (pyart.testing.radarspectra property)": [[532, "pyart.testing.RadarSpectra.scan_type"]], "sweep_end_ray_index (pyart.testing.radarspectra property)": [[533, "pyart.testing.RadarSpectra.sweep_end_ray_index"]], "sweep_mode (pyart.testing.radarspectra property)": [[534, "pyart.testing.RadarSpectra.sweep_mode"]], "sweep_number (pyart.testing.radarspectra property)": [[535, "pyart.testing.RadarSpectra.sweep_number"]], "sweep_start_ray_index (pyart.testing.radarspectra property)": [[536, "pyart.testing.RadarSpectra.sweep_start_ray_index"]], "time (pyart.testing.radarspectra property)": [[537, "pyart.testing.RadarSpectra.time"]], "to_vpt() (pyart.testing.radarspectra method)": [[538, "pyart.testing.RadarSpectra.to_vpt"]], "velocity_bins (pyart.testing.radarspectra property)": [[539, "pyart.testing.RadarSpectra.velocity_bins"]], "get_metadata() (in module pyart.testing)": [[540, "pyart.testing.get_metadata"]], "get_test_data() (in module pyart.testing)": [[541, "pyart.testing.get_test_data"]], "make_empty_grid() (in module pyart.testing)": [[542, "pyart.testing.make_empty_grid"]], "make_empty_ppi_radar() (in module pyart.testing)": [[543, "pyart.testing.make_empty_ppi_radar"]], "make_empty_rhi_radar() (in module pyart.testing)": [[544, "pyart.testing.make_empty_rhi_radar"]], "make_empty_spectra_radar() (in module pyart.testing)": [[545, "pyart.testing.make_empty_spectra_radar"]], "make_gaussian_storm_grid() (in module pyart.testing)": [[546, "pyart.testing.make_gaussian_storm_grid"]], "make_normal_storm() (in module pyart.testing)": [[547, "pyart.testing.make_normal_storm"]], "make_single_ray_radar() (in module pyart.testing)": [[548, "pyart.testing.make_single_ray_radar"]], "make_storm_grid() (in module pyart.testing)": [[549, "pyart.testing.make_storm_grid"]], "make_target_grid() (in module pyart.testing)": [[550, "pyart.testing.make_target_grid"]], "make_target_radar() (in module pyart.testing)": [[551, "pyart.testing.make_target_radar"]], "make_target_rhi_radar() (in module pyart.testing)": [[552, "pyart.testing.make_target_rhi_radar"]], "make_target_spectra_radar() (in module pyart.testing)": [[553, "pyart.testing.make_target_spectra_radar"]], "make_velocity_aliased_radar() (in module pyart.testing)": [[554, "pyart.testing.make_velocity_aliased_radar"]], "make_velocity_aliased_rhi_radar() (in module pyart.testing)": [[555, "pyart.testing.make_velocity_aliased_rhi_radar"]], "pyart.util": [[556, "module-pyart.util"]], "angular_mean() (in module pyart.util)": [[557, "pyart.util.angular_mean"]], "angular_mean_deg() (in module pyart.util)": [[558, "pyart.util.angular_mean_deg"]], "angular_std() (in module pyart.util)": [[559, "pyart.util.angular_std"]], "angular_std_deg() (in module pyart.util)": [[560, "pyart.util.angular_std_deg"]], "angular_texture_2d() (in module pyart.util)": [[561, "pyart.util.angular_texture_2d"]], "column_vertical_profile() (in module pyart.util)": [[562, "pyart.util.column_vertical_profile"]], "cross_section_ppi() (in module pyart.util)": [[563, "pyart.util.cross_section_ppi"]], "cross_section_rhi() (in module pyart.util)": [[564, "pyart.util.cross_section_rhi"]], "datetime_from_dataset() (in module pyart.util)": [[565, "pyart.util.datetime_from_dataset"]], "datetime_from_grid() (in module pyart.util)": [[566, "pyart.util.datetime_from_grid"]], "datetime_from_radar() (in module pyart.util)": [[567, "pyart.util.datetime_from_radar"]], "datetimes_from_dataset() (in module pyart.util)": [[568, "pyart.util.datetimes_from_dataset"]], "datetimes_from_radar() (in module pyart.util)": [[569, "pyart.util.datetimes_from_radar"]], "determine_sweeps() (in module pyart.util)": [[570, "pyart.util.determine_sweeps"]], "estimate_noise_hs74() (in module pyart.util)": [[571, "pyart.util.estimate_noise_hs74"]], "for_azimuth() (in module pyart.util)": [[572, "pyart.util.for_azimuth"]], "get_column_rays() (in module pyart.util)": [[573, "pyart.util.get_column_rays"]], "get_field_location() (in module pyart.util)": [[574, "pyart.util.get_field_location"]], "image_mute_radar() (in module pyart.util)": [[575, "pyart.util.image_mute_radar"]], "interval_mean() (in module pyart.util)": [[576, "pyart.util.interval_mean"]], "interval_std() (in module pyart.util)": [[577, "pyart.util.interval_std"]], "is_vpt() (in module pyart.util)": [[578, "pyart.util.is_vpt"]], "join_radar() (in module pyart.util)": [[579, "pyart.util.join_radar"]], "mean_of_two_angles() (in module pyart.util)": [[580, "pyart.util.mean_of_two_angles"]], "mean_of_two_angles_deg() (in module pyart.util)": [[581, "pyart.util.mean_of_two_angles_deg"]], "rolling_window() (in module pyart.util)": [[582, "pyart.util.rolling_window"]], "simulated_vel_from_profile() (in module pyart.util)": [[583, "pyart.util.simulated_vel_from_profile"]], "sphere_distance() (in module pyart.util)": [[584, "pyart.util.sphere_distance"]], "subset_radar() (in module pyart.util)": [[585, "pyart.util.subset_radar"]], "texture() (in module pyart.util)": [[586, "pyart.util.texture"]], "texture_along_ray() (in module pyart.util)": [[587, "pyart.util.texture_along_ray"]], "to_vpt() (in module pyart.util)": [[588, "pyart.util.to_vpt"]]}})